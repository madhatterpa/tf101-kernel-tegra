
;; Function vfp_propagate_nan (vfp_propagate_nan)[0:154]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: vdd+0
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg:SI 0 r0 [ vdd ])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])


Basic block 3:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])


Basic block 4:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])


Basic block 5:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])


Basic block 6:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])


Basic block 7:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])


Basic block 8:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])


Basic block 9:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])


Basic block 10:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])


Basic block 11:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])


Basic block 12:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])


Basic block 13:
IN:
Stack adjustment: 36
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])

OUT:
Stack adjustment: 36
Reg 1: nan+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: nan
    offset 0
      (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])


Basic block 14:
IN:
Stack adjustment: 36
Reg 1: nan+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: nan
    offset 0
      (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: nan+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: nan
    offset 0
      (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])


Basic block 15:
IN:
Stack adjustment: 36
Reg 1: nan+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: nan
    offset 0
      (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 36
Reg 1: nan+0
Reg 2: vdm+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: nan
    offset 0
      (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])


Basic block 16:
IN:
Stack adjustment: 36
Reg 1: nan+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: nan
    offset 0
      (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])

OUT:
Stack adjustment: 36
Reg 1: nan+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: nan
    offset 0
      (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])


Basic block 17:
IN:
Stack adjustment: 36
Reg 1: nan+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: nan
    offset 0
      (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])

OUT:
Stack adjustment: 36
Reg 4: tm+0
Reg 5: vdd+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:138 tn ] [138])
  name: tm
    offset 0
      (reg/v:SI 4 r4 [orig:137 tm ] [137])


18 basic blocks, 26 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [28.0%]  (fallthru) 5 [72.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7] 12 [ip] 24 [cc]
;; live  kill	 0 [r0]

Successors:  4 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	

Successors:  7 [100.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  2 [72.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip] 24 [cc]
;; live  kill	

Successors:  7 [50.0%]  6 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 24 [cc]
;; live  kill	 0 [r0]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 5 [50.0%]  3 [50.0%]  4 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

Successors:  13 [15.0%]  8 [85.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 8500, maybe hot.
Predecessors:  7 [85.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	

Successors:  9 [28.0%]  (fallthru) 11 [72.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 2380, maybe hot.
Predecessors:  8 [28.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 0 [r0]

Successors:  10 [50.0%]  (fallthru) 13 [50.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 1190, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

Successors:  13 [100.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 6120, maybe hot.
Predecessors:  8 [72.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

Successors:  13 [50.0%]  12 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 3060, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	 0 [r0]

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 11 [50.0%]  7 [15.0%]  9 [50.0%]  10 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

Successors:  14 [50.0%]  (fallthru) 17 [50.0%] 
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  16 [28.0%]  15 [72.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  14 [72.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

Successors:  16 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  14 [28.0%]  15 [100.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9]
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 17 , prev 16, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 13 [50.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 1 , prev 17, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  17 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_propagate_nan

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,10u} r1={4d,13u,3d} r2={3d,9u,2d} r3={5d,5u} r4={9d,11u} r5={2d,6u} r6={4d,7u} r7={4d,7u} r8={4d,3u} r9={4d,5u} r10={3d,4u} r11={3d,4u} r12={7d,9u} r13={2d,18u} r14={1d,2u} r24={17d,24u} 
;;    total ref usage 225{83d,137u,5e} in 73{73 regular + 0 call} insns.
(note 1 0 302 NOTE_INSN_DELETED)

(note 302 1 303 2 ( vdd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ vdd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 303 302 304 2 ( vdn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ vdn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 304 303 305 2 ( vdm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ vdm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 305 304 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 305 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 6 11 2 NOTE_INSN_DELETED)

(note 11 10 12 2 NOTE_INSN_DELETED)

(note 12 11 285 2 NOTE_INSN_DELETED)

(insn/f:TI 285 12 286 2 arch/arm/vfp/vfpdouble.c:209 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 5 r5)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -36 [0xffffffffffffffdc])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 5 r5))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 6 r6))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 7 r7))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 16 [0x10])) [0 S4 A32])
                        (reg:SI 8 r8))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 20 [0x14])) [0 S4 A32])
                        (reg:SI 9 r9))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 24 [0x18])) [0 S4 A32])
                        (reg:SI 10 sl))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 28 [0x1c])) [0 S4 A32])
                        (reg:SI 11 fp))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 32 [0x20])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 286 285 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 286 9 2 arch/arm/vfp/vfpdouble.c:209 (set (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
        (reg:SI 0 r0 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vdd ])
        (nil)))

(insn:TI 9 2 306 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 0 r0 [orig:135 D.5287 ] [135])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 306 9 260 2 ( vdd (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 260 306 14 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 12 ip [149])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 14 260 15 2 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:135 D.5287 ] [135])
            (reg:SI 12 ip [149]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 15 14 16 2 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  5 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7] 12 [ip] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  2 [28.0%]  (fallthru)
(note 16 15 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 18 16 19 3 NOTE_INSN_DELETED)

(note 19 18 17 3 NOTE_INSN_DELETED)

(insn:TI 17 19 20 3 arch/arm/vfp/vfp.h:331 (set (reg:DI 6 r6 [orig:136 D.5286 ] [136])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 20 17 23 3 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 6 r6 [orig:136 D.5286 ] [136])
                        (reg:SI 7 r7 [ D.5286+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil)))

(insn:TI 23 20 307 3 arch/arm/vfp/vfp.h:332 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:138 tn ] [138])
            (const_int 8 [0x8]))) 2345 {neon_vornv2di+78} (nil))

(note 307 23 21 3 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:138 tn ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 21 307 27 3 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 7 [r7] 12 [ip] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 27 21 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 30 27 31 4 NOTE_INSN_DELETED)

(note 31 30 32 4 NOTE_INSN_DELETED)

(note 32 31 278 4 NOTE_INSN_DELETED)

(insn:TI 278 32 277 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 11 fp [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 277 278 280 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 10 sl [152])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 280 277 279 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 7 r7 [ D.5286+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 279 280 281 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 8 r8 [151])
        (and:SI (reg:SI 6 r6 [orig:136 D.5286 ] [136])
            (reg:SI 10 sl [152]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 281 279 282 4 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 282 281 283 4 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:138 tn ] [138])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 283 282 298 4 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:138 tn ] [138])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 298 283 299 4 (set (pc)
        (label_ref 65)) -1 (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 299 298 308)

(note 308 299 43 5 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 43 308 44 5 2 "" [1 uses])

(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 45 44 48 5 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:135 D.5287 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:135 D.5287 ] [135])
        (nil)))

(insn:TI 48 45 309 5 arch/arm/vfp/vfp.h:329 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:138 tn ] [138])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 309 48 46 5 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:138 tn ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 46 309 52 5 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 65)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  7 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  5 [50.0%]  (fallthru)
(note 52 46 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 55 52 53 6 NOTE_INSN_DELETED)

(insn:TI 53 55 310 6 arch/arm/vfp/vfp.h:338 (set (reg:SI 12 ip [orig:154 <variable>.significand ] [154])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
        (nil)))

(note 310 53 54 6 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 54 310 56 6 arch/arm/vfp/vfp.h:338 (set (reg:SI 0 r0 [orig:155 <variable>.significand+4 ] [155])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:143 vdn ] [143])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn:TI 56 54 232 6 arch/arm/vfp/vfp.h:338 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 12 ip [orig:154 <variable>.significand ] [154])
                        (reg:SI 0 r0 [orig:155 <variable>.significand+4 ] [155]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 12 ip [orig:154 <variable>.significand ] [154])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:155 <variable>.significand+4 ] [155])
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil)))))

(insn:TI 232 56 311 6 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 12 ip [orig:138 tn ] [138])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

(note 311 232 65 7 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:138 tn ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 6 5 3 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [50.0%] 
;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%] 
(code_label 65 311 66 7 4 "" [3 uses])

(note 66 65 67 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 67 66 70 7 arch/arm/vfp/vfpdouble.c:215 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 70 67 312 7 arch/arm/vfp/vfpdouble.c:211 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
            (reg/v/f:SI 2 r2 [orig:144 vdm ] [144]))) 2345 {neon_vornv2di+78} (nil))

(note 312 70 68 7 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:137 tm ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 68 312 74 7 arch/arm/vfp/vfpdouble.c:215 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 131)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 7 -> ( 13 8)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [15.0%] 
;; Succ edge  8 [85.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  7 [85.0%]  (fallthru)
(note 74 68 76 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 76 74 77 8 NOTE_INSN_DELETED)

(note 77 76 78 8 NOTE_INSN_DELETED)

(note 78 77 75 8 NOTE_INSN_DELETED)

(insn:TI 75 78 79 8 arch/arm/vfp/vfp.h:330 (set (reg:SI 0 r0 [orig:133 D.5293 ] [133])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 79 75 313 8 arch/arm/vfp/vfp.h:330 (set (reg:SI 4 r4 [159])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(note 313 79 80 8 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 80 313 81 8 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:133 D.5293 ] [133])
            (reg:SI 4 r4 [159]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 81 80 82 8 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  9 [28.0%]  (fallthru)
;; Succ edge  11 [72.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  8 [28.0%]  (fallthru)
(note 82 81 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 84 82 85 9 NOTE_INSN_DELETED)

(note 85 84 83 9 NOTE_INSN_DELETED)

(insn:TI 83 85 86 9 arch/arm/vfp/vfp.h:331 (set (reg:DI 6 r6 [orig:134 D.5292 ] [134])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 86 83 89 9 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 6 r6 [orig:134 D.5292 ] [134])
                        (reg:SI 7 r7 [ D.5292+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil)))

(insn:TI 89 86 314 9 arch/arm/vfp/vfp.h:332 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
            (const_int 8 [0x8]))) 2345 {neon_vornv2di+78} (nil))

(note 314 89 87 9 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:137 tm ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 87 314 93 9 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 131)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 93 87 96 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 96 93 97 10 NOTE_INSN_DELETED)

(note 97 96 98 10 NOTE_INSN_DELETED)

(note 98 97 270 10 NOTE_INSN_DELETED)

(insn:TI 270 98 269 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 11 fp [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 269 270 272 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 10 sl [162])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 272 269 271 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 7 r7 [ D.5292+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 271 272 273 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 8 r8 [161])
        (and:SI (reg:SI 6 r6 [orig:134 D.5292 ] [134])
            (reg:SI 10 sl [162]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 273 271 274 10 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 274 273 275 10 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 275 274 300 10 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 300 275 301 10 (set (pc)
        (label_ref 131)) -1 (nil))
;; End of basic block 10 -> ( 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [100.0%] 

(barrier 301 300 315)

(note 315 301 109 11 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  8 [72.0%] 
(code_label 109 315 110 11 10 "" [1 uses])

(note 110 109 111 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 111 110 114 11 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:133 D.5293 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:133 D.5293 ] [133])
        (nil)))

(insn:TI 114 111 316 11 arch/arm/vfp/vfp.h:329 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 316 114 112 11 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:137 tm ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 112 316 118 11 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 131)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 13 12)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  11 [50.0%]  (fallthru)
(note 118 112 121 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 121 118 119 12 NOTE_INSN_DELETED)

(insn:TI 119 121 317 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 4 r4 [orig:164 <variable>.significand ] [164])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
        (nil)))

(note 317 119 120 12 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 120 317 122 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 0 r0 [orig:165 <variable>.significand+4 ] [165])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn:TI 122 120 236 12 arch/arm/vfp/vfp.h:338 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:164 <variable>.significand ] [164])
                        (reg:SI 0 r0 [orig:165 <variable>.significand+4 ] [165]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:164 <variable>.significand ] [164])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:165 <variable>.significand+4 ] [165])
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil)))))

(insn:TI 236 122 318 12 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 4 r4 [orig:137 tm ] [137])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [100.0%]  (fallthru)

(note 318 236 131 13 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:137 tm ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 12 11 7 9 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  11 [50.0%] 
;; Pred edge  7 [15.0%] 
;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%] 
(code_label 131 318 132 13 9 "" [4 uses])

(note 132 131 133 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 133 132 134 13 NOTE_INSN_DELETED)

(insn:TI 134 133 137 13 arch/arm/vfp/vfpdouble.c:218 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:145 fpscr ] [145])
                (const_int 1 [0x1])
                (const_int 25 [0x19]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:145 fpscr ] [145])
        (nil)))

(insn:TI 137 134 319 13 arch/arm/vfp/vfpdouble.c:222 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))) 2345 {neon_vornv2di+78} (nil))

(note 319 137 320 13 ( vdn (nil)) NOTE_INSN_VAR_LOCATION)

(note 320 319 135 13 ( nan (expr_list:REG_DEP_TRUE (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 135 320 142 13 arch/arm/vfp/vfpdouble.c:218 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 170)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 17)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  17 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 142 135 143 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 143 142 144 14 arch/arm/vfp/vfpdouble.c:229 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 12 ip [orig:138 tn ] [138])
            (const_int 48 [0x30]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 144 143 145 14 arch/arm/vfp/vfpdouble.c:229 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  16 [28.0%] 
;; Succ edge  15 [72.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  14 [72.0%]  (fallthru)
(note 145 144 146 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 146 145 147 15 NOTE_INSN_DELETED)

(note 147 146 149 15 NOTE_INSN_DELETED)

(note 149 147 150 15 NOTE_INSN_DELETED)

(note 150 149 152 15 NOTE_INSN_DELETED)

(note 152 150 153 15 NOTE_INSN_DELETED)

(note 153 152 266 15 NOTE_INSN_DELETED)

(insn:TI 266 153 321 15 arch/arm/vfp/vfpdouble.c:229 discrim 2 (parallel [
            (set (reg:SI 3 r3 [174])
                (ne:SI (reg/v:SI 4 r4 [orig:137 tm ] [137])
                    (const_int 48 [0x30])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(note 321 266 267 15 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 267 321 268 15 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 12 ip [orig:138 tn ] [138])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 268 267 155 15 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:SI 3 r3 [174])
        (if_then_else:SI (eq:SI (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 3 r3 [174])
            (const_int 0 [0x0]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn:TI 155 268 158 15 arch/arm/vfp/vfpdouble.c:229 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [174])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [174])
        (nil)))

(insn:TI 158 155 322 15 arch/arm/vfp/vfpdouble.c:229 discrim 2 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
            (reg/v/f:SI 2 r2 [orig:144 vdm ] [144]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:144 vdm ] [144])
            (nil))))
;; End of basic block 15 -> ( 16)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  16 [100.0%]  (fallthru)

(note 322 158 164 16 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  14 [28.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 164 322 165 16 18 "" [1 uses])

(note 165 164 166 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:TI 166 165 262 16 arch/arm/vfp/vfpdouble.c:236 (set (reg:DI 8 r8 [orig:175 <variable>.significand ] [175])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUIV (mem/s/j:DI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (nil)))

(insn 262 166 263 16 arch/arm/vfp/vfpdouble.c:236 (set (reg:SI 6 r6 [176])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 263 262 264 16 arch/arm/vfp/vfpdouble.c:236 (set (reg:SI 7 r7 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 264 263 323 16 arch/arm/vfp/vfpdouble.c:236 (set (reg:SI 2 r2 [177])
        (ior:SI (reg:SI 8 r8 [orig:175 <variable>.significand ] [175])
            (reg:SI 6 r6 [176]))) 89 {*arm_iorsi3} (nil))

(note 323 264 265 16 ( vdm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 265 323 324 16 arch/arm/vfp/vfpdouble.c:236 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (reg:SI 9 r9 [ <variable>.significand+4 ])
            (reg:SI 7 r7 [+4 ]))) 89 {*arm_iorsi3} (nil))

(note 324 265 169 16 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 169 324 325 16 arch/arm/vfp/vfpdouble.c:236 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 2 r2 [177])) 163 {*arm_movdi} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  17 [100.0%]  (fallthru)

(note 325 169 326 17 ( vdm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ vdm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 326 325 170 17 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 16 13) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 5 [r5] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  13 [50.0%] 
(code_label 170 326 171 17 16 "" [1 uses])

(note 171 170 176 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 176 171 177 17 NOTE_INSN_DELETED)

(note 177 176 179 17 NOTE_INSN_DELETED)

(note 179 177 180 17 NOTE_INSN_DELETED)

(note 180 179 182 17 NOTE_INSN_DELETED)

(note 182 180 183 17 NOTE_INSN_DELETED)

(note 183 182 184 17 NOTE_INSN_DELETED)

(note 184 183 238 17 NOTE_INSN_DELETED)

(note 238 184 174 17 NOTE_INSN_DELETED)

(insn:TI 174 238 329 17 arch/arm/vfp/vfpdouble.c:239 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139]) [0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                        (const_int 8 [0x8])) [0 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/v/f:SI 1 r1 [orig:139 nan ] [139])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 188 {*ldmsi4} (nil))

(note 329 174 328 17 ( nan (nil)) NOTE_INSN_VAR_LOCATION)

(note 328 329 327 17 ( vdm (nil)) NOTE_INSN_VAR_LOCATION)

(note 327 328 185 17 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 185 327 175 17 arch/arm/vfp/vfpdouble.c:244 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg/v:SI 4 r4 [orig:137 tm ] [137])
                    (const_int 48 [0x30]))
                (eq:SI (reg/v:SI 12 ip [orig:138 tn ] [138])
                    (const_int 48 [0x30])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:138 tn ] [138])
        (nil)))

(insn:TI 175 185 200 17 arch/arm/vfp/vfpdouble.c:239 (parallel [
            (set (mem/s:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:142 vdd ] [142])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(insn:TI 200 175 206 17 arch/arm/vfp/vfpdouble.c:245 (set (reg/i:SI 0 r0)
        (if_then_else:SI (ne (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (const_int 1 [0x1])
            (const_int 256 [0x100]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (nil)))

(insn 206 200 287 17 arch/arm/vfp/vfpdouble.c:245 (use (reg/i:SI 0 r0)) -1 (nil))

(note 287 206 288 17 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 288 287 289 17 arch/arm/vfp/vfpdouble.c:245 (return) 260 {return} (nil))
;; End of basic block 17 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 289 288 259)

(note 259 289 261 NOTE_INSN_DELETED)

(note 261 259 0 NOTE_INSN_DELETED)


;; Function vfp_double_multiply (vfp_double_multiply)[0:173]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: vdd+0
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg:SI 0 r0 [ vdd ])
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])

OUT:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 12: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])


Basic block 3:
IN:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 12: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

OUT:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 12: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])


Basic block 4:
IN:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 12: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

OUT:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 12: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])


Basic block 5:
IN:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 12: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

OUT:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 12: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])


Basic block 6:
IN:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 12: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

OUT:
Stack adjustment: 48


Basic block 7:
IN:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 12: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

OUT:
Stack adjustment: 48
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])


Basic block 8:
IN:
Stack adjustment: 48
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

OUT:
Stack adjustment: 48
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])


Basic block 9:
IN:
Stack adjustment: 48
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

OUT:
Stack adjustment: 48
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])


Basic block 10:
IN:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Reg 12: vdd+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

OUT:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])


Basic block 11:
IN:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

OUT:
Stack adjustment: 48
Reg 1: vdn+0
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])


Basic block 12:
IN:
Stack adjustment: 48
Reg 1: vdn+0
Reg 2: vdm+0
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
  name: vdm
    offset 0
      (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])

OUT:
Stack adjustment: 48
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rmb+0
Reg 3: rmb+4
Reg 10: rl+0
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:137 rma.253 ] [137])
    offset 4
      (reg:SI 1 r1 [ rma.253+4 ])
  name: rmb
    offset 0
      (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    offset 4
      (reg:SI 3 r3 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:143 rl ] [143])


Basic block 13:
IN:
Stack adjustment: 48
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rmb+0
Reg 3: rmb+4
Reg 10: rl+0
Reg 12: vdd+0
Variables:
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:143 rl ] [143])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:137 rma.253 ] [137])
    offset 4
      (reg:SI 1 r1 [ rma.253+4 ])
  name: rmb
    offset 0
      (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    offset 4
      (reg:SI 3 r3 [ rmb+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

OUT:
Stack adjustment: 48
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rmb+0
Reg 3: rmb+4
Reg 10: rl+0
Reg 12: vdd+0
Variables:
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:137 rma.253 ] [137])
    offset 4
      (reg:SI 1 r1 [ rma.253+4 ])
  name: rmb
    offset 0
      (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    offset 4
      (reg:SI 3 r3 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:143 rl ] [143])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])


Basic block 14:
IN:
Stack adjustment: 48
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rmb+0
Reg 3: rmb+4
Reg 10: rl+0
Reg 12: vdd+0
Variables:
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:137 rma.253 ] [137])
    offset 4
      (reg:SI 1 r1 [ rma.253+4 ])
  name: rmb
    offset 0
      (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    offset 4
      (reg:SI 3 r3 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:143 rl ] [143])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

OUT:
Stack adjustment: 48
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rmb+0
Reg 3: rmb+4
Reg 4: rma+0
Reg 10: rl+0
Reg 12: vdd+0
Variables:
  name: rma
    offset 0
      (reg:SI 4 r4 [orig:137 rma.253 ] [137])
      (reg:SI 0 r0 [orig:137 rma.253 ] [137])
    offset 4
      (reg:SI 1 r1 [ rma.253+4 ])
  name: rmb
    offset 0
      (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    offset 4
      (reg:SI 3 r3 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:143 rl ] [143])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])


Basic block 15:
IN:
Stack adjustment: 48
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rmb+0
Reg 3: rmb+4
Reg 4: rma+0
Reg 10: rl+0
Reg 12: vdd+0
Variables:
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:137 rma.253 ] [137])
      (reg:SI 4 r4 [orig:137 rma.253 ] [137])
    offset 4
      (reg:SI 1 r1 [ rma.253+4 ])
  name: rmb
    offset 0
      (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    offset 4
      (reg:SI 3 r3 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:143 rl ] [143])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

OUT:
Stack adjustment: 48
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rmb+0
Reg 3: rmb+4
Reg 4: rma+0
Reg 10: rl+0
Reg 12: vdd+0
Variables:
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:137 rma.253 ] [137])
      (reg:SI 4 r4 [orig:137 rma.253 ] [137])
    offset 4
      (reg:SI 1 r1 [ rma.253+4 ])
  name: rmb
    offset 0
      (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    offset 4
      (reg:SI 3 r3 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:143 rl ] [143])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])


Basic block 16:
IN:
Stack adjustment: 48
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rmb+0
Reg 3: rmb+4
Reg 4: rma+0
Reg 10: rl+0
Reg 12: vdd+0
Variables:
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:143 rl ] [143])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:137 rma.253 ] [137])
      (reg:SI 4 r4 [orig:137 rma.253 ] [137])
    offset 4
      (reg:SI 1 r1 [ rma.253+4 ])
  name: rmb
    offset 0
      (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    offset 4
      (reg:SI 3 r3 [ rmb+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

OUT:
Stack adjustment: 48
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rmb+0
Reg 3: rmb+4
Reg 4: rma+0
Reg 10: rl+0
Reg 12: vdd+0
Variables:
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:137 rma.253 ] [137])
      (reg:SI 4 r4 [orig:137 rma.253 ] [137])
    offset 4
      (reg:SI 1 r1 [ rma.253+4 ])
  name: rmb
    offset 0
      (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    offset 4
      (reg:SI 3 r3 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:143 rl ] [143])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])


Basic block 17:
IN:
Stack adjustment: 48
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rmb+0
Reg 3: rmb+4
Reg 4: rma+0
Reg 10: rl+0
Reg 12: vdd+0
Variables:
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:137 rma.253 ] [137])
      (reg:SI 4 r4 [orig:137 rma.253 ] [137])
    offset 4
      (reg:SI 1 r1 [ rma.253+4 ])
  name: rmb
    offset 0
      (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    offset 4
      (reg:SI 3 r3 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:143 rl ] [143])
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])

OUT:
Stack adjustment: 48
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])


Basic block 18:
IN:
Stack adjustment: 48
Reg 1: vdn+0
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])

OUT:
Stack adjustment: 48
Reg 1: vdn+0
Reg 12: vdd+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
  name: vdn
    offset 0
      (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])


19 basic blocks, 27 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [28.0%]  (fallthru) 10 [72.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	 0 [r0]

Successors:  6 [20.7%]  4 [79.3%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2220, maybe hot.
Predecessors:  3 [79.3%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	

Successors:  5 [28.0%]  (fallthru) 7 [72.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 622, maybe hot.
Predecessors:  4 [28.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 4 [r4]

Successors:  6 [39.0%]  (fallthru) 7 [61.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 822, maybe hot.
Predecessors:  3 [20.7%]  5 [39.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1978, maybe hot.
Predecessors:  4 [72.0%]  5 [61.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 1 [r1]

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 989, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

Successors:  18 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 989, maybe hot.
Predecessors:  7 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

Successors:  18 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  2 [72.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 24 [cc]
;; live  kill	

Successors:  11 [39.0%]  (fallthru) 12 [61.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2808, maybe hot.
Predecessors:  10 [39.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

Successors:  18 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 4392, maybe hot.
Predecessors:  10 [61.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

Successors:  16 [50.0%]  13 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 2196, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  15 [71.0%]  14 [29.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 637, maybe hot.
Predecessors:  13 [29.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  16 [50.0%]  15 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 2196, maybe hot.
Predecessors:  14 [50.0%]  (fallthru) 13 [71.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

Successors:  17 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 1878, should be 2196

Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 2196, maybe hot.
Predecessors:  12 [50.0%]  14 [50.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 2515, should be 2196

Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 4392, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 15 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 5 [r5]

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 18 , prev 17, next 1, loop_depth 0, count 0, freq 9178, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 9 [100.0%]  8 [100.0%]  11 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 1 , prev 18, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (ab,sibcall) 18 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_multiply

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={18d,23u} r1={9d,18u} r2={11d,28u} r3={16d,21u} r4={16d,19u} r5={10d,12u} r6={5d,6u} r7={5d,5u} r8={6d,9u} r9={5d,6u} r10={5d,12u} r11={4d,5u} r12={2d,12u} r13={2d,22u} r14={1d,3u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={16d,20u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 462{241d,221u,0e} in 118{117 regular + 1 call} insns.
(note 1 0 352 NOTE_INSN_DELETED)

(note 352 1 353 2 ( vdd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ vdd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 353 352 354 2 ( vdn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ vdn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 354 353 355 2 ( vdm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ vdm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 355 354 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 355 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 26 2 NOTE_INSN_FUNCTION_BEG)

(note 26 6 27 2 NOTE_INSN_DELETED)

(note 27 26 328 2 NOTE_INSN_DELETED)

(insn/f:TI 328 27 358 2 arch/arm/vfp/vfpdouble.c:792 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 5 r5)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -48 [0xffffffffffffffd0])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 0 r0))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 1 r1))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 8 [0x8])) [0 S4 A32])
                            (reg:SI 2 r2))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 12 [0xc])) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 16 [0x10])) [0 S4 A32])
                            (reg:SI 5 r5))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 20 [0x14])) [0 S4 A32])
                            (reg:SI 6 r6))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 24 [0x18])) [0 S4 A32])
                            (reg:SI 7 r7))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 28 [0x1c])) [0 S4 A32])
                            (reg:SI 8 r8))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 32 [0x20])) [0 S4 A32])
                            (reg:SI 9 r9))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 36 [0x24])) [0 S4 A32])
                            (reg:SI 10 sl))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 40 [0x28])) [0 S4 A32])
                            (reg:SI 11 fp))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 44 [0x2c])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 358 328 357 2 ( vdd (nil)) NOTE_INSN_VAR_LOCATION)

(note 357 358 356 2 ( vdn (nil)) NOTE_INSN_VAR_LOCATION)

(note 356 357 329 2 ( vdm (nil)) NOTE_INSN_VAR_LOCATION)

(note 329 356 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 329 359 2 arch/arm/vfp/vfpdouble.c:792 (set (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (reg:SI 0 r0 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vdd ])
        (nil)))

(note 359 2 9 2 ( vdd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ vdd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 359 360 2 arch/arm/vfp/vfpdouble.c:801 (set (reg:SI 4 r4 [orig:159 <variable>.exponent ] [159])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(note 360 9 275 2 ( vdn (expr_list:REG_DEP_TRUE (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 275 360 10 2 arch/arm/vfp/vfpdouble.c:813 (set (reg:SI 5 r5 [169])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 10 275 362 2 arch/arm/vfp/vfpdouble.c:801 (set (reg:SI 0 r0 [orig:160 <variable>.exponent ] [160])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(note 362 10 361 2 ( vdd (expr_list:REG_DEP_TRUE (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 361 362 11 2 ( vdm (expr_list:REG_DEP_TRUE (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 11 361 14 2 arch/arm/vfp/vfpdouble.c:801 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:159 <variable>.exponent ] [159])
            (reg:SI 0 r0 [orig:160 <variable>.exponent ] [160]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:159 <variable>.exponent ] [159])
        (nil)))

(insn:TI 14 11 15 2 arch/arm/vfp/vfpdouble.c:801 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 0 r0 [orig:133 vdn.258 ] [133])
            (reg/v/f:SI 1 r1 [orig:156 vdn ] [156]))) 2345 {neon_vornv2di+78} (nil))

(insn 15 14 16 2 arch/arm/vfp/vfpdouble.c:803 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
            (reg/v/f:SI 2 r2 [orig:157 vdm ] [157]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 16 15 21 2 arch/arm/vfp/vfpdouble.c:804 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
            (reg/v/f:SI 0 r0 [orig:133 vdn.258 ] [133]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/v/f:SI 0 r0 [orig:133 vdn.258 ] [133])
            (nil))))

(insn:TI 21 16 19 2 arch/arm/vfp/vfpdouble.c:808 (set (reg:SI 0 r0 [orig:164 <variable>.sign ] [164])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 19 21 23 2 arch/arm/vfp/vfpdouble.c:808 (set (reg:SI 4 r4 [orig:162 <variable>.sign ] [162])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 23 19 24 2 arch/arm/vfp/vfpdouble.c:808 (set (reg:SI 0 r0 [165])
        (xor:SI (reg:SI 4 r4 [orig:162 <variable>.sign ] [162])
            (reg:SI 0 r0 [orig:164 <variable>.sign ] [164]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:162 <variable>.sign ] [162])
        (nil)))

(insn 24 23 25 2 arch/arm/vfp/vfpdouble.c:808 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (reg:HI 0 r0 [165])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 0 r0 [165])
        (nil)))

(insn:TI 25 24 28 2 arch/arm/vfp/vfpdouble.c:813 (set (reg:SI 0 r0 [orig:142 temp.244 ] [142])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 28 25 30 2 arch/arm/vfp/vfpdouble.c:813 (set (reg:SI 4 r4 [orig:168 temp.244 ] [168])
        (sign_extend:SI (reg:HI 0 r0 [orig:142 temp.244 ] [142]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 30 28 31 2 arch/arm/vfp/vfpdouble.c:813 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:168 temp.244 ] [168])
            (reg:SI 5 r5 [169]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [169])
        (nil)))

(jump_insn:TI 31 30 32 2 arch/arm/vfp/vfpdouble.c:813 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 10)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  2 [28.0%]  (fallthru)
(note 32 31 35 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 35 32 33 3 NOTE_INSN_DELETED)

(insn:TI 33 35 34 3 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 5 r5 [orig:170 <variable>.significand ] [170])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 34 33 36 3 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 0 r0 [orig:171 <variable>.significand+4 ] [171])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 36 34 37 3 arch/arm/vfp/vfpdouble.c:814 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 5 r5 [orig:170 <variable>.significand ] [170])
                        (reg:SI 0 r0 [orig:171 <variable>.significand+4 ] [171]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:171 <variable>.significand+4 ] [171])
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil))))

(jump_insn:TI 37 36 38 3 arch/arm/vfp/vfpdouble.c:814 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2071 [0x817])
            (nil))))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  6 [20.7%] 
;; Succ edge  4 [79.3%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  3 [79.3%]  (fallthru)
(note 38 37 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 39 38 42 4 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (reg:SI 0 r0 [orig:141 temp.245 ] [141])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 42 39 44 4 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (reg:SI 5 r5 [orig:174 temp.245 ] [174])
        (sign_extend:SI (reg:HI 0 r0 [orig:141 temp.245 ] [141]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 44 42 45 4 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [orig:174 temp.245 ] [174])
            (reg:SI 4 r4 [orig:168 temp.244 ] [168]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [orig:174 temp.245 ] [174])
        (expr_list:REG_DEAD (reg:SI 4 r4 [orig:168 temp.244 ] [168])
            (nil))))

(jump_insn:TI 45 44 46 4 arch/arm/vfp/vfpdouble.c:814 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 4 [r4]

;; Pred edge  4 [28.0%]  (fallthru)
(note 46 45 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 49 46 47 5 NOTE_INSN_DELETED)

(insn:TI 47 49 48 5 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 5 r5 [orig:176 <variable>.significand ] [176])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 48 47 50 5 arch/arm/vfp/vfpdouble.c:814 (set (reg:SI 4 r4 [orig:177 <variable>.significand+4 ] [177])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 50 48 51 5 arch/arm/vfp/vfpdouble.c:814 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 5 r5 [orig:176 <variable>.significand ] [176])
                        (reg:SI 4 r4 [orig:177 <variable>.significand+4 ] [177]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 4 r4))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:177 <variable>.significand+4 ] [177])
        (nil)))

(jump_insn:TI 51 50 52 5 arch/arm/vfp/vfpdouble.c:814 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  6 [39.0%]  (fallthru)
;; Succ edge  7 [61.0%] 

;; Start of basic block ( 3 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [20.7%] 
;; Pred edge  5 [39.0%]  (fallthru)
(code_label 52 51 53 6 28 "" [1 uses])

(note 53 52 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 54 53 333 6 arch/arm/vfp/vfpdouble.c:815 (set (reg:SI 0 r0)
        (reg/v/f:SI 12 ip [orig:155 vdd ] [155])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (nil)))

(note 333 54 334 6 NOTE_INSN_EPILOGUE_BEG)

(insn 334 333 58 6 arch/arm/vfp/vfpdouble.c:845 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 58 334 366 6 arch/arm/vfp/vfpdouble.c:815 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 366 58 365 6 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 365 366 364 6 ( vdm (nil)) NOTE_INSN_VAR_LOCATION)

(note 364 365 363 6 ( vdn (nil)) NOTE_INSN_VAR_LOCATION)

(note 363 364 59 6 ( vdd (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 59 363 367)

(note 367 59 368 7 ( vdd (expr_list:REG_DEP_TRUE (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 368 367 369 7 ( vdn (expr_list:REG_DEP_TRUE (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 369 368 370 7 ( vdm (expr_list:REG_DEP_TRUE (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 370 369 61 7 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  4 [72.0%] 
;; Pred edge  5 [61.0%] 
(code_label 61 370 62 7 29 "" [2 uses])

(note 62 61 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 65 62 68 7 NOTE_INSN_DELETED)

(note 68 65 69 7 NOTE_INSN_DELETED)

(note 69 68 66 7 NOTE_INSN_DELETED)

(insn:TI 66 69 64 7 arch/arm/vfp/vfpdouble.c:816 (set (reg:DI 4 r4 [orig:181 <variable>.significand ] [181])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (nil)))

(insn 64 66 325 7 arch/arm/vfp/vfpdouble.c:816 (set (reg:SI 0 r0 [orig:179 temp.245 ] [179])
        (sign_extend:SI (reg:HI 0 r0 [orig:141 temp.245 ] [141]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 325 64 371 7 arch/arm/vfp/vfpdouble.c:816 (set (reg:SI 2 r2 [180])
        (ior:SI (reg:SI 4 r4 [orig:181 <variable>.significand ] [181])
            (reg:SI 0 r0 [orig:179 temp.245 ] [179]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:181 <variable>.significand ] [181])
        (nil)))

(note 371 325 326 7 ( vdm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 326 371 372 7 arch/arm/vfp/vfpdouble.c:816 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (ashiftrt:SI (reg:SI 0 r0 [orig:179 temp.245 ] [179])
                (const_int 31 [0x1f]))
            (reg:SI 5 r5 [ <variable>.significand+4 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:179 temp.245 ] [179])
        (nil)))

(note 372 326 70 7 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 70 372 373 7 arch/arm/vfp/vfpdouble.c:816 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [180])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [180])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(note 373 70 71 7 ( vdn (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 71 373 72 7 arch/arm/vfp/vfpdouble.c:816 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 73 72 78 8 arch/arm/vfp/vfpdouble.c:817 (set (reg/f:SI 3 r3 [183])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 78 73 76 8 arch/arm/vfp/vfpdouble.c:818 (set (reg:SI 4 r4 [orig:153 D.4793 ] [153])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:TI 76 78 77 8 arch/arm/vfp/vfpdouble.c:817 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/c:SI (reg/f:SI 3 r3 [183]) [0 vfp_double_default_qnan+0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s/c:SI (plus:SI (reg/f:SI 3 r3 [183])
                        (const_int 4 [0x4])) [0 vfp_double_default_qnan+4 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s/c:SI (plus:SI (reg/f:SI 3 r3 [183])
                        (const_int 8 [0x8])) [0 vfp_double_default_qnan+8 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s/c:SI (plus:SI (reg/f:SI 3 r3 [183])
                        (const_int 12 [0xc])) [0 vfp_double_default_qnan+12 S4 A32]))
        ]) 188 {*ldmsi4} (nil))

(insn:TI 77 76 344 8 arch/arm/vfp/vfpdouble.c:817 (parallel [
            (set (mem/s:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_DEAD (reg:SI 2 r2)
                (expr_list:REG_DEAD (reg:SI 1 r1)
                    (expr_list:REG_DEAD (reg:SI 0 r0)
                        (nil)))))))

(jump_insn 344 77 345 8 arch/arm/vfp/vfpdouble.c:818 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 8 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 345 344 81)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4]
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 81 345 82 9 30 "" [1 uses])

(note 82 81 83 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 83 82 323 9 arch/arm/vfp/vfpdouble.c:820 (set (reg:SI 3 r3 [187])
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -63489 [0xffffffffffff07ff])
        (nil)))

(insn 323 83 85 9 arch/arm/vfp/vfpdouble.c:821 (set (reg:SI 2 r2 [188])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 85 323 88 9 arch/arm/vfp/vfpdouble.c:820 (set (mem/s/j:HI (reg/v/f:SI 12 ip [orig:155 vdd ] [155]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 3 r3 [187])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [187])
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 88 85 324 9 arch/arm/vfp/vfpdouble.c:822 (set (reg:SI 4 r4 [orig:153 D.4793 ] [153])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 324 88 87 9 arch/arm/vfp/vfpdouble.c:821 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 87 324 346 9 arch/arm/vfp/vfpdouble.c:821 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 2 r2 [188])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 346 87 347 9 arch/arm/vfp/vfpdouble.c:822 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 9 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 347 346 374)

(note 374 347 375 10 ( vdn (expr_list:REG_DEP_TRUE (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 375 374 376 10 ( vdm (expr_list:REG_DEP_TRUE (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 376 375 91 10 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 91 376 92 10 27 "" [1 uses])

(note 92 91 96 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 96 92 99 10 NOTE_INSN_DELETED)

(note 99 96 100 10 NOTE_INSN_DELETED)

(note 100 99 93 10 NOTE_INSN_DELETED)

(insn:TI 93 100 377 10 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 3 r3 [orig:140 temp.247 ] [140])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 377 93 97 10 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 97 377 95 10 arch/arm/vfp/vfpdouble.c:829 (set (reg:DI 6 r6 [orig:192 <variable>.significand ] [192])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 95 97 321 10 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 8 r8 [orig:190 temp.247 ] [190])
        (sign_extend:SI (reg:HI 3 r3 [orig:140 temp.247 ] [140]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 321 95 322 10 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 4 r4 [191])
        (ior:SI (reg:SI 6 r6 [orig:192 <variable>.significand ] [192])
            (reg:SI 8 r8 [orig:190 temp.247 ] [190]))) 89 {*arm_iorsi3} (nil))

(insn:TI 322 321 101 10 arch/arm/vfp/vfpdouble.c:829 (set (reg:SI 5 r5 [+4 ])
        (ior:SI (ashiftrt:SI (reg:SI 8 r8 [orig:190 temp.247 ] [190])
                (const_int 31 [0x1f]))
            (reg:SI 7 r7 [ <variable>.significand+4 ]))) 270 {*arith_shiftsi} (nil))

(insn:TI 101 322 102 10 arch/arm/vfp/vfpdouble.c:829 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [191])
                        (reg:SI 5 r5 [+4 ]))
                    (const_int 0 [0x0])))
            (set (reg:SI 4 r4 [193])
                (ior:SI (reg:SI 4 r4 [191])
                    (reg:SI 5 r5 [+4 ])))
        ]) 91 {*iorsi3_compare0} (nil))

(jump_insn:TI 102 101 103 10 arch/arm/vfp/vfpdouble.c:829 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  10 [39.0%]  (fallthru)
(note 103 102 319 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 319 103 378 11 arch/arm/vfp/vfpdouble.c:831 (set (reg:SI 2 r2 [196])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 378 319 320 11 ( vdm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 320 378 106 11 arch/arm/vfp/vfpdouble.c:831 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 106 320 108 11 arch/arm/vfp/vfpdouble.c:830 (set (mem/s/j:HI (reg/v/f:SI 12 ip [orig:155 vdd ] [155]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 4 r4 [193])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 108 106 348 11 arch/arm/vfp/vfpdouble.c:831 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 2 r2 [196])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(jump_insn 348 108 349 11 arch/arm/vfp/vfpdouble.c:832 (set (pc)
        (label_ref 216)) -1 (nil))
;; End of basic block 11 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%] 

(barrier 349 348 379)

(note 379 349 112 12 ( vdm (expr_list:REG_DEP_TRUE (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  10 [61.0%] 
(code_label 112 379 113 12 32 "" [1 uses])

(note 113 112 141 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 141 113 116 12 NOTE_INSN_DELETED)

(insn:TI 116 141 271 12 arch/arm/vfp/vfpdouble.c:840 (set (reg:SI 3 r3 [199])
        (plus:SI (reg:SI 0 r0 [orig:142 temp.244 ] [142])
            (reg:SI 3 r3 [orig:140 temp.247 ] [140]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:142 temp.244 ] [142])
        (nil)))

(insn:TI 271 116 272 12 arch/arm/vfp/vfpdouble.c:840 (set (reg:SI 3 r3 [201])
        (plus:SI (reg:SI 3 r3 [199])
            (const_int -1020 [0xfffffffffffffc04]))) 4 {*arm_addsi3} (nil))

(insn:TI 272 271 120 12 arch/arm/vfp/vfpdouble.c:840 (set (reg:SI 3 r3 [201])
        (plus:SI (reg:SI 3 r3 [201])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 120 272 249 12 arch/arm/vfp/vfpdouble.c:840 (set (mem/s/j:HI (reg/v/f:SI 12 ip [orig:155 vdd ] [155]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 3 r3 [201])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [201])
        (nil)))

(insn:TI 249 120 246 12 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 4 r4 [orig:228 temp.252+4 ] [228])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 246 249 247 12 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 10 sl [orig:229 temp.251 ] [229])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn:TI 247 246 248 12 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 0 r0 [orig:230 temp.251+4 ] [230])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
        (nil)))

(insn:TI 248 247 380 12 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 1 r1 [orig:227 temp.252 ] [227])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:157 vdm ] [157])
        (nil)))

(note 380 248 152 12 ( vdn (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 152 380 381 12 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 2 r2 [orig:144 rmb ] [144])
        (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:228 temp.252+4 ] [228]))
            (zero_extend:DI (reg:SI 10 sl [orig:229 temp.251 ] [229])))) 51 {*umulsidi3_v6} (nil))

(note 381 152 382 12 ( vdm (nil)) NOTE_INSN_VAR_LOCATION)

(note 382 381 160 12 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 160 382 316 12 arch/arm/vfp/vfp.h:89 (set (reg:DI 6 r6)
        (mult:DI (zero_extend:DI (reg:SI 4 r4 [orig:228 temp.252+4 ] [228]))
            (zero_extend:DI (reg:SI 0 r0 [orig:230 temp.251+4 ] [230])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:228 temp.252+4 ] [228])
        (nil)))

(insn:TI 316 160 383 12 arch/arm/vfp/vfp.h:87 (set (reg:SI 5 r5 [+4 ])
        (reg:SI 3 r3 [ rmb+4 ])) 167 {*arm_movsi_insn} (nil))

(note 383 316 315 12 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [orig:144 rmb ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 315 383 130 12 arch/arm/vfp/vfp.h:87 (set (reg:SI 4 r4)
        (reg:SI 2 r2 [orig:144 rmb ] [144])) 167 {*arm_movsi_insn} (nil))

(insn:TI 130 315 384 12 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 10 sl [orig:143 rl ] [143])
        (mult:DI (zero_extend:DI (reg:SI 1 r1 [orig:227 temp.252 ] [227]))
            (zero_extend:DI (reg:SI 10 sl [orig:229 temp.251 ] [229])))) 51 {*umulsidi3_v6} (nil))

(note 384 130 156 12 ( rl (expr_list:REG_DEP_TRUE (reg/v:DI 10 sl [orig:143 rl ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 156 384 277 12 arch/arm/vfp/vfp.h:87 (set (reg:DI 4 r4)
        (plus:DI (mult:DI (zero_extend:DI (reg:SI 0 r0 [orig:230 temp.251+4 ] [230]))
                (zero_extend:DI (reg:SI 1 r1 [orig:227 temp.252 ] [227])))
            (reg:DI 4 r4))) 53 {*umulsidi3adddi_v6} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:227 temp.252 ] [227])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:230 temp.251+4 ] [230])
            (nil))))

(insn:TI 277 156 164 12 arch/arm/vfp/vfp.h:89 (set (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-8 S8 A64])
        (reg:DI 6 r6)) 163 {*arm_movdi} (nil))

(insn:TI 164 277 385 12 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ rmb+4 ])
            (reg:SI 5 r5 [orig:1 rma.253+4 ] [1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [orig:1 rma.253+4 ] [1])
        (expr_list:REG_DEAD (reg:SI 3 r3 [ rmb+4 ])
            (nil))))

(note 385 164 317 12 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn 317 385 386 12 arch/arm/vfp/vfp.h:87 (set (reg:SI 0 r0 [orig:137 rma.253 ] [137])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (nil))

(note 386 317 318 12 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [orig:137 rma.253 ] [137])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 5 r5 [orig:1 rma.253+4 ] [1])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn:TI 318 386 388 12 arch/arm/vfp/vfp.h:87 (set (reg:SI 1 r1 [ rma.253+4 ])
        (reg:SI 5 r5 [+4 ])) 167 {*arm_movsi_insn} (nil))

(note 388 318 387 12 ( rma (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:137 rma.253 ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 387 388 165 12 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 165 387 230 12 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 12 -> ( 16 13)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  16 [50.0%] 
;; Succ edge  13 [50.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 230 165 167 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 167 230 231 13 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 245)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  15 [71.0%] 
;; Succ edge  14 [29.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [29.0%]  (fallthru)
(note 231 167 168 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 168 231 169 14 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:144 rmb ] [144])
            (reg:SI 4 r4 [orig:137 rma.253 ] [137]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:137 rma.253 ] [137])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:144 rmb ] [144])
            (nil))))

(jump_insn:TI 169 168 245 14 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  16 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
;; Pred edge  13 [71.0%] 
(code_label 245 169 175 15 40 "" [1 uses])

(note 175 245 313 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:TI 313 175 314 15 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 6 r6 [orig:148 iftmp.83 ] [148])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 314 313 350 15 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 7 r7 [ iftmp.83+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 350 314 351 15 (set (pc)
        (label_ref 182)) -1 (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  17 [100.0%] 

(barrier 351 350 179)

;; Start of basic block ( 12 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  12 [50.0%] 
;; Pred edge  14 [50.0%] 
(code_label 179 351 180 16 33 "" [2 uses])

(note 180 179 311 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:TI 311 180 312 16 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 6 r6 [orig:148 iftmp.83 ] [148])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 312 311 182 16 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 7 r7 [ iftmp.83+4 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 5 [r5]

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%] 
(code_label 182 312 183 17 35 "" [1 uses])

(note 183 182 207 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 207 183 208 17 NOTE_INSN_DELETED)

(note 208 207 185 17 NOTE_INSN_DELETED)

(insn:TI 185 208 389 17 arch/arm/vfp/vfp.h:92 (set (reg:SI 2 r2 [orig:135 rma.255 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 389 185 390 17 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [orig:135 rma.255 ] [135])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ rma.253+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(note 390 389 184 17 ( rmb (nil)) NOTE_INSN_VAR_LOCATION)

(insn 184 390 391 17 arch/arm/vfp/vfp.h:92 (set (reg:SI 3 r3 [ rma.255+4 ])
        (reg:SI 0 r0 [orig:137 rma.253 ] [137])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:137 rma.253 ] [137])
        (nil)))

(note 391 184 392 17 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [orig:137 rma.253 ] [137])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ rma.255+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(note 392 391 307 17 ( rmb (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 307 392 393 17 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:134 rl.256 ] [134])
                        (reg:SI 10 sl [orig:143 rl ] [143]))
                    (reg:SI 2 r2 [orig:134 rl.256 ] [134])))
            (set (reg:SI 0 r0 [orig:134 rl.256 ] [134])
                (plus:SI (reg:SI 2 r2 [orig:134 rl.256 ] [134])
                    (reg:SI 10 sl [orig:143 rl ] [143])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 10 sl [orig:143 rl ] [143])
        (nil)))

(note 393 307 187 17 ( rl (nil)) NOTE_INSN_VAR_LOCATION)

(insn 187 393 394 17 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 4 r4 [orig:220 rma.255 ] [220])
        (reg:SI 1 r1 [ rma.253+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ rma.253+4 ])
        (nil)))

(note 394 187 308 17 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 4 r4 [orig:220 rma.255 ] [220])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ rma.253+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn:TI 308 394 396 17 arch/arm/vfp/vfp.h:93 (set (reg:SI 1 r1 [ rl.256+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [orig:1 rl.256+4 ] [1])
                (reg:SI 11 fp [ rl+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [ rl+4 ])
            (nil))))

(note 396 308 395 17 ( rl (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:134 rl.256 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 395 396 281 17 ( rl (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [orig:134 rl.256 ] [134])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 11 fp [ rl+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 281 395 303 17 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 10 sl [orig:147 D.5348 ] [147])
        (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-8 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 303 281 304 17 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 8 r8 [221])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 304 303 309 17 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 309 304 215 17 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl [orig:147 D.5348 ] [147])
                        (reg:SI 4 r4 [orig:220 rma.255 ] [220]))
                    (reg:SI 10 sl [orig:147 D.5348 ] [147])))
            (set (reg:SI 10 sl [orig:147 D.5348 ] [147])
                (plus:SI (reg:SI 10 sl [orig:147 D.5348 ] [147])
                    (reg:SI 4 r4 [orig:220 rma.255 ] [220])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:220 rma.255 ] [220])
        (nil)))

(insn 215 309 397 17 arch/arm/vfp/vfpdouble.c:844 (set (reg:SI 4 r4 [orig:153 D.4793 ] [153])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 397 215 310 17 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 310 397 191 17 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 11 fp [ D.5348+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [ D.5348+4 ])
                (reg:SI 2 r2 [orig:5 rma.255+4 ] [5])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:5 rma.255+4 ] [5])
            (nil))))

(insn 191 310 297 17 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ rma.255+4 ])
            (reg:SI 1 r1 [ rl.256+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ rma.255+4 ])
        (nil)))

(insn:TI 297 191 298 17 arch/arm/vfp/vfp.h:90 discrim 3 (cond_exec (gtu (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 8 r8 [221])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(insn 298 297 291 17 arch/arm/vfp/vfp.h:90 discrim 3 (cond_exec (gtu (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 9 r9 [+4 ])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn:TI 291 298 293 17 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl [222])
                        (reg:SI 8 r8 [221]))
                    (reg:SI 10 sl [222])))
            (set (reg:SI 2 r2 [222])
                (plus:SI (reg:SI 10 sl [222])
                    (reg:SI 8 r8 [221])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 8 r8 [221])
        (nil)))

(insn 293 291 292 17 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 8 r8 [223])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 292 293 398 17 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [orig:3+4 ] [3])
                (reg:SI 9 r9 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
            (nil))))

(note 398 292 295 17 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn 295 398 296 17 arch/arm/vfp/vfpdouble.c:841 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [222])
                        (reg:SI 6 r6 [orig:148 iftmp.83 ] [148]))
                    (reg:SI 2 r2 [222])))
            (set (reg:SI 2 r2 [222])
                (plus:SI (reg:SI 2 r2 [222])
                    (reg:SI 6 r6 [orig:148 iftmp.83 ] [148])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn:TI 296 295 209 17 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [+4 ])
                (reg:SI 7 r7 [ iftmp.83+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 209 296 294 17 arch/arm/vfp/vfpdouble.c:841 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0 [orig:134 rl.256 ] [134])
                        (reg:SI 1 r1 [ rl.256+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 5 r5))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 1 r1 [ rl.256+4 ])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:134 rl.256 ] [134])
            (expr_list:REG_UNUSED (reg:SI 5 r5)
                (nil)))))

(insn:TI 294 209 287 17 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 287 294 288 17 arch/arm/vfp/vfpdouble.c:841 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 8 r8 [223])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 288 287 285 17 arch/arm/vfp/vfpdouble.c:841 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 9 r9 [+4 ])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 285 288 399 17 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 0 r0 [225])
        (ior:SI (reg:SI 2 r2 [222])
            (reg:SI 8 r8 [223]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [222])
        (nil)))

(note 399 285 286 17 ( rl (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 286 399 400 17 arch/arm/vfp/vfpdouble.c:841 (set (reg:SI 1 r1 [+4 ])
        (ior:SI (reg:SI 3 r3 [+4 ])
            (reg:SI 9 r9 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(note 400 286 214 17 ( rl (nil)) NOTE_INSN_VAR_LOCATION)

(insn 214 400 401 17 arch/arm/vfp/vfpdouble.c:841 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 0 r0 [225])) 163 {*arm_movdi} (expr_list:REG_DEAD (reg/v/f:SI 12 ip [orig:155 vdd ] [155])
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  18 [100.0%]  (fallthru)

(note 401 214 216 18 ( vdn (expr_list:REG_DEP_TRUE (reg/v/f:SI 1 r1 [orig:156 vdn ] [156])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 17 9 8 11) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 216 401 217 18 31 "" [3 uses])

(note 217 216 222 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 222 217 228 18 arch/arm/vfp/vfpdouble.c:845 (set (reg/i:SI 0 r0)
        (reg:SI 4 r4 [orig:153 D.4793 ] [153])) 167 {*arm_movsi_insn} (nil))

(insn 228 222 330 18 arch/arm/vfp/vfpdouble.c:845 (use (reg/i:SI 0 r0)) -1 (nil))

(note 330 228 331 18 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 331 330 332 18 arch/arm/vfp/vfpdouble.c:845 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 332 331 274)

(note 274 332 276 NOTE_INSN_DELETED)

(note 276 274 0 NOTE_INSN_DELETED)


;; Function vfp_double_cpdo (vfp_double_cpdo)[0:184]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: inst+0
Reg 1: fpscr+0
Variables:
  name: inst
    offset 0
      (reg:SI 0 r0 [ inst ])
  name: fpscr
    offset 0
      (reg:SI 1 r1 [ fpscr ])

OUT:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 7: fop+0
Reg 9: fpscr+0
Reg 11: vecstride+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])


Basic block 3:
IN:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 7: fop+0
Reg 9: fpscr+0
Reg 11: vecstride+0
Variables:
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])

OUT:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 7: fop+0
Reg 9: fpscr+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])


Basic block 4:
IN:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 7: fop+0
Reg 9: fpscr+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])

OUT:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 7: fop+0
Reg 9: fpscr+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])


Basic block 5:
IN:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 7: fop+0
Reg 9: fpscr+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])

OUT:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 7: fop+0
Reg 9: fpscr+0
Reg 10: exceptions+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: exceptions
    offset 0
      (reg/v:SI 10 sl [orig:144 exceptions ] [144])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])


Basic block 6:
IN:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 7: fop+0
Reg 9: fpscr+0
Reg 10: exceptions+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: exceptions
    offset 0
      (reg/v:SI 10 sl [orig:144 exceptions ] [144])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])

OUT:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 6: dn+0
Reg 7: fop+0
Reg 8: vecitr+0
Reg 9: fpscr+0
Reg 10: exceptions+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: vecitr
    offset 0
      (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: exceptions
    offset 0
      (reg/v:SI 10 sl [orig:144 exceptions ] [144])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])
  name: dn
    offset 0
      (reg/v:SI 6 r6 [orig:142 dn ] [142])


Basic block 7:
IN:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 6: dn+0
Reg 7: fop+0
Reg 8: vecitr+0
Reg 9: fpscr+0
Reg 10: exceptions+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: vecitr
    offset 0
      (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: exceptions
    offset 0
      (reg/v:SI 10 sl [orig:144 exceptions ] [144])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])
  name: dn
    offset 0
      (reg/v:SI 6 r6 [orig:142 dn ] [142])

OUT:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 6: dn+0
Reg 7: fop+0
Reg 8: vecitr+0
Reg 9: fpscr+0
Reg 10: exceptions+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: vecitr
    offset 0
      (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: exceptions
    offset 0
      (reg/v:SI 10 sl [orig:144 exceptions ] [144])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])
  name: dn
    offset 0
      (reg/v:SI 6 r6 [orig:142 dn ] [142])


Basic block 8:
IN:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 6: dn+0
Reg 7: fop+0
Reg 8: vecitr+0
Reg 9: fpscr+0
Reg 10: exceptions+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: vecitr
    offset 0
      (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: exceptions
    offset 0
      (reg/v:SI 10 sl [orig:144 exceptions ] [144])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])
  name: dn
    offset 0
      (reg/v:SI 6 r6 [orig:142 dn ] [142])

OUT:
Stack adjustment: 56
Reg 4: dm+0
Reg 5: dest+0
Reg 6: dn+0
Reg 7: fop+0
Reg 8: vecitr+0
Reg 9: fpscr+0
Reg 10: exceptions+0
Reg 11: vecstride+0
Reg 12: veclen+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 4 r4 [orig:141 dm ] [141])
  name: vecitr
    offset 0
      (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
  name: veclen
    offset 0
      (reg/v:SI 12 ip [orig:139 veclen ] [139])
  name: vecstride
    offset 0
      (reg/v:SI 11 fp [orig:138 vecstride ] [138])
  name: fop
    offset 0
      (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
  name: exceptions
    offset 0
      (reg/v:SI 10 sl [orig:144 exceptions ] [144])
  name: dest
    offset 0
      (reg/v:SI 5 r5 [orig:143 dest ] [143])
  name: dn
    offset 0
      (reg/v:SI 6 r6 [orig:142 dn ] [142])


9 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 12 [ip]
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 13 [sp] 24 [cc]
;; live  kill	

Successors:  4 [50.0%]  3 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 501, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip] 24 [cc]
;; live  kill	

Successors:  5 [50.0%]  4 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 752, maybe hot.
Predecessors:  2 [50.0%]  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 3 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 7 [r7] 10 [sl] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 10 [sl] 24 [cc]
;; live  kill	

Successors:  6 [89.9%]  (fallthru) 8 [10.1%] 
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  5 [89.9%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 6 [r6] 8 [r8] 10 [sl]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 6 [r6] 8 [r8] 10 [sl]
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 7 [90.1%]  (dfs_back)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 8 [r8] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 10 [sl] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

Successors:  7 [90.1%]  (dfs_back) 8 [9.9%]  (fallthru,loop_exit)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  7 [9.9%]  (fallthru,loop_exit) 5 [10.1%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 1002, maybe hot.
Predecessors:  8 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_cpdo

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,15u} r1={8d,11u} r2={8d,8u} r3={12d,14u,1d} r4={5d,11u} r5={8d,15u} r6={6d,9u} r7={7d,14u,1d} r8={3d,5u} r9={2d,4u} r10={4d,5u} r11={4d,8u} r12={4d,3u} r13={3d,17u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={10d,25u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 369{201d,166u,2e} in 79{78 regular + 1 call} insns.
(note 3 0 244 NOTE_INSN_DELETED)

(note 244 3 245 2 ( inst (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ inst ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 245 244 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 245 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 185 2 NOTE_INSN_FUNCTION_BEG)

(note 185 6 31 2 NOTE_INSN_DELETED)

(note 31 185 34 2 NOTE_INSN_DELETED)

(note 34 31 43 2 NOTE_INSN_DELETED)

(note 43 34 47 2 NOTE_INSN_DELETED)

(note 47 43 52 2 NOTE_INSN_DELETED)

(note 52 47 57 2 NOTE_INSN_DELETED)

(note 57 52 66 2 NOTE_INSN_DELETED)

(note 66 57 72 2 NOTE_INSN_DELETED)

(note 72 66 77 2 NOTE_INSN_DELETED)

(note 77 72 86 2 NOTE_INSN_DELETED)

(note 86 77 91 2 NOTE_INSN_DELETED)

(note 91 86 199 2 NOTE_INSN_DELETED)

(insn:TI 199 91 246 2 arch/arm/vfp/vfpdouble.c:1127 (set (reg/v:SI 3 r3 [orig:145 op ] [145])
        (const_int 11534400 [0xb00040])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 11534400 [0xb00040])
        (nil)))

(note 246 199 231 2 ( op (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:145 op ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn/f:TI 231 246 206 2 arch/arm/vfp/vfpdouble.c:1126 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 11 fp)
        (expr_list:REG_DEAD (reg:SI 9 r9)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -36 [0xffffffffffffffdc])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 4 r4))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 5 r5))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 6 r6))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 7 r7))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 16 [0x10])) [0 S4 A32])
                                    (reg:SI 8 r8))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 20 [0x14])) [0 S4 A32])
                                    (reg:SI 9 r9))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 24 [0x18])) [0 S4 A32])
                                    (reg:SI 10 sl))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 28 [0x1c])) [0 S4 A32])
                                    (reg:SI 11 fp))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 32 [0x20])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(insn:TI 206 231 13 2 arch/arm/vfp/vfpdouble.c:1137 (set (reg:SI 2 r2 [159])
        (const_int 11534400 [0xb00040])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 11534400 [0xb00040])
        (nil)))

(insn:TI 13 206 200 2 arch/arm/vfp/vfpdouble.c:1135 (set (reg:SI 11 fp [158])
        (and:SI (reg:SI 1 r1 [orig:156 fpscr ] [156])
            (const_int 3145728 [0x300000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:156 fpscr ] [156])
        (nil)))

(insn 200 13 227 2 arch/arm/vfp/vfpdouble.c:1127 (set (reg/v:SI 3 r3 [orig:145 op ] [145])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (reg/v:SI 3 r3 [orig:145 op ] [145]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 227 200 11 2 arch/arm/vfp/vfpdouble.c:1135 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [158])
            (const_int 3145728 [0x300000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 11 227 228 2 arch/arm/vfp/vfpdouble.c:1130 (set (reg:SI 6 r6 [orig:153 D.5133 ] [153])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 983040 [0xf0000]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 228 11 247 2 arch/arm/vfp/vfpdouble.c:1135 discrim 2 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 11 fp [orig:138 vecstride ] [138])
            (const_int 2 [0x2]))) 2345 {neon_vornv2di+78} (nil))

(note 247 228 229 2 ( vecstride (expr_list:REG_DEP_TRUE (reg/v:SI 11 fp [orig:138 vecstride ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 229 247 26 2 arch/arm/vfp/vfpdouble.c:1135 discrim 2 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 11 fp [orig:138 vecstride ] [138])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn:TI 26 229 12 2 arch/arm/vfp/vfpdouble.c:1137 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:145 op ] [145])
            (reg:SI 2 r2 [159]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [159])
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 3 r3 [orig:145 op ] [145])
                (const_int 11534400 [0xb00040]))
            (nil))))

(insn 12 26 44 2 arch/arm/vfp/vfpdouble.c:1130 (set (reg:SI 2 r2 [orig:152 D.5135 ] [152])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 44 12 42 2 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 7 r7 [170])
            (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
                (const_int 11534336 [0xb00000])))) 2295 {neon_vornv2di+28} (nil))

(insn 42 44 248 2 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [168])
            (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
                (const_int 64 [0x40])))) 2295 {neon_vornv2di+28} (nil))

(note 248 42 32 2 ( op (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 32 248 205 2 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 7 r7 [163])
            (lshiftrt:SI (reg:SI 6 r6 [orig:153 D.5133 ] [153])
                (const_int 15 [0xf])))) 2320 {neon_vornv2di+53} (nil))

(insn 205 32 45 2 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 3 r3 [161])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 16 [0x10]))))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn:TI 45 205 33 2 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 7 r7 [171])
            (lshiftrt:SI (reg:SI 7 r7 [170])
                (const_int 20 [0x14])))) 2320 {neon_vornv2di+53} (nil))

(insn 33 45 46 2 arch/arm/vfp/vfpdouble.c:1137 discrim 1 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 7 r7 [164])
            (ior:SI (lshiftrt:SI (reg:SI 2 r2 [orig:152 D.5135 ] [152])
                    (const_int 7 [0x7]))
                (reg:SI 7 r7 [163])))) 2368 {neon_vornv2di+101} (nil))

(insn:TI 46 33 204 2 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 7 r7 [172])
            (ior:SI (lshiftrt:SI (reg:SI 3 r3 [168])
                    (const_int 4 [0x4]))
                (reg:SI 7 r7 [171])))) 2368 {neon_vornv2di+101} (nil))

(insn 204 46 177 2 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/f:SI 3 r3 [167])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 272 [0x110]))))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_EQUIV (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 272 [0x110])))
            (nil))))

(insn:TI 177 204 5 2 (set (reg:SI 5 r5 [206])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 61440 [0xf000]))) 67 {*arm_andsi3_insn} (nil))

(insn 5 177 48 2 arch/arm/vfp/vfpdouble.c:1126 (set (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
        (reg:SI 1 r1 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 48 5 249 2 arch/arm/vfp/vfpdouble.c:1137 discrim 2 (set (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
        (plus:SI (mult:SI (reg:SI 7 r7 [172])
                (const_int 8 [0x8]))
            (reg/f:SI 3 r3 [167]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 3 r3 [167])
        (nil)))

(note 249 48 174 2 ( fop (expr_list:REG_DEP_TRUE (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 174 249 250 2 (set (reg:SI 1 r1 [205])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 4194304 [0x400000]))) 67 {*arm_andsi3_insn} (nil))

(note 250 174 232 2 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn/f:TI 232 250 233 2 arch/arm/vfp/vfpdouble.c:1126 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) 4 {*arm_addsi3} (nil))

(note 233 232 51 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 51 233 53 2 arch/arm/vfp/vfpdouble.c:1143 (set (reg:SI 3 r3 [orig:151 D.5156 ] [151])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137])
                (const_int 4 [0x4])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 53 51 59 2 arch/arm/vfp/vfpdouble.c:1143 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:151 D.5156 ] [151])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 59 53 68 2 arch/arm/vfp/vfpdouble.c:1144 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 5 r5 [178])
            (lshiftrt:SI (reg:SI 5 r5 [206])
                (const_int 11 [0xb])))) 2320 {neon_vornv2di+53} (nil))

(insn 68 59 60 2 arch/arm/vfp/vfpdouble.c:1146 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 5 r5 [182])
            (lshiftrt:SI (reg:SI 5 r5 [206])
                (const_int 12 [0xc])))) 2320 {neon_vornv2di+53} (nil))

(insn:TI 60 68 251 2 arch/arm/vfp/vfpdouble.c:1144 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:143 dest ] [143])
            (ior:SI (lshiftrt:SI (reg:SI 1 r1 [205])
                    (const_int 22 [0x16]))
                (reg:SI 5 r5 [178])))) 2368 {neon_vornv2di+101} (nil))

(note 251 60 69 2 ( dest (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:143 dest ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 69 251 253 2 arch/arm/vfp/vfpdouble.c:1146 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:143 dest ] [143])
            (ior:SI (lshiftrt:SI (reg:SI 1 r1 [205])
                    (const_int 18 [0x12]))
                (reg:SI 5 r5 [182])))) 2368 {neon_vornv2di+101} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [205])
            (nil))))

(note 253 69 252 2 ( dest (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:143 dest ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 252 253 183 2 ( dest (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 183 252 73 2 (set (reg:SI 1 r1 [208])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 73 183 180 2 arch/arm/vfp/vfpdouble.c:1151 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:151 D.5156 ] [151])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 180 73 254 2 (set (reg:SI 0 r0 [207])
        (and:SI (reg/v:SI 0 r0 [orig:155 inst ] [155])
            (const_int 32 [0x20]))) 67 {*arm_andsi3_insn} (nil))

(note 254 180 79 2 ( inst (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 79 254 80 2 arch/arm/vfp/vfpdouble.c:1152 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 4 r4 [187])
            (ashift:SI (reg:SI 1 r1 [208])
                (const_int 1 [0x1])))) 2320 {neon_vornv2di+53} (nil))

(insn:TI 80 79 255 2 arch/arm/vfp/vfpdouble.c:1152 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:141 dm ] [141])
            (ior:SI (lshiftrt:SI (reg:SI 0 r0 [207])
                    (const_int 5 [0x5]))
                (reg:SI 4 r4 [187])))) 2368 {neon_vornv2di+101} (nil))

(note 255 80 88 2 ( dm (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:141 dm ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 88 255 92 2 arch/arm/vfp/vfpdouble.c:1154 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:141 dm ] [141])
            (ior:SI (lshiftrt:SI (reg:SI 0 r0 [207])
                    (const_int 1 [0x1]))
                (reg:SI 1 r1 [208])))) 2368 {neon_vornv2di+101} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [208])
            (expr_list:REG_DEAD (reg:SI 0 r0 [207])
                (nil)))))

(insn:TI 92 88 93 2 arch/arm/vfp/vfpdouble.c:1160 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:151 D.5156 ] [151])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:151 D.5156 ] [151])
        (nil)))

(jump_insn:TI 93 92 94 2 arch/arm/vfp/vfpdouble.c:1160 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  4 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 9 [r9] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 94 93 95 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 95 94 96 3 NOTE_INSN_DELETED)

(insn:TI 96 95 99 3 arch/arm/vfp/vfpdouble.c:1160 discrim 2 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 5 r5 [orig:143 dest ] [143])
                        (const_int 12 [0xc]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(insn:TI 99 96 256 3 arch/arm/vfp/vfpdouble.c:1163 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:139 veclen ] [139])
            (and:SI (reg/v:SI 9 r9 [orig:156 fpscr ] [156])
                (const_int 458752 [0x70000])))) 2295 {neon_vornv2di+28} (nil))

(note 256 99 97 3 ( veclen (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:139 veclen ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 97 256 102 3 arch/arm/vfp/vfpdouble.c:1160 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 105)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [50.0%]  (fallthru)
(code_label 102 97 103 4 52 "" [1 uses])

(note 103 102 104 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 104 103 105 4 arch/arm/vfp/vfpdouble.c:1161 (set (reg/v:SI 12 ip [orig:139 veclen ] [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 7 [r7] 10 [sl] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 10 [sl] 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [50.0%] 
(code_label 105 104 106 5 53 "" [1 uses])

(note 106 105 107 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 107 106 108 5 arch/arm/vfp/vfpdouble.c:1168 (set (reg/f:SI 3 r3 [orig:193 <variable>.fn ] [193])
        (mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32])
        (nil)))

(insn:TI 108 107 111 5 arch/arm/vfp/vfpdouble.c:1168 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:193 <variable>.fn ] [193])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:193 <variable>.fn ] [193])
        (nil)))

(insn:TI 111 108 257 5 arch/arm/vfp/vfpdouble.c:1203 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 10 sl [orig:144 exceptions ] [144])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 257 111 109 5 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:144 exceptions ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 109 257 115 5 arch/arm/vfp/vfpdouble.c:1168 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  6 [89.9%]  (fallthru)
;; Succ edge  8 [10.1%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 6 [r6] 13 [sp]
;; lr  def 	 6 [r6] 8 [r8] 10 [sl]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 6 [r6] 8 [r8] 10 [sl]
;; live  kill	

;; Pred edge  5 [89.9%]  (fallthru)
(note 115 109 116 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 116 115 117 6 NOTE_INSN_DELETED)

(insn:TI 117 116 119 6 arch/arm/vfp/vfpdouble.c:1130 (set (reg:SI 6 r6 [195])
        (lshiftrt:SI (reg:SI 6 r6 [orig:153 D.5133 ] [153])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 119 117 258 6 arch/arm/vfp/vfpdouble.c:1130 (set (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 258 119 118 6 ( vecitr (expr_list:REG_DEP_TRUE (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 118 258 259 6 arch/arm/vfp/vfpdouble.c:1130 (set (reg/v:SI 6 r6 [orig:142 dn ] [142])
        (ior:SI (lshiftrt:SI (reg:SI 2 r2 [orig:152 D.5135 ] [152])
                (const_int 3 [0x3]))
            (reg:SI 6 r6 [195]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:152 D.5135 ] [152])
        (nil)))

(note 259 118 120 6 ( dn (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:142 dn ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 120 259 151 6 arch/arm/vfp/vfpdouble.c:1130 (set (reg/v:SI 10 sl [orig:144 exceptions ] [144])
        (reg/v:SI 8 r8 [orig:140 vecitr ] [140])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 8 [r8] 10 [sl] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 10 [sl] 12 [ip] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  7 [90.1%]  (dfs_back)
(code_label 151 120 121 7 57 "" [1 uses])

(note 121 151 122 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 122 121 128 7 NOTE_INSN_DELETED)

(note 128 122 131 7 NOTE_INSN_DELETED)

(note 131 128 136 7 NOTE_INSN_DELETED)

(note 136 131 140 7 NOTE_INSN_DELETED)

(note 140 136 144 7 NOTE_INSN_DELETED)

(note 144 140 124 7 NOTE_INSN_DELETED)

(insn:TI 124 144 125 7 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 1 r1)
        (reg/v:SI 6 r6 [orig:142 dn ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 125 124 123 7 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:141 dm ] [141])) 167 {*arm_movsi_insn} (nil))

(insn:TI 123 125 126 7 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:143 dest ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 126 123 221 7 arch/arm/vfp/vfpdouble.c:1185 (set (reg:SI 3 r3)
        (reg/v:SI 9 r9 [orig:156 fpscr ] [156])) 167 {*arm_movsi_insn} (nil))

(insn:TI 221 126 260 7 arch/arm/vfp/vfpdouble.c:1185 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 12 ip)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip)
        (nil)))

(note 260 221 150 7 ( veclen (nil)) NOTE_INSN_VAR_LOCATION)

(insn 150 260 261 7 arch/arm/vfp/vfpdouble.c:1171 (set (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
        (plus:SI (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
            (const_int 65536 [0x10000]))) 4 {*arm_addsi3} (nil))

(note 261 150 127 7 ( vecitr (expr_list:REG_DEP_TRUE (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 127 261 145 7 arch/arm/vfp/vfpdouble.c:1185 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (reg/v/f:SI 7 r7 [orig:137 fop ] [137]) [0 <variable>.fn+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 145 127 146 7 arch/arm/vfp/vfpdouble.c:1198 (set (reg:SI 1 r1 [202])
        (plus:SI (reg/v:SI 4 r4 [orig:141 dm ] [141])
            (reg/v:SI 11 fp [orig:138 vecstride ] [138]))) 4 {*arm_addsi3} (nil))

(insn:TI 146 145 137 7 arch/arm/vfp/vfpdouble.c:1198 (set (reg:SI 1 r1)
        (and:SI (reg:SI 1 r1 [202])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 137 146 223 7 arch/arm/vfp/vfpdouble.c:1196 (set (reg:SI 2 r2 [200])
        (plus:SI (reg/v:SI 6 r6 [orig:142 dn ] [142])
            (reg/v:SI 11 fp [orig:138 vecstride ] [138]))) 4 {*arm_addsi3} (nil))

(insn:TI 223 137 141 7 arch/arm/vfp/vfpdouble.c:1198 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 141 223 138 7 arch/arm/vfp/vfpdouble.c:1197 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 4 r4 [orig:141 dm ] [141])
                        (const_int 12 [0xc]))
                    (const_int 0 [0x0])))
            (set (reg:SI 1 r1)
                (and:SI (reg/v:SI 4 r4 [orig:141 dm ] [141])
                    (const_int 12 [0xc])))
        ]) 69 {*andsi3_compare0} (nil))

(insn:TI 138 141 135 7 arch/arm/vfp/vfpdouble.c:1196 (set (reg:SI 2 r2 [orig:148 D.5207 ] [148])
        (and:SI (reg:SI 2 r2 [200])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 135 138 262 7 arch/arm/vfp/vfpdouble.c:1196 (set (reg:SI 6 r6 [orig:149 D.5204 ] [149])
        (and:SI (reg/v:SI 6 r6 [orig:142 dn ] [142])
            (const_int 12 [0xc]))) 67 {*arm_andsi3_insn} (nil))

(note 262 135 139 7 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 139 262 263 7 arch/arm/vfp/vfpdouble.c:1196 (set (reg/v:SI 6 r6 [orig:142 dn ] [142])
        (plus:SI (reg:SI 2 r2 [orig:148 D.5207 ] [148])
            (reg:SI 6 r6 [orig:149 D.5204 ] [149]))) 4 {*arm_addsi3} (nil))

(note 263 139 222 7 ( dn (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:142 dn ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 222 263 225 7 arch/arm/vfp/vfpdouble.c:1197 (set (reg:SI 12 ip)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 225 222 132 7 arch/arm/vfp/vfpdouble.c:1198 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2)
            (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                    (const_int 4 [0x4])) [0 %sfp+-12 S4 A32]))) 2345 {neon_vornv2di+78} (nil))

(insn 132 225 133 7 arch/arm/vfp/vfpdouble.c:1195 (set (reg:SI 3 r3 [198])
        (plus:SI (reg/v:SI 5 r5 [orig:143 dest ] [143])
            (reg/v:SI 11 fp [orig:138 vecstride ] [138]))) 4 {*arm_addsi3} (nil))

(insn:TI 133 132 130 7 arch/arm/vfp/vfpdouble.c:1195 (set (reg:SI 3 r3 [orig:150 D.5203 ] [150])
        (and:SI (reg:SI 3 r3 [198])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 130 133 264 7 arch/arm/vfp/vfpdouble.c:1195 (set (reg:SI 5 r5 [orig:135 temp.297 ] [135])
        (and:SI (reg/v:SI 5 r5 [orig:143 dest ] [143])
            (const_int 12 [0xc]))) 67 {*arm_andsi3_insn} (nil))

(note 264 130 147 7 ( dest (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 147 264 265 7 arch/arm/vfp/vfpdouble.c:1198 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:141 dm ] [141])
            (plus:SI (reg:SI 2 r2)
                (reg:SI 1 r1)))) 2268 {neon_vornv2di+1} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil)))))

(note 265 147 152 7 ( dm (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:141 dm ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 152 265 266 7 arch/arm/vfp/vfpdouble.c:1171 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 8 r8 [orig:140 vecitr ] [140])
            (reg/v:SI 12 ip [orig:139 veclen ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(note 266 152 224 7 ( veclen (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:139 veclen ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 224 266 134 7 arch/arm/vfp/vfpdouble.c:1197 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (nil))

(insn 134 224 267 7 arch/arm/vfp/vfpdouble.c:1195 (set (reg/v:SI 5 r5 [orig:143 dest ] [143])
        (plus:SI (reg:SI 3 r3 [orig:150 D.5203 ] [150])
            (reg:SI 5 r5 [orig:135 temp.297 ] [135]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:150 D.5203 ] [150])
        (nil)))

(note 267 134 129 7 ( dest (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:143 dest ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 129 267 268 7 arch/arm/vfp/vfpdouble.c:1189 (set (reg/v:SI 10 sl [orig:144 exceptions ] [144])
        (ior:SI (reg/v:SI 10 sl [orig:144 exceptions ] [144])
            (reg:SI 0 r0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 268 129 153 7 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:144 exceptions ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 153 268 154 7 arch/arm/vfp/vfpdouble.c:1171 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9011 [0x2333])
            (nil))))
;; End of basic block 7 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  7 [90.1%]  (dfs_back)
;; Succ edge  8 [9.9%]  (fallthru,loop_exit)

;; Start of basic block ( 7 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  7 [9.9%]  (fallthru,loop_exit)
;; Pred edge  5 [10.1%] 
(code_label 154 153 155 8 55 "" [1 uses])

(note 155 154 160 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 160 155 166 8 arch/arm/vfp/vfpdouble.c:1204 (set (reg/i:SI 0 r0)
        (reg/v:SI 10 sl [orig:144 exceptions ] [144])) 167 {*arm_movsi_insn} (nil))

(insn 166 160 234 8 arch/arm/vfp/vfpdouble.c:1204 (use (reg/i:SI 0 r0)) -1 (nil))

(note 234 166 235 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 235 234 236 8 arch/arm/vfp/vfpdouble.c:1204 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 236 235 203)

(note 203 236 218 NOTE_INSN_DELETED)

(note 218 203 0 NOTE_INSN_DELETED)


;; Function vfp_compare (vfp_compare)[0:159]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: signal_on_qnan+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: signal_on_qnan
    offset 0
      (reg:SI 1 r1 [ signal_on_qnan ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 3:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 4:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 5:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 6:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 7:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 8:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 9:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 10:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 11:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 12:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 13:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 14:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 15:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 16:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 17:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 18:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 19:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 20:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 21:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 22:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 23:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 24:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 25:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 26:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 27:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 28:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 29:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 30:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 31:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 32:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 33:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 34:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 35:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 36:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 37:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


Basic block 38:
IN:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])

OUT:
Stack adjustment: 48
Reg 4: dd+0
Reg 5: ret+0
Reg 6: m+0
Reg 7: m+4
Variables:
  name: m
    offset 0
      (reg:SI 6 r6 [orig:134 m ] [134])
    offset 4
      (reg:SI 7 r7 [ m+4 ])
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:133 ret ] [133])
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:140 dd ] [140])


39 basic blocks, 62 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

Successors:  8 [71.0%]  3 [29.0%]  (fallthru)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  2 [29.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  4 [50.0%]  (fallthru) 8 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

Successors:  5 [50.0%]  (fallthru) 8 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]

Invalid sum of incoming frequencies 1450, should be 2800

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  9 [50.0%]  6 [50.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

Successors:  10 [50.0%]  7 [50.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 350, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}

Successors:  9 [100.0%] 


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 8600, maybe hot.
Predecessors:  3 [50.0%]  4 [50.0%]  2 [71.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

Successors:  10 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]

Invalid sum of incoming frequencies 9950, should be 8600

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1050, maybe hot.
Predecessors:  5 [50.0%]  7 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

Successors:  10 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru) 6 [50.0%]  8 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 14 [lr]

Successors:  16 [71.0%]  11 [29.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  10 [29.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  (fallthru) 16 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 9 [r9]

Successors:  13 [50.0%]  (fallthru) 16 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 1450, should be 2800

Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 12 [ip] 24 [cc]
;; live  kill	

Successors:  15 [50.0%]  14 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

Successors:  15 [50.0%]  (fallthru) 38 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 1050, maybe hot.
Predecessors:  13 [50.0%]  14 [50.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

Successors:  38 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 8600, maybe hot.
Predecessors:  11 [50.0%]  12 [50.0%]  10 [71.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  17 [70.9%]  (fallthru) 38 [29.1%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 9950, should be 8600

Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  16 [70.9%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  19 [71.0%]  18 [29.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 1769, maybe hot.
Predecessors:  17 [29.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  19 [71.0%]  (fallthru) 35 [29.0%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 4885, maybe hot.
Predecessors:  18 [71.0%]  (fallthru) 17 [71.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 8 [r8]

Successors:  35 [39.0%]  20 [61.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 5587, should be 4885

Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 2980, maybe hot.
Predecessors:  19 [61.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  23 [21.0%]  21 [79.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 2354, maybe hot.
Predecessors:  20 [79.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  27 [50.0%]  22 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 1177, maybe hot.
Predecessors:  21 [50.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}

Successors:  25 [100.0%] 


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 805, maybe hot.
Predecessors:  20 [21.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  24 [21.0%]  (fallthru) 36 [79.0%] 
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 626, should be 805

Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 169, maybe hot.
Predecessors:  23 [21.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}

Successors:  37 [100.0%] 


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 1089, maybe hot.
Predecessors:  22 [100.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  28 [71.0%]  26 [29.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 316, maybe hot.
Predecessors:  25 [29.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  27 [50.0%]  (fallthru) 28 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 1247, maybe hot.
Predecessors:  21 [50.0%]  26 [50.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

Successors:  28 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 2178, maybe hot.
Predecessors:  25 [71.0%]  26 [50.0%]  27 [100.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  37 [50.0%]  29 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 1327, maybe hot.
Predecessors:  28 [50.0%]  (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  32 [50.0%]  30 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]

Invalid sum of incoming frequencies 1089, should be 1327

Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 664, maybe hot.
Predecessors:  29 [50.0%]  (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  33 [71.0%]  31 [29.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 193, maybe hot.
Predecessors:  30 [29.0%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  32 [50.0%]  (fallthru) 33 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 761, maybe hot.
Predecessors:  29 [50.0%]  31 [50.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

Successors:  33 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 1329, maybe hot.
Predecessors:  30 [71.0%]  31 [50.0%]  32 [100.0%]  (fallthru)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  36 [50.0%]  34 [50.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 665, maybe hot.
Predecessors:  33 [50.0%]  (fallthru)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}

Successors:  38 [100.0%] 


Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 3119, maybe hot.
Predecessors:  19 [39.0%]  18 [29.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

Successors:  38 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 2418, should be 3119

Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 1397, maybe hot.
Predecessors:  33 [50.0%]  23 [79.0%] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

Successors:  38 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 1066, maybe hot.
Predecessors:  28 [50.0%]  24 [100.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

Successors:  38 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 1258, should be 1066

Basic block 38 , prev 37, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  37 [100.0%]  (fallthru) 15 [100.0%]  16 [29.1%]  35 [100.0%]  14 [50.0%]  34 [100.0%]  36 [100.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 10147, should be 10000

Basic block 1 , prev 38, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  38 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_compare

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={8d,14u} r1={7d,19u} r2={9d,9u} r3={20d,16u} r4={2d,3u} r5={9d,7u} r6={3d,7u} r7={3d,10u} r8={4d,4u} r9={4d,4u} r10={5d,6u,1d} r11={5d,6u} r12={3d,1u} r13={2d,44u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={24d,25u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 509{331d,177u,1e} in 117{115 regular + 2 call} insns.
(note 1 0 392 NOTE_INSN_DELETED)

(note 392 1 393 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 393 392 394 2 ( signal_on_qnan (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ signal_on_qnan ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 394 393 395 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 395 394 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 395 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 336 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 336 6 398 2 arch/arm/vfp/vfpdouble.c:359 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 4 r4)
                                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                (set/f (reg/f:SI 13 sp)
                                                    (plus:SI (reg/f:SI 13 sp)
                                                        (const_int -48 [0xffffffffffffffd0])))
                                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                    (reg:SI 0 r0))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 4 [0x4])) [0 S4 A32])
                                                    (reg:SI 1 r1))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 8 [0x8])) [0 S4 A32])
                                                    (reg:SI 2 r2))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 12 [0xc])) [0 S4 A32])
                                                    (reg:SI 4 r4))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 16 [0x10])) [0 S4 A32])
                                                    (reg:SI 5 r5))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 20 [0x14])) [0 S4 A32])
                                                    (reg:SI 6 r6))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 24 [0x18])) [0 S4 A32])
                                                    (reg:SI 7 r7))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 28 [0x1c])) [0 S4 A32])
                                                    (reg:SI 8 r8))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 32 [0x20])) [0 S4 A32])
                                                    (reg:SI 9 r9))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 36 [0x24])) [0 S4 A32])
                                                    (reg:SI 10 sl))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 40 [0x28])) [0 S4 A32])
                                                    (reg:SI 11 fp))
                                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                            (const_int 44 [0x2c])) [0 S4 A32])
                                                    (reg:SI 14 lr))
                                            ])
                                        (nil)))))))))))

(note 398 336 397 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(note 397 398 396 2 ( signal_on_qnan (nil)) NOTE_INSN_VAR_LOCATION)

(note 396 397 337 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 337 396 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 337 399 2 arch/arm/vfp/vfpdouble.c:359 (set (reg/v:SI 4 r4 [orig:140 dd ] [140])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(note 399 2 9 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 399 401 2 arch/arm/vfp/vfpdouble.c:363 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 401 9 400 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:140 dd ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 400 401 3 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 3 400 402 2 arch/arm/vfp/vfpdouble.c:359 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 r1 [ signal_on_qnan ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ signal_on_qnan ])
        (nil)))

(note 402 3 10 2 ( signal_on_qnan (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ signal_on_qnan ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 10 402 405 2 arch/arm/vfp/vfpdouble.c:363 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 405 10 404 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 404 405 403 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 403 404 330 2 ( signal_on_qnan (nil)) NOTE_INSN_VAR_LOCATION)

(insn 330 403 331 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 10 sl [147])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 331 330 13 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 11 fp [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 13 331 406 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 2 r2 [145])
        (ashiftrt:SI (reg:SI 1 r1 [orig:7 m+4 ] [7])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(note 406 13 14 2 ( m (nil)) NOTE_INSN_VAR_LOCATION)

(insn 14 406 326 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 3 r3 [+4 ])
        (ashiftrt:SI (reg:SI 1 r1 [orig:7 m+4 ] [7])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:7 m+4 ] [7])
        (nil)))

(insn:TI 326 14 407 2 arch/arm/vfp/vfpdouble.c:363 (set (reg:SI 6 r6 [orig:134 m ] [134])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 407 326 327 2 ( m (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 6 r6 [orig:134 m ] [134])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [orig:7 m+4 ] [7])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 327 407 409 2 arch/arm/vfp/vfpdouble.c:363 (set (reg:SI 7 r7 [ m+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (nil))

(note 409 327 408 2 ( m (expr_list:REG_DEP_TRUE (reg:DI 6 r6 [orig:134 m ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 408 409 333 2 ( m (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 333 408 334 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 0 r0 [146])
        (and:SI (reg:SI 2 r2 [145])
            (reg:SI 10 sl [147]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 10 sl [147])
        (expr_list:REG_DEAD (reg:SI 2 r2 [145])
            (nil))))

(insn 334 333 286 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
            (nil))))

(insn:TI 286 334 18 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:SI 3 r3 [148])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 18 286 19 2 arch/arm/vfp/vfpdouble.c:364 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [146])
            (reg:SI 3 r3 [148]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [148])
        (expr_list:REG_DEAD (reg:SI 0 r0 [146])
            (nil))))

(jump_insn:TI 19 18 223 2 arch/arm/vfp/vfpdouble.c:364 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 2 -> ( 8 3)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [71.0%] 
;; Succ edge  3 [29.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [29.0%]  (fallthru)
(note 223 19 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 20 223 21 3 arch/arm/vfp/vfpdouble.c:364 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn:TI 21 20 22 3 arch/arm/vfp/vfpdouble.c:364 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  3 [50.0%]  (fallthru)
(note 22 21 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 22 26 4 NOTE_INSN_DELETED)

(note 26 25 322 4 NOTE_INSN_DELETED)

(insn:TI 322 26 321 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:SI 1 r1 [+4 ])
        (const_int 1048575 [0xfffff])) 167 {*arm_movsi_insn} (nil))

(insn 321 322 324 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:SI 0 r0 [150])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 324 321 325 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:SI 2 r2 [149])
        (and:SI (reg:SI 6 r6 [orig:134 m ] [134])
            (reg:SI 0 r0 [150]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [150])
        (nil)))

(insn:TI 325 324 27 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 7 r7 [ m+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn:TI 27 325 28 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [149])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [149])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 28 27 29 4 arch/arm/vfp/vfpdouble.c:364 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 29 28 289 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 289 29 30 5 arch/arm/vfp/vfpdouble.c:366 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 30 289 31 5 arch/arm/vfp/vfpdouble.c:366 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(jump_insn:TI 31 30 32 5 arch/arm/vfp/vfpdouble.c:366 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 9 6)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  9 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 32 31 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 35 32 36 6 NOTE_INSN_DELETED)

(note 36 35 318 6 NOTE_INSN_DELETED)

(insn:TI 318 36 320 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:SI 1 r1 [+4 ])
        (const_int 524288 [0x80000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 320 318 37 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 7 r7 [ m+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn:TI 37 320 40 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn:TI 40 37 410 6 arch/arm/vfp/vfpdouble.c:365 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
            (const_int 805306368 [0x30000000]))) 2345 {neon_vornv2di+78} (nil))

(note 410 40 38 6 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:133 ret ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 38 410 371 6 arch/arm/vfp/vfpdouble.c:366 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 10 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}

;; Pred edge  6 [50.0%]  (fallthru)
(note 371 38 372 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(jump_insn 372 371 373 7 (set (pc)
        (label_ref 48)) -1 (nil))
;; End of basic block 7 -> ( 9)


;; Succ edge  9 [100.0%] 

(barrier 373 372 411)

(note 411 373 43 8 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 4 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  2 [71.0%] 
(code_label 43 411 44 8 64 "" [3 uses])

(note 44 43 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 45 44 412 8 arch/arm/vfp/vfpdouble.c:361 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 412 45 374 8 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:133 ret ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 374 412 375 8 (set (pc)
        (label_ref 51)) -1 (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 375 374 48)

;; Start of basic block ( 5 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  5 [50.0%] 
;; Pred edge  7 [100.0%] 
(code_label 48 375 49 9 65 "" [2 uses])

(note 49 48 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 50 49 51 9 arch/arm/vfp/vfpdouble.c:370 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int 805306369 [0x30000001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 805306369 [0x30000001])
        (nil)))
;; End of basic block 9 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 6 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  6 [50.0%] 
;; Pred edge  8 [100.0%] 
(code_label 51 50 52 10 66 "" [2 uses])

(note 52 51 285 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 285 52 53 10 NOTE_INSN_DELETED)

(insn:TI 53 285 311 10 arch/arm/vfp/vfpdouble.c:373 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:140 dd ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 311 53 54 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 8 r8)
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 54 311 312 10 arch/arm/vfp/vfpdouble.c:373 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 312 54 58 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 58 312 57 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 3 r3 [+4 ])
        (ashiftrt:SI (reg:SI 1 r1 [ D.4354+4 ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 57 58 314 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 2 r2 [156])
        (ashiftrt:SI (reg:SI 1 r1 [ D.4354+4 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 314 57 315 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 10 sl [157])
        (and:SI (reg:SI 2 r2 [156])
            (reg:SI 8 r8))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [156])
        (nil)))

(insn 315 314 284 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 3 r3 [+4 ])
            (reg:SI 9 r9 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn:TI 284 315 62 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:SI 3 r3 [159])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 62 284 63 10 arch/arm/vfp/vfpdouble.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [157])
            (reg:SI 3 r3 [159]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [159])
        (expr_list:REG_EQUAL (compare:CC (subreg:SI (reg:DI 10 sl [157]) 0)
                (const_int 2047 [0x7ff]))
            (nil))))

(jump_insn:TI 63 62 224 10 arch/arm/vfp/vfpdouble.c:374 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 16 11)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [71.0%] 
;; Succ edge  11 [29.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [29.0%]  (fallthru)
(note 224 63 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 64 224 65 11 arch/arm/vfp/vfpdouble.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 65 64 66 11 arch/arm/vfp/vfpdouble.c:374 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 16)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 9 [r9]

;; Pred edge  11 [50.0%]  (fallthru)
(note 66 65 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 69 66 70 12 NOTE_INSN_DELETED)

(note 70 69 305 12 NOTE_INSN_DELETED)

(insn:TI 305 70 304 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:SI 11 fp [+4 ])
        (const_int 1048575 [0xfffff])) 167 {*arm_movsi_insn} (nil))

(insn 304 305 307 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:SI 10 sl [161])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 307 304 308 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:SI 2 r2 [160])
        (and:SI (reg:SI 0 r0 [orig:137 D.4354 ] [137])
            (reg:SI 10 sl [161]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 308 307 71 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 71 308 72 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [160])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 9 r9))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [160])
            (expr_list:REG_UNUSED (reg:SI 9 r9)
                (nil)))))

(jump_insn:TI 72 71 73 12 arch/arm/vfp/vfpdouble.c:374 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 89)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 16)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 73 72 291 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:TI 291 73 74 13 arch/arm/vfp/vfpdouble.c:376 (set (reg:SI 12 ip)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 74 291 75 13 arch/arm/vfp/vfpdouble.c:375 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (ior:SI (reg/v:SI 5 r5 [orig:133 ret ] [133])
            (const_int 805306368 [0x30000000]))) 89 {*arm_iorsi3} (nil))

(insn:TI 75 74 76 13 arch/arm/vfp/vfpdouble.c:376 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip)
        (nil)))

(jump_insn:TI 76 75 77 13 arch/arm/vfp/vfpdouble.c:376 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 84)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 77 76 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 80 77 81 14 NOTE_INSN_DELETED)

(note 81 80 301 14 NOTE_INSN_DELETED)

(insn:TI 301 81 413 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:SI 7 r7 [+4 ])
        (const_int 524288 [0x80000])) 167 {*arm_movsi_insn} (nil))

(note 413 301 300 14 ( m (nil)) NOTE_INSN_VAR_LOCATION)

(insn 300 413 414 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:SI 6 r6 [164])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 414 300 303 14 ( m (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 303 414 82 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 7 r7 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4354+4 ])
        (nil)))

(insn:TI 82 303 83 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(jump_insn:TI 83 82 415 14 arch/arm/vfp/vfpdouble.c:376 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 209)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

(note 415 83 84 15 ( m (expr_list:REG_DEP_TRUE (reg:DI 6 r6 [orig:134 m ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  13 [50.0%] 
;; Pred edge  14 [50.0%]  (fallthru)
(code_label 84 415 85 15 68 "" [1 uses])

(note 85 84 86 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:TI 86 85 376 15 arch/arm/vfp/vfpdouble.c:380 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (ior:SI (reg/v:SI 5 r5 [orig:133 ret ] [133])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 376 86 377 15 (set (pc)
        (label_ref 209)) -1 (nil))
;; End of basic block 15 -> ( 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  38 [100.0%] 

(barrier 377 376 89)

;; Start of basic block ( 11 12 10) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%] 
;; Pred edge  12 [50.0%] 
;; Pred edge  10 [71.0%] 
(code_label 89 377 90 16 67 "" [3 uses])

(note 90 89 91 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:TI 91 90 92 16 arch/arm/vfp/vfpdouble.c:383 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:133 ret ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 92 91 93 16 arch/arm/vfp/vfpdouble.c:383 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 209)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2907 [0xb5b])
            (nil))))
;; End of basic block 16 -> ( 17 38)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [70.9%]  (fallthru)
;; Succ edge  38 [29.1%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [70.9%]  (fallthru)
(note 93 92 94 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:TI 94 93 95 17 arch/arm/vfp/vfpdouble.c:384 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:137 D.4354 ] [137])
            (reg:SI 6 r6 [orig:134 m ] [134]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 95 94 225 17 arch/arm/vfp/vfpdouble.c:384 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 255)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [71.0%] 
;; Succ edge  18 [29.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [29.0%]  (fallthru)
(note 225 95 96 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 96 225 97 18 arch/arm/vfp/vfpdouble.c:384 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 7 r7 [ m+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 97 96 255 18 arch/arm/vfp/vfpdouble.c:384 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 196)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 18 -> ( 19 35)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [71.0%]  (fallthru)
;; Succ edge  35 [29.0%] 

;; Start of basic block ( 18 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 8 [r8]

;; Pred edge  18 [71.0%]  (fallthru)
;; Pred edge  17 [71.0%] 
(code_label 255 97 101 19 84 "" [1 uses])

(note 101 255 105 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 105 101 106 19 NOTE_INSN_DELETED)

(note 106 105 296 19 NOTE_INSN_DELETED)

(insn:TI 296 106 294 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 8 r8 [168])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 294 296 295 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 10 sl [166])
        (ior:SI (reg:SI 0 r0 [orig:137 D.4354 ] [137])
            (reg:SI 6 r6 [orig:134 m ] [134]))) 89 {*arm_iorsi3} (nil))

(insn:TI 295 294 297 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 11 fp [+4 ])
        (ior:SI (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 7 r7 [ m+4 ]))) 89 {*arm_iorsi3} (nil))

(insn 297 295 298 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 9 r9 [+4 ])
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 298 297 299 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 2 r2 [167])
        (and:SI (reg:SI 10 sl [166])
            (reg:SI 8 r8 [168]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [168])
        (nil)))

(insn 299 298 107 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 11 fp [+4 ])
            (reg:SI 9 r9 [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 107 299 108 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [167])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 8 r8))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [167])
            (nil))))

(jump_insn:TI 108 107 109 19 arch/arm/vfp/vfpdouble.c:384 discrim 2 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 196)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 19 -> ( 35 20)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  35 [39.0%] 
;; Succ edge  20 [61.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  19 [61.0%]  (fallthru)
(note 109 108 293 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:TI 293 109 111 20 arch/arm/vfp/vfpdouble.c:389 (set (reg:SI 3 r3 [+4 ])
        (xor:SI (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 7 r7 [ m+4 ]))) 96 {*arm_xorsi3} (nil))

(insn:TI 111 293 112 20 arch/arm/vfp/vfpdouble.c:389 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(jump_insn:TI 112 111 228 20 arch/arm/vfp/vfpdouble.c:389 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 256)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [21.0%] 
;; Succ edge  21 [79.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  20 [79.0%]  (fallthru)
(note 228 112 257 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 257 228 258 21 NOTE_INSN_DELETED)

(note 258 257 152 21 NOTE_INSN_DELETED)

(insn:TI 152 258 149 21 arch/arm/vfp/vfpdouble.c:403 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [ m+4 ])
            (reg:SI 1 r1 [ D.4354+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 149 152 151 21 arch/arm/vfp/vfpdouble.c:403 (set (reg:SI 2 r2 [orig:136 D.4383 ] [136])
        (lshiftrt:SI (reg:SI 1 r1 [ D.4354+4 ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 151 149 153 21 arch/arm/vfp/vfpdouble.c:403 (set (reg:QI 3 r3 [174])
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn:TI 153 151 378 21 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 21 -> ( 27 22)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  27 [50.0%] 
;; Succ edge  22 [50.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}

;; Pred edge  21 [50.0%]  (fallthru)
(note 378 153 380 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 380 378 381 22 (set (pc)
        (label_ref 379)) -1 (nil))
;; End of basic block 22 -> ( 25)


;; Succ edge  25 [100.0%] 

(barrier 381 380 256)

;; Start of basic block ( 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [21.0%] 
(code_label 256 381 120 23 85 "" [1 uses])

(note 120 256 121 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:TI 121 120 122 23 arch/arm/vfp/vfpdouble.c:393 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ D.4354+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4354+4 ])
        (nil)))

(jump_insn:TI 122 121 382 23 arch/arm/vfp/vfpdouble.c:393 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 201)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 23 -> ( 24 36)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [21.0%]  (fallthru)
;; Succ edge  36 [79.0%] 

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}

;; Pred edge  23 [21.0%]  (fallthru)
(note 382 122 383 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(jump_insn 383 382 384 24 (set (pc)
        (label_ref 206)) -1 (nil))
;; End of basic block 24 -> ( 37)


;; Succ edge  37 [100.0%] 

(barrier 384 383 379)

;; Start of basic block ( 22) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  22 [100.0%] 
(code_label 379 384 241 25 88 "" [1 uses])

(note 241 379 155 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 155 241 242 25 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 165)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 25 -> ( 28 26)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  28 [71.0%] 
;; Succ edge  26 [29.0%]  (fallthru)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  25 [29.0%]  (fallthru)
(note 242 155 156 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:TI 156 242 157 26 arch/arm/vfp/vfpdouble.c:403 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 6 r6 [orig:134 m ] [134])
            (reg:SI 0 r0 [orig:137 D.4354 ] [137]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 157 156 162 26 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 165)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 26 -> ( 27 28)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  28 [50.0%] 

;; Start of basic block ( 21 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  21 [50.0%] 
;; Pred edge  26 [50.0%]  (fallthru)
(code_label 162 157 245 27 80 "" [1 uses])

(note 245 162 164 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:TI 164 245 165 27 arch/arm/vfp/vfpdouble.c:403 (set (reg:QI 3 r3 [174])
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 27 -> ( 28)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 25 26 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  25 [71.0%] 
;; Pred edge  26 [50.0%] 
;; Pred edge  27 [100.0%]  (fallthru)
(code_label 165 164 246 28 79 "" [2 uses])

(note 246 165 166 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 166 246 167 28 NOTE_INSN_DELETED)

(insn:TI 167 166 168 28 arch/arm/vfp/vfpdouble.c:403 (set (reg:SI 3 r3 [178])
        (xor:SI (reg:SI 2 r2 [orig:136 D.4383 ] [136])
            (reg:SI 3 r3 [174]))) 96 {*arm_xorsi3} (nil))

(insn:TI 168 167 169 28 arch/arm/vfp/vfpdouble.c:403 (set (reg:SI 3 r3 [179])
        (zero_extend:SI (reg:QI 3 r3 [178]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn:TI 169 168 170 28 arch/arm/vfp/vfpdouble.c:403 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [179])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 170 169 171 28 arch/arm/vfp/vfpdouble.c:403 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 206)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 37 29)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  37 [50.0%] 
;; Succ edge  29 [50.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  28 [50.0%]  (fallthru)
(note 171 170 174 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:TI 174 171 175 29 arch/arm/vfp/vfpdouble.c:408 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ D.4354+4 ])
            (reg:SI 7 r7 [ m+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4354+4 ])
        (nil)))

(jump_insn:TI 175 174 247 29 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 29 -> ( 32 30)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  32 [50.0%] 
;; Succ edge  30 [50.0%]  (fallthru)

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  29 [50.0%]  (fallthru)
(note 247 175 177 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 177 247 248 30 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 30 -> ( 33 31)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  33 [71.0%] 
;; Succ edge  31 [29.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  30 [29.0%]  (fallthru)
(note 248 177 178 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:TI 178 248 179 31 arch/arm/vfp/vfpdouble.c:408 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:137 D.4354 ] [137])
            (reg:SI 6 r6 [orig:134 m ] [134]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:137 D.4354 ] [137])
        (nil)))

(jump_insn:TI 179 178 184 31 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 [50.0%]  (fallthru)
;; Succ edge  33 [50.0%] 

;; Start of basic block ( 29 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  29 [50.0%] 
;; Pred edge  31 [50.0%]  (fallthru)
(code_label 184 179 251 32 82 "" [1 uses])

(note 251 184 186 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:TI 186 251 187 32 arch/arm/vfp/vfpdouble.c:408 (set (reg:QI 3 r3 [180])
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 32 -> ( 33)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 30 31 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  30 [71.0%] 
;; Pred edge  31 [50.0%] 
;; Pred edge  32 [100.0%]  (fallthru)
(code_label 187 186 252 33 81 "" [2 uses])

(note 252 187 188 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note 188 252 190 33 NOTE_INSN_DELETED)

(note 190 188 189 33 NOTE_INSN_DELETED)

(insn:TI 189 190 191 33 arch/arm/vfp/vfpdouble.c:408 (set (reg:SI 3 r3 [184])
        (xor:SI (reg:SI 2 r2 [orig:136 D.4383 ] [136])
            (reg:SI 3 r3 [180]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 D.4383 ] [136])
        (nil)))

(insn:TI 191 189 192 33 arch/arm/vfp/vfpdouble.c:408 (set (reg:CC_Z 24 cc)
        (compare:CC_Z (reg:QI 3 r3 [184])
            (const_int 0 [0x0]))) 151 {*compareqi_eq0} (expr_list:REG_DEAD (reg:QI 3 r3 [184])
        (nil)))

(jump_insn:TI 192 191 385 33 arch/arm/vfp/vfpdouble.c:408 (set (pc)
        (if_then_else (ne (reg:CC_Z 24 cc)
                (const_int 0 [0x0]))
            (label_ref 201)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_Z 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 33 -> ( 36 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  36 [50.0%] 
;; Succ edge  34 [50.0%]  (fallthru)

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}

;; Pred edge  33 [50.0%]  (fallthru)
(note 385 192 386 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(jump_insn 386 385 387 34 (set (pc)
        (label_ref 209)) -1 (nil))
;; End of basic block 34 -> ( 38)


;; Succ edge  38 [100.0%] 

(barrier 387 386 196)

;; Start of basic block ( 19 18) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  19 [39.0%] 
;; Pred edge  18 [29.0%] 
(code_label 196 387 197 35 70 "" [2 uses])

(note 197 196 198 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn:TI 198 197 388 35 arch/arm/vfp/vfpdouble.c:388 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int 1610612736 [0x60000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 388 198 389 35 (set (pc)
        (label_ref 209)) -1 (nil))
;; End of basic block 35 -> ( 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  38 [100.0%] 

(barrier 389 388 201)

;; Start of basic block ( 33 23) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  33 [50.0%] 
;; Pred edge  23 [79.0%] 
(code_label 201 389 202 36 76 "" [2 uses])

(note 202 201 203 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn:TI 203 202 390 36 arch/arm/vfp/vfpdouble.c:402 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 390 203 391 36 (set (pc)
        (label_ref 209)) -1 (nil))
;; End of basic block 36 -> ( 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  38 [100.0%] 

(barrier 391 390 206)

;; Start of basic block ( 28 24) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  28 [50.0%] 
;; Pred edge  24 [100.0%] 
(code_label 206 391 207 37 74 "" [2 uses])

(note 207 206 208 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn:TI 208 207 209 37 arch/arm/vfp/vfpdouble.c:407 (set (reg/v:SI 5 r5 [orig:133 ret ] [133])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 38)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 37 15 16 35 14 34 36) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%] 
;; Pred edge  16 [29.1%] 
;; Pred edge  35 [100.0%] 
;; Pred edge  14 [50.0%] 
;; Pred edge  34 [100.0%] 
;; Pred edge  36 [100.0%] 
(code_label 209 208 210 38 69 "" [6 uses])

(note 210 209 215 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:TI 215 210 221 38 arch/arm/vfp/vfpdouble.c:417 (set (reg/i:SI 0 r0)
        (reg/v:SI 5 r5 [orig:133 ret ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 221 215 338 38 arch/arm/vfp/vfpdouble.c:417 (use (reg/i:SI 0 r0)) -1 (nil))

(note 338 221 339 38 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 339 338 340 38 arch/arm/vfp/vfpdouble.c:417 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 38 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 340 339 283)

(note 283 340 288 NOTE_INSN_DELETED)

(note 288 283 0 NOTE_INSN_DELETED)


;; Function vfp_double_fcmpez (vfp_double_fcmpez)[0:163]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 0


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fcmpez

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={2d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 134{124d,10u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 31 NOTE_INSN_DELETED)

(note 31 1 32 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 32 31 33 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 33 32 34 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 34 33 7 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 34 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 10 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 10 6 35 2 arch/arm/vfp/vfpdouble.c:436 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 35 10 11 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn 11 35 36 2 arch/arm/vfp/vfpdouble.c:436 (set (reg:SI 2 r2)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(note 36 11 29 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 29 36 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 30 29 13 2 arch/arm/vfp/vfpdouble.c:437 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 13 30 38 2 arch/arm/vfp/vfpdouble.c:436 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 38 13 37 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(note 37 38 14 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 37 27)

(note 27 14 0 NOTE_INSN_DELETED)


;; Function vfp_double_fcmpz (vfp_double_fcmpz)[0:162]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 0


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fcmpz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={3d,1u} r3={2d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 134{124d,10u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 31 NOTE_INSN_DELETED)

(note 31 1 32 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 32 31 33 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 33 32 34 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 34 33 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 34 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 10 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 10 6 35 2 arch/arm/vfp/vfpdouble.c:431 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 35 10 11 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn 11 35 36 2 arch/arm/vfp/vfpdouble.c:431 (set (reg:SI 2 r2)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(note 36 11 29 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 29 36 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 30 29 13 2 arch/arm/vfp/vfpdouble.c:432 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 13 30 38 2 arch/arm/vfp/vfpdouble.c:431 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 38 13 37 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 37 38 14 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 37 27)

(note 27 14 0 NOTE_INSN_DELETED)


;; Function vfp_double_fcmpe (vfp_double_fcmpe)[0:161]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])

OUT:
Stack adjustment: 0


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fcmpe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{123d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 31 NOTE_INSN_DELETED)

(note 31 1 32 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 32 31 33 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 33 32 34 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 34 33 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 34 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 10 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 10 6 35 2 arch/arm/vfp/vfpdouble.c:426 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 35 10 29 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(note 29 35 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn 30 29 13 2 arch/arm/vfp/vfpdouble.c:427 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 13 30 38 2 arch/arm/vfp/vfpdouble.c:426 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 38 13 37 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 37 38 36 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 36 37 14 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 36 27)

(note 27 14 0 NOTE_INSN_DELETED)


;; Function vfp_double_fcmp (vfp_double_fcmp)[0:160]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])

OUT:
Stack adjustment: 0


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fcmp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={3d,1u} r2={2d,1u} r3={2d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{123d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 31 NOTE_INSN_DELETED)

(note 31 1 32 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 32 31 33 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 33 32 34 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 34 33 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 34 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 10 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 10 6 35 2 arch/arm/vfp/vfpdouble.c:421 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 35 10 29 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(note 29 35 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn 30 29 13 2 arch/arm/vfp/vfpdouble.c:422 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 13 30 38 2 arch/arm/vfp/vfpdouble.c:421 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_compare") [flags 0x3] <function_decl 0x10ad5380 vfp_compare>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 38 13 37 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 37 38 36 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 36 37 14 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 36 27)

(note 27 14 0 NOTE_INSN_DELETED)


;; Function vfp_double_fneg (vfp_double_fneg)[0:157]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 16


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fneg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={4d,2u} r2={4d,2u} r3={3d} r4={3d,4u} r5={2d,3u} r6={1d,2u} r12={2d} r13={2d,5u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 278{252d,26u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 43 NOTE_INSN_DELETED)

(note 43 1 44 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 44 43 45 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 45 44 46 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 46 45 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 46 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 6 13 2 NOTE_INSN_DELETED)

(note 13 11 17 2 NOTE_INSN_DELETED)

(note 17 13 38 2 NOTE_INSN_DELETED)

(insn/f:TI 38 17 39 2 arch/arm/vfp/vfpdouble.c:263 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -16 [0xfffffffffffffff0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 39 38 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 39 9 2 arch/arm/vfp/vfpdouble.c:263 (set (reg/v:SI 4 r4 [orig:135 dd ] [135])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn:TI 9 2 47 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 47 9 35 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:135 dd ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 35 47 10 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 5 r5 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 10 35 50 2 arch/arm/vfp/vfpdouble.c:264 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 50 10 49 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 49 50 48 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 48 49 15 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn 15 48 34 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:135 dd ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:135 dd ] [135])
        (nil)))

(insn:TI 34 15 51 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 4 r4 [140])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 51 34 36 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 36 51 37 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 0 r0)
        (xor:SI (reg:SI 0 r0)
            (reg:SI 4 r4 [140]))) 96 {*arm_xorsi3} (nil))

(insn 37 36 16 2 arch/arm/vfp/vfpdouble.c:264 (set (reg:SI 1 r1 [+4 ])
        (xor:SI (reg:SI 1 r1 [+4 ])
            (reg:SI 5 r5 [+4 ]))) 96 {*arm_xorsi3} (nil))

(call_insn:TI 16 37 21 2 arch/arm/vfp/vfpdouble.c:264 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 21 16 27 2 arch/arm/vfp/vfpdouble.c:266 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 27 21 40 2 arch/arm/vfp/vfpdouble.c:266 (use (reg/i:SI 0 r0)) -1 (nil))

(note 40 27 41 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 41 40 42 2 arch/arm/vfp/vfpdouble.c:266 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 42 41 31)

(note 31 42 33 NOTE_INSN_DELETED)

(note 33 31 0 NOTE_INSN_DELETED)


;; Function vfp_double_fabs (vfp_double_fabs)[0:155]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 16


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fabs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr]
;;  ref usage 	r0={6d,6u} r1={4d,2u} r2={4d,2u} r3={3d} r4={3d,4u} r5={2d,3u} r6={1d,2u} r12={2d} r13={2d,5u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 278{252d,26u,0e} in 13{11 regular + 2 call} insns.
(note 1 0 43 NOTE_INSN_DELETED)

(note 43 1 44 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 44 43 45 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 45 44 46 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 46 45 7 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 46 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 6 13 2 NOTE_INSN_DELETED)

(note 13 11 17 2 NOTE_INSN_DELETED)

(note 17 13 38 2 NOTE_INSN_DELETED)

(insn/f:TI 38 17 39 2 arch/arm/vfp/vfpdouble.c:251 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -16 [0xfffffffffffffff0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 39 38 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 39 9 2 arch/arm/vfp/vfpdouble.c:251 (set (reg/v:SI 4 r4 [orig:135 dd ] [135])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn:TI 9 2 47 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 47 9 35 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:135 dd ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 35 47 10 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 5 r5 [+4 ])
        (const_int 2147483647 [0x7fffffff])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 10 35 50 2 arch/arm/vfp/vfpdouble.c:252 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 50 10 49 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(note 49 50 48 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 48 49 15 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 15 48 34 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:135 dd ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:135 dd ] [135])
        (nil)))

(insn:TI 34 15 51 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 4 r4 [140])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(note 51 34 36 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 36 51 37 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 0 r0)
        (and:SI (reg:SI 0 r0)
            (reg:SI 4 r4 [140]))) 67 {*arm_andsi3_insn} (nil))

(insn 37 36 16 2 arch/arm/vfp/vfpdouble.c:252 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 1 r1 [+4 ])
            (reg:SI 5 r5 [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(call_insn:TI 16 37 21 2 arch/arm/vfp/vfpdouble.c:252 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 21 16 27 2 arch/arm/vfp/vfpdouble.c:254 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 27 21 40 2 arch/arm/vfp/vfpdouble.c:254 (use (reg/i:SI 0 r0)) -1 (nil))

(note 40 27 41 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 41 40 42 2 arch/arm/vfp/vfpdouble.c:254 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 42 41 31)

(note 31 42 33 NOTE_INSN_DELETED)

(note 33 31 0 NOTE_INSN_DELETED)


;; Function vfp_double_fcpy (vfp_double_fcpy)[0:156]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 8
Reg 4: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:135 dd ] [135])


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fcpy

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={5d,5u} r1={3d,1u} r2={4d,2u} r3={3d} r4={2d,3u} r12={2d} r13={2d,5u} r14={3d,2u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 264{246d,18u,0e} in 9{7 regular + 2 call} insns.
(note 1 0 36 NOTE_INSN_DELETED)

(note 36 1 37 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 37 36 38 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 38 37 39 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 39 38 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 39 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 15 2 NOTE_INSN_FUNCTION_BEG)

(note 15 6 31 2 NOTE_INSN_DELETED)

(insn/f:TI 31 15 32 2 arch/arm/vfp/vfpdouble.c:257 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -8 [0xfffffffffffffff8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 32 31 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 32 9 2 arch/arm/vfp/vfpdouble.c:257 (set (reg/v:SI 4 r4 [orig:135 dd ] [135])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn:TI 9 2 40 2 arch/arm/vfp/vfpdouble.c:258 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 40 9 10 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:135 dd ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 10 40 43 2 arch/arm/vfp/vfpdouble.c:258 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 43 10 42 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 42 43 41 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 41 42 13 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn 13 41 14 2 arch/arm/vfp/vfpdouble.c:258 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:135 dd ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 14 13 19 2 arch/arm/vfp/vfpdouble.c:258 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 19 14 25 2 arch/arm/vfp/vfpdouble.c:260 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 25 19 33 2 arch/arm/vfp/vfpdouble.c:260 (use (reg/i:SI 0 r0)) -1 (nil))

(note 33 25 34 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 34 33 35 2 arch/arm/vfp/vfpdouble.c:260 (return) 260 {return} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 35 34 29)

(note 29 35 30 NOTE_INSN_DELETED)

(note 30 29 0 NOTE_INSN_DELETED)


;; Function vfp_double_normalise_denormal (vfp_double_normalise_denormal)[0:152]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: vd+0
Variables:
  name: vd
    offset 0
      (reg:SI 0 r0 [ vd ])

OUT:
Stack adjustment: 8
Reg 0: vd+0
Reg 3: bits+0
Reg 4: vd+0
Variables:
  name: vd
    offset 0
      (reg/f:SI 0 r0 [orig:137 vd ] [137])
      (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
  name: bits
    offset 0
      (reg/v:SI 3 r3 [orig:135 bits ] [135])


Basic block 3:
IN:
Stack adjustment: 8
Reg 0: vd+0
Reg 3: bits+0
Reg 4: vd+0
Variables:
  name: vd
    offset 0
      (reg/f:SI 0 r0 [orig:137 vd ] [137])
      (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
  name: bits
    offset 0
      (reg/v:SI 3 r3 [orig:135 bits ] [135])

OUT:
Stack adjustment: 8
Reg 0: vd+0
Reg 3: bits+0
Reg 4: vd+0
Variables:
  name: vd
    offset 0
      (reg/f:SI 0 r0 [orig:137 vd ] [137])
      (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
  name: bits
    offset 0
      (reg/v:SI 3 r3 [orig:135 bits ] [135])


Basic block 4:
IN:
Stack adjustment: 8
Reg 0: vd+0
Reg 3: bits+0
Reg 4: vd+0
Variables:
  name: vd
    offset 0
      (reg/f:SI 0 r0 [orig:137 vd ] [137])
      (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
  name: bits
    offset 0
      (reg/v:SI 3 r3 [orig:135 bits ] [135])

OUT:
Stack adjustment: 8
Reg 0: vd+0
Reg 3: bits+0
Reg 4: vd+0
Variables:
  name: vd
    offset 0
      (reg/f:SI 0 r0 [orig:137 vd ] [137])
      (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
  name: bits
    offset 0
      (reg/v:SI 3 r3 [orig:135 bits ] [135])


Basic block 5:
IN:
Stack adjustment: 8
Reg 0: vd+0
Reg 3: bits+0
Reg 4: vd+0
Variables:
  name: vd
    offset 0
      (reg/f:SI 0 r0 [orig:137 vd ] [137])
      (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
  name: bits
    offset 0
      (reg/v:SI 3 r3 [orig:135 bits ] [135])

OUT:
Stack adjustment: 8
Reg 4: vd+0
Variables:
  name: vd
    offset 0
      (reg/v/f:SI 4 r4 [orig:137 vd ] [137])


6 basic blocks, 7 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [28.0%]  (fallthru) 4 [72.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

Successors:  4 [100.0%]  (fallthru)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [72.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [61.0%]  (fallthru) EXIT [39.0%] 
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  4 [61.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  4 [39.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(4){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_normalise_denormal

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,5u} r1={3d,2u} r2={4d,2u} r3={8d,8u} r4={2d,6u,1d} r12={3d,2u} r13={2d,7u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 177{140d,36u,1e} in 21{20 regular + 1 call} insns.
(note 1 0 55 NOTE_INSN_DELETED)

(note 55 1 4 2 ( vd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ vd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 55 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 3 51 2 NOTE_INSN_DELETED)

(insn/f:TI 51 10 52 2 arch/arm/vfp/vfpdouble.c:55 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 4 r4)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -8 [0xfffffffffffffff8])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 4 r4))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 52 51 48 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 48 52 9 2 arch/arm/vfp/vfpdouble.c:56 (set (reg:SI 3 r3 [orig:156 D.4073+4 ] [156])
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:137 vd ] [137])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(insn:TI 9 48 56 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 3 r3 [orig:134 ret ] [134])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 3 r3 [orig:156 D.4073+4 ] [156])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(note 56 9 11 2 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:134 ret ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 11 56 57 2 arch/arm/vfp/vfpdouble.c:56 (set (reg/v:SI 3 r3 [orig:135 bits ] [135])
        (plus:SI (reg/v:SI 3 r3 [orig:134 ret ] [134])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(note 57 11 58 2 ( bits (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:135 bits ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 58 57 2 2 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(insn 2 58 12 2 arch/arm/vfp/vfpdouble.c:55 (set (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
        (reg:SI 0 r0 [ vd ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 12 2 47 2 arch/arm/vfp/vfpdouble.c:57 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:135 bits ] [135])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(insn 47 12 13 2 arch/arm/vfp/vfpdouble.c:56 (set (reg:SI 2 r2 [orig:155 D.4073 ] [155])
        (mem/s/j:SI (plus:SI (reg/f:SI 0 r0 [orig:137 vd ] [137])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 0 r0 [orig:137 vd ] [137])
        (nil)))

(jump_insn:TI 13 47 14 2 arch/arm/vfp/vfpdouble.c:57 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [28.0%]  (fallthru)
(note 14 13 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 16 14 15 3 NOTE_INSN_DELETED)

(insn:TI 15 16 59 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 3 r3 [orig:133 ret ] [133])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 2 r2 [orig:155 D.4073 ] [155])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (expr_list:REG_DEAD (reg:SI 2 r2 [orig:155 D.4073 ] [155])
        (nil)))

(note 59 15 60 3 ( bits (nil)) NOTE_INSN_VAR_LOCATION)

(note 60 59 17 3 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:133 ret ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 17 60 61 3 arch/arm/vfp/vfpdouble.c:58 (set (reg/v:SI 3 r3 [orig:135 bits ] [135])
        (plus:SI (reg/v:SI 3 r3 [orig:133 ret ] [133])
            (const_int 31 [0x1f]))) 4 {*arm_addsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

(note 61 17 62 4 ( bits (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:135 bits ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 62 61 18 4 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 18 62 19 4 106 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 20 19 21 4 arch/arm/vfp/vfpdouble.c:62 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:135 bits ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 21 20 22 4 arch/arm/vfp/vfpdouble.c:62 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 1)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  EXIT [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  4 [61.0%]  (fallthru)
(note 22 21 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 36 22 23 5 NOTE_INSN_DELETED)

(insn:TI 23 36 34 5 arch/arm/vfp/vfpdouble.c:63 (set (reg:SI 12 ip [orig:143 <variable>.exponent ] [143])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:137 vd ] [137]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 34 23 33 5 arch/arm/vfp/vfpdouble.c:64 (set (reg:SI 2 r2)
        (reg/v:SI 3 r3 [orig:135 bits ] [135])) 167 {*arm_movsi_insn} (nil))

(insn:TI 33 34 63 5 arch/arm/vfp/vfpdouble.c:64 (set (reg:DI 0 r0)
        (mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(note 63 33 25 5 ( vd (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 25 63 28 5 arch/arm/vfp/vfpdouble.c:63 (set (reg:SI 12 ip [144])
        (plus:SI (reg:SI 12 ip [orig:143 <variable>.exponent ] [143])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn:TI 28 25 64 5 arch/arm/vfp/vfpdouble.c:63 (set (reg:SI 3 r3 [147])
        (minus:SI (reg:SI 12 ip [144])
            (reg/v:SI 3 r3 [orig:135 bits ] [135]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 12 ip [144])
        (nil)))

(note 64 28 29 5 ( bits (nil)) NOTE_INSN_VAR_LOCATION)

(insn 29 64 35 5 arch/arm/vfp/vfpdouble.c:63 (set (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:137 vd ] [137]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 3 r3 [147])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [147])
        (nil)))

(call_insn/u:TI 35 29 37 5 arch/arm/vfp/vfpdouble.c:64 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn:TI 37 35 54 5 arch/arm/vfp/vfpdouble.c:64 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:137 vd ] [137])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(jump_insn:TI 54 37 53 5 (return) 260 {return} (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 53 54 49)

(note 49 53 50 NOTE_INSN_DELETED)

(note 50 49 0 NOTE_INSN_DELETED)


;; Function vfp_double_normaliseround (vfp_double_normaliseround)[0:153]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 3: exceptions+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg:SI 1 r1 [ vd ])
  name: fpscr
    offset 0
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg:SI 3 r3 [ exceptions ])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 3:
IN:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Variables:
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 4:
IN:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 3: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Variables:
  name: significand
    offset 0
      (reg:SI 3 r3 [orig:169 significand ] [169])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 5:
IN:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 3: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Variables:
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 3 r3 [orig:169 significand ] [169])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])

OUT:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 3: shift+0 ret+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Variables:
  name: significand
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 6:
IN:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Variables:
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])

OUT:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 3: shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])


Basic block 7:
IN:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Variables:
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])

OUT:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 3: shift+0 ret+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 8:
IN:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Variables:
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])

OUT:
Stack adjustment: 64
Reg 0: significand+0
Reg 1: significand+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:260 significand ] [260])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 9:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Variables:
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])

OUT:
Stack adjustment: 64
Reg 0: dd+0 significand+0
Reg 1: vd+0 significand+4
Reg 2: fpscr+0
Reg 3: shift+0 ret+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 10:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Reg 12: underflow+0
Variables:
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])

OUT:
Stack adjustment: 64
Reg 0: dd+0 significand+0
Reg 1: vd+0 significand+4
Reg 2: fpscr+0
Reg 3: shift+0 ret+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Reg 12: underflow+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])


Basic block 11:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 0: dd+0 significand+0
Reg 1: vd+0 significand+4
Reg 2: fpscr+0
Reg 3: shift+0 ret+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 12:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 13:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 14:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 10: fpscr+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 15:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: fpscr+0
Reg 12: underflow+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])

OUT:
Stack adjustment: 64
Reg 0: dd+0 significand+0
Reg 1: vd+0 significand+4
Reg 2: fpscr+0
Reg 3: shift+0 ret+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: rmode+0
Reg 12: underflow+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: fpscr
    offset 0
      (reg:SI 2 r2 [ fpscr ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:138 rmode ] [138])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])


Basic block 16:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: rmode+0
Reg 12: underflow+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: fpscr
    offset 0
      (reg:SI 2 r2 [ fpscr ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:138 rmode ] [138])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])

OUT:
Stack adjustment: 64
Reg 2: incr+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: rmode+0
Reg 12: underflow+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: incr
    offset 0
      (reg:SI 2 r2 [orig:142 incr ] [142])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:138 rmode ] [138])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])


Basic block 17:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: rmode+0
Reg 12: underflow+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: fpscr
    offset 0
      (reg:SI 2 r2 [ fpscr ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:138 rmode ] [138])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])

OUT:
Stack adjustment: 64
Reg 0: dd+0 significand+0
Reg 1: vd+0 significand+4
Reg 2: fpscr+0
Reg 3: shift+0 ret+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: rmode+0
Reg 12: underflow+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: fpscr
    offset 0
      (reg:SI 2 r2 [ fpscr ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:138 rmode ] [138])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])


Basic block 18:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: rmode+0
Reg 12: underflow+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: fpscr
    offset 0
      (reg:SI 2 r2 [ fpscr ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:138 rmode ] [138])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])

OUT:
Stack adjustment: 64
Reg 0: dd+0 significand+0
Reg 1: vd+0 significand+4
Reg 2: incr+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: incr
    offset 0
      (reg:SI 2 r2 [orig:142 incr ] [142])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])


Basic block 19:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: incr+0 fpscr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: rmode+0
Reg 12: underflow+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: fpscr
    offset 0
      (reg:SI 2 r2 [ fpscr ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: incr
    offset 0
      (reg:SI 2 r2 [orig:142 incr ] [142])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:138 rmode ] [138])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])

OUT:
Stack adjustment: 64
Reg 0: dd+0 significand+0
Reg 1: vd+0 significand+4
Reg 2: incr+0
Reg 3: shift+0 ret+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: rmode+0
Reg 12: underflow+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: incr
    offset 0
      (reg:SI 2 r2 [orig:142 incr ] [142])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:138 rmode ] [138])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])


Basic block 20:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: incr+0
Reg 3: ret+0 shift+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: rmode+0
Reg 12: underflow+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 3 r3 [orig:137 ret ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: incr
    offset 0
      (reg:SI 2 r2 [orig:142 incr ] [142])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: shift
    offset 0
      (reg/v:SI 3 r3 [orig:140 shift ] [140])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:138 rmode ] [138])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])

OUT:
Stack adjustment: 64
Reg 0: dd+0 significand+0
Reg 1: vd+0 significand+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])


Basic block 21:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 0: dd+0 significand+0
Reg 1: vd+0 significand+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 22:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 0: dd+0 significand+0
Reg 1: vd+0 significand+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 23:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 2: incr+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: incr
    offset 0
      (reg/v:DI 2 r2 [orig:142 incr ] [142])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 24:
IN:
Stack adjustment: 64
Reg 0: significand+0 dd+0
Reg 1: significand+4 vd+0
Reg 2: incr+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
      (reg:SI 0 r0 [orig:256 significand ] [256])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 1 r1 [orig:257 significand+4 ] [257])
  name: incr
    offset 0
      (reg/v:DI 2 r2 [orig:142 incr ] [142])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 2: incr+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: incr
    offset 0
      (reg/v:DI 2 r2 [orig:142 incr ] [142])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 25:
IN:
Stack adjustment: 64
Reg 2: incr+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: incr
    offset 0
      (reg/v:DI 2 r2 [orig:142 incr ] [142])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 26:
IN:
Stack adjustment: 64
Reg 2: incr+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: incr
    offset 0
      (reg/v:DI 2 r2 [orig:142 incr ] [142])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 27:
IN:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])

OUT:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 28:
IN:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])

OUT:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 29:
IN:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])


Basic block 30:
IN:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])


Basic block 31:
IN:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 32:
IN:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 33:
IN:
Stack adjustment: 64
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
      (reg:SI 5 r5 [ significand+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 11 fp [ significand.542+4 ])
      (reg:SI 5 r5 [ significand+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


Basic block 34:
IN:
Stack adjustment: 64
Reg 0: dd+0
Reg 1: vd+0
Reg 2: fpscr+0
Reg 3: significand+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: vd+0
Reg 7: exceptions+0
Reg 8: exponent+0
Reg 10: significand+0 fpscr+0
Reg 11: significand+4
Reg 12: underflow+0
Variables:
  name: significand
    offset 0
      (reg:SI 3 r3 [orig:169 significand ] [169])
      (reg:SI 10 sl [orig:133 significand.542 ] [133])
      (reg:SI 4 r4 [orig:143 significand ] [143])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
      (reg:SI 11 fp [ significand.542+4 ])
  name: exponent
    offset 0
      (reg/v:SI 8 r8 [orig:141 exponent ] [141])
  name: underflow
    offset 0
      (reg/v:SI 12 ip [orig:139 underflow ] [139])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
      (reg/f:SI 1 r1 [orig:151 vd ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
      (reg:SI 2 r2 [ fpscr ])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])

OUT:
Stack adjustment: 64
Reg 6: vd+0
Reg 7: exceptions+0
Variables:
  name: vd
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 func+0 S4 A32])


35 basic blocks, 53 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 12 [ip]
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  kill	

Successors:  3 [28.0%]  (fallthru) 4 [72.0%] 
;; lr  out 	 1 [r1] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1] 24 [cc]

Successors:  34 [50.0%]  4 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 8908, maybe hot.
Predecessors:  2 [72.0%]  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

Successors:  5 [61.0%]  (fallthru) 34 [39.0%] 
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]

Invalid sum of incoming frequencies 8600, should be 8908

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  4 [61.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 3 [r3] 8 [r8] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 8 [r8] 24 [cc]
;; live  kill	

Successors:  6 [28.0%]  (fallthru) 7 [72.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1521, maybe hot.
Predecessors:  5 [28.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  5 [72.0%]  6 [100.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8]
;; live  kill	 14 [lr]

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 8 [r8] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 12 [ip] 24 [cc]
;; live  kill	

Successors:  15 [50.0%]  10 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 8 [r8] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 8 [r8] 24 [cc]
;; live  kill	

Successors:  11 [50.0%]  (fallthru) 14 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 1358, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  (fallthru) 13 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 679, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

Successors:  14 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 679, maybe hot.
Predecessors:  11 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  10 [50.0%]  13 [100.0%]  (fallthru) 12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 8 [r8] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 12 [ip] 24 [cc]
;; live  kill	

Successors:  15 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  9 [50.0%]  14 [100.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 10 [sl] 24 [cc]
;; live  kill	

Successors:  16 [50.0%]  (fallthru) 17 [50.0%] 
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

Successors:  20 [100.0%] 
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  15 [50.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  19 [28.0%]  18 [72.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 1956, maybe hot.
Predecessors:  17 [72.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 6 [r6] 10 [sl] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

Successors:  19 [50.0%]  (fallthru) 20 [50.0%] 
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 1738, maybe hot.
Predecessors:  17 [28.0%]  18 [50.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

Successors:  20 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  19 [100.0%]  (fallthru) 18 [50.0%]  16 [100.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

Successors:  23 [50.0%]  21 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  20 [50.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  24 [71.0%]  22 [29.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 788, maybe hot.
Predecessors:  21 [29.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  23 [50.0%]  (fallthru) 24 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  22 [50.0%]  (fallthru) 20 [50.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 10 [sl] 11 [fp]
;; live  kill	 24 [cc]

Successors:  24 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]

Invalid sum of incoming frequencies 3111, should be 2717

Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 5434, maybe hot.
Predecessors:  23 [100.0%]  (fallthru) 21 [71.0%]  22 [50.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 0 [r0]

Successors:  25 [50.0%]  (fallthru) 26 [50.0%] 
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]

Invalid sum of incoming frequencies 5040, should be 5434

Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  24 [50.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 7 [r7] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 7 [r7] 24 [cc]
;; live  kill	 11 [fp]

Successors:  33 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  24 [50.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 24 [cc]

Successors:  29 [50.0%]  27 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 1359, maybe hot.
Predecessors:  26 [50.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  30 [71.0%]  28 [29.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 394, maybe hot.
Predecessors:  27 [29.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  29 [50.0%]  (fallthru) 30 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 1556, maybe hot.
Predecessors:  26 [50.0%]  28 [50.0%]  (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

Successors:  30 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 2719, maybe hot.
Predecessors:  27 [71.0%]  28 [50.0%]  29 [100.0%]  (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  32 [50.0%]  31 [50.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 1359, maybe hot.
Predecessors:  30 [50.0%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 7 [r7] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

Successors:  32 [100.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 2717, maybe hot.
Predecessors:  30 [50.0%]  31 [100.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

Successors:  33 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 5433, maybe hot.
Predecessors:  32 [100.0%]  (fallthru) 25 [100.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


Basic block 34 , prev 33, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  3 [50.0%]  4 [39.0%]  33 [100.0%]  (fallthru)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 10307, should be 10000

Basic block 1 , prev 34, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  34 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_normaliseround

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={24d,27u} r1={23d,22u} r2={28d,30u} r3={31d,31u} r4={8d,27u} r5={8d,20u} r6={2d,13u,3d} r7={5d,9u} r8={12d,20u} r9={4d,5u} r10={10d,17u} r11={8d,12u} r12={10d,6u} r13={3d,51u} r14={8d,3u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={43d,47u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 1230{887d,340u,3e} in 186{180 regular + 6 call} insns.
(note 1 0 545 NOTE_INSN_DELETED)

(note 545 1 546 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 546 545 547 2 ( vd (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ vd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 547 546 548 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 548 547 549 2 ( exceptions (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ exceptions ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 549 548 8 2 ( func (expr_list:REG_DEP_TRUE (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
            (const_int 4 [0x4])) [0 func+0 S4 A32])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 549 7 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 7 8 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 7 12 2 NOTE_INSN_DELETED)

(note 12 11 13 2 NOTE_INSN_DELETED)

(note 13 12 504 2 NOTE_INSN_DELETED)

(insn/f:TI 504 13 505 2 arch/arm/vfp/vfpdouble.c:71 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f:TI 505 504 506 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -28 [0xffffffffffffffe4]))) 4 {*arm_addsi3} (nil))

(note 506 505 5 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 5 506 410 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
        (reg:SI 3 r3 [ exceptions ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ exceptions ])
        (nil)))

(insn 410 5 550 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 3 r3 [158])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(note 550 410 2 2 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 2 550 3 2 arch/arm/vfp/vfpdouble.c:71 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-20 S4 A32])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 3 2 10 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
        (reg:SI 1 r1 [ vd ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 10 3 4 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 8 r8 [orig:148 D.4105 ] [148])
        (zero_extend:SI (mem/s/j:HI (reg/f:SI 1 r1 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 4 10 15 2 arch/arm/vfp/vfpdouble.c:71 (set (reg/v:SI 10 sl [orig:152 fpscr ] [152])
        (reg:SI 2 r2 [ fpscr ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 15 4 16 2 arch/arm/vfp/vfpdouble.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:148 D.4105 ] [148])
            (reg:SI 3 r3 [158]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [158])
        (nil)))

(jump_insn:TI 16 15 551 2 arch/arm/vfp/vfpdouble.c:81 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  4 [72.0%] 

(note 551 16 17 3 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:152 fpscr ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 1 [r1] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1] 24 [cc]

;; Pred edge  2 [28.0%]  (fallthru)
(note 17 551 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 18 17 25 3 NOTE_INSN_DELETED)

(note 25 18 31 3 NOTE_INSN_DELETED)

(note 31 25 33 3 NOTE_INSN_DELETED)

(note 33 31 23 3 NOTE_INSN_DELETED)

(insn:TI 23 33 552 3 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 0 r0 [orig:163 <variable>.significand ] [163])
        (mem/s/j:SI (plus:SI (reg/f:SI 1 r1 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
        (nil)))

(note 552 23 19 3 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn 19 552 24 3 arch/arm/vfp/vfpdouble.c:81 discrim 1 (parallel [
            (set (reg:SI 2 r2 [160])
                (ne:SI (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn:TI 24 19 553 3 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 1 r1 [orig:164 <variable>.significand+4 ] [164])
        (mem/s/j:SI (plus:SI (reg/f:SI 1 r1 [orig:151 vd ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(note 553 24 22 3 ( vd (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 22 553 26 3 arch/arm/vfp/vfpdouble.c:81 discrim 1 (set (reg:QI 3 r3 [161])
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 26 22 29 3 arch/arm/vfp/vfpdouble.c:81 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0 [orig:163 <variable>.significand ] [163])
                        (reg:SI 1 r1 [orig:164 <variable>.significand+4 ] [164]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:164 <variable>.significand+4 ] [164])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:163 <variable>.significand ] [163])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(insn:TI 29 26 32 3 arch/arm/vfp/vfpdouble.c:81 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:QI 3 r3 [161])
            (const_int 1 [0x1]))) 2350 {neon_vornv2di+83} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn:TI 32 29 34 3 arch/arm/vfp/vfpdouble.c:81 (set (reg:SI 3 r3 [167])
        (ior:SI (reg:SI 2 r2 [160])
            (reg:SI 3 r3 [161]))) 89 {*arm_iorsi3} (nil))

(insn:TI 34 32 35 3 arch/arm/vfp/vfpdouble.c:81 (set (reg:CC_Z 24 cc)
        (compare:CC_Z (reg:QI 3 r3 [167])
            (const_int 0 [0x0]))) 151 {*compareqi_eq0} (expr_list:REG_DEAD (reg:QI 3 r3 [167])
        (nil)))

(jump_insn:TI 35 34 554 3 arch/arm/vfp/vfpdouble.c:81 (set (pc)
        (if_then_else (ne (reg:CC_Z 24 cc)
                (const_int 0 [0x0]))
            (label_ref 295)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_Z 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 34 4)
;; lr  out 	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  34 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

(note 554 35 555 4 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 555 554 556 4 ( vd (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 556 555 36 4 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:152 fpscr ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
;; Pred edge  3 [50.0%]  (fallthru)
(code_label 36 556 37 4 110 "" [1 uses])

(note 37 36 39 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 39 37 40 4 NOTE_INSN_DELETED)

(note 40 39 38 4 NOTE_INSN_DELETED)

(insn:TI 38 40 557 4 arch/arm/vfp/vfpdouble.c:87 (set (reg/v:DI 4 r4 [orig:143 significand ] [143])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(note 557 38 41 4 ( significand (expr_list:REG_DEP_TRUE (reg/v:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 41 557 559 4 arch/arm/vfp/vfpdouble.c:87 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:143 significand ] [143])
                        (reg:SI 5 r5 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [orig:169 significand ] [169])
                (ior:SI (reg:SI 4 r4 [orig:143 significand ] [143])
                    (reg:SI 5 r5 [ significand+4 ])))
        ]) 91 {*iorsi3_compare0} (nil))

(note 559 41 558 4 ( significand (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [orig:169 significand ] [169])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 5 r5 [ significand+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(note 558 559 46 4 ( significand (expr_list:REG_DEP_TRUE (reg/v:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 46 558 42 4 arch/arm/vfp/vfpdouble.c:88 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64])
            (reg:HI 3 r3 [orig:169 significand ] [169]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:HI 3 r3 [orig:169 significand ] [169])
        (nil)))

(jump_insn:TI 42 46 50 4 arch/arm/vfp/vfpdouble.c:87 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 295)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 34)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  34 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 3 [r3] 8 [r8] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  4 [61.0%]  (fallthru)
(note 50 42 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 52 50 55 5 NOTE_INSN_DELETED)

(note 55 52 54 5 NOTE_INSN_DELETED)

(insn:TI 54 55 560 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 3 r3 [orig:137 ret ] [137])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 5 r5 [ significand+4 ])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(note 560 54 561 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(note 561 560 57 5 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 ret ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 57 561 562 5 arch/arm/vfp/vfpdouble.c:96 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:140 shift ] [140])
            (const_int 32 [0x20]))) 219 {*arm_cmpsi_insn} (nil))

(note 562 57 51 5 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 shift ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 51 562 563 5 arch/arm/vfp/vfpdouble.c:92 (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
        (sign_extend:SI (reg:HI 8 r8 [orig:148 D.4105 ] [148]))) 155 {*arm_extendhisi2_v6} (nil))

(note 563 51 58 5 ( exponent (expr_list:REG_DEP_TRUE (reg/v:SI 8 r8 [orig:141 exponent ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 58 563 59 5 arch/arm/vfp/vfpdouble.c:96 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  6 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  5 [28.0%]  (fallthru)
(note 59 58 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 61 59 60 6 NOTE_INSN_DELETED)

(insn:TI 60 61 565 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 3 r3 [orig:136 ret ] [136])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 4 r4 [orig:143 significand ] [143])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1139895)) -1 (nil))

(note 565 60 566 6 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:136 ret ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 566 565 567 6 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(note 567 566 564 6 ( shift (nil)) NOTE_INSN_VAR_LOCATION)

(note 564 567 62 6 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 62 564 568 6 arch/arm/vfp/vfpdouble.c:97 (set (reg/v:SI 3 r3 [orig:140 shift ] [140])
        (plus:SI (reg/v:SI 3 r3 [orig:136 ret ] [136])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

(note 568 62 569 7 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(note 569 568 570 7 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 shift ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 570 569 63 7 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 ret ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [72.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 63 570 64 7 114 "" [1 uses])

(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 65 64 66 7 arch/arm/vfp/vfpdouble.c:98 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:140 shift ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 66 65 67 7 arch/arm/vfp/vfpdouble.c:98 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8]
;; live  kill	 14 [lr]

;; Pred edge  7 [50.0%]  (fallthru)
(note 67 66 352 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 352 67 353 8 NOTE_INSN_DELETED)

(note 353 352 501 8 NOTE_INSN_DELETED)

(insn:TI 501 353 571 8 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:143 significand ] [143])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:143 significand ] [143])
        (nil)))

(note 571 501 502 8 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn 502 571 70 8 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
        (nil)))

(insn:TI 70 502 68 8 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 2 r2)
        (reg/v:SI 3 r3 [orig:140 shift ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 68 70 71 8 arch/arm/vfp/vfpdouble.c:99 (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
        (minus:SI (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (reg/v:SI 3 r3 [orig:140 shift ] [140]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:140 shift ] [140])
        (nil)))

(call_insn/u:TI 71 68 573 8 arch/arm/vfp/vfpdouble.c:100 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(note 573 71 572 8 ( shift (nil)) NOTE_INSN_VAR_LOCATION)

(note 572 573 400 8 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 400 572 401 8 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 4 r4 [orig:260 significand ] [260])
        (reg:SI 0 r0 [orig:256 significand ] [256])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:256 significand ] [256])
        (nil)))

(insn 401 400 574 8 arch/arm/vfp/vfpdouble.c:100 (set (reg:SI 5 r5 [ significand+4 ])
        (reg:SI 1 r1 [orig:257 significand+4 ] [257])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:257 significand+4 ] [257])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

(note 574 401 575 9 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 ret ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 575 574 576 9 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 shift ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 576 575 577 9 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 577 576 578 9 ( vd (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 578 577 74 9 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:152 fpscr ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 8 [r8] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 74 578 75 9 115 "" [1 uses])

(note 75 74 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn:TI 76 75 79 9 arch/arm/vfp/vfpdouble.c:113 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 79 76 579 9 arch/arm/vfp/vfpdouble.c:113 (cond_exec (ge (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:139 underflow ] [139])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(note 579 79 77 9 ( underflow (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:139 underflow ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 77 579 83 9 arch/arm/vfp/vfpdouble.c:113 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 142)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 15 10)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  15 [50.0%] 
;; Succ edge  10 [50.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 8 [r8] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 83 77 84 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 84 83 580 10 arch/arm/vfp/vfpdouble.c:114 (set (reg:SI 8 r8 [orig:147 D.4126 ] [147])
        (neg:SI (reg/v:SI 8 r8 [orig:141 exponent ] [141]))) 127 {*arm_negsi2} (nil))

(note 580 84 86 10 ( exponent (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 86 580 87 10 arch/arm/vfp/vfp.h:25 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:147 D.4126 ] [147])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 87 86 88 10 arch/arm/vfp/vfp.h:25 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 88 87 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 89 88 90 11 arch/arm/vfp/vfp.h:26 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:147 D.4126 ] [147])
            (const_int 63 [0x3f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 90 89 91 11 arch/arm/vfp/vfp.h:26 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 115)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  11 [50.0%]  (fallthru)
(note 91 90 358 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 358 91 359 12 NOTE_INSN_DELETED)

(note 359 358 97 12 NOTE_INSN_DELETED)

(note 97 359 364 12 NOTE_INSN_DELETED)

(note 364 97 365 12 NOTE_INSN_DELETED)

(note 365 364 106 12 NOTE_INSN_DELETED)

(note 106 365 93 12 NOTE_INSN_DELETED)

(insn:TI 93 106 493 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (reg:SI 8 r8 [orig:147 D.4126 ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 493 93 581 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:143 significand ] [143])) 167 {*arm_movsi_insn} (nil))

(note 581 493 494 12 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 494 581 94 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (nil))

(call_insn/u:TI 94 494 584 12 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(note 584 94 583 12 ( underflow (nil)) NOTE_INSN_VAR_LOCATION)

(note 583 584 582 12 ( shift (nil)) NOTE_INSN_VAR_LOCATION)

(note 582 583 99 12 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(insn 99 582 412 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (minus:SI (const_int 64 [0x40])
            (reg:SI 8 r8 [orig:147 D.4126 ] [147]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:147 D.4126 ] [147])
        (nil)))

(insn:TI 412 99 495 12 arch/arm/vfp/vfp.h:27 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-16 S4 A64])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 495 412 413 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:143 significand ] [143])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:143 significand ] [143])
        (nil)))

(insn:TI 413 495 496 12 arch/arm/vfp/vfp.h:27 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-12 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 496 413 100 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
        (nil)))

(call_insn/u:TI 100 496 497 12 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 497 100 498 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 498 497 406 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 406 498 405 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 9 r9 [+8 ])
        (reg:SI 1 r1 [orig:259+8 ] [259])) 167 {*arm_movsi_insn} (nil))

(insn 405 406 105 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 8 r8 [orig:261+4 ] [261])
        (reg:SI 0 r0 [orig:258+4 ] [258])) 167 {*arm_movsi_insn} (nil))

(call_insn/u:TI 105 405 107 12 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn:TI 107 105 414 12 arch/arm/vfp/vfp.h:27 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 414 107 491 12 arch/arm/vfp/vfp.h:27 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-16 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 491 414 492 12 arch/arm/vfp/vfp.h:27 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 8 r8 [orig:180+4 ] [180])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(insn 492 491 489 12 arch/arm/vfp/vfp.h:27 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 9 r9 [+8 ])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn:TI 489 492 585 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 4 r4 [orig:143 significand ] [143])
        (ior:SI (reg:SI 8 r8 [orig:180+4 ] [180])
            (reg:SI 0 r0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 585 489 490 12 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 490 585 586 12 arch/arm/vfp/vfp.h:27 (set (reg:SI 5 r5 [ significand+4 ])
        (ior:SI (reg:SI 9 r9 [+8 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+8 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 586 490 539 12 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 539 586 540 12 (set (pc)
        (label_ref 125)) -1 (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 540 539 587)

(note 587 540 588 13 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 588 587 589 13 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 ret ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 589 588 590 13 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 shift ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 590 589 591 13 ( underflow (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:139 underflow ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 591 590 592 13 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 592 591 593 13 ( vd (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 593 592 115 13 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:152 fpscr ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  11 [50.0%] 
(code_label 115 593 116 13 119 "" [1 uses])

(note 116 115 120 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 120 116 485 13 NOTE_INSN_DELETED)

(insn:TI 485 120 594 13 arch/arm/vfp/vfp.h:29 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:143 significand ] [143])) 167 {*arm_movsi_insn} (nil))

(note 594 485 486 13 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn 486 594 487 13 arch/arm/vfp/vfp.h:29 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 487 486 488 13 arch/arm/vfp/vfp.h:29 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 488 487 595 13 arch/arm/vfp/vfp.h:29 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 595 488 596 13 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(note 596 595 119 13 ( shift (nil)) NOTE_INSN_VAR_LOCATION)

(call_insn/u:TI 119 596 597 13 arch/arm/vfp/vfp.h:29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(note 597 119 121 13 ( underflow (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 121 597 483 13 arch/arm/vfp/vfp.h:29 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn:TI 483 121 598 13 arch/arm/vfp/vfp.h:29 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 4 r4 [orig:143 significand ] [143])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 598 483 484 13 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 484 598 599 13 arch/arm/vfp/vfp.h:29 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 5 r5 [ significand+4 ])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

(note 599 484 600 14 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 600 599 601 14 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 601 600 602 14 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 ret ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 602 601 603 14 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 shift ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 603 602 604 14 ( underflow (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:139 underflow ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 604 603 605 14 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 605 604 606 14 ( vd (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 606 605 125 14 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:152 fpscr ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 10 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 8 [r8] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 125 606 126 14 118 "" [2 uses])

(note 126 125 129 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 129 126 130 14 NOTE_INSN_DELETED)

(note 130 129 479 14 NOTE_INSN_DELETED)

(insn:TI 479 130 478 14 arch/arm/vfp/vfpdouble.c:121 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 478 479 607 14 arch/arm/vfp/vfpdouble.c:121 (set (reg:SI 0 r0 [184])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(note 607 478 481 14 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 481 607 482 14 arch/arm/vfp/vfpdouble.c:121 (set (reg:SI 2 r2 [183])
        (and:SI (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 0 r0 [184]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [184])
        (nil)))

(insn 482 481 608 14 arch/arm/vfp/vfpdouble.c:121 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(note 608 482 609 14 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(note 609 608 131 14 ( shift (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 131 609 134 14 arch/arm/vfp/vfpdouble.c:121 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [183])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (set (reg:SI 1 r1 [185])
                (ior:SI (reg:SI 2 r2 [183])
                    (reg:SI 3 r3 [+4 ])))
        ]) 91 {*iorsi3_compare0} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn:TI 134 131 140 14 arch/arm/vfp/vfpdouble.c:122 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:139 underflow ] [139])
            (reg:SI 1 r1 [185]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:SI 1 r1 [185])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 140 134 135 14 arch/arm/vfp/vfpdouble.c:115 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:139 underflow ] [139])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn:TI 135 140 610 14 arch/arm/vfp/vfpdouble.c:115 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (reg/v:SI 12 ip [orig:139 underflow ] [139]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 610 135 141 14 ( exponent (expr_list:REG_DEP_TRUE (reg/v:SI 8 r8 [orig:141 exponent ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 141 610 611 14 arch/arm/vfp/vfpdouble.c:115 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru)

(note 611 141 612 15 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 612 611 613 15 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 ret ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 613 612 614 15 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 shift ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 614 613 615 15 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 615 614 616 15 ( vd (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 616 615 142 15 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:152 fpscr ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 9 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 10 [sl] 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 142 616 143 15 117 "" [1 uses])

(note 143 142 144 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 144 143 145 15 NOTE_INSN_DELETED)

(insn:TI 145 144 617 15 arch/arm/vfp/vfpdouble.c:131 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 10 sl [orig:152 fpscr ] [152])
                        (const_int 12582912 [0xc00000]))
                    (const_int 0 [0x0])))
            (set (reg/v:SI 10 sl [orig:138 rmode ] [138])
                (and:SI (reg/v:SI 10 sl [orig:152 fpscr ] [152])
                    (const_int 12582912 [0xc00000])))
        ]) 69 {*andsi3_compare0} (nil))

(note 617 145 618 15 ( rmode (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:138 rmode ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 618 617 146 15 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 146 618 147 15 arch/arm/vfp/vfpdouble.c:131 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 163)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  16 [50.0%]  (fallthru)
;; Succ edge  17 [50.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  15 [50.0%]  (fallthru)
(note 147 146 150 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 150 147 151 16 NOTE_INSN_DELETED)

(note 151 150 475 16 NOTE_INSN_DELETED)

(insn:TI 475 151 474 16 arch/arm/vfp/vfpdouble.c:133 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 474 475 619 16 arch/arm/vfp/vfpdouble.c:133 (set (reg:SI 0 r0 [187])
        (const_int 2048 [0x800])) 167 {*arm_movsi_insn} (nil))

(note 619 474 476 16 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 476 619 620 16 arch/arm/vfp/vfpdouble.c:133 (set (reg:SI 2 r2 [186])
        (and:SI (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 0 r0 [187]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [187])
        (nil)))

(note 620 476 477 16 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 477 620 621 16 arch/arm/vfp/vfpdouble.c:133 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(note 621 477 622 16 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(note 622 621 152 16 ( shift (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 152 622 471 16 arch/arm/vfp/vfpdouble.c:133 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [186])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_UNUSED (reg:SI 1 r1)
            (nil))))

(insn:TI 471 152 623 16 arch/arm/vfp/vfpdouble.c:134 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:142 incr ] [142])
            (const_int 1023 [0x3ff]))) 2345 {neon_vornv2di+78} (nil))

(note 623 471 469 16 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 469 623 624 16 arch/arm/vfp/vfpdouble.c:132 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:142 incr ] [142])
            (const_int 1024 [0x400]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(note 624 469 541 16 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 541 624 542 16 (set (pc)
        (label_ref 512)) -1 (nil))
;; End of basic block 16 -> ( 20)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  20 [100.0%] 

(barrier 542 541 625)

(note 625 542 626 17 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 626 625 627 17 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(note 627 626 628 17 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 ret ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 628 627 629 17 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 shift ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 629 628 630 17 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 630 629 631 17 ( vd (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 631 630 163 17 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [50.0%] 
(code_label 163 631 164 17 123 "" [1 uses])

(note 164 163 165 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:TI 165 164 166 17 arch/arm/vfp/vfpdouble.c:135 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:138 rmode ] [138])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 166 165 167 17 arch/arm/vfp/vfpdouble.c:135 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  19 [28.0%] 
;; Succ edge  18 [72.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 6 [r6] 10 [sl] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  17 [72.0%]  (fallthru)
(note 167 166 168 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 168 167 169 18 NOTE_INSN_DELETED)

(note 169 168 172 18 NOTE_INSN_DELETED)

(note 172 169 175 18 NOTE_INSN_DELETED)

(note 175 172 176 18 NOTE_INSN_DELETED)

(note 176 175 171 18 NOTE_INSN_DELETED)

(insn:TI 171 176 632 18 arch/arm/vfp/vfpdouble.c:137 (set (reg:SI 3 r3 [orig:192 <variable>.sign ] [192])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 632 171 633 18 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(note 633 632 173 18 ( shift (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 173 633 177 18 arch/arm/vfp/vfpdouble.c:137 (parallel [
            (set (reg:SI 3 r3 [193])
                (ne:SI (reg:SI 3 r3 [orig:192 <variable>.sign ] [192])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn:TI 177 173 634 18 arch/arm/vfp/vfpdouble.c:137 (parallel [
            (set (reg:SI 10 sl [196])
                (xor:SI (eq:SI (reg/v:SI 10 sl [orig:138 rmode ] [138])
                        (const_int 4194304 [0x400000]))
                    (reg:SI 3 r3 [193])))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_DEAD (reg:SI 3 r3 [193])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(note 634 177 178 18 ( rmode (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 178 634 466 18 arch/arm/vfp/vfpdouble.c:137 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [196])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl [196])
        (nil)))

(insn:TI 466 178 635 18 arch/arm/vfp/vfpdouble.c:138 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:142 incr ] [142])
            (const_int 2047 [0x7ff]))) 2345 {neon_vornv2di+78} (nil))

(note 635 466 636 18 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(note 636 635 179 18 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 179 636 637 18 arch/arm/vfp/vfpdouble.c:137 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 512)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

(note 637 179 638 19 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 ret ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 638 637 639 19 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 shift ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 639 638 640 19 ( rmode (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:138 rmode ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 640 639 184 19 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 17 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  17 [28.0%] 
;; Pred edge  18 [50.0%]  (fallthru)
(code_label 184 640 185 19 126 "" [1 uses])

(note 185 184 464 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:TI 464 185 641 19 arch/arm/vfp/vfpdouble.c:136 (set (reg:SI 2 r2 [orig:142 incr ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 20)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  20 [100.0%]  (fallthru)

(note 641 464 642 20 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(note 642 641 512 20 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 19 18 16) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  18 [50.0%] 
;; Pred edge  16 [100.0%] 
(code_label 512 642 510 20 138 "" [2 uses])

(note 510 512 462 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:TI 462 510 644 20 arch/arm/vfp/vfpdouble.c:145 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [10])
                        (reg:SI 4 r4 [orig:143 significand ] [143]))
                    (reg:SI 2 r2 [10])))
            (set (reg:SI 10 sl)
                (plus:SI (reg:SI 2 r2 [10])
                    (reg:SI 4 r4 [orig:143 significand ] [143])))
        ]) 10 {*addsi3_compare_op1} (nil))

(note 644 462 643 20 ( rmode (nil)) NOTE_INSN_VAR_LOCATION)

(note 643 644 465 20 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 465 643 645 20 arch/arm/vfp/vfpdouble.c:136 (set (reg:SI 3 r3 [ incr+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 645 465 646 20 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(note 646 645 647 20 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

(note 647 646 463 20 ( shift (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 463 647 648 20 arch/arm/vfp/vfpdouble.c:145 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [orig:11+4 ] [11])
                (reg:SI 5 r5 [ significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(note 648 463 416 20 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 416 648 190 20 arch/arm/vfp/vfpdouble.c:145 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-16 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn:TI 190 416 191 20 arch/arm/vfp/vfpdouble.c:145 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 11 fp))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp)
        (nil)))

(jump_insn:TI 191 190 338 20 arch/arm/vfp/vfpdouble.c:145 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 351)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]


;; Succ edge  23 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 338 191 193 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 193 338 339 21 arch/arm/vfp/vfpdouble.c:145 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 21 -> ( 24 22)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]


;; Succ edge  24 [71.0%] 
;; Succ edge  22 [29.0%]  (fallthru)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  21 [29.0%]  (fallthru)
(note 339 193 194 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:TI 194 339 195 22 arch/arm/vfp/vfpdouble.c:145 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 10 sl))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(jump_insn:TI 195 194 351 22 arch/arm/vfp/vfpdouble.c:145 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22 20) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 10 [sl] 11 [fp]
;; live  kill	 24 [cc]

;; Pred edge  22 [50.0%]  (fallthru)
;; Pred edge  20 [50.0%] 
(code_label 351 195 201 23 137 "" [1 uses])

(note 201 351 409 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 409 201 203 23 NOTE_INSN_DELETED)

(insn:TI 203 409 649 23 arch/arm/vfp/vfpdouble.c:147 (parallel [
            (set (reg:DI 0 r0)
                (lshiftrt:DI (reg/v:DI 4 r4 [orig:143 significand ] [143])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(note 649 203 417 23 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn 417 649 452 23 arch/arm/vfp/vfpdouble.c:147 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-8 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn:TI 452 417 453 23 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 453 452 454 23 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 454 453 455 23 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 10 sl)
        (and:SI (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 0 r0))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:143 significand ] [143])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 455 454 456 23 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(insn:TI 456 455 650 23 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 4 r4 [orig:143 significand ] [143])
        (reg:SI 10 sl)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(note 650 456 457 23 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 457 650 651 23 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 5 r5 [ significand+4 ])
        (reg:SI 11 fp [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (nil)))

(note 651 457 421 23 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 421 651 207 23 arch/arm/vfp/vfpdouble.c:147 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-8 S8 A64])) 163 {*arm_movdi} (nil))

(insn 207 421 652 23 arch/arm/vfp/vfpdouble.c:148 (parallel [
            (set (reg/v:DI 2 r2 [orig:142 incr ] [142])
                (lshiftrt:DI (reg/v:DI 2 r2 [orig:142 incr ] [142])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(note 652 207 202 23 ( incr (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [orig:142 incr ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 202 652 458 23 arch/arm/vfp/vfpdouble.c:146 (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
        (plus:SI (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn:TI 458 202 653 23 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 4 r4 [orig:143 significand ] [143])
        (ior:SI (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 10 sl))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(note 653 458 459 23 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 459 653 654 23 arch/arm/vfp/vfpdouble.c:147 (set (reg:SI 5 r5 [ significand+4 ])
        (ior:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 11 fp [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (nil)))
;; End of basic block 23 -> ( 24)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  24 [100.0%]  (fallthru)

(note 654 459 655 24 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 655 654 656 24 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:143 significand ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 656 655 657 24 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 657 656 208 24 ( vd (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 23 21 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  21 [71.0%] 
;; Pred edge  22 [50.0%] 
(code_label 208 657 209 24 127 "" [2 uses])

(note 209 208 212 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 212 209 213 24 NOTE_INSN_DELETED)

(note 213 212 210 24 NOTE_INSN_DELETED)

(note 210 213 447 24 NOTE_INSN_DELETED)

(insn:TI 447 210 448 24 arch/arm/vfp/vfpdouble.c:160 (set (reg:SI 10 sl)
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (nil))

(insn 448 447 450 24 arch/arm/vfp/vfpdouble.c:160 (set (reg:SI 11 fp [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 450 448 658 24 arch/arm/vfp/vfpdouble.c:160 (set (reg:SI 0 r0)
        (and:SI (reg:SI 4 r4 [orig:143 significand ] [143])
            (reg:SI 10 sl))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(note 658 450 451 24 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn 451 658 214 24 arch/arm/vfp/vfpdouble.c:160 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (nil)))

(insn:TI 214 451 220 24 arch/arm/vfp/vfpdouble.c:160 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0)
                        (reg:SI 1 r1))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil)))))

(insn 220 214 217 24 arch/arm/vfp/vfpdouble.c:171 (set (reg:SI 0 r0 [202])
        (const_int 2045 [0x7fd])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2045 [0x7fd])
        (nil)))

(insn:TI 217 220 221 24 arch/arm/vfp/vfpdouble.c:161 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
            (ior:SI (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
                (const_int 16 [0x10])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 221 217 222 24 arch/arm/vfp/vfpdouble.c:171 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (reg:SI 0 r0 [202]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 222 221 223 24 arch/arm/vfp/vfpdouble.c:171 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 246)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  25 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 7 [r7] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 7 [r7] 24 [cc]
;; live  kill	 11 [fp]

;; Pred edge  24 [50.0%]  (fallthru)
(note 223 222 225 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 225 223 226 25 NOTE_INSN_DELETED)

(note 226 225 227 25 NOTE_INSN_DELETED)

(insn:TI 227 226 659 25 arch/arm/vfp/vfpdouble.c:173 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:142 incr ] [142])
                        (reg:SI 3 r3 [ incr+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 11 fp))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 11 fp)
        (nil)))

(note 659 227 224 25 ( incr (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [orig:142 incr ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 224 659 239 25 arch/arm/vfp/vfpdouble.c:172 (set (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
        (ior:SI (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
            (const_int 20 [0x14]))) 89 {*arm_iorsi3} (nil))

(insn:TI 239 224 660 25 arch/arm/vfp/vfpdouble.c:177 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [208])
            (const_int -63489 [0xffffffffffff07ff]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (const_int -63489 [0xffffffffffff07ff])
        (nil)))

(note 660 239 232 25 ( incr (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [orig:142 incr ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 232 660 241 25 arch/arm/vfp/vfpdouble.c:174 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64])
            (reg:HI 0 r0 [202]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:HI 0 r0 [202])
        (expr_list:REG_EQUAL (const_int 2045 [0x7fd])
            (nil))))

(insn:TI 241 232 444 25 arch/arm/vfp/vfpdouble.c:177 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64])
            (reg:HI 3 r3 [208]))) 2348 {neon_vornv2di+81} (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
        (nil)))

(insn 444 241 661 25 arch/arm/vfp/vfpdouble.c:175 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [206])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 661 444 445 25 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 445 661 442 25 arch/arm/vfp/vfpdouble.c:175 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [+4 ])
            (const_int 2147483647 [0x7fffffff]))) 2345 {neon_vornv2di+78} (nil))

(insn 442 445 443 25 arch/arm/vfp/vfpdouble.c:178 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [209])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 443 442 543 25 arch/arm/vfp/vfpdouble.c:178 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 543 443 544 25 (set (pc)
        (label_ref 523)) -1 (nil))
;; End of basic block 25 -> ( 33)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  33 [100.0%] 

(barrier 544 543 662)

(note 662 544 246 26 ( incr (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [orig:142 incr ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  24 [50.0%] 
(code_label 246 662 247 26 130 "" [1 uses])

(note 247 246 249 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 249 247 251 26 NOTE_INSN_DELETED)

(note 251 249 252 26 NOTE_INSN_DELETED)

(note 252 251 254 26 NOTE_INSN_DELETED)

(note 254 252 261 26 NOTE_INSN_DELETED)

(note 261 254 440 26 NOTE_INSN_DELETED)

(insn:TI 440 261 663 26 arch/arm/vfp/vfpdouble.c:166 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:133 significand.542 ] [133])
                        (reg:SI 4 r4 [orig:143 significand ] [143]))
                    (reg:SI 2 r2 [orig:133 significand.542 ] [133])))
            (set (reg:SI 10 sl [orig:133 significand.542 ] [133])
                (plus:SI (reg:SI 2 r2 [orig:133 significand.542 ] [133])
                    (reg:SI 4 r4 [orig:143 significand ] [143])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:143 significand ] [143])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:133 significand.542 ] [133])
            (nil))))

(note 663 440 441 26 ( significand (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 10 sl [orig:133 significand.542 ] [133])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 5 r5 [ significand+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn:TI 441 663 664 26 arch/arm/vfp/vfpdouble.c:166 (set (reg:SI 11 fp [ significand.542+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [orig:11 significand.542+4 ] [11])
                (reg:SI 5 r5 [ significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
            (expr_list:REG_DEAD (reg:SI 3 r3 [orig:11 significand.542+4 ] [11])
                (nil)))))

(note 664 441 250 26 ( significand (expr_list:REG_DEP_TRUE (reg:DI 10 sl [orig:133 significand.542 ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 250 664 665 26 arch/arm/vfp/vfpdouble.c:181 (set (reg:SI 2 r2 [249])
        (lshiftrt:SI (reg:SI 10 sl [orig:133 significand.542 ] [133])
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (nil))

(note 665 250 265 26 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 265 665 373 26 arch/arm/vfp/vfpdouble.c:183 (set (reg:QI 3 r3 [216])
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 373 265 374 26 arch/arm/vfp/vfpdouble.c:182 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (rotate:SI (reg:SI 11 fp [ significand.542+4 ])
                            (const_int 21 [0x15]))
                        (reg:SI 2 r2 [249]))
                    (const_int 0 [0x0])))
            (set (reg:SI 2 r2 [213])
                (ior:SI (rotate:SI (reg:SI 11 fp [ significand.542+4 ])
                        (const_int 21 [0x15]))
                    (reg:SI 2 r2 [249])))
        ]) 271 {*arith_shiftsi_compare0} (nil))

(insn:TI 374 373 262 26 arch/arm/vfp/vfpdouble.c:182 (set (reg/v:SI 8 r8 [orig:141 exponent ] [141])
        (if_then_else:SI (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 8 r8 [orig:141 exponent ] [141])
            (reg:SI 2 r2 [213]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:SI 2 r2 [213])
            (nil))))

(insn:TI 262 374 266 26 arch/arm/vfp/vfpdouble.c:183 (parallel [
            (set (reg:SI 2 r2 [215])
                (ne:SI (reg/v:SI 8 r8 [orig:141 exponent ] [141])
                    (const_int 0 [0x0])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 266 262 267 26 arch/arm/vfp/vfpdouble.c:183 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [ significand.542+4 ])
            (const_int -2147483648 [0xffffffff80000000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 267 266 343 26 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 276)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 26 -> ( 29 27)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]


;; Succ edge  29 [50.0%] 
;; Succ edge  27 [50.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  26 [50.0%]  (fallthru)
(note 343 267 269 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 269 343 344 27 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 279)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 27 -> ( 30 28)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  30 [71.0%] 
;; Succ edge  28 [29.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [29.0%]  (fallthru)
(note 344 269 270 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:TI 270 344 271 28 arch/arm/vfp/vfpdouble.c:183 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [orig:133 significand.542 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 271 270 276 28 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 279)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  29 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 26 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 2 [r2] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  26 [50.0%] 
;; Pred edge  28 [50.0%]  (fallthru)
(code_label 276 271 347 29 135 "" [1 uses])

(note 347 276 278 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:TI 278 347 279 29 arch/arm/vfp/vfpdouble.c:183 (set (reg:QI 3 r3 [216])
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 27 28 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  27 [71.0%] 
;; Pred edge  28 [50.0%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 279 278 348 30 134 "" [2 uses])

(note 348 279 280 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 280 348 282 30 NOTE_INSN_DELETED)

(note 282 280 281 30 NOTE_INSN_DELETED)

(insn:TI 281 282 283 30 arch/arm/vfp/vfpdouble.c:183 (set (reg:SI 3 r3 [220])
        (ior:SI (reg:SI 2 r2 [215])
            (reg:SI 3 r3 [216]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [215])
        (nil)))

(insn:TI 283 281 284 30 arch/arm/vfp/vfpdouble.c:183 (set (reg:CC_Z 24 cc)
        (compare:CC_Z (reg:QI 3 r3 [220])
            (const_int 0 [0x0]))) 151 {*compareqi_eq0} (expr_list:REG_DEAD (reg:QI 3 r3 [220])
        (nil)))

(jump_insn:TI 284 283 285 30 arch/arm/vfp/vfpdouble.c:183 (set (pc)
        (if_then_else (ne (reg:CC_Z 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_Z 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 32 31)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  32 [50.0%] 
;; Succ edge  31 [50.0%]  (fallthru)

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 7 [r7] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  30 [50.0%]  (fallthru)
(note 285 284 286 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:TI 286 285 289 31 arch/arm/vfp/vfpdouble.c:185 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 12 ip [orig:139 underflow ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:139 underflow ] [139])
        (nil)))

(insn:TI 289 286 290 31 arch/arm/vfp/vfpdouble.c:186 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
            (ior:SI (reg/v:SI 7 r7 [orig:153 exceptions ] [153])
                (const_int 8 [0x8])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 31 -> ( 32)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 30 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  30 [50.0%] 
;; Pred edge  31 [100.0%]  (fallthru)
(code_label 290 289 291 32 133 "" [1 uses])

(note 291 290 293 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:TI 293 291 292 32 arch/arm/vfp/vfpdouble.c:188 (parallel [
            (set (reg:DI 2 r2 [222])
                (lshiftrt:DI (reg/v:DI 10 sl [orig:133 significand.542 ] [133])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (expr_list:REG_EQUIV (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                    (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
            (nil))))

(insn 292 293 666 32 arch/arm/vfp/vfpdouble.c:187 (set (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64])
        (reg:HI 8 r8 [orig:141 exponent ] [141])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 8 r8 [orig:141 exponent ] [141])
        (nil)))
;; End of basic block 32 -> ( 33)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  33 [100.0%]  (fallthru)

(note 666 292 523 33 ( significand (expr_list:REG_DEP_TRUE (reg:DI 10 sl [orig:133 significand.542 ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 32 25) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%] 
(code_label 523 666 521 33 139 "" [1 uses])

(note 521 523 294 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:TI 294 521 667 33 arch/arm/vfp/vfpdouble.c:188 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg:DI 2 r2 [222])) 163 {*arm_movdi} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  34 [100.0%]  (fallthru)

(note 667 294 668 34 ( significand (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [orig:169 significand ] [169])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 5 r5 [ significand+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(note 668 667 669 34 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 669 668 670 34 ( vd (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 670 669 295 34 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:152 fpscr ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 4 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [39.0%] 
;; Pred edge  33 [100.0%]  (fallthru)
(code_label 295 670 296 34 111 ("pack") [2 uses])

(note 296 295 304 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 304 296 310 34 NOTE_INSN_DELETED)

(note 310 304 316 34 NOTE_INSN_DELETED)

(note 316 310 311 34 NOTE_INSN_DELETED)

(insn:TI 311 316 671 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 12 ip [orig:237 <variable>.significand ] [237])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 671 311 301 34 ( underflow (nil)) NOTE_INSN_VAR_LOCATION)

(insn 301 671 303 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 4 r4 [226])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 303 301 434 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 2 r2 [orig:228 <variable>.exponent ] [228])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vd ] [151]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 434 303 672 34 arch/arm/vfp/vfpdouble.c:197 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [231])
                        (reg:SI 4 r4 [230]))
                    (reg:SI 4 r4 [231])))
            (set (reg:SI 10 sl [231])
                (plus:SI (reg:SI 4 r4 [231])
                    (reg:SI 4 r4 [230])))
        ]) 10 {*addsi3_compare_op1} (nil))

(note 672 434 309 34 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 309 672 673 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 3 r3 [orig:236 <variable>.significand+4 ] [236])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 673 309 306 34 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 306 673 674 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 8 r8 [230])
        (reg:SI 4 r4 [226])) 167 {*arm_movsi_insn} (nil))

(note 674 306 298 34 ( exponent (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 298 674 312 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 14 lr [orig:224 <variable>.sign ] [224])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vd ] [151])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 312 298 675 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 0 r0 [234])
        (lshiftrt:SI (reg:SI 12 ip [orig:237 <variable>.significand ] [237])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:237 <variable>.significand ] [237])
        (nil)))

(note 675 312 305 34 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 305 675 318 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 9 r9 [+4 ])
        (ashift:SI (reg:SI 2 r2 [orig:228 <variable>.exponent ] [228])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:228 <variable>.exponent ] [228])
        (nil)))

(insn 318 305 313 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-20 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 313 318 315 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 0 r0 [234])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:236 <variable>.significand+4 ] [236])
                (const_int 22 [0x16]))
            (reg:SI 0 r0 [234]))) 270 {*arith_shiftsi} (nil))

(insn 315 313 300 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 1 r1 [+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:236 <variable>.significand+4 ] [236])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:236 <variable>.significand+4 ] [236])
        (nil)))

(insn:TI 300 315 676 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 5 r5 [+4 ])
        (ashift:SI (reg:SI 14 lr [orig:224 <variable>.sign ] [224])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:224 <variable>.sign ] [224])
        (nil)))

(note 676 300 435 34 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 435 676 677 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [orig:11+4 ] [11])
                (reg:SI 9 r9 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(note 677 435 436 34 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 436 677 437 34 arch/arm/vfp/vfpdouble.c:197 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [234])
                        (reg:SI 10 sl [231]))
                    (reg:SI 0 r0 [234])))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0 [234])
                    (reg:SI 10 sl [231])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn:TI 437 436 319 34 arch/arm/vfp/vfpdouble.c:197 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(call_insn:TI 319 437 324 34 arch/arm/vfp/vfpdouble.c:197 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 324 319 330 34 arch/arm/vfp/vfpdouble.c:200 (set (reg/i:SI 0 r0)
        (reg/v:SI 7 r7 [orig:153 exceptions ] [153])) 167 {*arm_movsi_insn} (nil))

(insn 330 324 507 34 arch/arm/vfp/vfpdouble.c:200 (use (reg/i:SI 0 r0)) -1 (nil))

(note 507 330 508 34 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 508 507 509 34 arch/arm/vfp/vfpdouble.c:200 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 34 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 509 508 408)

(note 408 509 411 NOTE_INSN_DELETED)

(note 411 408 0 NOTE_INSN_DELETED)


;; Function vfp_double_fnmul (vfp_double_fnmul)[0:180]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: dn+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dn
    offset 0
      (reg:SI 1 r1 [ dn ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


Basic block 3:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


Basic block 4:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


Basic block 5:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


Basic block 6:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


Basic block 7:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


Basic block 8:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


9 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 5 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  4 [29.0%]  (fallthru) 5 [71.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  3 [29.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [71.0%]  4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  6 [61.0%]  (fallthru) 8 [39.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  5 [61.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  7 [39.0%]  (fallthru) 8 [61.0%] 
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2378, maybe hot.
Predecessors:  6 [39.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [39.0%]  6 [61.0%]  7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fnmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,19u} r1={17d,17u} r2={15d,13u} r3={13d,11u} r4={2d,4u} r5={4d,6u} r6={2d,3u} r7={2d,3u} r8={2d,2u} r9={3d,4u} r10={2d,3u} r11={3d,4u} r12={11d,11u} r13={3d,31u,1d} r14={12d,9u,1d} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,12u} r25={2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 934{778d,152u,4e} in 80{74 regular + 6 call} insns.
(note 1 0 205 NOTE_INSN_DELETED)

(note 205 1 206 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 206 205 207 2 ( dn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ dn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 207 206 208 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 208 207 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 208 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 7 6 2 NOTE_INSN_DELETED)

(note 6 3 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 6 19 2 NOTE_INSN_DELETED)

(note 19 17 20 2 NOTE_INSN_DELETED)

(note 20 19 23 2 NOTE_INSN_DELETED)

(note 23 20 27 2 NOTE_INSN_DELETED)

(note 27 23 31 2 NOTE_INSN_DELETED)

(note 31 27 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 35 2 NOTE_INSN_DELETED)

(note 35 33 36 2 NOTE_INSN_DELETED)

(note 36 35 39 2 NOTE_INSN_DELETED)

(note 39 36 40 2 NOTE_INSN_DELETED)

(note 40 39 42 2 NOTE_INSN_DELETED)

(note 42 40 43 2 NOTE_INSN_DELETED)

(note 43 42 44 2 NOTE_INSN_DELETED)

(note 44 43 196 2 NOTE_INSN_DELETED)

(insn/f:TI 196 44 2 2 arch/arm/vfp/vfpdouble.c:937 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn:TI 2 196 197 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/v:SI 6 r6 [orig:142 dd ] [142])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn/f:TI 197 2 198 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(note 198 197 9 2 NOTE_INSN_PROLOGUE_END)

(insn 9 198 209 2 arch/arm/vfp/vfpdouble.c:941 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(note 209 9 4 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:142 dd ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 4 209 5 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpdouble.c:937 (set (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn:TI 10 5 212 2 arch/arm/vfp/vfpdouble.c:941 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 212 10 211 2 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 211 212 210 2 ( dm (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:144 dm ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 210 211 192 2 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(insn 192 210 26 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 26 192 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 7 r7 [214])
        (ashift:SI (reg:SI 0 r0 [orig:140 D.4931 ] [140])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 26 21 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:215+4 ] [215])
        (ashift:SI (reg:SI 1 r1 [ D.4931+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 21 24 25 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:135 D.5485 ] [135])
        (zero_extract:SI (reg:SI 1 r1 [ D.4931+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 25 21 194 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:215+4 ] [215])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:140 D.4931 ] [140])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:215+4 ] [215]))) 270 {*arith_shiftsi} (nil))

(insn:TI 194 25 170 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4931+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4931+4 ])
            (nil))))

(insn 170 194 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [162])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 45 170 28 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:135 D.5485 ] [135])
                    (reg:SI 1 r1 [162]))
                (ne:SI (reg:SI 12 ip [orig:135 D.5485 ] [135])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [162])
        (nil)))

(insn 28 45 213 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (lshiftrt:SI (reg:SI 7 r7 [214])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(note 213 28 14 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 14 213 29 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [210])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 29 14 214 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:215+4 ] [215])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:136 significand ] [136]))) 270 {*arith_shiftsi} (nil))

(note 214 29 30 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 30 214 215 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:215+4 ] [215])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:215+4 ] [215])
        (nil)))

(note 215 30 185 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 185 215 16 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [170])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 16 185 186 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [210])) 176 {*movhi_insn_arch4} (nil))

(insn 186 16 187 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 187 186 216 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:136 significand ] [136])
            (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                (reg:SI 0 r0 [170])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [170])
        (nil)))

(note 216 187 188 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 188 216 217 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 217 188 53 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 53 217 22 2 arch/arm/vfp/vfpdouble.c:942 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:135 D.5485 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:135 D.5485 ] [135])
        (nil)))

(insn 22 53 52 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:135 D.5485 ] [135])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 52 22 54 2 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:136 significand ] [136])) 163 {*arm_movdi} (nil))

(jump_insn:TI 54 52 55 2 arch/arm/vfp/vfpdouble.c:942 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  2 [50.0%]  (fallthru)
(note 55 54 56 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 3 NOTE_INSN_DELETED)

(note 57 56 58 3 NOTE_INSN_DELETED)

(insn:TI 58 57 59 3 arch/arm/vfp/vfpdouble.c:942 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 significand ] [136])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 59 58 60 3 arch/arm/vfp/vfpdouble.c:942 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [29.0%]  (fallthru)
;; Succ edge  5 [71.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  3 [29.0%]  (fallthru)
(note 60 59 61 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 4 NOTE_INSN_DELETED)

(insn:TI 62 61 63 4 arch/arm/vfp/vfpdouble.c:943 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 63 62 218 4 arch/arm/vfp/vfpdouble.c:943 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 218 63 219 4 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

(note 219 218 64 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [71.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 64 219 65 5 142 "" [2 uses])

(note 65 64 74 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 74 65 76 5 NOTE_INSN_DELETED)

(note 76 74 77 5 NOTE_INSN_DELETED)

(note 77 76 80 5 NOTE_INSN_DELETED)

(note 80 77 84 5 NOTE_INSN_DELETED)

(note 84 80 88 5 NOTE_INSN_DELETED)

(note 88 84 89 5 NOTE_INSN_DELETED)

(note 89 88 90 5 NOTE_INSN_DELETED)

(note 90 89 92 5 NOTE_INSN_DELETED)

(note 92 90 93 5 NOTE_INSN_DELETED)

(note 93 92 96 5 NOTE_INSN_DELETED)

(note 96 93 97 5 NOTE_INSN_DELETED)

(note 97 96 99 5 NOTE_INSN_DELETED)

(note 99 97 100 5 NOTE_INSN_DELETED)

(note 100 99 101 5 NOTE_INSN_DELETED)

(note 101 100 66 5 NOTE_INSN_DELETED)

(insn:TI 66 101 181 5 arch/arm/vfp/vfpdouble.c:945 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:144 dm ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (nil)))

(insn 181 66 67 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 67 181 220 5 arch/arm/vfp/vfpdouble.c:945 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 220 67 180 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 180 220 83 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 83 180 221 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [220])
        (ashift:SI (reg:SI 0 r0 [orig:139 D.4940 ] [139])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(note 221 83 81 5 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 81 221 78 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:221+4 ] [221])
        (ashift:SI (reg:SI 1 r1 [ D.4940+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 78 81 82 5 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:133 D.5500 ] [133])
        (zero_extract:SI (reg:SI 1 r1 [ D.4940+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 82 78 183 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:221+4 ] [221])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:139 D.4940 ] [139])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:221+4 ] [221]))) 270 {*arith_shiftsi} (nil))

(insn:TI 183 82 168 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4940+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4940+4 ])
        (nil)))

(insn 168 183 102 5 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [189])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 102 168 85 5 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:133 D.5500 ] [133])
                    (reg:SI 1 r1 [189]))
                (ne:SI (reg:SI 12 ip [orig:133 D.5500 ] [133])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [189])
        (nil)))

(insn 85 102 222 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (lshiftrt:SI (reg:SI 5 r5 [220])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [220])
        (nil)))

(note 222 85 71 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 71 222 86 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [216])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 86 71 223 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:221+4 ] [221])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:134 significand ] [134]))) 270 {*arith_shiftsi} (nil))

(note 223 86 87 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 87 223 224 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:221+4 ] [221])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:221+4 ] [221])
        (nil)))

(note 224 87 182 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 182 224 73 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [173])
        (and:SI (reg:SI 0 r0 [orig:139 D.4940 ] [139])
            (reg:SI 10 sl [174]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 73 182 174 5 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 1 r1 [216])) 176 {*movhi_insn_arch4} (nil))

(insn 174 73 175 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [197])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 175 174 176 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn 176 175 225 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:134 significand ] [134])
            (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                (reg:SI 0 r0 [197])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [197])
        (nil)))

(note 225 176 177 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 177 225 226 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 226 177 110 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 110 226 79 5 arch/arm/vfp/vfpdouble.c:946 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:133 D.5500 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:133 D.5500 ] [133])
        (nil)))

(insn:TI 79 110 109 5 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:133 D.5500 ] [133])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 109 79 111 5 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:134 significand ] [134])) 163 {*arm_movdi} (nil))

(jump_insn 111 109 112 5 arch/arm/vfp/vfpdouble.c:946 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  5 [61.0%]  (fallthru)
(note 112 111 113 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 6 NOTE_INSN_DELETED)

(note 114 113 115 6 NOTE_INSN_DELETED)

(insn:TI 115 114 116 6 arch/arm/vfp/vfpdouble.c:946 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:134 significand ] [134])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 116 115 117 6 arch/arm/vfp/vfpdouble.c:946 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [39.0%]  (fallthru)
(note 117 116 118 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 118 117 119 7 NOTE_INSN_DELETED)

(insn:TI 119 118 120 7 arch/arm/vfp/vfpdouble.c:947 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 120 119 227 7 arch/arm/vfp/vfpdouble.c:947 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 227 120 228 7 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

(note 228 227 121 8 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 5 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  5 [39.0%] 
;; Pred edge  6 [61.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 121 228 122 8 144 "" [2 uses])

(note 122 121 124 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 124 122 125 8 NOTE_INSN_DELETED)

(note 125 124 123 8 NOTE_INSN_DELETED)

(insn:TI 123 125 127 8 arch/arm/vfp/vfpdouble.c:949 (set (reg/f:SI 5 r5 [200])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))
        (nil)))

(insn 127 123 128 8 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn:TI 128 127 229 8 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(note 229 128 129 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 129 229 230 8 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(note 230 129 126 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 126 230 130 8 arch/arm/vfp/vfpdouble.c:949 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(call_insn:TI 130 126 167 8 arch/arm/vfp/vfpdouble.c:949 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 167 130 132 8 arch/arm/vfp/vfpdouble.c:952 (set (reg/f:SI 12 ip [208])
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>)
        (nil)))

(insn:TI 132 167 141 8 arch/arm/vfp/vfpdouble.c:950 (set (reg:SI 14 lr [orig:204 vdd.sign ] [204])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 42 [0x2a])) [0 vdd.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 141 132 142 8 arch/arm/vfp/vfpdouble.c:952 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn:TI 142 141 139 8 arch/arm/vfp/vfpdouble.c:952 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn:TI 139 142 166 8 arch/arm/vfp/vfpdouble.c:952 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [208])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [208])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10d43b60>)
            (nil))))

(insn:TI 166 139 135 8 arch/arm/vfp/vfpdouble.c:950 (set (reg:SI 12 ip [206])
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -32768 [0xffffffffffff8000])
        (nil)))

(insn:TI 135 166 136 8 arch/arm/vfp/vfpdouble.c:950 (set (reg:SI 12 ip [205])
        (xor:SI (reg:SI 14 lr [orig:204 vdd.sign ] [204])
            (reg:SI 12 ip [206]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:204 vdd.sign ] [204])
        (expr_list:REG_EQUAL (xor:SI (reg:SI 14 lr [orig:204 vdd.sign ] [204])
                (const_int -32768 [0xffffffffffff8000]))
            (nil))))

(insn 136 135 131 8 arch/arm/vfp/vfpdouble.c:950 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 42 [0x2a])) [0 vdd.sign+0 S2 A16])
        (reg:HI 12 ip [205])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 12 ip [205])
        (nil)))

(insn:TI 131 136 231 8 arch/arm/vfp/vfpdouble.c:949 (set (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 231 131 140 8 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 140 231 144 8 arch/arm/vfp/vfpdouble.c:952 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:142 dd ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 144 140 232 8 arch/arm/vfp/vfpdouble.c:952 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 232 144 156 8 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(insn 156 232 199 8 arch/arm/vfp/vfpdouble.c:953 (use (reg/i:SI 0 r0)) -1 (nil))

(note 199 156 200 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 200 199 201 8 arch/arm/vfp/vfpdouble.c:953 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 201 200 165)

(note 165 201 172 NOTE_INSN_DELETED)

(note 172 165 0 NOTE_INSN_DELETED)


;; Function vfp_double_fmul (vfp_double_fmul)[0:179]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: dn+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: dn
    offset 0
      (reg:SI 1 r1 [ dn ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])


Basic block 3:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])


Basic block 4:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])


Basic block 5:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])


Basic block 6:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])


Basic block 7:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])


Basic block 8:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])


9 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 5 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  4 [29.0%]  (fallthru) 5 [71.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  3 [29.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [71.0%]  4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  6 [61.0%]  (fallthru) 8 [39.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  5 [61.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  7 [39.0%]  (fallthru) 8 [61.0%] 
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2378, maybe hot.
Predecessors:  6 [39.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [39.0%]  6 [61.0%]  7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fmul

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,19u} r1={17d,17u} r2={15d,13u} r3={13d,11u} r4={2d,4u} r5={4d,6u} r6={2d,3u} r7={2d,3u} r8={2d,2u} r9={3d,4u} r10={2d,3u} r11={3d,4u} r12={9d,9u} r13={3d,29u,1d} r14={11d,8u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,12u} r25={2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 925{775d,147u,3e} in 76{70 regular + 6 call} insns.
(note 1 0 196 NOTE_INSN_DELETED)

(note 196 1 197 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 197 196 198 2 ( dn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ dn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 198 197 199 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 199 198 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 199 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 7 6 2 NOTE_INSN_DELETED)

(note 6 3 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 6 19 2 NOTE_INSN_DELETED)

(note 19 17 20 2 NOTE_INSN_DELETED)

(note 20 19 23 2 NOTE_INSN_DELETED)

(note 23 20 27 2 NOTE_INSN_DELETED)

(note 27 23 31 2 NOTE_INSN_DELETED)

(note 31 27 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 35 2 NOTE_INSN_DELETED)

(note 35 33 36 2 NOTE_INSN_DELETED)

(note 36 35 39 2 NOTE_INSN_DELETED)

(note 39 36 40 2 NOTE_INSN_DELETED)

(note 40 39 42 2 NOTE_INSN_DELETED)

(note 42 40 43 2 NOTE_INSN_DELETED)

(note 43 42 44 2 NOTE_INSN_DELETED)

(note 44 43 188 2 NOTE_INSN_DELETED)

(insn/f:TI 188 44 2 2 arch/arm/vfp/vfpdouble.c:917 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn:TI 2 188 189 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/v:SI 6 r6 [orig:142 dd ] [142])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn/f:TI 189 2 190 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(note 190 189 9 2 NOTE_INSN_PROLOGUE_END)

(insn 9 190 200 2 arch/arm/vfp/vfpdouble.c:921 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(note 200 9 4 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:142 dd ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 4 200 5 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpdouble.c:917 (set (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn:TI 10 5 203 2 arch/arm/vfp/vfpdouble.c:921 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 203 10 202 2 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 202 203 201 2 ( dm (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:144 dm ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 201 202 184 2 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(insn 184 201 26 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 26 184 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 7 r7 [210])
        (ashift:SI (reg:SI 0 r0 [orig:140 D.4900 ] [140])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 26 21 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:211+4 ] [211])
        (ashift:SI (reg:SI 1 r1 [ D.4900+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 21 24 25 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:135 D.5515 ] [135])
        (zero_extract:SI (reg:SI 1 r1 [ D.4900+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 25 21 186 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:211+4 ] [211])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:140 D.4900 ] [140])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:211+4 ] [211]))) 270 {*arith_shiftsi} (nil))

(insn:TI 186 25 163 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4900+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4900+4 ])
            (nil))))

(insn 163 186 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [162])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 45 163 28 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:135 D.5515 ] [135])
                    (reg:SI 1 r1 [162]))
                (ne:SI (reg:SI 12 ip [orig:135 D.5515 ] [135])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [162])
        (nil)))

(insn 28 45 204 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (lshiftrt:SI (reg:SI 7 r7 [210])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(note 204 28 14 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 14 204 29 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [206])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 29 14 205 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:211+4 ] [211])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:136 significand ] [136]))) 270 {*arith_shiftsi} (nil))

(note 205 29 30 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 30 205 206 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:211+4 ] [211])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:211+4 ] [211])
        (nil)))

(note 206 30 177 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 177 206 16 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [170])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 16 177 178 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [206])) 176 {*movhi_insn_arch4} (nil))

(insn 178 16 179 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 179 178 207 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:136 significand ] [136])
            (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                (reg:SI 0 r0 [170])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [170])
        (nil)))

(note 207 179 180 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 180 207 208 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 208 180 53 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 53 208 22 2 arch/arm/vfp/vfpdouble.c:922 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:135 D.5515 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:135 D.5515 ] [135])
        (nil)))

(insn 22 53 52 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:135 D.5515 ] [135])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 52 22 54 2 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:136 significand ] [136])) 163 {*arm_movdi} (nil))

(jump_insn:TI 54 52 55 2 arch/arm/vfp/vfpdouble.c:922 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  2 [50.0%]  (fallthru)
(note 55 54 56 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 3 NOTE_INSN_DELETED)

(note 57 56 58 3 NOTE_INSN_DELETED)

(insn:TI 58 57 59 3 arch/arm/vfp/vfpdouble.c:922 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 significand ] [136])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 59 58 60 3 arch/arm/vfp/vfpdouble.c:922 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [29.0%]  (fallthru)
;; Succ edge  5 [71.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  3 [29.0%]  (fallthru)
(note 60 59 61 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 4 NOTE_INSN_DELETED)

(insn:TI 62 61 63 4 arch/arm/vfp/vfpdouble.c:923 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 63 62 209 4 arch/arm/vfp/vfpdouble.c:923 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 209 63 210 4 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

(note 210 209 64 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [71.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 64 210 65 5 150 "" [2 uses])

(note 65 64 74 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 74 65 76 5 NOTE_INSN_DELETED)

(note 76 74 77 5 NOTE_INSN_DELETED)

(note 77 76 80 5 NOTE_INSN_DELETED)

(note 80 77 84 5 NOTE_INSN_DELETED)

(note 84 80 88 5 NOTE_INSN_DELETED)

(note 88 84 89 5 NOTE_INSN_DELETED)

(note 89 88 90 5 NOTE_INSN_DELETED)

(note 90 89 92 5 NOTE_INSN_DELETED)

(note 92 90 93 5 NOTE_INSN_DELETED)

(note 93 92 96 5 NOTE_INSN_DELETED)

(note 96 93 97 5 NOTE_INSN_DELETED)

(note 97 96 99 5 NOTE_INSN_DELETED)

(note 99 97 100 5 NOTE_INSN_DELETED)

(note 100 99 101 5 NOTE_INSN_DELETED)

(note 101 100 66 5 NOTE_INSN_DELETED)

(insn:TI 66 101 173 5 arch/arm/vfp/vfpdouble.c:925 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:144 dm ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (nil)))

(insn 173 66 67 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 67 173 211 5 arch/arm/vfp/vfpdouble.c:925 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 211 67 172 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 172 211 83 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 83 172 212 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [216])
        (ashift:SI (reg:SI 0 r0 [orig:139 D.4909 ] [139])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(note 212 83 81 5 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 81 212 78 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:217+4 ] [217])
        (ashift:SI (reg:SI 1 r1 [ D.4909+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 78 81 82 5 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:133 D.5530 ] [133])
        (zero_extract:SI (reg:SI 1 r1 [ D.4909+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 82 78 175 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:217+4 ] [217])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:139 D.4909 ] [139])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:217+4 ] [217]))) 270 {*arith_shiftsi} (nil))

(insn:TI 175 82 161 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4909+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4909+4 ])
        (nil)))

(insn 161 175 102 5 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [189])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 102 161 85 5 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:133 D.5530 ] [133])
                    (reg:SI 1 r1 [189]))
                (ne:SI (reg:SI 12 ip [orig:133 D.5530 ] [133])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [189])
        (nil)))

(insn 85 102 213 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (lshiftrt:SI (reg:SI 5 r5 [216])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [216])
        (nil)))

(note 213 85 71 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 71 213 86 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [212])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 86 71 214 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:217+4 ] [217])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:134 significand ] [134]))) 270 {*arith_shiftsi} (nil))

(note 214 86 87 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 87 214 215 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:217+4 ] [217])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:217+4 ] [217])
        (nil)))

(note 215 87 174 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 174 215 73 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [173])
        (and:SI (reg:SI 0 r0 [orig:139 D.4909 ] [139])
            (reg:SI 10 sl [174]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 73 174 166 5 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 1 r1 [212])) 176 {*movhi_insn_arch4} (nil))

(insn 166 73 167 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [197])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 167 166 168 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn 168 167 216 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:134 significand ] [134])
            (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                (reg:SI 0 r0 [197])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [197])
        (nil)))

(note 216 168 169 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 169 216 217 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 217 169 110 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 110 217 79 5 arch/arm/vfp/vfpdouble.c:926 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:133 D.5530 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:133 D.5530 ] [133])
        (nil)))

(insn:TI 79 110 109 5 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:133 D.5530 ] [133])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 109 79 111 5 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:134 significand ] [134])) 163 {*arm_movdi} (nil))

(jump_insn 111 109 112 5 arch/arm/vfp/vfpdouble.c:926 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  5 [61.0%]  (fallthru)
(note 112 111 113 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 6 NOTE_INSN_DELETED)

(note 114 113 115 6 NOTE_INSN_DELETED)

(insn:TI 115 114 116 6 arch/arm/vfp/vfpdouble.c:926 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:134 significand ] [134])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 116 115 117 6 arch/arm/vfp/vfpdouble.c:926 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [39.0%]  (fallthru)
(note 117 116 118 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 118 117 119 7 NOTE_INSN_DELETED)

(insn:TI 119 118 120 7 arch/arm/vfp/vfpdouble.c:927 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 120 119 218 7 arch/arm/vfp/vfpdouble.c:927 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 218 120 219 7 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

(note 219 218 121 8 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 5 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  5 [39.0%] 
;; Pred edge  6 [61.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 121 219 122 8 152 "" [2 uses])

(note 122 121 124 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 124 122 125 8 NOTE_INSN_DELETED)

(note 125 124 123 8 NOTE_INSN_DELETED)

(insn:TI 123 125 127 8 arch/arm/vfp/vfpdouble.c:929 (set (reg/f:SI 5 r5 [200])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))
        (nil)))

(insn 127 123 128 8 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn:TI 128 127 220 8 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(note 220 128 129 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 129 220 221 8 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(note 221 129 126 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 126 221 130 8 arch/arm/vfp/vfpdouble.c:929 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(call_insn:TI 130 126 160 8 arch/arm/vfp/vfpdouble.c:929 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 160 130 136 8 arch/arm/vfp/vfpdouble.c:930 (set (reg/f:SI 12 ip [204])
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>)
        (nil)))

(insn:TI 136 160 137 8 arch/arm/vfp/vfpdouble.c:930 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 137 136 134 8 arch/arm/vfp/vfpdouble.c:930 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn:TI 134 137 131 8 arch/arm/vfp/vfpdouble.c:930 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [204])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [204])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10d50fc0>)
            (nil))))

(insn:TI 131 134 222 8 arch/arm/vfp/vfpdouble.c:929 (set (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 222 131 135 8 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 135 222 139 8 arch/arm/vfp/vfpdouble.c:930 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:142 dd ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 139 135 223 8 arch/arm/vfp/vfpdouble.c:930 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 223 139 151 8 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(insn 151 223 191 8 arch/arm/vfp/vfpdouble.c:931 (use (reg/i:SI 0 r0)) -1 (nil))

(note 191 151 192 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 192 191 193 8 arch/arm/vfp/vfpdouble.c:931 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 193 192 159)

(note 159 193 165 NOTE_INSN_DELETED)

(note 165 159 0 NOTE_INSN_DELETED)


;; Function vfp_double_fdiv (vfp_double_fdiv)[0:183]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: dn+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: dn
    offset 0
      (reg:SI 1 r1 [ dn ])

OUT:
Stack adjustment: 184
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])


Basic block 3:
IN:
Stack adjustment: 184
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 4:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 5:
IN:
Stack adjustment: 184
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 6:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 7:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 8:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 9:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 10:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 11:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 12:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 13:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 14:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 15:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 16:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 17:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 18:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 19:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 20:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])


Basic block 21:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 22:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])


Basic block 23:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184


Basic block 24:
IN:
Stack adjustment: 184

OUT:
Stack adjustment: 184


Basic block 25:
IN:
Stack adjustment: 184

OUT:
Stack adjustment: 184


Basic block 26:
IN:
Stack adjustment: 184

OUT:
Stack adjustment: 184


Basic block 27:
IN:
Stack adjustment: 184

OUT:
Stack adjustment: 184


Basic block 28:
IN:
Stack adjustment: 184

OUT:
Stack adjustment: 184


Basic block 29:
IN:
Stack adjustment: 184

OUT:
Stack adjustment: 184


Basic block 30:
IN:
Stack adjustment: 184

OUT:
Stack adjustment: 184
Reg 2: z+0
Reg 3: z+4
Variables:
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])


Basic block 31:
IN:
Stack adjustment: 184

OUT:
Stack adjustment: 184


Basic block 32:
IN:
Stack adjustment: 184

OUT:
Stack adjustment: 184


Basic block 33:
IN:
Stack adjustment: 184

OUT:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: __rem+0
Reg 4: __base+0
Variables:
  name: __base
    offset 0
      (reg/v:SI 4 r4 [ __base ])
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: __rem
    offset 0
      (reg/v:SI 1 r1 [ __rem ])


Basic block 34:
IN:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: __rem+0
Reg 4: __base+0
Variables:
  name: __base
    offset 0
      (reg/v:SI 4 r4 [ __base ])
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: __rem
    offset 0
      (reg/v:SI 1 r1 [ __rem ])

OUT:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: z+0
Reg 4: __left+0
Reg 8: rmb+0
Reg 9: rmb+4
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: rmb
    offset 0
      (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    offset 4
      (reg:SI 9 r9 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 1 r1 [orig:295 z.732 ] [295])


Basic block 35:
IN:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: z+0
Reg 4: __left+0
Reg 8: rmb+0
Reg 9: rmb+4
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: rmb
    offset 0
      (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    offset 4
      (reg:SI 9 r9 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 1 r1 [orig:295 z.732 ] [295])

OUT:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: z+0
Reg 4: __left+0
Reg 8: rmb+0
Reg 9: rmb+4
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: rmb
    offset 0
      (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    offset 4
      (reg:SI 9 r9 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 1 r1 [orig:295 z.732 ] [295])


Basic block 36:
IN:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: z+0
Reg 4: __left+0
Reg 8: rmb+0
Reg 9: rmb+4
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: rmb
    offset 0
      (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    offset 4
      (reg:SI 9 r9 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 1 r1 [orig:295 z.732 ] [295])

OUT:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: z+0
Reg 4: __left+0
Reg 8: rmb+0
Reg 9: rmb+4
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: rmb
    offset 0
      (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    offset 4
      (reg:SI 9 r9 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 1 r1 [orig:295 z.732 ] [295])


Basic block 37:
IN:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: z+0
Reg 4: __left+0
Reg 8: rmb+0
Reg 9: rmb+4
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: rmb
    offset 0
      (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    offset 4
      (reg:SI 9 r9 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 1 r1 [orig:295 z.732 ] [295])

OUT:
Stack adjustment: 184
Reg 4: __left+0
Reg 8: rmb+0
Reg 9: rmb+4
Variables:
  name: rmb
    offset 0
      (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    offset 4
      (reg:SI 9 r9 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])


Basic block 38:
IN:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: z+0
Reg 4: __left+0
Reg 8: rmb+0
Reg 9: rmb+4
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: rmb
    offset 0
      (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    offset 4
      (reg:SI 9 r9 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 1 r1 [orig:295 z.732 ] [295])

OUT:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: z+0
Reg 4: __left+0
Reg 8: rmb+0
Reg 9: rmb+4
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: rmb
    offset 0
      (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    offset 4
      (reg:SI 9 r9 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 1 r1 [orig:295 z.732 ] [295])


Basic block 39:
IN:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: z+0
Reg 4: __left+0
Reg 8: rmb+0
Reg 9: rmb+4
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: rmb
    offset 0
      (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    offset 4
      (reg:SI 9 r9 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 1 r1 [orig:295 z.732 ] [295])

OUT:
Stack adjustment: 184
Reg 0: reml+0
Reg 4: __left+0
Reg 8: z+0
Reg 10: mh+0
Variables:
  name: mh
    offset 0
      (reg/v:DI 10 sl [orig:156 mh ] [156])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:159 reml ] [159])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg/v:DI 8 r8 [orig:143 z.732 ] [143])


Basic block 40:
IN:
Stack adjustment: 184
Reg 0: reml+0
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 8: z+0
Reg 9: z+4
Reg 10: mh+0
Variables:
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.732 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.732+4 ])
  name: mh
    offset 0
      (reg/v:DI 10 sl [orig:156 mh ] [156])
  name: remh
    offset 0
      (reg/v:DI 2 r2 [orig:158 remh ] [158])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:159 reml ] [159])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])

OUT:
Stack adjustment: 184
Reg 0: reml+0
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 8: z+0
Reg 9: z+4
Reg 10: mh+0
Variables:
  name: mh
    offset 0
      (reg/v:DI 10 sl [orig:156 mh ] [156])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: remh
    offset 0
      (reg/v:DI 2 r2 [orig:158 remh ] [158])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:159 reml ] [159])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.732 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.732+4 ])


Basic block 41:
IN:
Stack adjustment: 184
Reg 0: reml+0
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 8: z+0
Reg 9: z+4
Reg 10: mh+0
Variables:
  name: mh
    offset 0
      (reg/v:DI 10 sl [orig:156 mh ] [156])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: remh
    offset 0
      (reg/v:DI 2 r2 [orig:158 remh ] [158])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:159 reml ] [159])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.732 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.732+4 ])

OUT:
Stack adjustment: 184
Reg 0: reml+0
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 8: z+0
Reg 9: z+4
Reg 10: mh+0
Variables:
  name: mh
    offset 0
      (reg/v:DI 10 sl [orig:156 mh ] [156])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:159 reml ] [159])
  name: remh
    offset 0
      (reg/v:DI 2 r2 [orig:158 remh ] [158])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.732 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.732+4 ])


Basic block 42:
IN:
Stack adjustment: 184
Reg 0: reml+0
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 8: z+0
Reg 9: z+4
Reg 10: mh+0
Variables:
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.732 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.732+4 ])
  name: mh
    offset 0
      (reg/v:DI 10 sl [orig:156 mh ] [156])
  name: remh
    offset 0
      (reg/v:DI 2 r2 [orig:158 remh ] [158])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:159 reml ] [159])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])

OUT:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: __n+4
Reg 4: __left+0
Reg 9: z+4
Variables:
  name: __n
    offset 0
      (reg:SI 0 r0 [orig:162 __n ] [162])
    offset 4
      (reg:SI 1 r1 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 4
      (reg:SI 9 r9 [ z.732+4 ])


Basic block 43:
IN:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: __n+4
Reg 4: __left+0
Reg 9: z+4
Variables:
  name: __n
    offset 0
      (reg:SI 0 r0 [orig:162 __n ] [162])
    offset 4
      (reg:SI 1 r1 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 4
      (reg:SI 9 r9 [ z.732+4 ])

OUT:
Stack adjustment: 184
Reg 2: z+0
Reg 3: z+4
Reg 4: __left+0
Variables:
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])


Basic block 44:
IN:
Stack adjustment: 184
Reg 0: __n+0
Reg 1: __n+4
Reg 4: __left+0
Reg 9: z+4
Variables:
  name: __n
    offset 0
      (reg:SI 0 r0 [orig:162 __n ] [162])
    offset 4
      (reg:SI 1 r1 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 4
      (reg:SI 9 r9 [ z.732+4 ])

OUT:
Stack adjustment: 184
Reg 0: __n+0 __n+0
Reg 1: __rem+0
Reg 2: z+0
Reg 3: z+4
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])
  name: __n
    offset 0
      (reg:SI 0 r0 [orig:162 __n ] [162])
  name: __rem
    offset 0
      (reg/v:SI 1 r1 [ __rem ])


Basic block 45:
IN:
Stack adjustment: 184
Reg 0: __n+0 __n+0
Reg 1: __rem+0
Reg 2: z+0
Reg 3: z+4
Reg 4: __left+0
Variables:
  name: __n
    offset 0
      (reg/v:DI 0 r0 [ __n ])
  name: __rem
    offset 0
      (reg/v:SI 1 r1 [ __rem ])
  name: __n
    offset 0
      (reg:SI 0 r0 [orig:162 __n ] [162])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:163 __left ] [163])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])

OUT:
Stack adjustment: 184
Reg 2: z+0
Reg 3: z+4
Variables:
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])


Basic block 46:
IN:
Stack adjustment: 184
Reg 2: z+0
Reg 3: z+4
Variables:
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])

OUT:
Stack adjustment: 184
Reg 2: z+0
Reg 3: z+4
Variables:
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])


Basic block 47:
IN:
Stack adjustment: 184
Reg 2: z+0
Reg 3: z+4
Variables:
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])

OUT:
Stack adjustment: 184
Reg 0: rmb+0
Reg 1: rmb+4
Reg 2: z+0
Reg 4: rma+0
Reg 5: rma+4
Reg 10: rl+0
Variables:
  name: rma
    offset 0
      (reg:SI 4 r4 [orig:137 rma.739 ] [137])
    offset 4
      (reg:SI 5 r5 [ rma.739+4 ])
  name: rmb
    offset 0
      (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    offset 4
      (reg:SI 1 r1 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:154 rl ] [154])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])


Basic block 48:
IN:
Stack adjustment: 184
Reg 0: rmb+0
Reg 1: rmb+4
Reg 2: z+0
Reg 4: rma+0
Reg 5: rma+4
Reg 10: rl+0
Variables:
  name: rma
    offset 0
      (reg:SI 4 r4 [orig:137 rma.739 ] [137])
    offset 4
      (reg:SI 5 r5 [ rma.739+4 ])
  name: rmb
    offset 0
      (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    offset 4
      (reg:SI 1 r1 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:154 rl ] [154])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])

OUT:
Stack adjustment: 184
Reg 0: rmb+0
Reg 1: rmb+4
Reg 2: z+0
Reg 4: rma+0
Reg 5: rma+4
Reg 10: rl+0
Variables:
  name: rma
    offset 0
      (reg:SI 4 r4 [orig:137 rma.739 ] [137])
    offset 4
      (reg:SI 5 r5 [ rma.739+4 ])
  name: rmb
    offset 0
      (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    offset 4
      (reg:SI 1 r1 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:154 rl ] [154])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])


Basic block 49:
IN:
Stack adjustment: 184
Reg 0: rmb+0
Reg 1: rmb+4
Reg 2: z+0
Reg 4: rma+0
Reg 5: rma+4
Reg 10: rl+0
Variables:
  name: rma
    offset 0
      (reg:SI 4 r4 [orig:137 rma.739 ] [137])
    offset 4
      (reg:SI 5 r5 [ rma.739+4 ])
  name: rmb
    offset 0
      (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    offset 4
      (reg:SI 1 r1 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:154 rl ] [154])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])

OUT:
Stack adjustment: 184
Reg 0: rmb+0
Reg 1: rmb+4
Reg 2: z+0
Reg 4: rma+0
Reg 5: rma+4
Reg 8: rma+0
Reg 10: rl+0
Variables:
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:137 rma.739 ] [137])
      (reg:SI 4 r4 [orig:137 rma.739 ] [137])
    offset 4
      (reg:SI 5 r5 [ rma.739+4 ])
  name: rmb
    offset 0
      (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    offset 4
      (reg:SI 1 r1 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:154 rl ] [154])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])


Basic block 50:
IN:
Stack adjustment: 184
Reg 0: rmb+0
Reg 1: rmb+4
Reg 2: z+0
Reg 4: rma+0
Reg 5: rma+4
Reg 8: rma+0
Reg 10: rl+0
Variables:
  name: rma
    offset 0
      (reg:SI 4 r4 [orig:137 rma.739 ] [137])
      (reg:SI 8 r8 [orig:137 rma.739 ] [137])
    offset 4
      (reg:SI 5 r5 [ rma.739+4 ])
  name: rmb
    offset 0
      (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    offset 4
      (reg:SI 1 r1 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:154 rl ] [154])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])

OUT:
Stack adjustment: 184
Reg 2: z+0
Reg 4: rma+0
Reg 5: rma+4
Reg 8: rma+0
Reg 10: rl+0
Variables:
  name: rma
    offset 0
      (reg:SI 4 r4 [orig:137 rma.739 ] [137])
      (reg:SI 8 r8 [orig:137 rma.739 ] [137])
    offset 4
      (reg:SI 5 r5 [ rma.739+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:154 rl ] [154])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])


Basic block 51:
IN:
Stack adjustment: 184
Reg 0: rmb+0
Reg 1: rmb+4
Reg 2: z+0
Reg 4: rma+0
Reg 5: rma+4
Reg 8: rma+0
Reg 10: rl+0
Variables:
  name: rma
    offset 0
      (reg:SI 4 r4 [orig:137 rma.739 ] [137])
      (reg:SI 8 r8 [orig:137 rma.739 ] [137])
    offset 4
      (reg:SI 5 r5 [ rma.739+4 ])
  name: rmb
    offset 0
      (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    offset 4
      (reg:SI 1 r1 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:154 rl ] [154])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])

OUT:
Stack adjustment: 184
Reg 0: rmb+0
Reg 1: rmb+4
Reg 2: z+0
Reg 4: rma+0
Reg 5: rma+4
Reg 10: rl+0
Variables:
  name: rma
    offset 0
      (reg:SI 4 r4 [orig:137 rma.739 ] [137])
    offset 4
      (reg:SI 5 r5 [ rma.739+4 ])
  name: rmb
    offset 0
      (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    offset 4
      (reg:SI 1 r1 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:154 rl ] [154])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])


Basic block 52:
IN:
Stack adjustment: 184
Reg 0: rmb+0
Reg 1: rmb+4
Reg 2: z+0
Reg 4: rma+0
Reg 5: rma+4
Reg 8: rma+0
Reg 10: rl+0
Variables:
  name: rma
    offset 0
      (reg:SI 4 r4 [orig:137 rma.739 ] [137])
      (reg:SI 8 r8 [orig:137 rma.739 ] [137])
    offset 4
      (reg:SI 5 r5 [ rma.739+4 ])
  name: rmb
    offset 0
      (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    offset 4
      (reg:SI 1 r1 [ rmb+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:154 rl ] [154])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])

OUT:
Stack adjustment: 184
Reg 0: remh+0
Reg 1: remh+4
Reg 2: z+0
Reg 8: reml+0
Variables:
  name: remh
    offset 0
      (reg:SI 0 r0 [orig:182 remh ] [182])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])


Basic block 53:
IN:
Stack adjustment: 184
Reg 0: remh+0
Reg 1: remh+4
Reg 2: z+0
Reg 3: z+4
Reg 8: reml+0
Variables:
  name: remh
    offset 0
      (reg:SI 0 r0 [orig:182 remh ] [182])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])

OUT:
Stack adjustment: 184
Reg 0: remh+0
Reg 1: remh+4
Reg 2: z+0
Reg 3: z+4
Reg 8: reml+0
Variables:
  name: remh
    offset 0
      (reg/v:DI 0 r0 [orig:182 remh ] [182])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])


Basic block 54:
IN:
Stack adjustment: 184
Reg 0: remh+0
Reg 1: remh+4
Reg 2: z+0
Reg 3: z+4
Reg 8: reml+0
Variables:
  name: remh
    offset 0
      (reg/v:DI 0 r0 [orig:182 remh ] [182])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])

OUT:
Stack adjustment: 184
Reg 0: remh+0
Reg 1: remh+4
Reg 2: z+0
Reg 3: z+4
Reg 8: reml+0
Variables:
  name: remh
    offset 0
      (reg/v:DI 0 r0 [orig:182 remh ] [182])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])


Basic block 55:
IN:
Stack adjustment: 184
Reg 0: remh+0
Reg 1: remh+4
Reg 2: z+0
Reg 3: z+4
Reg 8: reml+0
Variables:
  name: remh
    offset 0
      (reg:SI 0 r0 [orig:182 remh ] [182])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])

OUT:
Stack adjustment: 184
Reg 8: reml+0
Reg 9: reml+4
Variables:
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
    offset 4
      (reg:SI 9 r9 [ reml+4 ])


Basic block 56:
IN:
Stack adjustment: 184
Reg 2: z+0
Reg 3: z+4
Reg 8: reml+0
Reg 9: reml+4
Variables:
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
    offset 4
      (reg:SI 9 r9 [ reml+4 ])
  name: z
    offset 0
      (reg:SI 2 r2 [orig:160 z ] [160])
    offset 4
      (reg:SI 3 r3 [ z+4 ])

OUT:
Stack adjustment: 184
Reg 4: exceptions+0
Reg 8: reml+0
Reg 9: reml+4
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
    offset 4
      (reg:SI 9 r9 [ reml+4 ])


Basic block 57:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])


Basic block 58:
IN:
Stack adjustment: 184
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])

OUT:
Stack adjustment: 184
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])


Basic block 59:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 4: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])


Basic block 60:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])


Basic block 61:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 62:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 1: tn+0
Reg 4: exceptions+0
Reg 5: tm+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])


Basic block 63:
IN:
Stack adjustment: 184
Reg 1: tn+0
Reg 2: significand+0
Reg 3: significand+4
Reg 5: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 5 r5 [orig:184 tm ] [184])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:178 significand ] [178])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: tn
    offset 0
      (reg/v:SI 1 r1 [orig:183 tn ] [183])

OUT:
Stack adjustment: 184
Reg 4: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])


Basic block 64:
IN:
Stack adjustment: 184
Reg 4: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])

OUT:
Stack adjustment: 184
Reg 4: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])


Basic block 65:
IN:
Stack adjustment: 184
Reg 4: exceptions+0
Reg 8: reml+0
Reg 9: reml+4
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
    offset 4
      (reg:SI 9 r9 [ reml+4 ])

OUT:
Stack adjustment: 184
Reg 4: exceptions+0
Reg 8: reml+0
Reg 9: reml+4
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
  name: reml
    offset 0
      (reg/v:DI 8 r8 [orig:181 reml ] [181])
    offset 4
      (reg:SI 9 r9 [ reml+4 ])


66 basic blocks, 98 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [28.0%]  (fallthru) 5 [72.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 4 [r4]

Successors:  4 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 5 [r5] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 1 [r1] 5 [r5] 7 [r7] 24 [cc]
;; live  kill	

Successors:  7 [100.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  2 [72.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

Successors:  7 [50.0%]  6 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 1 [r1]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 5 [50.0%]  3 [50.0%]  4 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

Successors:  8 [28.0%]  (fallthru) 10 [72.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  7 [28.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	 5 [r5]

Successors:  9 [50.0%]  (fallthru) 12 [50.0%] 
;; lr  out 	 1 [r1] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  8 [50.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 5 [r5] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 7 [r7] 24 [cc]
;; live  kill	

Successors:  12 [100.0%] 
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  7 [72.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 5 [r5] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  11 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 5 [r5] 6 [r6] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	 6 [r6]

Successors:  12 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 10 [50.0%]  8 [50.0%]  9 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  57 [29.0%]  13 [71.0%]  (fallthru)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 7100, maybe hot.
Predecessors:  12 [71.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 12 [ip] 24 [cc]
;; live  kill	

Successors:  60 [29.0%]  14 [71.0%]  (fallthru)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 5041, maybe hot.
Predecessors:  13 [71.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 5 [r5] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

Successors:  63 [29.0%]  15 [71.0%]  (fallthru)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 3579, maybe hot.
Predecessors:  14 [71.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  62 [50.0%]  16 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 1790, maybe hot.
Predecessors:  15 [50.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

Successors:  17 [50.0%]  (fallthru) 62 [50.0%] 
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 895, maybe hot.
Predecessors:  16 [50.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  61 [50.0%]  18 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 447, maybe hot.
Predecessors:  17 [50.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  61 [50.0%]  19 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  20 [29.0%]  (fallthru) 21 [71.0%] 
;; lr  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 65, maybe hot.
Predecessors:  19 [29.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  21 [100.0%]  (fallthru)
;; lr  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  19 [71.0%]  20 [100.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  22 [29.0%]  (fallthru) 23 [71.0%] 
;; lr  out 	 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 10 [sl] 11 [fp] 13 [sp]


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 65, maybe hot.
Predecessors:  21 [29.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  23 [100.0%]  (fallthru)
;; lr  out 	 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 10 [sl] 11 [fp] 13 [sp]


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  21 [71.0%]  22 [100.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

Successors:  27 [50.0%]  24 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  23 [50.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  26 [71.0%]  25 [29.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  24 [29.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  27 [50.0%]  26 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  25 [50.0%]  (fallthru) 24 [71.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 4 [r4] 5 [r5]
;; live  kill	 24 [cc]

Successors:  27 [100.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  26 [100.0%]  (fallthru) 23 [50.0%]  25 [50.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

Successors:  31 [50.0%]  28 [50.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  27 [50.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  30 [71.0%]  29 [29.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 32, maybe hot.
Predecessors:  28 [29.0%]  (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  31 [50.0%]  30 [50.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  29 [50.0%]  (fallthru) 28 [71.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

Successors:  45 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  27 [50.0%]  29 [50.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 5 [r5] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

Successors:  33 [50.0%]  32 [50.0%]  (fallthru)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  31 [50.0%]  (fallthru)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  34 [100.0%] 
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  31 [50.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 32 [100.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	

Successors:  38 [50.0%]  35 [50.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]


Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  34 [50.0%]  (fallthru)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  37 [71.0%]  36 [29.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 16, maybe hot.
Predecessors:  35 [29.0%]  (fallthru)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  38 [50.0%]  37 [50.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  36 [50.0%]  (fallthru) 35 [71.0%] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  39 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  34 [50.0%]  36 [50.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

Successors:  39 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 112, maybe hot.
Predecessors:  38 [100.0%]  (fallthru) 37 [100.0%] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

Successors:  41 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 40 , prev 39, next 41, loop_depth 1, count 0, freq 1131, maybe hot.
Predecessors:  41 [21.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 24 [cc]

Successors:  41 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 261, should be 1131

Basic block 41 , prev 40, next 42, loop_depth 1, count 0, freq 1243, maybe hot.
Predecessors:  40 [100.0%]  (fallthru,dfs_back) 39 [100.0%] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  40 [21.0%]  42 [79.0%]  (fallthru,loop_exit)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 982, maybe hot.
Predecessors:  41 [79.0%]  (fallthru,loop_exit)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

Successors:  44 [50.0%]  43 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  42 [50.0%]  (fallthru)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  45 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 491, should be 56

Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 28, maybe hot.
Predecessors:  42 [50.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

Successors:  45 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 491, should be 28

Basic block 45 , prev 44, next 46, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  30 [100.0%]  44 [100.0%]  (fallthru) 43 [100.0%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

Successors:  56 [50.0%]  46 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 46 , prev 45, next 47, loop_depth 0, count 0, freq 56, maybe hot.
Predecessors:  45 [50.0%]  (fallthru)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  56 [50.0%]  47 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 47 , prev 46, next 48, loop_depth 0, count 0, freq 28, maybe hot.
Predecessors:  46 [50.0%]  (fallthru)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

Successors:  51 [50.0%]  48 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


Basic block 48 , prev 47, next 49, loop_depth 0, count 0, freq 68, maybe hot.
Predecessors:  47 [50.0%]  (fallthru)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  50 [71.0%]  49 [29.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


Basic block 49 , prev 48, next 50, loop_depth 0, count 0, freq 20, maybe hot.
Predecessors:  48 [29.0%]  (fallthru)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  51 [50.0%]  50 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 50 , prev 49, next 51, loop_depth 0, count 0, freq 68, maybe hot.
Predecessors:  49 [50.0%]  (fallthru) 48 [71.0%] 
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  52 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 51 , prev 50, next 52, loop_depth 0, count 0, freq 68, maybe hot.
Predecessors:  47 [50.0%]  49 [50.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

Successors:  52 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 52 , prev 51, next 53, loop_depth 0, count 0, freq 136, maybe hot.
Predecessors:  51 [100.0%]  (fallthru) 50 [100.0%] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

Successors:  54 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]


Basic block 53 , prev 52, next 54, loop_depth 1, count 0, freq 1380, maybe hot.
Predecessors:  54 [21.0%] 
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9]
;; live  kill	 24 [cc]

Successors:  54 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]

Invalid sum of incoming frequencies 318, should be 1380

Basic block 54 , prev 53, next 55, loop_depth 1, count 0, freq 1516, maybe hot.
Predecessors:  53 [100.0%]  (fallthru,dfs_back) 52 [100.0%] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

Successors:  53 [21.0%]  55 [79.0%]  (fallthru,loop_exit)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 55 , prev 54, next 56, loop_depth 0, count 0, freq 1198, maybe hot.
Predecessors:  54 [79.0%]  (fallthru,loop_exit)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 11 [fp]

Successors:  56 [100.0%]  (fallthru)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 56 , prev 55, next 57, loop_depth 0, count 0, freq 224, maybe hot.
Predecessors:  55 [100.0%]  (fallthru) 45 [50.0%]  46 [50.0%] 
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	 14 [lr]

Successors:  65 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 1338, should be 224

Basic block 57 , prev 56, next 58, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  12 [29.0%] 
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  58 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]


Basic block 58 , prev 57, next 59, loop_depth 0, count 0, freq 4959, maybe hot.
Predecessors:  57 [100.0%]  (fallthru) 60 [100.0%] 
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

Successors:  59 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


Basic block 59 , prev 58, next 60, loop_depth 0, count 0, freq 8314, maybe hot.
Predecessors:  58 [100.0%]  (fallthru) 61 [100.0%]  62 [100.0%] 
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

Successors:  64 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 60 , prev 59, next 61, loop_depth 0, count 0, freq 2059, maybe hot.
Predecessors:  13 [29.0%] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  58 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]


Basic block 61 , prev 60, next 62, loop_depth 0, count 0, freq 671, maybe hot.
Predecessors:  17 [50.0%]  18 [50.0%] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	

Successors:  59 [100.0%] 
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


Basic block 62 , prev 61, next 63, loop_depth 0, count 0, freq 2684, maybe hot.
Predecessors:  15 [50.0%]  16 [50.0%] 
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

Successors:  59 [100.0%] 
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


Basic block 63 , prev 62, next 64, loop_depth 0, count 0, freq 1462, maybe hot.
Predecessors:  14 [29.0%] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(13){ }}
;; lr  in  	 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  in  	 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  kill	

Successors:  64 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 64 , prev 63, next 65, loop_depth 0, count 0, freq 9776, maybe hot.
Predecessors:  63 [100.0%]  (fallthru) 59 [100.0%] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

Successors:  65 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 65 , prev 64, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  64 [100.0%]  (fallthru) 56 [100.0%] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 1 , prev 65, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  65 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fdiv

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={50d,67u} r1={57d,65u} r2={40d,54u} r3={41d,48u} r4={27d,29u} r5={27d,35u} r6={8d,17u} r7={11d,20u} r8={18d,24u} r9={18d,22u} r10={19d,32u} r11={19d,23u} r12={21d,27u} r13={3d,185u,5d} r14={20d,15u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={69d,71u} r25={1d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 1958{1218d,734u,6e} in 405{398 regular + 7 call} insns.
(note 2 0 1264 NOTE_INSN_DELETED)

(note 1264 2 1265 2 ( dn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ dn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1265 1264 1266 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1266 1265 1267 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1267 1266 8 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1267 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 8 7 2 NOTE_INSN_DELETED)

(note 7 4 18 2 NOTE_INSN_FUNCTION_BEG)

(note 18 7 20 2 NOTE_INSN_DELETED)

(note 20 18 21 2 NOTE_INSN_DELETED)

(note 21 20 24 2 NOTE_INSN_DELETED)

(note 24 21 28 2 NOTE_INSN_DELETED)

(note 28 24 32 2 NOTE_INSN_DELETED)

(note 32 28 33 2 NOTE_INSN_DELETED)

(note 33 32 34 2 NOTE_INSN_DELETED)

(note 34 33 36 2 NOTE_INSN_DELETED)

(note 36 34 37 2 NOTE_INSN_DELETED)

(note 37 36 40 2 NOTE_INSN_DELETED)

(note 40 37 41 2 NOTE_INSN_DELETED)

(note 41 40 43 2 NOTE_INSN_DELETED)

(note 43 41 44 2 NOTE_INSN_DELETED)

(note 44 43 45 2 NOTE_INSN_DELETED)

(note 45 44 63 2 NOTE_INSN_DELETED)

(note 63 45 65 2 NOTE_INSN_DELETED)

(note 65 63 66 2 NOTE_INSN_DELETED)

(note 66 65 69 2 NOTE_INSN_DELETED)

(note 69 66 73 2 NOTE_INSN_DELETED)

(note 73 69 77 2 NOTE_INSN_DELETED)

(note 77 73 78 2 NOTE_INSN_DELETED)

(note 78 77 79 2 NOTE_INSN_DELETED)

(note 79 78 81 2 NOTE_INSN_DELETED)

(note 81 79 82 2 NOTE_INSN_DELETED)

(note 82 81 85 2 NOTE_INSN_DELETED)

(note 85 82 86 2 NOTE_INSN_DELETED)

(note 86 85 88 2 NOTE_INSN_DELETED)

(note 88 86 89 2 NOTE_INSN_DELETED)

(note 89 88 90 2 NOTE_INSN_DELETED)

(note 90 89 104 2 NOTE_INSN_DELETED)

(note 104 90 105 2 NOTE_INSN_DELETED)

(note 105 104 106 2 NOTE_INSN_DELETED)

(note 106 105 1187 2 NOTE_INSN_DELETED)

(insn/f:TI 1187 106 1188 2 arch/arm/vfp/vfpdouble.c:1006 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 9 r9)
            (expr_list:REG_DEAD (reg:SI 8 r8)
                (expr_list:REG_DEAD (reg:SI 7 r7)
                    (expr_list:REG_DEAD (reg:SI 6 r6)
                        (expr_list:REG_DEAD (reg:SI 5 r5)
                            (expr_list:REG_DEAD (reg:SI 4 r4)
                                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                            (set/f (reg/f:SI 13 sp)
                                                (plus:SI (reg/f:SI 13 sp)
                                                    (const_int -36 [0xffffffffffffffdc])))
                                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                (reg:SI 4 r4))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
                                                (reg:SI 5 r5))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
                                                (reg:SI 6 r6))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
                                                (reg:SI 7 r7))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 S4 A32])
                                                (reg:SI 8 r8))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 S4 A32])
                                                (reg:SI 9 r9))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 S4 A32])
                                                (reg:SI 10 sl))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 S4 A32])
                                                (reg:SI 11 fp))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 S4 A32])
                                                (reg:SI 14 lr))
                                        ])
                                    (nil))))))))))

(insn/f:TI 1188 1187 1189 2 arch/arm/vfp/vfpdouble.c:1006 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -148 [0xffffffffffffff6c]))) 4 {*arm_addsi3} (nil))

(note 1189 1188 5 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 5 1189 1183 2 arch/arm/vfp/vfpdouble.c:1006 (set (reg/v:SI 4 r4 [orig:194 dm ] [194])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 1183 5 3 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 3 1183 10 2 arch/arm/vfp/vfpdouble.c:1006 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 10 3 1268 2 arch/arm/vfp/vfpdouble.c:1011 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(note 1268 10 6 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 6 1268 11 2 arch/arm/vfp/vfpdouble.c:1006 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 11 6 1271 2 arch/arm/vfp/vfpdouble.c:1011 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 1271 11 1270 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 1270 1271 1269 2 ( dm (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:194 dm ] [194])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1269 1270 27 2 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 27 1269 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [424])
        (ashift:SI (reg:SI 0 r0 [orig:190 D.5044 ] [190])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 27 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 12 ip [orig:425+4 ] [425])
        (ashift:SI (reg:SI 1 r1 [ D.5044+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 26 25 22 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 12 ip [orig:425+4 ] [425])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:190 D.5044 ] [190])
                (const_int 20 [0x14]))
            (reg:SI 12 ip [orig:425+4 ] [425]))) 270 {*arith_shiftsi} (nil))

(insn 22 26 1185 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 14 lr [orig:179 D.5579 ] [179])
        (zero_extract:SI (reg:SI 1 r1 [ D.5044+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn:TI 1185 22 924 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 7 r7 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.5044+4 ])
            (reg:SI 9 r9 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.5044+4 ])
            (nil))))

(insn 924 1185 46 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [212])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 46 924 29 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 14 lr [orig:179 D.5579 ] [179])
                    (reg:SI 1 r1 [212]))
                (ne:SI (reg:SI 14 lr [orig:179 D.5579 ] [179])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [212])
        (nil)))

(insn 29 46 1272 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:180 significand ] [180])
        (lshiftrt:SI (reg:SI 5 r5 [424])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(note 1272 29 30 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 30 1272 1273 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:180 significand ] [180])
        (ior:SI (ashift:SI (reg:SI 12 ip [orig:425+4 ] [425])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:180 significand ] [180]))) 270 {*arith_shiftsi} (nil))

(note 1273 30 1176 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1176 1273 15 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [220])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 15 1176 31 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [420])
        (lshiftrt:SI (reg:SI 7 r7 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (nil)))

(insn 31 15 1274 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 12 ip [orig:425+4 ] [425])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:425+4 ] [425])
        (nil)))

(note 1274 31 1178 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:180 significand ] [180])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 1178 1274 1275 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:180 significand ] [180])
            (ior:SI (reg:SI 2 r2 [orig:180 significand ] [180])
                (reg:SI 0 r0 [220])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [220])
        (nil)))

(note 1275 1178 17 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:180 significand ] [180])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 17 1275 54 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 114 [0x72])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [420])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 54 17 1177 2 arch/arm/vfp/vfpdouble.c:1012 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:194 dm ] [194])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:194 dm ] [194])
        (nil)))

(insn 1177 54 1179 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 1179 1177 1276 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 1276 1179 23 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:180 significand ] [180])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 23 1276 53 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 14 lr [orig:179 D.5579 ] [179])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 14 lr [orig:179 D.5579 ] [179])
        (nil)))

(insn:TI 53 23 55 2 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:180 significand ] [180])) 163 {*arm_movdi} (nil))

(call_insn 55 53 1277 2 arch/arm/vfp/vfpdouble.c:1012 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 1277 55 1170 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1170 1277 72 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 72 1170 1278 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [430])
        (ashift:SI (reg:SI 0 r0 [orig:189 D.5047 ] [189])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(note 1278 72 70 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 70 1278 71 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:431+4 ] [431])
        (ashift:SI (reg:SI 1 r1 [ D.5047+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.5047+4 ])
        (nil)))

(insn:TI 71 70 67 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:431+4 ] [431])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:189 D.5047 ] [189])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:431+4 ] [431]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:189 D.5047 ] [189])
        (nil)))

(insn 67 71 1172 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:177 D.5594 ] [177])
        (zero_extract:SI (reg:SI 1 r1 [ D.5047+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn:TI 1172 67 80 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 7 r7 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.5047+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 80 1172 91 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [237])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 91 80 74 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:177 D.5594 ] [177])
                    (reg:SI 1 r1 [237]))
                (ne:SI (reg:SI 12 ip [orig:177 D.5594 ] [177])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [237])
        (nil)))

(insn 74 91 1279 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:178 significand ] [178])
        (lshiftrt:SI (reg:SI 4 r4 [430])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(note 1279 74 75 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 75 1279 1280 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:178 significand ] [178])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:431+4 ] [431])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:178 significand ] [178]))) 270 {*arith_shiftsi} (nil))

(note 1280 75 1165 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1165 1280 103 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 4 r4 [245])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 103 1165 76 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 1 r1 [orig:174 D.5606 ] [174])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 112 [0x70])) [0 vdn.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 76 103 1281 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:431+4 ] [431])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:431+4 ] [431])
        (nil)))

(note 1281 76 1167 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:178 significand ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 1167 1281 1282 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:178 significand ] [178])
            (ior:SI (reg:SI 2 r2 [orig:178 significand ] [178])
                (reg:SI 4 r4 [245])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 4 r4 [245])
        (nil)))

(note 1282 1167 1166 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:178 significand ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 1166 1282 59 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 5 r5 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 59 1166 922 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 0 r0 [426])
        (lshiftrt:SI (reg:SI 7 r7 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (nil)))

(insn 922 59 1168 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 4 r4 [252])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 1168 922 1283 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 5 r5 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (nil)))

(note 1283 1168 99 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:178 significand ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 99 1283 108 2 arch/arm/vfp/vfpdouble.c:1014 (set (reg:SI 14 lr [orig:247 vdn.sign ] [247])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 114 [0x72])) [0 vdn.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 108 99 61 2 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:174 D.5606 ] [174])
            (reg:SI 4 r4 [252]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [252])
        (nil)))

(insn 61 108 68 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 0 r0 [orig:176 D.5597 ] [176])
        (zero_extend:SI (reg:HI 0 r0 [426]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 68 61 62 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:177 D.5594 ] [177])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 62 68 101 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 98 [0x62])) [0 vdm.sign+0 S2 A16])
        (reg:HI 0 r0 [orig:176 D.5597 ] [176])) 176 {*movhi_insn_arch4} (nil))

(insn 101 62 98 2 arch/arm/vfp/vfpdouble.c:1014 (set (reg:SI 0 r0 [248])
        (xor:SI (reg:SI 0 r0 [orig:176 D.5597 ] [176])
            (reg:SI 14 lr [orig:247 vdn.sign ] [247]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:247 vdn.sign ] [247])
        (nil)))

(insn:TI 98 101 102 2 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:178 significand ] [178])) 163 {*arm_movdi} (nil))

(insn:TI 102 98 109 2 arch/arm/vfp/vfpdouble.c:1014 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 130 [0x82])) [0 vdd.sign+0 S2 A16])
        (reg:HI 0 r0 [248])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 0 r0 [248])
        (nil)))

(jump_insn 109 102 110 2 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  5 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 4 [r4]

;; Pred edge  2 [28.0%]  (fallthru)
(note 110 109 112 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 112 110 113 3 NOTE_INSN_DELETED)

(note 113 112 111 3 NOTE_INSN_DELETED)

(insn:TI 111 113 114 3 arch/arm/vfp/vfp.h:331 (set (reg:DI 0 r0 [orig:175 D.5605 ] [175])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 114 111 117 3 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0 [orig:175 D.5605 ] [175])
                        (reg:SI 1 r1 [ D.5605+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 4 r4))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:175 D.5605 ] [175])
        (expr_list:REG_UNUSED (reg:SI 4 r4)
            (nil))))

(insn:TI 117 114 1284 3 arch/arm/vfp/vfp.h:332 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 1 r1 [orig:183 tn ] [183])
            (const_int 8 [0x8]))) 2345 {neon_vornv2di+78} (nil))

(note 1284 117 115 3 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:183 tn ] [183])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 115 1284 121 3 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 159)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 5 [r5] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 1 [r1] 5 [r5] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 121 115 124 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 124 121 125 4 NOTE_INSN_DELETED)

(note 125 124 836 4 NOTE_INSN_DELETED)

(note 836 125 1158 4 NOTE_INSN_DELETED)

(insn:TI 1158 836 1160 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 7 r7 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 1160 1158 1285 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 5 r5 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.5605+4 ])
            (reg:SI 7 r7 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (nil)))

(note 1285 1160 1161 4 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1161 1285 1162 4 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 1162 1161 1286 4 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 1 r1 [orig:183 tn ] [183])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(note 1286 1162 1163 4 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:183 tn ] [183])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 1163 1286 1236 4 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 1 r1 [orig:183 tn ] [183])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 1236 1163 1237 4 (set (pc)
        (label_ref 159)) -1 (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 1237 1236 1287)

(note 1287 1237 137 5 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 137 1287 138 5 159 "" [1 uses])

(note 138 137 139 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 139 138 142 5 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:174 D.5606 ] [174])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 142 139 1288 5 arch/arm/vfp/vfp.h:329 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 1 r1 [orig:183 tn ] [183])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 1288 142 140 5 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:183 tn ] [183])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 140 1288 146 5 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 159)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  7 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  5 [50.0%]  (fallthru)
(note 146 140 149 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 149 146 148 6 NOTE_INSN_DELETED)

(insn:TI 148 149 1289 6 arch/arm/vfp/vfp.h:338 (set (reg:SI 1 r1 [orig:258 vdn.significand+4 ] [258])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 124 [0x7c])) [0 vdn.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 124 [0x7c])) [0 vdn.significand+4 S4 A32])
        (nil)))

(note 1289 148 921 6 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 921 1289 838 6 arch/arm/vfp/vfp.h:341 (set (reg:SI 0 r0 [orig:257 vdn.significand ] [257])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S4 A64])
        (nil)))

(insn:TI 838 921 839 6 arch/arm/vfp/vfp.h:341 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 0 r0 [orig:257 vdn.significand ] [257])
                        (reg:SI 1 r1 [orig:258 vdn.significand+4 ] [258]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:258 vdn.significand+4 ] [258])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:257 vdn.significand ] [257])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(insn:TI 839 838 1290 6 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 1 r1 [orig:183 tn ] [183])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

(note 1290 839 159 7 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:183 tn ] [183])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 6 5 3 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [50.0%] 
;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%] 
(code_label 159 1290 160 7 161 "" [3 uses])

(note 160 159 161 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 161 160 162 7 NOTE_INSN_DELETED)

(note 162 161 163 7 NOTE_INSN_DELETED)

(note 163 162 164 7 NOTE_INSN_DELETED)

(insn:TI 164 163 165 7 arch/arm/vfp/vfp.h:330 (set (reg:SI 0 r0 [262])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 165 164 166 7 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:177 D.5594 ] [177])
            (reg:SI 0 r0 [262]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [262])
        (nil)))

(jump_insn:TI 166 165 167 7 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 193)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 7 -> ( 8 10)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  8 [28.0%]  (fallthru)
;; Succ edge  10 [72.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	 5 [r5]

;; Pred edge  7 [28.0%]  (fallthru)
(note 167 166 168 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 168 167 169 8 NOTE_INSN_DELETED)

(note 169 168 170 8 NOTE_INSN_DELETED)

(insn:TI 170 169 173 8 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:178 significand ] [178])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 5 r5))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:178 significand ] [178])
        (nil)))

(insn:TI 173 170 1291 8 arch/arm/vfp/vfp.h:332 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:184 tm ] [184])
            (const_int 8 [0x8]))) 2345 {neon_vornv2di+78} (nil))

(note 1291 173 171 8 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:184 tm ] [184])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 171 1291 177 8 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 214)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 8 -> ( 9 12)
;; lr  out 	 1 [r1] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 5 [r5] 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  8 [50.0%]  (fallthru)
(note 177 171 180 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 180 177 181 9 NOTE_INSN_DELETED)

(note 181 180 840 9 NOTE_INSN_DELETED)

(note 840 181 1150 9 NOTE_INSN_DELETED)

(insn:TI 1150 840 1152 9 arch/arm/vfp/vfp.h:333 (set (reg:SI 7 r7 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 1152 1150 1292 9 arch/arm/vfp/vfp.h:333 (set (reg:SI 5 r5 [+4 ])
        (and:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 7 r7 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
            (nil))))

(note 1292 1152 1153 9 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1153 1292 1154 9 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 1154 1153 1293 9 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:184 tm ] [184])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(note 1293 1154 1155 9 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:184 tm ] [184])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 1155 1293 1238 9 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:184 tm ] [184])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 1238 1155 1239 9 (set (pc)
        (label_ref 214)) -1 (nil))
;; End of basic block 9 -> ( 12)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [100.0%] 

(barrier 1239 1238 1294)

(note 1294 1239 193 10 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 7) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 5 [r5] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  7 [72.0%] 
(code_label 193 1294 194 10 165 "" [1 uses])

(note 194 193 195 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 195 194 198 10 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:177 D.5594 ] [177])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:177 D.5594 ] [177])
        (nil)))

(insn:TI 198 195 1295 10 arch/arm/vfp/vfp.h:329 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:184 tm ] [184])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 1295 198 196 10 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:184 tm ] [184])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 196 1295 202 10 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 214)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 5 [r5] 6 [r6] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	 6 [r6]

;; Pred edge  10 [50.0%]  (fallthru)
(note 202 196 203 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 203 202 204 11 NOTE_INSN_DELETED)

(note 204 203 842 11 NOTE_INSN_DELETED)

(insn:TI 842 204 843 11 arch/arm/vfp/vfp.h:341 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:178 significand ] [178])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 6 r6))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:178 significand ] [178])
            (expr_list:REG_UNUSED (reg:SI 6 r6)
                (nil)))))

(insn:TI 843 842 214 11 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 5 r5 [orig:184 tm ] [184])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10 8 9) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [50.0%] 
;; Pred edge  8 [50.0%] 
;; Pred edge  9 [100.0%] 
(code_label 214 843 215 12 167 "" [3 uses])

(note 215 214 216 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 216 215 217 12 NOTE_INSN_DELETED)

(insn:TI 217 216 218 12 arch/arm/vfp/vfpdouble.c:1022 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:183 tn ] [183])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 218 217 219 12 arch/arm/vfp/vfpdouble.c:1022 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 628)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 12 -> ( 57 13)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  57 [29.0%] 
;; Succ edge  13 [71.0%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  12 [71.0%]  (fallthru)
(note 219 218 220 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 220 219 221 13 NOTE_INSN_DELETED)

(insn:TI 221 220 222 13 arch/arm/vfp/vfpdouble.c:1028 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 5 r5 [orig:184 tm ] [184])
                        (const_int 16 [0x10]))
                    (const_int 0 [0x0])))
            (set (reg:SI 12 ip [269])
                (and:SI (reg/v:SI 5 r5 [orig:184 tm ] [184])
                    (const_int 16 [0x10])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn:TI 222 221 223 13 arch/arm/vfp/vfpdouble.c:1028 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 666)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 13 -> ( 60 14)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  60 [29.0%] 
;; Succ edge  14 [71.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 5 [r5] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  13 [71.0%]  (fallthru)
(note 223 222 225 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 225 223 224 14 NOTE_INSN_DELETED)

(insn:TI 224 225 226 14 arch/arm/vfp/vfpdouble.c:1035 (set (reg:SI 4 r4 [270])
        (and:SI (reg/v:SI 1 r1 [orig:183 tn ] [183])
            (const_int 10 [0xa]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 226 224 227 14 arch/arm/vfp/vfpdouble.c:1035 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 4 r4 [270])
                        (reg/v:SI 5 r5 [orig:184 tm ] [184]))
                    (const_int 0 [0x0])))
            (set (reg:SI 4 r4 [271])
                (and:SI (reg:SI 4 r4 [270])
                    (reg/v:SI 5 r5 [orig:184 tm ] [184])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn:TI 227 226 228 14 arch/arm/vfp/vfpdouble.c:1035 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 701)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 14 -> ( 63 15)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  63 [29.0%] 
;; Succ edge  15 [71.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [71.0%]  (fallthru)
(note 228 227 229 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 229 228 230 15 NOTE_INSN_DELETED)

(insn:TI 230 229 231 15 arch/arm/vfp/vfpdouble.c:1041 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:183 tn ] [183])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 231 230 232 15 arch/arm/vfp/vfpdouble.c:1041 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 692)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 62 16)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  62 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru)
(note 232 231 233 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 233 232 234 16 NOTE_INSN_DELETED)

(insn:TI 234 233 237 16 arch/arm/vfp/vfpdouble.c:1047 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:184 tm ] [184])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 237 234 1296 16 arch/arm/vfp/vfpdouble.c:1099 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
            (const_int 2 [0x2]))) 2345 {neon_vornv2di+78} (nil))

(note 1296 237 235 16 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 235 1296 241 16 arch/arm/vfp/vfpdouble.c:1047 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 692)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 62)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  62 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 241 235 242 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 242 241 243 17 NOTE_INSN_DELETED)

(insn:TI 243 242 244 17 arch/arm/vfp/vfpdouble.c:1053 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:184 tm ] [184])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 244 243 245 17 arch/arm/vfp/vfpdouble.c:1053 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 679)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 61 18)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  61 [50.0%] 
;; Succ edge  18 [50.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  17 [50.0%]  (fallthru)
(note 245 244 246 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 246 245 247 18 NOTE_INSN_DELETED)

(insn:TI 247 246 248 18 arch/arm/vfp/vfpdouble.c:1053 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:183 tn ] [183])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 248 247 249 18 arch/arm/vfp/vfpdouble.c:1053 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 679)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 61 19)
;; lr  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  61 [50.0%] 
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 249 248 250 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 250 249 251 19 NOTE_INSN_DELETED)

(insn:TI 251 250 252 19 arch/arm/vfp/vfpdouble.c:1056 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 1 r1 [orig:183 tn ] [183])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 1 r1 [orig:183 tn ] [183])
        (nil)))

(jump_insn:TI 252 251 253 19 arch/arm/vfp/vfpdouble.c:1056 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 257)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  20 [29.0%]  (fallthru)
;; Succ edge  21 [71.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  19 [29.0%]  (fallthru)
(note 253 252 254 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 254 253 255 20 NOTE_INSN_DELETED)

(insn:TI 255 254 256 20 arch/arm/vfp/vfpdouble.c:1057 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 112 [0x70]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 256 255 1298 20 arch/arm/vfp/vfpdouble.c:1057 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 1298 256 1297 20 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(note 1297 1298 1299 20 ( tn (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 20 -> ( 21)
;; lr  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  21 [100.0%]  (fallthru)

(note 1299 1297 1300 21 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:183 tn ] [183])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1300 1299 257 21 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:178 significand ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 19 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [71.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
(code_label 257 1300 258 21 178 "" [1 uses])

(note 258 257 259 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 259 258 260 21 NOTE_INSN_DELETED)

(insn:TI 260 259 261 21 arch/arm/vfp/vfpdouble.c:1058 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 5 r5 [orig:184 tm ] [184])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:184 tm ] [184])
        (nil)))

(jump_insn:TI 261 260 262 21 arch/arm/vfp/vfpdouble.c:1058 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 266)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [29.0%]  (fallthru)
;; Succ edge  23 [71.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  21 [29.0%]  (fallthru)
(note 262 261 263 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 263 262 264 22 NOTE_INSN_DELETED)

(insn:TI 264 263 265 22 arch/arm/vfp/vfpdouble.c:1059 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 265 264 1302 22 arch/arm/vfp/vfpdouble.c:1059 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 1302 265 1301 22 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(note 1301 1302 1303 22 ( tn (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 22 -> ( 23)
;; lr  out 	 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [100.0%]  (fallthru)

(note 1303 1301 1304 23 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:183 tn ] [183])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1304 1303 266 23 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:178 significand ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  21 [71.0%] 
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 266 1304 267 23 179 "" [1 uses])

(note 267 266 278 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:TI 278 267 282 23 arch/arm/vfp/vfpdouble.c:1065 (set (reg:DI 0 r0 [orig:288 vdm.significand ] [288])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 vdm.significand+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUIV (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 vdm.significand+0 S8 A64])
        (nil)))

(insn:TI 282 278 1305 23 arch/arm/vfp/vfpdouble.c:1066 (set (reg:DI 2 r2 [orig:186 D.5084 ] [186])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(note 1305 282 268 23 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 268 1305 1143 23 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 14 lr [orig:281 vdn.exponent ] [281])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 112 [0x70])) [0 vdn.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 1143 268 1144 23 arch/arm/vfp/vfpdouble.c:1065 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [289])
                        (reg:SI 0 r0 [orig:288 vdm.significand ] [288]))
                    (reg:SI 0 r0 [289])))
            (set (reg:SI 6 r6 [289])
                (plus:SI (reg:SI 0 r0 [289])
                    (reg:SI 0 r0 [orig:288 vdm.significand ] [288])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 0 r0 [289])
        (nil)))

(insn:TI 1144 1143 1306 23 arch/arm/vfp/vfpdouble.c:1065 (set (reg:SI 7 r7 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [orig:7+4 ] [7])
                (reg:SI 1 r1 [ vdm.significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [ vdm.significand+4 ])
            (nil))))

(note 1306 1144 273 23 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

(insn 273 1306 1147 23 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 12 ip [orig:286 vdm.exponent ] [286])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 96 [0x60])) [0 vdm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 1147 273 1307 23 arch/arm/vfp/vfpdouble.c:1066 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [290])
                        (reg:SI 2 r2 [orig:186 D.5084 ] [186]))
                    (reg:SI 2 r2 [290])))
            (set (reg:SI 4 r4 [290])
                (plus:SI (reg:SI 2 r2 [290])
                    (reg:SI 2 r2 [orig:186 D.5084 ] [186])))
        ]) 10 {*addsi3_compare_op1} (nil))

(note 1307 1147 270 23 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(insn 270 1307 271 23 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 14 lr [283])
        (plus:SI (reg:SI 14 lr [orig:281 vdn.exponent ] [281])
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn:TI 271 270 1148 23 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 1 r1 [282])
        (plus:SI (reg:SI 14 lr [283])
            (const_int 2 [0x2]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 14 lr [283])
        (nil)))

(insn 1148 271 1309 23 arch/arm/vfp/vfpdouble.c:1066 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [orig:5+4 ] [5])
                (reg:SI 3 r3 [ D.5084+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(note 1309 1148 1308 23 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(note 1308 1309 275 23 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 275 1308 284 23 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 1 r1 [287])
        (minus:SI (reg:SI 1 r1 [282])
            (reg:SI 12 ip [orig:286 vdm.exponent ] [286]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:286 vdm.exponent ] [286])
        (nil)))

(insn 284 275 281 23 arch/arm/vfp/vfpdouble.c:1066 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [+4 ])
            (reg:SI 5 r5 [+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(insn:TI 281 284 276 23 arch/arm/vfp/vfpdouble.c:1065 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 vdm.significand+0 S8 A64])
        (reg:DI 6 r6 [289])) 163 {*arm_movdi} (nil))

(insn:TI 276 281 277 23 arch/arm/vfp/vfpdouble.c:1064 (set (reg:SI 1 r1 [orig:188 D.5081 ] [188])
        (zero_extend:SI (reg:HI 1 r1 [287]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 277 276 285 23 arch/arm/vfp/vfpdouble.c:1064 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64])
        (reg:HI 1 r1 [orig:188 D.5081 ] [188])) 176 {*movhi_insn_arch4} (nil))

(jump_insn:TI 285 277 744 23 arch/arm/vfp/vfpdouble.c:1066 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 301)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 23 -> ( 27 24)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  27 [50.0%] 
;; Succ edge  24 [50.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  23 [50.0%]  (fallthru)
(note 744 285 287 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 287 744 745 24 arch/arm/vfp/vfpdouble.c:1066 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 803)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 24 -> ( 26 25)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  26 [71.0%] 
;; Succ edge  25 [29.0%]  (fallthru)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  24 [29.0%]  (fallthru)
(note 745 287 288 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:TI 288 745 289 25 arch/arm/vfp/vfpdouble.c:1066 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 6 r6 [289])
            (reg:SI 4 r4 [290]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [290])
        (nil)))

(jump_insn:TI 289 288 803 25 arch/arm/vfp/vfpdouble.c:1066 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 301)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 25 -> ( 27 26)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  27 [50.0%] 
;; Succ edge  26 [50.0%]  (fallthru)

;; Start of basic block ( 25 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 4 [r4] 5 [r5]
;; live  kill	 24 [cc]

;; Pred edge  25 [50.0%]  (fallthru)
;; Pred edge  24 [71.0%] 
(code_label 803 289 295 26 212 "" [1 uses])

(note 295 803 296 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:TI 296 295 299 26 arch/arm/vfp/vfpdouble.c:1067 (parallel [
            (set (reg:DI 4 r4 [291])
                (lshiftrt:DI (reg:DI 2 r2 [orig:186 D.5084 ] [186])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (expr_list:REG_EQUIV (mem/s/j/c:DI (plus:SI (reg/f:SI 25 sfp)
                    (const_int -24 [0xffffffffffffffe8])) [0 vdn.significand+0 S8 A64])
            (nil))))

(insn 299 296 297 26 arch/arm/vfp/vfpdouble.c:1068 (set (reg:SI 1 r1 [293])
        (plus:SI (reg:SI 1 r1 [orig:188 D.5081 ] [188])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn:TI 297 299 300 26 arch/arm/vfp/vfpdouble.c:1067 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])
        (reg:DI 4 r4 [291])) 163 {*arm_movdi} (nil))

(insn:TI 300 297 301 26 arch/arm/vfp/vfpdouble.c:1068 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64])
        (reg:HI 1 r1 [293])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [293])
        (nil)))
;; End of basic block 26 -> ( 27)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 26 23 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  23 [50.0%] 
;; Pred edge  25 [50.0%] 
(code_label 301 300 302 27 180 "" [2 uses])

(note 302 301 303 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:TI 303 302 304 27 arch/arm/vfp/vfpdouble.c:1070 (set (reg:DI 8 r8)
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdn.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 304 303 948 27 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [+4 ])
            (reg:SI 9 r9))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 948 304 305 27 arch/arm/vfp/vfpdouble.c:1070 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(jump_insn:TI 305 948 749 27 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 319)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 27 -> ( 31 28)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  31 [50.0%] 
;; Succ edge  28 [50.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 749 305 307 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 307 749 750 28 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 804)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 28 -> ( 30 29)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  30 [71.0%] 
;; Succ edge  29 [29.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  28 [29.0%]  (fallthru)
(note 750 307 308 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:TI 308 750 309 29 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 6 r6 [289])
            (reg:SI 8 r8))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 309 308 804 29 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 319)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 29 -> ( 31 30)
;; lr  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  31 [50.0%] 
;; Succ edge  30 [50.0%]  (fallthru)

;; Start of basic block ( 29 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  29 [50.0%]  (fallthru)
;; Pred edge  28 [71.0%] 
(code_label 804 309 315 30 213 "" [1 uses])

(note 315 804 1139 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1139 315 1310 30 arch/arm/vfp/vfp.h:118 (set (reg:SI 2 r2 [orig:160 z ] [160])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(note 1310 1139 1140 30 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1140 1310 1311 30 arch/arm/vfp/vfp.h:118 (set (reg:SI 3 r3 [ z+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(note 1311 1140 1240 30 ( z (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:160 z ] [160])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 1240 1311 1241 30 (set (pc)
        (label_ref 482)) -1 (nil))
;; End of basic block 30 -> ( 45)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  45 [100.0%] 

(barrier 1241 1240 1312)

(note 1312 1241 319 31 ( z (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 27 29) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 5 [r5] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 5 [r5] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  27 [50.0%] 
;; Pred edge  29 [50.0%] 
(code_label 319 1312 320 31 182 "" [2 uses])

(note 320 319 953 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:TI 953 320 322 31 arch/arm/vfp/vfp.h:120 (set (reg:SI 14 lr)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-100 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 322 953 950 31 arch/arm/vfp/vfp.h:119 (set (reg:SI 12 ip)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 950 322 952 31 arch/arm/vfp/vfp.h:119 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-136 S4 A64])
        (reg:SI 7 r7 [11])) 167 {*arm_movsi_insn} (nil))

(insn 952 950 325 31 arch/arm/vfp/vfp.h:120 (set (reg:SI 5 r5 [orig:411 D.5814+4 ] [411])
        (reg:SI 7 r7 [11])) 167 {*arm_movsi_insn} (nil))

(insn:TI 325 952 951 31 arch/arm/vfp/vfp.h:120 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [orig:411 D.5814+4 ] [411])
            (reg:SI 14 lr))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(insn 951 325 326 31 arch/arm/vfp/vfp.h:119 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-132 S4 A32])
        (reg:SI 12 ip)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip)
        (nil)))

(jump_insn:TI 326 951 754 31 arch/arm/vfp/vfp.h:120 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 340)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 31 -> ( 33 32)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  33 [50.0%] 
;; Succ edge  32 [50.0%]  (fallthru)

;; Start of basic block ( 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  31 [50.0%]  (fallthru)
(note 754 326 1135 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1135 754 1136 32 arch/arm/vfp/vfp.h:121 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1136 1135 954 32 arch/arm/vfp/vfp.h:121 (set (reg:SI 1 r1 [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 954 1136 1242 32 arch/arm/vfp/vfp.h:121 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(jump_insn 1242 954 1243 32 (set (pc)
        (label_ref 348)) -1 (nil))
;; End of basic block 32 -> ( 34)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  34 [100.0%] 

(barrier 1243 1242 340)

;; Start of basic block ( 31) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  31 [50.0%] 
(code_label 340 1243 341 33 185 "" [1 uses])

(note 341 340 812 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(note 812 341 956 33 NOTE_INSN_DELETED)

(insn:TI 956 812 1313 33 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-136 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 1313 956 343 33 ( __base (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [ __base ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 343 1313 1314 33 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg/v:DI 0 r0 [ __n ])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])) 163 {*arm_movdi} (nil))

(note 1314 343 344 33 ( __n (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [ __n ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 344 1314 1316 33 arch/arm/vfp/vfp.h:124 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (expr_list:REG_UNUSED (reg:SI 3 r3)
                            (nil))))))))

(note 1316 344 1315 33 ( __rem (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [ __rem ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1315 1316 958 33 ( __res (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [ __res ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 958 1315 957 33 arch/arm/vfp/vfp.h:125 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-132 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 957 958 1317 33 arch/arm/vfp/vfp.h:125 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-124 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(note 1317 957 959 33 ( __res (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 959 1317 348 33 arch/arm/vfp/vfp.h:125 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S4 A64])
        (reg:SI 3 r3)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))
;; End of basic block 33 -> ( 34)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 33 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  32 [100.0%] 
(code_label 348 959 349 34 187 "" [1 uses])

(note 349 348 366 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(note 366 349 960 34 NOTE_INSN_DELETED)

(insn:TI 960 366 962 34 arch/arm/vfp/vfp.h:86 (set (reg:SI 12 ip [432])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-124 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 962 960 1318 34 arch/arm/vfp/vfp.h:82 (set (reg/v:SI 4 r4 [orig:163 __left ] [163])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-136 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 1318 962 1319 34 ( __left (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:163 __left ] [163])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1319 1318 961 34 ( __base (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 961 1319 1320 34 arch/arm/vfp/vfp.h:80 (set (reg:SI 1 r1 [orig:295 z.732 ] [295])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 1320 961 1321 34 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(note 1321 1320 377 34 ( __rem (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 377 1321 1322 34 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 8 r8 [orig:165 rmb ] [165])
        (mult:DI (zero_extend:DI (reg:SI 12 ip [432]))
            (zero_extend:DI (reg:SI 6 r6 [orig:294 D.5083 ] [294])))) 51 {*umulsidi3_v6} (nil))

(note 1322 377 385 34 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 385 1322 357 34 arch/arm/vfp/vfp.h:89 (set (reg:DI 10 sl)
        (mult:DI (zero_extend:DI (reg:SI 12 ip [432]))
            (zero_extend:DI (reg/v:SI 4 r4 [orig:163 __left ] [163])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 12 ip [432])
        (nil)))

(insn:TI 357 385 963 34 arch/arm/vfp/vfp.h:80 (set (reg:DI 2 r2)
        (mult:DI (zero_extend:DI (reg:SI 1 r1 [orig:295 z.732 ] [295]))
            (zero_extend:DI (reg:SI 6 r6 [orig:294 D.5083 ] [294])))) 51 {*umulsidi3_v6} (nil))

(insn:TI 963 357 1131 34 arch/arm/vfp/vfp.h:89 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn 1131 963 1132 34 arch/arm/vfp/vfp.h:87 (set (reg:SI 10 sl)
        (reg:SI 8 r8 [orig:165 rmb ] [165])) 167 {*arm_movsi_insn} (nil))

(insn:TI 1132 1131 1323 34 arch/arm/vfp/vfp.h:87 (set (reg:SI 11 fp [+4 ])
        (reg:SI 9 r9 [ rmb+4 ])) 167 {*arm_movsi_insn} (nil))

(note 1323 1132 381 34 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 381 1323 964 34 arch/arm/vfp/vfp.h:87 (set (reg:DI 10 sl)
        (plus:DI (mult:DI (zero_extend:DI (reg:SI 1 r1 [orig:295 z.732 ] [295]))
                (zero_extend:DI (reg/v:SI 4 r4 [orig:163 __left ] [163])))
            (reg:DI 10 sl))) 53 {*umulsidi3adddi_v6} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:295 z.732 ] [295])
        (nil)))

(insn:TI 964 381 389 34 arch/arm/vfp/vfp.h:80 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))

(insn:TI 389 964 966 34 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [ rmb+4 ])
            (reg:SI 11 fp))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp)
        (expr_list:REG_DEAD (reg:SI 9 r9 [ rmb+4 ])
            (nil))))

(insn:TI 966 389 390 34 arch/arm/vfp/vfp.h:87 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(jump_insn 390 966 759 34 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 34 -> ( 38 35)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]


;; Succ edge  38 [50.0%] 
;; Succ edge  35 [50.0%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  34 [50.0%]  (fallthru)
(note 759 390 392 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 392 759 760 35 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 806)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 35 -> ( 37 36)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  37 [71.0%] 
;; Succ edge  36 [29.0%]  (fallthru)

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  35 [29.0%]  (fallthru)
(note 760 392 393 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn:TI 393 760 394 36 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:165 rmb ] [165])
            (reg:SI 10 sl))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (expr_list:REG_DEAD (reg:SI 8 r8 [orig:165 rmb ] [165])
            (nil))))

(jump_insn:TI 394 393 806 36 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 404)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36 -> ( 38 37)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  38 [50.0%] 
;; Succ edge  37 [50.0%]  (fallthru)

;; Start of basic block ( 36 35) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  36 [50.0%]  (fallthru)
;; Pred edge  35 [71.0%] 
(code_label 806 394 400 37 215 "" [1 uses])

(note 400 806 1129 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1129 400 1324 37 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1324 1129 1130 37 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1130 1324 1325 37 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1325 1130 967 37 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 967 1325 1244 37 arch/arm/vfp/vfp.h:90 discrim 2 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(jump_insn 1244 967 1245 37 (set (pc)
        (label_ref 407)) -1 (nil))
;; End of basic block 37 -> ( 39)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  39 [100.0%] 

(barrier 1245 1244 1326)

(note 1326 1245 1327 38 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(note 1327 1326 404 38 ( __n (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [ __n ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 34 36) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  34 [50.0%] 
;; Pred edge  36 [50.0%] 
(code_label 404 1327 405 38 188 "" [2 uses])

(note 405 404 1127 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1127 405 1128 38 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1128 1127 968 38 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 3 r3 [+4 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn:TI 968 1128 407 38 arch/arm/vfp/vfp.h:90 discrim 1 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))
;; End of basic block 38 -> ( 39)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 38 37) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  37 [100.0%] 
(code_label 407 968 408 39 190 "" [1 uses])

(note 408 407 844 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(note 844 408 846 39 NOTE_INSN_DELETED)

(note 846 844 438 39 NOTE_INSN_DELETED)

(note 438 846 970 39 NOTE_INSN_DELETED)

(insn:TI 970 438 1328 39 arch/arm/vfp/vfp.h:92 (set (reg:SI 9 r9)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 1328 970 410 39 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:165 rmb ] [165])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 410 1328 972 39 arch/arm/vfp/vfp.h:92 (set (reg:SI 11 fp)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 972 410 973 39 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 10 sl)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-108 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 973 972 971 39 arch/arm/vfp/vfp.h:92 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-120 S4 A64])
        (reg:SI 11 fp)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 11 fp)
        (nil)))

(insn:TI 971 973 412 39 arch/arm/vfp/vfp.h:92 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-116 S4 A32])
        (reg:SI 9 r9)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9)
        (nil)))

(insn 412 971 1329 39 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 8 r8 [orig:308 rma.735 ] [308])
        (reg:SI 10 sl)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(note 1329 412 1330 39 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(note 1330 1329 975 39 ( rmb (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 975 1330 977 39 arch/arm/vfp/vfp.h:93 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 977 975 978 39 arch/arm/vfp/vfp.h:93 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-120 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 978 977 1331 39 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])) 163 {*arm_movdi} (nil))

(note 1331 978 1115 39 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1115 1331 981 39 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2)
                        (reg:SI 10 sl))
                    (reg:SI 2 r2)))
            (set (reg:SI 2 r2)
                (plus:SI (reg:SI 2 r2)
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 981 1115 1116 39 arch/arm/vfp/vfp.h:129 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-108 S4 A32])
        (reg:SI 6 r6 [3])) 167 {*arm_movsi_insn} (nil))

(insn:TI 1116 981 1117 39 arch/arm/vfp/vfp.h:93 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 1117 1116 1118 39 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0)
                        (reg:SI 8 r8 [orig:308 rma.735 ] [308]))
                    (reg:SI 0 r0)))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0)
                    (reg:SI 8 r8 [orig:308 rma.735 ] [308])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:308 rma.735 ] [308])
        (nil)))

(insn:TI 1118 1117 1333 39 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 10 sl [orig:9 rma.735+4 ] [9])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 10 sl [orig:9 rma.735+4 ] [9])
            (nil))))

(note 1333 1118 1332 39 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(note 1332 1333 845 39 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 8 r8 [orig:308 rma.735 ] [308])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 10 sl [orig:9 rma.735+4 ] [9])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 845 1332 976 39 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:SI 12 ip [442])
                (gtu:SI (reg:SI 11 fp)
                    (reg:SI 3 r3)))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 11 fp)
        (expr_list:REG_DEAD (reg:SI 3 r3)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn:TI 976 845 1119 39 arch/arm/vfp/vfp.h:93 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-88 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))

(insn 1119 976 1120 39 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0)
                        (reg:SI 12 ip [442]))
                    (reg:SI 0 r0)))
            (set (reg:SI 2 r2)
                (plus:SI (reg:SI 0 r0)
                    (reg:SI 12 ip [442])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 12 ip [442])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn:TI 1120 1119 980 39 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (const_int 0 [0x0])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(insn 980 1120 984 39 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))

(insn:TI 984 980 1334 39 arch/arm/vfp/vfp.h:62 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])) 163 {*arm_movdi} (nil))

(note 1334 984 986 39 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn 986 1334 982 39 arch/arm/vfp/vfp.h:129 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 982 986 1335 39 arch/arm/vfp/vfp.h:62 (set (reg:DI 8 r8)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(note 1335 982 987 39 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 987 1335 1121 39 arch/arm/vfp/vfp.h:129 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S4 A64])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn:TI 1121 987 992 39 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8)
                        (reg:SI 10 sl))
                    (reg:SI 8 r8)))
            (set (reg:SI 8 r8)
                (plus:SI (reg:SI 8 r8)
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 992 1121 1122 39 arch/arm/vfp/vfp.h:62 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 1122 992 988 39 arch/arm/vfp/vfp.h:62 (set (reg:SI 9 r9 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(insn 988 1122 1125 39 arch/arm/vfp/vfp.h:62 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 1125 988 1126 39 arch/arm/vfp/vfp.h:62 (set (reg:SI 10 sl)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1126 1125 432 39 arch/arm/vfp/vfp.h:62 (set (reg:SI 11 fp [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 432 1126 990 39 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:DI 10 sl)
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg:DI 10 sl)
                        (reg:DI 2 r2)
                        (reg:DI 0 r0)
                        (reg:DI 8 r8)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg:DI 2 r2)
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg:DI 10 sl)
                        (reg:DI 2 r2)
                        (reg:DI 0 r0)
                        (reg:DI 8 r8)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn:TI 990 432 991 39 arch/arm/vfp/vfp.h:62 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn:TI 991 990 926 39 arch/arm/vfp/vfp.h:62 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))

(insn:TI 926 991 1336 39 (set (reg/v:DI 8 r8 [orig:143 z.732 ] [143])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])) 163 {*arm_movdi} (nil))

(note 1336 926 927 39 ( z (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:143 z.732 ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 927 1336 1337 39 (set (reg/v:DI 10 sl [orig:156 mh ] [156])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-136 S8 A64])) 163 {*arm_movdi} (nil))

(note 1337 927 929 39 ( mh (expr_list:REG_DEP_TRUE (reg/v:DI 10 sl [orig:156 mh ] [156])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 929 1337 1338 39 (set (reg/v:DI 0 r0 [orig:159 reml ] [159])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])) 163 {*arm_movdi} (nil))

(note 1338 929 931 39 ( reml (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:159 reml ] [159])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 931 1338 1246 39 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])
        (reg:DI 6 r6 [289])) 163 {*arm_movdi} (nil))

(jump_insn 1246 931 1247 39 (set (pc)
        (label_ref 441)) -1 (nil))
;; End of basic block 39 -> ( 41)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  41 [100.0%] 

(barrier 1247 1246 1339)

(note 1339 1247 1340 40 ( remh (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [orig:158 remh ] [158])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1340 1339 443 40 ( z (expr_list:REG_DEP_TRUE (reg:DI 8 r8 [orig:143 z.732 ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 41) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  41 [21.0%] 
(code_label 443 1340 437 40 194 "" [1 uses])

(note 437 443 1107 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1107 437 1108 40 arch/arm/vfp/vfp.h:131 (set (reg:SI 6 r6)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1108 1107 1109 40 arch/arm/vfp/vfp.h:131 (set (reg:SI 7 r7 [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 1109 1108 1110 40 arch/arm/vfp/vfp.h:131 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8 [orig:143 z.732 ] [143])
                        (reg:SI 6 r6))
                    (reg:SI 8 r8 [orig:143 z.732 ] [143])))
            (set (reg:SI 8 r8 [orig:143 z.732 ] [143])
                (plus:SI (reg:SI 8 r8 [orig:143 z.732 ] [143])
                    (reg:SI 6 r6)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 6 r6)
        (nil)))

(insn:TI 1110 1109 994 40 arch/arm/vfp/vfp.h:131 (set (reg:SI 9 r9 [ z.732+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [ z.732+4 ])
                (reg:SI 7 r7 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
            (nil))))

(insn 994 1110 440 40 arch/arm/vfp/vfp.h:49 (set (reg:DI 6 r6)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 440 994 441 40 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 0 r0 [orig:159 reml ] [159])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 0 r0 [orig:159 reml ] [159])
                        (reg/v:DI 2 r2 [orig:158 remh ] [158])
                        (reg:DI 6 r6)
                        (reg/v:DI 10 sl [orig:156 mh ] [156])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 2 r2 [orig:158 remh ] [158])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 0 r0 [orig:159 reml ] [159])
                        (reg/v:DI 2 r2 [orig:158 remh ] [158])
                        (reg:DI 6 r6)
                        (reg/v:DI 10 sl [orig:156 mh ] [156])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 40 -> ( 41)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  41 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 40 39) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  40 [100.0%]  (fallthru,dfs_back)
;; Pred edge  39 [100.0%] 
(code_label 441 440 442 41 193 "" [1 uses])

(note 442 441 444 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn:TI 444 442 445 41 arch/arm/vfp/vfp.h:130 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ remh+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 445 444 770 41 arch/arm/vfp/vfp.h:130 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 443)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 41 -> ( 40 42)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  40 [21.0%] 
;; Succ edge  42 [79.0%]  (fallthru,loop_exit)

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  41 [79.0%]  (fallthru,loop_exit)
(note 770 445 455 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:TI 455 770 996 42 arch/arm/vfp/vfp.h:134 (set (reg:SI 11 fp [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 996 455 1341 42 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-108 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(note 1341 996 997 42 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 997 1341 454 42 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S4 A64])
        (reg:SI 11 fp [8])) 167 {*arm_movsi_insn} (nil))

(insn 454 997 1342 42 arch/arm/vfp/vfp.h:134 (set (reg:SI 10 sl [314])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (nil))

(note 1342 454 934 42 ( mh (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 934 1342 1343 42 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
        (reg/v:DI 2 r2 [orig:158 remh ] [158])) 163 {*arm_movdi} (nil))

(note 1343 934 998 42 ( remh (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [orig:158 remh ] [158])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 998 1343 1344 42 arch/arm/vfp/vfp.h:134 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])) 163 {*arm_movdi} (nil))

(note 1344 998 933 42 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 933 1344 457 42 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])
        (reg/v:DI 8 r8 [orig:143 z.732 ] [143])) 163 {*arm_movdi} (nil))

(insn 457 933 1345 42 arch/arm/vfp/vfp.h:134 (set (reg:SI 8 r8)
        (reg:SI 11 fp [+4 ])) 167 {*arm_movsi_insn} (nil))

(note 1345 457 1105 42 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1105 1345 1346 42 arch/arm/vfp/vfp.h:134 (set (reg:SI 0 r0 [orig:162 __n ] [162])
        (ior:SI (reg:SI 1 r1 [314])
            (reg:SI 2 r2))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1 [314])
            (nil))))

(note 1346 1105 1347 42 ( reml (nil)) NOTE_INSN_VAR_LOCATION)

(note 1347 1346 1106 42 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1106 1347 1349 42 arch/arm/vfp/vfp.h:134 (set (reg:SI 1 r1 [ __n+4 ])
        (ior:SI (reg:SI 11 fp [+4 ])
            (reg:SI 3 r3 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(note 1349 1106 1348 42 ( __n (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:162 __n ] [162])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1348 1349 459 42 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 459 1348 937 42 arch/arm/vfp/vfp.h:135 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [orig:411 D.5814+4 ] [411])
            (reg:SI 1 r1 [ __n+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [orig:411 D.5814+4 ] [411])
        (nil)))

(insn 937 459 460 42 (set (reg:DI 6 r6 [289])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(jump_insn:TI 460 937 774 42 arch/arm/vfp/vfp.h:135 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 475)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 42 -> ( 44 43)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  44 [50.0%] 
;; Succ edge  43 [50.0%]  (fallthru)

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  42 [50.0%]  (fallthru)
(note 774 460 999 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn:TI 999 774 1350 43 arch/arm/vfp/vfp.h:136 (set (reg/v:DI 2 r2 [orig:160 z ] [160])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])) 163 {*arm_movdi} (nil))

(note 1350 999 1099 43 ( z (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [orig:160 z ] [160])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 1099 1350 1351 43 arch/arm/vfp/vfp.h:136 (set (reg:SI 0 r0 [317])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(note 1351 1099 1100 43 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1100 1351 1352 43 arch/arm/vfp/vfp.h:136 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1352 1100 1101 43 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1101 1352 1353 43 arch/arm/vfp/vfp.h:136 (set (reg:SI 2 r2 [orig:160 z ] [160])
        (ior:SI (reg:SI 2 r2 [orig:160 z ] [160])
            (reg:SI 0 r0 [317]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [317])
        (nil)))

(note 1353 1101 1102 43 ( z (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [orig:160 z ] [160])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 9 r9 [ z.732+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 1102 1353 1354 43 arch/arm/vfp/vfp.h:136 (set (reg:SI 3 r3 [ z+4 ])
        (ior:SI (reg:SI 3 r3 [ z+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(note 1354 1102 1248 43 ( z (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:160 z ] [160])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 1248 1354 1249 43 (set (pc)
        (label_ref 482)) -1 (nil))
;; End of basic block 43 -> ( 45)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  45 [100.0%] 

(barrier 1249 1248 1355)

(note 1355 1249 1356 44 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(note 1356 1355 475 44 ( __n (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:162 __n ] [162])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 42) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  42 [50.0%] 
(code_label 475 1356 476 44 196 "" [1 uses])

(note 476 475 480 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(note 480 476 479 44 NOTE_INSN_DELETED)

(insn:TI 479 480 1360 44 arch/arm/vfp/vfp.h:138 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (nil)))))))

(note 1360 479 1361 44 ( __rem (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [ __rem ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1361 1360 1359 44 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(note 1359 1361 1358 44 ( __res (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [ __res ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1358 1359 1357 44 ( __base (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [ __base ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1357 1358 1000 44 ( __n (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [ __n ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 1000 1357 1362 44 arch/arm/vfp/vfp.h:139 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-128 S8 A64])) 163 {*arm_movdi} (nil))

(note 1362 1000 1363 44 ( __left (nil)) NOTE_INSN_VAR_LOCATION)

(note 1363 1362 1097 44 ( __base (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1097 1363 1364 44 arch/arm/vfp/vfp.h:139 (set (reg:SI 2 r2 [orig:160 z ] [160])
        (ior:SI (reg:SI 2 r2 [ __res ])
            (reg:SI 4 r4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(note 1364 1097 1365 44 ( __res (nil)) NOTE_INSN_VAR_LOCATION)

(note 1365 1364 1098 44 ( z (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [orig:160 z ] [160])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 9 r9 [ z.732+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 1098 1365 1367 44 arch/arm/vfp/vfp.h:139 (set (reg:SI 3 r3 [ z+4 ])
        (ior:SI (reg:SI 3 r3 [ __res+4 ])
            (reg:SI 5 r5 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(note 1367 1098 1368 44 ( __res (nil)) NOTE_INSN_VAR_LOCATION)

(note 1368 1367 1366 44 ( z (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:160 z ] [160])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1366 1368 1369 44 ( __res (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 44 -> ( 45)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  45 [100.0%]  (fallthru)

(note 1369 1366 482 45 ( __left (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:163 __left ] [163])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 30 44 43) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  30 [100.0%] 
;; Pred edge  44 [100.0%]  (fallthru)
;; Pred edge  43 [100.0%] 
(code_label 482 1369 483 45 184 "" [2 uses])

(note 483 482 1093 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1093 483 1092 45 arch/arm/vfp/vfpdouble.c:1071 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1092 1093 1370 45 arch/arm/vfp/vfpdouble.c:1071 (set (reg:SI 4 r4 [319])
        (const_int 511 [0x1ff])) 167 {*arm_movsi_insn} (nil))

(note 1370 1092 1096 45 ( __left (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1096 1370 1371 45 arch/arm/vfp/vfpdouble.c:1071 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [ z+4 ])
            (reg:SI 5 r5 [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(note 1371 1096 484 45 ( __rem (nil)) NOTE_INSN_VAR_LOCATION)

(insn 484 1371 487 45 arch/arm/vfp/vfpdouble.c:1070 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:160 z ] [160])) 163 {*arm_movdi} (nil))

(insn:TI 487 484 1095 45 arch/arm/vfp/vfpdouble.c:1071 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 1095 487 1372 45 arch/arm/vfp/vfpdouble.c:1071 (set (reg:SI 0 r0 [318])
        (and:SI (reg:SI 2 r2 [orig:160 z ] [160])
            (reg:SI 4 r4 [319]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [319])
        (nil)))

(note 1372 1095 1373 45 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(note 1373 1372 488 45 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 488 1373 780 45 arch/arm/vfp/vfpdouble.c:1071 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 615)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 45 -> ( 56 46)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  56 [50.0%] 
;; Succ edge  46 [50.0%]  (fallthru)

;; Start of basic block ( 45) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  45 [50.0%]  (fallthru)
(note 780 488 491 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn:TI 491 780 492 46 arch/arm/vfp/vfpdouble.c:1071 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [318])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [318])
        (nil)))

(jump_insn:TI 492 491 781 46 arch/arm/vfp/vfpdouble.c:1071 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 615)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 46 -> ( 56 47)
;; lr  out 	 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  56 [50.0%] 
;; Succ edge  47 [50.0%]  (fallthru)

;; Start of basic block ( 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  46 [50.0%]  (fallthru)
(note 781 492 517 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(note 517 781 536 47 NOTE_INSN_DELETED)

(insn:TI 536 517 1374 47 arch/arm/vfp/vfp.h:89 (set (reg:DI 8 r8)
        (mult:DI (zero_extend:DI (reg:SI 3 r3 [436]))
            (zero_extend:DI (reg:SI 7 r7 [434])))) 51 {*umulsidi3_v6} (nil))

(note 1374 536 528 47 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 528 1374 1375 47 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 0 r0 [orig:153 rmb ] [153])
        (mult:DI (zero_extend:DI (reg:SI 3 r3 [436]))
            (zero_extend:DI (reg:SI 6 r6 [orig:320 D.5083 ] [320])))) 51 {*umulsidi3_v6} (nil))

(note 1375 528 506 47 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 506 1375 1376 47 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 10 sl [orig:154 rl ] [154])
        (mult:DI (zero_extend:DI (reg:SI 2 r2 [orig:321 z ] [321]))
            (zero_extend:DI (reg:SI 6 r6 [orig:320 D.5083 ] [320])))) 51 {*umulsidi3_v6} (nil))

(note 1376 506 1001 47 ( rl (expr_list:REG_DEP_TRUE (reg/v:DI 10 sl [orig:154 rl ] [154])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 1001 1376 1088 47 arch/arm/vfp/vfp.h:89 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-88 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(insn:TI 1088 1001 1089 47 arch/arm/vfp/vfp.h:87 (set (reg:SI 8 r8)
        (reg:SI 0 r0 [orig:153 rmb ] [153])) 167 {*arm_movsi_insn} (nil))

(insn 1089 1088 1377 47 arch/arm/vfp/vfp.h:87 (set (reg:SI 9 r9 [+4 ])
        (reg:SI 1 r1 [ rmb+4 ])) 167 {*arm_movsi_insn} (nil))

(note 1377 1089 532 47 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 532 1377 540 47 arch/arm/vfp/vfp.h:87 (set (reg:DI 8 r8)
        (plus:DI (mult:DI (zero_extend:DI (reg:SI 2 r2 [orig:321 z ] [321]))
                (zero_extend:DI (reg:SI 7 r7 [434])))
            (reg:DI 8 r8))) 53 {*umulsidi3adddi_v6} (nil))

(insn:TI 540 532 1378 47 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ rmb+4 ])
            (reg:SI 9 r9 [orig:5 rma.739+4 ] [5]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [orig:5 rma.739+4 ] [5])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ rmb+4 ])
            (nil))))

(note 1378 540 1090 47 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1090 1378 1379 47 arch/arm/vfp/vfp.h:87 (set (reg:SI 4 r4 [orig:137 rma.739 ] [137])
        (reg:SI 8 r8)) 167 {*arm_movsi_insn} (nil))

(note 1379 1090 1091 47 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 4 r4 [orig:137 rma.739 ] [137])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 9 r9 [orig:5 rma.739+4 ] [5])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn:TI 1091 1379 1381 47 arch/arm/vfp/vfp.h:87 (set (reg:SI 5 r5 [ rma.739+4 ])
        (reg:SI 9 r9 [+4 ])) 167 {*arm_movsi_insn} (nil))

(note 1381 1091 1380 47 ( rma (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:137 rma.739 ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1380 1381 541 47 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 541 1380 784 47 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 555)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 47 -> ( 51 48)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  51 [50.0%] 
;; Succ edge  48 [50.0%]  (fallthru)

;; Start of basic block ( 47) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  47 [50.0%]  (fallthru)
(note 784 541 543 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 543 784 785 48 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 810)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 48 -> ( 50 49)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  50 [71.0%] 
;; Succ edge  49 [29.0%]  (fallthru)

;; Start of basic block ( 48) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  48 [29.0%]  (fallthru)
(note 785 543 544 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn:TI 544 785 545 49 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:153 rmb ] [153])
            (reg:SI 8 r8 [orig:137 rma.739 ] [137]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:137 rma.739 ] [137])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:153 rmb ] [153])
            (nil))))

(jump_insn:TI 545 544 810 49 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 555)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 49 -> ( 51 50)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  51 [50.0%] 
;; Succ edge  50 [50.0%]  (fallthru)

;; Start of basic block ( 49 48) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  49 [50.0%]  (fallthru)
;; Pred edge  48 [71.0%] 
(code_label 810 545 551 50 219 "" [1 uses])

(note 551 810 1086 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1086 551 1382 50 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1382 1086 1087 50 ( rmb (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1087 1382 1383 50 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1383 1087 1004 50 ( rmb (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1004 1383 1250 50 arch/arm/vfp/vfp.h:90 discrim 2 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(jump_insn 1250 1004 1251 50 (set (pc)
        (label_ref 558)) -1 (nil))
;; End of basic block 50 -> ( 52)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  52 [100.0%] 

(barrier 1251 1250 1384)

(note 1384 1251 555 51 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:153 rmb ] [153])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 47 49) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  47 [50.0%] 
;; Pred edge  49 [50.0%] 
(code_label 555 1384 556 51 200 "" [2 uses])

(note 556 555 1084 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1084 556 1085 51 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 8 r8)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1085 1084 1005 51 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 9 r9 [+4 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn:TI 1005 1085 1385 51 arch/arm/vfp/vfp.h:90 discrim 1 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))
;; End of basic block 51 -> ( 52)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  52 [100.0%]  (fallthru)

(note 1385 1005 558 52 ( rma (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:137 rma.739 ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 51 50) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  51 [100.0%]  (fallthru)
;; Pred edge  50 [100.0%] 
(code_label 558 1385 559 52 202 "" [1 uses])

(note 559 558 847 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(note 847 559 849 52 NOTE_INSN_DELETED)

(note 849 847 587 52 NOTE_INSN_DELETED)

(note 587 849 591 52 NOTE_INSN_DELETED)

(note 591 587 561 52 NOTE_INSN_DELETED)

(insn:TI 561 591 1386 52 arch/arm/vfp/vfp.h:92 (set (reg:SI 0 r0 [orig:135 rma.741 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1386 561 1387 52 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [orig:135 rma.741 ] [135])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 5 r5 [ rma.739+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(note 1387 1386 560 52 ( rmb (nil)) NOTE_INSN_VAR_LOCATION)

(insn 560 1387 1388 52 arch/arm/vfp/vfp.h:92 (set (reg:SI 1 r1 [ rma.741+4 ])
        (reg:SI 4 r4 [orig:137 rma.739 ] [137])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:137 rma.739 ] [137])
        (nil)))

(note 1388 560 1389 52 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 4 r4 [orig:137 rma.739 ] [137])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ rma.741+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(note 1389 1388 1007 52 ( rmb (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1007 1389 1074 52 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S4 A64])
        (reg:SI 5 r5 [9])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [9])
        (nil)))

(insn 1074 1007 1390 52 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl [4])
                        (reg:SI 0 r0 [orig:135 rma.741 ] [135]))
                    (reg:SI 10 sl [4])))
            (set (reg:SI 4 r4)
                (plus:SI (reg:SI 10 sl [4])
                    (reg:SI 0 r0 [orig:135 rma.741 ] [135])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 10 sl [4])
        (nil)))

(note 1390 1074 1010 52 ( rl (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1010 1390 1391 52 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-108 S4 A32])
        (reg:SI 0 r0 [5])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [5])
        (nil)))

(note 1391 1010 1075 52 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1075 1391 1011 52 arch/arm/vfp/vfp.h:93 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [orig:5+4 ] [5])
                (reg:SI 1 r1 [ rma.741+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [orig:5+4 ] [5])
            (nil))))

(insn:TI 1011 1075 1070 52 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-112 S8 A64])) 163 {*arm_movdi} (nil))

(insn 1070 1011 1009 52 arch/arm/vfp/vfp.h:62 (set (reg:SI 8 r8 [339])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 1009 1070 1071 52 arch/arm/vfp/vfp.h:93 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])
        (reg:DI 4 r4)) 163 {*arm_movdi} (nil))

(insn 1071 1009 1013 52 arch/arm/vfp/vfp.h:62 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 1013 1071 1076 52 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 1076 1013 1077 52 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl)
                        (reg:SI 4 r4))
                    (reg:SI 10 sl)))
            (set (reg:SI 10 sl)
                (plus:SI (reg:SI 10 sl)
                    (reg:SI 4 r4)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn:TI 1077 1076 1014 52 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (reg:SI 5 r5 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
            (nil))))

(insn 1014 1077 848 52 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 5 r5)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 76 [0x4c])) [0 %sfp+-68 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 848 1014 1016 52 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:SI 12 ip [443])
                (gtu:SI (reg:SI 1 r1 [ rma.741+4 ])
                    (reg:SI 5 r5)))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 5 r5)
        (expr_list:REG_DEAD (reg:SI 1 r1 [ rma.741+4 ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 1016 848 1078 52 arch/arm/vfp/vfp.h:62 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 1078 1016 1079 52 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl)
                        (reg:SI 12 ip [443]))
                    (reg:SI 10 sl)))
            (set (reg:SI 0 r0 [340])
                (plus:SI (reg:SI 10 sl)
                    (reg:SI 12 ip [443])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 12 ip [443])
        (expr_list:REG_DEAD (reg:SI 10 sl)
            (nil))))

(insn:TI 1079 1078 1392 52 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (const_int 0 [0x0])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(note 1392 1079 1015 52 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1015 1392 1080 52 arch/arm/vfp/vfp.h:62 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-64 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 1080 1015 1081 52 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [340])
                        (reg:SI 10 sl))
                    (reg:SI 0 r0 [340])))
            (set (reg:SI 0 r0 [340])
                (plus:SI (reg:SI 0 r0 [340])
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn:TI 1081 1080 1018 52 arch/arm/vfp/vfp.h:62 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(insn 1018 1081 583 52 arch/arm/vfp/vfp.h:62 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-72 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 583 1018 1393 52 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg/v:DI 8 r8 [orig:181 reml ] [181])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg/v:DI 8 r8 [orig:181 reml ] [181])
                        (reg:DI 4 r4)
                        (reg:DI 10 sl)
                        (reg:DI 0 r0 [340])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg:DI 4 r4)
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg/v:DI 8 r8 [orig:181 reml ] [181])
                        (reg:DI 4 r4)
                        (reg:DI 10 sl)
                        (reg:DI 0 r0 [340])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 1393 583 1017 52 ( reml (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:181 reml ] [181])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 1017 1393 1082 52 arch/arm/vfp/vfp.h:62 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-104 S8 A64])
        (reg:DI 4 r4)) 163 {*arm_movdi} (nil))

(insn 1082 1017 1394 52 (set (reg:SI 0 r0 [orig:182 remh ] [182])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(note 1394 1082 1083 52 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1083 1394 1395 52 (set (reg:SI 1 r1 [ remh+4 ])
        (reg:SI 5 r5 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(note 1395 1083 1252 52 ( remh (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:182 remh ] [182])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 1252 1395 1253 52 arch/arm/vfp/vfpdouble.c:1075 (set (pc)
        (label_ref 589)) -1 (nil))
;; End of basic block 52 -> ( 54)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]


;; Succ edge  54 [100.0%] 

(barrier 1253 1252 1396)

(note 1396 1253 593 53 ( z (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:160 z ] [160])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 54) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9]
;; live  kill	 24 [cc]

;; Pred edge  54 [21.0%] 
(code_label 593 1396 586 53 206 "" [1 uses])

(note 586 593 1066 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1066 586 1067 53 arch/arm/vfp/vfp.h:49 (set (reg:SI 4 r4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1067 1066 588 53 arch/arm/vfp/vfp.h:49 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 588 1067 1398 53 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 8 r8 [orig:181 reml ] [181])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 8 r8 [orig:181 reml ] [181])
                        (reg/v:DI 0 r0 [orig:182 remh ] [182])
                        (reg:DI 6 r6 [289])
                        (reg:DI 4 r4)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 0 r0 [orig:182 remh ] [182])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 8 r8 [orig:181 reml ] [181])
                        (reg/v:DI 0 r0 [orig:182 remh ] [182])
                        (reg:DI 6 r6 [289])
                        (reg:DI 4 r4)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 53 -> ( 54)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]


;; Succ edge  54 [100.0%]  (fallthru,dfs_back)

(note 1398 588 1397 54 ( reml (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:181 reml ] [181])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1397 1398 589 54 ( remh (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:182 remh ] [182])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 53 52) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  53 [100.0%]  (fallthru,dfs_back)
;; Pred edge  52 [100.0%] 
(code_label 589 1397 590 54 205 "" [1 uses])

(note 590 589 1062 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1062 590 1063 54 arch/arm/vfp/vfp.h:49 (set (reg:SI 10 sl)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 1063 1062 1064 54 arch/arm/vfp/vfp.h:49 (set (reg:SI 11 fp [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 1064 1063 1065 54 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:160 z ] [160])
                        (reg:SI 10 sl))
                    (reg:SI 2 r2 [orig:160 z ] [160])))
            (set (reg:SI 2 r2 [orig:160 z ] [160])
                (plus:SI (reg:SI 2 r2 [orig:160 z ] [160])
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn:TI 1065 1064 594 54 arch/arm/vfp/vfp.h:49 (set (reg:SI 3 r3 [ z+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [ z+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(insn 594 1065 595 54 arch/arm/vfp/vfpdouble.c:1075 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ remh+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 595 594 795 54 arch/arm/vfp/vfpdouble.c:1075 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 593)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 54 -> ( 53 55)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  53 [21.0%] 
;; Succ edge  55 [79.0%]  (fallthru,loop_exit)

;; Start of basic block ( 54) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 11 [fp]

;; Pred edge  54 [79.0%]  (fallthru,loop_exit)
(note 795 595 605 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(note 605 795 606 55 NOTE_INSN_DELETED)

(note 606 605 607 55 NOTE_INSN_DELETED)

(insn:TI 607 606 1399 55 arch/arm/vfp/vfpdouble.c:1079 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 8 r8 [orig:181 reml ] [181])
                        (reg:SI 9 r9 [ reml+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 11 fp))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 11 fp)
        (nil)))

(note 1399 607 1052 55 ( reml (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:181 reml ] [181])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 1052 1399 1400 55 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 0 r0 [345])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 1400 1052 1060 55 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1060 1400 1061 55 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 4 r4 [343])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 1061 1060 1058 55 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 1058 1061 1059 55 arch/arm/vfp/vfpdouble.c:1079 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 4 r4 [343])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(insn 1059 1058 1053 55 arch/arm/vfp/vfpdouble.c:1079 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 5 r5 [+4 ])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn:TI 1053 1059 1401 55 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1401 1053 1054 55 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1054 1401 1055 55 arch/arm/vfp/vfpdouble.c:1079 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [345])
                        (reg:SI 2 r2 [orig:160 z ] [160]))
                    (reg:SI 0 r0 [345])))
            (set (reg:SI 0 r0 [345])
                (plus:SI (reg:SI 0 r0 [345])
                    (reg:SI 2 r2 [orig:160 z ] [160])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:160 z ] [160])
        (nil)))

(insn:TI 1055 1054 1056 55 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 3 r3 [ z+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 3 r3 [ z+4 ])
            (nil))))

(insn 1056 1055 1402 55 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 2 r2 [347])
        (ior:SI (reg:SI 4 r4 [343])
            (reg:SI 0 r0 [345]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [343])
        (expr_list:REG_DEAD (reg:SI 0 r0 [345])
            (nil))))

(note 1402 1056 1057 55 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1057 1402 1403 55 arch/arm/vfp/vfpdouble.c:1079 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (reg:SI 5 r5 [+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(note 1403 1057 614 55 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn 614 1403 1404 55 arch/arm/vfp/vfpdouble.c:1079 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [347])) 163 {*arm_movdi} (nil))
;; End of basic block 55 -> ( 56)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  56 [100.0%]  (fallthru)

(note 1404 614 615 56 ( z (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:160 z ] [160])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 55 45 46) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  55 [100.0%]  (fallthru)
;; Pred edge  45 [50.0%] 
;; Pred edge  46 [50.0%] 
(code_label 615 1404 616 56 198 "" [2 uses])

(note 616 615 617 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(note 617 616 919 56 NOTE_INSN_DELETED)

(insn:TI 919 617 621 56 arch/arm/vfp/vfpdouble.c:1081 (set (reg/f:SI 12 ip [349])
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>)
        (nil)))

(insn 621 919 620 56 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn:TI 620 621 623 56 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 623 620 1405 56 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1405 623 622 56 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 622 1405 1406 56 arch/arm/vfp/vfpdouble.c:1081 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 1406 622 619 56 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 619 1406 624 56 arch/arm/vfp/vfpdouble.c:1081 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [349])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [349])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10d96040>)
            (nil))))

(call_insn 624 619 625 56 arch/arm/vfp/vfpdouble.c:1081 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 625 624 1407 56 arch/arm/vfp/vfpdouble.c:1081 (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 1407 625 1254 56 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 1254 1407 1255 56 arch/arm/vfp/vfpdouble.c:1081 (set (pc)
        (label_ref 730)) -1 (nil))
;; End of basic block 56 -> ( 65)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  65 [100.0%] 

(barrier 1255 1254 1408)

(note 1408 1255 1409 57 ( reml (nil)) NOTE_INSN_VAR_LOCATION)

(note 1409 1408 1410 57 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(note 1410 1409 1411 57 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:184 tm ] [184])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1411 1410 1412 57 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:183 tn ] [183])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1412 1411 628 57 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:178 significand ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 12) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  12 [29.0%] 
(code_label 628 1412 629 57 171 ("vdn_nan") [1 uses])

(note 629 628 630 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(note 630 629 631 57 NOTE_INSN_DELETED)

(note 631 630 632 57 NOTE_INSN_DELETED)

(note 632 631 636 57 NOTE_INSN_DELETED)

(insn:TI 636 632 1413 57 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 1413 636 633 57 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 633 1413 634 57 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn:TI 634 633 1414 57 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 112 [0x70]))) 4 {*arm_addsi3} (nil))

(note 1414 634 635 57 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

(insn 635 1414 1415 57 arch/arm/vfp/vfpdouble.c:1084 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))
;; End of basic block 57 -> ( 58)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  58 [100.0%]  (fallthru)

(note 1415 635 1195 58 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 57 60) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  57 [100.0%]  (fallthru)
;; Pred edge  60 [100.0%] 
(code_label 1195 1415 1193 58 221 "" [1 uses])

(note 1193 1195 637 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 637 1193 638 58 arch/arm/vfp/vfpdouble.c:1084 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 638 637 1416 58 arch/arm/vfp/vfpdouble.c:1084 (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 58 -> ( 59)
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  59 [100.0%]  (fallthru)

(note 1416 638 1417 59 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1417 1416 639 59 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:183 tn ] [183])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 58 61 62) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  58 [100.0%]  (fallthru)
;; Pred edge  61 [100.0%] 
;; Pred edge  62 [100.0%] 
(code_label 639 1417 640 59 210 ("pack") [2 uses])

(note 640 639 648 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(note 648 640 654 59 NOTE_INSN_DELETED)

(note 654 648 660 59 NOTE_INSN_DELETED)

(note 660 654 647 59 NOTE_INSN_DELETED)

(insn:TI 647 660 645 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 14 lr [orig:358 vdd.exponent ] [358])
        (sign_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 645 647 653 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 2 r2 [356])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 653 645 1048 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 12 ip [orig:366 vdd.significand+4 ] [366])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 140 [0x8c])) [0 vdd.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 140 [0x8c])) [0 vdd.significand+4 S4 A32])
        (nil)))

(insn 1048 653 642 59 arch/arm/vfp/vfpdouble.c:1086 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [361])
                        (reg:SI 2 r2 [360]))
                    (reg:SI 2 r2 [361])))
            (set (reg:SI 6 r6 [361])
                (plus:SI (reg:SI 2 r2 [361])
                    (reg:SI 2 r2 [360])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 2 r2 [361])
        (nil)))

(insn:TI 642 1048 1418 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 5 r5 [orig:354 vdd.sign ] [354])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 130 [0x82])) [0 vdd.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 1418 642 650 59 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 650 1418 649 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 8 r8 [360])
        (reg:SI 2 r2 [356])) 167 {*arm_movsi_insn} (nil))

(insn:TI 649 650 918 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 9 r9 [+4 ])
        (ashift:SI (reg:SI 14 lr [orig:358 vdd.exponent ] [358])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:358 vdd.exponent ] [358])
        (nil)))

(insn 918 649 659 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 14 lr [orig:367 vdd.significand ] [367])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S4 A64])
        (nil)))

(insn:TI 659 918 1419 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 1 r1 [+4 ])
        (lshiftrt:SI (reg:SI 12 ip [orig:366 vdd.significand+4 ] [366])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:366 vdd.significand+4 ] [366])
        (nil)))

(note 1419 659 662 59 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

(insn 662 1419 644 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 644 662 656 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 3 r3 [+4 ])
        (ashift:SI (reg:SI 5 r5 [orig:354 vdd.sign ] [354])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 656 644 1049 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 0 r0 [364])
        (lshiftrt:SI (reg:SI 14 lr [orig:367 vdd.significand ] [367])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:367 vdd.significand ] [367])
        (nil)))

(insn 1049 656 657 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 7 r7 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [orig:7+4 ] [7])
                (reg:SI 9 r9 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 3 r3 [orig:7+4 ] [7])
            (nil))))

(insn:TI 657 1049 1050 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 0 r0 [364])
        (ior:SI (ashift:SI (reg:SI 12 ip [orig:366 vdd.significand+4 ] [366])
                (const_int 22 [0x16]))
            (reg:SI 0 r0 [364]))) 270 {*arith_shiftsi} (nil))

(insn:TI 1050 657 1051 59 arch/arm/vfp/vfpdouble.c:1086 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [364])
                        (reg:SI 6 r6 [361]))
                    (reg:SI 0 r0 [364])))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0 [364])
                    (reg:SI 6 r6 [361])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn:TI 1051 1050 1256 59 arch/arm/vfp/vfpdouble.c:1086 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 7 r7 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(jump_insn 1256 1051 1257 59 (set (pc)
        (label_ref 1200)) -1 (nil))
;; End of basic block 59 -> ( 64)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  64 [100.0%] 

(barrier 1257 1256 1420)

(note 1420 1257 1421 60 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(note 1421 1420 1422 60 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:184 tm ] [184])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1422 1421 1423 60 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:183 tn ] [183])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1423 1422 666 60 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:178 significand ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 13) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  13 [29.0%] 
(code_label 666 1423 667 60 172 ("vdm_nan") [1 uses])

(note 667 666 668 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(note 668 667 669 60 NOTE_INSN_DELETED)

(note 669 668 670 60 NOTE_INSN_DELETED)

(note 670 669 674 60 NOTE_INSN_DELETED)

(insn:TI 674 670 1424 60 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 %sfp+-76 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 1424 674 671 60 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 671 1424 672 60 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 128 [0x80]))) 4 {*arm_addsi3} (nil))

(insn:TI 672 671 1425 60 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(note 1425 672 673 60 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

(insn 673 1425 1426 60 arch/arm/vfp/vfpdouble.c:1090 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 112 [0x70]))) 4 {*arm_addsi3} (nil))

(note 1426 673 1258 60 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 1258 1426 1259 60 (set (pc)
        (label_ref 1195)) -1 (nil))
;; End of basic block 60 -> ( 58)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  58 [100.0%] 

(barrier 1259 1258 1427)

(note 1427 1259 1428 61 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1428 1427 1429 61 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [orig:183 tn ] [183])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1429 1428 679 61 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:178 significand ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 17 18) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	

;; Pred edge  17 [50.0%] 
;; Pred edge  18 [50.0%] 
(code_label 679 1429 680 61 177 ("zero") [2 uses])

(note 680 679 1022 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn:TI 1022 680 1038 61 arch/arm/vfp/vfpdouble.c:1094 (set (reg:HI 12 ip)
        (const_int 0 [0x0])) 176 {*movhi_insn_arch4} (nil))

(insn 1038 1022 1430 61 arch/arm/vfp/vfpdouble.c:1095 (set (reg:SI 2 r2 [375])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1430 1038 1039 61 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1039 1430 1431 61 arch/arm/vfp/vfpdouble.c:1095 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1431 1039 683 61 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 683 1431 685 61 arch/arm/vfp/vfpdouble.c:1094 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64])
        (reg:HI 12 ip)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 12 ip)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:TI 685 683 686 61 arch/arm/vfp/vfpdouble.c:1095 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [375])) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 686 685 1260 61 arch/arm/vfp/vfpdouble.c:1008 (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 1260 686 1261 61 arch/arm/vfp/vfpdouble.c:1096 (set (pc)
        (label_ref 639)) -1 (nil))
;; End of basic block 61 -> ( 59)
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  59 [100.0%] 

(barrier 1261 1260 1432)

(note 1432 1261 692 62 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:178 significand ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 15 16) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  15 [50.0%] 
;; Pred edge  16 [50.0%] 
(code_label 692 1432 693 62 176 ("infinity") [2 uses])

(note 693 692 694 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn:TI 694 693 1433 62 arch/arm/vfp/vfpdouble.c:1101 (set (reg:SI 3 r3 [377])
        (const_int -63489 [0xffffffffffff07ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -63489 [0xffffffffffff07ff])
        (nil)))

(note 1433 694 1036 62 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1036 1433 1434 62 arch/arm/vfp/vfpdouble.c:1102 (set (reg:SI 2 r2 [378])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1434 1036 696 62 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 696 1434 1037 62 arch/arm/vfp/vfpdouble.c:1101 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdd.exponent+0 S2 A64])
        (reg:HI 3 r3 [377])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [377])
        (expr_list:REG_EQUAL (const_int 2047 [0x7ff])
            (nil))))

(insn 1037 696 698 62 arch/arm/vfp/vfpdouble.c:1102 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 698 1037 1262 62 arch/arm/vfp/vfpdouble.c:1102 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 136 [0x88])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [378])) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 1262 698 1263 62 arch/arm/vfp/vfpdouble.c:1103 (set (pc)
        (label_ref 639)) -1 (nil))
;; End of basic block 62 -> ( 59)
;; lr  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  59 [100.0%] 

(barrier 1263 1262 1435)

(note 1435 1263 1436 63 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(note 1436 1435 701 63 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:178 significand ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 14) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(13){ }}
;; lr  in  	 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  in  	 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  14 [29.0%] 
(code_label 701 1436 702 63 173 "" [1 uses])

(note 702 701 712 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(note 712 702 719 63 NOTE_INSN_DELETED)

(note 719 712 725 63 NOTE_INSN_DELETED)

(note 725 719 703 63 NOTE_INSN_DELETED)

(insn:TI 703 725 1437 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg/f:SI 3 r3 [379])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(note 1437 703 729 63 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 729 1437 1438 63 arch/arm/vfp/vfpdouble.c:1107 (set (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 1438 729 727 63 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:185 exceptions ] [185])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 727 1438 1439 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-80 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 1439 727 708 63 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 708 1439 714 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 8 r8 [383])
        (reg:SI 12 ip [269])) 167 {*arm_movsi_insn} (nil))

(insn:TI 714 708 720 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 6 r6 [388])
        (reg:SI 12 ip [269])) 167 {*arm_movsi_insn} (nil))

(insn:TI 720 714 705 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 10 sl [orig:396 vfp_double_default_qnan.significand ] [396])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [379])
                (const_int 8 [0x8])) [0 vfp_double_default_qnan.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 vfp_double_default_qnan.significand+0 S4 A64])
        (nil)))

(insn:TI 705 720 1440 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 5 r5 [orig:381 vfp_double_default_qnan.sign ] [381])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 3 r3 [379])
                    (const_int 2 [0x2])) [0 vfp_double_default_qnan.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/s/j/c:HI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 2 [0x2]))) [0 vfp_double_default_qnan.sign+0 S2 A16]))
        (nil)))

(note 1440 705 711 63 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 711 1440 718 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 14 lr [orig:386 vfp_double_default_qnan.exponent ] [386])
        (sign_extend:SI (mem/s/j/c:HI (reg/f:SI 3 r3 [379]) [0 vfp_double_default_qnan.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (expr_list:REG_EQUAL (sign_extend:SI (mem/s/j/c:HI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 vfp_double_default_qnan.exponent+0 S2 A64]))
        (nil)))

(insn:TI 718 711 721 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 3 r3 [orig:395 vfp_double_default_qnan.significand+4 ] [395])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [379])
                (const_int 12 [0xc])) [0 vfp_double_default_qnan.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 vfp_double_default_qnan.significand+4 S4 A32])
        (nil)))

(insn 721 718 707 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 0 r0 [393])
        (lshiftrt:SI (reg:SI 10 sl [orig:396 vfp_double_default_qnan.significand ] [396])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 10 sl [orig:396 vfp_double_default_qnan.significand ] [396])
        (nil)))

(insn:TI 707 721 1032 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 9 r9 [+4 ])
        (ashift:SI (reg:SI 5 r5 [orig:381 vfp_double_default_qnan.sign ] [381])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 1032 707 713 63 arch/arm/vfp/vfpdouble.c:1106 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 12 ip [389])
                        (reg:SI 12 ip [388]))
                    (reg:SI 12 ip [389])))
            (set (reg:SI 10 sl [389])
                (plus:SI (reg:SI 12 ip [389])
                    (reg:SI 12 ip [388])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 12 ip [389])
        (nil)))

(insn:TI 713 1032 722 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 7 r7 [+4 ])
        (ashift:SI (reg:SI 14 lr [orig:386 vfp_double_default_qnan.exponent ] [386])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:386 vfp_double_default_qnan.exponent ] [386])
        (nil)))

(insn:TI 722 713 1033 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 0 r0 [393])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:395 vfp_double_default_qnan.significand+4 ] [395])
                (const_int 22 [0x16]))
            (reg:SI 0 r0 [393]))) 270 {*arith_shiftsi} (nil))

(insn 1033 722 724 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [orig:11+4 ] [11])
                (reg:SI 7 r7 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn:TI 724 1033 1441 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 1 r1 [+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:395 vfp_double_default_qnan.significand+4 ] [395])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:395 vfp_double_default_qnan.significand+4 ] [395])
        (nil)))

(note 1441 724 1034 63 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

(insn 1034 1441 1035 63 arch/arm/vfp/vfpdouble.c:1106 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [393])
                        (reg:SI 10 sl [389]))
                    (reg:SI 0 r0 [393])))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0 [393])
                    (reg:SI 10 sl [389])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn:TI 1035 1034 1200 63 arch/arm/vfp/vfpdouble.c:1106 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))
;; End of basic block 63 -> ( 64)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  64 [100.0%]  (fallthru)

;; Start of basic block ( 63 59) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  63 [100.0%]  (fallthru)
;; Pred edge  59 [100.0%] 
(code_label 1200 1035 1198 64 222 "" [1 uses])

(note 1198 1200 728 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(call_insn:TI 728 1198 1442 64 arch/arm/vfp/vfpdouble.c:1106 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))
;; End of basic block 64 -> ( 65)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  65 [100.0%]  (fallthru)

(note 1442 728 730 65 ( reml (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:181 reml ] [181])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 64 56) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  64 [100.0%]  (fallthru)
;; Pred edge  56 [100.0%] 
(code_label 730 1442 731 65 209 "" [1 uses])

(note 731 730 736 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn:TI 736 731 742 65 arch/arm/vfp/vfpdouble.c:1108 (set (reg/i:SI 0 r0)
        (reg/v:SI 4 r4 [orig:185 exceptions ] [185])) 167 {*arm_movsi_insn} (nil))

(insn 742 736 1190 65 arch/arm/vfp/vfpdouble.c:1108 (use (reg/i:SI 0 r0)) -1 (nil))

(note 1190 742 1191 65 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 1191 1190 1192 65 arch/arm/vfp/vfpdouble.c:1108 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 65 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 1192 1191 917)

(note 917 1192 945 NOTE_INSN_DELETED)

(note 945 917 0 NOTE_INSN_DELETED)


;; Function vfp_double_add (vfp_double_add)[0:172]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: vdd+0
Reg 1: vdn+0
Reg 2: vdm+0
Reg 3: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg:SI 1 r1 [ vdn ])
  name: vdm
    offset 0
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: vdd
    offset 0
      (reg:SI 0 r0 [ vdd ])

OUT:
Stack adjustment: 48
Reg 0: vdd+0
Reg 1: vdn+0
Reg 2: vdm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
      (reg/f:SI 1 r1 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
      (reg:SI 0 r0 [ vdd ])


Basic block 3:
IN:
Stack adjustment: 48
Reg 0: vdd+0
Reg 1: vdn+0
Reg 2: vdm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
      (reg:SI 0 r0 [ vdd ])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
      (reg/f:SI 1 r1 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
      (reg:SI 2 r2 [ vdm ])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])

OUT:
Stack adjustment: 48
Reg 0: vdd+0
Reg 1: vdn+0
Reg 2: vdm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
      (reg/f:SI 1 r1 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/f:SI 2 r2 [orig:151 vdm ] [151])
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
      (reg:SI 0 r0 [ vdd ])


Basic block 4:
IN:
Stack adjustment: 48
Reg 0: vdd+0
Reg 1: vdn+0
Reg 2: vdm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
      (reg/f:SI 1 r1 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/f:SI 2 r2 [orig:151 vdm ] [151])
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
      (reg:SI 0 r0 [ vdd ])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 5:
IN:
Stack adjustment: 48
Reg 0: vdd+0
Reg 1: vdn+0
Reg 2: vdm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
      (reg/f:SI 1 r1 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
      (reg/f:SI 2 r2 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
      (reg:SI 0 r0 [ vdd ])

OUT:
Stack adjustment: 48
Reg 0: vdd+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
      (reg:SI 0 r0 [ vdd ])


Basic block 6:
IN:
Stack adjustment: 48
Reg 0: vdd+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
      (reg:SI 0 r0 [ vdd ])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 7:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 8:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 9:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

OUT:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 10:
IN:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])

OUT:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])


Basic block 11:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

OUT:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 12:
IN:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])

OUT:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])


Basic block 13:
IN:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])

OUT:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])


Basic block 14:
IN:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: exceptions+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 12 ip [orig:138 exceptions ] [138])


Basic block 15:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: exceptions+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 12 ip [orig:138 exceptions ] [138])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: exceptions+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 12 ip [orig:138 exceptions ] [138])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 16:
IN:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

OUT:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])


Basic block 17:
IN:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

OUT:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])


Basic block 18:
IN:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])


Basic block 19:
IN:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: exceptions+0 tn+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 12 ip [orig:138 exceptions ] [138])
  name: tn
    offset 0
      (reg/v:SI 12 ip [orig:139 tn ] [139])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])

OUT:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: exceptions+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 12 ip [orig:138 exceptions ] [138])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])


Basic block 20:
IN:
Stack adjustment: 48
Reg 3: tm+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: exceptions+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 12 ip [orig:138 exceptions ] [138])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:140 tm ] [140])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: exceptions+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 12 ip [orig:138 exceptions ] [138])


Basic block 21:
IN:
Stack adjustment: 48
Reg 0: vdd+0
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
      (reg:SI 0 r0 [ vdd ])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: m_sig
    offset 0
      (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 22:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: m_sig
    offset 0
      (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 23:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 24:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 25:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 9: m_sig+4
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: m_sig
    offset 0
      (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])
    offset 4
      (reg:SI 9 r9 [ m_sig.774+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 26:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 9: m_sig+4
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: m_sig
    offset 0
      (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])
    offset 4
      (reg:SI 9 r9 [ m_sig.774+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 27:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 9: m_sig+4
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
    offset 4
      (reg:SI 9 r9 [ m_sig.774+4 ])

OUT:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 9: m_sig+4
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: m_sig
    offset 0
      (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
    offset 4
      (reg:SI 9 r9 [ m_sig.774+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 28:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 9: m_sig+4
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
    offset 4
      (reg:SI 9 r9 [ m_sig.774+4 ])

OUT:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 29:
IN:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])

OUT:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 30:
IN:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])

OUT:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 31:
IN:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])

OUT:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 32:
IN:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])

OUT:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 33:
IN:
Stack adjustment: 48
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 8: m_sig+0
Reg 9: m_sig+4
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
    offset 4
      (reg:SI 9 r9 [ m_sig.774+4 ])

OUT:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: m_sig
    offset 0
      (reg:SI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])


Basic block 34:
IN:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Variables:
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])

OUT:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: exceptions+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 12 ip [orig:138 exceptions ] [138])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])


Basic block 35:
IN:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: exceptions+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 12 ip [orig:138 exceptions ] [138])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])

OUT:
Stack adjustment: 48
Reg 2: m_sig+0
Reg 3: m_sig+4
Reg 4: vdn+0
Reg 5: vdd+0
Reg 6: vdm+0
Reg 10: fpscr+0
Reg 12: exceptions+0
Variables:
  name: vdd
    offset 0
      (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
  name: vdn
    offset 0
      (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
  name: vdm
    offset 0
      (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
  name: fpscr
    offset 0
      (reg/v:SI 10 sl [orig:152 fpscr ] [152])
  name: exceptions
    offset 0
      (reg/v:SI 12 ip [orig:138 exceptions ] [138])
  name: m_sig
    offset 0
      (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    offset 4
      (reg:SI 3 r3 [ m_sig+4 ])


36 basic blocks, 52 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	 12 [ip]
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 24 [cc]
;; live  kill	

Successors:  4 [21.0%]  3 [79.0%]  (fallthru)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 7900, maybe hot.
Predecessors:  2 [79.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  4 [21.0%]  (fallthru) 5 [79.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 8.
Predecessors:  3 [21.0%]  (fallthru) 2 [21.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]

Invalid sum of incoming frequencies 3759, should be 8

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 3 [79.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 24 [cc]
;; live  kill	

Successors:  6 [28.0%]  (fallthru) 21 [72.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 6249, should be 10000

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 784, maybe hot.
Predecessors:  5 [28.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	 0 [r0]

Successors:  7 [50.0%]  (fallthru) 8 [50.0%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 2800, should be 784

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 392, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 1 [r1] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  kill	

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 6 [50.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  9 [28.0%]  (fallthru) 11 [72.0%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 784, should be 2800

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 784, maybe hot.
Predecessors:  8 [28.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

Successors:  10 [50.0%]  (fallthru) 13 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 392, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

Successors:  13 [100.0%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 2016, maybe hot.
Predecessors:  8 [72.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  13 [50.0%]  12 [50.0%]  (fallthru)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 1008, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 3 [r3]

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 11 [50.0%]  9 [50.0%]  10 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

Successors:  14 [50.0%]  (fallthru) 16 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 12 [ip] 24 [cc]
;; live  kill	

Successors:  20 [72.0%]  15 [28.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 392, maybe hot.
Predecessors:  14 [28.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}

Successors:  19 [100.0%] 


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  13 [50.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  17 [71.0%]  (fallthru) 18 [29.0%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 994, maybe hot.
Predecessors:  16 [71.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  19 [50.0%]  18 [50.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 903, maybe hot.
Predecessors:  16 [29.0%]  17 [50.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 889, maybe hot.
Predecessors:  17 [50.0%]  15 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

Successors:  20 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 1897, maybe hot.
Predecessors:  19 [100.0%]  (fallthru) 14 [72.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  35 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  5 [72.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

Successors:  22 [50.0%]  (fallthru) 27 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  21 [50.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  23 [50.0%]  (fallthru) 26 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  22 [50.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

Successors:  25 [29.0%]  24 [71.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 1278, maybe hot.
Predecessors:  23 [71.0%]  (fallthru)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  23 [29.0%]  24 [100.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 8 [r8] 9 [r9]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 8 [r8] 9 [r9]
;; live  kill	

Successors:  27 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 1800, maybe hot.
Predecessors:  22 [50.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

Successors:  27 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  21 [50.0%]  26 [100.0%]  (fallthru) 25 [100.0%] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  28 [72.0%]  (fallthru) 33 [28.0%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 5184, maybe hot.
Predecessors:  27 [72.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

Successors:  31 [21.0%]  29 [79.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 4095, maybe hot.
Predecessors:  28 [79.0%]  (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  30 [50.0%]  (fallthru) 34 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 2048, maybe hot.
Predecessors:  29 [50.0%]  (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}

Successors:  32 [100.0%] 


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  28 [21.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

Successors:  34 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 1089, should be 1400

Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 1892, maybe hot.
Predecessors:  30 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl] 24 [cc]
;; live  kill	

Successors:  34 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 2048, should be 1892

Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 2016, maybe hot.
Predecessors:  27 [28.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  29 [50.0%]  33 [100.0%]  (fallthru) 31 [100.0%]  32 [100.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

Successors:  35 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]

Invalid sum of incoming frequencies 7356, should be 7200

Basic block 35 , prev 34, next 1, loop_depth 0, count 0, freq 9097, maybe hot.
Predecessors:  34 [100.0%]  (fallthru) 20 [100.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


Basic block 1 , prev 35, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  18 [100.0%]  (ab,sibcall) 35 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,22u} r1={22d,20u} r2={28d,26u} r3={35d,36u} r4={4d,21u,1d} r5={2d,15u} r6={3d,14u,3d} r7={3d,7u} r8={8d,13u} r9={8d,13u} r10={5d,8u} r12={12d,6u} r13={2d,49u} r14={6d,3u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={32d,35u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 1142{850d,288u,4e} in 157{151 regular + 6 call} insns.
(note 1 0 487 NOTE_INSN_DELETED)

(note 487 1 488 2 ( vdd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ vdd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 488 487 489 2 ( vdn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ vdn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 489 488 490 2 ( vdm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ vdm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 490 489 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 490 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 443 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 443 6 494 2 arch/arm/vfp/vfpdouble.c:727 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 3 r3))
            (use (reg:SI 4 r4))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 10 sl)
        (expr_list:REG_DEAD (reg:SI 6 r6)
            (expr_list:REG_DEAD (reg:SI 5 r5)
                (expr_list:REG_DEAD (reg:SI 4 r4)
                    (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                (set/f (reg/f:SI 13 sp)
                                    (plus:SI (reg/f:SI 13 sp)
                                        (const_int -48 [0xffffffffffffffd0])))
                                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                    (reg:SI 0 r0))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 4 [0x4])) [0 S4 A32])
                                    (reg:SI 1 r1))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 8 [0x8])) [0 S4 A32])
                                    (reg:SI 2 r2))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 12 [0xc])) [0 S4 A32])
                                    (reg:SI 3 r3))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 16 [0x10])) [0 S4 A32])
                                    (reg:SI 4 r4))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 20 [0x14])) [0 S4 A32])
                                    (reg:SI 5 r5))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 24 [0x18])) [0 S4 A32])
                                    (reg:SI 6 r6))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 28 [0x1c])) [0 S4 A32])
                                    (reg:SI 7 r7))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 32 [0x20])) [0 S4 A32])
                                    (reg:SI 8 r8))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 36 [0x24])) [0 S4 A32])
                                    (reg:SI 9 r9))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 40 [0x28])) [0 S4 A32])
                                    (reg:SI 10 sl))
                                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                            (const_int 44 [0x2c])) [0 S4 A32])
                                    (reg:SI 14 lr))
                            ])
                        (nil)))))))

(note 494 443 493 2 ( vdd (nil)) NOTE_INSN_VAR_LOCATION)

(note 493 494 492 2 ( vdn (nil)) NOTE_INSN_VAR_LOCATION)

(note 492 493 491 2 ( vdm (nil)) NOTE_INSN_VAR_LOCATION)

(note 491 492 444 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 444 491 5 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 5 444 495 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v:SI 10 sl [orig:152 fpscr ] [152])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(note 495 5 9 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 9 495 497 2 arch/arm/vfp/vfpdouble.c:731 (set (reg:SI 3 r3 [orig:153 <variable>.significand+4 ] [153])
        (mem/s/j:SI (plus:SI (reg/f:SI 1 r1 [orig:150 vdn ] [150])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [orig:150 vdn ] [150])
        (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                    (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
            (nil))))

(note 497 9 496 2 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:152 fpscr ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 496 497 3 2 ( vdn (expr_list:REG_DEP_TRUE (reg/f:SI 1 r1 [orig:150 vdn ] [150])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 3 496 2 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
        (reg:SI 1 r1 [ vdn ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 2 3 498 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
        (reg:SI 0 r0 [ vdd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ vdd ])
        (nil)))

(note 498 2 4 2 ( vdd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ vdd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 4 498 499 2 arch/arm/vfp/vfpdouble.c:727 (set (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
        (reg:SI 2 r2 [ vdm ])) 167 {*arm_movsi_insn} (nil))

(note 499 4 10 2 ( vdm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ vdm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 10 499 11 2 arch/arm/vfp/vfpdouble.c:731 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:153 <variable>.significand+4 ] [153])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:153 <variable>.significand+4 ] [153])
        (nil)))

(jump_insn:TI 11 10 500 2 arch/arm/vfp/vfpdouble.c:731 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  4 [21.0%] 
;; Succ edge  3 [79.0%]  (fallthru)

(note 500 11 501 3 ( vdd (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 501 500 502 3 ( vdn (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 502 501 312 3 ( vdm (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [79.0%]  (fallthru)
(note 312 502 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 22 312 23 3 arch/arm/vfp/vfpdouble.c:732 (set (reg:SI 3 r3 [orig:156 <variable>.significand+4 ] [156])
        (mem/s/j:SI (plus:SI (reg/f:SI 2 r2 [orig:151 vdm ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:151 vdm ] [151])
        (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                    (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
            (nil))))

(insn:TI 23 22 24 3 arch/arm/vfp/vfpdouble.c:732 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:156 <variable>.significand+4 ] [156])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:156 <variable>.significand+4 ] [156])
        (nil)))

(jump_insn:TI 24 23 503 3 arch/arm/vfp/vfpdouble.c:732 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7900 [0x1edc])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  4 [21.0%]  (fallthru)
;; Succ edge  5 [79.0%] 

(note 503 24 34 4 ( vdm (expr_list:REG_DEP_TRUE (reg/f:SI 2 r2 [orig:151 vdm ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  3 [21.0%]  (fallthru)
;; Pred edge  2 [21.0%] 
(code_label 34 503 35 4 226 "" [1 uses])

(note 35 34 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 38 35 39 4 arch/arm/vfp/vfpdouble.c:733 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c13140>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10c13140>)
        (nil)))

(insn:TI 39 38 40 4 arch/arm/vfp/vfpdouble.c:733 (set (reg:SI 1 r1)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(call_insn:TI 40 39 504 4 arch/arm/vfp/vfpdouble.c:733 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 504 40 505 4 ( vdm (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

(note 505 504 506 5 ( vdd (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 506 505 507 5 ( vdn (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 507 506 41 5 ( vdm (expr_list:REG_DEP_TRUE (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [79.0%] 
(code_label 41 507 42 5 228 "" [1 uses])

(note 42 41 53 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 53 42 54 5 NOTE_INSN_DELETED)

(note 54 53 44 5 NOTE_INSN_DELETED)

(insn:TI 44 54 43 5 arch/arm/vfp/vfpdouble.c:743 (set (reg:SI 3 r3 [orig:162 <variable>.exponent ] [162])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 43 44 45 5 arch/arm/vfp/vfpdouble.c:743 (set (reg:SI 2 r2 [orig:161 <variable>.exponent ] [161])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 45 43 48 5 arch/arm/vfp/vfpdouble.c:743 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:161 <variable>.exponent ] [161])
            (reg:SI 3 r3 [orig:162 <variable>.exponent ] [162]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:161 <variable>.exponent ] [161])
        (nil)))

(insn:TI 48 45 49 5 arch/arm/vfp/vfpdouble.c:743 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 3 r3 [orig:133 vdn.778 ] [133])
            (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]))) 2345 {neon_vornv2di+78} (nil))

(insn 49 48 50 5 arch/arm/vfp/vfpdouble.c:745 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
            (reg/v/f:SI 6 r6 [orig:151 vdm ] [151]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 50 49 56 5 arch/arm/vfp/vfpdouble.c:746 (cond_exec (lt (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
            (reg/v/f:SI 3 r3 [orig:133 vdn.778 ] [133]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:133 vdn.778 ] [133])
            (nil))))

(insn 56 50 55 5 arch/arm/vfp/vfpdouble.c:753 (set (reg:SI 3 r3 [166])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 55 56 57 5 arch/arm/vfp/vfpdouble.c:753 (set (reg:SI 2 r2 [orig:165 <variable>.exponent ] [165])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 57 55 58 5 arch/arm/vfp/vfpdouble.c:753 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:165 <variable>.exponent ] [165])
            (reg:SI 3 r3 [166]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [166])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:165 <variable>.exponent ] [165])
            (nil))))

(jump_insn:TI 58 57 59 5 arch/arm/vfp/vfpdouble.c:753 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 5 -> ( 6 21)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  6 [28.0%]  (fallthru)
;; Succ edge  21 [72.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 12 [ip] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  5 [28.0%]  (fallthru)
(note 59 58 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 61 59 62 6 NOTE_INSN_DELETED)

(note 62 61 60 6 NOTE_INSN_DELETED)

(insn:TI 60 62 63 6 arch/arm/vfp/vfp.h:331 (set (reg:DI 2 r2 [orig:141 D.5906 ] [141])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 63 60 66 6 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:141 D.5906 ] [141])
                        (reg:SI 3 r3 [ D.5906+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:141 D.5906 ] [141])
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil))))

(insn:TI 66 63 508 6 arch/arm/vfp/vfp.h:332 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:139 tn ] [139])
            (const_int 8 [0x8]))) 2345 {neon_vornv2di+78} (nil))

(note 508 66 64 6 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:139 tn ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 64 508 70 6 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 84)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 1 [r1] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 70 64 73 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 73 70 74 7 NOTE_INSN_DELETED)

(note 74 73 347 7 NOTE_INSN_DELETED)

(note 347 74 436 7 NOTE_INSN_DELETED)

(insn:TI 436 347 435 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 9 r9 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 435 436 438 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 8 r8 [169])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 438 435 439 7 arch/arm/vfp/vfp.h:333 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [ D.5906+4 ])
            (reg:SI 9 r9 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ D.5906+4 ])
        (nil)))

(insn:TI 439 438 440 7 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn:TI 440 439 441 7 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:139 tn ] [139])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(insn 441 440 84 7 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:139 tn ] [139])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [50.0%] 
(code_label 84 441 85 8 233 "" [1 uses])

(note 85 84 87 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 87 85 88 8 NOTE_INSN_DELETED)

(note 88 87 89 8 NOTE_INSN_DELETED)

(note 89 88 86 8 NOTE_INSN_DELETED)

(insn:TI 86 89 90 8 arch/arm/vfp/vfp.h:330 (set (reg:SI 3 r3 [orig:143 D.5902 ] [143])
        (zero_extend:SI (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151]) [0 <variable>.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 90 86 91 8 arch/arm/vfp/vfp.h:330 (set (reg:SI 2 r2 [174])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 91 90 92 8 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:143 D.5902 ] [143])
            (reg:SI 2 r2 [174]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [174])
        (nil)))

(jump_insn:TI 92 91 93 8 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  9 [28.0%]  (fallthru)
;; Succ edge  11 [72.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  8 [28.0%]  (fallthru)
(note 93 92 95 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 95 93 96 9 NOTE_INSN_DELETED)

(note 96 95 94 9 NOTE_INSN_DELETED)

(insn:TI 94 96 97 9 arch/arm/vfp/vfp.h:331 (set (reg:DI 2 r2 [orig:142 D.5903 ] [142])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 97 94 100 9 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:142 D.5903 ] [142])
                        (reg:SI 3 r3 [ D.5903+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil)))

(insn:TI 100 97 509 9 arch/arm/vfp/vfp.h:332 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:140 tm ] [140])
            (const_int 8 [0x8]))) 2345 {neon_vornv2di+78} (nil))

(note 509 100 98 9 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 tm ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 98 509 104 9 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 142)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 13)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 104 98 107 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 107 104 108 10 NOTE_INSN_DELETED)

(note 108 107 349 10 NOTE_INSN_DELETED)

(note 349 108 105 10 NOTE_INSN_DELETED)

(note 105 349 428 10 NOTE_INSN_DELETED)

(insn:TI 428 105 427 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 1 r1 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 427 428 430 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 430 427 510 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 3 r3 [ D.5903+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(note 510 430 429 10 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 429 510 431 10 arch/arm/vfp/vfp.h:333 (set (reg:SI 8 r8)
        (and:SI (reg:SI 2 r2 [orig:142 D.5903 ] [142])
            (reg:SI 0 r0))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:142 D.5903 ] [142])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn:TI 431 429 390 10 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 390 431 432 10 arch/arm/vfp/vfp.h:333 (set (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-16 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(insn:TI 432 390 511 10 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:140 tm ] [140])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(note 511 432 433 10 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 tm ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 433 511 470 10 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:140 tm ] [140])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 470 433 471 10 (set (pc)
        (label_ref 142)) -1 (nil))
;; End of basic block 10 -> ( 13)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [100.0%] 

(barrier 471 470 512)

(note 512 471 120 11 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [72.0%] 
(code_label 120 512 121 11 235 "" [1 uses])

(note 121 120 122 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 122 121 125 11 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:143 D.5902 ] [143])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 125 122 513 11 arch/arm/vfp/vfp.h:329 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:140 tm ] [140])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 513 125 123 11 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 tm ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 123 513 129 11 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 142)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 13 12)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 3 [r3]

;; Pred edge  11 [50.0%]  (fallthru)
(note 129 123 132 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 132 129 131 12 NOTE_INSN_DELETED)

(insn:TI 131 132 514 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 3 r3 [orig:180 <variable>.significand+4 ] [180])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])
        (nil)))

(note 514 131 130 12 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 130 514 351 12 arch/arm/vfp/vfp.h:338 (set (reg:SI 2 r2 [orig:179 <variable>.significand ] [179])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])
        (nil)))

(insn:TI 351 130 352 12 arch/arm/vfp/vfp.h:341 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:179 <variable>.significand ] [179])
                        (reg:SI 3 r3 [orig:180 <variable>.significand+4 ] [180]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 3 r3))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:180 <variable>.significand+4 ] [180])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:179 <variable>.significand ] [179])
            (expr_list:REG_UNUSED (reg:SI 3 r3)
                (nil)))))

(insn:TI 352 351 515 12 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 3 r3 [orig:140 tm ] [140])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  13 [100.0%]  (fallthru)

(note 515 352 142 13 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 tm ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 12 11 9 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  11 [50.0%] 
;; Pred edge  9 [50.0%] 
;; Pred edge  10 [100.0%] 
(code_label 142 515 143 13 237 "" [3 uses])

(note 143 142 145 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 145 143 144 13 NOTE_INSN_DELETED)

(insn:TI 144 145 146 13 arch/arm/vfp/vfpdouble.c:693 (set (reg:SI 2 r2 [orig:137 D.5913 ] [137])
        (and:SI (reg/v:SI 12 ip [orig:139 tn ] [139])
            (const_int 8 [0x8]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 146 144 147 13 arch/arm/vfp/vfpdouble.c:693 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 3 r3 [orig:140 tm ] [140])
                        (reg:SI 2 r2 [orig:137 D.5913 ] [137]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn:TI 147 146 148 13 arch/arm/vfp/vfpdouble.c:693 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 16)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 12 [ip] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 148 147 149 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 149 148 150 14 arch/arm/vfp/vfpdouble.c:697 (set (reg:SI 2 r2 [orig:182 <variable>.sign ] [182])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 150 149 516 14 arch/arm/vfp/vfpdouble.c:697 (set (reg:SI 3 r3 [orig:183 <variable>.sign ] [183])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 516 150 151 14 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 151 516 175 14 arch/arm/vfp/vfpdouble.c:697 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:182 <variable>.sign ] [182])
            (reg:SI 3 r3 [orig:183 <variable>.sign ] [183]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:183 <variable>.sign ] [183])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:182 <variable>.sign ] [182])
            (nil))))

(insn:TI 175 151 517 14 arch/arm/vfp/vfpdouble.c:701 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:138 exceptions ] [138])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 517 175 518 14 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:138 exceptions ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 518 517 176 14 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 176 518 152 14 arch/arm/vfp/vfpdouble.c:702 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))) 2345 {neon_vornv2di+78} (nil))

(jump_insn 152 176 472 14 arch/arm/vfp/vfpdouble.c:697 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 183)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 14 -> ( 20 15)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  20 [72.0%] 
;; Succ edge  15 [28.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}

;; Pred edge  14 [28.0%]  (fallthru)
(note 472 152 473 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(jump_insn 473 472 474 15 (set (pc)
        (label_ref 180)) -1 (nil))
;; End of basic block 15 -> ( 19)


;; Succ edge  19 [100.0%] 

(barrier 474 473 519)

(note 519 474 520 16 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(note 520 519 521 16 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:139 tn ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 521 520 156 16 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 tm ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%] 
(code_label 156 521 157 16 241 "" [1 uses])

(note 157 156 158 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:TI 158 157 159 16 arch/arm/vfp/vfpdouble.c:709 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:137 D.5913 ] [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:137 D.5913 ] [137])
        (nil)))

(jump_insn:TI 159 158 160 16 arch/arm/vfp/vfpdouble.c:709 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 164)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  17 [71.0%]  (fallthru)
;; Succ edge  18 [29.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [71.0%]  (fallthru)
(note 160 159 161 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 161 160 162 17 NOTE_INSN_DELETED)

(insn:TI 162 161 163 17 arch/arm/vfp/vfpdouble.c:709 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:140 tm ] [140])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:140 tm ] [140])
        (nil)))

(jump_insn:TI 163 162 164 17 arch/arm/vfp/vfpdouble.c:709 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 180)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  19 [50.0%] 
;; Succ edge  18 [50.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  16 [29.0%] 
;; Pred edge  17 [50.0%]  (fallthru)
(code_label 164 163 165 18 244 "" [1 uses])

(note 165 164 166 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 166 165 167 18 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 18 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])) 167 {*arm_movsi_insn} (nil))

(insn:TI 168 167 169 18 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 2 r2)
        (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])) 167 {*arm_movsi_insn} (nil))

(insn 169 168 522 18 arch/arm/vfp/vfpdouble.c:718 (set (reg:SI 3 r3)
        (reg/v:SI 10 sl [orig:152 fpscr ] [152])) 167 {*arm_movsi_insn} (nil))

(note 522 169 448 18 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(note 448 522 449 18 NOTE_INSN_EPILOGUE_BEG)

(insn:TI 449 448 170 18 arch/arm/vfp/vfpdouble.c:787 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 170 449 523 18 arch/arm/vfp/vfpdouble.c:718 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 523 170 171 18 ( tn (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 18 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 171 523 524)

(note 524 171 525 19 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:138 exceptions ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 525 524 526 19 ( tn (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:139 tn ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 526 525 180 19 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:140 tm ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 17 15) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  17 [50.0%] 
;; Pred edge  15 [100.0%] 
(code_label 180 526 181 19 243 "" [2 uses])

(note 181 180 182 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:TI 182 181 527 19 arch/arm/vfp/vfpdouble.c:687 (set (reg/v:SI 12 ip [orig:138 exceptions ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 19 -> ( 20)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  20 [100.0%]  (fallthru)

(note 527 182 183 20 ( tn (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 19 14) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  14 [72.0%] 
(code_label 183 527 184 20 245 "" [1 uses])

(note 184 183 187 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:TI 187 184 528 20 arch/arm/vfp/vfpdouble.c:720 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 8 [0x8])) [0 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 188 {*ldmsi4} (nil))

(note 528 187 188 20 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 188 528 475 20 arch/arm/vfp/vfpdouble.c:720 (parallel [
            (set (mem/s:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(jump_insn 475 188 476 20 (set (pc)
        (label_ref 298)) -1 (nil))
;; End of basic block 20 -> ( 35)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  35 [100.0%] 

(barrier 476 475 529)

(note 529 476 530 21 ( vdd (expr_list:REG_DEP_TRUE (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 530 529 191 21 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 5) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  5 [72.0%] 
(code_label 191 530 192 21 231 "" [1 uses])

(note 192 191 199 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(note 199 192 195 21 NOTE_INSN_DELETED)

(insn:TI 195 199 196 21 arch/arm/vfp/vfpdouble.c:761 (parallel [
            (set (reg:SI 0 r0)
                (mem/s:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 S4 A64]))
            (set (reg:SI 1 r1)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 4 [0x4])) [0 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 8 [0x8])) [0 S4 A64]))
            (set (reg:SI 3 r3)
                (mem/s:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                        (const_int 12 [0xc])) [0 S4 A32]))
        ]) 188 {*ldmsi4} (nil))

(insn:TI 196 195 197 21 arch/arm/vfp/vfpdouble.c:761 (parallel [
            (set (mem/s:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149]) [0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 4 [0x4])) [0 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 8 [0x8])) [0 S4 A64])
                (reg:SI 2 r2))
            (set (mem/s:SI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                        (const_int 12 [0xc])) [0 S4 A32])
                (reg:SI 3 r3))
        ]) 195 {*stmsi4} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(insn:TI 197 196 198 21 arch/arm/vfp/vfpdouble.c:766 (set (reg:SI 7 r7 [orig:190 <variable>.exponent ] [190])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 198 197 201 21 arch/arm/vfp/vfpdouble.c:766 (set (reg:SI 3 r3 [orig:191 <variable>.exponent ] [191])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 201 198 531 21 arch/arm/vfp/vfpdouble.c:767 (set (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(note 531 201 202 21 ( m_sig (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 202 531 203 21 arch/arm/vfp/vfp.h:25 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (minus:SI (reg:SI 7 r7 [orig:190 <variable>.exponent ] [190])
                        (reg:SI 3 r3 [orig:191 <variable>.exponent ] [191]))
                    (const_int 0 [0x0])))
            (set (reg:SI 7 r7 [orig:147 D.4751 ] [147])
                (minus:SI (reg:SI 7 r7 [orig:190 <variable>.exponent ] [190])
                    (reg:SI 3 r3 [orig:191 <variable>.exponent ] [191])))
        ]) 29 {*subsi3_compare0} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:191 <variable>.exponent ] [191])
        (nil)))

(jump_insn:TI 203 202 204 21 arch/arm/vfp/vfp.h:25 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 241)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  27 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
(note 204 203 205 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:TI 205 204 206 22 arch/arm/vfp/vfp.h:26 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [orig:147 D.4751 ] [147])
            (const_int 63 [0x3f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 206 205 207 22 arch/arm/vfp/vfp.h:26 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 231)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 26)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  22 [50.0%]  (fallthru)
(note 207 206 332 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 332 207 333 23 NOTE_INSN_DELETED)

(note 333 332 213 23 NOTE_INSN_DELETED)

(note 213 333 338 23 NOTE_INSN_DELETED)

(note 338 213 339 23 NOTE_INSN_DELETED)

(note 339 338 222 23 NOTE_INSN_DELETED)

(note 222 339 209 23 NOTE_INSN_DELETED)

(insn:TI 209 222 419 23 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (reg:SI 7 r7 [orig:147 D.4751 ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 419 209 420 23 arch/arm/vfp/vfp.h:27 (set (reg:SI 0 r0)
        (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])) 167 {*arm_movsi_insn} (nil))

(insn:TI 420 419 532 23 arch/arm/vfp/vfp.h:27 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [ m_sig.774+4 ])) 167 {*arm_movsi_insn} (nil))

(note 532 420 210 23 ( m_sig (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn/u:TI 210 532 215 23 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 215 210 392 23 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (minus:SI (const_int 64 [0x40])
            (reg:SI 7 r7 [orig:147 D.4751 ] [147]))) 28 {*arm_subsi3_insn} (nil))

(insn:TI 392 215 421 23 arch/arm/vfp/vfp.h:27 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-8 S4 A64])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 421 392 393 23 arch/arm/vfp/vfp.h:27 (set (reg:SI 0 r0)
        (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])
        (nil)))

(insn:TI 393 421 422 23 arch/arm/vfp/vfp.h:27 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-4 S4 A32])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn 422 393 216 23 arch/arm/vfp/vfp.h:27 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [ m_sig.774+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [ m_sig.774+4 ])
        (nil)))

(call_insn/u:TI 216 422 423 23 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 423 216 424 23 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 424 423 385 23 arch/arm/vfp/vfp.h:27 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 385 424 533 23 arch/arm/vfp/vfp.h:27 (set (reg:SI 8 r8 [orig:218+4 ] [218])
        (reg:SI 0 r0 [orig:216+4 ] [216])) 167 {*arm_movsi_insn} (nil))

(note 533 385 386 23 ( m_sig (nil)) NOTE_INSN_VAR_LOCATION)

(insn 386 533 534 23 arch/arm/vfp/vfp.h:27 (set (reg:SI 9 r9 [+8 ])
        (reg:SI 1 r1 [orig:217+8 ] [217])) 167 {*arm_movsi_insn} (nil))

(note 534 386 387 23 ( m_sig (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 387 534 221 23 arch/arm/vfp/vfp.h:27 (set (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-16 S8 A64])
        (reg:DI 8 r8 [orig:218+4 ] [218])) 163 {*arm_movdi} (nil))

(call_insn/u 221 387 223 23 arch/arm/vfp/vfp.h:27 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn:TI 223 221 224 23 arch/arm/vfp/vfp.h:27 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn:TI 224 223 320 23 arch/arm/vfp/vfp.h:27 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 226)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  25 [29.0%] 
;; Succ edge  24 [71.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  23 [71.0%]  (fallthru)
(note 320 224 417 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:TI 417 320 418 24 arch/arm/vfp/vfp.h:27 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 418 417 394 24 arch/arm/vfp/vfp.h:27 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 394 418 226 24 arch/arm/vfp/vfp.h:27 (set (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-16 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))
;; End of basic block 24 -> ( 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  25 [100.0%]  (fallthru)

;; Start of basic block ( 23 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 8 [r8] 9 [r9]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  23 [29.0%] 
;; Pred edge  24 [100.0%]  (fallthru)
(code_label 226 394 321 25 249 "" [1 uses])

(note 321 226 395 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn:TI 395 321 535 25 arch/arm/vfp/vfp.h:27 (set (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
        (mem/c:DI (reg/f:SI 13 sp) [0 %sfp+-16 S8 A64])) 163 {*arm_movdi} (nil))

(note 535 395 396 25 ( m_sig (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 396 535 415 25 arch/arm/vfp/vfp.h:27 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 415 396 536 25 arch/arm/vfp/vfp.h:27 (set (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])
        (ior:SI (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])
            (reg:SI 0 r0))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 536 415 416 25 ( m_sig (nil)) NOTE_INSN_VAR_LOCATION)

(insn 416 536 538 25 arch/arm/vfp/vfp.h:27 (set (reg:SI 9 r9 [ m_sig.774+4 ])
        (ior:SI (reg:SI 9 r9 [ m_sig.774+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(note 538 416 537 25 ( m_sig (expr_list:REG_DEP_TRUE (reg:DI 8 r8 [orig:134 m_sig.774 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 537 538 477 25 ( m_sig (expr_list:REG_DEP_TRUE (reg:DI 8 r8 [orig:134 m_sig.774 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 477 537 478 25 (set (pc)
        (label_ref 241)) -1 (nil))
;; End of basic block 25 -> ( 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  27 [100.0%] 

(barrier 478 477 539)

(note 539 478 231 26 ( m_sig (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 22) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  22 [50.0%] 
(code_label 231 539 232 26 248 "" [1 uses])

(note 232 231 236 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 236 232 411 26 NOTE_INSN_DELETED)

(insn:TI 411 236 412 26 arch/arm/vfp/vfp.h:29 (set (reg:SI 0 r0)
        (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 412 411 540 26 arch/arm/vfp/vfp.h:29 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 9 r9 [ m_sig.774+4 ])) 167 {*arm_movsi_insn} (nil))

(note 540 412 413 26 ( m_sig (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 413 540 414 26 arch/arm/vfp/vfp.h:29 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 414 413 235 26 arch/arm/vfp/vfp.h:29 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/u:TI 235 414 237 26 arch/arm/vfp/vfp.h:29 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn:TI 237 235 409 26 arch/arm/vfp/vfp.h:29 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn:TI 409 237 541 26 arch/arm/vfp/vfp.h:29 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 8 r8 [orig:134 m_sig.774 ] [134])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 541 409 410 26 ( m_sig (expr_list:REG_DEP_TRUE (reg:DI 8 r8 [orig:134 m_sig.774 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 410 541 542 26 arch/arm/vfp/vfp.h:29 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 9 r9 [ m_sig.774+4 ])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 26 -> ( 27)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  27 [100.0%]  (fallthru)

(note 542 410 241 27 ( m_sig (expr_list:REG_DEP_TRUE (reg:DI 8 r8 [orig:134 m_sig.774 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 21 26 25) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  21 [50.0%] 
;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%] 
(code_label 241 542 242 27 247 "" [2 uses])

(note 242 241 244 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:TI 244 242 243 27 arch/arm/vfp/vfpdouble.c:772 (set (reg:SI 3 r3 [orig:199 <variable>.sign ] [199])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 6 r6 [orig:151 vdm ] [151])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 243 244 345 27 arch/arm/vfp/vfpdouble.c:772 (set (reg:SI 2 r2 [orig:198 <variable>.sign ] [198])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 345 243 245 27 (set (reg:DI 0 r0 [orig:215 <variable>.significand ] [215])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:150 vdn ] [150])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 245 345 246 27 arch/arm/vfp/vfpdouble.c:772 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:198 <variable>.sign ] [198])
            (reg:SI 3 r3 [orig:199 <variable>.sign ] [199]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:199 <variable>.sign ] [199])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:198 <variable>.sign ] [198])
            (nil))))

(jump_insn:TI 246 245 247 27 arch/arm/vfp/vfpdouble.c:772 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 290)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 27 -> ( 28 33)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  28 [72.0%]  (fallthru)
;; Succ edge  33 [28.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  27 [72.0%]  (fallthru)
(note 247 246 407 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:TI 407 247 543 28 arch/arm/vfp/vfpdouble.c:773 (set (reg:SI 2 r2 [orig:144 m_sig ] [144])
        (reg:SI 0 r0 [orig:215 <variable>.significand ] [215])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:215 <variable>.significand ] [215])
        (nil)))

(note 543 407 408 28 ( m_sig (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [orig:144 m_sig ] [144])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 9 r9 [ m_sig.774+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 408 543 544 28 arch/arm/vfp/vfpdouble.c:773 (set (reg:SI 3 r3 [ m_sig+4 ])
        (reg:SI 1 r1 [ <variable>.significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ <variable>.significand+4 ])
        (nil)))

(note 544 408 249 28 ( m_sig (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:144 m_sig ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 249 544 545 28 arch/arm/vfp/vfpdouble.c:773 (parallel [
            (set (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
                (minus:DI (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
                    (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])))
            (clobber (reg:CC 24 cc))
        ]) 20 {*arm_subdi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(note 545 249 250 28 ( m_sig (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 250 545 251 28 arch/arm/vfp/vfpdouble.c:774 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ m_sig+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 251 250 324 28 arch/arm/vfp/vfpdouble.c:774 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 331)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 28 -> ( 31 29)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  31 [21.0%] 
;; Succ edge  29 [79.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  28 [79.0%]  (fallthru)
(note 324 251 270 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 270 324 271 29 NOTE_INSN_DELETED)

(note 271 270 272 29 NOTE_INSN_DELETED)

(insn:TI 272 271 273 29 arch/arm/vfp/vfpdouble.c:777 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:144 m_sig ] [144])
                        (reg:SI 3 r3 [ m_sig+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil)))

(jump_insn:TI 273 272 479 29 arch/arm/vfp/vfpdouble.c:777 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 294)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 29 -> ( 30 34)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  30 [50.0%]  (fallthru)
;; Succ edge  34 [50.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}

;; Pred edge  29 [50.0%]  (fallthru)
(note 479 273 481 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(jump_insn 481 479 482 30 (set (pc)
        (label_ref 480)) -1 (nil))
;; End of basic block 30 -> ( 32)


;; Succ edge  32 [100.0%] 

(barrier 482 481 331)

;; Start of basic block ( 28) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  28 [21.0%] 
(code_label 331 482 259 31 259 "" [1 uses])

(note 259 331 260 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:TI 260 259 265 31 arch/arm/vfp/vfpdouble.c:775 (set (reg:SI 0 r0 [orig:202 <variable>.sign ] [202])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 265 260 262 31 arch/arm/vfp/vfpdouble.c:776 (parallel [
            (set (reg/v:DI 2 r2 [orig:144 m_sig ] [144])
                (neg:DI (reg/v:DI 2 r2 [orig:144 m_sig ] [144])))
            (clobber (reg:CC 24 cc))
        ]) 125 {*arm_negdi2} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn:TI 262 265 263 31 arch/arm/vfp/vfpdouble.c:775 (set (reg:SI 1 r1 [204])
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -32768 [0xffffffffffff8000])
        (nil)))

(insn:TI 263 262 264 31 arch/arm/vfp/vfpdouble.c:775 (set (reg:SI 1 r1 [203])
        (xor:SI (reg:SI 0 r0 [orig:202 <variable>.sign ] [202])
            (reg:SI 1 r1 [204]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:202 <variable>.sign ] [202])
        (nil)))

(insn 264 263 483 31 arch/arm/vfp/vfpdouble.c:775 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (reg:HI 1 r1 [203])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1 [203])
        (nil)))

(jump_insn 483 264 484 31 (set (pc)
        (label_ref 294)) -1 (nil))
;; End of basic block 31 -> ( 34)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  34 [100.0%] 

(barrier 484 483 480)

;; Start of basic block ( 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 10 [sl] 24 [cc]
;; live  kill	

;; Pred edge  30 [100.0%] 
(code_label 480 484 274 32 262 "" [1 uses])

(note 274 480 353 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 353 274 275 32 NOTE_INSN_DELETED)

(insn:TI 275 353 546 32 arch/arm/vfp/vfpdouble.c:778 (set (reg:SI 10 sl [206])
        (and:SI (reg/v:SI 10 sl [orig:152 fpscr ] [152])
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (nil))

(note 546 275 403 32 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 403 546 404 32 arch/arm/vfp/vfpdouble.c:778 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [206])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 404 403 405 32 arch/arm/vfp/vfpdouble.c:778 discrim 2 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 10 sl [orig:146 iftmp.149 ] [146])
            (const_int 32768 [0x8000]))) 2345 {neon_vornv2di+78} (nil))

(insn 405 404 287 32 arch/arm/vfp/vfpdouble.c:778 discrim 2 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 10 sl [orig:146 iftmp.149 ] [146])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn:TI 287 405 485 32 arch/arm/vfp/vfpdouble.c:778 discrim 3 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16])
        (reg:HI 10 sl [orig:146 iftmp.149 ] [146])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 485 287 486 32 (set (pc)
        (label_ref 294)) -1 (nil))
;; End of basic block 32 -> ( 34)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  34 [100.0%] 

(barrier 486 485 547)

(note 547 486 548 33 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:152 fpscr ] [152])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 548 547 290 33 ( m_sig (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:134 m_sig.774 ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 27) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  27 [28.0%] 
(code_label 290 548 291 33 251 "" [1 uses])

(note 291 290 401 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:TI 401 291 549 33 arch/arm/vfp/vfpdouble.c:782 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8 [orig:144 m_sig ] [144])
                        (reg:SI 0 r0 [orig:215 <variable>.significand ] [215]))
                    (reg:SI 8 r8 [orig:144 m_sig ] [144])))
            (set (reg:SI 2 r2 [orig:144 m_sig ] [144])
                (plus:SI (reg:SI 8 r8 [orig:144 m_sig ] [144])
                    (reg:SI 0 r0 [orig:215 <variable>.significand ] [215])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:215 <variable>.significand ] [215])
        (nil)))

(note 549 401 402 33 ( m_sig (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [orig:144 m_sig ] [144])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 9 r9 [ m_sig.774+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn:TI 402 549 550 33 arch/arm/vfp/vfpdouble.c:782 (set (reg:SI 3 r3 [ m_sig+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [orig:3 m_sig+4 ] [3])
                (reg:SI 1 r1 [ <variable>.significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [ <variable>.significand+4 ])
            (nil))))
;; End of basic block 33 -> ( 34)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  34 [100.0%]  (fallthru)

(note 550 402 294 34 ( m_sig (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:144 m_sig ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 29 33 31 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 5 [r5] 13 [sp]
;; lr  def 	 12 [ip]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 12 [ip]
;; live  kill	

;; Pred edge  29 [50.0%] 
;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  31 [100.0%] 
;; Pred edge  32 [100.0%] 
(code_label 294 550 295 34 254 "" [3 uses])

(note 295 294 297 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:TI 297 295 551 34 arch/arm/vfp/vfpdouble.c:786 (set (reg/v:SI 12 ip [orig:138 exceptions ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(note 551 297 296 34 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:138 exceptions ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 296 551 298 34 arch/arm/vfp/vfpdouble.c:784 (set (mem/s/j:DI (plus:SI (reg/v/f:SI 5 r5 [orig:149 vdd ] [149])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:144 m_sig ] [144])) 163 {*arm_movdi} (nil))
;; End of basic block 34 -> ( 35)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 34 20) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  34 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%] 
(code_label 298 296 299 35 246 "" [1 uses])

(note 299 298 304 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn:TI 304 299 310 35 arch/arm/vfp/vfpdouble.c:787 (set (reg/i:SI 0 r0)
        (reg/v:SI 12 ip [orig:138 exceptions ] [138])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:138 exceptions ] [138])
        (nil)))

(insn 310 304 445 35 arch/arm/vfp/vfpdouble.c:787 (use (reg/i:SI 0 r0)) -1 (nil))

(note 445 310 446 35 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 446 445 447 35 arch/arm/vfp/vfpdouble.c:787 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 35 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 447 446 388)

(note 388 447 389 NOTE_INSN_DELETED)

(note 389 388 0 NOTE_INSN_DELETED)


;; Function vfp_double_fsub (vfp_double_fsub)[0:182]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: dn+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: dn
    offset 0
      (reg:SI 1 r1 [ dn ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])


Basic block 3:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])


Basic block 4:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])


Basic block 5:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])


Basic block 6:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])


Basic block 7:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])


Basic block 8:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])


9 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 5 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  4 [29.0%]  (fallthru) 5 [71.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  3 [29.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [71.0%]  4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  6 [61.0%]  (fallthru) 8 [39.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  5 [61.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  7 [39.0%]  (fallthru) 8 [61.0%] 
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2378, maybe hot.
Predecessors:  6 [39.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [39.0%]  6 [61.0%]  7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fsub

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,19u} r1={17d,17u} r2={15d,13u} r3={13d,11u} r4={2d,4u} r5={4d,6u} r6={2d,3u} r7={2d,3u} r8={2d,2u} r9={3d,4u} r10={2d,3u} r11={3d,4u} r12={11d,11u} r13={3d,31u,1d} r14={12d,9u,1d} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,12u} r25={2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 934{778d,152u,4e} in 80{74 regular + 6 call} insns.
(note 1 0 205 NOTE_INSN_DELETED)

(note 205 1 206 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 206 205 207 2 ( dn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ dn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 207 206 208 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 208 207 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 208 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 7 6 2 NOTE_INSN_DELETED)

(note 6 3 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 6 19 2 NOTE_INSN_DELETED)

(note 19 17 20 2 NOTE_INSN_DELETED)

(note 20 19 23 2 NOTE_INSN_DELETED)

(note 23 20 27 2 NOTE_INSN_DELETED)

(note 27 23 31 2 NOTE_INSN_DELETED)

(note 31 27 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 35 2 NOTE_INSN_DELETED)

(note 35 33 36 2 NOTE_INSN_DELETED)

(note 36 35 39 2 NOTE_INSN_DELETED)

(note 39 36 40 2 NOTE_INSN_DELETED)

(note 40 39 42 2 NOTE_INSN_DELETED)

(note 42 40 43 2 NOTE_INSN_DELETED)

(note 43 42 44 2 NOTE_INSN_DELETED)

(note 44 43 196 2 NOTE_INSN_DELETED)

(insn/f:TI 196 44 2 2 arch/arm/vfp/vfpdouble.c:980 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn:TI 2 196 197 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/v:SI 6 r6 [orig:142 dd ] [142])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn/f:TI 197 2 198 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(note 198 197 9 2 NOTE_INSN_PROLOGUE_END)

(insn 9 198 209 2 arch/arm/vfp/vfpdouble.c:984 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(note 209 9 4 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:142 dd ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 4 209 5 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpdouble.c:980 (set (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn:TI 10 5 212 2 arch/arm/vfp/vfpdouble.c:984 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 212 10 211 2 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 211 212 210 2 ( dm (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:144 dm ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 210 211 192 2 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(insn 192 210 26 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 26 192 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 7 r7 [214])
        (ashift:SI (reg:SI 0 r0 [orig:140 D.4995 ] [140])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 26 21 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:215+4 ] [215])
        (ashift:SI (reg:SI 1 r1 [ D.4995+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 21 24 25 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:135 D.5931 ] [135])
        (zero_extract:SI (reg:SI 1 r1 [ D.4995+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 25 21 194 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:215+4 ] [215])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:140 D.4995 ] [140])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:215+4 ] [215]))) 270 {*arith_shiftsi} (nil))

(insn:TI 194 25 170 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4995+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4995+4 ])
            (nil))))

(insn 170 194 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [162])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 45 170 28 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:135 D.5931 ] [135])
                    (reg:SI 1 r1 [162]))
                (ne:SI (reg:SI 12 ip [orig:135 D.5931 ] [135])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [162])
        (nil)))

(insn 28 45 213 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (lshiftrt:SI (reg:SI 7 r7 [214])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(note 213 28 14 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 14 213 29 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [210])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 29 14 214 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:215+4 ] [215])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:136 significand ] [136]))) 270 {*arith_shiftsi} (nil))

(note 214 29 30 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 30 214 215 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:215+4 ] [215])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:215+4 ] [215])
        (nil)))

(note 215 30 185 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 185 215 16 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [170])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 16 185 186 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [210])) 176 {*movhi_insn_arch4} (nil))

(insn 186 16 187 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 187 186 216 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:136 significand ] [136])
            (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                (reg:SI 0 r0 [170])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [170])
        (nil)))

(note 216 187 188 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 188 216 217 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 217 188 53 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 53 217 22 2 arch/arm/vfp/vfpdouble.c:985 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:135 D.5931 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:135 D.5931 ] [135])
        (nil)))

(insn 22 53 52 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:135 D.5931 ] [135])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 52 22 54 2 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:136 significand ] [136])) 163 {*arm_movdi} (nil))

(jump_insn:TI 54 52 55 2 arch/arm/vfp/vfpdouble.c:985 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  2 [50.0%]  (fallthru)
(note 55 54 56 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 3 NOTE_INSN_DELETED)

(note 57 56 58 3 NOTE_INSN_DELETED)

(insn:TI 58 57 59 3 arch/arm/vfp/vfpdouble.c:985 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 significand ] [136])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 59 58 60 3 arch/arm/vfp/vfpdouble.c:985 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [29.0%]  (fallthru)
;; Succ edge  5 [71.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  3 [29.0%]  (fallthru)
(note 60 59 61 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 4 NOTE_INSN_DELETED)

(insn:TI 62 61 63 4 arch/arm/vfp/vfpdouble.c:986 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 63 62 218 4 arch/arm/vfp/vfpdouble.c:986 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 218 63 219 4 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

(note 219 218 64 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [71.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 64 219 65 5 267 "" [2 uses])

(note 65 64 74 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 74 65 76 5 NOTE_INSN_DELETED)

(note 76 74 77 5 NOTE_INSN_DELETED)

(note 77 76 80 5 NOTE_INSN_DELETED)

(note 80 77 84 5 NOTE_INSN_DELETED)

(note 84 80 88 5 NOTE_INSN_DELETED)

(note 88 84 89 5 NOTE_INSN_DELETED)

(note 89 88 90 5 NOTE_INSN_DELETED)

(note 90 89 92 5 NOTE_INSN_DELETED)

(note 92 90 93 5 NOTE_INSN_DELETED)

(note 93 92 96 5 NOTE_INSN_DELETED)

(note 96 93 97 5 NOTE_INSN_DELETED)

(note 97 96 99 5 NOTE_INSN_DELETED)

(note 99 97 100 5 NOTE_INSN_DELETED)

(note 100 99 101 5 NOTE_INSN_DELETED)

(note 101 100 66 5 NOTE_INSN_DELETED)

(insn:TI 66 101 181 5 arch/arm/vfp/vfpdouble.c:988 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:144 dm ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (nil)))

(insn 181 66 67 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 67 181 220 5 arch/arm/vfp/vfpdouble.c:988 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 220 67 180 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 180 220 83 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 83 180 221 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [220])
        (ashift:SI (reg:SI 0 r0 [orig:139 D.5004 ] [139])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(note 221 83 81 5 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 81 221 78 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:221+4 ] [221])
        (ashift:SI (reg:SI 1 r1 [ D.5004+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 78 81 82 5 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:133 D.5946 ] [133])
        (zero_extract:SI (reg:SI 1 r1 [ D.5004+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 82 78 183 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:221+4 ] [221])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:139 D.5004 ] [139])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:221+4 ] [221]))) 270 {*arith_shiftsi} (nil))

(insn:TI 183 82 168 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.5004+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.5004+4 ])
        (nil)))

(insn 168 183 102 5 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [189])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 102 168 85 5 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:133 D.5946 ] [133])
                    (reg:SI 1 r1 [189]))
                (ne:SI (reg:SI 12 ip [orig:133 D.5946 ] [133])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [189])
        (nil)))

(insn 85 102 222 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (lshiftrt:SI (reg:SI 5 r5 [220])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [220])
        (nil)))

(note 222 85 71 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 71 222 86 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [216])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 86 71 223 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:221+4 ] [221])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:134 significand ] [134]))) 270 {*arith_shiftsi} (nil))

(note 223 86 87 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 87 223 224 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:221+4 ] [221])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:221+4 ] [221])
        (nil)))

(note 224 87 182 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 182 224 73 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [173])
        (and:SI (reg:SI 0 r0 [orig:139 D.5004 ] [139])
            (reg:SI 10 sl [174]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 73 182 174 5 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 1 r1 [216])) 176 {*movhi_insn_arch4} (nil))

(insn 174 73 175 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [197])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 175 174 176 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn 176 175 225 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:134 significand ] [134])
            (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                (reg:SI 0 r0 [197])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [197])
        (nil)))

(note 225 176 177 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 177 225 226 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 226 177 110 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 110 226 79 5 arch/arm/vfp/vfpdouble.c:989 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:133 D.5946 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:133 D.5946 ] [133])
        (nil)))

(insn:TI 79 110 109 5 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:133 D.5946 ] [133])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 109 79 111 5 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:134 significand ] [134])) 163 {*arm_movdi} (nil))

(jump_insn 111 109 112 5 arch/arm/vfp/vfpdouble.c:989 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  5 [61.0%]  (fallthru)
(note 112 111 113 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 6 NOTE_INSN_DELETED)

(note 114 113 115 6 NOTE_INSN_DELETED)

(insn:TI 115 114 116 6 arch/arm/vfp/vfpdouble.c:989 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:134 significand ] [134])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 116 115 117 6 arch/arm/vfp/vfpdouble.c:989 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [39.0%]  (fallthru)
(note 117 116 118 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 118 117 119 7 NOTE_INSN_DELETED)

(insn:TI 119 118 120 7 arch/arm/vfp/vfpdouble.c:990 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 120 119 227 7 arch/arm/vfp/vfpdouble.c:990 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 227 120 228 7 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

(note 228 227 121 8 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 5 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  5 [39.0%] 
;; Pred edge  6 [61.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 121 228 122 8 269 "" [2 uses])

(note 122 121 129 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 129 122 130 8 NOTE_INSN_DELETED)

(note 130 129 123 8 NOTE_INSN_DELETED)

(insn:TI 123 130 128 8 arch/arm/vfp/vfpdouble.c:995 (set (reg:SI 14 lr [orig:201 vdm.sign ] [201])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 128 123 167 8 arch/arm/vfp/vfpdouble.c:997 (set (reg/f:SI 5 r5 [204])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))
        (nil)))

(insn:TI 167 128 132 8 arch/arm/vfp/vfpdouble.c:995 (set (reg:SI 12 ip [203])
        (const_int -32768 [0xffffffffffff8000])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -32768 [0xffffffffffff8000])
        (nil)))

(insn 132 167 133 8 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn:TI 133 132 229 8 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(note 229 133 134 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 134 229 230 8 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(note 230 134 131 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 131 230 126 8 arch/arm/vfp/vfpdouble.c:997 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [204])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 126 131 127 8 arch/arm/vfp/vfpdouble.c:995 (set (reg:SI 12 ip [202])
        (xor:SI (reg:SI 14 lr [orig:201 vdm.sign ] [201])
            (reg:SI 12 ip [203]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:201 vdm.sign ] [201])
        (expr_list:REG_EQUAL (xor:SI (reg:SI 14 lr [orig:201 vdm.sign ] [201])
                (const_int -32768 [0xffffffffffff8000]))
            (nil))))

(insn:TI 127 126 135 8 arch/arm/vfp/vfpdouble.c:995 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 12 ip [202])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 12 ip [202])
        (nil)))

(call_insn 135 127 166 8 arch/arm/vfp/vfpdouble.c:997 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 166 135 141 8 arch/arm/vfp/vfpdouble.c:999 (set (reg/f:SI 12 ip [208])
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>)
        (nil)))

(insn 141 166 142 8 arch/arm/vfp/vfpdouble.c:999 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [204])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn:TI 142 141 139 8 arch/arm/vfp/vfpdouble.c:999 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn:TI 139 142 136 8 arch/arm/vfp/vfpdouble.c:999 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [208])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [208])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10e08c40>)
            (nil))))

(insn:TI 136 139 231 8 arch/arm/vfp/vfpdouble.c:997 (set (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 231 136 140 8 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 140 231 144 8 arch/arm/vfp/vfpdouble.c:999 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:142 dd ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 144 140 232 8 arch/arm/vfp/vfpdouble.c:999 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 232 144 156 8 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(insn 156 232 199 8 arch/arm/vfp/vfpdouble.c:1000 (use (reg/i:SI 0 r0)) -1 (nil))

(note 199 156 200 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 200 199 201 8 arch/arm/vfp/vfpdouble.c:1000 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 201 200 165)

(note 165 201 172 NOTE_INSN_DELETED)

(note 172 165 0 NOTE_INSN_DELETED)


;; Function vfp_double_multiply_accumulate (vfp_double_multiply_accumulate)[0:174]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: dn+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: negate
    offset 0
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: dn
    offset 0
      (reg:SI 1 r1 [ dn ])

OUT:
Stack adjustment: 112
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Reg 7: dm+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:139 significand ] [139])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])
  name: dm
    offset 0
      (reg/v:SI 7 r7 [orig:149 dm ] [149])


Basic block 3:
IN:
Stack adjustment: 112
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Reg 7: dm+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:139 significand ] [139])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])
  name: dm
    offset 0
      (reg/v:SI 7 r7 [orig:149 dm ] [149])

OUT:
Stack adjustment: 112
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Reg 7: dm+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:139 significand ] [139])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])
  name: dm
    offset 0
      (reg/v:SI 7 r7 [orig:149 dm ] [149])


Basic block 4:
IN:
Stack adjustment: 112
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Reg 7: dm+0
Variables:
  name: dm
    offset 0
      (reg/v:SI 7 r7 [orig:149 dm ] [149])
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:139 significand ] [139])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 112
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Reg 7: dm+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])
  name: dm
    offset 0
      (reg/v:SI 7 r7 [orig:149 dm ] [149])


Basic block 5:
IN:
Stack adjustment: 112
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Reg 7: dm+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:139 significand ] [139])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])
  name: dm
    offset 0
      (reg/v:SI 7 r7 [orig:149 dm ] [149])

OUT:
Stack adjustment: 112
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:137 significand ] [137])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])


Basic block 6:
IN:
Stack adjustment: 112
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:137 significand ] [137])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 112
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:137 significand ] [137])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])


Basic block 7:
IN:
Stack adjustment: 112
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:137 significand ] [137])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 112
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])


Basic block 8:
IN:
Stack adjustment: 112
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dd+0
Reg 6: negate+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (reg/v:SI 6 r6 [orig:151 negate ] [151])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:137 significand ] [137])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 112
Reg 4: fpscr+0
Reg 5: dd+0
Reg 7: exceptions+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
  name: negate
    offset 0
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
      (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 4 [0x4])) [0 negate+0 S4 A32])
  name: func
    offset 0
      (mem/f/c/i:SI (reg/f:SI 26 afp) [0 func+0 S4 A32])
      (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
        (const_int 8 [0x8])) [0 func+0 S4 A32])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:140 exceptions ] [140])
  name: dd
    offset 0
      (reg/v:SI 5 r5 [orig:147 dd ] [147])


9 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 5 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  4 [29.0%]  (fallthru) 5 [71.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  3 [29.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [71.0%]  4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  6 [50.0%]  (fallthru) 8 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  7 [29.0%]  (fallthru) 8 [71.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  6 [29.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [50.0%]  6 [71.0%]  7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_multiply_accumulate

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={19d,24u} r1={23d,26u,1d} r2={23d,21u} r3={24d,24u} r4={2d,5u} r5={2d,4u} r6={3d,6u} r7={4d,5u} r8={4d,6u} r9={4d,6u} r10={3d,3u} r11={3d,4u} r12={12d,11u} r13={3d,42u,3d} r14={14d,11u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={17d,23u} r25={2d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} 
;;    total ref usage 1267{1040d,221u,6e} in 114{106 regular + 8 call} insns.
(note 1 0 291 NOTE_INSN_DELETED)

(note 291 1 292 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 292 291 293 2 ( negate (expr_list:REG_DEP_TRUE (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
            (const_int 4 [0x4])) [0 negate+0 S4 A32])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 293 292 294 2 ( func (expr_list:REG_DEP_TRUE (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
            (const_int 8 [0x8])) [0 func+0 S4 A32])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 294 293 295 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 295 294 296 2 ( dn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ dn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 296 295 9 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 296 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 9 8 2 NOTE_INSN_DELETED)

(note 8 3 19 2 NOTE_INSN_FUNCTION_BEG)

(note 19 8 21 2 NOTE_INSN_DELETED)

(note 21 19 22 2 NOTE_INSN_DELETED)

(note 22 21 25 2 NOTE_INSN_DELETED)

(note 25 22 29 2 NOTE_INSN_DELETED)

(note 29 25 33 2 NOTE_INSN_DELETED)

(note 33 29 34 2 NOTE_INSN_DELETED)

(note 34 33 35 2 NOTE_INSN_DELETED)

(note 35 34 37 2 NOTE_INSN_DELETED)

(note 37 35 38 2 NOTE_INSN_DELETED)

(note 38 37 41 2 NOTE_INSN_DELETED)

(note 41 38 42 2 NOTE_INSN_DELETED)

(note 42 41 44 2 NOTE_INSN_DELETED)

(note 44 42 45 2 NOTE_INSN_DELETED)

(note 45 44 46 2 NOTE_INSN_DELETED)

(note 46 45 244 2 NOTE_INSN_DELETED)

(note 244 46 282 2 NOTE_INSN_DELETED)

(insn/f:TI 282 244 283 2 arch/arm/vfp/vfpdouble.c:852 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f:TI 283 282 284 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -76 [0xffffffffffffffb4]))) 4 {*arm_addsi3} (nil))

(note 284 283 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 284 11 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 5 r5 [orig:147 dd ] [147])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 11 2 297 2 arch/arm/vfp/vfpdouble.c:856 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(note 297 11 4 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:147 dd ] [147])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 4 297 5 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 7 r7 [orig:149 dm ] [149])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 6 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(insn:TI 6 5 12 2 arch/arm/vfp/vfpdouble.c:852 (set (reg/v:SI 6 r6 [orig:151 negate ] [151])
        (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 negate+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 negate+0 S4 A32])
        (nil)))

(call_insn 12 6 300 2 arch/arm/vfp/vfpdouble.c:856 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 300 12 299 2 ( dm (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:149 dm ] [149])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 299 300 298 2 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(note 298 299 279 2 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:150 fpscr ] [150])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 279 298 36 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn 36 279 28 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 8 r8 [169])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 28 36 26 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 10 sl [253])
        (ashift:SI (reg:SI 0 r0 [orig:145 D.4821 ] [145])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 26 28 23 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:254+4 ] [254])
        (ashift:SI (reg:SI 1 r1 [ D.4821+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 23 26 27 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:138 D.5961 ] [138])
        (zero_extract:SI (reg:SI 1 r1 [ D.4821+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 27 23 281 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:254+4 ] [254])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:145 D.4821 ] [145])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:254+4 ] [254]))) 270 {*arith_shiftsi} (nil))

(insn:TI 281 27 47 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4821+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4821+4 ])
            (nil))))

(insn 47 281 30 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:138 D.5961 ] [138])
                    (reg:SI 8 r8 [169]))
                (ne:SI (reg:SI 12 ip [orig:138 D.5961 ] [138])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 8 r8 [169])
        (nil)))

(insn:TI 30 47 301 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:139 significand ] [139])
        (lshiftrt:SI (reg:SI 10 sl [253])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 10 sl [253])
        (nil)))

(note 301 30 32 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 32 301 302 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:254+4 ] [254])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:254+4 ] [254])
        (nil)))

(note 302 32 16 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:139 significand ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 16 302 31 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [249])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 31 16 303 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:139 significand ] [139])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:254+4 ] [254])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:139 significand ] [139]))) 270 {*arith_shiftsi} (nil))

(note 303 31 271 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:139 significand ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 271 303 18 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [177])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn 18 271 272 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [249])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 272 18 273 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn 273 272 304 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:139 significand ] [139])
            (ior:SI (reg:SI 2 r2 [orig:139 significand ] [139])
                (reg:SI 0 r0 [177])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [177])
        (nil)))

(note 304 273 274 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:139 significand ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 274 304 305 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 305 274 55 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:139 significand ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 55 305 24 2 arch/arm/vfp/vfpdouble.c:857 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:138 D.5961 ] [138])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:138 D.5961 ] [138])
        (nil)))

(insn:TI 24 55 54 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:138 D.5961 ] [138])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 54 24 56 2 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:139 significand ] [139])) 163 {*arm_movdi} (nil))

(jump_insn 56 54 306 2 arch/arm/vfp/vfpdouble.c:857 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

(note 306 56 57 3 ( negate (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:151 negate ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  2 [50.0%]  (fallthru)
(note 57 306 58 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 58 57 59 3 NOTE_INSN_DELETED)

(note 59 58 60 3 NOTE_INSN_DELETED)

(insn:TI 60 59 61 3 arch/arm/vfp/vfpdouble.c:857 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:139 significand ] [139])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:139 significand ] [139])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 61 60 62 3 arch/arm/vfp/vfpdouble.c:857 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [29.0%]  (fallthru)
;; Succ edge  5 [71.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  3 [29.0%]  (fallthru)
(note 62 61 63 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 63 62 64 4 NOTE_INSN_DELETED)

(insn:TI 64 63 65 4 arch/arm/vfp/vfpdouble.c:858 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 65 64 307 4 arch/arm/vfp/vfpdouble.c:858 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 307 65 308 4 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

(note 308 307 66 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:139 significand ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [71.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 66 308 67 5 275 "" [2 uses])

(note 67 66 76 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 76 67 78 5 NOTE_INSN_DELETED)

(note 78 76 79 5 NOTE_INSN_DELETED)

(note 79 78 82 5 NOTE_INSN_DELETED)

(note 82 79 86 5 NOTE_INSN_DELETED)

(note 86 82 90 5 NOTE_INSN_DELETED)

(note 90 86 91 5 NOTE_INSN_DELETED)

(note 91 90 92 5 NOTE_INSN_DELETED)

(note 92 91 94 5 NOTE_INSN_DELETED)

(note 94 92 95 5 NOTE_INSN_DELETED)

(note 95 94 98 5 NOTE_INSN_DELETED)

(note 98 95 99 5 NOTE_INSN_DELETED)

(note 99 98 101 5 NOTE_INSN_DELETED)

(note 101 99 102 5 NOTE_INSN_DELETED)

(note 102 101 103 5 NOTE_INSN_DELETED)

(note 103 102 68 5 NOTE_INSN_DELETED)

(insn:TI 68 103 267 5 arch/arm/vfp/vfpdouble.c:860 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:149 dm ] [149])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 7 r7 [orig:149 dm ] [149])
        (nil)))

(insn 267 68 69 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 69 267 309 5 arch/arm/vfp/vfpdouble.c:860 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 309 69 85 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 85 309 310 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 7 r7 [259])
        (ashift:SI (reg:SI 0 r0 [orig:144 D.4830 ] [144])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(note 310 85 83 5 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 83 310 80 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:260+4 ] [260])
        (ashift:SI (reg:SI 1 r1 [ D.4830+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 80 83 84 5 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:136 D.5976 ] [136])
        (zero_extract:SI (reg:SI 1 r1 [ D.4830+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 84 80 269 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:260+4 ] [260])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:144 D.4830 ] [144])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:260+4 ] [260]))) 270 {*arith_shiftsi} (nil))

(insn:TI 269 84 242 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4830+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4830+4 ])
            (nil))))

(insn 242 269 104 5 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [196])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 104 242 87 5 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:136 D.5976 ] [136])
                    (reg:SI 1 r1 [196]))
                (ne:SI (reg:SI 12 ip [orig:136 D.5976 ] [136])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [196])
        (nil)))

(insn 87 104 311 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:137 significand ] [137])
        (lshiftrt:SI (reg:SI 7 r7 [259])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 7 r7 [259])
        (nil)))

(note 311 87 73 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 73 311 88 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [255])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 88 73 312 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:137 significand ] [137])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:260+4 ] [260])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:137 significand ] [137]))) 270 {*arith_shiftsi} (nil))

(note 312 88 89 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 89 312 313 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:260+4 ] [260])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:260+4 ] [260])
        (nil)))

(note 313 89 260 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:137 significand ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 260 313 75 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [204])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 75 260 261 5 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 1 r1 [255])) 176 {*movhi_insn_arch4} (nil))

(insn 261 75 262 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 262 261 314 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:137 significand ] [137])
            (ior:SI (reg:SI 2 r2 [orig:137 significand ] [137])
                (reg:SI 0 r0 [204])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [204])
        (nil)))

(note 314 262 263 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:137 significand ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 263 314 315 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 315 263 112 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:137 significand ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 112 315 81 5 arch/arm/vfp/vfpdouble.c:861 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:136 D.5976 ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:136 D.5976 ] [136])
        (nil)))

(insn 81 112 111 5 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:136 D.5976 ] [136])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 111 81 113 5 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:137 significand ] [137])) 163 {*arm_movdi} (nil))

(jump_insn:TI 113 111 114 5 arch/arm/vfp/vfpdouble.c:861 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  5 [50.0%]  (fallthru)
(note 114 113 115 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 115 114 116 6 NOTE_INSN_DELETED)

(note 116 115 117 6 NOTE_INSN_DELETED)

(insn:TI 117 116 118 6 arch/arm/vfp/vfpdouble.c:861 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:137 significand ] [137])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:137 significand ] [137])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 118 117 119 6 arch/arm/vfp/vfpdouble.c:861 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 123)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]


;; Succ edge  7 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [29.0%]  (fallthru)
(note 119 118 120 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 120 119 121 7 NOTE_INSN_DELETED)

(insn:TI 121 120 122 7 arch/arm/vfp/vfpdouble.c:862 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 122 121 316 7 arch/arm/vfp/vfpdouble.c:862 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 316 122 317 7 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

(note 317 316 123 8 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:137 significand ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 5 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [50.0%] 
;; Pred edge  6 [71.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 123 317 124 8 277 "" [2 uses])

(note 124 123 125 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 125 124 126 8 NOTE_INSN_DELETED)

(note 126 125 127 8 NOTE_INSN_DELETED)

(note 127 126 134 8 NOTE_INSN_DELETED)

(note 134 127 154 8 NOTE_INSN_DELETED)

(note 154 134 156 8 NOTE_INSN_DELETED)

(note 156 154 157 8 NOTE_INSN_DELETED)

(note 157 156 160 8 NOTE_INSN_DELETED)

(note 160 157 164 8 NOTE_INSN_DELETED)

(note 164 160 168 8 NOTE_INSN_DELETED)

(note 168 164 169 8 NOTE_INSN_DELETED)

(note 169 168 170 8 NOTE_INSN_DELETED)

(note 170 169 172 8 NOTE_INSN_DELETED)

(note 172 170 173 8 NOTE_INSN_DELETED)

(note 173 172 176 8 NOTE_INSN_DELETED)

(note 176 173 177 8 NOTE_INSN_DELETED)

(note 177 176 179 8 NOTE_INSN_DELETED)

(note 179 177 180 8 NOTE_INSN_DELETED)

(note 180 179 181 8 NOTE_INSN_DELETED)

(note 181 180 190 8 NOTE_INSN_DELETED)

(note 190 181 200 8 NOTE_INSN_DELETED)

(note 200 190 201 8 NOTE_INSN_DELETED)

(note 201 200 207 8 NOTE_INSN_DELETED)

(note 207 201 131 8 NOTE_INSN_DELETED)

(insn:TI 131 207 318 8 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:150 fpscr ] [150])) 167 {*arm_movsi_insn} (nil))

(note 318 131 130 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 130 318 319 8 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(note 319 130 129 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 129 319 128 8 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn 128 129 132 8 arch/arm/vfp/vfpdouble.c:864 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 132 128 135 8 arch/arm/vfp/vfpdouble.c:864 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply") [flags 0x3] <function_decl 0x10b08180 vfp_double_multiply>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 135 132 140 8 arch/arm/vfp/vfpdouble.c:865 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 6 r6 [orig:151 negate ] [151])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 140 135 138 8 arch/arm/vfp/vfpdouble.c:866 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [214])
            (const_int -32768 [0xffffffffffff8000]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (const_int -32768 [0xffffffffffff8000])
        (nil)))

(insn:TI 138 140 133 8 arch/arm/vfp/vfpdouble.c:866 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:212 vdp.sign ] [212])
            (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                        (const_int 42 [0x2a])) [0 vdp.sign+0 S2 A16])))) 2332 {neon_vornv2di+65} (nil))

(insn:TI 133 138 320 8 arch/arm/vfp/vfpdouble.c:864 (set (reg/v:SI 7 r7 [orig:140 exceptions ] [140])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 320 133 145 8 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:140 exceptions ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 145 320 141 8 arch/arm/vfp/vfpdouble.c:868 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:147 dd ] [147])) 167 {*arm_movsi_insn} (nil))

(insn:TI 141 145 142 8 arch/arm/vfp/vfpdouble.c:866 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [213])
            (xor:SI (reg:SI 2 r2 [orig:212 vdp.sign ] [212])
                (reg:SI 3 r3 [214])))) 2315 {neon_vornv2di+48} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:212 vdp.sign ] [212])
        (nil)))

(insn 142 141 146 8 arch/arm/vfp/vfpdouble.c:866 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 42 [0x2a])) [0 vdp.sign+0 S2 A16])
            (reg:HI 3 r3 [213]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:HI 3 r3 [213])
            (nil))))

(call_insn:TI 146 142 253 8 arch/arm/vfp/vfpdouble.c:868 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 253 146 252 8 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 252 253 163 8 arch/arm/vfp/vfp.h:304 (set (reg:SI 2 r2 [216])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 163 252 161 8 arch/arm/vfp/vfp.h:308 (set (reg:SI 8 r8 [265])
        (ashift:SI (reg:SI 0 r0 [orig:143 D.4847 ] [143])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 161 163 158 8 arch/arm/vfp/vfp.h:308 (set (reg:SI 12 ip [orig:266+4 ] [266])
        (ashift:SI (reg:SI 1 r1 [ D.4847+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4847+4 ])
        (nil)))

(insn:TI 158 161 162 8 arch/arm/vfp/vfp.h:305 (set (reg:SI 14 lr [orig:134 D.5991 ] [134])
        (zero_extract:SI (reg:SI 1 r1 [ D.4847+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 162 158 255 8 arch/arm/vfp/vfp.h:308 (set (reg:SI 12 ip [orig:266+4 ] [266])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:143 D.4847 ] [143])
                (const_int 20 [0x14]))
            (reg:SI 12 ip [orig:266+4 ] [266]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:143 D.4847 ] [143])
        (nil)))

(insn:TI 255 162 171 8 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4847+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn 171 255 182 8 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [231])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 182 171 254 8 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 14 lr [orig:134 D.5991 ] [134])
                    (reg:SI 1 r1 [231]))
                (ne:SI (reg:SI 14 lr [orig:134 D.5991 ] [134])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [231])
        (nil)))

(insn 254 182 165 8 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [215])
        (and:SI (reg:SI 0 r0 [orig:143 D.4847 ] [143])
            (reg:SI 2 r2 [216]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [216])
        (nil)))

(insn:TI 165 254 321 8 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (lshiftrt:SI (reg:SI 8 r8 [265])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(note 321 165 167 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 167 321 322 8 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 12 ip [orig:266+4 ] [266])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:266+4 ] [266])
        (nil)))

(note 322 167 166 8 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 166 322 323 8 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (ior:SI (ashift:SI (reg:SI 12 ip [orig:266+4 ] [266])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:135 significand ] [135]))) 270 {*arith_shiftsi} (nil))

(note 323 166 248 8 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 248 323 249 8 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 8 r8 [239])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 249 248 250 8 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 9 r9 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn 250 249 324 8 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:135 significand ] [135])
            (ior:SI (reg:SI 2 r2 [orig:135 significand ] [135])
                (reg:SI 8 r8 [239])))) 2310 {neon_vornv2di+43} (nil))

(note 324 250 251 8 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 251 324 325 8 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 9 r9 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (nil)))

(note 325 251 191 8 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 191 325 150 8 arch/arm/vfp/vfpdouble.c:869 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 6 r6 [orig:151 negate ] [151])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 6 r6 [orig:151 negate ] [151])
        (nil)))

(insn:TI 150 191 189 8 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [261])
        (lshiftrt:SI (reg:SI 11 fp [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 189 150 194 8 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:135 significand ] [135])) 163 {*arm_movdi} (nil))

(insn:TI 194 189 326 8 arch/arm/vfp/vfpdouble.c:870 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [242])
            (const_int -32768 [0xffffffffffff8000]))) 2345 {neon_vornv2di+78} (expr_list:REG_EQUIV (const_int -32768 [0xffffffffffff8000])
        (nil)))

(note 326 194 199 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 199 326 327 8 arch/arm/vfp/vfpdouble.c:872 (set (reg/f:SI 6 r6 [243])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 56 [0x38]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 56 [0x38]))
        (nil)))

(note 327 199 152 8 ( negate (expr_list:REG_DEP_TRUE (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
            (const_int -4 [0xfffffffffffffffc])) [0 negate+0 S4 A32])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 152 327 204 8 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [orig:133 D.5994 ] [133])
        (zero_extend:SI (reg:HI 1 r1 [261]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 204 152 328 8 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (nil))

(note 328 204 153 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 153 328 202 8 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [orig:133 D.5994 ] [133])) 176 {*movhi_insn_arch4} (nil))

(insn 202 153 195 8 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 0 r0)
        (reg/f:SI 6 r6 [243])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn:TI 195 202 205 8 arch/arm/vfp/vfpdouble.c:870 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [241])
            (xor:SI (reg:SI 1 r1 [orig:133 D.5994 ] [133])
                (reg:SI 3 r3 [242])))) 2315 {neon_vornv2di+48} (expr_list:REG_DEAD (reg:SI 3 r3 [242])
        (expr_list:REG_EQUAL (xor:SI (reg:SI 1 r1 [orig:133 D.5994 ] [133])
                (const_int -32768 [0xffffffffffff8000]))
            (nil))))

(insn 205 195 196 8 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:150 fpscr ] [150])) 167 {*arm_movsi_insn} (nil))

(insn:TI 196 205 203 8 arch/arm/vfp/vfpdouble.c:870 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
            (reg:HI 1 r1 [241]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:HI 1 r1 [241])
            (nil))))

(insn 203 196 159 8 arch/arm/vfp/vfpdouble.c:872 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn:TI 159 203 206 8 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 14 lr [orig:134 D.5991 ] [134])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 14 lr [orig:134 D.5991 ] [134])
        (nil)))

(call_insn 206 159 240 8 arch/arm/vfp/vfpdouble.c:872 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 240 206 212 8 arch/arm/vfp/vfpdouble.c:874 (set (reg/v/f:SI 3 r3 [orig:152 func ] [152])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 116 [0x74])) [0 func+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 116 [0x74])) [0 func+0 S4 A32])
        (nil)))

(insn 212 240 213 8 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 1 r1)
        (reg/f:SI 6 r6 [243])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn:TI 213 212 210 8 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:150 fpscr ] [150])) 167 {*arm_movsi_insn} (nil))

(insn:TI 210 213 209 8 arch/arm/vfp/vfpdouble.c:874 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 3 r3 [orig:152 func ] [152])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 3 r3 [orig:152 func ] [152])
        (nil)))

(insn:TI 209 210 211 8 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 3 r3 [247])
        (ior:SI (reg:SI 0 r0)
            (reg/v:SI 7 r7 [orig:140 exceptions ] [140]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 211 209 215 8 arch/arm/vfp/vfpdouble.c:874 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:147 dd ] [147])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 215 211 227 8 arch/arm/vfp/vfpdouble.c:874 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 227 215 285 8 arch/arm/vfp/vfpdouble.c:875 (use (reg/i:SI 0 r0)) -1 (nil))

(note 285 227 286 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 286 285 287 8 arch/arm/vfp/vfpdouble.c:875 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 287 286 239)

(note 239 287 245 NOTE_INSN_DELETED)

(note 245 239 0 NOTE_INSN_DELETED)


;; Function vfp_double_fnmsc (vfp_double_fnmsc)[0:178]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: dn+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: dn
    offset 0
      (reg:SI 1 r1 [ dn ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 16


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fnmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={2d,4u} r1={2d,2u} r2={2d,2u} r3={2d,1u} r12={3d,2u} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{126d,19u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 41 NOTE_INSN_DELETED)

(note 41 1 42 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 42 41 43 2 ( dn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ dn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 43 42 44 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 44 43 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 44 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 36 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 36 6 47 2 arch/arm/vfp/vfpdouble.c:909 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -16 [0xfffffffffffffff0])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 0 r0))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 1 r1))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 2 r2))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 47 36 46 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(note 46 47 45 2 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(note 45 46 37 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 37 45 9 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 9 37 10 2 arch/arm/vfp/vfpdouble.c:910 (set (reg:SI 12 ip [139])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 3 [0x3])
        (nil)))

(insn:TI 10 9 34 2 arch/arm/vfp/vfpdouble.c:910 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [139])
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn:TI 34 10 12 2 arch/arm/vfp/vfpdouble.c:910 (set (reg/f:SI 12 ip [140])
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10e32ea0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10e32ea0>)
        (nil)))

(insn:TI 12 34 17 2 arch/arm/vfp/vfpdouble.c:910 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 12 ip [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [140])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10e32ea0>)
            (nil))))

(call_insn 17 12 48 2 arch/arm/vfp/vfpdouble.c:910 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 48 17 29 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 29 48 38 2 arch/arm/vfp/vfpdouble.c:911 (use (reg/i:SI 0 r0)) -1 (nil))

(note 38 29 39 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 39 38 40 2 arch/arm/vfp/vfpdouble.c:911 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 40 39 33)

(note 33 40 35 NOTE_INSN_DELETED)

(note 35 33 0 NOTE_INSN_DELETED)


;; Function vfp_double_fnmac (vfp_double_fnmac)[0:176]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: dn+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: dn
    offset 0
      (reg:SI 1 r1 [ dn ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 16


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fnmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={2d,4u} r1={2d,2u} r2={2d,2u} r3={2d,1u} r12={3d,2u} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{126d,19u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 41 NOTE_INSN_DELETED)

(note 41 1 42 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 42 41 43 2 ( dn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ dn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 43 42 44 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 44 43 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 44 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 36 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 36 6 47 2 arch/arm/vfp/vfpdouble.c:893 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -16 [0xfffffffffffffff0])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 0 r0))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 1 r1))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 2 r2))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 47 36 46 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(note 46 47 45 2 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(note 45 46 37 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 37 45 9 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 9 37 10 2 arch/arm/vfp/vfpdouble.c:894 (set (reg:SI 12 ip [139])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn:TI 10 9 34 2 arch/arm/vfp/vfpdouble.c:894 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [139])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn:TI 34 10 12 2 arch/arm/vfp/vfpdouble.c:894 (set (reg/f:SI 12 ip [140])
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10e374a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10e374a0>)
        (nil)))

(insn:TI 12 34 17 2 arch/arm/vfp/vfpdouble.c:894 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 12 ip [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [140])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x10e374a0>)
            (nil))))

(call_insn 17 12 48 2 arch/arm/vfp/vfpdouble.c:894 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 48 17 29 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 29 48 38 2 arch/arm/vfp/vfpdouble.c:895 (use (reg/i:SI 0 r0)) -1 (nil))

(note 38 29 39 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 39 38 40 2 arch/arm/vfp/vfpdouble.c:895 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 40 39 33)

(note 33 40 35 NOTE_INSN_DELETED)

(note 35 33 0 NOTE_INSN_DELETED)


;; Function vfp_double_fmsc (vfp_double_fmsc)[0:177]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: dn+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: dn
    offset 0
      (reg:SI 1 r1 [ dn ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 16


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fmsc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={2d,4u} r1={2d,2u} r2={2d,2u} r3={2d,1u} r12={3d,2u} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{126d,19u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 41 NOTE_INSN_DELETED)

(note 41 1 42 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 42 41 43 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 43 42 44 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 44 43 7 2 ( dn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ dn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 44 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 36 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 36 6 47 2 arch/arm/vfp/vfpdouble.c:901 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -16 [0xfffffffffffffff0])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 0 r0))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 1 r1))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 2 r2))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 47 36 46 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(note 46 47 45 2 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(note 45 46 37 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 37 45 9 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 9 37 10 2 arch/arm/vfp/vfpdouble.c:902 (set (reg:SI 12 ip [139])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))

(insn:TI 10 9 34 2 arch/arm/vfp/vfpdouble.c:902 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [139])
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn:TI 34 10 12 2 arch/arm/vfp/vfpdouble.c:902 (set (reg/f:SI 12 ip [140])
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x10e37f00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x10e37f00>)
        (nil)))

(insn:TI 12 34 17 2 arch/arm/vfp/vfpdouble.c:902 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 12 ip [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [140])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x10e37f00>)
            (nil))))

(call_insn 17 12 48 2 arch/arm/vfp/vfpdouble.c:902 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 48 17 29 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 29 48 38 2 arch/arm/vfp/vfpdouble.c:903 (use (reg/i:SI 0 r0)) -1 (nil))

(note 38 29 39 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 39 38 40 2 arch/arm/vfp/vfpdouble.c:903 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 40 39 33)

(note 33 40 35 NOTE_INSN_DELETED)

(note 35 33 0 NOTE_INSN_DELETED)


;; Function vfp_double_fmac (vfp_double_fmac)[0:175]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: dn+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dn
    offset 0
      (reg:SI 1 r1 [ dn ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])

OUT:
Stack adjustment: 16


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fmac

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={2d,4u} r1={2d,2u} r2={2d,2u} r3={2d,1u} r12={3d,2u} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{126d,19u,0e} in 8{7 regular + 1 call} insns.
(note 1 0 41 NOTE_INSN_DELETED)

(note 41 1 42 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 42 41 43 2 ( dn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ dn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 43 42 44 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 44 43 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 12 [ip] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 44 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 36 2 NOTE_INSN_FUNCTION_BEG)

(insn/f:TI 36 6 47 2 arch/arm/vfp/vfpdouble.c:885 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 0 r0)
                    ] 2))
            (use (reg:SI 1 r1))
            (use (reg:SI 2 r2))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                    (set/f (reg/f:SI 13 sp)
                        (plus:SI (reg/f:SI 13 sp)
                            (const_int -16 [0xfffffffffffffff0])))
                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                        (reg:SI 0 r0))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 4 [0x4])) [0 S4 A32])
                        (reg:SI 1 r1))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 8 [0x8])) [0 S4 A32])
                        (reg:SI 2 r2))
                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                (const_int 12 [0xc])) [0 S4 A32])
                        (reg:SI 14 lr))
                ])
            (nil))))

(note 47 36 46 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(note 46 47 45 2 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(note 45 46 37 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 37 45 9 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 9 37 10 2 arch/arm/vfp/vfpdouble.c:886 (set (reg:SI 12 ip [139])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 10 9 34 2 arch/arm/vfp/vfpdouble.c:886 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 12 ip [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [139])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:TI 34 10 12 2 arch/arm/vfp/vfpdouble.c:886 (set (reg/f:SI 12 ip [140])
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10e3d4e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10e3d4e0>)
        (nil)))

(insn:TI 12 34 17 2 arch/arm/vfp/vfpdouble.c:886 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/f:SI 12 ip [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [140])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10e3d4e0>)
            (nil))))

(call_insn 17 12 48 2 arch/arm/vfp/vfpdouble.c:886 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_multiply_accumulate") [flags 0x3] <function_decl 0x10b08280 vfp_double_multiply_accumulate>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 48 17 29 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 29 48 38 2 arch/arm/vfp/vfpdouble.c:887 (use (reg/i:SI 0 r0)) -1 (nil))

(note 38 29 39 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 39 38 40 2 arch/arm/vfp/vfpdouble.c:887 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 40 39 33)

(note 33 40 35 NOTE_INSN_DELETED)

(note 35 33 0 NOTE_INSN_DELETED)


;; Function vfp_double_fadd (vfp_double_fadd)[0:181]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: dn+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: dn
    offset 0
      (reg:SI 1 r1 [ dn ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])


Basic block 3:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])


Basic block 4:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])


Basic block 5:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 5: dm+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:136 significand ] [136])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])
  name: dm
    offset 0
      (reg/v:SI 5 r5 [orig:144 dm ] [144])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


Basic block 6:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])

OUT:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


Basic block 7:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


Basic block 8:
IN:
Stack adjustment: 96
Reg 2: significand+0
Reg 3: significand+4
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:134 significand ] [134])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])

OUT:
Stack adjustment: 96
Reg 4: fpscr+0
Reg 6: dd+0
Variables:
  name: fpscr
    offset 0
      (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
  name: dd
    offset 0
      (reg/v:SI 6 r6 [orig:142 dd ] [142])


9 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 5 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  4 [29.0%]  (fallthru) 5 [71.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  3 [29.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  5 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [71.0%]  4 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  6 [61.0%]  (fallthru) 8 [39.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  5 [61.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

Successors:  7 [39.0%]  (fallthru) 8 [61.0%] 
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2378, maybe hot.
Predecessors:  6 [39.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [39.0%]  6 [61.0%]  7 [100.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 1 , prev 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fadd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,19u} r1={17d,17u} r2={15d,13u} r3={13d,11u} r4={2d,4u} r5={4d,6u} r6={2d,3u} r7={2d,3u} r8={2d,2u} r9={3d,4u} r10={2d,3u} r11={3d,4u} r12={9d,9u} r13={3d,29u,1d} r14={11d,8u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,12u} r25={2d} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 925{775d,147u,3e} in 76{70 regular + 6 call} insns.
(note 1 0 196 NOTE_INSN_DELETED)

(note 196 1 197 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 197 196 198 2 ( dn (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ dn ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 198 197 199 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 199 198 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 199 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 7 6 2 NOTE_INSN_DELETED)

(note 6 3 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 6 19 2 NOTE_INSN_DELETED)

(note 19 17 20 2 NOTE_INSN_DELETED)

(note 20 19 23 2 NOTE_INSN_DELETED)

(note 23 20 27 2 NOTE_INSN_DELETED)

(note 27 23 31 2 NOTE_INSN_DELETED)

(note 31 27 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 35 2 NOTE_INSN_DELETED)

(note 35 33 36 2 NOTE_INSN_DELETED)

(note 36 35 39 2 NOTE_INSN_DELETED)

(note 39 36 40 2 NOTE_INSN_DELETED)

(note 40 39 42 2 NOTE_INSN_DELETED)

(note 42 40 43 2 NOTE_INSN_DELETED)

(note 43 42 44 2 NOTE_INSN_DELETED)

(note 44 43 188 2 NOTE_INSN_DELETED)

(insn/f:TI 188 44 2 2 arch/arm/vfp/vfpdouble.c:959 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn:TI 2 188 189 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/v:SI 6 r6 [orig:142 dd ] [142])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn/f:TI 189 2 190 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -60 [0xffffffffffffffc4]))) 4 {*arm_addsi3} (nil))

(note 190 189 9 2 NOTE_INSN_PROLOGUE_END)

(insn 9 190 200 2 arch/arm/vfp/vfpdouble.c:963 (set (reg:SI 0 r0)
        (reg:SI 1 r1 [ dn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ dn ])
        (nil)))

(note 200 9 4 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:142 dd ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 4 200 5 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(insn 5 4 10 2 arch/arm/vfp/vfpdouble.c:959 (set (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn:TI 10 5 203 2 arch/arm/vfp/vfpdouble.c:963 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 203 10 202 2 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:145 fpscr ] [145])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 202 203 201 2 ( dm (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:144 dm ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 201 202 184 2 ( dn (nil)) NOTE_INSN_VAR_LOCATION)

(insn 184 201 26 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 26 184 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 7 r7 [210])
        (ashift:SI (reg:SI 0 r0 [orig:140 D.4964 ] [140])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 26 21 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:211+4 ] [211])
        (ashift:SI (reg:SI 1 r1 [ D.4964+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 21 24 25 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:135 D.6006 ] [135])
        (zero_extract:SI (reg:SI 1 r1 [ D.4964+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 25 21 186 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:211+4 ] [211])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:140 D.4964 ] [140])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:211+4 ] [211]))) 270 {*arith_shiftsi} (nil))

(insn:TI 186 25 163 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4964+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4964+4 ])
            (nil))))

(insn 163 186 45 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [162])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 45 163 28 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:135 D.6006 ] [135])
                    (reg:SI 1 r1 [162]))
                (ne:SI (reg:SI 12 ip [orig:135 D.6006 ] [135])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [162])
        (nil)))

(insn 28 45 204 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (lshiftrt:SI (reg:SI 7 r7 [210])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(note 204 28 14 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 14 204 29 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [206])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (nil)))

(insn 29 14 205 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:136 significand ] [136])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:211+4 ] [211])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:136 significand ] [136]))) 270 {*arith_shiftsi} (nil))

(note 205 29 30 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 30 205 206 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:211+4 ] [211])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:211+4 ] [211])
        (nil)))

(note 206 30 177 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 177 206 16 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [170])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 16 177 178 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 26 [0x1a])) [0 vdn.sign+0 S2 A16])
        (reg:HI 1 r1 [206])) 176 {*movhi_insn_arch4} (nil))

(insn 178 16 179 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 179 178 207 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:136 significand ] [136])
            (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                (reg:SI 0 r0 [170])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [170])
        (nil)))

(note 207 179 180 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 180 207 208 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 208 180 53 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 53 208 22 2 arch/arm/vfp/vfpdouble.c:964 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:135 D.6006 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:135 D.6006 ] [135])
        (nil)))

(insn 22 53 52 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 vdn.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:135 D.6006 ] [135])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 52 22 54 2 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 vdn.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:136 significand ] [136])) 163 {*arm_movdi} (nil))

(jump_insn:TI 54 52 55 2 arch/arm/vfp/vfpdouble.c:964 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  2 [50.0%]  (fallthru)
(note 55 54 56 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 56 55 57 3 NOTE_INSN_DELETED)

(note 57 56 58 3 NOTE_INSN_DELETED)

(insn:TI 58 57 59 3 arch/arm/vfp/vfpdouble.c:964 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:136 significand ] [136])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:136 significand ] [136])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 59 58 60 3 arch/arm/vfp/vfpdouble.c:964 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  4 [29.0%]  (fallthru)
;; Succ edge  5 [71.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  3 [29.0%]  (fallthru)
(note 60 59 61 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 4 NOTE_INSN_DELETED)

(insn:TI 62 61 63 4 arch/arm/vfp/vfpdouble.c:965 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 63 62 209 4 arch/arm/vfp/vfpdouble.c:965 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 209 63 210 4 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 4 -> ( 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

(note 210 209 64 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:136 significand ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [71.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 64 210 65 5 302 "" [2 uses])

(note 65 64 74 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 74 65 76 5 NOTE_INSN_DELETED)

(note 76 74 77 5 NOTE_INSN_DELETED)

(note 77 76 80 5 NOTE_INSN_DELETED)

(note 80 77 84 5 NOTE_INSN_DELETED)

(note 84 80 88 5 NOTE_INSN_DELETED)

(note 88 84 89 5 NOTE_INSN_DELETED)

(note 89 88 90 5 NOTE_INSN_DELETED)

(note 90 89 92 5 NOTE_INSN_DELETED)

(note 92 90 93 5 NOTE_INSN_DELETED)

(note 93 92 96 5 NOTE_INSN_DELETED)

(note 96 93 97 5 NOTE_INSN_DELETED)

(note 97 96 99 5 NOTE_INSN_DELETED)

(note 99 97 100 5 NOTE_INSN_DELETED)

(note 100 99 101 5 NOTE_INSN_DELETED)

(note 101 100 66 5 NOTE_INSN_DELETED)

(insn:TI 66 101 173 5 arch/arm/vfp/vfpdouble.c:967 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:144 dm ] [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:144 dm ] [144])
        (nil)))

(insn 173 66 67 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 67 173 211 5 arch/arm/vfp/vfpdouble.c:967 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 211 67 172 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 172 211 83 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 83 172 212 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [216])
        (ashift:SI (reg:SI 0 r0 [orig:139 D.4973 ] [139])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(note 212 83 81 5 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 81 212 78 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:217+4 ] [217])
        (ashift:SI (reg:SI 1 r1 [ D.4973+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 78 81 82 5 arch/arm/vfp/vfp.h:305 (set (reg:SI 12 ip [orig:133 D.6021 ] [133])
        (zero_extract:SI (reg:SI 1 r1 [ D.4973+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 82 78 175 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [orig:217+4 ] [217])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:139 D.4973 ] [139])
                (const_int 20 [0x14]))
            (reg:SI 14 lr [orig:217+4 ] [217]))) 270 {*arith_shiftsi} (nil))

(insn:TI 175 82 161 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 9 r9 [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4973+4 ])
            (reg:SI 11 fp [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4973+4 ])
        (nil)))

(insn 161 175 102 5 arch/arm/vfp/vfp.h:309 (set (reg:SI 1 r1 [189])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 102 161 85 5 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 12 ip [orig:133 D.6021 ] [133])
                    (reg:SI 1 r1 [189]))
                (ne:SI (reg:SI 12 ip [orig:133 D.6021 ] [133])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 1 r1 [189])
        (nil)))

(insn 85 102 213 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (lshiftrt:SI (reg:SI 5 r5 [216])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [216])
        (nil)))

(note 213 85 71 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 71 213 86 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [212])
        (lshiftrt:SI (reg:SI 9 r9 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 86 71 214 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:134 significand ] [134])
        (ior:SI (ashift:SI (reg:SI 14 lr [orig:217+4 ] [217])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:134 significand ] [134]))) 270 {*arith_shiftsi} (nil))

(note 214 86 87 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 87 214 215 5 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 14 lr [orig:217+4 ] [217])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:217+4 ] [217])
        (nil)))

(note 215 87 174 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 174 215 73 5 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [173])
        (and:SI (reg:SI 0 r0 [orig:139 D.4973 ] [139])
            (reg:SI 10 sl [174]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 73 174 166 5 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 1 r1 [212])) 176 {*movhi_insn_arch4} (nil))

(insn 166 73 167 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [197])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 167 166 168 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn 168 167 216 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:134 significand ] [134])
            (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                (reg:SI 0 r0 [197])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 0 r0 [197])
        (nil)))

(note 216 168 169 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 169 216 217 5 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 1 r1 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(note 217 169 110 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 110 217 79 5 arch/arm/vfp/vfpdouble.c:968 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:133 D.6021 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:133 D.6021 ] [133])
        (nil)))

(insn:TI 79 110 109 5 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 12 ip [orig:133 D.6021 ] [133])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 109 79 111 5 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:134 significand ] [134])) 163 {*arm_movdi} (nil))

(jump_insn 111 109 112 5 arch/arm/vfp/vfpdouble.c:968 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  5 [61.0%]  (fallthru)
(note 112 111 113 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 6 NOTE_INSN_DELETED)

(note 114 113 115 6 NOTE_INSN_DELETED)

(insn:TI 115 114 116 6 arch/arm/vfp/vfpdouble.c:968 discrim 1 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:134 significand ] [134])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:134 significand ] [134])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(jump_insn:TI 116 115 117 6 arch/arm/vfp/vfpdouble.c:968 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [39.0%]  (fallthru)
(note 117 116 118 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 118 117 119 7 NOTE_INSN_DELETED)

(insn:TI 119 118 120 7 arch/arm/vfp/vfpdouble.c:969 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 120 119 218 7 arch/arm/vfp/vfpdouble.c:969 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 218 120 219 7 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

(note 219 218 121 8 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:134 significand ] [134])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 5 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  5 [39.0%] 
;; Pred edge  6 [61.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 121 219 122 8 304 "" [2 uses])

(note 122 121 124 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 124 122 125 8 NOTE_INSN_DELETED)

(note 125 124 123 8 NOTE_INSN_DELETED)

(insn:TI 123 125 127 8 arch/arm/vfp/vfpdouble.c:971 (set (reg/f:SI 5 r5 [200])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 40 [0x28]))
        (nil)))

(insn 127 123 128 8 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 24 [0x18]))) 4 {*arm_addsi3} (nil))

(insn:TI 128 127 220 8 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 2 r2)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(note 220 128 129 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 129 220 221 8 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 3 r3)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(note 221 129 126 8 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 126 221 130 8 arch/arm/vfp/vfpdouble.c:971 (set (reg:SI 0 r0)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(call_insn:TI 130 126 160 8 arch/arm/vfp/vfpdouble.c:971 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_add") [flags 0x3] <function_decl 0x10b08080 vfp_double_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 160 130 136 8 arch/arm/vfp/vfpdouble.c:973 (set (reg/f:SI 12 ip [204])
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>)
        (nil)))

(insn:TI 136 160 137 8 arch/arm/vfp/vfpdouble.c:973 (set (reg:SI 1 r1)
        (reg/f:SI 5 r5 [200])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -16 [0xfffffffffffffff0]))
        (nil)))

(insn 137 136 134 8 arch/arm/vfp/vfpdouble.c:973 (set (reg:SI 2 r2)
        (reg/v:SI 4 r4 [orig:145 fpscr ] [145])) 167 {*arm_movsi_insn} (nil))

(insn:TI 134 137 131 8 arch/arm/vfp/vfpdouble.c:973 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [204])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [204])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x10e47b20>)
            (nil))))

(insn:TI 131 134 222 8 arch/arm/vfp/vfpdouble.c:971 (set (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 222 131 135 8 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:137 exceptions ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 135 222 139 8 arch/arm/vfp/vfpdouble.c:973 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:142 dd ] [142])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 139 135 223 8 arch/arm/vfp/vfpdouble.c:973 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 223 139 151 8 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

(insn 151 223 191 8 arch/arm/vfp/vfpdouble.c:974 (use (reg/i:SI 0 r0)) -1 (nil))

(note 191 151 192 8 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 192 191 193 8 arch/arm/vfp/vfpdouble.c:974 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 193 192 159)

(note 159 193 165 NOTE_INSN_DELETED)

(note 165 159 0 NOTE_INSN_DELETED)


;; Function vfp_double_ftosi (vfp_double_ftosi)[0:169]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: sd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: sd
    offset 0
      (reg:SI 0 r0 [ sd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 3:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 4:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 5:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])


Basic block 6:
IN:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])


Basic block 7:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])


Basic block 8:
IN:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])


Basic block 9:
IN:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])


Basic block 10:
IN:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 11:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 12:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 13:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])


Basic block 14:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 0: incr+0
Reg 1: incr+4
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: incr
    offset 0
      (reg:SI 0 r0 [orig:136 incr ] [136])
    offset 4
      (reg:SI 1 r1 [ incr+4 ])
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])


Basic block 15:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])


Basic block 16:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 0: incr+0
Reg 1: incr+4
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: incr
    offset 0
      (reg:SI 0 r0 [orig:136 incr ] [136])
    offset 4
      (reg:SI 1 r1 [ incr+4 ])
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])


Basic block 17:
IN:
Stack adjustment: 56
Reg 0: incr+0
Reg 1: incr+4
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: incr
    offset 0
      (reg:SI 0 r0 [orig:136 incr ] [136])
    offset 4
      (reg:SI 1 r1 [ incr+4 ])
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])

OUT:
Stack adjustment: 56
Reg 0: incr+0
Reg 1: incr+4
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: incr
    offset 0
      (reg:SI 0 r0 [orig:136 incr ] [136])
    offset 4
      (reg:SI 1 r1 [ incr+4 ])
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])


Basic block 18:
IN:
Stack adjustment: 56
Reg 0: incr+0
Reg 1: incr+4
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: incr
    offset 0
      (reg:SI 0 r0 [orig:136 incr ] [136])
    offset 4
      (reg:SI 1 r1 [ incr+4 ])
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])


Basic block 19:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 20:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 21:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 22:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 23:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 24:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 25:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 26:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 27:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 28:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 29:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 30:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 31:
IN:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 32:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4 tm+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:236 rem ] [236])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: d+0
Reg 7: exceptions+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 6 r6 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 7 r7 [orig:141 exceptions ] [141])


33 basic blocks, 51 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

Successors:  7 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [56.0%]  (fallthru) 7 [44.0%] 
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  4 [56.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 2 [r2]

Successors:  6 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7] 24 [cc]
;; live  kill	

Successors:  9 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  4 [44.0%]  3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 9 [r9] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  9 [50.0%]  8 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 3 [r3]

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [50.0%]  5 [50.0%]  6 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

Successors:  10 [61.0%]  (fallthru) 31 [39.0%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  9 [61.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 9 [r9] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

Successors:  11 [50.0%]  (fallthru) 12 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 3050, maybe hot.
Predecessors:  10 [50.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

Successors:  32 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 3050, maybe hot.
Predecessors:  10 [50.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 10 [sl] 24 [cc]
;; live  kill	

Successors:  13 [50.0%]  (fallthru) 25 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  12 [50.0%]  (fallthru)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

Successors:  14 [50.0%]  (fallthru) 15 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 762, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

Successors:  18 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 762, maybe hot.
Predecessors:  13 [50.0%] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  17 [28.0%]  16 [72.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 549, maybe hot.
Predecessors:  15 [72.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

Successors:  17 [50.0%]  (fallthru) 18 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 488, maybe hot.
Predecessors:  15 [28.0%]  16 [50.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  18 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 16 [50.0%]  14 [100.0%] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

Successors:  21 [50.0%]  19 [50.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 763, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  22 [71.0%]  20 [29.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  19 [29.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  21 [50.0%]  (fallthru) 22 [50.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 874, maybe hot.
Predecessors:  18 [50.0%]  20 [50.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

Successors:  22 [100.0%]  (fallthru)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 1527, maybe hot.
Predecessors:  19 [71.0%]  20 [50.0%]  21 [100.0%]  (fallthru)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 24 [cc]

Successors:  23 [50.0%]  (fallthru) 24 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 762, maybe hot.
Predecessors:  22 [50.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	 10 [sl]

Successors:  24 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  23 [100.0%]  (fallthru) 22 [50.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

Successors:  32 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  12 [50.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 11 [fp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 11 [fp]

Successors:  26 [61.0%]  (fallthru) 31 [39.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 930, maybe hot.
Predecessors:  25 [61.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 10 [sl] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

Successors:  27 [28.0%]  (fallthru) 29 [72.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 260, maybe hot.
Predecessors:  26 [28.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

Successors:  31 [61.0%]  28 [39.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 101, maybe hot.
Predecessors:  27 [39.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}

Successors:  32 [100.0%] 


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 670, maybe hot.
Predecessors:  26 [72.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  30 [46.8%]  (fallthru) 31 [53.2%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 313, maybe hot.
Predecessors:  29 [46.8%]  (fallthru)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

Successors:  31 [39.0%]  (fallthru) 32 [61.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 5133, maybe hot.
Predecessors:  9 [39.0%]  27 [61.0%]  29 [53.2%]  25 [39.0%]  30 [39.0%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

Successors:  32 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 32 , prev 31, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  31 [100.0%]  (fallthru) 24 [100.0%]  30 [61.0%]  11 [100.0%]  28 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 1 , prev 32, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  32 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_ftosi

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,19u} r1={16d,15u} r2={13d,13u} r3={20d,20u} r4={5d,14u} r5={4d,11u} r6={9d,13u} r7={9d,13u} r8={3d,9u} r9={5d,13u,3d} r10={6d,10u} r11={3d,4u} r12={5d,2u} r13={3d,44u} r14={6d,3u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={36d,43u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 847{598d,246u,3e} in 140{136 regular + 4 call} insns.
(note 1 0 490 NOTE_INSN_DELETED)

(note 490 1 491 2 ( sd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ sd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 491 490 492 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 492 491 493 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 493 492 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 493 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 6 14 2 NOTE_INSN_DELETED)

(note 14 12 15 2 NOTE_INSN_DELETED)

(note 15 14 17 2 NOTE_INSN_DELETED)

(note 17 15 21 2 NOTE_INSN_DELETED)

(note 21 17 25 2 NOTE_INSN_DELETED)

(note 25 21 26 2 NOTE_INSN_DELETED)

(note 26 25 29 2 NOTE_INSN_DELETED)

(note 29 26 30 2 NOTE_INSN_DELETED)

(note 30 29 33 2 NOTE_INSN_DELETED)

(note 33 30 34 2 NOTE_INSN_DELETED)

(note 34 33 36 2 NOTE_INSN_DELETED)

(note 36 34 37 2 NOTE_INSN_DELETED)

(note 37 36 38 2 NOTE_INSN_DELETED)

(note 38 37 447 2 NOTE_INSN_DELETED)

(insn/f:TI 447 38 448 2 arch/arm/vfp/vfpdouble.c:586 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 9 r9)
            (expr_list:REG_DEAD (reg:SI 7 r7)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_DEAD (reg:SI 4 r4)
                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                    (set/f (reg/f:SI 13 sp)
                                        (plus:SI (reg/f:SI 13 sp)
                                            (const_int -36 [0xffffffffffffffdc])))
                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                        (reg:SI 4 r4))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 4 [0x4])) [0 S4 A32])
                                        (reg:SI 5 r5))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 8 [0x8])) [0 S4 A32])
                                        (reg:SI 6 r6))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 12 [0xc])) [0 S4 A32])
                                        (reg:SI 7 r7))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 16 [0x10])) [0 S4 A32])
                                        (reg:SI 8 r8))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 20 [0x14])) [0 S4 A32])
                                        (reg:SI 9 r9))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 24 [0x18])) [0 S4 A32])
                                        (reg:SI 10 sl))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 28 [0x1c])) [0 S4 A32])
                                        (reg:SI 11 fp))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 32 [0x20])) [0 S4 A32])
                                        (reg:SI 14 lr))
                                ])
                            (nil))))))))

(insn/f:TI 448 447 449 2 arch/arm/vfp/vfpdouble.c:586 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) 4 {*arm_addsi3} (nil))

(note 449 448 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 449 9 2 arch/arm/vfp/vfpdouble.c:586 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 9 2 494 2 arch/arm/vfp/vfpdouble.c:592 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 494 9 5 2 ( sd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 5 494 10 2 arch/arm/vfp/vfpdouble.c:586 (set (mem/c:SI (reg/f:SI 13 sp) [0 %sfp+-16 S4 A32])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 497 2 arch/arm/vfp/vfpdouble.c:592 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 497 10 496 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 496 497 495 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 495 496 28 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 28 495 16 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 12 ip [162])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 16 28 18 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 9 r9 [orig:134 D.6036 ] [134])
        (zero_extract:SI (reg:SI 1 r1 [ D.4609+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 18 16 20 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [orig:229+4 ] [229])
        (ashift:SI (reg:SI 1 r1 [ D.4609+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 20 18 19 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [228])
        (ashift:SI (reg:SI 0 r0 [orig:144 D.4609 ] [144])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 19 20 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [orig:229+4 ] [229])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:144 D.4609 ] [144])
                (const_int 20 [0x14]))
            (reg:SI 3 r3 [orig:229+4 ] [229]))) 270 {*arith_shiftsi} (nil))

(insn:TI 27 19 39 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 2 r2 [orig:161 D.6036 ] [161])
        (sign_extend:SI (reg:HI 9 r9 [orig:134 D.6036 ] [134]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 39 27 22 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 2 r2 [orig:161 D.6036 ] [161])
                    (reg:SI 12 ip [162]))
                (ne:SI (reg:SI 2 r2 [orig:161 D.6036 ] [161])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 22 39 498 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (lshiftrt:SI (reg:SI 14 lr [228])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [228])
        (nil)))

(note 498 22 23 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 23 498 499 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:229+4 ] [229])
                (const_int 30 [0x1e]))
            (reg:SI 4 r4 [orig:135 significand ] [135]))) 270 {*arith_shiftsi} (nil))

(note 499 23 24 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 24 499 500 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [ significand+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:229+4 ] [229])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(note 500 24 40 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 40 500 41 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 41 40 440 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 440 41 441 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [170])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 441 440 442 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 442 441 501 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
            (reg:SI 2 r2 [170]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [170])
        (nil)))

(note 501 442 443 3 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 443 501 502 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 5 r5 [ significand+4 ])
        (ior:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 3 r3 [+4 ]))) 89 {*arm_iorsi3} (nil))

(note 502 443 477 3 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 477 502 478 3 (set (pc)
        (label_ref 80)) -1 (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 478 477 46)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 46 478 47 4 309 "" [1 uses])

(note 47 46 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 52 47 53 4 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:161 D.6036 ] [161])
            (reg:SI 12 ip [162]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [162])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:161 D.6036 ] [161])
            (nil))))

(jump_insn:TI 53 52 54 4 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4400 [0x1130])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [56.0%]  (fallthru)
;; Succ edge  7 [44.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 2 [r2]

;; Pred edge  4 [56.0%]  (fallthru)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 55 54 56 5 NOTE_INSN_DELETED)

(note 56 55 57 5 NOTE_INSN_DELETED)

(insn:TI 57 56 60 5 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
                        (reg:SI 5 r5 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 2 r2))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 2 r2)
        (nil)))

(insn:TI 60 57 503 5 arch/arm/vfp/vfp.h:332 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 8 [0x8]))) 2345 {neon_vornv2di+78} (nil))

(note 503 60 58 5 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:139 tm ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 58 503 64 5 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 101)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 64 58 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 67 64 68 6 NOTE_INSN_DELETED)

(note 68 67 69 6 NOTE_INSN_DELETED)

(note 69 68 434 6 NOTE_INSN_DELETED)

(insn:TI 434 69 436 6 arch/arm/vfp/vfp.h:333 (set (reg:SI 7 r7 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 436 434 504 6 arch/arm/vfp/vfp.h:333 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 7 r7 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 7 r7 [+4 ])
        (nil)))

(note 504 436 437 6 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 437 504 438 6 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 438 437 505 6 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(note 505 438 439 6 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:139 tm ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 439 505 479 6 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 479 439 480 6 (set (pc)
        (label_ref 101)) -1 (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [100.0%] 

(barrier 480 479 506)

(note 506 480 80 7 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 9 [r9] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [44.0%] 
;; Pred edge  3 [100.0%] 
(code_label 80 506 81 7 310 "" [2 uses])

(note 81 80 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 82 81 85 7 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:134 D.6036 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 85 82 507 7 arch/arm/vfp/vfp.h:329 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 507 85 83 7 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:139 tm ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 83 507 89 7 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 101)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 3 [r3]

;; Pred edge  7 [50.0%]  (fallthru)
(note 89 83 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 90 89 91 8 NOTE_INSN_DELETED)

(note 91 90 92 8 NOTE_INSN_DELETED)

(insn:TI 92 91 508 8 arch/arm/vfp/vfp.h:338 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
                        (reg:SI 5 r5 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 3 r3))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 3 r3)
        (nil)))

(note 508 92 360 8 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 360 508 509 8 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

(note 509 360 101 9 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:139 tm ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 8 7 5 6) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [50.0%] 
;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%] 
(code_label 101 509 102 9 312 "" [3 uses])

(note 102 101 103 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 103 102 115 9 NOTE_INSN_DELETED)

(note 115 103 104 9 NOTE_INSN_DELETED)

(insn:TI 104 115 362 9 arch/arm/vfp/vfpdouble.c:599 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                        (const_int 4 [0x4]))
                    (const_int 0 [0x0])))
            (set (reg:SI 7 r7 [180])
                (and:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                    (const_int 4 [0x4])))
        ]) 69 {*andsi3_compare0} (nil))

(insn:TI 362 104 510 9 arch/arm/vfp/vfpdouble.c:588 (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 7 r7 [180])
            (const_int 128 [0x80]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(note 510 362 116 9 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 116 510 119 9 arch/arm/vfp/vfpdouble.c:602 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (nil)))

(insn:TI 119 116 117 9 arch/arm/vfp/vfpdouble.c:604 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
            (ior:SI (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
                (const_int 1 [0x1])))) 2310 {neon_vornv2di+43} (nil))

(jump_insn:TI 117 119 124 9 arch/arm/vfp/vfpdouble.c:602 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 9 -> ( 10 31)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [61.0%]  (fallthru)
;; Succ edge  31 [39.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 9 [r9] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  9 [61.0%]  (fallthru)
(note 124 117 125 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 125 124 429 10 NOTE_INSN_DELETED)

(insn:TI 429 125 511 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(note 511 429 132 10 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 132 511 431 10 arch/arm/vfp/vfpdouble.c:605 (set (reg:SI 9 r9 [orig:188 D.6036 ] [188])
        (sign_extend:SI (reg:HI 9 r9 [orig:134 D.6036 ] [134]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 431 132 130 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4609+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4609+4 ])
            (nil))))

(insn 130 431 134 10 arch/arm/vfp/vfpdouble.c:605 (set (reg:SI 1 r1 [187])
        (const_int 1054 [0x41e])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1054 [0x41e])
        (nil)))

(insn:TI 134 130 428 10 arch/arm/vfp/vfpdouble.c:605 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:188 D.6036 ] [188])
            (reg:SI 1 r1 [187]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [187])
        (expr_list:REG_EQUAL (compare:CC (reg:SI 9 r9 [orig:188 D.6036 ] [188])
                (const_int 1054 [0x41e]))
            (nil))))

(insn 428 134 127 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 127 428 430 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [230])
        (lshiftrt:SI (reg:SI 11 fp)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 430 127 402 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl)
        (and:SI (reg:SI 0 r0 [orig:144 D.4609 ] [144])
            (reg:SI 2 r2))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:144 D.4609 ] [144])
            (nil))))

(insn:TI 402 430 129 10 arch/arm/vfp/vfp.h:304 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn:TI 129 402 135 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [orig:133 D.6039 ] [133])
        (zero_extend:SI (reg:HI 8 r8 [230]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(jump_insn 135 129 136 10 arch/arm/vfp/vfpdouble.c:605 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [50.0%]  (fallthru)
;; Succ edge  12 [50.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 136 135 137 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 137 136 148 11 arch/arm/vfp/vfpdouble.c:607 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 148 137 364 11 arch/arm/vfp/vfpdouble.c:609 (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(insn:TI 364 148 512 11 arch/arm/vfp/vfpdouble.c:608 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 2147483647 [0x7fffffff])
            (const_int -2147483648 [0xffffffff80000000]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(note 512 364 481 11 ( d (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:142 d ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 481 512 482 11 (set (pc)
        (label_ref 324)) -1 (nil))
;; End of basic block 11 -> ( 32)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 [100.0%] 

(barrier 482 481 513)

(note 513 482 151 12 ( d (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 10 [sl] 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%] 
(code_label 151 513 152 12 320 "" [1 uses])

(note 152 151 404 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 404 152 153 12 arch/arm/vfp/vfpdouble.c:589 (set (reg:SI 3 r3)
        (mem/c:SI (reg/f:SI 13 sp) [0 %sfp+-16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 153 404 514 12 arch/arm/vfp/vfpdouble.c:589 (set (reg/v:SI 10 sl [orig:140 rmode ] [140])
        (and:SI (reg:SI 3 r3)
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(note 514 153 400 12 ( rmode (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:140 rmode ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 400 514 158 12 arch/arm/vfp/vfpdouble.c:610 (set (reg:SI 3 r3 [191])
        (const_int 1021 [0x3fd])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1021 [0x3fd])
        (nil)))

(insn:TI 158 400 159 12 arch/arm/vfp/vfpdouble.c:610 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:188 D.6036 ] [188])
            (reg:SI 3 r3 [191]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [191])
        (expr_list:REG_EQUAL (compare:CC (reg:SI 9 r9 [orig:188 D.6036 ] [188])
                (const_int 1021 [0x3fd]))
            (nil))))

(jump_insn:TI 159 158 160 12 arch/arm/vfp/vfpdouble.c:610 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 289)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  25 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  12 [50.0%]  (fallthru)
(note 160 159 164 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 164 160 170 13 NOTE_INSN_DELETED)

(note 170 164 351 13 NOTE_INSN_DELETED)

(note 351 170 352 13 NOTE_INSN_DELETED)

(note 352 351 162 13 NOTE_INSN_DELETED)

(insn:TI 162 352 423 13 arch/arm/vfp/vfpdouble.c:611 (set (reg:SI 9 r9 [195])
        (minus:SI (const_int 1072 [0x430])
            (reg:SI 9 r9 [orig:188 D.6036 ] [188]))) 28 {*arm_subsi3_insn} (nil))

(insn 423 162 515 13 arch/arm/vfp/vfpdouble.c:614 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [0])
                        (reg:SI 4 r4 [orig:135 significand ] [135]))
                    (reg:SI 4 r4 [0])))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 4 r4 [0])
                    (reg:SI 4 r4 [orig:135 significand ] [135])))
        ]) 10 {*addsi3_compare_op1} (nil))

(note 515 423 163 13 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 163 515 516 13 arch/arm/vfp/vfpdouble.c:611 (set (reg/v:SI 9 r9 [orig:138 shift ] [138])
        (plus:SI (reg:SI 9 r9 [195])
            (const_int 14 [0xe]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (minus:SI (const_int 1086 [0x43e])
            (reg:SI 9 r9 [orig:188 D.6036 ] [188]))
        (nil)))

(note 516 163 424 13 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 9 r9 [orig:138 shift ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 424 516 517 13 arch/arm/vfp/vfpdouble.c:614 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [orig:1+4 ] [1])
                (reg:SI 5 r5 [ significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(note 517 424 166 13 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 166 517 167 13 arch/arm/vfp/vfpdouble.c:614 (set (reg:SI 2 r2)
        (reg/v:SI 9 r9 [orig:138 shift ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn/u:TI 167 166 172 13 arch/arm/vfp/vfpdouble.c:614 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_UNUSED (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 172 167 426 13 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 2 r2)
        (minus:SI (const_int 65 [0x41])
            (reg/v:SI 9 r9 [orig:138 shift ] [138]))) 28 {*arm_subsi3_insn} (nil))

(insn:TI 426 172 518 13 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
        (nil)))

(note 518 426 349 13 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 349 518 519 13 arch/arm/vfp/vfpdouble.c:614 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 519 349 425 13 ( d (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:142 d ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 425 519 520 13 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:135 significand ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:135 significand ] [135])
        (nil)))

(note 520 425 173 13 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn/u:TI 173 520 176 13 arch/arm/vfp/vfpdouble.c:615 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 176 173 354 13 arch/arm/vfp/vfpdouble.c:617 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 354 176 521 13 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 2 r2 [orig:236 rem ] [236])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(note 521 354 355 13 ( rem (nil)) NOTE_INSN_VAR_LOCATION)

(insn 355 521 522 13 arch/arm/vfp/vfpdouble.c:615 (set (reg:SI 3 r3 [ rem+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (nil))

(note 522 355 177 13 ( rem (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:236 rem ] [236])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 177 522 178 13 arch/arm/vfp/vfpdouble.c:617 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 178 177 179 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 179 178 180 14 NOTE_INSN_DELETED)

(insn:TI 180 179 419 14 arch/arm/vfp/vfpdouble.c:619 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 6 r6 [orig:142 d ] [142])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 419 180 523 14 arch/arm/vfp/vfpdouble.c:620 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [orig:136 incr ] [136])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 523 419 420 14 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 420 523 524 14 arch/arm/vfp/vfpdouble.c:620 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [ incr+4 ])
            (const_int 2147483647 [0x7fffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 524 420 417 14 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 417 524 525 14 arch/arm/vfp/vfpdouble.c:618 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [orig:136 incr ] [136])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(note 525 417 418 14 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 418 525 526 14 arch/arm/vfp/vfpdouble.c:618 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [ incr+4 ])
            (const_int -2147483648 [0xffffffff80000000]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(note 526 418 483 14 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 483 526 484 14 (set (pc)
        (label_ref 214)) -1 (nil))
;; End of basic block 14 -> ( 18)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [100.0%] 

(barrier 484 483 527)

(note 527 484 191 15 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%] 
(code_label 191 527 192 15 324 "" [1 uses])

(note 192 191 193 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn:TI 193 192 194 15 arch/arm/vfp/vfpdouble.c:621 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 194 193 195 15 arch/arm/vfp/vfpdouble.c:621 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 15 -> ( 17 16)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [28.0%] 
;; Succ edge  16 [72.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  15 [72.0%]  (fallthru)
(note 195 194 196 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 196 195 197 16 NOTE_INSN_DELETED)

(note 197 196 199 16 NOTE_INSN_DELETED)

(note 199 197 202 16 NOTE_INSN_DELETED)

(note 202 199 203 16 NOTE_INSN_DELETED)

(note 203 202 200 16 NOTE_INSN_DELETED)

(insn:TI 200 203 528 16 arch/arm/vfp/vfpdouble.c:623 (parallel [
            (set (reg:SI 10 sl [207])
                (eq:SI (reg/v:SI 10 sl [orig:140 rmode ] [140])
                    (const_int 4194304 [0x400000])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(note 528 200 204 16 ( rmode (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 204 528 205 16 arch/arm/vfp/vfpdouble.c:623 (parallel [
            (set (reg:SI 10 sl [210])
                (xor:SI (ne:SI (reg:SI 8 r8 [orig:133 D.6039 ] [133])
                        (const_int 0 [0x0]))
                    (reg:SI 10 sl [207])))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn:TI 205 204 415 16 arch/arm/vfp/vfpdouble.c:623 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [210])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 415 205 529 16 arch/arm/vfp/vfpdouble.c:624 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [orig:136 incr ] [136])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 529 415 416 16 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 416 529 530 16 arch/arm/vfp/vfpdouble.c:624 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [ incr+4 ])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 530 416 206 16 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 206 530 531 16 arch/arm/vfp/vfpdouble.c:623 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 214)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

(note 531 206 211 17 ( rmode (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:140 rmode ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  15 [28.0%] 
;; Pred edge  16 [50.0%]  (fallthru)
(code_label 211 531 212 17 327 "" [1 uses])

(note 212 211 413 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:TI 413 212 532 17 arch/arm/vfp/vfpdouble.c:622 (set (reg:SI 0 r0 [orig:136 incr ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 532 413 414 17 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 414 532 533 17 arch/arm/vfp/vfpdouble.c:622 (set (reg:SI 1 r1 [ incr+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [100.0%]  (fallthru)

(note 533 414 214 18 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 17 16 14) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  16 [50.0%] 
;; Pred edge  14 [100.0%] 
(code_label 214 533 215 18 326 "" [2 uses])

(note 215 214 411 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 411 215 535 18 arch/arm/vfp/vfpdouble.c:627 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [213])
                        (reg:SI 2 r2 [orig:236 rem ] [236]))
                    (reg:SI 0 r0 [213])))
            (set (reg:SI 4 r4 [213])
                (plus:SI (reg:SI 0 r0 [213])
                    (reg:SI 2 r2 [orig:236 rem ] [236])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 0 r0 [213])
        (nil)))

(note 535 411 534 18 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(note 534 535 412 18 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 412 534 537 18 arch/arm/vfp/vfpdouble.c:627 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [orig:5+4 ] [5])
                (reg:SI 3 r3 [ rem+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [orig:5+4 ] [5])
            (nil))))

(note 537 412 536 18 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(note 536 537 217 18 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 217 536 219 18 arch/arm/vfp/vfpdouble.c:627 (set (reg:QI 1 r1 [211])
        (const_int 0 [0x0])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 219 217 220 18 arch/arm/vfp/vfpdouble.c:627 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ rem+4 ])
            (reg:SI 5 r5 [+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 220 219 341 18 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 21 19)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  21 [50.0%] 
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 341 220 222 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 222 341 342 19 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 232)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 19 -> ( 22 20)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [71.0%] 
;; Succ edge  20 [29.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [29.0%]  (fallthru)
(note 342 222 223 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:TI 223 342 224 20 arch/arm/vfp/vfpdouble.c:627 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:236 rem ] [236])
            (reg:SI 4 r4 [213]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 224 223 229 20 arch/arm/vfp/vfpdouble.c:627 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 232)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 21 22)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  21 [50.0%]  (fallthru)
;; Succ edge  22 [50.0%] 

;; Start of basic block ( 18 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	

;; Pred edge  18 [50.0%] 
;; Pred edge  20 [50.0%]  (fallthru)
(code_label 229 224 345 21 330 "" [1 uses])

(note 345 229 231 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:TI 231 345 232 21 arch/arm/vfp/vfpdouble.c:627 (set (reg:QI 1 r1 [211])
        (const_int 1 [0x1])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
;; End of basic block 21 -> ( 22)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 19 20 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  19 [71.0%] 
;; Pred edge  20 [50.0%] 
;; Pred edge  21 [100.0%]  (fallthru)
(code_label 232 231 346 22 329 "" [2 uses])

(note 346 232 233 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 233 346 236 22 NOTE_INSN_DELETED)

(note 236 233 237 22 NOTE_INSN_DELETED)

(note 237 236 238 22 NOTE_INSN_DELETED)

(note 238 237 234 22 NOTE_INSN_DELETED)

(insn:TI 234 238 239 22 arch/arm/vfp/vfpdouble.c:627 (parallel [
            (set (reg:SI 0 r0 [216])
                (ne:SI (reg/v:SI 6 r6 [orig:142 d ] [142])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn:TI 239 234 242 22 arch/arm/vfp/vfpdouble.c:627 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 0 r0 [216])
                        (reg:SI 1 r1 [211]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 1 r1 [211])
        (expr_list:REG_DEAD (reg:SI 0 r0 [216])
            (nil))))

(insn:TI 242 239 245 22 arch/arm/vfp/vfpdouble.c:628 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 6 r6 [orig:142 d ] [142])
            (plus:SI (reg/v:SI 6 r6 [orig:142 d ] [142])
                (const_int 1 [0x1])))) 2268 {neon_vornv2di+1} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn 245 242 366 22 arch/arm/vfp/vfpdouble.c:629 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 366 245 256 22 arch/arm/vfp/vfpdouble.c:629 discrim 2 (set (reg:SI 1 r1 [orig:143 iftmp.141 ] [143])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int -2147483648 [0xffffffff80000000])
            (const_int 2147483647 [0x7fffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn:TI 256 366 270 22 arch/arm/vfp/vfpdouble.c:629 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:142 d ] [142])
            (reg:SI 1 r1 [orig:143 iftmp.141 ] [143]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 270 256 368 22 arch/arm/vfp/vfpdouble.c:631 (cond_exec (gtu (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
            (ior:SI (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
                (const_int 1 [0x1])))) 2310 {neon_vornv2di+43} (nil))

(insn 368 270 257 22 arch/arm/vfp/vfpdouble.c:630 discrim 2 (cond_exec (gtu (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 6 r6 [orig:142 d ] [142])
            (reg:SI 1 r1 [orig:143 iftmp.141 ] [143]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:143 iftmp.141 ] [143])
        (nil)))

(jump_insn:TI 257 368 274 22 arch/arm/vfp/vfpdouble.c:629 discrim 3 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 281)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 23 24)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [50.0%]  (fallthru)
;; Succ edge  24 [50.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	 10 [sl]

;; Pred edge  22 [50.0%]  (fallthru)
(note 274 257 275 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 275 274 276 23 NOTE_INSN_DELETED)

(note 276 275 277 23 NOTE_INSN_DELETED)

(insn:TI 277 276 538 23 arch/arm/vfp/vfpdouble.c:632 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:236 rem ] [236])
                        (reg:SI 3 r3 [ rem+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 10 sl))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ rem+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:236 rem ] [236])
            (expr_list:REG_UNUSED (reg:SI 10 sl)
                (nil)))))

(note 538 277 280 23 ( rmode (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 280 538 539 23 arch/arm/vfp/vfpdouble.c:633 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
            (ior:SI (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
                (const_int 16 [0x10])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 23 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  24 [100.0%]  (fallthru)

(note 539 280 281 24 ( rmode (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:140 rmode ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  22 [50.0%] 
(code_label 281 539 282 24 336 "" [1 uses])

(note 282 281 283 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:TI 283 282 286 24 arch/arm/vfp/vfpdouble.c:635 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 286 283 485 24 arch/arm/vfp/vfpdouble.c:636 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 6 r6 [orig:142 d ] [142])
            (neg:SI (reg/v:SI 6 r6 [orig:142 d ] [142])))) 2324 {neon_vornv2di+57} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 485 286 486 24 (set (pc)
        (label_ref 324)) -1 (nil))
;; End of basic block 24 -> ( 32)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 [100.0%] 

(barrier 486 485 540)

(note 540 486 541 25 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 541 540 542 25 ( shift (nil)) NOTE_INSN_VAR_LOCATION)

(note 542 541 543 25 ( rem (nil)) NOTE_INSN_VAR_LOCATION)

(note 543 542 289 25 ( d (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 12) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 11 [fp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 11 [fp]

;; Pred edge  12 [50.0%] 
(code_label 289 543 290 25 323 "" [1 uses])

(note 290 289 293 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 293 290 295 25 NOTE_INSN_DELETED)

(note 295 293 296 25 NOTE_INSN_DELETED)

(note 296 295 407 25 NOTE_INSN_DELETED)

(insn:TI 407 296 408 25 arch/arm/vfp/vfpdouble.c:639 (set (reg:SI 2 r2 [223])
        (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
            (reg:SI 9 r9 [orig:188 D.6036 ] [188]))) 89 {*arm_iorsi3} (nil))

(insn 408 407 297 25 arch/arm/vfp/vfpdouble.c:639 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (ashiftrt:SI (reg:SI 9 r9 [orig:188 D.6036 ] [188])
                (const_int 31 [0x1f]))
            (reg:SI 5 r5 [ significand+4 ]))) 270 {*arith_shiftsi} (nil))

(insn:TI 297 408 298 25 arch/arm/vfp/vfpdouble.c:639 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [223])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 11 fp))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [223])
            (expr_list:REG_UNUSED (reg:SI 11 fp)
                (nil)))))

(jump_insn:TI 298 297 299 25 arch/arm/vfp/vfpdouble.c:639 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 25 -> ( 26 31)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  26 [61.0%]  (fallthru)
;; Succ edge  31 [39.0%] 

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 10 [sl] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  25 [61.0%]  (fallthru)
(note 299 298 301 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn:TI 301 299 300 26 arch/arm/vfp/vfpdouble.c:641 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 300 301 302 26 arch/arm/vfp/vfpdouble.c:640 (set (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 7 r7 [orig:141 exceptions ] [141])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(jump_insn:TI 302 300 303 26 arch/arm/vfp/vfpdouble.c:641 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 310)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 26 -> ( 27 29)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  27 [28.0%]  (fallthru)
;; Succ edge  29 [72.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  26 [28.0%]  (fallthru)
(note 303 302 304 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:TI 304 303 307 27 arch/arm/vfp/vfpdouble.c:641 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 307 304 544 27 arch/arm/vfp/vfpdouble.c:642 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 6 r6 [orig:142 d ] [142])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 544 307 305 27 ( d (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:142 d ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 305 544 487 27 arch/arm/vfp/vfpdouble.c:641 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 27 -> ( 31 28)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  31 [61.0%] 
;; Succ edge  28 [39.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}

;; Pred edge  27 [39.0%]  (fallthru)
(note 487 305 488 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(jump_insn 488 487 489 28 (set (pc)
        (label_ref 324)) -1 (nil))
;; End of basic block 28 -> ( 32)


;; Succ edge  32 [100.0%] 

(barrier 489 488 545)

(note 545 489 310 29 ( d (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 26) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  26 [72.0%] 
(code_label 310 545 311 29 338 "" [1 uses])

(note 311 310 312 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:TI 312 311 313 29 arch/arm/vfp/vfpdouble.c:643 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 313 312 314 29 arch/arm/vfp/vfpdouble.c:643 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 321)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5321 [0x14c9])
            (nil))))
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  30 [46.8%]  (fallthru)
;; Succ edge  31 [53.2%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  29 [46.8%]  (fallthru)
(note 314 313 315 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn:TI 315 314 318 30 arch/arm/vfp/vfpdouble.c:643 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 D.6039 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 318 315 546 30 arch/arm/vfp/vfpdouble.c:644 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 6 r6 [orig:142 d ] [142])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 546 318 316 30 ( d (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:142 d ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 316 546 547 30 arch/arm/vfp/vfpdouble.c:643 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 324)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 30 -> ( 31 32)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  31 [39.0%]  (fallthru)
;; Succ edge  32 [61.0%] 

(note 547 316 321 31 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:139 tm ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 9 27 29 25 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  9 [39.0%] 
;; Pred edge  27 [61.0%] 
;; Pred edge  29 [53.2%] 
;; Pred edge  25 [39.0%] 
;; Pred edge  30 [39.0%]  (fallthru)
(code_label 321 547 322 31 337 "" [4 uses])

(note 322 321 323 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:TI 323 322 548 31 arch/arm/vfp/vfpdouble.c:638 (set (reg/v:SI 6 r6 [orig:142 d ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 31 -> ( 32)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 [100.0%]  (fallthru)

(note 548 323 549 32 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 9 r9 [orig:138 shift ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 549 548 324 32 ( rem (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:236 rem ] [236])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 31 24 30 11 28) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%] 
;; Pred edge  30 [61.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  28 [100.0%] 
(code_label 324 549 325 32 319 "" [4 uses])

(note 325 324 326 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:TI 326 325 327 32 arch/arm/vfp/vfpdouble.c:650 (set (reg:SI 0 r0)
        (reg/v:SI 6 r6 [orig:142 d ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 327 326 328 32 arch/arm/vfp/vfpdouble.c:650 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 328 327 551 32 arch/arm/vfp/vfpdouble.c:650 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 551 328 550 32 ( rem (nil)) NOTE_INSN_VAR_LOCATION)

(note 550 551 333 32 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 333 550 339 32 arch/arm/vfp/vfpdouble.c:653 (set (reg/i:SI 0 r0)
        (reg/v:SI 7 r7 [orig:141 exceptions ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 339 333 450 32 arch/arm/vfp/vfpdouble.c:653 (use (reg/i:SI 0 r0)) -1 (nil))

(note 450 339 451 32 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 451 450 452 32 arch/arm/vfp/vfpdouble.c:653 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 32 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 452 451 399)

(note 399 452 401 NOTE_INSN_DELETED)

(note 401 399 0 NOTE_INSN_DELETED)


;; Function vfp_double_ftosiz (vfp_double_ftosiz)[0:170]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 0


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_ftosiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{123d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 31 NOTE_INSN_DELETED)

(note 31 1 32 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 32 31 33 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 33 32 34 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 34 33 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 34 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 12 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 12 6 35 2 arch/arm/vfp/vfpdouble.c:657 (set (reg:SI 3 r3)
        (const_int 12582912 [0xc00000])) 167 {*arm_movsi_insn} (nil))

(note 35 12 29 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 29 35 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn 30 29 13 2 arch/arm/vfp/vfpdouble.c:658 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 13 30 38 2 arch/arm/vfp/vfpdouble.c:657 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_ftosi") [flags 0x3] <function_decl 0x10ad5d80 vfp_double_ftosi>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 38 13 37 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 37 38 36 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(note 36 37 14 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 36 27)

(note 27 14 0 NOTE_INSN_DELETED)


;; Function vfp_double_ftoui (vfp_double_ftoui)[0:167]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: sd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: sd
    offset 0
      (reg:SI 0 r0 [ sd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 3:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 4:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 5:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])


Basic block 6:
IN:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])


Basic block 7:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])


Basic block 8:
IN:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])


Basic block 9:
IN:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])

OUT:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])


Basic block 10:
IN:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 11:
IN:
Stack adjustment: 56
Reg 3: tm+0
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:139 tm ] [139])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 12:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])


Basic block 13:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 14:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])


Basic block 15:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 0: incr+0
Reg 1: incr+4
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: incr
    offset 0
      (reg:SI 0 r0 [orig:136 incr ] [136])
    offset 4
      (reg:SI 1 r1 [ incr+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])


Basic block 16:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])


Basic block 17:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 0: incr+0
Reg 1: incr+4
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Variables:
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: incr
    offset 0
      (reg:SI 0 r0 [orig:136 incr ] [136])
    offset 4
      (reg:SI 1 r1 [ incr+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])


Basic block 18:
IN:
Stack adjustment: 56
Reg 0: incr+0
Reg 1: incr+4
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: incr
    offset 0
      (reg:SI 0 r0 [orig:136 incr ] [136])
    offset 4
      (reg:SI 1 r1 [ incr+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])

OUT:
Stack adjustment: 56
Reg 0: incr+0
Reg 1: incr+4
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: incr
    offset 0
      (reg:SI 0 r0 [orig:136 incr ] [136])
    offset 4
      (reg:SI 1 r1 [ incr+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])


Basic block 19:
IN:
Stack adjustment: 56
Reg 0: incr+0
Reg 1: incr+4
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: incr
    offset 0
      (reg:SI 0 r0 [orig:136 incr ] [136])
    offset 4
      (reg:SI 1 r1 [ incr+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])


Basic block 20:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 21:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 22:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 23:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 24:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 25:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])


Basic block 26:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 27:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 28:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 29:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 30:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 31:
IN:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 10: rmode+0
Variables:
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])


Basic block 32:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])


Basic block 33:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])

OUT:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])


Basic block 34:
IN:
Stack adjustment: 56
Reg 2: rem+0
Reg 3: rem+4
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: rem
    offset 0
      (reg:SI 2 r2 [orig:227 rem ] [227])
    offset 4
      (reg:SI 3 r3 [ rem+4 ])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])

OUT:
Stack adjustment: 56
Reg 4: significand+0
Reg 5: significand+4
Reg 6: exceptions+0
Reg 7: d+0
Reg 9: shift+0
Reg 10: rmode+0
Variables:
  name: rmode
    offset 0
      (reg/v:SI 10 sl [orig:140 rmode ] [140])
  name: shift
    offset 0
      (reg/v:SI 9 r9 [orig:138 shift ] [138])
  name: significand
    offset 0
      (reg:SI 4 r4 [orig:135 significand ] [135])
    offset 4
      (reg:SI 5 r5 [ significand+4 ])
  name: d
    offset 0
      (reg/v:SI 7 r7 [orig:142 d ] [142])
  name: exceptions
    offset 0
      (reg/v:SI 6 r6 [orig:141 exceptions ] [141])


35 basic blocks, 54 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

Successors:  7 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  5 [56.0%]  (fallthru) 7 [44.0%] 
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  4 [56.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 2 [r2]

Successors:  6 [50.0%]  (fallthru) 9 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7] 24 [cc]
;; live  kill	

Successors:  9 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  4 [44.0%]  3 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 9 [r9] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  9 [50.0%]  8 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 3 [r3]

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [50.0%]  5 [50.0%]  6 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 8 [r8] 13 [sp]
;; lr  def 	 6 [r6] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 8 [r8] 24 [cc]
;; live  kill	

Successors:  10 [50.0%]  (fallthru) 11 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  9 [50.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp]
;; live  kill	

Successors:  11 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 9 [50.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 9 [r9] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 9 [r9] 24 [cc]
;; live  kill	

Successors:  12 [50.0%]  (fallthru) 13 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

Successors:  34 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  11 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 10 [sl] 24 [cc]
;; live  kill	

Successors:  14 [50.0%]  (fallthru) 26 [50.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  13 [50.0%]  (fallthru)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

Successors:  15 [50.0%]  (fallthru) 16 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

Successors:  19 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  14 [50.0%] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  18 [28.0%]  17 [72.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  16 [72.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

Successors:  18 [50.0%]  (fallthru) 19 [50.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 800, maybe hot.
Predecessors:  16 [28.0%]  17 [50.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  19 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  18 [100.0%]  (fallthru) 17 [50.0%]  15 [100.0%] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

Successors:  22 [50.0%]  20 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  19 [50.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  23 [71.0%]  21 [29.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 363, maybe hot.
Predecessors:  20 [29.0%]  (fallthru)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  22 [50.0%]  (fallthru) 23 [50.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  21 [50.0%]  (fallthru) 19 [50.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

Successors:  24 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 1432, should be 1250

Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  20 [71.0%]  21 [50.0%] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  24 (fallthru) 25 [100.0%] 
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 1070, should be 1250

Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  23 (fallthru) 22 [100.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  32 [39.0%]  25 [61.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 2012, maybe hot.
Predecessors:  23 [100.0%]  24 [61.0%]  (fallthru)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	 10 [sl]

Successors:  34 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  13 [50.0%] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 11 [fp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 11 [fp]

Successors:  27 [61.0%]  (fallthru) 33 [39.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 1525, maybe hot.
Predecessors:  26 [61.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 10 [sl] 13 [sp]
;; lr  def 	 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

Successors:  28 [28.0%]  (fallthru) 30 [72.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 427, maybe hot.
Predecessors:  27 [28.0%]  (fallthru)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

Successors:  33 [61.0%]  29 [39.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 167, maybe hot.
Predecessors:  28 [39.0%]  (fallthru)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}

Successors:  34 [100.0%] 


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 1098, maybe hot.
Predecessors:  27 [72.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  31 [46.8%]  (fallthru) 33 [53.2%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 514, maybe hot.
Predecessors:  30 [46.8%]  (fallthru)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  32 [61.0%]  (fallthru) 33 [39.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 800, maybe hot.
Predecessors:  31 [61.0%]  (fallthru) 24 [39.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

Successors:  33 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 2821, maybe hot.
Predecessors:  32 [100.0%]  (fallthru) 31 [39.0%]  26 [39.0%]  30 [53.2%]  28 [61.0%] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

Successors:  34 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 34 , prev 33, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  33 [100.0%]  (fallthru) 12 [100.0%]  25 [100.0%]  29 [100.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 1 , prev 34, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  34 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_ftoui

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,18u} r1={12d,11u} r2={13d,13u} r3={21d,21u} r4={5d,14u} r5={4d,11u} r6={8d,10u} r7={7d,10u} r8={4d,9u} r9={5d,13u,3d} r10={6d,10u} r11={3d,4u} r12={5d,2u} r13={3d,46u} r14={6d,3u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={34d,40u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 828{590d,235u,3e} in 135{131 regular + 4 call} insns.
(note 1 0 478 NOTE_INSN_DELETED)

(note 478 1 479 2 ( sd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ sd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 479 478 480 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 480 479 481 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 481 480 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 9 [r9] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 481 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 6 14 2 NOTE_INSN_DELETED)

(note 14 12 15 2 NOTE_INSN_DELETED)

(note 15 14 17 2 NOTE_INSN_DELETED)

(note 17 15 21 2 NOTE_INSN_DELETED)

(note 21 17 25 2 NOTE_INSN_DELETED)

(note 25 21 26 2 NOTE_INSN_DELETED)

(note 26 25 29 2 NOTE_INSN_DELETED)

(note 29 26 30 2 NOTE_INSN_DELETED)

(note 30 29 33 2 NOTE_INSN_DELETED)

(note 33 30 34 2 NOTE_INSN_DELETED)

(note 34 33 36 2 NOTE_INSN_DELETED)

(note 36 34 37 2 NOTE_INSN_DELETED)

(note 37 36 38 2 NOTE_INSN_DELETED)

(note 38 37 424 2 NOTE_INSN_DELETED)

(insn/f:TI 424 38 425 2 arch/arm/vfp/vfpdouble.c:507 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 9 r9)
            (expr_list:REG_DEAD (reg:SI 6 r6)
                (expr_list:REG_DEAD (reg:SI 5 r5)
                    (expr_list:REG_DEAD (reg:SI 4 r4)
                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                    (set/f (reg/f:SI 13 sp)
                                        (plus:SI (reg/f:SI 13 sp)
                                            (const_int -36 [0xffffffffffffffdc])))
                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                        (reg:SI 4 r4))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 4 [0x4])) [0 S4 A32])
                                        (reg:SI 5 r5))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 8 [0x8])) [0 S4 A32])
                                        (reg:SI 6 r6))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 12 [0xc])) [0 S4 A32])
                                        (reg:SI 7 r7))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 16 [0x10])) [0 S4 A32])
                                        (reg:SI 8 r8))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 20 [0x14])) [0 S4 A32])
                                        (reg:SI 9 r9))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 24 [0x18])) [0 S4 A32])
                                        (reg:SI 10 sl))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 28 [0x1c])) [0 S4 A32])
                                        (reg:SI 11 fp))
                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                (const_int 32 [0x20])) [0 S4 A32])
                                        (reg:SI 14 lr))
                                ])
                            (nil))))))))

(insn/f:TI 425 424 426 2 arch/arm/vfp/vfpdouble.c:507 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -20 [0xffffffffffffffec]))) 4 {*arm_addsi3} (nil))

(note 426 425 2 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 2 426 9 2 arch/arm/vfp/vfpdouble.c:507 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn 9 2 482 2 arch/arm/vfp/vfpdouble.c:513 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 482 9 5 2 ( sd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 5 482 10 2 arch/arm/vfp/vfpdouble.c:507 (set (mem/c:SI (reg/f:SI 13 sp) [0 %sfp+-16 S4 A32])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 485 2 arch/arm/vfp/vfpdouble.c:513 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 485 10 484 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 484 485 483 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 483 484 28 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 28 483 16 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 12 ip [161])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 16 28 18 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 9 r9 [orig:134 D.6071 ] [134])
        (zero_extract:SI (reg:SI 1 r1 [ D.4518+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 18 16 20 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [orig:220+4 ] [220])
        (ashift:SI (reg:SI 1 r1 [ D.4518+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 20 18 19 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [219])
        (ashift:SI (reg:SI 0 r0 [orig:143 D.4518 ] [143])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 19 20 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [orig:220+4 ] [220])
        (ior:SI (lshiftrt:SI (reg:SI 0 r0 [orig:143 D.4518 ] [143])
                (const_int 20 [0x14]))
            (reg:SI 3 r3 [orig:220+4 ] [220]))) 270 {*arith_shiftsi} (nil))

(insn:TI 27 19 39 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 2 r2 [orig:160 D.6071 ] [160])
        (sign_extend:SI (reg:HI 9 r9 [orig:134 D.6071 ] [134]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 39 27 22 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 2 r2 [orig:160 D.6071 ] [160])
                    (reg:SI 12 ip [161]))
                (ne:SI (reg:SI 2 r2 [orig:160 D.6071 ] [160])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 22 39 486 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (lshiftrt:SI (reg:SI 14 lr [219])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [219])
        (nil)))

(note 486 22 23 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 23 486 487 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:220+4 ] [220])
                (const_int 30 [0x1e]))
            (reg:SI 4 r4 [orig:135 significand ] [135]))) 270 {*arith_shiftsi} (nil))

(note 487 23 24 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 24 487 488 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 5 r5 [ significand+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:220+4 ] [220])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(note 488 24 40 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 40 488 41 2 arch/arm/vfp/vfp.h:309 (set (pc)
        (if_then_else (eq (reg:CC_DNE 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 41 40 417 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn:TI 417 41 418 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 2 r2 [169])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 418 417 419 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 3 r3 [+4 ])
        (const_int 1073741824 [0x40000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 419 418 489 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 4 r4 [orig:135 significand ] [135])
        (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
            (reg:SI 2 r2 [169]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [169])
        (nil)))

(note 489 419 420 3 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 420 489 490 3 arch/arm/vfp/vfp.h:310 (set (reg:SI 5 r5 [ significand+4 ])
        (ior:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 3 r3 [+4 ]))) 89 {*arm_iorsi3} (nil))

(note 490 420 463 3 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 463 490 464 3 (set (pc)
        (label_ref 80)) -1 (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 464 463 46)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 46 464 47 4 343 "" [1 uses])

(note 47 46 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn:TI 52 47 53 4 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:160 D.6071 ] [160])
            (reg:SI 12 ip [161]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [161])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:160 D.6071 ] [160])
            (nil))))

(jump_insn:TI 53 52 54 4 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4400 [0x1130])
            (nil))))
;; End of basic block 4 -> ( 5 7)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  5 [56.0%]  (fallthru)
;; Succ edge  7 [44.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 2 [r2]

;; Pred edge  4 [56.0%]  (fallthru)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 55 54 56 5 NOTE_INSN_DELETED)

(note 56 55 57 5 NOTE_INSN_DELETED)

(insn:TI 57 56 60 5 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
                        (reg:SI 5 r5 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 2 r2))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 2 r2)
        (nil)))

(insn:TI 60 57 491 5 arch/arm/vfp/vfp.h:332 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 8 [0x8]))) 2345 {neon_vornv2di+78} (nil))

(note 491 60 58 5 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:139 tm ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 58 491 64 5 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 101)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 7 [r7] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 64 58 67 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 67 64 68 6 NOTE_INSN_DELETED)

(note 68 67 69 6 NOTE_INSN_DELETED)

(note 69 68 411 6 NOTE_INSN_DELETED)

(insn:TI 411 69 413 6 arch/arm/vfp/vfp.h:333 (set (reg:SI 7 r7 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 413 411 492 6 arch/arm/vfp/vfp.h:333 (set (reg:SI 3 r3 [+4 ])
        (and:SI (reg:SI 5 r5 [ significand+4 ])
            (reg:SI 7 r7 [+4 ]))) 67 {*arm_andsi3_insn} (nil))

(note 492 413 414 6 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 414 492 415 6 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 415 414 493 6 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(note 493 415 416 6 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:139 tm ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 416 493 465 6 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 465 416 466 6 (set (pc)
        (label_ref 101)) -1 (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [100.0%] 

(barrier 466 465 494)

(note 494 466 80 7 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 4 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 9 [r9] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  4 [44.0%] 
;; Pred edge  3 [100.0%] 
(code_label 80 494 81 7 344 "" [2 uses])

(note 81 80 82 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn:TI 82 81 85 7 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:134 D.6071 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 85 82 495 7 arch/arm/vfp/vfp.h:329 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 495 85 83 7 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:139 tm ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 83 495 89 7 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 101)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 3 [r3]

;; Pred edge  7 [50.0%]  (fallthru)
(note 89 83 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 90 89 91 8 NOTE_INSN_DELETED)

(note 91 90 92 8 NOTE_INSN_DELETED)

(insn:TI 92 91 496 8 arch/arm/vfp/vfp.h:338 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
                        (reg:SI 5 r5 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 3 r3))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_UNUSED (reg:SI 3 r3)
        (nil)))

(note 496 92 335 8 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 335 496 497 8 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

(note 497 335 101 9 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:139 tm ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 8 7 5 6) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 8 [r8] 13 [sp]
;; lr  def 	 6 [r6] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [50.0%] 
;; Pred edge  5 [50.0%] 
;; Pred edge  6 [100.0%] 
(code_label 101 497 102 9 346 "" [3 uses])

(note 102 101 103 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 103 102 115 9 NOTE_INSN_DELETED)

(note 115 103 104 9 NOTE_INSN_DELETED)

(insn:TI 104 115 337 9 arch/arm/vfp/vfpdouble.c:519 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                        (const_int 4 [0x4]))
                    (const_int 0 [0x0])))
            (set (reg:SI 6 r6 [179])
                (and:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                    (const_int 4 [0x4])))
        ]) 69 {*andsi3_compare0} (nil))

(insn:TI 337 104 498 9 arch/arm/vfp/vfpdouble.c:509 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 6 r6 [179])
            (const_int 128 [0x80]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(note 498 337 116 9 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 116 498 119 9 arch/arm/vfp/vfpdouble.c:522 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:139 tm ] [139])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:139 tm ] [139])
        (nil)))

(insn:TI 119 116 117 9 arch/arm/vfp/vfpdouble.c:523 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(jump_insn:TI 117 119 123 9 arch/arm/vfp/vfpdouble.c:522 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 129)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [50.0%]  (fallthru)
;; Succ edge  11 [50.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 9 [r9] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 8 [r8] 10 [sl] 11 [fp]
;; live  kill	

;; Pred edge  9 [50.0%]  (fallthru)
(note 123 117 124 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 124 123 407 10 NOTE_INSN_DELETED)

(insn:TI 407 124 499 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(note 499 407 406 10 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 406 499 409 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 409 406 408 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 1 r1 [ D.4518+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ D.4518+4 ])
            (nil))))

(insn 408 409 379 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl)
        (and:SI (reg:SI 0 r0 [orig:143 D.4518 ] [143])
            (reg:SI 2 r2))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:143 D.4518 ] [143])
            (nil))))

(insn:TI 379 408 126 10 arch/arm/vfp/vfp.h:304 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 %sfp+-8 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn:TI 126 379 128 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [221])
        (lshiftrt:SI (reg:SI 11 fp)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 128 126 500 10 arch/arm/vfp/vfp.h:304 (set (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
        (zero_extend:SI (reg:HI 8 r8 [221]))) 144 {*arm_zero_extendhisi2_v6} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

(note 500 128 129 11 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:139 tm ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 9 [r9] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [50.0%] 
(code_label 129 500 130 11 353 "" [1 uses])

(note 130 129 133 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 133 130 131 11 arch/arm/vfp/vfpdouble.c:525 (set (reg:SI 9 r9 [orig:187 D.6071 ] [187])
        (sign_extend:SI (reg:HI 9 r9 [orig:134 D.6071 ] [134]))) 155 {*arm_extendhisi2_v6} (nil))

(insn 131 133 501 11 arch/arm/vfp/vfpdouble.c:525 (set (reg:SI 3 r3 [186])
        (const_int 1054 [0x41e])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1054 [0x41e])
        (nil)))

(note 501 131 135 11 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 135 501 136 11 arch/arm/vfp/vfpdouble.c:525 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:187 D.6071 ] [187])
            (reg:SI 3 r3 [186]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [186])
        (expr_list:REG_EQUAL (compare:CC (reg:SI 9 r9 [orig:187 D.6071 ] [187])
                (const_int 1054 [0x41e]))
            (nil))))

(jump_insn:TI 136 135 137 11 arch/arm/vfp/vfpdouble.c:525 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 6 [r6] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 137 136 138 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 138 137 339 12 arch/arm/vfp/vfpdouble.c:526 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 339 138 341 12 arch/arm/vfp/vfpdouble.c:527 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn:TI 341 339 502 12 arch/arm/vfp/vfpdouble.c:527 (set (reg/v:SI 7 r7 [orig:142 d ] [142])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 0 [0x0])
            (const_int -1 [0xffffffffffffffff]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(note 502 341 467 12 ( d (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:142 d ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 467 502 468 12 (set (pc)
        (label_ref 299)) -1 (nil))
;; End of basic block 12 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  34 [100.0%] 

(barrier 468 467 503)

(note 503 468 151 13 ( d (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 10 [sl] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 10 [sl] 24 [cc]
;; live  kill	

;; Pred edge  11 [50.0%] 
(code_label 151 503 152 13 354 "" [1 uses])

(note 152 151 381 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn:TI 381 152 153 13 arch/arm/vfp/vfpdouble.c:510 (set (reg:SI 3 r3)
        (mem/c:SI (reg/f:SI 13 sp) [0 %sfp+-16 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 153 381 504 13 arch/arm/vfp/vfpdouble.c:510 (set (reg/v:SI 10 sl [orig:140 rmode ] [140])
        (and:SI (reg:SI 3 r3)
            (const_int 12582912 [0xc00000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(note 504 153 377 13 ( rmode (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:140 rmode ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 377 504 158 13 arch/arm/vfp/vfpdouble.c:528 (set (reg:SI 3 r3 [190])
        (const_int 1021 [0x3fd])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1021 [0x3fd])
        (nil)))

(insn:TI 158 377 159 13 arch/arm/vfp/vfpdouble.c:528 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [orig:187 D.6071 ] [187])
            (reg:SI 3 r3 [190]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [190])
        (expr_list:REG_EQUAL (compare:CC (reg:SI 9 r9 [orig:187 D.6071 ] [187])
                (const_int 1021 [0x3fd]))
            (nil))))

(jump_insn:TI 159 158 160 13 arch/arm/vfp/vfpdouble.c:528 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 263)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 26)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  26 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 9 [r9] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  13 [50.0%]  (fallthru)
(note 160 159 164 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 164 160 170 14 NOTE_INSN_DELETED)

(note 170 164 326 14 NOTE_INSN_DELETED)

(note 326 170 327 14 NOTE_INSN_DELETED)

(note 327 326 162 14 NOTE_INSN_DELETED)

(insn:TI 162 327 400 14 arch/arm/vfp/vfpdouble.c:529 (set (reg:SI 9 r9 [194])
        (minus:SI (const_int 1072 [0x430])
            (reg:SI 9 r9 [orig:187 D.6071 ] [187]))) 28 {*arm_subsi3_insn} (nil))

(insn 400 162 505 14 arch/arm/vfp/vfpdouble.c:535 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [0])
                        (reg:SI 4 r4 [orig:135 significand ] [135]))
                    (reg:SI 4 r4 [0])))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 4 r4 [0])
                    (reg:SI 4 r4 [orig:135 significand ] [135])))
        ]) 10 {*addsi3_compare_op1} (nil))

(note 505 400 163 14 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 163 505 506 14 arch/arm/vfp/vfpdouble.c:529 (set (reg/v:SI 9 r9 [orig:138 shift ] [138])
        (plus:SI (reg:SI 9 r9 [194])
            (const_int 14 [0xe]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (minus:SI (const_int 1086 [0x43e])
            (reg:SI 9 r9 [orig:187 D.6071 ] [187]))
        (nil)))

(note 506 163 401 14 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 9 r9 [orig:138 shift ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 401 506 507 14 arch/arm/vfp/vfpdouble.c:535 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [orig:1+4 ] [1])
                (reg:SI 5 r5 [ significand+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(note 507 401 166 14 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 166 507 167 14 arch/arm/vfp/vfpdouble.c:535 (set (reg:SI 2 r2)
        (reg/v:SI 9 r9 [orig:138 shift ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn/u:TI 167 166 172 14 arch/arm/vfp/vfpdouble.c:535 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_UNUSED (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 172 167 403 14 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 2 r2)
        (minus:SI (const_int 65 [0x41])
            (reg/v:SI 9 r9 [orig:138 shift ] [138]))) 28 {*arm_subsi3_insn} (nil))

(insn:TI 403 172 508 14 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 1 r1 [+4 ])
        (reg:SI 5 r5 [ significand+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ significand+4 ])
        (nil)))

(note 508 403 324 14 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 324 508 509 14 arch/arm/vfp/vfpdouble.c:535 (set (reg/v:SI 7 r7 [orig:142 d ] [142])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 509 324 402 14 ( d (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:142 d ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 402 509 510 14 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 0 r0)
        (reg:SI 4 r4 [orig:135 significand ] [135])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:135 significand ] [135])
        (nil)))

(note 510 402 173 14 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(call_insn/u:TI 173 510 176 14 arch/arm/vfp/vfpdouble.c:536 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsl") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 176 173 329 14 arch/arm/vfp/vfpdouble.c:538 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 329 176 511 14 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 2 r2 [orig:227 rem ] [227])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(note 511 329 330 14 ( rem (nil)) NOTE_INSN_VAR_LOCATION)

(insn 330 511 512 14 arch/arm/vfp/vfpdouble.c:536 (set (reg:SI 3 r3 [ rem+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (nil))

(note 512 330 177 14 ( rem (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:227 rem ] [227])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 177 512 178 14 arch/arm/vfp/vfpdouble.c:538 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [50.0%]  (fallthru)
;; Succ edge  16 [50.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 178 177 179 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 179 178 180 15 NOTE_INSN_DELETED)

(insn:TI 180 179 396 15 arch/arm/vfp/vfpdouble.c:540 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 7 r7 [orig:142 d ] [142])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn:TI 396 180 513 15 arch/arm/vfp/vfpdouble.c:541 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [orig:136 incr ] [136])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 513 396 397 15 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 397 513 514 15 arch/arm/vfp/vfpdouble.c:541 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [ incr+4 ])
            (const_int 2147483647 [0x7fffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 514 397 394 15 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 394 514 515 15 arch/arm/vfp/vfpdouble.c:539 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [orig:136 incr ] [136])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(note 515 394 395 15 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 395 515 516 15 arch/arm/vfp/vfpdouble.c:539 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [ incr+4 ])
            (const_int -2147483648 [0xffffffff80000000]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(note 516 395 469 15 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 469 516 470 15 (set (pc)
        (label_ref 214)) -1 (nil))
;; End of basic block 15 -> ( 19)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [100.0%] 

(barrier 470 469 517)

(note 517 470 191 16 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [50.0%] 
(code_label 191 517 192 16 358 "" [1 uses])

(note 192 191 193 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn:TI 193 192 194 16 arch/arm/vfp/vfpdouble.c:542 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 12582912 [0xc00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 194 193 195 16 arch/arm/vfp/vfpdouble.c:542 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 16 -> ( 18 17)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [28.0%] 
;; Succ edge  17 [72.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 10 [sl] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 10 [sl] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  16 [72.0%]  (fallthru)
(note 195 194 196 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 196 195 197 17 NOTE_INSN_DELETED)

(note 197 196 199 17 NOTE_INSN_DELETED)

(note 199 197 202 17 NOTE_INSN_DELETED)

(note 202 199 203 17 NOTE_INSN_DELETED)

(note 203 202 200 17 NOTE_INSN_DELETED)

(insn:TI 200 203 518 17 arch/arm/vfp/vfpdouble.c:544 (parallel [
            (set (reg:SI 10 sl [206])
                (eq:SI (reg/v:SI 10 sl [orig:140 rmode ] [140])
                    (const_int 4194304 [0x400000])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(note 518 200 204 17 ( rmode (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 204 518 205 17 arch/arm/vfp/vfpdouble.c:544 (parallel [
            (set (reg:SI 10 sl [209])
                (xor:SI (ne:SI (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
                        (const_int 0 [0x0]))
                    (reg:SI 10 sl [206])))
            (clobber (reg:CC 24 cc))
        ]) 280 {*cond_arith} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn:TI 205 204 392 17 arch/arm/vfp/vfpdouble.c:544 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [209])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 392 205 519 17 arch/arm/vfp/vfpdouble.c:545 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 0 r0 [orig:136 incr ] [136])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 519 392 393 17 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn 393 519 520 17 arch/arm/vfp/vfpdouble.c:545 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 1 r1 [ incr+4 ])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(note 520 393 206 17 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 206 520 521 17 arch/arm/vfp/vfpdouble.c:544 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 214)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  18 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

(note 521 206 211 18 ( rmode (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:140 rmode ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  16 [28.0%] 
;; Pred edge  17 [50.0%]  (fallthru)
(code_label 211 521 212 18 361 "" [1 uses])

(note 212 211 390 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn:TI 390 212 522 18 arch/arm/vfp/vfpdouble.c:543 (set (reg:SI 0 r0 [orig:136 incr ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 522 390 391 18 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 391 522 523 18 arch/arm/vfp/vfpdouble.c:543 (set (reg:SI 1 r1 [ incr+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  19 [100.0%]  (fallthru)

(note 523 391 214 19 ( incr (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:136 incr ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 18 17 15) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  17 [50.0%] 
;; Pred edge  15 [100.0%] 
(code_label 214 523 215 19 360 "" [2 uses])

(note 215 214 388 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn:TI 388 215 525 19 arch/arm/vfp/vfpdouble.c:548 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [210])
                        (reg:SI 2 r2 [orig:227 rem ] [227]))
                    (reg:SI 0 r0 [210])))
            (set (reg:SI 4 r4 [210])
                (plus:SI (reg:SI 0 r0 [210])
                    (reg:SI 2 r2 [orig:227 rem ] [227])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 0 r0 [210])
        (nil)))

(note 525 388 524 19 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(note 524 525 389 19 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 389 524 527 19 arch/arm/vfp/vfpdouble.c:548 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [orig:5+4 ] [5])
                (reg:SI 3 r3 [ rem+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [orig:5+4 ] [5])
            (nil))))

(note 527 389 526 19 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(note 526 527 217 19 ( incr (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 217 526 218 19 arch/arm/vfp/vfpdouble.c:548 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ rem+4 ])
            (reg:SI 5 r5 [+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 218 217 316 19 arch/arm/vfp/vfpdouble.c:548 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 323)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 19 -> ( 22 20)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  22 [50.0%] 
;; Succ edge  20 [50.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  19 [50.0%]  (fallthru)
(note 316 218 220 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 220 316 317 20 arch/arm/vfp/vfpdouble.c:548 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  23 [71.0%] 
;; Succ edge  21 [29.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [29.0%]  (fallthru)
(note 317 220 221 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:TI 221 317 222 21 arch/arm/vfp/vfpdouble.c:548 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:227 rem ] [227])
            (reg:SI 4 r4 [210]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 222 221 323 21 arch/arm/vfp/vfpdouble.c:548 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 240)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21 19) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  21 [50.0%]  (fallthru)
;; Pred edge  19 [50.0%] 
(code_label 323 222 228 22 370 "" [1 uses])

(note 228 323 229 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:TI 229 228 232 22 arch/arm/vfp/vfpdouble.c:549 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:142 d ] [142])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 232 229 237 22 arch/arm/vfp/vfpdouble.c:550 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:142 d ] [142])
            (plus:SI (reg/v:SI 7 r7 [orig:142 d ] [142])
                (const_int 1 [0x1])))) 2268 {neon_vornv2di+1} (nil))

(insn 237 232 471 22 arch/arm/vfp/vfpdouble.c:552 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
            (ior:SI (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
                (const_int 1 [0x1])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 471 237 472 22 (set (pc)
        (label_ref 244)) -1 (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 472 471 240)

;; Start of basic block ( 20 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [71.0%] 
;; Pred edge  21 [50.0%] 
(code_label 240 472 241 23 362 "" [2 uses])

(note 241 240 242 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:TI 242 241 243 23 arch/arm/vfp/vfpdouble.c:555 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:142 d ] [142])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 243 242 244 23 arch/arm/vfp/vfpdouble.c:555 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 23 -> ( 24 25)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 (fallthru)
;; Succ edge  25 [100.0%] 

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  23 (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 244 243 245 24 365 "" [1 uses])

(note 245 244 246 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn:TI 246 245 247 24 arch/arm/vfp/vfpdouble.c:555 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 247 246 253 24 arch/arm/vfp/vfpdouble.c:555 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 437)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 24 -> ( 32 25)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  32 [39.0%] 
;; Succ edge  25 [61.0%]  (fallthru)

;; Start of basic block ( 23 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 10 [sl] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	 10 [sl]

;; Pred edge  23 [100.0%] 
;; Pred edge  24 [61.0%]  (fallthru)
(code_label 253 247 254 25 366 "" [1 uses])

(note 254 253 255 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 255 254 256 25 NOTE_INSN_DELETED)

(note 256 255 257 25 NOTE_INSN_DELETED)

(insn:TI 257 256 528 25 arch/arm/vfp/vfpdouble.c:558 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:227 rem ] [227])
                        (reg:SI 3 r3 [ rem+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 10 sl))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ rem+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:227 rem ] [227])
            (expr_list:REG_UNUSED (reg:SI 10 sl)
                (nil)))))

(note 528 257 260 25 ( rmode (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 260 528 473 25 arch/arm/vfp/vfpdouble.c:559 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
            (ior:SI (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
                (const_int 16 [0x10])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(jump_insn 473 260 474 25 (set (pc)
        (label_ref 299)) -1 (nil))
;; End of basic block 25 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 11 [fp] 13 [sp]


;; Succ edge  34 [100.0%] 

(barrier 474 473 529)

(note 529 474 530 26 ( rmode (expr_list:REG_DEP_TRUE (reg/v:SI 10 sl [orig:140 rmode ] [140])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 530 529 531 26 ( shift (nil)) NOTE_INSN_VAR_LOCATION)

(note 531 530 532 26 ( rem (nil)) NOTE_INSN_VAR_LOCATION)

(note 532 531 533 26 ( significand (expr_list:REG_DEP_TRUE (reg:DI 4 r4 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 533 532 263 26 ( d (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 13) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 9 [r9] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 11 [fp] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 11 [fp]

;; Pred edge  13 [50.0%] 
(code_label 263 533 264 26 357 "" [1 uses])

(note 264 263 267 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 267 264 269 26 NOTE_INSN_DELETED)

(note 269 267 270 26 NOTE_INSN_DELETED)

(note 270 269 384 26 NOTE_INSN_DELETED)

(insn:TI 384 270 385 26 arch/arm/vfp/vfpdouble.c:562 (set (reg:SI 2 r2 [214])
        (ior:SI (reg:SI 4 r4 [orig:135 significand ] [135])
            (reg:SI 9 r9 [orig:187 D.6071 ] [187]))) 89 {*arm_iorsi3} (nil))

(insn 385 384 271 26 arch/arm/vfp/vfpdouble.c:562 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (ashiftrt:SI (reg:SI 9 r9 [orig:187 D.6071 ] [187])
                (const_int 31 [0x1f]))
            (reg:SI 5 r5 [ significand+4 ]))) 270 {*arith_shiftsi} (nil))

(insn:TI 271 385 272 26 arch/arm/vfp/vfpdouble.c:562 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [214])
                        (reg:SI 3 r3 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 11 fp))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [214])
            (expr_list:REG_UNUSED (reg:SI 11 fp)
                (nil)))))

(jump_insn:TI 272 271 273 26 arch/arm/vfp/vfpdouble.c:562 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 26 -> ( 27 33)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  27 [61.0%]  (fallthru)
;; Succ edge  33 [39.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 10 [sl] 13 [sp]
;; lr  def 	 6 [r6] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  26 [61.0%]  (fallthru)
(note 273 272 275 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:TI 275 273 274 27 arch/arm/vfp/vfpdouble.c:564 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 4194304 [0x400000]))) 219 {*arm_cmpsi_insn} (nil))

(insn 274 275 276 27 arch/arm/vfp/vfpdouble.c:563 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
            (const_int 16 [0x10]))) 89 {*arm_iorsi3} (nil))

(jump_insn:TI 276 274 277 27 arch/arm/vfp/vfpdouble.c:564 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 284)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 27 -> ( 28 30)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  28 [28.0%]  (fallthru)
;; Succ edge  30 [72.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  27 [28.0%]  (fallthru)
(note 277 276 278 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:TI 278 277 281 28 arch/arm/vfp/vfpdouble.c:564 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 281 278 534 28 arch/arm/vfp/vfpdouble.c:565 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:142 d ] [142])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 534 281 279 28 ( d (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:142 d ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 279 534 475 28 arch/arm/vfp/vfpdouble.c:564 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 28 -> ( 33 29)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  33 [61.0%] 
;; Succ edge  29 [39.0%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}

;; Pred edge  28 [39.0%]  (fallthru)
(note 475 279 476 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(jump_insn 476 475 477 29 (set (pc)
        (label_ref 299)) -1 (nil))
;; End of basic block 29 -> ( 34)


;; Succ edge  34 [100.0%] 

(barrier 477 476 535)

(note 535 477 284 30 ( d (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 27) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  27 [72.0%] 
(code_label 284 535 285 30 368 "" [1 uses])

(note 285 284 286 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn:TI 286 285 287 30 arch/arm/vfp/vfpdouble.c:566 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 10 sl [orig:140 rmode ] [140])
            (const_int 8388608 [0x800000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 287 286 288 30 arch/arm/vfp/vfpdouble.c:566 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5323 [0x14cb])
            (nil))))
;; End of basic block 30 -> ( 31 33)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  31 [46.8%]  (fallthru)
;; Succ edge  33 [53.2%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  30 [46.8%]  (fallthru)
(note 288 287 289 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:TI 289 288 290 31 arch/arm/vfp/vfpdouble.c:566 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:133 vdm$sign ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 290 289 536 31 arch/arm/vfp/vfpdouble.c:566 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 296)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 31 -> ( 32 33)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  32 [61.0%]  (fallthru)
;; Succ edge  33 [39.0%] 

(note 536 290 537 32 ( shift (expr_list:REG_DEP_TRUE (reg/v:SI 9 r9 [orig:138 shift ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 537 536 538 32 ( rem (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:227 rem ] [227])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 538 537 437 32 ( d (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:142 d ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 31 24) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  31 [61.0%]  (fallthru)
;; Pred edge  24 [39.0%] 
(code_label 437 538 291 32 371 "" [1 uses])

(note 291 437 292 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:TI 292 291 296 32 arch/arm/vfp/vfpdouble.c:568 (set (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
        (ior:SI (reg/v:SI 6 r6 [orig:141 exceptions ] [141])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 32 -> ( 33)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 32 31 26 30 28) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 7 [r7]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7]
;; live  kill	

;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  31 [39.0%] 
;; Pred edge  26 [39.0%] 
;; Pred edge  30 [53.2%] 
;; Pred edge  28 [61.0%] 
(code_label 296 292 297 33 367 "" [4 uses])

(note 297 296 298 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:TI 298 297 299 33 arch/arm/vfp/vfpdouble.c:561 (set (reg/v:SI 7 r7 [orig:142 d ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 33 -> ( 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 33 12 25 29) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
;; Pred edge  25 [100.0%] 
;; Pred edge  29 [100.0%] 
(code_label 299 298 300 34 356 "" [3 uses])

(note 300 299 301 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:TI 301 300 302 34 arch/arm/vfp/vfpdouble.c:575 (set (reg:SI 0 r0)
        (reg/v:SI 7 r7 [orig:142 d ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 302 301 303 34 arch/arm/vfp/vfpdouble.c:575 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 %sfp+-12 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 303 302 539 34 arch/arm/vfp/vfpdouble.c:575 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 539 303 308 34 ( rem (nil)) NOTE_INSN_VAR_LOCATION)

(insn 308 539 314 34 arch/arm/vfp/vfpdouble.c:578 (set (reg/i:SI 0 r0)
        (reg/v:SI 6 r6 [orig:141 exceptions ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 314 308 427 34 arch/arm/vfp/vfpdouble.c:578 (use (reg/i:SI 0 r0)) -1 (nil))

(note 427 314 428 34 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 428 427 429 34 arch/arm/vfp/vfpdouble.c:578 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 34 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 429 428 376)

(note 376 429 378 NOTE_INSN_DELETED)

(note 378 376 0 NOTE_INSN_DELETED)


;; Function vfp_double_ftouiz (vfp_double_ftouiz)[0:168]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: sd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: sd
    offset 0
      (reg:SI 0 r0 [ sd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 0


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

Successors:  EXIT [100.0%]  (ab,sibcall)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_ftouiz

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={3d,1u} r12={1d} r13={1d,3u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 133{123d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 31 NOTE_INSN_DELETED)

(note 31 1 32 2 ( sd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ sd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 32 31 33 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 33 32 34 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 34 33 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 34 28 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 28 7 6 2 NOTE_INSN_PROLOGUE_END)

(note 6 28 12 2 NOTE_INSN_FUNCTION_BEG)

(insn:TI 12 6 35 2 arch/arm/vfp/vfpdouble.c:582 (set (reg:SI 3 r3)
        (const_int 12582912 [0xc00000])) 167 {*arm_movsi_insn} (nil))

(note 35 12 29 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 29 35 30 2 NOTE_INSN_EPILOGUE_BEG)

(insn 30 29 13 2 arch/arm/vfp/vfpdouble.c:583 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) 322 {sibcall_epilogue} (nil))

(call_insn/j:TI 13 30 38 2 arch/arm/vfp/vfpdouble.c:582 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_ftoui") [flags 0x3] <function_decl 0x10ad5b80 vfp_double_ftoui>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 38 13 37 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 37 38 36 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(note 36 37 14 2 ( sd (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 36 27)

(note 27 14 0 NOTE_INSN_DELETED)


;; Function vfp_double_fsito (vfp_double_fsito)[0:166]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 40
Reg 4: dd+0
Reg 5: fpscr+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:138 dd ] [138])
  name: fpscr
    offset 0
      (reg/v:SI 5 r5 [orig:141 fpscr ] [141])


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fsito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,8u} r1={4d,1u} r2={5d,3u} r3={6d,6u} r4={2d,3u} r5={2d,3u} r12={5d,3u} r13={3d,13u} r14={4d,4u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 307{260d,47u,0e} in 27{25 regular + 2 call} insns.
(note 1 0 71 NOTE_INSN_DELETED)

(note 71 1 72 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 72 71 73 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 73 72 74 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 74 73 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 74 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 13 2 NOTE_INSN_FUNCTION_BEG)

(note 13 6 14 2 NOTE_INSN_DELETED)

(note 14 13 28 2 NOTE_INSN_DELETED)

(note 28 14 64 2 NOTE_INSN_DELETED)

(insn/f:TI 64 28 2 2 arch/arm/vfp/vfpdouble.c:495 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -12 [0xfffffffffffffff4])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(insn:TI 2 64 65 2 arch/arm/vfp/vfpdouble.c:495 (set (reg/v:SI 4 r4 [orig:138 dd ] [138])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn/f:TI 65 2 66 2 arch/arm/vfp/vfpdouble.c:495 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -28 [0xffffffffffffffe4]))) 4 {*arm_addsi3} (nil))

(note 66 65 9 2 NOTE_INSN_PROLOGUE_END)

(insn 9 66 75 2 arch/arm/vfp/vfpdouble.c:497 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 75 9 5 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:138 dd ] [138])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 5 75 10 2 arch/arm/vfp/vfpdouble.c:495 (set (reg/v:SI 5 r5 [orig:141 fpscr ] [141])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 78 2 arch/arm/vfp/vfpdouble.c:497 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 78 10 77 2 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:141 fpscr ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 77 78 76 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 76 77 52 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 52 76 58 2 arch/arm/vfp/vfpdouble.c:501 discrim 3 (set (reg:SI 14 lr [orig:151+4 ] [151])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 58 52 32 2 arch/arm/vfp/vfpdouble.c:500 (set (reg:SI 2 r2 [145])
        (const_int 1085 [0x43d])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1085 [0x43d])
        (nil)))

(insn:TI 32 58 19 2 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 19 32 33 2 arch/arm/vfp/vfpdouble.c:500 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 2 r2 [145])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 2 r2 [145])
        (expr_list:REG_EQUAL (const_int 1085 [0x43d])
            (nil))))

(insn:TI 33 19 54 2 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:141 fpscr ] [141])) 167 {*arm_movsi_insn} (nil))

(insn 54 33 60 2 arch/arm/vfp/vfpdouble.c:501 discrim 3 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vdm.significand+4 S4 A32])
        (reg:SI 14 lr [orig:151+4 ] [151])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr [orig:151+4 ] [151])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:TI 60 54 79 2 arch/arm/vfp/vfpdouble.c:499 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:133 m ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(note 79 60 11 2 ( m (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [orig:133 m ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 11 79 81 2 arch/arm/vfp/vfpdouble.c:497 (set (reg/v:SI 12 ip [orig:133 m ] [133])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(note 81 11 80 2 ( m (expr_list:REG_DEP_TRUE (reg/v:SI 12 ip [orig:133 m ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 80 81 61 2 ( m (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 61 80 62 2 arch/arm/vfp/vfpdouble.c:499 (cond_exec (lt:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:135 D.4493 ] [135])
            (const_int 32768 [0x8000]))) 2345 {neon_vornv2di+78} (nil))

(insn 62 61 20 2 arch/arm/vfp/vfpdouble.c:499 (cond_exec (ge (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:135 D.4493 ] [135])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn:TI 20 62 16 2 arch/arm/vfp/vfpdouble.c:501 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:135 D.4493 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 16 20 23 2 arch/arm/vfp/vfpdouble.c:499 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 3 r3 [orig:135 D.4493 ] [135])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [orig:135 D.4493 ] [135])
        (nil)))

(insn:TI 23 16 53 2 arch/arm/vfp/vfpdouble.c:501 discrim 1 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 12 ip [orig:133 m ] [133])
            (neg:SI (reg:SI 0 r0 [orig:133 m ] [133])))) 2324 {neon_vornv2di+57} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:133 m ] [133])
            (nil))))

(insn 53 23 57 2 arch/arm/vfp/vfpdouble.c:501 discrim 3 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S4 A64])
        (reg/v:SI 12 ip [orig:133 m ] [133])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:133 m ] [133])
        (nil)))

(insn:TI 57 53 82 2 arch/arm/vfp/vfpdouble.c:503 (set (reg/f:SI 12 ip [148])
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>)
        (nil)))

(note 82 57 31 2 ( m (nil)) NOTE_INSN_VAR_LOCATION)

(insn 31 82 34 2 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:138 dd ] [138])) 167 {*arm_movsi_insn} (nil))

(insn:TI 34 31 30 2 arch/arm/vfp/vfpdouble.c:503 (set (reg:SI 3 r3)
        (reg:SI 14 lr [orig:151+4 ] [151])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 30 34 35 2 arch/arm/vfp/vfpdouble.c:503 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [148])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [148])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x10ea85e0>)
            (nil))))

(call_insn 35 30 47 2 arch/arm/vfp/vfpdouble.c:503 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 47 35 67 2 arch/arm/vfp/vfpdouble.c:504 (use (reg/i:SI 0 r0)) -1 (nil))

(note 67 47 68 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 68 67 69 2 arch/arm/vfp/vfpdouble.c:504 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 69 68 56)

(note 56 69 59 NOTE_INSN_DELETED)

(note 59 56 0 NOTE_INSN_DELETED)


;; Function vfp_double_fuito (vfp_double_fuito)[0:165]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 40
Reg 4: dd+0
Reg 5: fpscr+0
Variables:
  name: dd
    offset 0
      (reg/v:SI 4 r4 [orig:136 dd ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 5 r5 [orig:139 fpscr ] [139])


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr]
;; live  kill	 14 [lr]

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fuito

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={5d,6u} r1={4d,1u} r2={4d,2u} r3={4d,2u} r4={2d,3u} r5={2d,3u} r12={3d,3u} r13={3d,13u} r14={5d,4u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 291{254d,37u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 59 NOTE_INSN_DELETED)

(note 59 1 60 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 60 59 61 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 61 60 62 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 62 61 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 62 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 6 20 2 NOTE_INSN_DELETED)

(note 20 11 52 2 NOTE_INSN_DELETED)

(insn/f:TI 52 20 2 2 arch/arm/vfp/vfpdouble.c:483 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -12 [0xfffffffffffffff4])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(insn:TI 2 52 53 2 arch/arm/vfp/vfpdouble.c:483 (set (reg/v:SI 4 r4 [orig:136 dd ] [136])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn/f:TI 53 2 54 2 arch/arm/vfp/vfpdouble.c:483 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -28 [0xffffffffffffffe4]))) 4 {*arm_addsi3} (nil))

(note 54 53 9 2 NOTE_INSN_PROLOGUE_END)

(insn 9 54 63 2 arch/arm/vfp/vfpdouble.c:485 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 63 9 5 2 ( dd (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:136 dd ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 5 63 10 2 arch/arm/vfp/vfpdouble.c:483 (set (reg/v:SI 5 r5 [orig:139 fpscr ] [139])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 66 2 arch/arm/vfp/vfpdouble.c:485 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_float") [flags 0x41] <function_decl 0x10a9d100 vfp_get_float>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 66 10 65 2 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:139 fpscr ] [139])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 65 66 64 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 64 65 49 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 49 64 12 2 arch/arm/vfp/vfpdouble.c:491 (set (reg/f:SI 14 lr [146])
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x10ea8640>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x10ea8640>)
        (nil)))

(insn 12 49 25 2 arch/arm/vfp/vfpdouble.c:487 (set (reg:SI 12 ip [141])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn:TI 25 12 26 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:139 fpscr ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 24 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 3 r3)
        (reg:SI 12 ip [141])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 24 26 14 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 14 24 22 2 arch/arm/vfp/vfpdouble.c:487 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 10 [0xa])) [0 vdm.sign+0 S2 A16])
        (reg:HI 12 ip [141])) 176 {*movhi_insn_arch4} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn:TI 22 14 15 2 arch/arm/vfp/vfpdouble.c:491 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 14 lr [146])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 14 lr [146])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x10ea8640>)
            (nil))))

(insn 15 22 46 2 arch/arm/vfp/vfpdouble.c:488 (set (reg:SI 14 lr [143])
        (const_int 1085 [0x43d])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1085 [0x43d])
        (nil)))

(insn:TI 46 15 17 2 arch/arm/vfp/vfpdouble.c:489 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vdm.significand+4 S4 A32])
        (reg:SI 12 ip [141])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [141])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn:TI 17 46 45 2 arch/arm/vfp/vfpdouble.c:488 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 14 lr [143])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 14 lr [143])
        (expr_list:REG_EQUAL (const_int 1085 [0x43d])
            (nil))))

(insn:TI 45 17 23 2 arch/arm/vfp/vfpdouble.c:489 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vdm.significand+0 S4 A64])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 23 45 27 2 arch/arm/vfp/vfpdouble.c:491 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:136 dd ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 27 23 39 2 arch/arm/vfp/vfpdouble.c:491 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 39 27 55 2 arch/arm/vfp/vfpdouble.c:492 (use (reg/i:SI 0 r0)) -1 (nil))

(note 55 39 56 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 56 55 57 2 arch/arm/vfp/vfpdouble.c:492 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 57 56 48)

(note 48 57 50 NOTE_INSN_DELETED)

(note 50 48 0 NOTE_INSN_DELETED)


;; Function vfp_double_fcvts (vfp_double_fcvts)[0:164]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: sd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: sd
    offset 0
      (reg:SI 0 r0 [ sd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 6: fpscr+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 3:
IN:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 6: fpscr+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 4:
IN:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 5:
IN:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 6:
IN:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 6: fpscr+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 7:
IN:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 8:
IN:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 9:
IN:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 10:
IN:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 11:
IN:
Stack adjustment: 64
Reg 2: significand+0
Reg 3: significand+4
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:135 significand ] [135])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 2: v+0
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: v
    offset 0
      (reg/v:SI 2 r2 [orig:133 v ] [133])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 12:
IN:
Stack adjustment: 64
Reg 2: v+0
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: v
    offset 0
      (reg/v:SI 2 r2 [orig:133 v ] [133])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 13:
IN:
Stack adjustment: 64
Reg 2: v+0
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: v
    offset 0
      (reg/v:SI 2 r2 [orig:133 v ] [133])
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


Basic block 14:
IN:
Stack adjustment: 64
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])

OUT:
Stack adjustment: 64
Reg 4: sd+0
Reg 5: exceptions+0
Reg 6: fpscr+0
Reg 7: tm+0
Variables:
  name: sd
    offset 0
      (reg/v:SI 4 r4 [orig:141 sd ] [141])
  name: tm
    offset 0
      (reg/v:SI 7 r7 [orig:137 tm ] [137])
  name: exceptions
    offset 0
      (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
  name: fpscr
    offset 0
      (reg/v:SI 6 r6 [orig:144 fpscr ] [144])


15 basic blocks, 20 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [28.0%]  (fallthru) 6 [72.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	 1 [r1]

Successors:  4 [50.0%]  (fallthru) 8 [50.0%] 
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  5 [50.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}

Successors:  9 [100.0%] 


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  2 [72.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  7 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 7 [r7] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	 1 [r1]

Successors:  8 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 3 [50.0%]  4 [50.0%]  6 [50.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

Successors:  9 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 9300, should be 1400

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 5 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  10 [29.0%]  (fallthru) 11 [71.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 2100, should be 10000

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 2900, maybe hot.
Predecessors:  9 [29.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  11 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [71.0%]  10 [100.0%]  (fallthru)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

Successors:  12 [50.0%]  (fallthru) 13 [50.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  11 [50.0%]  (fallthru)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

Successors:  14 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  11 [50.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

Successors:  14 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 14 , prev 13, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 12 [100.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 1 , prev 14, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  14 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fcvts

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,15u} r1={14d,13u} r2={12d,13u} r3={15d,18u} r4={2d,4u} r5={4d,5u} r6={2d,3u} r7={6d,11u} r8={4d,7u} r9={4d,7u} r10={2d,2u} r11={2d,3u} r12={6d,2u} r13={3d,36u,2d} r14={6d,3u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={15d,22u} r25={1d} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 719{552d,164u,3e} in 88{84 regular + 4 call} insns.
(note 1 0 262 NOTE_INSN_DELETED)

(note 262 1 263 2 ( sd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ sd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 263 262 264 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 264 263 265 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 265 264 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 265 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 17 2 NOTE_INSN_FUNCTION_BEG)

(note 17 6 19 2 NOTE_INSN_DELETED)

(note 19 17 20 2 NOTE_INSN_DELETED)

(note 20 19 23 2 NOTE_INSN_DELETED)

(note 23 20 27 2 NOTE_INSN_DELETED)

(note 27 23 31 2 NOTE_INSN_DELETED)

(note 31 27 32 2 NOTE_INSN_DELETED)

(note 32 31 33 2 NOTE_INSN_DELETED)

(note 33 32 35 2 NOTE_INSN_DELETED)

(note 35 33 36 2 NOTE_INSN_DELETED)

(note 36 35 39 2 NOTE_INSN_DELETED)

(note 39 36 40 2 NOTE_INSN_DELETED)

(note 40 39 42 2 NOTE_INSN_DELETED)

(note 42 40 43 2 NOTE_INSN_DELETED)

(note 43 42 44 2 NOTE_INSN_DELETED)

(note 44 43 217 2 NOTE_INSN_DELETED)

(note 217 44 53 2 NOTE_INSN_DELETED)

(note 53 217 54 2 NOTE_INSN_DELETED)

(note 54 53 55 2 NOTE_INSN_DELETED)

(note 55 54 239 2 NOTE_INSN_DELETED)

(insn/f:TI 239 55 2 2 arch/arm/vfp/vfpdouble.c:440 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 6 r6)
                            (expr_list:REG_DEAD (reg:SI 4 r4)
                                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                            (set/f (reg/f:SI 13 sp)
                                                (plus:SI (reg/f:SI 13 sp)
                                                    (const_int -36 [0xffffffffffffffdc])))
                                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                (reg:SI 4 r4))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 4 [0x4])) [0 S4 A32])
                                                (reg:SI 5 r5))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0 S4 A32])
                                                (reg:SI 6 r6))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 S4 A32])
                                                (reg:SI 7 r7))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 16 [0x10])) [0 S4 A32])
                                                (reg:SI 8 r8))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 20 [0x14])) [0 S4 A32])
                                                (reg:SI 9 r9))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 24 [0x18])) [0 S4 A32])
                                                (reg:SI 10 sl))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 28 [0x1c])) [0 S4 A32])
                                                (reg:SI 11 fp))
                                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 32 [0x20])) [0 S4 A32])
                                                (reg:SI 14 lr))
                                        ])
                                    (nil))))))))))

(insn:TI 2 239 240 2 arch/arm/vfp/vfpdouble.c:440 (set (reg/v:SI 4 r4 [orig:141 sd ] [141])
        (reg:SI 0 r0 [ sd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ sd ])
        (nil)))

(insn/f:TI 240 2 241 2 arch/arm/vfp/vfpdouble.c:440 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -28 [0xffffffffffffffe4]))) 4 {*arm_addsi3} (nil))

(note 241 240 9 2 NOTE_INSN_PROLOGUE_END)

(insn 9 241 266 2 arch/arm/vfp/vfpdouble.c:446 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 266 9 5 2 ( sd (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:141 sd ] [141])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 5 266 10 2 arch/arm/vfp/vfpdouble.c:440 (set (reg/v:SI 6 r6 [orig:144 fpscr ] [144])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 269 2 arch/arm/vfp/vfpdouble.c:446 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 269 10 268 2 ( fpscr (expr_list:REG_DEP_TRUE (reg/v:SI 6 r6 [orig:144 fpscr ] [144])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 268 269 267 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 267 268 235 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 235 267 34 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 34 235 236 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 14 lr [161])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 236 34 230 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 3 r3 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 230 236 231 2 arch/arm/vfp/vfpdouble.c:446 (set (reg:SI 8 r8 [orig:139 D.4438 ] [139])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 231 230 21 2 arch/arm/vfp/vfpdouble.c:446 (set (reg:SI 9 r9 [ D.4438+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (nil))

(insn:TI 21 231 237 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 1 r1 [orig:134 D.6097 ] [134])
        (zero_extract:SI (reg:SI 1 r1 [orig:9 D.4438+4 ] [9])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 237 21 26 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 10 sl [145])
        (and:SI (reg:SI 8 r8 [orig:139 D.4438 ] [139])
            (reg:SI 2 r2))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 26 237 24 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 12 ip [204])
        (ashift:SI (reg:SI 8 r8 [orig:139 D.4438 ] [139])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 26 25 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 0 r0 [orig:205+4 ] [205])
        (ashift:SI (reg:SI 9 r9 [ D.4438+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 25 24 45 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 0 r0 [orig:205+4 ] [205])
        (ior:SI (lshiftrt:SI (reg:SI 8 r8 [orig:139 D.4438 ] [139])
                (const_int 20 [0x14]))
            (reg:SI 0 r0 [orig:205+4 ] [205]))) 270 {*arith_shiftsi} (nil))

(insn 45 25 28 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 1 r1 [orig:134 D.6097 ] [134])
                    (reg:SI 14 lr [161]))
                (ne:SI (reg:SI 1 r1 [orig:134 D.6097 ] [134])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (expr_list:REG_DEAD (reg:SI 14 lr [161])
        (nil)))

(insn:TI 28 45 270 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (lshiftrt:SI (reg:SI 12 ip [204])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [204])
        (nil)))

(note 270 28 238 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 238 270 29 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 11 fp [+4 ])
        (and:SI (reg:SI 9 r9 [ D.4438+4 ])
            (reg:SI 3 r3 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
        (nil)))

(insn:TI 29 238 271 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:135 significand ] [135])
        (ior:SI (ashift:SI (reg:SI 0 r0 [orig:205+4 ] [205])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:135 significand ] [135]))) 270 {*arith_shiftsi} (nil))

(note 271 29 30 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 30 271 272 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 0 r0 [orig:205+4 ] [205])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:205+4 ] [205])
        (nil)))

(note 272 30 226 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 226 272 227 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 8 r8 [169])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn 227 226 216 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 9 r9 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 216 227 228 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 0 r0 [173])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 228 216 273 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:135 significand ] [135])
            (ior:SI (reg:SI 2 r2 [orig:135 significand ] [135])
                (reg:SI 8 r8 [169])))) 2310 {neon_vornv2di+43} (nil))

(note 273 228 229 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 229 273 274 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 9 r9 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (nil)))

(note 274 229 57 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 57 274 14 2 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:134 D.6097 ] [134])
            (reg:SI 0 r0 [173]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [173])
        (nil)))

(insn:TI 14 57 22 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 12 ip [200])
        (lshiftrt:SI (reg:SI 11 fp [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 22 14 16 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (reg/f:SI 13 sp) [0 vdm.exponent+0 S2 A64])
        (reg:HI 1 r1 [orig:134 D.6097 ] [134])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 16 22 52 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 2 [0x2])) [0 vdm.sign+0 S2 A16])
        (reg:HI 12 ip [200])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 12 ip [200])
        (nil)))

(insn:TI 52 16 58 2 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:135 significand ] [135])) 163 {*arm_movdi} (nil))

(jump_insn 58 52 59 2 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  6 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  2 [28.0%]  (fallthru)
(note 59 58 60 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 60 59 61 3 NOTE_INSN_DELETED)

(note 61 60 62 3 NOTE_INSN_DELETED)

(insn:TI 62 61 65 3 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:135 significand ] [135])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:135 significand ] [135])
        (expr_list:REG_UNUSED (reg:SI 1 r1)
            (nil))))

(insn:TI 65 62 275 3 arch/arm/vfp/vfp.h:332 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:137 tm ] [137])
            (const_int 8 [0x8]))) 2345 {neon_vornv2di+78} (nil))

(note 275 65 63 3 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:137 tm ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 63 275 69 3 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 8)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 1 [r1] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 69 63 72 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 72 69 73 4 NOTE_INSN_DELETED)

(note 73 72 222 4 NOTE_INSN_DELETED)

(insn:TI 222 73 221 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 9 r9 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn 221 222 224 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 8 r8 [176])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 224 221 74 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 9 r9 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (nil)))

(insn:TI 74 224 77 4 arch/arm/vfp/vfp.h:333 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn:TI 77 74 78 4 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:137 tm ] [137])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (nil))

(insn 78 77 276 4 arch/arm/vfp/vfpdouble.c:454 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 276 78 83 4 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 83 276 75 4 arch/arm/vfp/vfp.h:334 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:137 tm ] [137])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(jump_insn 75 83 257 4 arch/arm/vfp/vfp.h:333 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 8 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}

;; Pred edge  4 [50.0%]  (fallthru)
(note 257 75 258 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 258 257 259 5 (set (pc)
        (label_ref 110)) -1 (nil))
;; End of basic block 5 -> ( 9)


;; Succ edge  9 [100.0%] 

(barrier 259 258 277)

(note 277 259 278 6 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(note 278 277 86 6 ( exceptions (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 86 278 87 6 385 "" [1 uses])

(note 87 86 88 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn:TI 88 87 91 6 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:134 D.6097 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:134 D.6097 ] [134])
        (nil)))

(insn:TI 91 88 279 6 arch/arm/vfp/vfp.h:329 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 7 r7 [orig:137 tm ] [137])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 279 91 89 6 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 7 r7 [orig:137 tm ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 89 279 95 6 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 7 [r7] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 6 [r6] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  6 [50.0%]  (fallthru)
(note 95 89 96 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 96 95 97 7 NOTE_INSN_DELETED)

(note 97 96 98 7 NOTE_INSN_DELETED)

(insn:TI 98 97 196 7 arch/arm/vfp/vfp.h:338 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:135 significand ] [135])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:135 significand ] [135])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(insn:TI 196 98 280 7 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 7 r7 [orig:137 tm ] [137])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

(note 280 196 107 8 ( exceptions (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 7 3 4 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  3 [50.0%] 
;; Pred edge  4 [50.0%] 
;; Pred edge  6 [50.0%] 
(code_label 107 280 108 8 387 "" [3 uses])

(note 108 107 109 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn:TI 109 108 110 8 arch/arm/vfp/vfpdouble.c:444 (set (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 110 109 111 9 389 "" [1 uses])

(note 111 110 112 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 112 111 113 9 NOTE_INSN_DELETED)

(insn:TI 113 112 114 9 arch/arm/vfp/vfpdouble.c:456 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 7 r7 [orig:137 tm ] [137])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 114 113 115 9 arch/arm/vfp/vfpdouble.c:456 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 119)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  10 [29.0%]  (fallthru)
;; Succ edge  11 [71.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  9 [29.0%]  (fallthru)
(note 115 114 116 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 116 115 117 10 NOTE_INSN_DELETED)

(insn:TI 117 116 118 10 arch/arm/vfp/vfpdouble.c:457 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(call_insn:TI 118 117 281 10 arch/arm/vfp/vfpdouble.c:457 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 281 118 282 10 ( significand (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 10 -> ( 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

(note 282 281 119 11 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:135 significand ] [135])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  9 [71.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 119 282 120 11 392 "" [1 uses])

(note 120 119 126 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 126 120 121 11 NOTE_INSN_DELETED)

(insn:TI 121 126 283 11 arch/arm/vfp/vfpdouble.c:459 (set (reg:SI 3 r3 [orig:138 D.4446 ] [138])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 2 [0x2])) [0 vdm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 283 121 123 11 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 123 283 124 11 arch/arm/vfp/vfp.h:38 (set (reg:DI 0 r0 [orig:181 vdm.significand ] [181])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.significand+0 S8 A64])) 163 {*arm_movdi} (expr_list:REG_EQUIV (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 vdm.significand+0 S8 A64])
        (nil)))

(insn:TI 124 123 284 11 arch/arm/vfp/vfp.h:38 (parallel [
            (set (reg/v:SI 2 r2 [orig:133 v ] [133])
                (asm_operands:SI ("cmp	%Q1, #1		@ vfp_hi64to32jamming
	movcc	%0, %R1
	orrcs	%0, %R1, #1") ("=r") 0 [
                        (reg:DI 0 r0 [orig:181 vdm.significand ] [181])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                    ] 1586691))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 284 124 285 11 ( v (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:133 v ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 285 284 127 11 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 127 285 122 11 arch/arm/vfp/vfpdouble.c:465 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 7 r7 [orig:137 tm ] [137])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (set (reg:SI 1 r1 [182])
                (and:SI (reg/v:SI 7 r7 [orig:137 tm ] [137])
                    (const_int 24 [0x18])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 122 127 125 11 arch/arm/vfp/vfpdouble.c:459 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 18 [0x12])) [0 vsd.sign+0 S2 A16])
        (reg:HI 3 r3 [orig:138 D.4446 ] [138])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 125 122 128 11 arch/arm/vfp/vfpdouble.c:460 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vsd.significand+0 S4 A32])
        (reg/v:SI 2 r2 [orig:133 v ] [133])) 167 {*arm_movsi_insn} (nil))

(jump_insn:TI 128 125 129 11 arch/arm/vfp/vfpdouble.c:465 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 140)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 4 [r4] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  11 [50.0%]  (fallthru)
(note 129 128 174 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 174 129 175 12 NOTE_INSN_DELETED)

(note 175 174 133 12 NOTE_INSN_DELETED)

(insn:TI 133 175 170 12 arch/arm/vfp/vfpdouble.c:467 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:137 tm ] [137])
            (const_int 16 [0x10]))) 219 {*arm_cmpsi_insn} (nil))

(insn 170 133 136 12 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 3 r3 [193])
        (ashift:SI (reg:SI 3 r3 [orig:138 D.4446 ] [138])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 136 170 286 12 arch/arm/vfp/vfpdouble.c:468 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [185])
            (ior:SI (reg/v:SI 2 r2 [orig:133 v ] [133])
                (const_int 536870912 [0x20000000])))) 2310 {neon_vornv2di+43} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 vsd.significand+0 S4 A32])
        (nil)))

(note 286 136 137 12 ( v (nil)) NOTE_INSN_VAR_LOCATION)

(insn 137 286 215 12 arch/arm/vfp/vfpdouble.c:468 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                    (const_int 20 [0x14])) [0 vsd.significand+0 S4 A32])
            (reg:SI 2 r2 [185]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_DEAD (reg:SI 2 r2 [185])
            (nil))))

(insn:TI 215 137 171 12 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 0 r0 [orig:197 vsd.significand ] [197])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vsd.significand+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 vsd.significand+0 S4 A32])
        (nil)))

(insn 171 215 172 12 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 3 r3 [195])
        (plus:SI (reg:SI 3 r3 [193])
            (const_int 2130706432 [0x7f000000]))) 4 {*arm_addsi3} (nil))

(insn:TI 172 171 220 12 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 3 r3 [194])
        (plus:SI (reg:SI 3 r3 [195])
            (const_int 8388608 [0x800000]))) 4 {*arm_addsi3} (nil))

(insn 220 172 132 12 arch/arm/vfp/vfpdouble.c:466 (set (reg:HI 1 r1)
        (const_int 255 [0xff])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 132 220 177 12 arch/arm/vfp/vfpdouble.c:466 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 vsd.exponent+0 S2 A64])
        (reg:HI 1 r1)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 1 r1)
        (expr_list:REG_EQUAL (const_int 255 [0xff])
            (nil))))

(insn 177 132 176 12 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:141 sd ] [141])) 167 {*arm_movsi_insn} (nil))

(insn:TI 176 177 178 12 arch/arm/vfp/vfpdouble.c:478 (set (reg:SI 0 r0)
        (plus:SI (lshiftrt:SI (reg:SI 0 r0 [orig:197 vsd.significand ] [197])
                (const_int 7 [0x7]))
            (reg:SI 3 r3 [194]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 3 r3 [194])
        (nil)))

(call_insn:TI 178 176 260 12 arch/arm/vfp/vfpdouble.c:478 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_float") [flags 0x41] <function_decl 0x10a9d180 vfp_put_float>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 260 178 261 12 arch/arm/vfp/vfpdouble.c:479 (set (pc)
        (label_ref 179)) -1 (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 261 260 287)

(note 287 261 140 13 ( v (expr_list:REG_DEP_TRUE (reg/v:SI 2 r2 [orig:133 v ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  11 [50.0%] 
(code_label 140 287 141 13 393 "" [1 uses])

(note 141 140 142 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 142 141 159 13 NOTE_INSN_DELETED)

(note 159 142 143 13 NOTE_INSN_DELETED)

(insn:TI 143 159 160 13 arch/arm/vfp/vfpdouble.c:470 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 7 r7 [orig:137 tm ] [137])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 160 143 148 13 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:141 sd ] [141])) 167 {*arm_movsi_insn} (nil))

(insn:TI 148 160 162 13 arch/arm/vfp/vfpdouble.c:471 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 16 [0x10])) [0 vsd.exponent+0 S2 A64])
            (reg:HI 1 r1 [182]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:HI 1 r1 [182])
        (nil)))

(insn 162 148 288 13 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 2 r2)
        (reg/v:SI 6 r6 [orig:144 fpscr ] [144])) 167 {*arm_movsi_insn} (nil))

(note 288 162 153 13 ( v (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 153 288 161 13 arch/arm/vfp/vfpdouble.c:473 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [orig:190 vdm.exponent ] [190])
            (zero_extend:SI (mem/s/j/c:HI (reg/f:SI 13 sp) [0 vdm.exponent+0 S2 A64])))) 2332 {neon_vornv2di+65} (nil))

(insn 161 153 155 13 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (nil))

(insn:TI 155 161 156 13 arch/arm/vfp/vfpdouble.c:473 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [191])
            (plus:SI (reg:SI 3 r3 [orig:190 vdm.exponent ] [190])
                (const_int -896 [0xfffffffffffffc80])))) 2268 {neon_vornv2di+1} (nil))

(insn:TI 156 155 163 13 arch/arm/vfp/vfpdouble.c:473 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 16 [0x10])) [0 vsd.exponent+0 S2 A64])
            (reg:HI 3 r3 [191]))) 2348 {neon_vornv2di+81} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_DEAD (reg:HI 3 r3 [191])
            (nil))))

(insn 163 156 164 13 arch/arm/vfp/vfpdouble.c:475 (set (reg:SI 3 r3)
        (reg/v:SI 5 r5 [orig:136 exceptions ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
        (nil)))

(call_insn:TI 164 163 165 13 arch/arm/vfp/vfpdouble.c:475 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__vfp_single_normaliseround") [flags 0x41] <function_decl 0x10a9d580 __vfp_single_normaliseround>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 165 164 179 13 arch/arm/vfp/vfpdouble.c:475 (set (reg/v:SI 5 r5 [orig:136 exceptions ] [136])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 179 165 180 14 397 "" [1 uses])

(note 180 179 185 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn:TI 185 180 191 14 arch/arm/vfp/vfpdouble.c:480 (set (reg/i:SI 0 r0)
        (reg/v:SI 5 r5 [orig:136 exceptions ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 191 185 242 14 arch/arm/vfp/vfpdouble.c:480 (use (reg/i:SI 0 r0)) -1 (nil))

(note 242 191 243 14 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 243 242 244 14 arch/arm/vfp/vfpdouble.c:480 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  EXIT [100.0%] 

(barrier 244 243 214)

(note 214 244 218 NOTE_INSN_DELETED)

(note 218 214 0 NOTE_INSN_DELETED)


;; Function vfp_double_fsqrt (vfp_double_fsqrt)[0:158]


Basic block 2:
IN:
Stack adjustment: 0
Reg 0: dd+0
Reg 1: unused+0
Reg 2: dm+0
Reg 3: fpscr+0
Variables:
  name: dd
    offset 0
      (reg:SI 0 r0 [ dd ])
  name: unused
    offset 0
      (reg:SI 1 r1 [ unused ])
  name: dm
    offset 0
      (reg:SI 2 r2 [ dm ])
  name: fpscr
    offset 0
      (reg:SI 3 r3 [ fpscr ])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])


Basic block 3:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 4:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 5:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: significand+4
Variables:
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])
    offset 4
      (reg:SI 3 r3 [ significand+4 ])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 6:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 7:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 8:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 9:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 5: ret+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:178 ret ] [178])


Basic block 10:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 11:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Reg 4: vdp+0
Reg 5: ret+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:178 ret ] [178])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: vdp
    offset 0
      (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 12:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Reg 4: vdp+0
Reg 5: ret+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:178 ret ] [178])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: vdp
    offset 0
      (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 13:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Reg 4: vdp+0
Reg 5: ret+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:178 ret ] [178])
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: vdp
    offset 0
      (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 4: vdp+0
Reg 5: ret+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:178 ret ] [178])
  name: vdp
    offset 0
      (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])


Basic block 14:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 15:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])


Basic block 16:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176


Basic block 17:
IN:
Stack adjustment: 176
Reg 2: significand+0
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])
  name: significand
    offset 0
      (reg:SI 2 r2 [orig:173 significand ] [173])

OUT:
Stack adjustment: 176
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])


Basic block 18:
IN:
Stack adjustment: 176
Reg 3: tm+0
Variables:
  name: tm
    offset 0
      (reg/v:SI 3 r3 [orig:177 tm ] [177])

OUT:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])


Basic block 19:
IN:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])

OUT:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])


Basic block 20:
IN:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])

OUT:
Stack adjustment: 176
Reg 0: __n+0
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 0 r0 [orig:377 __n ] [377])
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])


Basic block 21:
IN:
Stack adjustment: 176
Reg 0: __n+0
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
      (reg:SI 0 r0 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])

OUT:
Stack adjustment: 176
Reg 0: z+0
Reg 1: z+4
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: z
    offset 0
      (reg:SI 0 r0 [orig:137 z.1257 ] [137])
    offset 4
      (reg:SI 1 r1 [ z.1257+4 ])


Basic block 22:
IN:
Stack adjustment: 176
Reg 0: __n+0
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
      (reg:SI 0 r0 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])

OUT:
Stack adjustment: 176
Reg 0: __n+0
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
      (reg:SI 0 r0 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])


Basic block 23:
IN:
Stack adjustment: 176
Reg 0: __n+0
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
      (reg:SI 0 r0 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])

OUT:
Stack adjustment: 176
Reg 0: __n+0
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
      (reg:SI 0 r0 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])


Basic block 24:
IN:
Stack adjustment: 176
Reg 0: __n+0
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
      (reg:SI 0 r0 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])

OUT:
Stack adjustment: 176
Reg 0: __n+0
Reg 4: __base+0
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __base
    offset 0
      (reg/v:SI 4 r4 [ __base ])
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __n
    offset 0
      (reg:SI 0 r0 [ __n ])


Basic block 25:
IN:
Stack adjustment: 176
Reg 0: __n+0 __n+0
Reg 4: __base+0
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __base
    offset 0
      (reg/v:SI 4 r4 [ __base ])
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
      (reg:SI 0 r0 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __n
    offset 0
      (reg:SI 0 r0 [ __n ])

OUT:
Stack adjustment: 176
Reg 0: rma+0
Reg 1: rma+4
Reg 4: rmb+0
Reg 5: rmb+4
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
    offset 4
      (reg:SI 1 r1 [ rma.1251+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rmb
    offset 0
      (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    offset 4
      (reg:SI 5 r5 [ rmb+4 ])


Basic block 26:
IN:
Stack adjustment: 176
Reg 0: rma+0
Reg 1: rma+4
Reg 4: rmb+0
Reg 5: rmb+4
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
    offset 4
      (reg:SI 1 r1 [ rma.1251+4 ])
  name: rmb
    offset 0
      (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    offset 4
      (reg:SI 5 r5 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 0: rma+0
Reg 1: rma+4
Reg 4: rmb+0
Reg 5: rmb+4
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
    offset 4
      (reg:SI 1 r1 [ rma.1251+4 ])
  name: rmb
    offset 0
      (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    offset 4
      (reg:SI 5 r5 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 27:
IN:
Stack adjustment: 176
Reg 0: rma+0
Reg 1: rma+4
Reg 4: rmb+0
Reg 5: rmb+4
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
    offset 4
      (reg:SI 1 r1 [ rma.1251+4 ])
  name: rmb
    offset 0
      (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    offset 4
      (reg:SI 5 r5 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rma+0
Reg 4: rmb+0
Reg 5: rmb+4
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rma
    offset 0
      (reg:SI 2 r2 [orig:142 rma.1251 ] [142])
      (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
    offset 4
      (reg:SI 1 r1 [ rma.1251+4 ])
  name: rmb
    offset 0
      (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    offset 4
      (reg:SI 5 r5 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 28:
IN:
Stack adjustment: 176
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rma+0
Reg 4: rmb+0
Reg 5: rmb+4
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
      (reg:SI 2 r2 [orig:142 rma.1251 ] [142])
    offset 4
      (reg:SI 1 r1 [ rma.1251+4 ])
  name: rmb
    offset 0
      (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    offset 4
      (reg:SI 5 r5 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rma+0
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
      (reg:SI 2 r2 [orig:142 rma.1251 ] [142])
    offset 4
      (reg:SI 1 r1 [ rma.1251+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 29:
IN:
Stack adjustment: 176
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rma+0
Reg 4: rmb+0
Reg 5: rmb+4
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
      (reg:SI 2 r2 [orig:142 rma.1251 ] [142])
    offset 4
      (reg:SI 1 r1 [ rma.1251+4 ])
  name: rmb
    offset 0
      (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    offset 4
      (reg:SI 5 r5 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rma+0
Reg 4: rmb+0
Reg 5: rmb+4
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
      (reg:SI 2 r2 [orig:142 rma.1251 ] [142])
    offset 4
      (reg:SI 1 r1 [ rma.1251+4 ])
  name: rmb
    offset 0
      (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    offset 4
      (reg:SI 5 r5 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 30:
IN:
Stack adjustment: 176
Reg 0: rma+0
Reg 1: rma+4
Reg 2: rma+0
Reg 4: rmb+0
Reg 5: rmb+4
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rma
    offset 0
      (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
      (reg:SI 2 r2 [orig:142 rma.1251 ] [142])
    offset 4
      (reg:SI 1 r1 [ rma.1251+4 ])
  name: rmb
    offset 0
      (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    offset 4
      (reg:SI 5 r5 [ rmb+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 6: __n+0
Reg 7: __n+4
Reg 8: z+0
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: remh
    offset 0
      (reg:SI 2 r2 [orig:155 remh ] [155])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:160 __left ] [160])
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: z
    offset 0
      (reg/v:DI 8 r8 [orig:143 z.1250 ] [143])


Basic block 31:
IN:
Stack adjustment: 176
Reg 0: reml+0
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 6: __n+0
Reg 7: __n+4
Reg 8: z+0
Reg 9: z+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: remh
    offset 0
      (reg/v:DI 2 r2 [orig:155 remh ] [155])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:160 __left ] [160])
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.1250 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.1250+4 ])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:156 reml ] [156])

OUT:
Stack adjustment: 176
Reg 0: reml+0
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 7: __n+4
Reg 8: z+0
Reg 9: z+4
Reg 14: __left+0
Variables:
  name: __n
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: remh
    offset 0
      (reg/v:DI 2 r2 [orig:155 remh ] [155])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:160 __left ] [160])
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.1250 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.1250+4 ])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:156 reml ] [156])


Basic block 32:
IN:
Stack adjustment: 176
Reg 0: reml+0
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 6: __n+0
Reg 7: __n+4
Reg 8: z+0
Reg 9: z+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: remh
    offset 0
      (reg/v:DI 2 r2 [orig:155 remh ] [155])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:160 __left ] [160])
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.1250 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.1250+4 ])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:156 reml ] [156])

OUT:
Stack adjustment: 176
Reg 0: reml+0
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 6: __n+0
Reg 7: __n+4
Reg 8: z+0
Reg 9: z+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: remh
    offset 0
      (reg/v:DI 2 r2 [orig:155 remh ] [155])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:160 __left ] [160])
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.1250 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.1250+4 ])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:156 reml ] [156])


Basic block 33:
IN:
Stack adjustment: 176
Reg 0: reml+0
Reg 2: remh+0
Reg 3: remh+4
Reg 4: __left+0
Reg 6: __n+0
Reg 7: __n+4
Reg 8: z+0
Reg 9: z+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: remh
    offset 0
      (reg/v:DI 2 r2 [orig:155 remh ] [155])
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: __left
    offset 0
      (reg/v:SI 4 r4 [orig:160 __left ] [160])
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.1250 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.1250+4 ])
  name: reml
    offset 0
      (reg/v:DI 0 r0 [orig:156 reml ] [156])

OUT:
Stack adjustment: 176
Reg 0: __n+0
Reg 1: __n+4
Reg 3: remh+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: z+0
Reg 9: z+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 0 r0 [orig:159 __n ] [159])
    offset 4
      (reg:SI 1 r1 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: __n
    offset 0
      (reg:DI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.1250 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.1250+4 ])
  name: remh
    offset 4
      (reg:SI 3 r3 [ remh+4 ])


Basic block 34:
IN:
Stack adjustment: 176
Reg 0: __n+0
Reg 1: __n+4
Reg 3: remh+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: z+0
Reg 9: z+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 0 r0 [orig:159 __n ] [159])
    offset 4
      (reg:SI 1 r1 [ __n+4 ])
  name: __n
    offset 0
      (reg:DI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: remh
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.1250 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.1250+4 ])

OUT:
Stack adjustment: 176
Reg 0: z+0
Reg 1: z+4
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:DI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: z
    offset 0
      (reg:SI 0 r0 [orig:137 z.1257 ] [137])
    offset 4
      (reg:SI 1 r1 [ z.1257+4 ])


Basic block 35:
IN:
Stack adjustment: 176
Reg 0: __n+0
Reg 1: __n+4
Reg 3: remh+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: z+0
Reg 9: z+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 0 r0 [orig:159 __n ] [159])
    offset 4
      (reg:SI 1 r1 [ __n+4 ])
  name: __n
    offset 0
      (reg:DI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: remh
    offset 4
      (reg:SI 3 r3 [ remh+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: z
    offset 0
      (reg:SI 8 r8 [orig:143 z.1250 ] [143])
    offset 4
      (reg:SI 9 r9 [ z.1250+4 ])

OUT:
Stack adjustment: 176
Reg 0: z+0
Reg 1: z+4
Reg 2: __res+0
Reg 3: __res+4 remh+4
Reg 4: __base+0
Reg 6: __n+0
Reg 7: __n+4
Variables:
  name: __base
    offset 0
      (reg/v:SI 4 r4 [ __base ])
  name: __n
    offset 0
      (reg:DI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __res
    offset 0
      (reg/v:DI 2 r2 [ __res ])
    offset 4
      (reg:SI 3 r3 [ __res+4 ])
  name: z
    offset 0
      (reg:SI 0 r0 [orig:137 z.1257 ] [137])
    offset 4
      (reg:SI 1 r1 [ z.1257+4 ])
  name: remh
    offset 4
      (reg:SI 3 r3 [ remh+4 ])


Basic block 36:
IN:
Stack adjustment: 176
Reg 0: z+0
Reg 1: z+4
Reg 2: __res+0
Reg 3: remh+4 __res+4
Reg 4: __base+0
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: __base
    offset 0
      (reg/v:SI 4 r4 [ __base ])
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __res
    offset 0
      (reg/v:DI 2 r2 [ __res ])
    offset 4
      (reg:SI 3 r3 [ __res+4 ])
  name: z
    offset 0
      (reg:SI 0 r0 [orig:137 z.1257 ] [137])
    offset 4
      (reg:SI 1 r1 [ z.1257+4 ])
  name: remh
    offset 4
      (reg:SI 3 r3 [ remh+4 ])

OUT:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])


Basic block 37:
IN:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 38:
IN:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 39:
IN:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 40:
IN:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 5: rma+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: rma+0
Reg 9: rma+4
Reg 10: rl+0
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:151 rl ] [151])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
    offset 4
      (reg:SI 9 r9 [ rma.1258+4 ])
      (reg:SI 5 r5 [ rma+4 ])


Basic block 41:
IN:
Stack adjustment: 176
Reg 5: rma+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: rma+0
Reg 9: rma+4
Reg 10: rl+0
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:151 rl ] [151])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
    offset 4
      (reg:SI 9 r9 [ rma.1258+4 ])
      (reg:SI 5 r5 [ rma+4 ])

OUT:
Stack adjustment: 176
Reg 5: rma+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: rma+0
Reg 9: rma+4
Reg 10: rl+0
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:151 rl ] [151])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
    offset 4
      (reg:SI 9 r9 [ rma.1258+4 ])
      (reg:SI 5 r5 [ rma+4 ])


Basic block 42:
IN:
Stack adjustment: 176
Reg 5: rma+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: rma+0
Reg 9: rma+4
Reg 10: rl+0
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:151 rl ] [151])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
    offset 4
      (reg:SI 9 r9 [ rma.1258+4 ])
      (reg:SI 5 r5 [ rma+4 ])

OUT:
Stack adjustment: 176
Reg 4: rma+0
Reg 5: rma+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: rma+0
Reg 9: rma+4
Reg 10: rl+0
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:151 rl ] [151])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
      (reg:SI 4 r4 [orig:150 rma ] [150])
    offset 4
      (reg:SI 9 r9 [ rma.1258+4 ])
      (reg:SI 5 r5 [ rma+4 ])


Basic block 43:
IN:
Stack adjustment: 176
Reg 4: rma+0
Reg 5: rma+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: rma+0
Reg 9: rma+4
Reg 10: rl+0
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:151 rl ] [151])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
      (reg:SI 4 r4 [orig:150 rma ] [150])
    offset 4
      (reg:SI 9 r9 [ rma.1258+4 ])
      (reg:SI 5 r5 [ rma+4 ])

OUT:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4
Reg 8: rma+0
Reg 9: rma+4
Reg 10: rl+0
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:151 rl ] [151])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
    offset 4
      (reg:SI 9 r9 [ rma.1258+4 ])


Basic block 44:
IN:
Stack adjustment: 176
Reg 4: rma+0
Reg 5: rma+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: rma+0
Reg 9: rma+4
Reg 10: rl+0
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:151 rl ] [151])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
      (reg:SI 4 r4 [orig:150 rma ] [150])
    offset 4
      (reg:SI 9 r9 [ rma.1258+4 ])
      (reg:SI 5 r5 [ rma+4 ])

OUT:
Stack adjustment: 176
Reg 4: rma+0
Reg 5: rma+4
Reg 8: rma+0
Reg 9: rma+4
Reg 10: rl+0
Reg 14: __left+0
Variables:
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:151 rl ] [151])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
      (reg:SI 4 r4 [orig:150 rma ] [150])
    offset 4
      (reg:SI 9 r9 [ rma.1258+4 ])
      (reg:SI 5 r5 [ rma+4 ])


Basic block 45:
IN:
Stack adjustment: 176
Reg 4: rma+0
Reg 5: rma+4
Reg 6: __n+0
Reg 7: __n+4
Reg 8: rma+0
Reg 9: rma+4
Reg 10: rl+0
Reg 14: __left+0
Variables:
  name: rma
    offset 0
      (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
      (reg:SI 4 r4 [orig:150 rma ] [150])
    offset 4
      (reg:SI 9 r9 [ rma.1258+4 ])
      (reg:SI 5 r5 [ rma+4 ])
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: rl
    offset 0
      (reg/v:DI 10 sl [orig:151 rl ] [151])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 0: remh+0
Reg 6: reml+0
Reg 7: reml+4
Reg 14: __left+0
Variables:
  name: remh
    offset 0
      (reg/v:DI 0 r0 [orig:175 remh ] [175])
  name: reml
    offset 0
      (reg/v:DI 6 r6 [orig:174 reml ] [174])
    offset 4
      (reg:SI 7 r7 [ reml+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 46:
IN:
Stack adjustment: 176
Reg 0: remh+0
Reg 1: remh+4
Reg 6: reml+0
Reg 7: reml+4
Reg 14: __left+0
Variables:
  name: remh
    offset 0
      (reg/v:DI 0 r0 [orig:175 remh ] [175])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 6 r6 [orig:174 reml ] [174])
    offset 4
      (reg:SI 7 r7 [ reml+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 0: remh+0
Reg 1: remh+4
Reg 6: reml+0
Reg 7: reml+4
Reg 14: __left+0
Variables:
  name: remh
    offset 0
      (reg/v:DI 0 r0 [orig:175 remh ] [175])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 6 r6 [orig:174 reml ] [174])
    offset 4
      (reg:SI 7 r7 [ reml+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 47:
IN:
Stack adjustment: 176
Reg 0: remh+0
Reg 1: remh+4
Reg 6: reml+0
Reg 7: reml+4
Reg 14: __left+0
Variables:
  name: remh
    offset 0
      (reg/v:DI 0 r0 [orig:175 remh ] [175])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 6 r6 [orig:174 reml ] [174])
    offset 4
      (reg:SI 7 r7 [ reml+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 0: remh+0
Reg 1: remh+4
Reg 6: reml+0
Reg 7: reml+4
Reg 14: __left+0
Variables:
  name: remh
    offset 0
      (reg/v:DI 0 r0 [orig:175 remh ] [175])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 6 r6 [orig:174 reml ] [174])
    offset 4
      (reg:SI 7 r7 [ reml+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 48:
IN:
Stack adjustment: 176
Reg 0: remh+0
Reg 1: remh+4
Reg 6: reml+0
Reg 7: reml+4
Reg 14: __left+0
Variables:
  name: remh
    offset 0
      (reg/v:DI 0 r0 [orig:175 remh ] [175])
    offset 4
      (reg:SI 1 r1 [ remh+4 ])
  name: reml
    offset 0
      (reg/v:DI 6 r6 [orig:174 reml ] [174])
    offset 4
      (reg:SI 7 r7 [ reml+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 7: reml+4
Reg 14: __left+0
Variables:
  name: reml
    offset 4
      (reg:SI 7 r7 [ reml+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 49:
IN:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4 reml+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: reml
    offset 4
      (reg:SI 7 r7 [ reml+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: reml+4 __n+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: reml
    offset 4
      (reg:SI 7 r7 [ reml+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])


Basic block 50:
IN:
Stack adjustment: 176
Reg 6: __n+0
Reg 7: __n+4 reml+4
Reg 14: __left+0
Variables:
  name: __n
    offset 0
      (reg:SI 6 r6 [orig:377 __n ] [377])
    offset 4
      (reg:SI 7 r7 [ __n+4 ])
  name: reml
    offset 4
      (reg:SI 7 r7 [ reml+4 ])
  name: __left
    offset 0
      (reg/v:SI 14 lr [orig:160 __left ] [160])

OUT:
Stack adjustment: 176


Basic block 51:
IN:
Stack adjustment: 176
Reg 4: vdp+0
Reg 5: ret+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:178 ret ] [178])
  name: vdp
    offset 0
      (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])

OUT:
Stack adjustment: 176
Reg 4: vdp+0
Reg 5: ret+0
Variables:
  name: ret
    offset 0
      (reg/v:SI 5 r5 [orig:178 ret ] [178])
  name: vdp
    offset 0
      (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])


52 basic blocks, 77 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(8){ }d-1(9){ }d-1(10){ }d-1(11){ }d-1(13){ }d-1(14){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  kill	

Successors:  2 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  3 [28.0%]  (fallthru) 5 [72.0%] 
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 0 [r0]

Successors:  4 [50.0%]  (fallthru) 7 [50.0%] 
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 5 [r5] 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

Successors:  7 [100.0%] 
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  2 [72.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

Successors:  7 [50.0%]  6 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]


Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 3600, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

Successors:  7 [100.0%]  (fallthru)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 5 [50.0%]  3 [50.0%]  4 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  8 [50.0%]  (fallthru) 14 [50.0%] 
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  9 [29.0%]  (fallthru) 10 [71.0%] 
;; lr  out 	 12 [ip] 13 [sp]
;; live  out 	 12 [ip] 13 [sp]


Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1450, maybe hot.
Predecessors:  8 [29.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

Successors:  13 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 3550, maybe hot.
Predecessors:  8 [71.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  11 [39.0%]  (fallthru) 12 [61.0%] 
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 3333, maybe hot.
Predecessors:  10 [39.0%]  (fallthru) 14 [39.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

Successors:  13 [100.0%] 
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 4332, maybe hot.
Predecessors:  17 [71.0%]  10 [61.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

Successors:  13 [100.0%]  (fallthru)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 9115, maybe hot.
Predecessors:  12 [100.0%]  (fallthru) 9 [100.0%]  11 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

Successors:  51 [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  7 [50.0%] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  11 [39.0%]  15 [61.0%]  (fallthru)
;; lr  out 	 3 [r3] 13 [sp]
;; live  out 	 3 [r3] 13 [sp]


Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 3050, maybe hot.
Predecessors:  14 [61.0%]  (fallthru)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  16 [29.0%]  (fallthru) 17 [71.0%] 
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 884, maybe hot.
Predecessors:  15 [29.0%]  (fallthru)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

Successors:  17 [100.0%]  (fallthru)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 3050, maybe hot.
Predecessors:  15 [71.0%]  16 [100.0%]  (fallthru)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

Successors:  12 [71.0%]  18 [29.0%]  (fallthru)
;; lr  out 	 2 [r2] 13 [sp]
;; live  out 	 2 [r2] 13 [sp]


Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 884, maybe hot.
Predecessors:  17 [29.0%]  (fallthru)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 14 [lr]

Successors:  22 [50.0%]  19 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  18 [50.0%]  (fallthru)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  21 [71.0%]  20 [29.0%]  (fallthru)
;; lr  out 	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 128, maybe hot.
Predecessors:  19 [29.0%]  (fallthru)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  22 [50.0%]  21 [50.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  20 [50.0%]  (fallthru) 19 [71.0%] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

Successors:  36 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  18 [50.0%]  20 [50.0%] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 11 [fp] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

Successors:  24 [50.0%]  23 [50.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  22 [50.0%]  (fallthru)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

Successors:  25 [100.0%] 
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  22 [50.0%] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

Successors:  25 [100.0%]  (fallthru)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  24 [100.0%]  (fallthru) 23 [100.0%] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

Successors:  29 [50.0%]  26 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]


Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  25 [50.0%]  (fallthru)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  28 [71.0%]  27 [29.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 64, maybe hot.
Predecessors:  26 [29.0%]  (fallthru)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  29 [50.0%]  28 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  27 [50.0%]  (fallthru) 26 [71.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

Successors:  30 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  25 [50.0%]  27 [50.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

Successors:  30 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 442, maybe hot.
Predecessors:  29 [100.0%]  (fallthru) 28 [100.0%] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

Successors:  32 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]


Basic block 31 , prev 30, next 32, loop_depth 1, count 0, freq 4472, maybe hot.
Predecessors:  32 [21.0%] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 24 [cc]

Successors:  32 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]

Invalid sum of incoming frequencies 1032, should be 4472

Basic block 32 , prev 31, next 33, loop_depth 1, count 0, freq 4914, maybe hot.
Predecessors:  31 [100.0%]  (fallthru,dfs_back) 30 [100.0%] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  31 [21.0%]  33 [79.0%]  (fallthru,loop_exit)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]


Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 3882, maybe hot.
Predecessors:  32 [79.0%]  (fallthru,loop_exit)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  kill	

Successors:  35 [50.0%]  34 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  33 [50.0%]  (fallthru)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

Successors:  36 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 1941, should be 221

Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  33 [50.0%] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

Successors:  36 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 1941, should be 111

Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 884, maybe hot.
Predecessors:  21 [100.0%]  35 [100.0%]  (fallthru) 34 [100.0%] 
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

Successors:  50 [50.0%]  37 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 774, should be 884

Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 221, maybe hot.
Predecessors:  36 [50.0%]  (fallthru)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  50 [50.0%]  38 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 442, should be 221

Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  37 [50.0%]  (fallthru)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  40 [50.0%]  39 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 111, maybe hot.
Predecessors:  38 [50.0%]  (fallthru)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

Successors:  49 [50.0%]  40 [50.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 323, maybe hot.
Predecessors:  38 [50.0%]  39 [50.0%]  (fallthru)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

Successors:  44 [50.0%]  41 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]

Invalid sum of incoming frequencies 112, should be 323

Basic block 41 , prev 40, next 42, loop_depth 0, count 0, freq 162, maybe hot.
Predecessors:  40 [50.0%]  (fallthru)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

Successors:  43 [71.0%]  42 [29.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 47, maybe hot.
Predecessors:  41 [29.0%]  (fallthru)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

Successors:  44 [50.0%]  43 [50.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 162, maybe hot.
Predecessors:  42 [50.0%]  (fallthru) 41 [71.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

Successors:  45 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 162, maybe hot.
Predecessors:  40 [50.0%]  42 [50.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

Successors:  45 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 45 , prev 44, next 46, loop_depth 0, count 0, freq 323, maybe hot.
Predecessors:  44 [100.0%]  (fallthru) 43 [100.0%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

Successors:  47 [100.0%] 
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 46 , prev 45, next 47, loop_depth 1, count 0, freq 3264, maybe hot.
Predecessors:  47 [21.0%] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

Successors:  47 [100.0%]  (fallthru,dfs_back)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 753, should be 3264

Basic block 47 , prev 46, next 48, loop_depth 1, count 0, freq 3587, maybe hot.
Predecessors:  46 [100.0%]  (fallthru,dfs_back) 45 [100.0%] 
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

Successors:  46 [21.0%]  48 [79.0%]  (fallthru,loop_exit)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 48 , prev 47, next 49, loop_depth 0, count 0, freq 2834, maybe hot.
Predecessors:  47 [79.0%]  (fallthru,loop_exit)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 6 [r6]

Successors:  49 [100.0%]  (fallthru)
;; lr  out 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]


Basic block 49 , prev 48, next 50, loop_depth 0, count 0, freq 380, maybe hot.
Predecessors:  48 [100.0%]  (fallthru) 39 [50.0%] 
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

Successors:  50 [100.0%]  (fallthru)
;; lr  out 	 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 10 [sl] 11 [fp] 13 [sp]

Invalid sum of incoming frequencies 2890, should be 380

Basic block 50 , prev 49, next 51, loop_depth 0, count 0, freq 884, maybe hot.
Predecessors:  49 [100.0%]  (fallthru) 37 [50.0%]  36 [50.0%] 
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

Successors:  51 [100.0%]  (fallthru)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


Basic block 51 , prev 50, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  50 [100.0%]  (fallthru) 13 [100.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors:  EXIT [100.0%] 
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


Basic block 1 , prev 51, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  51 [100.0%] 
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(4){ }u-1(5){ }u-1(6){ }u-1(7){ }u-1(8){ }u-1(9){ }u-1(10){ }u-1(11){ }u-1(13){ }u-1(14){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

Successors: 
;; lr  out 	
;; live  out 	




vfp_double_fsqrt

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={42d,51u} r1={43d,42u} r2={39d,62u} r3={43d,56u} r4={30d,51u} r5={30d,35u} r6={12d,22u} r7={10d,15u} r8={15d,20u} r9={16d,20u} r10={14d,29u} r11={13d,18u} r12={17d,12u} r13={3d,149u,2d} r14={14d,8u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={61d,58u} r25={1d} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} 
;;    total ref usage 1823{1172d,648u,3e} in 355{348 regular + 7 call} insns.
(note 1 0 1072 NOTE_INSN_DELETED)

(note 1072 1 1073 2 ( dd (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [ dd ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1073 1072 1074 2 ( unused (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ unused ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1074 1073 1075 2 ( dm (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [ dm ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1075 1074 7 2 ( fpscr (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [ fpscr ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 13 [sp] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1075 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 7 6 2 NOTE_INSN_DELETED)

(note 6 4 18 2 NOTE_INSN_FUNCTION_BEG)

(note 18 6 20 2 NOTE_INSN_DELETED)

(note 20 18 21 2 NOTE_INSN_DELETED)

(note 21 20 24 2 NOTE_INSN_DELETED)

(note 24 21 28 2 NOTE_INSN_DELETED)

(note 28 24 32 2 NOTE_INSN_DELETED)

(note 32 28 33 2 NOTE_INSN_DELETED)

(note 33 32 34 2 NOTE_INSN_DELETED)

(note 34 33 36 2 NOTE_INSN_DELETED)

(note 36 34 37 2 NOTE_INSN_DELETED)

(note 37 36 40 2 NOTE_INSN_DELETED)

(note 40 37 41 2 NOTE_INSN_DELETED)

(note 41 40 43 2 NOTE_INSN_DELETED)

(note 43 41 44 2 NOTE_INSN_DELETED)

(note 44 43 45 2 NOTE_INSN_DELETED)

(note 45 44 54 2 NOTE_INSN_DELETED)

(note 54 45 55 2 NOTE_INSN_DELETED)

(note 55 54 56 2 NOTE_INSN_DELETED)

(note 56 55 1014 2 NOTE_INSN_DELETED)

(insn/f:TI 1014 56 1015 2 arch/arm/vfp/vfpdouble.c:269 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 11 fp))
            (use (reg:SI 14 lr))
        ]) 327 {*push_multi} (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 11 fp)
            (expr_list:REG_DEAD (reg:SI 10 sl)
                (expr_list:REG_DEAD (reg:SI 9 r9)
                    (expr_list:REG_DEAD (reg:SI 8 r8)
                        (expr_list:REG_DEAD (reg:SI 7 r7)
                            (expr_list:REG_DEAD (reg:SI 6 r6)
                                (expr_list:REG_DEAD (reg:SI 5 r5)
                                    (expr_list:REG_DEAD (reg:SI 4 r4)
                                        (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                                                    (set/f (reg/f:SI 13 sp)
                                                        (plus:SI (reg/f:SI 13 sp)
                                                            (const_int -36 [0xffffffffffffffdc])))
                                                    (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                                        (reg:SI 4 r4))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 4 [0x4])) [0 S4 A32])
                                                        (reg:SI 5 r5))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 8 [0x8])) [0 S4 A32])
                                                        (reg:SI 6 r6))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 12 [0xc])) [0 S4 A32])
                                                        (reg:SI 7 r7))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 16 [0x10])) [0 S4 A32])
                                                        (reg:SI 8 r8))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 20 [0x14])) [0 S4 A32])
                                                        (reg:SI 9 r9))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 24 [0x18])) [0 S4 A32])
                                                        (reg:SI 10 sl))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 28 [0x1c])) [0 S4 A32])
                                                        (reg:SI 11 fp))
                                                    (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                                                (const_int 32 [0x20])) [0 S4 A32])
                                                        (reg:SI 14 lr))
                                                ])
                                            (nil))))))))))))

(insn/f:TI 1015 1014 1016 2 arch/arm/vfp/vfpdouble.c:269 (set (reg/f:SI 13 sp)
        (plus:SI (reg/f:SI 13 sp)
            (const_int -140 [0xffffffffffffff74]))) 4 {*arm_addsi3} (nil))

(note 1016 1015 759 2 NOTE_INSN_PROLOGUE_END)

(insn:TI 759 1016 2 2 arch/arm/vfp/vfp.h:309 (set (reg:SI 4 r4 [208])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn:TI 2 759 9 2 arch/arm/vfp/vfpdouble.c:269 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 88 [0x58])) [0 %sfp+-48 S4 A32])
        (reg:SI 0 r0 [ dd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ dd ])
        (nil)))

(insn 9 2 1076 2 arch/arm/vfp/vfpdouble.c:273 (set (reg:SI 0 r0)
        (reg:SI 2 r2 [ dm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ dm ])
        (nil)))

(note 1076 9 5 2 ( dd (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 5 1076 10 2 arch/arm/vfp/vfpdouble.c:269 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 92 [0x5c])) [0 %sfp+-44 S4 A32])
        (reg:SI 3 r3 [ fpscr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ fpscr ])
        (nil)))

(call_insn 10 5 1079 2 arch/arm/vfp/vfpdouble.c:273 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_get_double") [flags 0x41] <function_decl 0x10a9d600 vfp_get_double>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 1079 10 1078 2 ( fpscr (nil)) NOTE_INSN_VAR_LOCATION)

(note 1078 1079 1077 2 ( dm (nil)) NOTE_INSN_VAR_LOCATION)

(note 1077 1078 1006 2 ( unused (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 1006 1077 1005 2 arch/arm/vfp/vfpdouble.c:273 (set (reg:SI 3 r3 [ D.4263+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 1005 1006 1008 2 arch/arm/vfp/vfpdouble.c:273 (set (reg:SI 2 r2 [orig:186 D.4263 ] [186])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn:TI 1008 1005 25 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 1 r1 [+4 ])
        (const_int -2147483648 [0xffffffff80000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 25 1008 27 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 0 r0 [orig:362+4 ] [362])
        (ashift:SI (reg:SI 3 r3 [ D.4263+4 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [ D.4263+4 ])
        (nil)))

(insn 27 25 1010 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 14 lr [361])
        (ashift:SI (reg:SI 2 r2 [orig:186 D.4263 ] [186])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 1010 27 26 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 5 r5 [+4 ])
        (and:SI (reg:SI 3 r3 [ D.4263+4 ])
            (reg:SI 1 r1 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 26 1010 22 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 0 r0 [orig:362+4 ] [362])
        (ior:SI (lshiftrt:SI (reg:SI 2 r2 [orig:186 D.4263 ] [186])
                (const_int 20 [0x14]))
            (reg:SI 0 r0 [orig:362+4 ] [362]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:186 D.4263 ] [186])
        (nil)))

(insn:TI 22 26 29 2 arch/arm/vfp/vfp.h:305 (set (reg:SI 1 r1 [orig:172 D.6135 ] [172])
        (zero_extract:SI (reg:SI 3 r3 [ D.4263+4 ])
            (const_int 11 [0xb])
            (const_int 20 [0x14]))) 124 {extzv_t2} (nil))

(insn 29 22 1080 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:173 significand ] [173])
        (lshiftrt:SI (reg:SI 14 lr [361])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [361])
        (nil)))

(note 1080 29 46 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 46 1080 30 2 arch/arm/vfp/vfp.h:309 (set (reg:CC_DNE 24 cc)
        (compare:CC_DNE (and:SI (ne:SI (reg:SI 1 r1 [orig:172 D.6135 ] [172])
                    (reg:SI 4 r4 [208]))
                (ne:SI (reg:SI 1 r1 [orig:172 D.6135 ] [172])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(insn 30 46 1081 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 2 r2 [orig:173 significand ] [173])
        (ior:SI (ashift:SI (reg:SI 0 r0 [orig:362+4 ] [362])
                (const_int 30 [0x1e]))
            (reg:SI 2 r2 [orig:173 significand ] [173]))) 270 {*arith_shiftsi} (nil))

(note 1081 30 31 2 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 31 1081 1082 2 arch/arm/vfp/vfp.h:308 (set (reg:SI 3 r3 [ significand+4 ])
        (lshiftrt:SI (reg:SI 0 r0 [orig:362+4 ] [362])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:362+4 ] [362])
        (nil)))

(note 1082 31 14 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:173 significand ] [173])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 14 1082 1001 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 12 ip [357])
        (lshiftrt:SI (reg:SI 5 r5 [+4 ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 1001 14 1002 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 4 r4 [216])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (nil))

(insn 1002 1001 758 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 5 r5 [+4 ])
            (const_int 1073741824 [0x40000000]))) 2345 {neon_vornv2di+78} (nil))

(insn:TI 758 1002 1003 2 arch/arm/vfp/vfp.h:330 (set (reg:SI 0 r0 [220])
        (const_int 2047 [0x7ff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2047 [0x7ff])
        (nil)))

(insn 1003 758 1083 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [orig:173 significand ] [173])
            (ior:SI (reg:SI 2 r2 [orig:173 significand ] [173])
                (reg:SI 4 r4 [216])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:SI 4 r4 [216])
        (nil)))

(note 1083 1003 1004 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:173 significand ] [173])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 1004 1083 1084 2 arch/arm/vfp/vfp.h:310 (cond_exec (ne (reg:CC_DNE 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [ significand+4 ])
            (ior:SI (reg:SI 3 r3 [ significand+4 ])
                (reg:SI 5 r5 [+4 ])))) 2310 {neon_vornv2di+43} (expr_list:REG_DEAD (reg:CC_DNE 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
            (nil))))

(note 1084 1004 58 2 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:173 significand ] [173])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 58 1084 16 2 arch/arm/vfp/vfp.h:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:172 D.6135 ] [172])
            (reg:SI 0 r0 [220]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [220])
        (nil)))

(insn:TI 16 58 23 2 arch/arm/vfp/vfp.h:304 (set (reg:SI 12 ip [orig:171 D.6138 ] [171])
        (zero_extend:SI (reg:HI 12 ip [357]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 23 16 17 2 arch/arm/vfp/vfp.h:305 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 120 [0x78])) [0 vdm.exponent+0 S2 A64])
        (reg:HI 1 r1 [orig:172 D.6135 ] [172])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 17 23 53 2 arch/arm/vfp/vfp.h:304 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 122 [0x7a])) [0 vdm.sign+0 S2 A16])
        (reg:HI 12 ip [orig:171 D.6138 ] [171])) 176 {*movhi_insn_arch4} (nil))

(insn:TI 53 17 59 2 arch/arm/vfp/vfp.h:311 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdm.significand+0 S8 A64])
        (reg/v:DI 2 r2 [orig:173 significand ] [173])) 163 {*arm_movdi} (nil))

(jump_insn 59 53 60 2 arch/arm/vfp/vfp.h:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  5 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 0 [r0]

;; Pred edge  2 [28.0%]  (fallthru)
(note 60 59 61 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 3 NOTE_INSN_DELETED)

(note 62 61 63 3 NOTE_INSN_DELETED)

(insn:TI 63 62 66 3 arch/arm/vfp/vfp.h:331 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:173 significand ] [173])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 0 r0))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:173 significand ] [173])
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil))))

(insn:TI 66 63 1085 3 arch/arm/vfp/vfp.h:332 (cond_exec (eq (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:177 tm ] [177])
            (const_int 8 [0x8]))) 2345 {neon_vornv2di+78} (nil))

(note 1085 66 1086 3 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:177 tm ] [177])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1086 1085 64 3 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 64 1086 70 3 arch/arm/vfp/vfp.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 5 [r5] 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 70 64 73 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 73 70 74 4 NOTE_INSN_DELETED)

(note 74 73 691 4 NOTE_INSN_DELETED)

(note 691 74 994 4 NOTE_INSN_DELETED)

(insn:TI 994 691 996 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 5 r5 [+4 ])
        (const_int 536870912 [0x20000000])) 167 {*arm_movsi_insn} (nil))

(insn:TI 996 994 1087 4 arch/arm/vfp/vfp.h:333 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [ significand+4 ])
            (reg:SI 5 r5 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(note 1087 996 997 4 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:173 significand ] [173])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 997 1087 998 4 arch/arm/vfp/vfp.h:336 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn:TI 998 997 1088 4 arch/arm/vfp/vfp.h:336 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:177 tm ] [177])
            (const_int 16 [0x10]))) 2345 {neon_vornv2di+78} (nil))

(note 1088 998 999 4 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 999 1088 1050 4 arch/arm/vfp/vfp.h:336 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:177 tm ] [177])
            (const_int 48 [0x30]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 1050 999 1051 4 (set (pc)
        (label_ref 107)) -1 (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 1051 1050 1089)

(note 1089 1051 1090 5 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(note 1090 1089 86 5 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:173 significand ] [173])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [72.0%] 
(code_label 86 1090 87 5 401 "" [1 uses])

(note 87 86 88 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn:TI 88 87 91 5 arch/arm/vfp/vfp.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:172 D.6135 ] [172])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:172 D.6135 ] [172])
        (nil)))

(insn:TI 91 88 1091 5 arch/arm/vfp/vfp.h:329 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:177 tm ] [177])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(note 1091 91 1092 5 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:177 tm ] [177])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1092 1091 89 5 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 89 1092 95 5 arch/arm/vfp/vfp.h:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 107)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  7 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 1 [r1]

;; Pred edge  5 [50.0%]  (fallthru)
(note 95 89 96 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 96 95 97 6 NOTE_INSN_DELETED)

(note 97 96 693 6 NOTE_INSN_DELETED)

(insn:TI 693 97 1093 6 arch/arm/vfp/vfp.h:341 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 2 r2 [orig:173 significand ] [173])
                        (reg:SI 3 r3 [ significand+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 1 r1))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 3 r3 [ significand+4 ])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:173 significand ] [173])
            (expr_list:REG_UNUSED (reg:SI 1 r1)
                (nil)))))

(note 1093 693 694 6 ( significand (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:173 significand ] [173])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 694 1093 1094 6 arch/arm/vfp/vfp.h:341 (set (reg/v:SI 3 r3 [orig:177 tm ] [177])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 5 [0x5]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

(note 1094 694 107 7 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 6 5 3 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [50.0%] 
;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%] 
(code_label 107 1094 108 7 403 "" [3 uses])

(note 108 107 109 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 109 108 110 7 NOTE_INSN_DELETED)

(insn:TI 110 109 111 7 arch/arm/vfp/vfpdouble.c:275 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 3 r3 [orig:177 tm ] [177])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn:TI 111 110 112 7 arch/arm/vfp/vfpdouble.c:275 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 171)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 8 14)
;; lr  out 	 3 [r3] 12 [ip] 13 [sp]
;; live  out 	 3 [r3] 12 [ip] 13 [sp]


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 12 [ip] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 112 111 113 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 113 112 114 8 NOTE_INSN_DELETED)

(insn:TI 114 113 115 8 arch/arm/vfp/vfpdouble.c:278 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:177 tm ] [177])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:177 tm ] [177])
        (nil)))

(jump_insn:TI 115 114 116 8 arch/arm/vfp/vfpdouble.c:278 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 129)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 12 [ip] 13 [sp]
;; live  out 	 12 [ip] 13 [sp]


;; Succ edge  9 [29.0%]  (fallthru)
;; Succ edge  10 [71.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  8 [29.0%]  (fallthru)
(note 116 115 118 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 118 116 117 9 NOTE_INSN_DELETED)

(insn:TI 117 118 122 9 arch/arm/vfp/vfpdouble.c:279 (set (reg/f:SI 4 r4 [228])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 104 [0x68]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (plus:SI (reg/f:SI 13 sp)
            (const_int 104 [0x68]))
        (nil)))

(insn 122 117 1095 9 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 3 r3)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 92 [0x5c])) [0 %sfp+-44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 1095 122 119 9 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 119 1095 120 9 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 0 r0)
        (reg/f:SI 4 r4 [228])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -32 [0xffffffffffffffe0]))
        (nil)))

(insn 120 119 121 9 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (nil))

(insn:TI 121 120 1096 9 arch/arm/vfp/vfpdouble.c:279 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1096 121 123 9 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(call_insn:TI 123 1096 124 9 arch/arm/vfp/vfpdouble.c:279 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_propagate_nan") [flags 0x3] <function_decl 0x10a9de80 vfp_propagate_nan>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn:TI 124 123 1097 9 arch/arm/vfp/vfpdouble.c:279 (set (reg/v:SI 5 r5 [orig:178 ret ] [178])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(note 1097 124 1052 9 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:178 ret ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 1052 1097 1053 9 (set (pc)
        (label_ref 143)) -1 (nil))
;; End of basic block 9 -> ( 13)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 1053 1052 1098)

(note 1098 1053 1099 10 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:177 tm ] [177])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1099 1098 1100 10 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(note 1100 1099 129 10 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 12 [ip] 13 [sp]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 12 [ip] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [71.0%] 
(code_label 129 1100 130 10 408 "" [1 uses])

(note 130 129 131 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn:TI 131 130 132 10 arch/arm/vfp/vfpdouble.c:280 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 12 ip [orig:171 D.6138 ] [171])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip [orig:171 D.6138 ] [171])
        (nil)))

(jump_insn:TI 132 131 173 10 arch/arm/vfp/vfpdouble.c:280 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 138)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  11 [39.0%]  (fallthru)
;; Succ edge  12 [61.0%] 

;; Start of basic block ( 10 14) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  10 [39.0%]  (fallthru)
;; Pred edge  14 [39.0%] 
(code_label 173 132 133 11 412 "" [1 uses])

(note 133 173 134 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn:TI 134 133 1101 11 arch/arm/vfp/vfpdouble.c:282 (set (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
        (plus:SI (reg/f:SI 13 sp)
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 13 sp)
            (const_int 120 [0x78]))
        (nil)))

(note 1101 134 135 11 ( vdp (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 135 1101 1102 11 arch/arm/vfp/vfpdouble.c:283 (set (reg/v:SI 5 r5 [orig:178 ret ] [178])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1102 135 1054 11 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:178 ret ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 1054 1102 1055 11 (set (pc)
        (label_ref 143)) -1 (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 1055 1054 1103)

(note 1103 1055 1104 12 ( vdp (nil)) NOTE_INSN_VAR_LOCATION)

(note 1104 1103 138 12 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 17 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  17 [71.0%] 
;; Pred edge  10 [61.0%] 
(code_label 138 1104 139 12 410 "" [2 uses])

(note 139 138 140 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn:TI 140 139 1105 12 arch/arm/vfp/vfpdouble.c:286 (set (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(note 1105 140 142 12 ( vdp (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 142 1105 1106 12 arch/arm/vfp/vfpdouble.c:287 (set (reg/v:SI 5 r5 [orig:178 ret ] [178])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru)

(note 1106 142 143 13 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:178 ret ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 12 9 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 143 1106 144 13 409 "" [2 uses])

(note 144 143 152 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 152 144 158 13 NOTE_INSN_DELETED)

(note 158 152 164 13 NOTE_INSN_DELETED)

(note 164 158 159 13 NOTE_INSN_DELETED)

(insn:TI 159 164 149 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 12 ip [orig:245 <variable>.significand ] [245])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
                (const_int 8 [0x8])) [0 <variable>.significand+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 149 159 151 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 6 r6 [234])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 151 149 1107 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 2 r2 [orig:236 <variable>.exponent ] [236])
        (sign_extend:SI (mem/s/j:HI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176]) [0 <variable>.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(note 1107 151 989 13 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn 989 1107 157 13 arch/arm/vfp/vfpdouble.c:289 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 6 r6 [239])
                        (reg:SI 6 r6 [238]))
                    (reg:SI 6 r6 [239])))
            (set (reg:SI 10 sl [239])
                (plus:SI (reg:SI 6 r6 [239])
                    (reg:SI 6 r6 [238])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn:TI 157 989 1108 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 3 r3 [orig:244 <variable>.significand+4 ] [244])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
                (const_int 12 [0xc])) [0 <variable>.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 1108 157 154 13 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 154 1108 146 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 8 r8 [238])
        (reg:SI 6 r6 [234])) 167 {*arm_movsi_insn} (nil))

(insn:TI 146 154 160 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 14 lr [orig:232 <variable>.sign ] [232])
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
                    (const_int 2 [0x2])) [0 <variable>.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 160 146 153 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 0 r0 [242])
        (lshiftrt:SI (reg:SI 12 ip [orig:245 <variable>.significand ] [245])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 12 ip [orig:245 <variable>.significand ] [245])
        (nil)))

(insn:TI 153 160 166 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 9 r9 [+4 ])
        (ashift:SI (reg:SI 2 r2 [orig:236 <variable>.exponent ] [236])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:236 <variable>.exponent ] [236])
        (nil)))

(insn 166 153 161 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 88 [0x58])) [0 %sfp+-48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 161 166 163 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 0 r0 [242])
        (ior:SI (ashift:SI (reg:SI 3 r3 [orig:244 <variable>.significand+4 ] [244])
                (const_int 22 [0x16]))
            (reg:SI 0 r0 [242]))) 270 {*arith_shiftsi} (nil))

(insn 163 161 148 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 1 r1 [+4 ])
        (lshiftrt:SI (reg:SI 3 r3 [orig:244 <variable>.significand+4 ] [244])
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:244 <variable>.significand+4 ] [244])
        (nil)))

(insn:TI 148 163 990 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 7 r7 [+4 ])
        (ashift:SI (reg:SI 14 lr [orig:232 <variable>.sign ] [232])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 14 lr [orig:232 <variable>.sign ] [232])
        (nil)))

(insn:TI 990 148 991 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 7 r7 [orig:11+4 ] [11])
                (reg:SI 9 r9 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 991 990 992 13 arch/arm/vfp/vfpdouble.c:289 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [242])
                        (reg:SI 10 sl [239]))
                    (reg:SI 0 r0 [242])))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0 [242])
                    (reg:SI 10 sl [239])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn:TI 992 991 167 13 arch/arm/vfp/vfpdouble.c:289 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(call_insn:TI 167 992 168 13 arch/arm/vfp/vfpdouble.c:289 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_put_double") [flags 0x41] <function_decl 0x10a9d680 vfp_put_double>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 168 167 1056 13 arch/arm/vfp/vfpdouble.c:290 (set (reg:SI 0 r0 [orig:184 D.4281 ] [184])
        (reg/v:SI 5 r5 [orig:178 ret ] [178])) 167 {*arm_movsi_insn} (nil))

(jump_insn 1056 168 1057 13 arch/arm/vfp/vfpdouble.c:290 (set (pc)
        (label_ref 582)) -1 (nil))
;; End of basic block 13 -> ( 51)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  51 [100.0%] 

(barrier 1057 1056 1109)

(note 1109 1057 1110 14 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:177 tm ] [177])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1110 1109 1111 14 ( vdp (nil)) NOTE_INSN_VAR_LOCATION)

(note 1111 1110 1112 14 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(note 1112 1111 171 14 ( ret (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 7) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 171 1112 172 14 407 "" [1 uses])

(note 172 171 174 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 174 172 175 14 NOTE_INSN_DELETED)

(insn:TI 175 174 176 14 arch/arm/vfp/vfpdouble.c:296 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:177 tm ] [177])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn:TI 176 175 177 14 arch/arm/vfp/vfpdouble.c:296 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 173)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 14 -> ( 11 15)
;; lr  out 	 3 [r3] 13 [sp]
;; live  out 	 3 [r3] 13 [sp]


;; Succ edge  11 [39.0%] 
;; Succ edge  15 [61.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [61.0%]  (fallthru)
(note 177 176 178 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 178 177 179 15 NOTE_INSN_DELETED)

(insn:TI 179 178 180 15 arch/arm/vfp/vfpdouble.c:302 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:177 tm ] [177])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:177 tm ] [177])
        (nil)))

(jump_insn:TI 180 179 181 15 arch/arm/vfp/vfpdouble.c:302 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 185)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  16 [29.0%]  (fallthru)
;; Succ edge  17 [71.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  15 [29.0%]  (fallthru)
(note 181 180 182 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 182 181 183 16 NOTE_INSN_DELETED)

(insn:TI 183 182 184 16 arch/arm/vfp/vfpdouble.c:303 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 120 [0x78]))) 4 {*arm_addsi3} (nil))

(call_insn:TI 184 183 1114 16 arch/arm/vfp/vfpdouble.c:303 (parallel [
            (call (mem:SI (symbol_ref:SI ("vfp_double_normalise_denormal") [flags 0x3] <function_decl 0x10a9dc80 vfp_double_normalise_denormal>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(note 1114 184 1113 16 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(note 1113 1114 1115 16 ( tm (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 16 -> ( 17)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru)

(note 1115 1113 1116 17 ( tm (expr_list:REG_DEP_TRUE (reg/v:SI 3 r3 [orig:177 tm ] [177])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1116 1115 185 17 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  15 [71.0%] 
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 185 1116 186 17 413 "" [1 uses])

(note 186 185 187 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn:TI 187 186 1117 17 arch/arm/vfp/vfpdouble.c:308 (set (reg:SI 2 r2 [orig:251 vdm.sign ] [251])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 122 [0x7a])) [0 vdm.sign+0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(note 1117 187 188 17 ( significand (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 188 1117 189 17 arch/arm/vfp/vfpdouble.c:308 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:251 vdm.sign ] [251])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 189 188 190 17 arch/arm/vfp/vfpdouble.c:308 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 138)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 17 -> ( 12 18)
;; lr  out 	 2 [r2] 13 [sp]
;; live  out 	 2 [r2] 13 [sp]


;; Succ edge  12 [71.0%] 
;; Succ edge  18 [29.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  17 [29.0%]  (fallthru)
(note 190 189 194 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 194 190 196 18 NOTE_INSN_DELETED)

(note 196 194 205 18 NOTE_INSN_DELETED)

(note 205 196 213 18 NOTE_INSN_DELETED)

(note 213 205 219 18 NOTE_INSN_DELETED)

(note 219 213 671 18 NOTE_INSN_DELETED)

(note 671 219 672 18 NOTE_INSN_DELETED)

(note 672 671 195 18 NOTE_INSN_DELETED)

(insn:TI 195 672 209 18 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 0 r0 [orig:254 D.4288 ] [254])
        (sign_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 120 [0x78])) [0 vdm.exponent+0 S2 A64]))) 155 {*arm_extendhisi2_v6} (nil))

(insn:TI 209 195 747 18 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 1 r1)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 132 [0x84])) [0 vdm.significand+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 747 209 1118 18 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 3 r3 [255])
        (plus:SI (reg:SI 0 r0 [orig:254 D.4288 ] [254])
            (const_int -1020 [0xfffffffffffffc04]))) 4 {*arm_addsi3} (nil))

(note 1118 747 193 18 ( tm (nil)) NOTE_INSN_VAR_LOCATION)

(insn 193 1118 748 18 arch/arm/vfp/vfpdouble.c:316 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 106 [0x6a])) [0 vdd.sign+0 S2 A16])
        (reg:HI 2 r2 [orig:251 vdm.sign ] [251])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 2 r2 [orig:251 vdm.sign ] [251])
        (nil)))

(insn:TI 748 193 198 18 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 3 r3 [255])
        (plus:SI (reg:SI 3 r3 [255])
            (const_int -3 [0xfffffffffffffffd]))) 4 {*arm_addsi3} (nil))

(insn:TI 198 748 200 18 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 3 r3 [257])
        (ashiftrt:SI (reg:SI 3 r3 [255])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 200 198 201 18 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 3 r3 [260])
        (plus:SI (reg:SI 3 r3 [257])
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn:TI 201 200 202 18 arch/arm/vfp/vfpdouble.c:317 (set (reg:SI 3 r3 [259])
        (plus:SI (reg:SI 3 r3 [260])
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (nil))

(insn 202 201 210 18 arch/arm/vfp/vfpdouble.c:317 (set (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 vdd.exponent+0 S2 A64])
        (reg:HI 3 r3 [259])) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 3 r3 [259])
        (nil)))

(call_insn:TI 210 202 217 18 arch/arm/vfp/vfpdouble.c:318 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_estimate_sqrt_significand") [flags 0x41] <function_decl 0x10a9da80 vfp_estimate_sqrt_significand>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 217 210 218 18 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 2 r2 [orig:268 vdm.exponent ] [268])
        (zero_extend:SI (mem/s/j/c:HI (plus:SI (reg/f:SI 13 sp)
                    (const_int 120 [0x78])) [0 vdm.exponent+0 S2 A64]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn:TI 218 217 224 18 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 2 r2 [269])
        (and:SI (reg:SI 2 r2 [orig:268 vdm.exponent ] [268])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn:TI 224 218 211 18 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 2 r2)
        (plus:SI (reg:SI 2 r2 [269])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn:TI 211 224 215 18 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 3 r3 [orig:182 D.4299 ] [182])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 215 211 223 18 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 11 fp [ D.4301+4 ])
        (lshiftrt:SI (reg:SI 0 r0 [orig:182 D.4299 ] [182])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:182 D.4299 ] [182])
        (nil)))

(insn:TI 223 215 216 18 arch/arm/vfp/vfpdouble.c:322 (set (reg:DI 0 r0)
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdm.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 216 223 225 18 arch/arm/vfp/vfpdouble.c:318 (set (reg:SI 10 sl [orig:181 D.4301 ] [181])
        (ashift:SI (reg:SI 3 r3 [orig:182 D.4299 ] [182])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:182 D.4299 ] [182])
        (nil)))

(call_insn/u 225 216 229 18 arch/arm/vfp/vfpdouble.c:322 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_llsr") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn:TI 229 225 1119 18 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [ D.4301+4 ])
            (reg:SI 1 r1 [orig:7 __n+4 ] [7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:7 __n+4 ] [7])
        (nil)))

(note 1119 229 674 18 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn 674 1119 1120 18 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 6 r6 [orig:377 __n ] [377])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(note 1120 674 675 18 ( __n (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 6 r6 [orig:377 __n ] [377])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [orig:7 __n+4 ] [7])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn:TI 675 1120 1122 18 arch/arm/vfp/vfpdouble.c:322 (set (reg:SI 7 r7 [ __n+4 ])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (nil))

(note 1122 675 1121 18 ( __n (expr_list:REG_DEP_TRUE (reg:DI 6 r6 [orig:377 __n ] [377])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1121 1122 228 18 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn 228 1121 230 18 arch/arm/vfp/vfpdouble.c:322 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdm.significand+0 S8 A64])
        (reg:DI 6 r6 [orig:377 __n ] [377])) 163 {*arm_movdi} (nil))

(jump_insn:TI 230 228 596 18 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 244)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 22 19)
;; lr  out 	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  22 [50.0%] 
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 596 230 232 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 232 596 597 19 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 657)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 19 -> ( 21 20)
;; lr  out 	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  21 [71.0%] 
;; Succ edge  20 [29.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 10 [sl] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [29.0%]  (fallthru)
(note 597 232 233 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn:TI 233 597 234 20 arch/arm/vfp/vfp.h:117 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 10 sl [orig:181 D.4301 ] [181])
            (reg:SI 0 r0 [orig:377 __n ] [377]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:377 __n ] [377])
        (nil)))

(jump_insn:TI 234 233 657 20 arch/arm/vfp/vfp.h:117 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 244)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 22 21)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  22 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
;; Pred edge  19 [71.0%] 
(code_label 657 234 240 21 445 "" [1 uses])

(note 240 657 977 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn:TI 977 240 1123 21 arch/arm/vfp/vfp.h:118 (set (reg:SI 0 r0 [orig:137 z.1257 ] [137])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(note 1123 977 978 21 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn 978 1123 1124 21 arch/arm/vfp/vfp.h:118 (set (reg:SI 1 r1 [ z.1257+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(note 1124 978 1058 21 ( z (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:137 z.1257 ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 1058 1124 1059 21 (set (pc)
        (label_ref 407)) -1 (nil))
;; End of basic block 21 -> ( 36)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  36 [100.0%] 

(barrier 1059 1058 1125)

(note 1125 1059 1126 22 ( __n (expr_list:REG_DEP_TRUE (reg:DI 6 r6 [orig:377 __n ] [377])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1126 1125 244 22 ( z (nil)) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 18 20) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 7 [r7] 11 [fp] 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  18 [50.0%] 
;; Pred edge  20 [50.0%] 
(code_label 244 1126 245 22 414 "" [2 uses])

(note 245 244 250 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn:TI 250 245 247 22 arch/arm/vfp/vfp.h:120 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [5])
            (reg:SI 7 r7 [ __n+4 ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 247 250 783 22 arch/arm/vfp/vfp.h:119 (set (reg:SI 4 r4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 783 247 784 22 arch/arm/vfp/vfp.h:119 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S4 A64])
        (reg:SI 11 fp [3])) 167 {*arm_movsi_insn} (nil))

(insn:TI 784 783 248 22 arch/arm/vfp/vfp.h:119 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-100 S4 A32])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn:TI 248 784 251 22 arch/arm/vfp/vfp.h:120 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-124 S4 A32])
        (reg:SI 11 fp [5])) 167 {*arm_movsi_insn} (nil))

(jump_insn 251 248 601 22 arch/arm/vfp/vfp.h:120 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 265)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 22 -> ( 24 23)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  24 [50.0%] 
;; Succ edge  23 [50.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  22 [50.0%]  (fallthru)
(note 601 251 973 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn:TI 973 601 974 23 arch/arm/vfp/vfp.h:121 (set (reg:SI 8 r8)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 974 973 786 23 arch/arm/vfp/vfp.h:121 (set (reg:SI 9 r9 [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 786 974 1060 23 arch/arm/vfp/vfp.h:121 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(jump_insn 1060 786 1061 23 (set (pc)
        (label_ref 273)) -1 (nil))
;; End of basic block 23 -> ( 25)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%] 

(barrier 1061 1060 265)

;; Start of basic block ( 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  22 [50.0%] 
(code_label 265 1061 266 24 417 "" [1 uses])

(note 266 265 677 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(note 677 266 788 24 NOTE_INSN_DELETED)

(insn:TI 788 677 1127 24 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 1127 788 971 24 ( __base (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [ __base ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 971 1127 1128 24 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg:SI 0 r0 [ __n ])
        (reg:SI 6 r6 [orig:377 __n ] [377])) 167 {*arm_movsi_insn} (nil))

(note 1128 971 972 24 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 972 1128 1129 24 arch/arm/vfp/vfp.h:124 discrim 1 (set (reg:SI 1 r1 [ __n+4 ])
        (reg:SI 7 r7 [ __n+4 ])) 167 {*arm_movsi_insn} (nil))

(note 1129 972 269 24 ( __n (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [ __n ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 269 1129 1131 24 arch/arm/vfp/vfp.h:124 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779402))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (expr_list:REG_UNUSED (reg:SI 3 r3)
                            (nil))))))))

(note 1131 269 1132 24 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(note 1132 1131 1130 24 ( __rem (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [ __rem ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1130 1132 790 24 ( __res (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [ __res ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 790 1130 1133 24 arch/arm/vfp/vfp.h:125 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-100 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 1133 790 789 24 ( __rem (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 789 1133 1134 24 arch/arm/vfp/vfp.h:125 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-116 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(note 1134 789 791 24 ( __res (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 791 1134 1135 24 arch/arm/vfp/vfp.h:125 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S4 A64])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))
;; End of basic block 24 -> ( 25)
;; lr  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  25 [100.0%]  (fallthru)

(note 1135 791 273 25 ( __n (expr_list:REG_DEP_TRUE (reg:DI 6 r6 [orig:377 __n ] [377])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 24 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%] 
(code_label 273 1135 274 25 419 "" [1 uses])

(note 274 273 291 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 291 274 792 25 NOTE_INSN_DELETED)

(insn:TI 792 291 794 25 arch/arm/vfp/vfp.h:86 (set (reg:SI 12 ip [371])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 %sfp+-116 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 794 792 1136 25 arch/arm/vfp/vfp.h:82 (set (reg/v:SI 14 lr [orig:160 __left ] [160])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 1136 794 793 25 ( __left (expr_list:REG_DEP_TRUE (reg/v:SI 14 lr [orig:160 __left ] [160])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 793 1136 1137 25 arch/arm/vfp/vfp.h:80 (set (reg:SI 0 r0 [orig:276 z.1250 ] [276])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S4 A64])) 167 {*arm_movsi_insn} (nil))

(note 1137 793 1138 25 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(note 1138 1137 302 25 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 302 1138 1139 25 arch/arm/vfp/vfp.h:86 (set (reg/v:DI 4 r4 [orig:162 rmb ] [162])
        (mult:DI (zero_extend:DI (reg:SI 12 ip [371]))
            (zero_extend:DI (reg:SI 10 sl [orig:275 D.4301 ] [275])))) 51 {*umulsidi3_v6} (nil))

(note 1139 302 1140 25 ( __base (nil)) NOTE_INSN_VAR_LOCATION)

(note 1140 1139 310 25 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 310 1140 282 25 arch/arm/vfp/vfp.h:89 (set (reg:DI 2 r2)
        (mult:DI (zero_extend:DI (reg:SI 12 ip [371]))
            (zero_extend:DI (reg/v:SI 14 lr [orig:160 __left ] [160])))) 51 {*umulsidi3_v6} (expr_list:REG_DEAD (reg:SI 12 ip [371])
        (nil)))

(insn:TI 282 310 795 25 arch/arm/vfp/vfp.h:80 (set (reg:DI 8 r8)
        (mult:DI (zero_extend:DI (reg:SI 0 r0 [orig:276 z.1250 ] [276]))
            (zero_extend:DI (reg:SI 10 sl [orig:275 D.4301 ] [275])))) 51 {*umulsidi3_v6} (nil))

(insn:TI 795 282 965 25 arch/arm/vfp/vfp.h:89 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 %sfp+-40 S8 A64])
        (reg:DI 2 r2)) 163 {*arm_movdi} (nil))

(insn 965 795 966 25 arch/arm/vfp/vfp.h:87 (set (reg:SI 2 r2)
        (reg:SI 4 r4 [orig:162 rmb ] [162])) 167 {*arm_movsi_insn} (nil))

(insn:TI 966 965 1141 25 arch/arm/vfp/vfp.h:87 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 5 r5 [ rmb+4 ])) 167 {*arm_movsi_insn} (nil))

(note 1141 966 306 25 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 306 1141 796 25 arch/arm/vfp/vfp.h:87 (set (reg:DI 2 r2)
        (plus:DI (mult:DI (zero_extend:DI (reg:SI 0 r0 [orig:276 z.1250 ] [276]))
                (zero_extend:DI (reg/v:SI 14 lr [orig:160 __left ] [160])))
            (reg:DI 2 r2))) 53 {*umulsidi3adddi_v6} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:276 z.1250 ] [276])
        (nil)))

(insn:TI 796 306 314 25 arch/arm/vfp/vfp.h:80 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-64 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))

(insn:TI 314 796 1142 25 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [ rmb+4 ])
            (reg:SI 3 r3 [orig:1 rma.1251+4 ] [1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ rmb+4 ])
        (expr_list:REG_DEAD (reg:SI 3 r3 [orig:1 rma.1251+4 ] [1])
            (nil))))

(note 1142 314 967 25 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn 967 1142 1143 25 arch/arm/vfp/vfp.h:87 (set (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (nil))

(note 1143 967 1144 25 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [orig:142 rma.1251 ] [142])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 3 r3 [orig:1 rma.1251+4 ] [1])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(note 1144 1143 968 25 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 968 1144 1146 25 arch/arm/vfp/vfp.h:87 (set (reg:SI 1 r1 [ rma.1251+4 ])
        (reg:SI 3 r3 [+4 ])) 167 {*arm_movsi_insn} (nil))

(note 1146 968 1145 25 ( rma (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:142 rma.1251 ] [142])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1145 1146 315 25 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 315 1145 606 25 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 329)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 25 -> ( 29 26)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  29 [50.0%] 
;; Succ edge  26 [50.0%]  (fallthru)

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  25 [50.0%]  (fallthru)
(note 606 315 317 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 317 606 607 26 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 659)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 26 -> ( 28 27)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  28 [71.0%] 
;; Succ edge  27 [29.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  26 [29.0%]  (fallthru)
(note 607 317 318 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn:TI 318 607 319 27 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:162 rmb ] [162])
            (reg:SI 2 r2 [orig:142 rma.1251 ] [142]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:162 rmb ] [162])
        (expr_list:REG_DEAD (reg:SI 2 r2 [orig:142 rma.1251 ] [142])
            (nil))))

(jump_insn:TI 319 318 659 27 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 329)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 29 28)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  29 [50.0%] 
;; Succ edge  28 [50.0%]  (fallthru)

;; Start of basic block ( 27 26) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
;; Pred edge  26 [71.0%] 
(code_label 659 319 325 28 447 "" [1 uses])

(note 325 659 963 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn:TI 963 325 1147 28 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 4 r4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1147 963 964 28 ( rmb (nil)) NOTE_INSN_VAR_LOCATION)

(insn 964 1147 1148 28 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1148 964 799 28 ( rmb (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 799 1148 1062 28 arch/arm/vfp/vfp.h:90 discrim 2 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])
        (reg:DI 4 r4)) 163 {*arm_movdi} (nil))

(jump_insn 1062 799 1063 28 (set (pc)
        (label_ref 332)) -1 (nil))
;; End of basic block 28 -> ( 30)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  30 [100.0%] 

(barrier 1063 1062 1149)

(note 1149 1063 329 29 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 25 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 8 [r8] 9 [r9]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 8 [r8] 9 [r9]
;; live  kill	

;; Pred edge  25 [50.0%] 
;; Pred edge  27 [50.0%] 
(code_label 329 1149 330 29 420 "" [2 uses])

(note 330 329 961 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn:TI 961 330 962 29 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 8 r8)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 962 961 800 29 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 9 r9 [+4 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn:TI 800 962 332 29 arch/arm/vfp/vfp.h:90 discrim 1 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])
        (reg:DI 8 r8)) 163 {*arm_movdi} (nil))
;; End of basic block 29 -> ( 30)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 29 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  28 [100.0%] 
(code_label 332 800 333 30 422 "" [1 uses])

(note 333 332 695 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 695 333 697 30 NOTE_INSN_DELETED)

(note 697 695 363 30 NOTE_INSN_DELETED)

(note 363 697 803 30 NOTE_INSN_DELETED)

(insn:TI 803 363 1150 30 arch/arm/vfp/vfp.h:92 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 %sfp+-108 S4 A32])
        (reg:SI 0 r0 [3])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [3])
        (nil)))

(note 1150 803 335 30 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 2 r2 [orig:142 rma.1251 ] [142])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 1 r1 [ rma.1251+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 335 1150 1151 30 arch/arm/vfp/vfp.h:92 (set (reg:SI 5 r5)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1151 335 805 30 ( rmb (expr_list:REG_DEP_TRUE (reg/v:DI 4 r4 [orig:162 rmb ] [162])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 805 1151 809 30 arch/arm/vfp/vfp.h:92 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-112 S4 A64])
        (reg:SI 5 r5)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5)
        (nil)))

(insn:TI 809 805 1152 30 arch/arm/vfp/vfp.h:93 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 %sfp+-112 S8 A64])) 163 {*arm_movdi} (nil))

(note 1152 809 804 30 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 804 1152 1153 30 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S4 A64])
        (reg:SI 1 r1 [4])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [4])
        (nil)))

(note 1153 804 807 30 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 807 1153 810 30 arch/arm/vfp/vfp.h:93 (set (reg:DI 0 r0)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-64 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 810 807 811 30 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 52 [0x34])) [0 %sfp+-84 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(insn:TI 811 810 1154 30 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(note 1154 811 945 30 ( rmb (nil)) NOTE_INSN_VAR_LOCATION)

(insn 945 1154 813 30 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0)
                        (reg:SI 2 r2))
                    (reg:SI 0 r0)))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 0 r0)
                    (reg:SI 2 r2)))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn:TI 813 945 946 30 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 8 r8)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 %sfp+-40 S8 A64])) 163 {*arm_movdi} (nil))

(insn 946 813 808 30 arch/arm/vfp/vfp.h:93 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 3 r3 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn:TI 808 946 947 30 arch/arm/vfp/vfp.h:93 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-80 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn:TI 947 808 815 30 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4)
                        (reg:SI 8 r8))
                    (reg:SI 4 r4)))
            (set (reg:SI 4 r4)
                (plus:SI (reg:SI 4 r4)
                    (reg:SI 8 r8)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 8 r8)
        (nil)))

(insn 815 947 948 30 arch/arm/vfp/vfp.h:129 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-92 S4 A32])
        (reg:SI 10 sl [1])) 167 {*arm_movsi_insn} (nil))

(insn:TI 948 815 696 30 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (reg:SI 9 r9 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
            (nil))))

(insn 696 948 949 30 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:SI 12 ip [378])
                (gtu:SI (reg:SI 3 r3)
                    (reg:SI 1 r1)))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn:TI 949 696 820 30 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4)
                        (reg:SI 12 ip [378]))
                    (reg:SI 4 r4)))
            (set (reg:SI 0 r0)
                (plus:SI (reg:SI 4 r4)
                    (reg:SI 12 ip [378])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 12 ip [378])
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (nil))))

(insn 820 949 950 30 arch/arm/vfp/vfp.h:129 (set (reg:SI 9 r9)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 950 820 814 30 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (const_int 0 [0x0])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
            (nil))))

(insn 814 950 818 30 arch/arm/vfp/vfp.h:90 discrim 3 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn:TI 818 814 955 30 arch/arm/vfp/vfp.h:62 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])) 163 {*arm_movdi} (nil))

(insn 955 818 816 30 arch/arm/vfp/vfp.h:62 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 816 955 956 30 arch/arm/vfp/vfp.h:62 (set (reg:DI 2 r2)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn 956 816 821 30 arch/arm/vfp/vfp.h:62 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 821 956 951 30 arch/arm/vfp/vfp.h:129 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S4 A64])
        (reg:SI 9 r9)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9)
        (nil)))

(insn:TI 951 821 826 30 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2)
                        (reg:SI 4 r4))
                    (reg:SI 2 r2)))
            (set (reg:SI 2 r2)
                (plus:SI (reg:SI 2 r2)
                    (reg:SI 4 r4)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn 826 951 952 30 arch/arm/vfp/vfp.h:62 (set (reg:DI 8 r8)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-80 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 952 826 957 30 arch/arm/vfp/vfp.h:62 (set (reg:SI 3 r3 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [+4 ])
                (reg:SI 5 r5 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
            (nil))))

(insn 957 952 958 30 arch/arm/vfp/vfp.h:62 (set (reg:SI 4 r4)
        (reg:SI 6 r6 [orig:377 __n ] [377])) 167 {*arm_movsi_insn} (nil))

(insn:TI 958 957 764 30 arch/arm/vfp/vfp.h:62 (set (reg:SI 5 r5 [+4 ])
        (reg:SI 7 r7 [ __n+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 764 958 357 30 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
        (reg:DI 10 sl [orig:181 D.4301 ] [181])) 163 {*arm_movdi} (nil))

(insn:TI 357 764 766 30 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:DI 0 r0)
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg:DI 0 r0)
                        (reg:DI 4 r4)
                        (reg:DI 8 r8)
                        (reg:DI 2 r2)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg:DI 4 r4)
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg:DI 0 r0)
                        (reg:DI 4 r4)
                        (reg:DI 8 r8)
                        (reg:DI 2 r2)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn:TI 766 357 959 30 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-80 S8 A64])
        (reg:DI 6 r6 [orig:377 __n ] [377])) 163 {*arm_movdi} (nil))

(insn 959 766 1155 30 (set (reg:SI 2 r2 [orig:155 remh ] [155])
        (reg:SI 4 r4)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(note 1155 959 825 30 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 825 1155 960 30 arch/arm/vfp/vfp.h:62 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 %sfp+-64 S8 A64])
        (reg:DI 4 r4)) 163 {*arm_movdi} (nil))

(insn 960 825 1156 30 (set (reg:SI 3 r3 [ remh+4 ])
        (reg:SI 5 r5 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(note 1156 960 823 30 ( remh (expr_list:REG_DEP_TRUE (reg:DI 2 r2 [orig:155 remh ] [155])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 823 1156 763 30 arch/arm/vfp/vfp.h:62 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])
        (reg:DI 0 r0)) 163 {*arm_movdi} (nil))

(insn 763 823 760 30 (set (reg/v:SI 4 r4 [orig:160 __left ] [160])
        (reg/v:SI 14 lr [orig:160 __left ] [160])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 14 lr [orig:160 __left ] [160])
        (nil)))

(insn:TI 760 763 1157 30 (set (reg/v:DI 8 r8 [orig:143 z.1250 ] [143])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S8 A64])) 163 {*arm_movdi} (nil))

(note 1157 760 765 30 ( z (expr_list:REG_DEP_TRUE (reg/v:DI 8 r8 [orig:143 z.1250 ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 765 1157 1064 30 (set (reg:SI 5 r5 [orig:346 D.6380+4 ] [346])
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-124 S4 A32])) 167 {*arm_movsi_insn} (nil))

(jump_insn 1064 765 1065 30 (set (pc)
        (label_ref 366)) -1 (nil))
;; End of basic block 30 -> ( 32)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]


;; Succ edge  32 [100.0%] 

(barrier 1065 1064 1158)

(note 1158 1065 1159 31 ( __left (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [orig:160 __left ] [160])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1159 1158 1160 31 ( reml (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:156 reml ] [156])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1160 1159 368 31 ( z (expr_list:REG_DEP_TRUE (reg:DI 8 r8 [orig:143 z.1250 ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 32) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  32 [21.0%] 
(code_label 368 1160 362 31 426 "" [1 uses])

(note 362 368 937 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn:TI 937 362 938 31 arch/arm/vfp/vfp.h:131 (set (reg:SI 10 sl)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 938 937 939 31 arch/arm/vfp/vfp.h:131 (set (reg:SI 11 fp [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 939 938 828 31 arch/arm/vfp/vfp.h:131 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8 [orig:143 z.1250 ] [143])
                        (reg:SI 10 sl))
                    (reg:SI 8 r8 [orig:143 z.1250 ] [143])))
            (set (reg:SI 8 r8 [orig:143 z.1250 ] [143])
                (plus:SI (reg:SI 8 r8 [orig:143 z.1250 ] [143])
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 828 939 1161 31 arch/arm/vfp/vfp.h:49 (set (reg:DI 6 r6)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(note 1161 828 940 31 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 940 1161 829 31 arch/arm/vfp/vfp.h:131 (set (reg:SI 9 r9 [ z.1250+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [ z.1250+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(insn 829 940 365 31 arch/arm/vfp/vfp.h:49 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 365 829 1162 31 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 0 r0 [orig:156 reml ] [156])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 0 r0 [orig:156 reml ] [156])
                        (reg/v:DI 2 r2 [orig:155 remh ] [155])
                        (reg:DI 6 r6)
                        (reg:DI 10 sl)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 2 r2 [orig:155 remh ] [155])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 0 r0 [orig:156 reml ] [156])
                        (reg/v:DI 2 r2 [orig:155 remh ] [155])
                        (reg:DI 6 r6)
                        (reg:DI 10 sl)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 31 -> ( 32)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]


;; Succ edge  32 [100.0%]  (fallthru,dfs_back)

(note 1162 365 366 32 ( __n (expr_list:REG_DEP_TRUE (reg:DI 6 r6 [orig:377 __n ] [377])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 31 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  31 [100.0%]  (fallthru,dfs_back)
;; Pred edge  30 [100.0%] 
(code_label 366 1162 367 32 425 "" [1 uses])

(note 367 366 369 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn:TI 369 367 370 32 arch/arm/vfp/vfp.h:130 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ remh+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 370 369 617 32 arch/arm/vfp/vfp.h:130 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 368)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 32 -> ( 31 33)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]


;; Succ edge  31 [21.0%] 
;; Succ edge  33 [79.0%]  (fallthru,loop_exit)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 14 [lr] 24 [cc]
;; live  kill	

;; Pred edge  32 [79.0%]  (fallthru,loop_exit)
(note 617 370 769 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn:TI 769 617 770 33 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 %sfp+-56 S8 A64])
        (reg/v:DI 0 r0 [orig:156 reml ] [156])) 163 {*arm_movdi} (nil))

(insn 770 769 832 33 (set (reg/v:SI 14 lr [orig:160 __left ] [160])
        (reg/v:SI 4 r4 [orig:160 __left ] [160])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 4 r4 [orig:160 __left ] [160])
        (nil)))

(insn:TI 832 770 834 33 arch/arm/vfp/vfp.h:134 (set (reg:SI 1 r1)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 84 [0x54])) [0 %sfp+-52 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 834 832 1163 33 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 %sfp+-92 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (nil)))

(note 1163 834 380 33 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn 380 1163 835 33 arch/arm/vfp/vfp.h:134 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 835 380 833 33 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 %sfp+-100 S4 A32])
        (reg:SI 2 r2)) 167 {*arm_movsi_insn} (nil))

(insn:TI 833 835 837 33 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S4 A64])
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil)))

(insn:TI 837 833 772 33 arch/arm/vfp/vfp.h:134 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S4 A64])
        (reg:SI 2 r2 [3])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [3])
        (nil)))

(insn:TI 772 837 838 33 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-124 S4 A32])
        (reg:SI 5 r5 [orig:346 D.6380+4 ] [346])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [orig:346 D.6380+4 ] [346])
        (nil)))

(insn:TI 838 772 1164 33 arch/arm/vfp/vfp.h:134 (set (reg/v:DI 0 r0 [orig:159 __n ] [159])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 %sfp+-104 S8 A64])) 163 {*arm_movdi} (nil))

(note 1164 838 1165 33 ( __n (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:159 __n ] [159])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1165 1164 839 33 ( reml (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 839 1165 1166 33 arch/arm/vfp/vfp.h:134 (set (reg:DI 4 r4)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(note 1166 839 767 33 ( __left (expr_list:REG_DEP_TRUE (reg/v:SI 14 lr [orig:160 __left ] [160])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 767 1166 936 33 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S8 A64])
        (reg/v:DI 8 r8 [orig:143 z.1250 ] [143])) 163 {*arm_movdi} (nil))

(insn:TI 936 767 1168 33 arch/arm/vfp/vfp.h:134 (set (reg:SI 1 r1 [ __n+4 ])
        (ior:SI (reg:SI 1 r1 [ __n+4 ])
            (reg:SI 5 r5 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(note 1168 936 1167 33 ( __n (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:159 __n ] [159])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1167 1168 840 33 ( __n (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:159 __n ] [159])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn 840 1167 771 33 arch/arm/vfp/vfp.h:135 (set (reg:SI 5 r5)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 %sfp+-124 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 771 840 935 33 (set (reg:DI 10 sl [orig:181 D.4301 ] [181])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn 935 771 1169 33 arch/arm/vfp/vfp.h:134 (set (reg:SI 0 r0 [orig:159 __n ] [159])
        (ior:SI (reg:SI 0 r0 [orig:159 __n ] [159])
            (reg:SI 4 r4))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(note 1169 935 384 33 ( __n (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:159 __n ] [159])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 384 1169 773 33 arch/arm/vfp/vfp.h:135 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5)
            (reg:SI 1 r1 [ __n+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5)
        (nil)))

(insn 773 384 1170 33 (set (reg:DI 6 r6 [orig:377 __n ] [377])
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 %sfp+-80 S8 A64])) 163 {*arm_movdi} (nil))

(note 1170 773 385 33 ( __n (expr_list:REG_DEP_TRUE (reg:DI 6 r6 [orig:377 __n ] [377])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 385 1170 621 33 arch/arm/vfp/vfp.h:135 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 400)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 33 -> ( 35 34)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  35 [50.0%] 
;; Succ edge  34 [50.0%]  (fallthru)

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  33 [50.0%]  (fallthru)
(note 621 385 927 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn:TI 927 621 928 34 arch/arm/vfp/vfp.h:136 (set (reg:SI 2 r2 [298])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 928 927 1171 34 arch/arm/vfp/vfp.h:136 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1171 928 931 34 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 931 1171 1172 34 arch/arm/vfp/vfp.h:136 (set (reg:SI 0 r0 [orig:137 z.1257 ] [137])
        (ior:SI (reg:SI 8 r8 [orig:137 z.1257 ] [137])
            (reg:SI 2 r2 [298]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:137 z.1257 ] [137])
        (expr_list:REG_DEAD (reg:SI 2 r2 [298])
            (nil))))

(note 1172 931 1173 34 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(note 1173 1172 932 34 ( z (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [orig:137 z.1257 ] [137])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 9 r9 [ z.1250+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 932 1173 1174 34 arch/arm/vfp/vfp.h:136 (set (reg:SI 1 r1 [ z.1257+4 ])
        (ior:SI (reg:SI 9 r9 [orig:1 z.1257+4 ] [1])
            (reg:SI 3 r3 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [orig:1 z.1257+4 ] [1])
        (expr_list:REG_DEAD (reg:SI 3 r3 [+4 ])
            (nil))))

(note 1174 932 1175 34 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(note 1175 1174 1066 34 ( z (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:137 z.1257 ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn 1066 1175 1067 34 (set (pc)
        (label_ref 407)) -1 (nil))
;; End of basic block 34 -> ( 36)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  36 [100.0%] 

(barrier 1067 1066 1176)

(note 1176 1067 1177 35 ( __n (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:159 __n ] [159])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1177 1176 1178 35 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(note 1178 1177 400 35 ( z (expr_list:REG_DEP_TRUE (reg:DI 8 r8 [orig:143 z.1250 ] [143])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 33) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9]
;; live  kill	 12 [ip] 14 [lr] 24 [cc]

;; Pred edge  33 [50.0%] 
(code_label 400 1178 401 35 428 "" [1 uses])

(note 401 400 405 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(note 405 401 842 35 NOTE_INSN_DELETED)

(insn:TI 842 405 1179 35 arch/arm/vfp/vfp.h:139 (set (reg:DI 8 r8)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 %sfp+-120 S8 A64])) 163 {*arm_movdi} (nil))

(note 1179 842 402 35 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn 402 1179 1180 35 arch/arm/vfp/vfp.h:138 discrim 1 (set (reg/v:SI 4 r4 [ __base ])
        (reg/v:SI 14 lr [orig:160 __left ] [160])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 14 lr [orig:160 __left ] [160])
        (nil)))

(note 1180 402 404 35 ( __base (expr_list:REG_DEP_TRUE (reg/v:SI 4 r4 [ __base ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 404 1180 1184 35 arch/arm/vfp/vfp.h:138 discrim 1 (parallel [
            (set (reg/v:SI 1 r1 [ __rem ])
                (asm_operands:SI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 0 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (set (reg/v:DI 2 r2 [ __res ])
                (asm_operands:DI (".ifnc %0,r1 ; .err ; .endif
	.ifnc %1,r2 ; .err ; .endif
	.ifnc %2,r0 ; .err ; .endif
	.ifnc %3,r4 ; .err ; .endif
	bl	__do_div64") ("=r") 1 [
                        (reg/v:DI 0 r0 [ __n ])
                        (reg/v:SI 4 r4 [ __base ])
                    ]
                     [
                        (asm_input:DI ("r") 0)
                        (asm_input:SI ("r") 0)
                    ] 1779457))
            (clobber (reg:QI 24 cc))
            (clobber (reg:QI 14 lr))
            (clobber (reg:QI 12 ip))
        ]) -1 (expr_list:REG_DEAD (reg/v:SI 4 r4 [ __base ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (expr_list:REG_UNUSED (reg:QI 14 lr)
                (expr_list:REG_UNUSED (reg:QI 12 ip)
                    (expr_list:REG_UNUSED (reg/v:SI 1 r1 [ __rem ])
                        (nil)))))))

(note 1184 404 1185 35 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(note 1185 1184 1183 35 ( __rem (expr_list:REG_DEP_TRUE (reg/v:SI 1 r1 [ __rem ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1183 1185 1182 35 ( __res (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [ __res ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1182 1183 1181 35 ( __left (nil)) NOTE_INSN_VAR_LOCATION)

(note 1181 1182 925 35 ( __n (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [ __n ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 925 1181 1186 35 arch/arm/vfp/vfp.h:139 (set (reg:SI 0 r0 [orig:137 z.1257 ] [137])
        (ior:SI (reg:SI 2 r2 [ __res ])
            (reg:SI 8 r8))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 8 r8)
        (expr_list:REG_DEAD (reg:SI 2 r2 [ __res ])
            (nil))))

(note 1186 925 1187 35 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(note 1187 1186 1188 35 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(note 1188 1187 926 35 ( z (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 0 r0 [orig:137 z.1257 ] [137])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 9 r9 [ z.1250+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 926 1188 1191 35 arch/arm/vfp/vfp.h:139 (set (reg:SI 1 r1 [ z.1257+4 ])
        (ior:SI (reg:SI 3 r3 [ __res+4 ])
            (reg:SI 9 r9 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (expr_list:REG_DEAD (reg:SI 3 r3 [ __res+4 ])
            (nil))))

(note 1191 926 1192 35 ( z (expr_list:REG_DEP_TRUE (reg:DI 0 r0 [orig:137 z.1257 ] [137])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1192 1191 1190 35 ( __rem (nil)) NOTE_INSN_VAR_LOCATION)

(note 1190 1192 1189 35 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(note 1189 1190 1193 35 ( __res (expr_list:REG_DEP_TRUE (reg/v:DI 2 r2 [ __res ])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)
;; End of basic block 35 -> ( 36)
;; lr  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  36 [100.0%]  (fallthru)

(note 1193 1189 407 36 ( __left (expr_list:REG_DEP_TRUE (reg/v:SI 14 lr [orig:160 __left ] [160])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 21 35 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  21 [100.0%] 
;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  34 [100.0%] 
(code_label 407 1193 408 36 416 "" [2 uses])

(note 408 407 914 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn:TI 914 408 1194 36 arch/arm/vfp/vfpdouble.c:323 (set (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(note 1194 914 915 36 ( __res (nil)) NOTE_INSN_VAR_LOCATION)

(insn 915 1194 1195 36 arch/arm/vfp/vfpdouble.c:323 (set (reg:SI 3 r3 [ ivtmp.1234+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1195 915 1196 36 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(note 1196 1195 916 36 ( __res (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 916 1196 921 36 arch/arm/vfp/vfpdouble.c:323 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                        (reg:SI 10 sl [orig:181 D.4301 ] [181]))
                    (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])))
            (set (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                    (reg:SI 10 sl [orig:181 D.4301 ] [181])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 921 916 917 36 arch/arm/vfp/vfpdouble.c:330 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 917 921 918 36 arch/arm/vfp/vfpdouble.c:323 (set (reg:SI 3 r3 [ ivtmp.1234+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [ ivtmp.1234+4 ])
                (reg:SI 11 fp [ D.4301+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 918 917 919 36 arch/arm/vfp/vfpdouble.c:323 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                        (reg:SI 0 r0 [orig:137 z.1257 ] [137]))
                    (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])))
            (set (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                    (reg:SI 0 r0 [orig:137 z.1257 ] [137])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:137 z.1257 ] [137])
        (nil)))

(insn:TI 919 918 920 36 arch/arm/vfp/vfpdouble.c:323 (set (reg:SI 3 r3 [ ivtmp.1234+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [ ivtmp.1234+4 ])
                (reg:SI 1 r1 [ z.1257+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [ z.1257+4 ])
            (nil))))

(insn 920 919 1197 36 arch/arm/vfp/vfpdouble.c:330 (set (reg:SI 4 r4 [302])
        (const_int 1023 [0x3ff])) 167 {*arm_movsi_insn} (nil))

(note 1197 920 924 36 ( __base (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 924 1197 1198 36 arch/arm/vfp/vfpdouble.c:330 (set (reg:SI 1 r1 [+4 ])
        (and:SI (reg:SI 3 r3 [ ivtmp.1234+4 ])
            (reg:SI 5 r5 [+4 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (nil)))

(note 1198 924 412 36 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(insn 412 1198 415 36 arch/arm/vfp/vfpdouble.c:323 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [orig:144 ivtmp.1234 ] [144])) 163 {*arm_movdi} (nil))

(insn:TI 415 412 923 36 arch/arm/vfp/vfpdouble.c:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 923 415 1199 36 arch/arm/vfp/vfpdouble.c:330 (set (reg:SI 0 r0 [301])
        (and:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
            (reg:SI 4 r4 [302]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [302])
        (nil)))

(note 1199 923 416 36 ( z (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 416 1199 627 36 arch/arm/vfp/vfpdouble.c:330 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 558)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36 -> ( 50 37)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  50 [50.0%] 
;; Succ edge  37 [50.0%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  36 [50.0%]  (fallthru)
(note 627 416 419 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn:TI 419 627 420 37 arch/arm/vfp/vfpdouble.c:330 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [301])
            (const_int 5 [0x5]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [301])
        (nil)))

(jump_insn:TI 420 419 628 37 arch/arm/vfp/vfpdouble.c:330 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 558)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 37 -> ( 50 38)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  50 [50.0%] 
;; Succ edge  38 [50.0%]  (fallthru)

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  37 [50.0%]  (fallthru)
(note 628 420 427 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn:TI 427 628 428 38 arch/arm/vfp/vfpdouble.c:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [ ivtmp.1234+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 428 427 632 38 arch/arm/vfp/vfpdouble.c:331 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 443)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 38 -> ( 40 39)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  40 [50.0%] 
;; Succ edge  39 [50.0%]  (fallthru)

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  38 [50.0%]  (fallthru)
(note 632 428 431 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn:TI 431 632 912 39 arch/arm/vfp/vfpdouble.c:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(insn:TI 912 431 913 39 arch/arm/vfp/vfpdouble.c:332 (cond_exec (leu (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 2 r2 [303])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(insn 913 912 432 39 arch/arm/vfp/vfpdouble.c:332 (cond_exec (leu (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 3 r3 [+4 ])
            (const_int -1 [0xffffffffffffffff]))) 2345 {neon_vornv2di+78} (nil))

(jump_insn:TI 432 913 443 39 arch/arm/vfp/vfpdouble.c:331 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 1022)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 39 -> ( 49 40)
;; lr  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  49 [50.0%] 
;; Succ edge  40 [50.0%]  (fallthru)

;; Start of basic block ( 38 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  in  	 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  38 [50.0%] 
;; Pred edge  39 [50.0%]  (fallthru)
(code_label 443 432 444 40 432 "" [1 uses])

(note 444 443 445 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(note 445 444 466 40 NOTE_INSN_DELETED)

(insn:TI 466 445 1200 40 arch/arm/vfp/vfp.h:83 (set (reg/v:DI 4 r4 [orig:150 rma ] [150])
        (mult:DI (zero_extend:DI (reg:SI 3 r3 [373]))
            (zero_extend:DI (reg:SI 2 r2 [orig:305 ivtmp.1234 ] [305])))) 51 {*umulsidi3_v6} (nil))

(note 1200 466 446 40 ( rma (expr_list:REG_DEP_TRUE (reg/v:DI 4 r4 [orig:150 rma ] [150])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 446 1200 474 40 arch/arm/vfp/vfpdouble.c:335 (set (reg:SI 1 r1 [ D.4317+4 ])
        (ashift:SI (reg:SI 7 r7 [ __n+4 ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 7 r7 [ __n+4 ])
        (nil)))

(insn:TI 474 446 910 40 arch/arm/vfp/vfp.h:89 (set (reg:DI 10 sl)
        (mult:DI (zero_extend:DI (reg:SI 3 r3 [373]))
            (zero_extend:DI (reg:SI 3 r3 [373])))) 51 {*umulsidi3_v6} (nil))

(insn:TI 910 474 1201 40 arch/arm/vfp/vfp.h:87 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [orig:136 rma.1258 ] [136])
                        (reg:SI 4 r4 [orig:150 rma ] [150]))
                    (reg:SI 4 r4 [orig:136 rma.1258 ] [136])))
            (set (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
                (plus:SI (reg:SI 4 r4 [orig:136 rma.1258 ] [136])
                    (reg:SI 4 r4 [orig:150 rma ] [150])))
        ]) 10 {*addsi3_compare_op1} (nil))

(note 1201 910 911 40 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 911 1201 1203 40 arch/arm/vfp/vfp.h:87 (set (reg:SI 9 r9 [ rma.1258+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [orig:9 rma.1258+4 ] [9])
                (reg:SI 5 r5 [ rma+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(note 1203 911 1202 40 ( rma (expr_list:REG_DEP_TRUE (reg:DI 8 r8 [orig:136 rma.1258 ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1202 1203 447 40 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 5 r5 [ rma+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 447 1202 478 40 arch/arm/vfp/vfpdouble.c:335 (set (reg:SI 1 r1 [ D.4317+4 ])
        (ior:SI (lshiftrt:SI (reg:SI 6 r6 [orig:377 __n ] [377])
                (const_int 30 [0x1e]))
            (reg:SI 1 r1 [ D.4317+4 ]))) 270 {*arith_shiftsi} (nil))

(insn:TI 478 447 448 40 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 5 r5 [ rma+4 ])
            (reg:SI 9 r9 [ rma.1258+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 5 r5 [ rma+4 ])
        (nil)))

(insn 448 478 449 40 arch/arm/vfp/vfpdouble.c:335 (set (reg:SI 0 r0 [orig:179 D.4317 ] [179])
        (ashift:SI (reg:SI 6 r6 [orig:377 __n ] [377])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 6 r6 [orig:377 __n ] [377])
        (nil)))

(insn:TI 449 448 844 40 arch/arm/vfp/vfpdouble.c:335 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 128 [0x80])) [0 vdm.significand+0 S8 A64])
        (reg:DI 0 r0 [orig:179 D.4317 ] [179])) 163 {*arm_movdi} (nil))

(insn:TI 844 449 455 40 arch/arm/vfp/vfp.h:89 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])
        (reg:DI 10 sl)) 163 {*arm_movdi} (nil))

(insn:TI 455 844 1204 40 arch/arm/vfp/vfp.h:80 (set (reg/v:DI 10 sl [orig:151 rl ] [151])
        (mult:DI (zero_extend:DI (reg:SI 2 r2 [orig:305 ivtmp.1234 ] [305]))
            (zero_extend:DI (reg:SI 2 r2 [orig:305 ivtmp.1234 ] [305])))) 51 {*umulsidi3_v6} (nil))

(note 1204 455 479 40 ( rl (expr_list:REG_DEP_TRUE (reg/v:DI 10 sl [orig:151 rl ] [151])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(jump_insn:TI 479 1204 636 40 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 493)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 40 -> ( 44 41)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]


;; Succ edge  44 [50.0%] 
;; Succ edge  41 [50.0%]  (fallthru)

;; Start of basic block ( 40) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  40 [50.0%]  (fallthru)
(note 636 479 481 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(jump_insn:TI 481 636 637 41 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 664)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 41 -> ( 43 42)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  43 [71.0%] 
;; Succ edge  42 [29.0%]  (fallthru)

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  41 [29.0%]  (fallthru)
(note 637 481 482 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn:TI 482 637 483 42 arch/arm/vfp/vfp.h:90 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 4 r4 [orig:150 rma ] [150])
            (reg:SI 8 r8 [orig:136 rma.1258 ] [136]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 4 r4 [orig:150 rma ] [150])
        (nil)))

(jump_insn:TI 483 482 664 42 arch/arm/vfp/vfp.h:90 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 493)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 42 -> ( 44 43)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  44 [50.0%] 
;; Succ edge  43 [50.0%]  (fallthru)

;; Start of basic block ( 42 41) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  42 [50.0%]  (fallthru)
;; Pred edge  41 [71.0%] 
(code_label 664 483 489 43 452 "" [1 uses])

(note 489 664 904 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn:TI 904 489 905 43 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 4 r4)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 905 904 845 43 arch/arm/vfp/vfp.h:90 discrim 2 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 845 905 1068 43 arch/arm/vfp/vfp.h:90 discrim 2 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
        (reg:DI 4 r4)) 163 {*arm_movdi} (nil))

(jump_insn 1068 845 1069 43 (set (pc)
        (label_ref 496)) -1 (nil))
;; End of basic block 43 -> ( 45)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  45 [100.0%] 

(barrier 1069 1068 1205)

(note 1205 1069 493 44 ( rma (expr_list:REG_DEP_TRUE (reg:DI 8 r8 [orig:136 rma.1258 ] [136])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 40 42) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6] 7 [r7]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6] 7 [r7]
;; live  kill	

;; Pred edge  40 [50.0%] 
;; Pred edge  42 [50.0%] 
(code_label 493 1205 494 44 434 "" [2 uses])

(note 494 493 902 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn:TI 902 494 1206 44 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 6 r6)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1206 902 903 44 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn 903 1206 1207 44 arch/arm/vfp/vfp.h:90 discrim 1 (set (reg:SI 7 r7 [+4 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 1207 903 846 44 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 846 1207 1208 44 arch/arm/vfp/vfp.h:90 discrim 1 (set (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])
        (reg:DI 6 r6)) 163 {*arm_movdi} (nil))
;; End of basic block 44 -> ( 45)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  45 [100.0%]  (fallthru)

(note 1208 846 496 45 ( __n (expr_list:REG_DEP_TRUE (reg:DI 6 r6 [orig:377 __n ] [377])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 44 43) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  44 [100.0%]  (fallthru)
;; Pred edge  43 [100.0%] 
(code_label 496 1208 497 45 436 "" [1 uses])

(note 497 496 698 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(note 698 497 700 45 NOTE_INSN_DELETED)

(note 700 698 533 45 NOTE_INSN_DELETED)

(note 533 700 499 45 NOTE_INSN_DELETED)

(insn:TI 499 533 1209 45 arch/arm/vfp/vfp.h:92 (set (reg:SI 4 r4 [orig:134 rma.1260 ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1209 499 498 45 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 4 r4 [orig:134 rma.1260 ] [134])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 9 r9 [ rma.1258+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 498 1209 1210 45 arch/arm/vfp/vfp.h:92 (set (reg:SI 5 r5 [ rma.1260+4 ])
        (reg:SI 8 r8 [orig:136 rma.1258 ] [136])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
        (nil)))

(note 1210 498 890 45 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 8 r8 [orig:136 rma.1258 ] [136])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 5 r5 [ rma.1260+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn:TI 890 1210 1211 45 arch/arm/vfp/vfp.h:93 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl [orig:133 rl.1261 ] [133])
                        (reg:SI 4 r4 [orig:134 rma.1260 ] [134]))
                    (reg:SI 10 sl [orig:133 rl.1261 ] [133])))
            (set (reg:SI 8 r8 [orig:133 rl.1261 ] [133])
                (plus:SI (reg:SI 10 sl [orig:133 rl.1261 ] [133])
                    (reg:SI 4 r4 [orig:134 rma.1260 ] [134])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 10 sl [orig:133 rl.1261 ] [133])
        (nil)))

(note 1211 890 501 45 ( rl (nil)) NOTE_INSN_VAR_LOCATION)

(insn 501 1211 1212 45 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 6 r6 [orig:316 rma.1260 ] [316])
        (reg:SI 9 r9 [ rma.1258+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 9 r9 [ rma.1258+4 ])
        (nil)))

(note 1212 501 1213 45 ( rma (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 6 r6 [orig:316 rma.1260 ] [316])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 9 r9 [ rma.1258+4 ])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(note 1213 1212 891 45 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 891 1213 1215 45 arch/arm/vfp/vfp.h:93 (set (reg:SI 9 r9 [ rl.1261+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [orig:9 rl.1261+4 ] [9])
                (reg:SI 5 r5 [ rma.1260+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [orig:9 rl.1261+4 ] [9])
            (nil))))

(note 1215 891 1214 45 ( rl (expr_list:REG_DEP_TRUE (reg:DI 8 r8 [orig:133 rl.1261 ] [133])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1214 1215 848 45 ( rl (parallel [
        (expr_list:REG_DEP_TRUE (reg:SI 8 r8 [orig:133 rl.1261 ] [133])
            (const_int 0 [0x0]))
        (expr_list:REG_DEP_TRUE (reg:SI 11 fp [orig:9 rl.1261+4 ] [9])
            (const_int 4 [0x4]))
    ])) NOTE_INSN_VAR_LOCATION)

(insn 848 1214 897 45 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 %sfp+-96 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 897 848 1216 45 arch/arm/vfp/vfp.h:62 (set (reg:SI 7 r7 [ reml+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1216 897 1217 45 ( reml (nil)) NOTE_INSN_VAR_LOCATION)

(note 1217 1216 892 45 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 892 1217 896 45 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl)
                        (reg:SI 6 r6 [orig:316 rma.1260 ] [316]))
                    (reg:SI 10 sl)))
            (set (reg:SI 10 sl)
                (plus:SI (reg:SI 10 sl)
                    (reg:SI 6 r6 [orig:316 rma.1260 ] [316])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 6 r6 [orig:316 rma.1260 ] [316])
        (nil)))

(insn 896 892 1218 45 arch/arm/vfp/vfp.h:62 (set (reg:SI 6 r6 [orig:174 reml ] [174])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1218 896 1219 45 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(note 1219 1218 893 45 ( reml (expr_list:REG_DEP_TRUE (reg:DI 6 r6 [orig:174 reml ] [174])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 893 1219 699 45 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (reg:SI 4 r4 [orig:7 rma.1260+4 ] [7])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 4 r4 [orig:7 rma.1260+4 ] [7])
            (nil))))

(insn 699 893 894 45 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:SI 12 ip [379])
                (gtu:SI (reg:SI 5 r5 [ rma.1260+4 ])
                    (reg:SI 9 r9 [ rl.1261+4 ])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (expr_list:REG_DEAD (reg:SI 5 r5 [ rma.1260+4 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn:TI 894 699 895 45 arch/arm/vfp/vfp.h:90 discrim 3 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 10 sl)
                        (reg:SI 12 ip [379]))
                    (reg:SI 10 sl)))
            (set (reg:SI 4 r4 [319])
                (plus:SI (reg:SI 10 sl)
                    (reg:SI 12 ip [379])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 12 ip [379])
        (expr_list:REG_DEAD (reg:SI 10 sl)
            (nil))))

(insn:TI 895 894 1220 45 arch/arm/vfp/vfp.h:90 discrim 3 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 11 fp [+4 ])
                (const_int 0 [0x0])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
            (nil))))

(note 1220 895 850 45 ( rma (nil)) NOTE_INSN_VAR_LOCATION)

(insn 850 1220 898 45 arch/arm/vfp/vfp.h:62 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 %sfp+-88 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 898 850 899 45 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 4 r4 [319])
                        (reg:SI 10 sl))
                    (reg:SI 4 r4 [319])))
            (set (reg:SI 4 r4 [319])
                (plus:SI (reg:SI 4 r4 [319])
                    (reg:SI 10 sl)))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn:TI 899 898 521 45 arch/arm/vfp/vfp.h:62 (set (reg:SI 5 r5 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 5 r5 [+4 ])
                (reg:SI 11 fp [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn:TI 521 899 1222 45 arch/arm/vfp/vfp.h:62 (parallel [
            (set (reg/v:DI 6 r6 [orig:174 reml ] [174])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 0 [
                        (reg/v:DI 6 r6 [orig:174 reml ] [174])
                        (reg/v:DI 0 r0 [orig:175 remh ] [175])
                        (reg/v:DI 8 r8 [orig:133 rl.1261 ] [133])
                        (reg:DI 4 r4 [319])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (set (reg/v:DI 0 r0 [orig:175 remh ] [175])
                (asm_operands:DI ("subs	%Q0, %Q2, %Q4
	sbcs	%R0, %R2, %R4
	sbcs	%Q1, %Q3, %Q5
	sbc	%R1, %R3, %R5
	") ("=r") 1 [
                        (reg/v:DI 6 r6 [orig:174 reml ] [174])
                        (reg/v:DI 0 r0 [orig:175 remh ] [175])
                        (reg/v:DI 8 r8 [orig:133 rl.1261 ] [133])
                        (reg:DI 4 r4 [319])
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1589763))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(note 1222 521 1221 45 ( reml (expr_list:REG_DEP_TRUE (reg/v:DI 6 r6 [orig:174 reml ] [174])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1221 1222 900 45 ( remh (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:175 remh ] [175])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(insn:TI 900 1221 1223 45 arch/arm/vfp/vfp.h:49 (set (reg:SI 8 r8 [381])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 1223 900 901 45 ( rl (nil)) NOTE_INSN_VAR_LOCATION)

(insn 901 1223 1224 45 arch/arm/vfp/vfp.h:49 (set (reg:SI 9 r9 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1224 901 1070 45 ( rl (nil)) NOTE_INSN_VAR_LOCATION)

(jump_insn 1070 1224 1071 45 arch/arm/vfp/vfpdouble.c:338 (set (pc)
        (label_ref 531)) -1 (nil))
;; End of basic block 45 -> ( 47)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  47 [100.0%] 

(barrier 1071 1070 1225)

(note 1225 1071 535 46 ( remh (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:175 remh ] [175])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 47) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  47 [21.0%] 
(code_label 535 1225 524 46 440 "" [1 uses])

(note 524 535 880 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn:TI 880 524 528 46 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [320])
                        (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144]))
                    (reg:SI 2 r2 [320])))
            (set (reg:SI 10 sl [320])
                (plus:SI (reg:SI 2 r2 [320])
                    (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])))
        ]) 10 {*addsi3_compare_op1} (nil))

(insn 528 880 881 46 arch/arm/vfp/vfp.h:49 (set (reg:SI 12 ip)
        (lshiftrt:SI (reg:SI 3 r3 [ ivtmp.1234+4 ])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 881 528 882 46 arch/arm/vfp/vfp.h:49 (set (reg:SI 11 fp [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [orig:11+4 ] [11])
                (reg:SI 3 r3 [ ivtmp.1234+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 882 881 852 46 arch/arm/vfp/vfp.h:49 (set (reg:SI 4 r4 [321])
        (ior:SI (reg:SI 10 sl [320])
            (reg:SI 8 r8 [381]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 10 sl [320])
        (nil)))

(insn:TI 852 882 529 46 arch/arm/vfp/vfp.h:49 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-72 S4 A64])
        (reg:SI 12 ip)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 12 ip)
        (nil)))

(insn 529 852 853 46 arch/arm/vfp/vfp.h:49 (set (reg:SI 10 sl)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 853 529 883 46 arch/arm/vfp/vfp.h:49 (set (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 %sfp+-68 S4 A32])
        (reg:SI 10 sl)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 10 sl)
        (nil)))

(insn 883 853 854 46 arch/arm/vfp/vfp.h:49 (set (reg:SI 5 r5 [+4 ])
        (ior:SI (reg:SI 11 fp [+4 ])
            (reg:SI 9 r9 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 11 fp [+4 ])
        (nil)))

(insn:TI 854 883 530 46 arch/arm/vfp/vfp.h:49 (set (reg:DI 10 sl)
        (mem/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 %sfp+-72 S8 A64])) 163 {*arm_movdi} (nil))

(insn:TI 530 854 1227 46 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg/v:DI 6 r6 [orig:174 reml ] [174])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 0 [
                        (reg/v:DI 6 r6 [orig:174 reml ] [174])
                        (reg/v:DI 0 r0 [orig:175 remh ] [175])
                        (reg:DI 4 r4 [321])
                        (reg:DI 10 sl)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (set (reg/v:DI 0 r0 [orig:175 remh ] [175])
                (asm_operands:DI ("adds	%Q0, %Q2, %Q4
	adcs	%R0, %R2, %R4
	adcs	%Q1, %Q3, %Q5
	adc	%R1, %R3, %R5") ("=r") 1 [
                        (reg/v:DI 6 r6 [orig:174 reml ] [174])
                        (reg/v:DI 0 r0 [orig:175 remh ] [175])
                        (reg:DI 4 r4 [321])
                        (reg:DI 10 sl)
                    ]
                     [
                        (asm_input:DI ("0") 0)
                        (asm_input:DI ("1") 0)
                        (asm_input:DI ("r") 0)
                        (asm_input:DI ("r") 0)
                    ] 1588099))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 46 -> ( 47)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  47 [100.0%]  (fallthru,dfs_back)

(note 1227 530 1226 47 ( reml (expr_list:REG_DEP_TRUE (reg/v:DI 6 r6 [orig:174 reml ] [174])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1226 1227 531 47 ( remh (expr_list:REG_DEP_TRUE (reg/v:DI 0 r0 [orig:175 remh ] [175])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 46 45) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  46 [100.0%]  (fallthru,dfs_back)
;; Pred edge  45 [100.0%] 
(code_label 531 1226 532 47 439 "" [1 uses])

(note 532 531 874 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn:TI 874 532 875 47 arch/arm/vfp/vfp.h:49 (set (reg:SI 4 r4)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 875 874 876 47 arch/arm/vfp/vfp.h:49 (set (reg:SI 5 r5 [+4 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn:TI 876 875 877 47 arch/arm/vfp/vfp.h:49 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                        (reg:SI 4 r4))
                    (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])))
            (set (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                (plus:SI (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
                    (reg:SI 4 r4)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 4 r4)
        (nil)))

(insn:TI 877 876 536 47 arch/arm/vfp/vfp.h:49 (set (reg:SI 3 r3 [ ivtmp.1234+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 3 r3 [ ivtmp.1234+4 ])
                (reg:SI 5 r5 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
            (nil))))

(insn 536 877 537 47 arch/arm/vfp/vfpdouble.c:338 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ remh+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn:TI 537 536 647 47 arch/arm/vfp/vfpdouble.c:338 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 535)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2100 [0x834])
            (nil))))
;; End of basic block 47 -> ( 46 48)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  46 [21.0%] 
;; Succ edge  48 [79.0%]  (fallthru,loop_exit)

;; Start of basic block ( 47) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	 6 [r6]

;; Pred edge  47 [79.0%]  (fallthru,loop_exit)
(note 647 537 548 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(note 548 647 549 48 NOTE_INSN_DELETED)

(note 549 548 870 48 NOTE_INSN_DELETED)

(insn:TI 870 549 871 48 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 8 r8 [327])
        (ior:SI (reg:SI 0 r0 [orig:175 remh ] [175])
            (reg:SI 6 r6 [orig:174 reml ] [174]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 6 r6 [orig:174 reml ] [174])
        (expr_list:REG_DEAD (reg:SI 0 r0 [orig:175 remh ] [175])
            (nil))))

(insn 871 870 550 48 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 9 r9 [+4 ])
        (ior:SI (reg:SI 1 r1 [ remh+4 ])
            (reg:SI 7 r7 [ reml+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 7 r7 [ reml+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [ remh+4 ])
            (nil))))

(insn:TI 550 871 1228 48 arch/arm/vfp/vfpdouble.c:344 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (ior:SI (reg:SI 8 r8 [327])
                        (reg:SI 9 r9 [+4 ]))
                    (const_int 0 [0x0])))
            (clobber (reg:SI 6 r6))
        ]) 92 {*iorsi3_compare0_scratch} (expr_list:REG_DEAD (reg:SI 9 r9 [+4 ])
        (expr_list:REG_DEAD (reg:SI 8 r8 [327])
            (expr_list:REG_UNUSED (reg:SI 6 r6)
                (nil)))))

(note 1228 550 862 48 ( reml (nil)) NOTE_INSN_VAR_LOCATION)

(insn 862 1228 1229 48 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 0 r0 [329])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(note 1229 862 872 48 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn:TI 872 1229 873 48 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 4 r4 [326])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 873 872 868 48 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 868 873 869 48 arch/arm/vfp/vfpdouble.c:344 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 4 r4 [326])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(insn 869 868 863 48 arch/arm/vfp/vfpdouble.c:344 (cond_exec (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 5 r5 [+4 ])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (nil)))

(insn:TI 863 869 1230 48 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 1 r1 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 1230 863 864 48 ( remh (nil)) NOTE_INSN_VAR_LOCATION)

(insn 864 1230 865 48 arch/arm/vfp/vfpdouble.c:344 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 0 r0 [329])
                        (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144]))
                    (reg:SI 0 r0 [329])))
            (set (reg:SI 0 r0 [329])
                (plus:SI (reg:SI 0 r0 [329])
                    (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 2 r2 [orig:144 ivtmp.1234 ] [144])
        (nil)))

(insn:TI 865 864 866 48 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 1 r1 [+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 1 r1 [+4 ])
                (reg:SI 3 r3 [ ivtmp.1234+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 3 r3 [ ivtmp.1234+4 ])
            (nil))))

(insn 866 865 867 48 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 2 r2 [331])
        (ior:SI (reg:SI 4 r4 [326])
            (reg:SI 0 r0 [329]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 4 r4 [326])
        (expr_list:REG_DEAD (reg:SI 0 r0 [329])
            (nil))))

(insn:TI 867 866 1231 48 arch/arm/vfp/vfpdouble.c:344 (set (reg:SI 3 r3 [+4 ])
        (ior:SI (reg:SI 5 r5 [+4 ])
            (reg:SI 1 r1 [+4 ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 5 r5 [+4 ])
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))
;; End of basic block 48 -> ( 49)
;; lr  out 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  49 [100.0%]  (fallthru)

(note 1231 867 1022 49 ( __n (expr_list:REG_DEP_TRUE (reg:DI 6 r6 [orig:377 __n ] [377])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 48 39) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 2 [r2] 3 [r3] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  48 [100.0%]  (fallthru)
;; Pred edge  39 [50.0%] 
(code_label 1022 1231 1020 49 454 "" [1 uses])

(note 1020 1022 557 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn:TI 557 1020 558 49 arch/arm/vfp/vfpdouble.c:344 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdd.significand+0 S8 A64])
        (reg:DI 2 r2 [331])) 163 {*arm_movdi} (nil))
;; End of basic block 49 -> ( 50)
;; lr  out 	 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  50 [100.0%]  (fallthru)

;; Start of basic block ( 49 37 36) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 12 [ip] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  49 [100.0%]  (fallthru)
;; Pred edge  37 [50.0%] 
;; Pred edge  36 [50.0%] 
(code_label 558 557 559 50 430 "" [2 uses])

(note 559 558 573 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(note 573 559 560 50 NOTE_INSN_DELETED)

(insn:TI 560 573 860 50 arch/arm/vfp/vfpdouble.c:347 (set (reg:DI 2 r2 [orig:180 D.4307 ] [180])
        (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdd.significand+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 860 560 756 50 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 4 r4 [332])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 756 860 861 50 arch/arm/vfp/vfpdouble.c:349 (set (reg/f:SI 12 ip [339])
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>)
        (nil)))

(insn 861 756 576 50 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 5 r5 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn:TI 576 861 562 50 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 0 r0)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 88 [0x58])) [0 %sfp+-48 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 562 576 566 50 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 1 r1 [orig:376+4 ] [376])
        (ashift:SI (reg:SI 2 r2 [orig:180 D.4307 ] [180])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn:TI 566 562 577 50 arch/arm/vfp/vfpdouble.c:347 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:376+4 ] [376])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [orig:376+4 ] [376])
        (nil)))

(insn 577 566 858 50 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 104 [0x68]))) 4 {*arm_addsi3} (nil))

(insn:TI 858 577 859 50 arch/arm/vfp/vfpdouble.c:347 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 4 r4 [332])
            (const_int 1 [0x1]))) 2345 {neon_vornv2di+78} (nil))

(insn 859 858 570 50 arch/arm/vfp/vfpdouble.c:347 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg:SI 5 r5 [+4 ])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn:TI 570 859 1232 50 arch/arm/vfp/vfpdouble.c:347 (parallel [
            (set (reg:DI 6 r6 [336])
                (lshiftrt:DI (reg:DI 2 r2 [orig:180 D.4307 ] [180])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 24 cc))
        ]) 114 {arm_lshrdi3_1bit} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(note 1232 570 578 50 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(insn 578 1232 579 50 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 2 r2)
        (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 92 [0x5c])) [0 %sfp+-44 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn:TI 579 578 856 50 arch/arm/vfp/vfpdouble.c:349 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 856 579 857 50 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 8 r8 [337])
        (ior:SI (reg:SI 4 r4 [332])
            (reg:SI 6 r6 [336]))) 89 {*arm_iorsi3} (nil))

(insn:TI 857 856 1234 50 arch/arm/vfp/vfpdouble.c:347 (set (reg:SI 9 r9 [+4 ])
        (ior:SI (reg:SI 5 r5 [+4 ])
            (reg:SI 7 r7 [+4 ]))) 89 {*arm_iorsi3} (nil))

(note 1234 857 1233 50 ( __n (nil)) NOTE_INSN_VAR_LOCATION)

(note 1233 1234 575 50 ( reml (nil)) NOTE_INSN_VAR_LOCATION)

(insn 575 1233 572 50 arch/arm/vfp/vfpdouble.c:349 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [339])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [339])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x10eedd20>)
            (nil))))

(insn:TI 572 575 580 50 arch/arm/vfp/vfpdouble.c:347 (set (mem/s/j/c:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 vdd.significand+0 S8 A64])
        (reg:DI 8 r8 [337])) 163 {*arm_movdi} (nil))

(call_insn 580 572 1235 50 arch/arm/vfp/vfpdouble.c:349 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("vfp_double_normaliseround") [flags 0x3] <function_decl 0x10a9da00 vfp_double_normaliseround>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(note 1235 580 1236 50 ( __left (nil)) NOTE_INSN_VAR_LOCATION)
;; End of basic block 50 -> ( 51)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  51 [100.0%]  (fallthru)

(note 1236 1235 1237 51 ( vdp (expr_list:REG_DEP_TRUE (reg/v/f:SI 4 r4 [orig:176 vdp ] [176])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

(note 1237 1236 582 51 ( ret (expr_list:REG_DEP_TRUE (reg/v:SI 5 r5 [orig:178 ret ] [178])
    (const_int 0 [0x0]))) NOTE_INSN_VAR_LOCATION)

;; Start of basic block ( 50 13) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  50 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%] 
(code_label 582 1237 583 51 411 "" [1 uses])

(note 583 582 594 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 594 583 1017 51 arch/arm/vfp/vfpdouble.c:350 (use (reg/i:SI 0 r0)) -1 (nil))

(note 1017 594 1018 51 NOTE_INSN_EPILOGUE_BEG)

(jump_insn:TI 1018 1017 1019 51 arch/arm/vfp/vfpdouble.c:350 (unspec_volatile [
            (return)
        ] 1) 323 {*epilogue_insns} (nil))
;; End of basic block 51 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 1019 1018 755)

(note 755 1019 780 NOTE_INSN_DELETED)

(note 780 755 0 NOTE_INSN_DELETED)

