
;; Function dma_supported (dma_supported)[0:1293]

Deleted 1 trivially dead insns

8 basic blocks, 10 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  8 [50.0%]  4 [50.0%]  (fallthru)

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
Successors:  9 [50.0%]  5 [50.0%]  (fallthru)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
Successors:  8 [50.0%]  6 [50.0%]  (fallthru)

Basic block 6 , prev 5, next 8, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
Successors:  9 [100.0%]  (fallthru)

Basic block 8 , prev 6, next 9, loop_depth 0, count 0, freq 6250, maybe hot.
Predecessors:  2 [50.0%]  5 [50.0%] 
Successors:  9 [100.0%]  (fallthru)

Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 10001, maybe hot.
Predecessors:  4 [50.0%]  6 [100.0%]  (fallthru) 8 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

Fallthru edge 2->4 redirected to 4
Conditionals threaded.
Jump threading proved probability of edge 3->4 too small (it is 5000, should be 10000).
Deleting block 3.
deleting block 3


try_optimize_cfg iteration 2

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/mm/dma-mapping.c:678 (set (reg/v:DI 135 [ mask ])
        (reg:DI 2 r2 [ mask ])) 163 {*arm_movdi} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/mm/dma-mapping.c:682 (set (reg:SI 136)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/mm/dma-mapping.c:682 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 135 [ mask ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 34 2 arch/arm/mm/dma-mapping.c:682 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 6 4)

;; Succ edge  6 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; Pred edge  2 [50.0%]  (fallthru)
(note 34 9 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 12 34 13 4 arch/arm/mm/dma-mapping.c:682 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 135 [ mask ]) 0)
            (const_int -2 [0xfffffffffffffffe]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 35 4 arch/arm/mm/dma-mapping.c:682 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 6 5)

;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [50.0%]  (fallthru)
(note 35 13 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 14 35 18 5 arch/arm/mm/dma-mapping.c:682 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 135 [ mask ]) 0)
            (const_int -2 [0xfffffffffffffffe]))) 219 {*arm_cmpsi_insn} (nil))
;; End of basic block 5 -> ( 7)

;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2 4) -> 6
;; Pred edge  2 [50.0%] 
;; Pred edge  4 [50.0%] 
(code_label 18 14 37 6 3 "" [2 uses])

(note 37 18 19 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 19 37 20 6 arch/arm/mm/dma-mapping.c:682 (set (reg:SI 136)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 20 19 38 7 2 "" [0 uses])

(note 38 20 21 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 21 38 25 7 arch/arm/mm/dma-mapping.c:682 (set (reg:SI 133 [ <result> ])
        (reg:SI 136)) 167 {*arm_movsi_insn} (nil))

(insn 25 21 31 7 arch/arm/mm/dma-mapping.c:682 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 31 25 0 7 arch/arm/mm/dma-mapping.c:682 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function dma_set_mask (dma_set_mask)[0:1294]


10 basic blocks, 13 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  10 [80.9%]  4 [19.1%]  (fallthru)

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 1910, maybe hot.
Predecessors:  2 [19.1%]  (fallthru)
Successors:  12 [50.0%]  5 [50.0%]  (fallthru)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 955, maybe hot.
Predecessors:  4 [50.0%]  (fallthru)
Successors:  10 [50.0%]  6 [50.0%]  (fallthru)

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 478, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
Successors:  12 [50.0%]  7 [50.0%]  (fallthru)

Basic block 7 , prev 6, next 10, loop_depth 0, count 0, freq 239, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
Successors:  10 [100.0%]  (fallthru)

Basic block 10 , prev 7, next 11, loop_depth 0, count 0, freq 9045, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 2 [80.9%]  5 [50.0%] 
Successors:  11 [100.0%]  (fallthru)
Invalid sum of incoming frequencies 8807, should be 9045

Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 12 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 12 , prev 11, next 1, loop_depth 0, count 0, freq 955, maybe hot.
Predecessors:  4 [50.0%]  6 [50.0%] 
Successors:  11 [100.0%]  (fallthru)
Invalid sum of incoming frequencies 1194, should be 955

Basic block 1 , prev 12, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  11 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

Fallthru edge 3->5 redirected to 5
Conditionals threaded.
Jump threading proved probability of edge 4->5 too small (it is 5000, should be 10000).
Deleting block 4.
deleting block 4


try_optimize_cfg iteration 2

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/mm/dma-mapping.c:686 (set (reg/v/f:SI 136 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:686 (set (reg/v:DI 137 [ dma_mask ])
        (reg:DI 2 r2 [ dma_mask ])) 163 {*arm_movdi} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/mm/dma-mapping.c:687 (set (reg/f:SI 134 [ D.24963 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ dev ])
                (const_int 276 [0x114])) [0 <variable>.dma_mask+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/mm/dma-mapping.c:687 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.24963 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/mm/dma-mapping.c:687 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8090 [0x1f9a])
        (nil)))
;; End of basic block 2 -> ( 7 3)

;; Succ edge  7 [80.9%] 
;; Succ edge  3 [19.1%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [19.1%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/mm/dma-mapping.c:679 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 137 [ dma_mask ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 46 3 arch/arm/mm/dma-mapping.c:679 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 9 5)

;; Succ edge  9 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [50.0%]  (fallthru)
(note 46 12 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 15 46 16 5 arch/arm/mm/dma-mapping.c:679 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 137 [ dma_mask ]) 0)
            (const_int -2 [0xfffffffffffffffe]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 47 5 arch/arm/mm/dma-mapping.c:679 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 9 6)

;; Succ edge  9 [50.0%] 
;; Succ edge  6 [50.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [50.0%]  (fallthru)
(note 47 16 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 17 47 22 6 arch/arm/mm/dma-mapping.c:679 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 137 [ dma_mask ]) 0)
            (const_int -2 [0xfffffffffffffffe]))) 219 {*arm_cmpsi_insn} (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 2) -> 7
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  2 [80.9%] 
(code_label 22 17 23 7 7 "" [1 uses])

(note 23 22 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 33 7 arch/arm/mm/dma-mapping.c:688 (set (reg:SI 133 [ D.24966 ])
        (const_int -5 [0xfffffffffffffffb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 9) -> 8
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 33 24 25 8 10 "" [0 uses])

(note 25 33 26 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 37 8 arch/arm/mm/dma-mapping.c:695 (set (reg:SI 135 [ <result> ])
        (reg:SI 133 [ D.24966 ])) 167 {*arm_movsi_insn} (nil))

(insn 37 26 43 8 arch/arm/mm/dma-mapping.c:695 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 43 37 29 8 arch/arm/mm/dma-mapping.c:695 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 3 5) -> 9
;; Pred edge  3 [50.0%] 
;; Pred edge  5 [50.0%] 
(code_label 29 43 30 9 8 "" [2 uses])

(note 30 29 31 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 9 arch/arm/mm/dma-mapping.c:691 (set (mem:DI (reg/f:SI 134 [ D.24963 ]) [0 S8 A64])
        (reg/v:DI 137 [ dma_mask ])) 163 {*arm_movdi} (nil))

(insn 32 31 0 9 arch/arm/mm/dma-mapping.c:694 (set (reg:SI 133 [ D.24966 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)


;; Function dma_debug_do_init (dma_debug_do_init)[0:1295] (unlikely executed)


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 9 2 arch/arm/mm/dma-mapping.c:704 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 9 5 15 2 arch/arm/mm/dma-mapping.c:704 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 15 9 0 2 arch/arm/mm/dma-mapping.c:704 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function consistent_init (consistent_init)[0:1274] (unlikely executed)


14 basic blocks, 19 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1439, probably never executed.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 1439, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [100.0%]  (fallthru)

Basic block 4 , prev 2, next 5, loop_depth 1, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  (fallthru) 12 [85.7%]  (dfs_back)
Successors:  5 [0.0%]  (fallthru) 6 [100.0%] 

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  4 [0.0%]  (fallthru)
Successors:  14 [100.0%]  (fallthru)

Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 9996, probably never executed.
Predecessors:  4 [100.0%] 
Successors:  7 [0.0%]  (fallthru) 8 [100.0%] 

Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 4, probably never executed.
Predecessors:  6 [0.0%]  (fallthru)
Successors:  8 [100.0%]  (fallthru)

Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 9992, probably never executed.
Predecessors:  6 [100.0%]  7 [100.0%]  (fallthru)
Successors:  10 [100.0%]  9 [0.0%]  (fallthru)

Basic block 9 , prev 8, next 10, loop_depth 1, count 0, freq 4, probably never executed.
Predecessors:  8 [0.0%]  (fallthru)
Successors:  10 [50.0%]  (fallthru) 11 [50.0%] 

Basic block 10 , prev 9, next 11, loop_depth 1, count 0, freq 9990, probably never executed.
Predecessors:  8 [100.0%]  9 [50.0%]  (fallthru)
Successors:  11 [0.0%]  (fallthru) 12 [100.0%] 

Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  10 [0.0%]  (fallthru) 9 [50.0%] 
Successors:  14 [100.0%]  (fallthru)

Basic block 12 , prev 11, next 13, loop_depth 1, count 0, freq 9988, probably never executed.
Predecessors:  10 [100.0%] 
Successors:  4 [85.7%]  (dfs_back) 13 [14.3%]  (fallthru)

Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 1427, probably never executed.
Predecessors:  12 [14.3%]  (fallthru)
Successors:  14 [100.0%]  (fallthru)

Basic block 14 , prev 13, next 1, loop_depth 0, count 0, freq 1439, probably never executed.
Predecessors:  5 [100.0%]  (fallthru) 13 [100.0%]  (fallthru) 11 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 14, loop_depth 0, count 0, freq 1439, probably never executed.
Predecessors:  14 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 36 0 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 35 36 38 2 NOTE_INSN_FUNCTION_BEG)

(insn 38 35 39 2 arch/arm/mm/dma-mapping.c:151 (set (reg:SI 166 [ ivtmp.521 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 109 2 arch/arm/mm/dma-mapping.c:158 (set (reg/v:SI 167 [ base ])
        (const_int -16777216 [0xffffffffff000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 11) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  11 [85.7%]  (dfs_back)
(code_label 109 39 40 3 21 "" [1 uses])

(note 40 109 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 3 arch/arm/mm/dma-mapping.c:161 (set (reg/f:SI 174)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x113e8c00 init_mm>)) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 3 arch/arm/mm/dma-mapping.c:161 (set (reg:SI 175)
        (lshiftrt:SI (reg/v:SI 167 [ base ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 43 42 44 3 arch/arm/mm/dma-mapping.c:161 (set (reg:SI 176)
        (ashift:SI (reg:SI 175)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 44 43 45 3 arch/arm/mm/dma-mapping.c:161 (set (reg:SI 177)
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 174)
                (const_int 36 [0x24])) [0 init_mm.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 3 arch/arm/mm/dma-mapping.c:161 (set (reg/v/f:SI 170 [ pgd ])
        (plus:SI (reg:SI 177)
            (reg:SI 176))) 4 {*arm_addsi3} (nil))

(insn 46 45 47 3 arch/arm/mm/dma-mapping.c:164 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 170 [ pgd ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 47 46 48 3 arch/arm/mm/dma-mapping.c:164 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [0.0%]  (fallthru)
(note 48 47 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 4 arch/arm/mm/dma-mapping.c:165 (set (reg:SI 178)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114c1c90>)) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 4 arch/arm/mm/dma-mapping.c:165 (set (reg/f:SI 179)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 4 arch/arm/mm/dma-mapping.c:165 (set (reg:SI 0 r0)
        (reg:SI 178)) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 4 arch/arm/mm/dma-mapping.c:165 (set (reg:SI 1 r1)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (nil))

(call_insn 53 52 54 4 arch/arm/mm/dma-mapping.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 54 53 57 4 arch/arm/mm/dma-mapping.c:166 (set (reg/v:SI 171 [ ret ])
        (const_int -12 [0xfffffffffffffff4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 57 54 58 5 15 "" [1 uses])

(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 5 arch/arm/mm/dma-mapping.c:170 (set (reg/v/f:SI 169 [ pmd ])
        (reg/v/f:SI 170 [ pgd ])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 5 arch/arm/mm/dma-mapping.c:176 (set (reg:SI 180)
        (mem:SI (reg/v/f:SI 169 [ pmd ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 5 arch/arm/mm/dma-mapping.c:176 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 180)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 62 61 63 5 arch/arm/mm/dma-mapping.c:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [0.0%]  (fallthru)
(note 63 62 64 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 6 arch/arm/mm/dma-mapping.c:176 discrim 1 (set (reg:SI 181)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 6 arch/arm/mm/dma-mapping.c:176 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 181)) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 6 arch/arm/mm/dma-mapping.c:176 discrim 1 (set (reg:SI 1 r1)
        (const_int 176 [0xb0])) 167 {*arm_movsi_insn} (nil))

(call_insn 67 66 68 6 arch/arm/mm/dma-mapping.c:176 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a67280 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 68 67 69 7 17 "" [1 uses])

(note 69 68 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 7 arch/arm/mm/dma-mapping.c:178 (set (reg:SI 182)
        (mem:SI (reg/v/f:SI 169 [ pmd ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 7 arch/arm/mm/dma-mapping.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 7 arch/arm/mm/dma-mapping.c:178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 7 -> ( 9 8)

;; Succ edge  9 [100.0%] 
;; Succ edge  8 [0.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [0.0%]  (fallthru)
(note 73 72 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 169 [ pmd ])) 167 {*arm_movsi_insn} (nil))

(insn 75 74 76 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (set (reg:SI 1 r1)
        (reg/v:SI 167 [ base ])) 167 {*arm_movsi_insn} (nil))

(call_insn 76 75 77 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__pte_alloc_kernel") [flags 0x41] <function_decl 0x10f97d80 __pte_alloc_kernel>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 77 76 78 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (set (reg:SI 172 [ D.24406 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 78 77 79 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172 [ D.24406 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 79 78 80 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 10)

;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [50.0%]  (fallthru)
(code_label 80 79 81 9 18 "" [1 uses])

(note 81 80 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 184)
        (mem:SI (reg/v/f:SI 169 [ pmd ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 185)
        (and:SI (reg:SI 184)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 83 85 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 183)
        (and:SI (reg:SI 185)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 184)
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 85 84 86 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 186)
        (plus:SI (reg:SI 183)
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))

(insn 86 85 87 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 187)
        (lshiftrt:SI (reg/v:SI 167 [ base ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 87 86 88 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 189)
        (ashift:SI (reg:SI 187)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 88 87 89 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 188)
        (lshiftrt:SI (reg:SI 189)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 187)
            (const_int 511 [0x1ff]))
        (nil)))

(insn 89 88 90 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 190)
        (ashift:SI (reg:SI 188)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 90 89 91 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg/v/f:SI 168 [ pte ])
        (plus:SI (reg:SI 186)
            (reg:SI 190))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 9 arch/arm/mm/dma-mapping.c:179 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 168 [ pte ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 93 9 arch/arm/mm/dma-mapping.c:179 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9998 [0x270e])
        (nil)))
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 9 8) -> 10
;; Pred edge  9 [0.0%]  (fallthru)
;; Pred edge  8 [50.0%] 
(code_label 93 92 94 10 19 "" [1 uses])

(note 94 93 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 10 arch/arm/mm/dma-mapping.c:180 (set (reg:SI 191)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152dba0>)) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 10 arch/arm/mm/dma-mapping.c:180 (set (reg/f:SI 192)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 10 arch/arm/mm/dma-mapping.c:180 (set (reg:SI 0 r0)
        (reg:SI 191)) 167 {*arm_movsi_insn} (nil))

(insn 98 97 99 10 arch/arm/mm/dma-mapping.c:180 (set (reg:SI 1 r1)
        (reg/f:SI 192)) 167 {*arm_movsi_insn} (nil))

(call_insn 99 98 100 10 arch/arm/mm/dma-mapping.c:180 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 100 99 103 10 arch/arm/mm/dma-mapping.c:181 (set (reg/v:SI 171 [ ret ])
        (const_int -12 [0xfffffffffffffff4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; Pred edge  9 [100.0%] 
(code_label 103 100 104 11 20 "" [1 uses])

(note 104 103 105 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 11 arch/arm/mm/dma-mapping.c:185 (set (reg/f:SI 193)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 11 arch/arm/mm/dma-mapping.c:185 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 193)
                (reg:SI 166 [ ivtmp.521 ])) [0 consistent_pte S4 A32])
        (reg/v/f:SI 168 [ pte ])) 167 {*arm_movsi_insn} (nil))

(insn 107 106 108 11 arch/arm/mm/dma-mapping.c:186 (set (reg/v:SI 167 [ base ])
        (plus:SI (reg/v:SI 167 [ base ])
            (const_int 2097152 [0x200000]))) 4 {*arm_addsi3} (nil))

(insn 108 107 110 11 arch/arm/mm/dma-mapping.c:186 (set (reg:SI 166 [ ivtmp.521 ])
        (plus:SI (reg:SI 166 [ ivtmp.521 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 110 108 111 11 arch/arm/mm/dma-mapping.c:187 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 167 [ base ])
            (const_int -2097152 [0xffffffffffe00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 111 110 112 11 arch/arm/mm/dma-mapping.c:187 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8571 [0x217b])
        (nil)))
;; End of basic block 11 -> ( 3 12)

;; Succ edge  3 [85.7%]  (dfs_back)
;; Succ edge  12 [14.3%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; Pred edge  11 [14.3%]  (fallthru)
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 12 arch/arm/mm/dma-mapping.c:152 (set (reg/v:SI 171 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 4 12 10) -> 13
;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 114 113 115 13 16 "" [0 uses])

(note 115 114 116 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 120 13 arch/arm/mm/dma-mapping.c:190 (set (reg:SI 173 [ <result> ])
        (reg/v:SI 171 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 120 116 126 13 arch/arm/mm/dma-mapping.c:190 (set (reg/i:SI 0 r0)
        (reg:SI 173 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 126 120 0 13 arch/arm/mm/dma-mapping.c:190 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 13 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function ___dma_single_dev_to_cpu (___dma_single_dev_to_cpu)[0:1285]


11 basic blocks, 15 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  7 [0.0%]  4 [100.0%]  (fallthru)

Basic block 4 , prev 2, next 6, loop_depth 0, count 0, freq 9996, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
Successors:  7 [0.0%]  11 [100.0%]  (fallthru)

Basic block 6 , prev 4, next 7, loop_depth 0, count 0, freq 9992, maybe hot.
Predecessors:  11 [100.0%]  (fallthru)
Successors:  7 [0.0%]  (fallthru) 13 [100.0%] 

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 8.
Predecessors:  2 [0.0%]  11 [0.0%]  4 [0.0%]  6 [0.0%]  (fallthru)
Successors: 

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 8003, maybe hot.
Predecessors:  13 [80.1%] 
Successors:  9 [78.3%]  (fallthru) 10 [21.6%] 

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 6270, maybe hot.
Predecessors:  8 [78.3%]  (fallthru)
Successors:  10 [100.0%]  (fallthru)

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 9992, maybe hot.
Predecessors:  9 [100.0%]  (fallthru) 8 [21.6%]  13 [19.9%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 11 , prev 10, next 13, loop_depth 0, count 0, freq 9992, maybe hot.
Predecessors:  4 [100.0%]  (fallthru)
Successors:  7 [0.0%]  6 [100.0%]  (fallthru)

Basic block 13 , prev 11, next 1, loop_depth 0, count 0, freq 9988, maybe hot.
Predecessors:  6 [100.0%] 
Successors:  8 [80.1%]  10 [19.9%]  (fallthru)

Basic block 1 , prev 13, loop_depth 0, count 0, freq 9992, maybe hot.
Predecessors:  10 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/dma-mapping.c:461 (set (reg/v/f:SI 138 [ kaddr ])
        (reg:SI 0 r0 [ kaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:461 (set (reg/v:SI 139 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:461 (set (reg/v:SI 140 [ dir ])
        (reg:SI 2 r2 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/dma-mapping.c:462 (set (reg:SI 137 [ kaddr.381 ])
        (reg/v/f:SI 138 [ kaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/dma-mapping.c:462 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ kaddr.381 ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/mm/dma-mapping.c:462 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 5 3)

;; Succ edge  5 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/mm/dma-mapping.c:462 discrim 2 (set (reg/f:SI 141)
        (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x10e733c0 high_memory>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/mm/dma-mapping.c:462 discrim 2 (set (reg:SI 136 [ high_memory.383 ])
        (mem/f/c/i:SI (reg/f:SI 141) [0 high_memory+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/mm/dma-mapping.c:462 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ kaddr.381 ])
            (reg:SI 136 [ high_memory.383 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 19 3 arch/arm/mm/dma-mapping.c:462 discrim 2 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 3 -> ( 5 9)

;; Succ edge  5 [0.0%] 
;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 4
;; Pred edge  9 [100.0%]  (fallthru)
(note 19 15 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/dma-mapping.c:462 discrim 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.24740 ])
            (reg:SI 136 [ high_memory.383 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 4 arch/arm/mm/dma-mapping.c:462 discrim 8 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 10)

;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 2 9 3 4) -> 5
;; Pred edge  2 [0.0%] 
;; Pred edge  9 [0.0%] 
;; Pred edge  3 [0.0%] 
;; Pred edge  4 [0.0%]  (fallthru)
(code_label 22 21 23 5 28 "" [3 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 arch/arm/mm/dma-mapping.c:462 discrim 5 (set (reg:SI 142)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 arch/arm/mm/dma-mapping.c:462 discrim 5 (set (reg:SI 143)
        (const_int 462 [0x1ce])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 arch/arm/mm/dma-mapping.c:462 discrim 5 (set (reg:SI 0 r0)
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 arch/arm/mm/dma-mapping.c:462 discrim 5 (set (reg:SI 1 r1)
        (reg:SI 143)) 167 {*arm_movsi_insn} (nil))

(call_insn 28 27 63 5 arch/arm/mm/dma-mapping.c:462 discrim 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ()


;; Start of basic block ( 10) -> 6
;; Pred edge  10 [80.1%] 
(code_label 63 28 30 6 33 "" [1 uses])

(note 30 63 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 144)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 133 [ D.25042 ])
        (mem/s/f/j/c:SI (reg/f:SI 144) [0 outer_cache.inv_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.25042 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 34 33 35 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 [78.3%]  (fallthru)
;; Succ edge  8 [21.6%] 

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [78.3%]  (fallthru)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 arch/arm/mm/dma-mapping.c:467 (set (reg/v:SI 134 [ paddr ])
        (plus:SI (reg:SI 137 [ kaddr.381 ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 37 36 38 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 145)
        (plus:SI (reg/v:SI 134 [ paddr ])
            (reg/v:SI 139 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 38 37 39 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 0 r0)
        (reg/v:SI 134 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 1 r1)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(call_insn 40 39 41 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (parallel [
            (call (mem:SI (reg/f:SI 133 [ D.25042 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6 10) -> 8
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [21.6%] 
;; Pred edge  10 [19.9%]  (fallthru)
(code_label 41 40 42 8 31 "" [1 uses])

(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 8 arch/arm/mm/dma-mapping.c:471 (set (reg/f:SI 146)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x112494e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 8 arch/arm/mm/dma-mapping.c:471 (set (reg/f:SI 147)
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 146)
                (const_int 32 [0x20])) [0 cpu_cache.dma_unmap_area+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 8 arch/arm/mm/dma-mapping.c:471 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ kaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 8 arch/arm/mm/dma-mapping.c:471 (set (reg:SI 1 r1)
        (reg/v:SI 139 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 8 arch/arm/mm/dma-mapping.c:471 (set (reg:SI 2 r2)
        (reg/v:SI 140 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 48 47 52 8 arch/arm/mm/dma-mapping.c:471 (parallel [
            (call (mem:SI (reg/f:SI 147) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 8 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 9
;; Pred edge  3 [100.0%]  (fallthru)
(note 52 48 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 9 arch/arm/mm/dma-mapping.c:462 discrim 6 (set (reg:SI 148)
        (plus:SI (reg/v:SI 139 [ size ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 54 53 55 9 arch/arm/mm/dma-mapping.c:462 discrim 6 (set (reg:SI 135 [ D.24740 ])
        (plus:SI (reg/v/f:SI 138 [ kaddr ])
            (reg:SI 148))) 4 {*arm_addsi3} (nil))

(insn 55 54 56 9 arch/arm/mm/dma-mapping.c:462 discrim 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.24740 ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 61 9 arch/arm/mm/dma-mapping.c:462 discrim 6 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 9 -> ( 5 4)

;; Succ edge  5 [0.0%] 
;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 10
;; Pred edge  4 [100.0%] 
(code_label 61 56 62 10 30 "" [1 uses])

(note 62 61 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 64 62 65 10 arch/arm/mm/dma-mapping.c:466 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ dir ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 0 10 arch/arm/mm/dma-mapping.c:466 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil)))
;; End of basic block 10 -> ( 6 8)

;; Succ edge  6 [80.1%] 
;; Succ edge  8 [19.9%]  (fallthru)


;; Function ___dma_single_cpu_to_dev (___dma_single_cpu_to_dev)[0:1284]


13 basic blocks, 18 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  7 [0.0%]  4 [100.0%]  (fallthru)

Basic block 4 , prev 2, next 6, loop_depth 0, count 0, freq 9996, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
Successors:  7 [0.0%]  13 [100.0%]  (fallthru)

Basic block 6 , prev 4, next 7, loop_depth 0, count 0, freq 9992, maybe hot.
Predecessors:  13 [100.0%]  (fallthru)
Successors:  7 [0.0%]  (fallthru) 15 [100.0%] 

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 8.
Predecessors:  2 [0.0%]  13 [0.0%]  4 [0.0%]  6 [0.0%]  (fallthru)
Successors: 

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 2798, maybe hot.
Predecessors:  15 [28.0%] 
Successors:  9 [69.8%]  (fallthru) 18 [30.2%] 

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 1954, maybe hot.
Predecessors:  8 [69.8%]  (fallthru)
Successors:  18 [100.0%]  (fallthru)

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 7194, maybe hot.
Predecessors:  15 [72.0%]  (fallthru)
Successors:  11 [78.3%]  (fallthru) 18 [21.6%] 

Basic block 11 , prev 10, next 13, loop_depth 0, count 0, freq 5637, maybe hot.
Predecessors:  10 [78.3%]  (fallthru)
Successors:  18 [100.0%]  (fallthru)

Basic block 13 , prev 11, next 15, loop_depth 0, count 0, freq 9992, maybe hot.
Predecessors:  4 [100.0%]  (fallthru)
Successors:  7 [0.0%]  6 [100.0%]  (fallthru)

Basic block 15 , prev 13, next 18, loop_depth 0, count 0, freq 9988, maybe hot.
Predecessors:  6 [100.0%] 
Successors:  8 [28.0%]  10 [72.0%]  (fallthru)

Basic block 18 , prev 15, next 1, loop_depth 0, count 0, freq 19984, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 8 [30.2%]  9 [100.0%]  (fallthru) 10 [21.6%] 
Successors:  EXIT [100.0%]  (fallthru)
Invalid sum of incoming frequencies 9993, should be 19984

Basic block 1 , prev 18, loop_depth 0, count 0, freq 9992, maybe hot.
Predecessors:  18 [100.0%]  (fallthru)
Successors: 
Invalid sum of incoming frequencies 19984, should be 9992



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/dma-mapping.c:442 (set (reg/v/f:SI 139 [ kaddr ])
        (reg:SI 0 r0 [ kaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:442 (set (reg/v:SI 140 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:442 (set (reg/v:SI 141 [ dir ])
        (reg:SI 2 r2 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/dma-mapping.c:445 (set (reg:SI 138 [ kaddr.375 ])
        (reg/v/f:SI 139 [ kaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/dma-mapping.c:445 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ kaddr.375 ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/mm/dma-mapping.c:445 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 5 3)

;; Succ edge  5 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/mm/dma-mapping.c:445 discrim 2 (set (reg/f:SI 142)
        (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x10e733c0 high_memory>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/mm/dma-mapping.c:445 discrim 2 (set (reg:SI 137 [ high_memory.377 ])
        (mem/f/c/i:SI (reg/f:SI 142) [0 high_memory+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/mm/dma-mapping.c:445 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ kaddr.375 ])
            (reg:SI 137 [ high_memory.377 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 19 3 arch/arm/mm/dma-mapping.c:445 discrim 2 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 3 -> ( 5 10)

;; Succ edge  5 [0.0%] 
;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 4
;; Pred edge  10 [100.0%]  (fallthru)
(note 19 15 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/dma-mapping.c:445 discrim 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.24698 ])
            (reg:SI 137 [ high_memory.377 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 4 arch/arm/mm/dma-mapping.c:445 discrim 8 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 11)

;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 2 10 3 4) -> 5
;; Pred edge  2 [0.0%] 
;; Pred edge  10 [0.0%] 
;; Pred edge  3 [0.0%] 
;; Pred edge  4 [0.0%]  (fallthru)
(code_label 22 21 23 5 40 "" [3 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 arch/arm/mm/dma-mapping.c:445 discrim 5 (set (reg:SI 143)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 arch/arm/mm/dma-mapping.c:445 discrim 5 (set (reg:SI 144)
        (const_int 445 [0x1bd])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 arch/arm/mm/dma-mapping.c:445 discrim 5 (set (reg:SI 0 r0)
        (reg:SI 143)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 arch/arm/mm/dma-mapping.c:445 discrim 5 (set (reg:SI 1 r1)
        (reg:SI 144)) 167 {*arm_movsi_insn} (nil))

(call_insn 28 27 75 5 arch/arm/mm/dma-mapping.c:445 discrim 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ()


;; Start of basic block ( 11) -> 6
;; Pred edge  11 [28.0%] 
(code_label 75 28 30 6 45 "" [1 uses])

(note 30 75 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 145)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 134 [ D.25045 ])
        (mem/s/f/j/c:SI (reg/f:SI 145) [0 outer_cache.inv_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.25045 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 34 33 35 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 85)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 6 -> ( 7 12)

;; Succ edge  7 [69.8%]  (fallthru)
;; Succ edge  12 [30.2%] 

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [69.8%]  (fallthru)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 146)
        (plus:SI (reg/v:SI 135 [ paddr ])
            (reg/v:SI 140 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 37 36 38 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 1 r1)
        (reg:SI 146)) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (parallel [
            (call (mem:SI (reg/f:SI 134 [ D.25045 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 12)

;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 8
;; Pred edge  11 [72.0%]  (fallthru)
(note 42 39 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 147)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 133 [ D.25048 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 147)
                (const_int 4 [0x4])) [0 outer_cache.clean_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.25048 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 46 45 47 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 85)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 8 -> ( 9 12)

;; Succ edge  9 [78.3%]  (fallthru)
;; Succ edge  12 [21.6%] 

;; Start of basic block ( 8) -> 9
;; Pred edge  8 [78.3%]  (fallthru)
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 148)
        (plus:SI (reg/v:SI 135 [ paddr ])
            (reg/v:SI 140 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 49 48 50 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 1 r1)
        (reg:SI 148)) 167 {*arm_movsi_insn} (nil))

(call_insn 51 50 57 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (parallel [
            (call (mem:SI (reg/f:SI 133 [ D.25048 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 12)

;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 10
;; Pred edge  3 [100.0%]  (fallthru)
(note 57 51 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 10 arch/arm/mm/dma-mapping.c:445 discrim 6 (set (reg:SI 149)
        (plus:SI (reg/v:SI 140 [ size ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 59 58 60 10 arch/arm/mm/dma-mapping.c:445 discrim 6 (set (reg:SI 136 [ D.24698 ])
        (plus:SI (reg/v/f:SI 139 [ kaddr ])
            (reg:SI 149))) 4 {*arm_addsi3} (nil))

(insn 60 59 61 10 arch/arm/mm/dma-mapping.c:445 discrim 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.24698 ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 61 60 66 10 arch/arm/mm/dma-mapping.c:445 discrim 6 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 10 -> ( 5 4)

;; Succ edge  5 [0.0%] 
;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 11
;; Pred edge  4 [100.0%] 
(code_label 66 61 67 11 42 "" [1 uses])

(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 11 arch/arm/mm/dma-mapping.c:447 (set (reg/f:SI 150)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x112494e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 69 68 70 11 arch/arm/mm/dma-mapping.c:447 (set (reg/f:SI 151)
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 150)
                (const_int 28 [0x1c])) [0 cpu_cache.dma_map_area+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 70 69 71 11 arch/arm/mm/dma-mapping.c:447 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ kaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 11 arch/arm/mm/dma-mapping.c:447 (set (reg:SI 1 r1)
        (reg/v:SI 140 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 72 71 73 11 arch/arm/mm/dma-mapping.c:447 (set (reg:SI 2 r2)
        (reg/v:SI 141 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 73 72 74 11 arch/arm/mm/dma-mapping.c:447 (parallel [
            (call (mem:SI (reg/f:SI 151) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 74 73 76 11 arch/arm/mm/dma-mapping.c:449 (set (reg/v:SI 135 [ paddr ])
        (plus:SI (reg:SI 138 [ kaddr.375 ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 76 74 77 11 arch/arm/mm/dma-mapping.c:450 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ dir ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 77 76 85 11 arch/arm/mm/dma-mapping.c:450 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 11 -> ( 6 8)

;; Succ edge  6 [28.0%] 
;; Succ edge  8 [72.0%]  (fallthru)

;; Start of basic block ( 9 6 7 8) -> 12
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  6 [30.2%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  8 [21.6%] 
(code_label 85 77 88 12 47 "" [2 uses])

(note 88 85 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 12 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function dma_cache_maint_page (dma_cache_maint_page)[0:1286]


17 basic blocks, 22 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [100.0%]  (fallthru)

Basic block 4 , prev 2, next 5, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 15 [100.0%]  (fallthru)
Successors:  5 [28.0%]  (fallthru) 17 [72.0%] 

Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 2800, maybe hot.
Predecessors:  4 [28.0%]  (fallthru)
Successors:  7 [50.0%]  6 [50.0%]  (fallthru)

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
Successors:  10 [100.0%]  (fallthru)

Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 3550, maybe hot.
Predecessors:  5 [50.0%] 
Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 
Invalid sum of incoming frequencies 1400, should be 3550

Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 1775, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
Successors:  9 [100.0%]  (fallthru)

Basic block 9 , prev 8, next 10, loop_depth 1, count 0, freq 3550, maybe hot.
Predecessors:  7 [50.0%]  8 [100.0%]  (fallthru)
Successors:  10 [100.0%]  (fallthru)

Basic block 10 , prev 9, next 11, loop_depth 1, count 0, freq 7100, maybe hot.
Predecessors:  6 [100.0%]  (fallthru) 9 [100.0%]  (fallthru)
Successors:  11 [69.8%]  (fallthru) 12 [30.2%] 
Invalid sum of incoming frequencies 4950, should be 7100

Basic block 11 , prev 10, next 12, loop_depth 1, count 0, freq 4958, maybe hot.
Predecessors:  10 [69.8%]  (fallthru)
Successors:  14 [100.0%]  (fallthru)

Basic block 12 , prev 11, next 13, loop_depth 1, count 0, freq 2142, maybe hot.
Predecessors:  10 [30.2%] 
Successors:  13 [29.0%]  (fallthru) 14 [71.0%] 

Basic block 13 , prev 12, next 14, loop_depth 1, count 0, freq 621, maybe hot.
Predecessors:  12 [29.0%]  (fallthru)
Successors:  14 [100.0%]  (fallthru)

Basic block 14 , prev 13, next 15, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  12 [71.0%]  17 [100.0%]  (fallthru) 11 [100.0%]  (fallthru) 13 [100.0%]  (fallthru)
Successors:  15 [86.0%]  (fallthru) 19 [14.0%] 
Invalid sum of incoming frequencies 14300, should be 10000

Basic block 15 , prev 14, next 17, loop_depth 1, count 0, freq 8600, maybe hot.
Predecessors:  14 [86.0%]  (fallthru)
Successors:  4 [100.0%]  (fallthru)

Basic block 17 , prev 15, next 19, loop_depth 1, count 0, freq 7200, maybe hot.
Predecessors:  4 [72.0%] 
Successors:  14 [100.0%]  (fallthru)

Basic block 19 , prev 17, next 1, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  14 [14.0%] 
Successors:  EXIT [100.0%]  (fallthru)
Invalid sum of incoming frequencies 1400, should be 2800

Basic block 1 , prev 19, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  19 [100.0%]  (fallthru)
Successors: 
Invalid sum of incoming frequencies 2800, should be 1400



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/dma-mapping.c:478 (set (reg/v/f:SI 139 [ page ])
        (reg:SI 0 r0 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:478 (set (reg/v:SI 140 [ offset ])
        (reg:SI 1 r1 [ offset ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:478 (set (reg/v:SI 141 [ size ])
        (reg:SI 2 r2 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:478 (set (reg/v:SI 142 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/dma-mapping.c:478 (set (reg/v/f:SI 143 [ op ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 op+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 op+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 87 2 arch/arm/mm/dma-mapping.c:485 (set (reg/v:SI 137 [ left ])
        (reg/v:SI 141 [ size ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 14) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 87 10 11 3 66 "" [0 uses])

(note 11 87 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 include/linux/mm.h:692 (set (reg:SI 145)
        (mem/s/j:SI (reg/v/f:SI 139 [ page ]) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 include/linux/mm.h:692 (set (reg:SI 144)
        (lshiftrt:SI (reg:SI 145)
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 15 3 include/linux/mm.h:692 (set (reg:SI 147)
        (const_int 768 [0x300])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 include/linux/mm.h:692 (set (reg:SI 146)
        (mult:SI (reg:SI 147)
            (reg:SI 144))) 32 {*arm_mulsi3_v6} (nil))

(insn 16 15 17 3 include/linux/mm.h:692 (set (reg:SI 148)
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 include/linux/mm.h:692 (set (reg/f:SI 134 [ D.25051 ])
        (plus:SI (reg:SI 146)
            (reg:SI 148))) 4 {*arm_addsi3} (nil))

(insn 18 17 19 3 include/linux/mmzone.h:741 (set (reg:SI 150)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ D.25051 ])
                (const_int 748 [0x2ec])) [0 <variable>.zone_pgdat+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 include/linux/mmzone.h:741 (set (reg:SI 149)
        (minus:SI (reg/f:SI 134 [ D.25051 ])
            (reg:SI 150))) 28 {*arm_subsi3_insn} (nil))

(insn 20 19 21 3 include/linux/mmzone.h:741 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149)
            (const_int 768 [0x300]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 3 include/linux/mmzone.h:741 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 3 -> ( 4 15)

;; Succ edge  4 [28.0%]  (fallthru)
;; Succ edge  15 [72.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [28.0%]  (fallthru)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 arch/arm/mm/dma-mapping.c:491 (set (reg:SI 151)
        (plus:SI (reg/v:SI 137 [ left ])
            (reg/v:SI 140 [ offset ]))) 4 {*arm_addsi3} (nil))

(insn 24 23 25 4 arch/arm/mm/dma-mapping.c:491 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 4096 [0x1000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 26 4 arch/arm/mm/dma-mapping.c:491 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 6 5)

;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [50.0%]  (fallthru)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 30 5 arch/arm/mm/dma-mapping.c:487 (set (reg/v:SI 136 [ len ])
        (reg/v:SI 137 [ left ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; Pred edge  4 [50.0%] 
(code_label 30 27 31 6 60 "" [1 uses])

(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 arch/arm/mm/dma-mapping.c:492 (set (reg:SI 152)
        (const_int 4095 [0xfff])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 arch/arm/mm/dma-mapping.c:492 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ offset ])
            (reg:SI 152))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 34 33 35 6 arch/arm/mm/dma-mapping.c:492 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [50.0%]  (fallthru)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 arch/arm/mm/dma-mapping.c:493 (set (reg:SI 153)
        (lshiftrt:SI (reg/v:SI 140 [ offset ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 37 36 38 7 arch/arm/mm/dma-mapping.c:493 (set (reg:SI 154)
        (ashift:SI (reg:SI 153)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 38 37 39 7 arch/arm/mm/dma-mapping.c:493 (set (reg/v/f:SI 139 [ page ])
        (plus:SI (reg/v/f:SI 139 [ page ])
            (reg:SI 154))) 4 {*arm_addsi3} (nil))

(insn 39 38 40 7 arch/arm/mm/dma-mapping.c:494 (set (reg:SI 155)
        (ashift:SI (reg/v:SI 140 [ offset ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 40 39 41 7 arch/arm/mm/dma-mapping.c:494 (set (reg/v:SI 140 [ offset ])
        (lshiftrt:SI (reg:SI 155)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/v:SI 140 [ offset ])
            (const_int 4095 [0xfff]))
        (nil)))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 41 40 42 8 62 "" [1 uses])

(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 8 arch/arm/mm/dma-mapping.c:496 (set (reg/v:SI 136 [ len ])
        (minus:SI (const_int 4096 [0x1000])
            (reg/v:SI 140 [ offset ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5 8) -> 9
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 44 43 45 9 61 "" [0 uses])

(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 9 arch/arm/mm/dma-mapping.c:498 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 48 9 arch/arm/mm/dma-mapping.c:498 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmap_high_get") [flags 0x41] <function_decl 0x11268f00 kmap_high_get>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 48 47 49 9 arch/arm/mm/dma-mapping.c:498 (set (reg/v/f:SI 135 [ vaddr ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 9 arch/arm/mm/dma-mapping.c:499 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ vaddr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 9 arch/arm/mm/dma-mapping.c:499 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 [69.8%]  (fallthru)
;; Succ edge  11 [30.2%] 

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [69.8%]  (fallthru)
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 10 arch/arm/mm/dma-mapping.c:501 (set (reg:SI 156)
        (plus:SI (reg/v/f:SI 135 [ vaddr ])
            (reg/v:SI 140 [ offset ]))) 4 {*arm_addsi3} (nil))

(insn 53 52 54 10 arch/arm/mm/dma-mapping.c:501 (set (reg:SI 0 r0)
        (reg:SI 156)) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 10 arch/arm/mm/dma-mapping.c:501 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 10 arch/arm/mm/dma-mapping.c:501 (set (reg:SI 2 r2)
        (reg/v:SI 142 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 56 55 57 10 arch/arm/mm/dma-mapping.c:501 (parallel [
            (call (mem:SI (reg/v/f:SI 143 [ op ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 57 56 58 10 arch/arm/mm/dma-mapping.c:502 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 61 10 arch/arm/mm/dma-mapping.c:502 (parallel [
            (call (mem:SI (symbol_ref:SI ("kunmap_high") [flags 0x41] <function_decl 0x11268e80 kunmap_high>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 10 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; Pred edge  9 [30.2%] 
(code_label 61 58 62 11 63 "" [1 uses])

(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 157)
        (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x11249780 cacheid>)) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 159)
        (mem/c/i:SI (reg/f:SI 157) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 158)
        (and:SI (reg:SI 159)
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 66 65 67 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 67 66 68 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 11 -> ( 12 13)

;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  13 [71.0%] 

;; Start of basic block ( 11) -> 12
;; Pred edge  11 [29.0%]  (fallthru)
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 12 arch/arm/mm/dma-mapping.c:505 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 70 69 71 12 arch/arm/mm/dma-mapping.c:505 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__kmap_atomic") [flags 0x41] <function_decl 0x11273080 __kmap_atomic>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 71 70 72 12 arch/arm/mm/dma-mapping.c:505 (set (reg/v/f:SI 133 [ vaddr.608 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 72 71 73 12 arch/arm/mm/dma-mapping.c:506 (set (reg:SI 160)
        (plus:SI (reg/v/f:SI 133 [ vaddr.608 ])
            (reg/v:SI 140 [ offset ]))) 4 {*arm_addsi3} (nil))

(insn 73 72 74 12 arch/arm/mm/dma-mapping.c:506 (set (reg:SI 0 r0)
        (reg:SI 160)) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 12 arch/arm/mm/dma-mapping.c:506 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 75 74 76 12 arch/arm/mm/dma-mapping.c:506 (set (reg:SI 2 r2)
        (reg/v:SI 142 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 76 75 77 12 arch/arm/mm/dma-mapping.c:506 (parallel [
            (call (mem:SI (reg/v/f:SI 143 [ op ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 77 76 78 12 arch/arm/mm/dma-mapping.c:507 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 133 [ vaddr.608 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 78 77 79 12 arch/arm/mm/dma-mapping.c:507 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__kunmap_atomic") [flags 0x41] <function_decl 0x11273100 __kunmap_atomic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 15 10 12) -> 13
;; Pred edge  11 [71.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 79 78 80 13 64 "" [1 uses])

(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 13 arch/arm/mm/dma-mapping.c:515 (set (reg/v:SI 137 [ left ])
        (minus:SI (reg/v:SI 137 [ left ])
            (reg/v:SI 136 [ len ]))) 28 {*arm_subsi3_insn} (nil))

(insn 82 81 83 13 arch/arm/mm/dma-mapping.c:516 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ left ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 83 82 84 13 arch/arm/mm/dma-mapping.c:516 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1400 [0x578])
        (nil)))
;; End of basic block 13 -> ( 14 16)

;; Succ edge  14 [86.0%]  (fallthru)
;; Succ edge  16 [14.0%] 

;; Start of basic block ( 13) -> 14
;; Pred edge  13 [86.0%]  (fallthru)
(note 84 83 85 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 14 arch/arm/mm/dma-mapping.c:514 (set (reg/v/f:SI 139 [ page ])
        (plus:SI (reg/v/f:SI 139 [ page ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 86 85 94 14 arch/arm/mm/dma-mapping.c:513 (set (reg/v:SI 140 [ offset ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 15
;; Pred edge  3 [72.0%] 
(code_label 94 86 95 15 59 "" [1 uses])

(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 15 arch/arm/mm/dma-mapping.c:510 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 15 arch/arm/mm/dma-mapping.c:510 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("page_address") [flags 0x41] <function_decl 0x10f7b880 page_address>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 98 97 99 15 arch/arm/mm/dma-mapping.c:510 (set (reg/f:SI 138 [ D.24793 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 99 98 100 15 arch/arm/mm/dma-mapping.c:511 (set (reg:SI 161)
        (plus:SI (reg/f:SI 138 [ D.24793 ])
            (reg/v:SI 140 [ offset ]))) 4 {*arm_addsi3} (nil))

(insn 100 99 101 15 arch/arm/mm/dma-mapping.c:511 (set (reg:SI 0 r0)
        (reg:SI 161)) 167 {*arm_movsi_insn} (nil))

(insn 101 100 102 15 arch/arm/mm/dma-mapping.c:511 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ left ])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 15 arch/arm/mm/dma-mapping.c:511 (set (reg:SI 2 r2)
        (reg/v:SI 142 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 103 102 104 15 arch/arm/mm/dma-mapping.c:511 (parallel [
            (call (mem:SI (reg/v/f:SI 143 [ op ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 104 103 110 15 arch/arm/mm/dma-mapping.c:487 (set (reg/v:SI 136 [ len ])
        (reg/v:SI 137 [ left ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 16
;; Pred edge  13 [14.0%] 
(code_label 110 104 113 16 67 "" [1 uses])

(note 113 110 0 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 16 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function ___dma_page_dev_to_cpu (___dma_page_dev_to_cpu)[0:1288]


9 basic blocks, 12 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [72.0%]  (fallthru) 6 [28.0%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  2 [72.0%]  (fallthru)
Successors:  5 [69.8%]  (fallthru) 6 [30.2%] 

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 5028, maybe hot.
Predecessors:  4 [69.8%]  (fallthru)
Successors:  6 [100.0%]  (fallthru)

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [28.0%]  4 [30.2%]  5 [100.0%]  (fallthru)
Successors:  7 [61.0%]  (fallthru) 11 [39.0%] 

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  6 [61.0%]  (fallthru)
Successors:  8 [39.0%]  (fallthru) 11 [61.0%] 

Basic block 8 , prev 7, next 11, loop_depth 0, count 0, freq 2378, maybe hot.
Predecessors:  7 [39.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)

Basic block 11 , prev 8, next 1, loop_depth 0, count 0, freq 7622, maybe hot.
Predecessors:  7 [61.0%]  6 [39.0%] 
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 11, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (ab,sibcall) 11 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/dma-mapping.c:538 (set (reg/v/f:SI 136 [ page ])
        (reg:SI 0 r0 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:538 (set (reg/v:SI 137 [ off ])
        (reg:SI 1 r1 [ off ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:538 (set (reg/v:SI 138 [ size ])
        (reg:SI 2 r2 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:538 (set (reg/v:SI 139 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:539 (set (reg/f:SI 140)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/dma-mapping.c:539 (set (reg/f:SI 135 [ mem_map.393 ])
        (mem/f/c/i:SI (reg/f:SI 140) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:543 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ dir ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 arch/arm/mm/dma-mapping.c:543 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 2 -> ( 3 5)

;; Succ edge  3 [72.0%]  (fallthru)
;; Succ edge  5 [28.0%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [72.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 141)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 133 [ D.25071 ])
        (mem/s/f/j/c:SI (reg/f:SI 141) [0 outer_cache.inv_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.25071 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  5 [30.2%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [69.8%]  (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 arch/arm/mm/dma-mapping.c:539 (set (reg:SI 142)
        (minus:SI (reg/v/f:SI 136 [ page ])
            (reg/f:SI 135 [ mem_map.393 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 20 19 21 4 arch/arm/mm/dma-mapping.c:539 (set (reg:SI 144)
        (ashiftrt:SI (reg:SI 142)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 142)
            (const_int 32 [0x20]))
        (nil)))

(insn 21 20 22 4 arch/arm/mm/dma-mapping.c:539 (set (reg:SI 145)
        (ashift:SI (reg:SI 144)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 22 21 23 4 arch/arm/mm/dma-mapping.c:539 (set (reg/v:SI 134 [ paddr ])
        (plus:SI (reg:SI 145)
            (reg/v:SI 137 [ off ]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 146)
        (plus:SI (reg/v:SI 134 [ paddr ])
            (reg/v:SI 138 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 24 23 25 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 0 r0)
        (reg/v:SI 134 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 1 r1)
        (reg:SI 146)) 167 {*arm_movsi_insn} (nil))

(call_insn 26 25 27 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (parallel [
            (call (mem:SI (reg/f:SI 133 [ D.25071 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 4) -> 5
;; Pred edge  2 [28.0%] 
;; Pred edge  3 [30.2%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 27 26 28 5 71 "" [2 uses])

(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 5 arch/arm/mm/dma-mapping.c:546 (set (reg/f:SI 147)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x112494e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 arch/arm/mm/dma-mapping.c:546 (set (reg/f:SI 148)
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 147)
                (const_int 32 [0x20])) [0 cpu_cache.dma_unmap_area+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/mm/dma-mapping.c:546 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 148)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 5 arch/arm/mm/dma-mapping.c:546 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/dma-mapping.c:546 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ off ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 arch/arm/mm/dma-mapping.c:546 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 arch/arm/mm/dma-mapping.c:546 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 35 37 5 arch/arm/mm/dma-mapping.c:546 (parallel [
            (call (mem:SI (symbol_ref:SI ("dma_cache_maint_page") [flags 0x3] <function_decl 0x1145ee00 dma_cache_maint_page>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 37 36 38 5 arch/arm/mm/dma-mapping.c:551 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ dir ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(insn 38 37 39 5 arch/arm/mm/dma-mapping.c:551 (set (reg:SI 150)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 39 38 40 5 arch/arm/mm/dma-mapping.c:551 (set (reg:QI 149)
        (subreg:QI (reg:SI 150) 0)) 178 {*arm_movqi_insn} (nil))

(insn 40 39 41 5 arch/arm/mm/dma-mapping.c:551 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ off ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 41 40 42 5 arch/arm/mm/dma-mapping.c:551 (set (reg:SI 152)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 42 41 43 5 arch/arm/mm/dma-mapping.c:551 (set (reg:QI 151)
        (subreg:QI (reg:SI 152) 0)) 178 {*arm_movqi_insn} (nil))

(insn 43 42 44 5 arch/arm/mm/dma-mapping.c:551 (set (reg:SI 153)
        (and:SI (subreg:SI (reg:QI 149) 0)
            (subreg:SI (reg:QI 151) 0))) 67 {*arm_andsi3_insn} (nil))

(insn 44 43 45 5 arch/arm/mm/dma-mapping.c:551 (set (reg:QI 154)
        (subreg:QI (reg:SI 153) 0)) 178 {*arm_movqi_insn} (nil))

(insn 45 44 46 5 arch/arm/mm/dma-mapping.c:551 (set (reg:SI 155)
        (zero_extend:SI (reg:QI 154))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 46 45 47 5 arch/arm/mm/dma-mapping.c:551 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 47 46 48 5 arch/arm/mm/dma-mapping.c:551 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 5 -> ( 6 8)

;; Succ edge  6 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [61.0%]  (fallthru)
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 6 arch/arm/mm/dma-mapping.c:551 discrim 1 (set (reg:SI 156)
        (const_int 4095 [0xfff])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 6 arch/arm/mm/dma-mapping.c:551 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ size ])
            (reg:SI 156))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 51 50 52 6 arch/arm/mm/dma-mapping.c:551 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [39.0%]  (fallthru)
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 7 arch/arm/mm/dma-mapping.c:552 (set (reg:SI 0 r0)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 7 arch/arm/mm/dma-mapping.c:552 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 55 54 62 7 arch/arm/mm/dma-mapping.c:552 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109c0500 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 6 5) -> 8
;; Pred edge  6 [61.0%] 
;; Pred edge  5 [39.0%] 
(code_label 62 55 65 8 73 "" [2 uses])

(note 65 62 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 8 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function dma_sync_sg_for_cpu (dma_sync_sg_for_cpu)[0:1291]

Deleted 1 trivially dead insns

10 basic blocks, 10 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 308, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 308, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  9 [100.0%]  (fallthru)

Basic block 4 , prev 2, next 5, loop_depth 1, count 0, freq 9700, maybe hot.
Predecessors:  9 [97.0%] 
Successors:  5 [0.0%]  (fallthru) 6 [100.0%] 

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 4.
Predecessors:  4 [0.0%]  (fallthru)
Successors: 

Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 9696, maybe hot.
Predecessors:  4 [100.0%] 
Successors:  7 [0.0%]  (fallthru) 8 [100.0%] 

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 4.
Predecessors:  6 [0.0%]  (fallthru)
Successors: 

Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 9692, maybe hot.
Predecessors:  6 [100.0%] 
Successors:  9 [100.0%]  (fallthru,dfs_back)

Basic block 9 , prev 8, next 12, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 8 [100.0%]  (fallthru,dfs_back)
Successors:  4 [97.0%]  12 [3.0%]  (fallthru)

Basic block 12 , prev 9, next 1, loop_depth 0, count 0, freq 300, maybe hot.
Predecessors:  9 [3.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 12, loop_depth 0, count 0, freq 300, maybe hot.
Predecessors:  12 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 arch/arm/mm/dma-mapping.c:628 (set (reg/v/f:SI 137 [ sg ])
        (reg:SI 1 r1 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:628 (set (reg/v:SI 138 [ nents ])
        (reg:SI 2 r2 [ nents ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:628 (set (reg/v:SI 139 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:632 (set (reg/v/f:SI 135 [ s ])
        (reg/v/f:SI 137 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 50 2 arch/arm/mm/dma-mapping.c:632 (set (reg/v:SI 134 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 3
;; Pred edge  8 [97.0%] 
(code_label 50 10 13 3 80 "" [1 uses])

(note 13 50 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 include/linux/scatterlist.h:96 (set (reg:SI 140)
        (const_int -2023406815 [0xffffffff87654321])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 include/linux/scatterlist.h:96 (set (reg:SI 141)
        (mem/s/j:SI (reg/v/f:SI 135 [ s ]) [0 <variable>.sg_magic+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 include/linux/scatterlist.h:96 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 140))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 3 include/linux/scatterlist.h:96 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [0.0%]  (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 142)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 1 r1)
        (const_int 96 [0x60])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 21 24 4 include/linux/scatterlist.h:96 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ()


;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 24 22 25 5 78 "" [1 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 include/linux/scatterlist.h:97 (set (reg:SI 133 [ D.25085 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 4 [0x4])) [0 <variable>.page_link+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 include/linux/scatterlist.h:97 (set (reg:SI 143)
        (and:SI (reg:SI 133 [ D.25085 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 28 27 29 5 include/linux/scatterlist.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 5 include/linux/scatterlist.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [0.0%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 144)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 144)) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 1 r1)
        (const_int 97 [0x61])) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 36 6 include/linux/scatterlist.h:97 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ()


;; Start of basic block ( 5) -> 7
;; Pred edge  5 [100.0%] 
(code_label 36 34 37 7 79 "" [1 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 145)
        (and:SI (reg:SI 133 [ D.25085 ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 39 38 40 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 0 r0)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 8 [0x8])) [0 <variable>.offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 12 [0xc])) [0 <variable>.length+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (parallel [
            (call (mem:SI (symbol_ref:SI ("___dma_page_dev_to_cpu") [flags 0x3] <function_decl 0x11060f80 ___dma_page_dev_to_cpu>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 44 43 45 7 arch/arm/mm/dma-mapping.c:632 (set (reg/v:SI 134 [ i ])
        (plus:SI (reg/v:SI 134 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 7 arch/arm/mm/dma-mapping.c:632 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ s ])) 167 {*arm_movsi_insn} (nil))

(call_insn 46 45 47 7 arch/arm/mm/dma-mapping.c:632 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sg_next") [flags 0x41] <function_decl 0x1103bb00 sg_next>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 47 46 48 7 arch/arm/mm/dma-mapping.c:632 (set (reg/v/f:SI 135 [ s ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 7) -> 8
;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru,dfs_back)
(code_label 48 47 49 8 77 "" [0 uses])

(note 49 48 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 49 52 8 arch/arm/mm/dma-mapping.c:632 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ i ])
            (reg/v:SI 138 [ nents ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 60 8 arch/arm/mm/dma-mapping.c:632 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
        (nil)))
;; End of basic block 8 -> ( 3 9)

;; Succ edge  3 [97.0%] 
;; Succ edge  9 [3.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 [3.0%]  (fallthru)
(note 60 52 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function dma_unmap_sg (dma_unmap_sg)[0:1290]

Deleted 1 trivially dead insns

6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  5 [100.0%]  (fallthru)

Basic block 4 , prev 2, next 5, loop_depth 1, count 0, freq 9100, maybe hot.
Predecessors:  5 [91.0%] 
Successors:  5 [100.0%]  (fallthru,dfs_back)

Basic block 5 , prev 4, next 8, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 4 [100.0%]  (fallthru,dfs_back)
Successors:  4 [91.0%]  8 [9.0%]  (fallthru)

Basic block 8 , prev 5, next 1, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  5 [9.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 8, loop_depth 0, count 0, freq 900, maybe hot.
Predecessors:  8 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 arch/arm/mm/dma-mapping.c:608 (set (reg/v/f:SI 137 [ sg ])
        (reg:SI 1 r1 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:608 (set (reg/v:SI 138 [ nents ])
        (reg:SI 2 r2 [ nents ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:608 (set (reg/v:SI 139 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:614 (set (reg/v/f:SI 134 [ s ])
        (reg/v/f:SI 137 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 33 2 arch/arm/mm/dma-mapping.c:614 (set (reg/v:SI 133 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 3
;; Pred edge  4 [91.0%] 
(code_label 33 10 13 3 87 "" [1 uses])

(note 13 33 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/mm/dma-mapping.c:615 (set (reg:SI 135 [ D.24893 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ s ])
                (const_int 16 [0x10])) [0 <variable>.dma_address+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg/f:SI 140)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 141)
        (lshiftrt:SI (reg:SI 135 [ D.24893 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 142)
        (ashift:SI (reg:SI 141)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 18 17 19 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 144)
        (mem/f/c/i:SI (reg/f:SI 140) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 143)
        (plus:SI (reg:SI 144)
            (reg:SI 142))) 4 {*arm_addsi3} (nil))

(insn 20 19 21 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 146)
        (ashift:SI (reg:SI 135 [ D.24893 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 21 20 22 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 145)
        (lshiftrt:SI (reg:SI 146)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 135 [ D.24893 ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 22 21 23 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 0 r0)
        (reg:SI 143)) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 1 r1)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ s ])
                (const_int 12 [0xc])) [0 <variable>.length+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 26 25 27 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (parallel [
            (call (mem:SI (symbol_ref:SI ("___dma_page_dev_to_cpu") [flags 0x3] <function_decl 0x11060f80 ___dma_page_dev_to_cpu>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 27 26 28 3 arch/arm/mm/dma-mapping.c:614 discrim 2 (set (reg/v:SI 133 [ i ])
        (plus:SI (reg/v:SI 133 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 28 27 29 3 arch/arm/mm/dma-mapping.c:614 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ s ])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 28 30 3 arch/arm/mm/dma-mapping.c:614 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sg_next") [flags 0x41] <function_decl 0x1103bb00 sg_next>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 29 31 3 arch/arm/mm/dma-mapping.c:614 discrim 2 (set (reg/v/f:SI 134 [ s ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 3) -> 4
;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
(code_label 31 30 32 4 86 "" [0 uses])

(note 32 31 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 34 32 35 4 arch/arm/mm/dma-mapping.c:614 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ i ])
            (reg/v:SI 138 [ nents ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 43 4 arch/arm/mm/dma-mapping.c:614 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 3 5)

;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [9.0%]  (fallthru)
(note 43 35 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function ___dma_page_cpu_to_dev (___dma_page_cpu_to_dev)[0:1287]


8 basic blocks, 10 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [28.0%]  (fallthru) 6 [72.0%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 2800, maybe hot.
Predecessors:  2 [28.0%]  (fallthru)
Successors:  5 [69.8%]  (fallthru) 10 [30.2%] 

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1955, maybe hot.
Predecessors:  4 [69.8%]  (fallthru)
Successors:  10 [100.0%]  (fallthru)

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 7200, maybe hot.
Predecessors:  2 [72.0%] 
Successors:  7 [78.3%]  (fallthru) 10 [21.6%] 

Basic block 7 , prev 6, next 10, loop_depth 0, count 0, freq 5641, maybe hot.
Predecessors:  6 [78.3%]  (fallthru)
Successors:  10 [100.0%]  (fallthru)

Basic block 10 , prev 7, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru) 4 [30.2%]  5 [100.0%]  (fallthru) 6 [21.6%] 
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  10 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/dma-mapping.c:521 (set (reg/v/f:SI 136 [ page ])
        (reg:SI 0 r0 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:521 (set (reg/v:SI 137 [ off ])
        (reg:SI 1 r1 [ off ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:521 (set (reg/v:SI 138 [ size ])
        (reg:SI 2 r2 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:521 (set (reg/v:SI 139 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:524 (set (reg/f:SI 140)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x112494e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/dma-mapping.c:524 (set (reg/f:SI 141)
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 140)
                (const_int 28 [0x1c])) [0 cpu_cache.dma_map_area+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:524 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:524 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:524 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ off ])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/dma-mapping.c:524 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/mm/dma-mapping.c:524 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 2 arch/arm/mm/dma-mapping.c:524 (parallel [
            (call (mem:SI (symbol_ref:SI ("dma_cache_maint_page") [flags 0x3] <function_decl 0x1145ee00 dma_cache_maint_page>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 17 16 18 2 arch/arm/mm/dma-mapping.c:526 (set (reg/f:SI 142)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/mm/dma-mapping.c:526 (set (reg:SI 144)
        (mem/f/c/i:SI (reg/f:SI 142) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/mm/dma-mapping.c:526 (set (reg:SI 143)
        (minus:SI (reg/v/f:SI 136 [ page ])
            (reg:SI 144))) 28 {*arm_subsi3_insn} (nil))

(insn 20 19 21 2 arch/arm/mm/dma-mapping.c:526 (set (reg:SI 146)
        (ashiftrt:SI (reg:SI 143)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 143)
            (const_int 32 [0x20]))
        (nil)))

(insn 21 20 22 2 arch/arm/mm/dma-mapping.c:526 (set (reg:SI 147)
        (ashift:SI (reg:SI 146)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 22 21 23 2 arch/arm/mm/dma-mapping.c:526 (set (reg/v:SI 135 [ paddr ])
        (plus:SI (reg:SI 147)
            (reg/v:SI 137 [ off ]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 2 arch/arm/mm/dma-mapping.c:527 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ dir ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 2 arch/arm/mm/dma-mapping.c:527 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 2 -> ( 3 5)

;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  5 [72.0%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [28.0%]  (fallthru)
(note 25 24 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 148)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 134 [ D.25126 ])
        (mem/s/f/j/c:SI (reg/f:SI 148) [0 outer_cache.inv_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.25126 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 3 -> ( 4 7)

;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  7 [30.2%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [69.8%]  (fallthru)
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 149)
        (plus:SI (reg/v:SI 135 [ paddr ])
            (reg/v:SI 138 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 32 31 33 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 1 r1)
        (reg:SI 149)) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 37 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (parallel [
            (call (mem:SI (reg/f:SI 134 [ D.25126 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ( 7)

;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 5
;; Pred edge  2 [72.0%] 
(code_label 37 34 38 5 92 "" [1 uses])

(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 150)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 133 [ D.25129 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 150)
                (const_int 4 [0x4])) [0 outer_cache.clean_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.25129 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 43 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [78.3%]  (fallthru)
;; Succ edge  7 [21.6%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [78.3%]  (fallthru)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 151)
        (plus:SI (reg/v:SI 135 [ paddr ])
            (reg/v:SI 138 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 1 r1)
        (reg:SI 151)) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 53 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (parallel [
            (call (mem:SI (reg/f:SI 133 [ D.25129 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 4 5) -> 7
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [30.2%] 
;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  5 [21.6%] 
(code_label 53 47 56 7 94 "" [2 uses])

(note 56 53 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function dma_sync_sg_for_device (dma_sync_sg_for_device)[0:1292]

Deleted 1 trivially dead insns

10 basic blocks, 10 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 308, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 308, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  9 [100.0%]  (fallthru)

Basic block 4 , prev 2, next 5, loop_depth 1, count 0, freq 9700, maybe hot.
Predecessors:  9 [97.0%] 
Successors:  5 [0.0%]  (fallthru) 6 [100.0%] 

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 4.
Predecessors:  4 [0.0%]  (fallthru)
Successors: 

Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 9696, maybe hot.
Predecessors:  4 [100.0%] 
Successors:  7 [0.0%]  (fallthru) 8 [100.0%] 

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 4.
Predecessors:  6 [0.0%]  (fallthru)
Successors: 

Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 9692, maybe hot.
Predecessors:  6 [100.0%] 
Successors:  9 [100.0%]  (fallthru,dfs_back)

Basic block 9 , prev 8, next 12, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 8 [100.0%]  (fallthru,dfs_back)
Successors:  4 [97.0%]  12 [3.0%]  (fallthru)

Basic block 12 , prev 9, next 1, loop_depth 0, count 0, freq 300, maybe hot.
Predecessors:  9 [3.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 12, loop_depth 0, count 0, freq 300, maybe hot.
Predecessors:  12 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 arch/arm/mm/dma-mapping.c:654 (set (reg/v/f:SI 137 [ sg ])
        (reg:SI 1 r1 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:654 (set (reg/v:SI 138 [ nents ])
        (reg:SI 2 r2 [ nents ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:654 (set (reg/v:SI 139 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:658 (set (reg/v/f:SI 135 [ s ])
        (reg/v/f:SI 137 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 50 2 arch/arm/mm/dma-mapping.c:658 (set (reg/v:SI 134 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 3
;; Pred edge  8 [97.0%] 
(code_label 50 10 13 3 104 "" [1 uses])

(note 13 50 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 include/linux/scatterlist.h:96 (set (reg:SI 140)
        (const_int -2023406815 [0xffffffff87654321])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 include/linux/scatterlist.h:96 (set (reg:SI 141)
        (mem/s/j:SI (reg/v/f:SI 135 [ s ]) [0 <variable>.sg_magic+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 include/linux/scatterlist.h:96 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 140))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 3 include/linux/scatterlist.h:96 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [0.0%]  (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 142)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 1 r1)
        (const_int 96 [0x60])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 21 24 4 include/linux/scatterlist.h:96 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ()


;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 24 22 25 5 102 "" [1 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 include/linux/scatterlist.h:97 (set (reg:SI 133 [ D.25143 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 4 [0x4])) [0 <variable>.page_link+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 include/linux/scatterlist.h:97 (set (reg:SI 143)
        (and:SI (reg:SI 133 [ D.25143 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 28 27 29 5 include/linux/scatterlist.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 5 include/linux/scatterlist.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [0.0%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 144)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 144)) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 1 r1)
        (const_int 97 [0x61])) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 36 6 include/linux/scatterlist.h:97 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ()


;; Start of basic block ( 5) -> 7
;; Pred edge  5 [100.0%] 
(code_label 36 34 37 7 103 "" [1 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 145)
        (and:SI (reg:SI 133 [ D.25143 ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 39 38 40 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 0 r0)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 8 [0x8])) [0 <variable>.offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 12 [0xc])) [0 <variable>.length+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (parallel [
            (call (mem:SI (symbol_ref:SI ("___dma_page_cpu_to_dev") [flags 0x3] <function_decl 0x11060e00 ___dma_page_cpu_to_dev>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 44 43 45 7 arch/arm/mm/dma-mapping.c:658 (set (reg/v:SI 134 [ i ])
        (plus:SI (reg/v:SI 134 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 7 arch/arm/mm/dma-mapping.c:658 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ s ])) 167 {*arm_movsi_insn} (nil))

(call_insn 46 45 47 7 arch/arm/mm/dma-mapping.c:658 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sg_next") [flags 0x41] <function_decl 0x1103bb00 sg_next>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 47 46 48 7 arch/arm/mm/dma-mapping.c:658 (set (reg/v/f:SI 135 [ s ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 7) -> 8
;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru,dfs_back)
(code_label 48 47 49 8 101 "" [0 uses])

(note 49 48 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 49 52 8 arch/arm/mm/dma-mapping.c:658 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ i ])
            (reg/v:SI 138 [ nents ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 60 8 arch/arm/mm/dma-mapping.c:658 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
        (nil)))
;; End of basic block 8 -> ( 3 9)

;; Succ edge  3 [97.0%] 
;; Succ edge  9 [3.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 [3.0%]  (fallthru)
(note 60 52 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function dma_map_sg (dma_map_sg)[0:1289]

Deleted 1 trivially dead insns

17 basic blocks, 19 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 453, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 453, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  5 [0.0%]  4 [100.0%]  (fallthru)

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 453, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
Successors:  13 [100.0%]  (fallthru)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 0.
Predecessors:  2 [0.0%] 
Successors: 

Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 9775, maybe hot.
Predecessors:  13 [97.8%] 
Successors:  7 [0.0%]  (fallthru) 8 [100.0%] 

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 4.
Predecessors:  6 [0.0%]  (fallthru)
Successors: 

Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 9771, maybe hot.
Predecessors:  6 [100.0%] 
Successors:  9 [0.0%]  (fallthru) 10 [100.0%] 

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 4.
Predecessors:  8 [0.0%]  (fallthru)
Successors: 

Basic block 10 , prev 9, next 11, loop_depth 1, count 0, freq 9767, maybe hot.
Predecessors:  8 [100.0%] 
Successors:  11 [2.2%]  (fallthru) 12 [97.8%] 

Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 220, maybe hot.
Predecessors:  10 [2.2%]  (fallthru)
Successors:  16 [100.0%]  (fallthru)

Basic block 12 , prev 11, next 13, loop_depth 1, count 0, freq 9547, maybe hot.
Predecessors:  10 [97.8%] 
Successors:  13 [100.0%]  (fallthru,dfs_back)

Basic block 13 , prev 12, next 15, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 12 [100.0%]  (fallthru,dfs_back)
Successors:  6 [97.8%]  18 [2.2%]  (fallthru)

Basic block 15 , prev 13, next 16, loop_depth 1, count 0, freq 2222, maybe hot.
Predecessors:  16 [91.0%] 
Successors:  16 [100.0%]  (fallthru,dfs_back)

Basic block 16 , prev 15, next 17, loop_depth 1, count 0, freq 2442, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 15 [100.0%]  (fallthru,dfs_back)
Successors:  15 [91.0%]  17 [9.0%]  (fallthru)

Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 220, maybe hot.
Predecessors:  16 [9.0%]  (fallthru)
Successors:  18 [100.0%]  (fallthru)

Basic block 18 , prev 17, next 1, loop_depth 0, count 0, freq 445, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 13 [2.2%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 18, loop_depth 0, count 0, freq 445, maybe hot.
Predecessors:  18 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 arch/arm/mm/dma-mapping.c:574 (set (reg/v/f:SI 144 [ sg ])
        (reg:SI 1 r1 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:574 (set (reg/v:SI 145 [ nents ])
        (reg:SI 2 r2 [ nents ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:574 (set (reg/v:SI 146 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:578 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ dir ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/mm/dma-mapping.c:578 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 4 3)

;; Succ edge  4 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/mm/dma-mapping.c:578 (set (reg/v/f:SI 139 [ s ])
        (reg/v/f:SI 144 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 16 3 arch/arm/mm/dma-mapping.c:578 (set (reg/v:SI 138 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 12)

;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; Pred edge  2 [0.0%] 
(code_label 16 13 17 4 110 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 arch/arm/mm/dma-mapping.c:578 discrim 1 (set (reg:SI 147)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 4 arch/arm/mm/dma-mapping.c:578 discrim 1 (set (reg:SI 148)
        (const_int 578 [0x242])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 arch/arm/mm/dma-mapping.c:578 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 147)) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 arch/arm/mm/dma-mapping.c:578 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 148)) 167 {*arm_movsi_insn} (nil))

(call_insn 22 21 78 4 arch/arm/mm/dma-mapping.c:578 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ()


;; Start of basic block ( 12) -> 5
;; Pred edge  12 [97.8%] 
(code_label 78 22 24 5 116 "" [1 uses])

(note 24 78 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 include/linux/scatterlist.h:96 (set (reg:SI 149)
        (const_int -2023406815 [0xffffffff87654321])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 include/linux/scatterlist.h:96 (set (reg:SI 150)
        (mem/s/j:SI (reg/v/f:SI 139 [ s ]) [0 <variable>.sg_magic+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 include/linux/scatterlist.h:96 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (reg:SI 149))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 28 27 29 5 include/linux/scatterlist.h:96 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [0.0%]  (fallthru)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 6 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 151)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 6 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 151)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 1 r1)
        (const_int 96 [0x60])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 35 6 include/linux/scatterlist.h:96 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ()


;; Start of basic block ( 5) -> 7
;; Pred edge  5 [100.0%] 
(code_label 35 33 36 7 112 "" [1 uses])

(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 7 include/linux/scatterlist.h:97 (set (reg:SI 135 [ D.25174 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ s ])
                (const_int 4 [0x4])) [0 <variable>.page_link+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 7 include/linux/scatterlist.h:97 (set (reg:SI 152)
        (and:SI (reg:SI 135 [ D.25174 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 39 38 40 7 include/linux/scatterlist.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 41 7 include/linux/scatterlist.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [0.0%]  (fallthru)
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 8 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 153)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 8 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 153)) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 8 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 1 r1)
        (const_int 97 [0x61])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 47 8 include/linux/scatterlist.h:97 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 8 -> ()


;; Start of basic block ( 7) -> 9
;; Pred edge  7 [100.0%] 
(code_label 47 45 48 9 113 "" [1 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 9 include/linux/scatterlist.h:99 (set (reg/f:SI 136 [ D.25168 ])
        (and:SI (reg:SI 135 [ D.25174 ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 50 49 51 9 arch/arm/mm/dma-mapping.c:581 (set (reg:SI 141 [ D.24869 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ s ])
                (const_int 8 [0x8])) [0 <variable>.offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 0 r0)
        (reg/f:SI 136 [ D.25168 ])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 1 r1)
        (reg:SI 141 [ D.24869 ])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ s ])
                (const_int 12 [0xc])) [0 <variable>.length+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 55 54 56 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (parallel [
            (call (mem:SI (symbol_ref:SI ("___dma_page_cpu_to_dev") [flags 0x3] <function_decl 0x11060e00 ___dma_page_cpu_to_dev>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 56 55 57 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg/f:SI 154)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg:SI 156)
        (mem/f/c/i:SI (reg/f:SI 154) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg:SI 155)
        (minus:SI (reg/f:SI 136 [ D.25168 ])
            (reg:SI 156))) 28 {*arm_subsi3_insn} (nil))

(insn 59 58 60 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg:SI 158)
        (ashiftrt:SI (reg:SI 155)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 155)
            (const_int 32 [0x20]))
        (nil)))

(insn 60 59 61 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg:SI 159)
        (ashift:SI (reg:SI 158)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 61 60 62 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg:SI 134 [ D.25188 ])
        (plus:SI (reg:SI 159)
            (reg:SI 141 [ D.24869 ]))) 4 {*arm_addsi3} (nil))

(insn 62 61 63 9 arch/arm/mm/dma-mapping.c:581 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ s ])
                (const_int 16 [0x10])) [0 <variable>.dma_address+0 S4 A32])
        (reg:SI 134 [ D.25188 ])) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 9 arch/arm/mm/dma-mapping.c:583 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.25188 ])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 64 63 65 9 arch/arm/mm/dma-mapping.c:583 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
        (nil)))
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 [2.2%]  (fallthru)
;; Succ edge  11 [97.8%] 

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [2.2%]  (fallthru)
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 10 arch/arm/mm/dma-mapping.c:583 (set (reg/v/f:SI 133 [ s.771 ])
        (reg/v/f:SI 144 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 70 10 arch/arm/mm/dma-mapping.c:583 (set (reg/v:SI 137 [ j ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 14)

;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; Pred edge  9 [97.8%] 
(code_label 70 67 71 11 114 "" [1 uses])

(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 11 arch/arm/mm/dma-mapping.c:580 (set (reg/v:SI 138 [ i ])
        (plus:SI (reg/v:SI 138 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 73 72 74 11 arch/arm/mm/dma-mapping.c:580 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ s ])) 167 {*arm_movsi_insn} (nil))

(call_insn 74 73 75 11 arch/arm/mm/dma-mapping.c:580 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sg_next") [flags 0x41] <function_decl 0x1103bb00 sg_next>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 75 74 76 11 arch/arm/mm/dma-mapping.c:580 (set (reg/v/f:SI 139 [ s ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)

;; Succ edge  12 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 11) -> 12
;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru,dfs_back)
(code_label 76 75 77 12 111 "" [0 uses])

(note 77 76 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 79 77 80 12 arch/arm/mm/dma-mapping.c:580 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ i ])
            (reg/v:SI 145 [ nents ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 80 79 104 12 arch/arm/mm/dma-mapping.c:580 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
        (nil)))
;; End of basic block 12 -> ( 5 16)

;; Succ edge  5 [97.8%] 
;; Succ edge  16 [2.2%]  (fallthru)

;; Start of basic block ( 14) -> 13
;; Pred edge  14 [91.0%] 
(code_label 104 80 84 13 118 "" [1 uses])

(note 84 104 85 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 13 arch/arm/mm/dma-mapping.c:591 (set (reg:SI 140 [ D.24872 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ s.771 ])
                (const_int 16 [0x10])) [0 <variable>.dma_address+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg/f:SI 160)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 161)
        (lshiftrt:SI (reg:SI 140 [ D.24872 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 88 87 89 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 162)
        (ashift:SI (reg:SI 161)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 89 88 90 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 164)
        (mem/f/c/i:SI (reg/f:SI 160) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 90 89 91 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 163)
        (plus:SI (reg:SI 164)
            (reg:SI 162))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 166)
        (ashift:SI (reg:SI 140 [ D.24872 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 92 91 93 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 165)
        (lshiftrt:SI (reg:SI 166)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 140 [ D.24872 ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 93 92 94 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 0 r0)
        (reg:SI 163)) 167 {*arm_movsi_insn} (nil))

(insn 94 93 95 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 1 r1)
        (reg:SI 165)) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ s.771 ])
                (const_int 12 [0xc])) [0 <variable>.length+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (parallel [
            (call (mem:SI (symbol_ref:SI ("___dma_page_dev_to_cpu") [flags 0x3] <function_decl 0x11060f80 ___dma_page_dev_to_cpu>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 98 97 99 13 arch/arm/mm/dma-mapping.c:590 discrim 2 (set (reg/v:SI 137 [ j ])
        (plus:SI (reg/v:SI 137 [ j ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 99 98 100 13 arch/arm/mm/dma-mapping.c:590 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 133 [ s.771 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 100 99 101 13 arch/arm/mm/dma-mapping.c:590 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sg_next") [flags 0x41] <function_decl 0x1103bb00 sg_next>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 101 100 102 13 arch/arm/mm/dma-mapping.c:590 discrim 2 (set (reg/v/f:SI 133 [ s.771 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 10 13) -> 14
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru,dfs_back)
(code_label 102 101 103 14 115 "" [0 uses])

(note 103 102 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 105 103 106 14 arch/arm/mm/dma-mapping.c:590 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ j ])
            (reg/v:SI 138 [ i ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 106 105 107 14 arch/arm/mm/dma-mapping.c:590 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 14 -> ( 13 15)

;; Succ edge  13 [91.0%] 
;; Succ edge  15 [9.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; Pred edge  14 [9.0%]  (fallthru)
(note 107 106 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 15 arch/arm/mm/dma-mapping.c:592 (set (reg/v:SI 145 [ nents ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 12) -> 16
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  12 [2.2%]  (fallthru)
(code_label 109 108 110 16 117 "" [0 uses])

(note 110 109 111 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 115 16 arch/arm/mm/dma-mapping.c:593 (set (reg:SI 142 [ <result> ])
        (reg/v:SI 145 [ nents ])) 167 {*arm_movsi_insn} (nil))

(insn 115 111 121 16 arch/arm/mm/dma-mapping.c:593 (set (reg/i:SI 0 r0)
        (reg:SI 142 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 121 115 0 16 arch/arm/mm/dma-mapping.c:593 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function dma_free_coherent (dma_free_coherent)[0:1283]


25 basic blocks, 34 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [0.0%]  (fallthru) 5 [100.0%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 1.
Predecessors:  2 [0.0%]  (fallthru)
Successors:  5 [100.0%]  (fallthru)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  2 [100.0%]  4 [100.0%]  (fallthru)
Successors:  6 [100.0%]  (fallthru)

Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 6 [86.0%]  (dfs_back)
Successors:  6 [86.0%]  (dfs_back) 7 [14.0%]  (fallthru)

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  6 [14.0%]  (fallthru)
Successors:  27 [61.0%]  8 [39.0%]  (fallthru)

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 546, maybe hot.
Predecessors:  7 [39.0%]  (fallthru)
Successors:  9 [0.0%]  (fallthru) 10 [100.0%] 

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 0.
Predecessors:  8 [0.0%]  (fallthru)
Successors:  22 [100.0%]  (fallthru)

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 546, maybe hot.
Predecessors:  8 [100.0%] 
Successors:  12 [0.0%]  11 [100.0%]  (fallthru)

Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 546, maybe hot.
Predecessors:  10 [100.0%]  (fallthru)
Successors:  13 [100.0%]  (fallthru)

Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 0.
Predecessors:  10 [0.0%] 
Successors:  13 [100.0%]  (fallthru)

Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 546, maybe hot.
Predecessors:  11 [100.0%]  (fallthru) 12 [100.0%]  (fallthru)
Successors:  14 [100.0%]  (fallthru)

Basic block 14 , prev 13, next 15, loop_depth 1, count 0, freq 3896, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 20 [86.0%]  (dfs_back)
Successors:  16 [50.0%]  15 [50.0%]  (fallthru)

Basic block 15 , prev 14, next 16, loop_depth 1, count 0, freq 1948, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
Successors:  17 [100.0%]  (fallthru)

Basic block 16 , prev 15, next 17, loop_depth 1, count 0, freq 1948, maybe hot.
Predecessors:  14 [50.0%] 
Successors:  17 [100.0%]  (fallthru)

Basic block 17 , prev 16, next 18, loop_depth 1, count 0, freq 3896, maybe hot.
Predecessors:  15 [100.0%]  (fallthru) 16 [100.0%]  (fallthru)
Successors:  19 [0.0%]  18 [100.0%]  (fallthru)

Basic block 18 , prev 17, next 19, loop_depth 1, count 0, freq 3895, maybe hot.
Predecessors:  17 [100.0%]  (fallthru)
Successors:  19 [0.0%]  (fallthru) 20 [100.0%] 

Basic block 19 , prev 18, next 20, loop_depth 1, count 0, freq 3.
Predecessors:  17 [0.0%]  18 [0.0%]  (fallthru)
Successors:  20 [100.0%]  (fallthru)

Basic block 20 , prev 19, next 21, loop_depth 1, count 0, freq 3896, maybe hot.
Predecessors:  18 [100.0%]  19 [100.0%]  (fallthru)
Successors:  14 [86.0%]  (dfs_back) 21 [14.0%]  (fallthru)

Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 546, maybe hot.
Predecessors:  20 [14.0%]  (fallthru)
Successors:  22 [100.0%]  (fallthru)

Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 546, maybe hot.
Predecessors:  21 [100.0%]  (fallthru) 9 [100.0%]  (fallthru)
Successors:  24 [100.0%]  (fallthru)

Basic block 23 , prev 22, next 24, loop_depth 1, count 0, freq 5518, maybe hot.
Predecessors:  24 [91.0%] 
Successors:  24 [100.0%]  (fallthru,dfs_back)

Basic block 24 , prev 23, next 27, loop_depth 1, count 0, freq 6064, maybe hot.
Predecessors:  22 [100.0%]  (fallthru) 23 [100.0%]  (fallthru,dfs_back)
Successors:  23 [91.0%]  27 [9.0%]  (fallthru)

Basic block 27 , prev 24, next 1, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  24 [9.0%]  (fallthru) 7 [61.0%] 
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 27, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  27 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 4 9 5 2 arch/arm/mm/dma-mapping.c:419 (set (reg/v/f:SI 151 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:419 (set (reg/v:SI 152 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/dma-mapping.c:419 (set (reg/v/f:SI 153 [ cpu_addr ])
        (reg:SI 2 r2 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/dma-mapping.c:419 (set (reg/v:SI 154 [ handle ])
        (reg:SI 3 r3 [ handle ])) 167 {*arm_movsi_insn} (nil))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 148 [ _flags ])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118080))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 12 11 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:SI 155)
        (and:SI (reg/v:SI 148 [ _flags ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)

;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [0.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 arch/arm/mm/dma-mapping.c:420 discrim 1 (set (reg:SI 156)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/mm/dma-mapping.c:420 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 156)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 arch/arm/mm/dma-mapping.c:420 discrim 1 (set (reg:SI 1 r1)
        (const_int 420 [0x1a4])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 18 20 3 arch/arm/mm/dma-mapping.c:420 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a67280 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 20 19 21 4 124 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 include/asm-generic/getorder.h:13 (set (reg:SI 157)
        (plus:SI (reg/v:SI 152 [ size ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 4 include/asm-generic/getorder.h:13 (set (reg/v:SI 147 [ size ])
        (lshiftrt:SI (reg:SI 157)
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 28 4 include/asm-generic/getorder.h:14 (set (reg/v:SI 146 [ order ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 5
;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  5 [86.0%]  (dfs_back)
(code_label 28 24 25 5 125 "" [1 uses])

(note 25 28 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 include/asm-generic/getorder.h:16 (set (reg/v:SI 147 [ size ])
        (lshiftrt:SI (reg/v:SI 147 [ size ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 29 5 include/asm-generic/getorder.h:17 (set (reg/v:SI 146 [ order ])
        (plus:SI (reg/v:SI 146 [ order ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 29 27 30 5 include/asm-generic/getorder.h:18 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 5 include/asm-generic/getorder.h:18 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 5 -> ( 5 6)

;; Succ edge  5 [86.0%]  (dfs_back)
;; Succ edge  6 [14.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [14.0%]  (fallthru)
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 arch/arm/mm/dma-mapping.c:422 (set (reg:SI 0 r0)
        (reg/v/f:SI 151 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 arch/arm/mm/dma-mapping.c:422 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ order ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 6 arch/arm/mm/dma-mapping.c:422 (set (reg:SI 2 r2)
        (reg/v/f:SI 153 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 35 34 36 6 arch/arm/mm/dma-mapping.c:422 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dma_release_from_coherent") [flags 0x41] <function_decl 0x11060400 dma_release_from_coherent>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 36 35 37 6 arch/arm/mm/dma-mapping.c:422 (set (reg:SI 150 [ D.24658 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 6 arch/arm/mm/dma-mapping.c:422 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150 [ D.24658 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 38 37 39 6 arch/arm/mm/dma-mapping.c:422 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 175)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 6 -> ( 24 7)

;; Succ edge  24 [61.0%] 
;; Succ edge  7 [39.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [39.0%]  (fallthru)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 7 arch/arm/mm/dma-mapping.c:425 (set (reg:SI 158)
        (plus:SI (reg/v:SI 152 [ size ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 41 40 42 7 arch/arm/mm/dma-mapping.c:425 (set (reg:SI 149 [ D.24661 ])
        (plus:SI (reg:SI 158)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 152 [ size ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 42 41 43 7 arch/arm/mm/dma-mapping.c:425 (set (reg:SI 159)
        (and:SI (reg:SI 149 [ D.24661 ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 42 44 7 arch/arm/mm/dma-mapping.c:425 (set (reg/v:SI 136 [ size.823 ])
        (and:SI (reg:SI 159)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 149 [ D.24661 ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 44 43 45 7 arch/arm/mm/dma-mapping.c:259 (set (reg/f:SI 160)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 7 arch/arm/mm/dma-mapping.c:259 (set (reg:SI 0 r0)
        (reg/f:SI 160)) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 7 arch/arm/mm/dma-mapping.c:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 153 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 48 7 arch/arm/mm/dma-mapping.c:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arm_vmregion_find_remove") [flags 0x41] <function_decl 0x11440d00 arm_vmregion_find_remove>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 48 47 49 7 arch/arm/mm/dma-mapping.c:259 (set (reg/v/f:SI 141 [ c ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 arch/arm/mm/dma-mapping.c:260 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 141 [ c ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 7 arch/arm/mm/dma-mapping.c:260 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [0.0%]  (fallthru)
(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 8 arch/arm/mm/dma-mapping.c:261 (set (reg:SI 161)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114ecc80>)) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 8 arch/arm/mm/dma-mapping.c:261 (set (reg/f:SI 162)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 8 arch/arm/mm/dma-mapping.c:261 (set (reg:SI 163)
        (plus:SI (reg/f:SI 162)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (nil))

(insn 55 54 56 8 arch/arm/mm/dma-mapping.c:261 (set (reg:SI 0 r0)
        (reg:SI 161)) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 8 arch/arm/mm/dma-mapping.c:261 (set (reg:SI 1 r1)
        (reg:SI 163)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 8 arch/arm/mm/dma-mapping.c:261 (set (reg:SI 2 r2)
        (reg/v/f:SI 153 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 59 8 arch/arm/mm/dma-mapping.c:261 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(call_insn 59 58 62 8 arch/arm/mm/dma-mapping.c:263 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 8 -> ( 21)

;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; Pred edge  7 [100.0%] 
(code_label 62 59 63 9 127 "" [1 uses])

(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 9 arch/arm/mm/dma-mapping.c:267 (set (reg:SI 164)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 12 [0xc])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 9 arch/arm/mm/dma-mapping.c:267 (set (reg:SI 165)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 9 arch/arm/mm/dma-mapping.c:267 (set (reg:SI 139 [ D.25252 ])
        (minus:SI (reg:SI 164)
            (reg:SI 165))) 28 {*arm_subsi3_insn} (nil))

(insn 67 66 68 9 arch/arm/mm/dma-mapping.c:267 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.25252 ])
            (reg/v:SI 136 [ size.823 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 68 67 69 9 arch/arm/mm/dma-mapping.c:267 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 9 -> ( 11 10)

;; Succ edge  11 [0.0%] 
;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [100.0%]  (fallthru)
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 73 10 arch/arm/mm/dma-mapping.c:267 (set (reg/v:SI 135 [ size.827 ])
        (reg/v:SI 136 [ size.823 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 12)

;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; Pred edge  9 [0.0%] 
(code_label 73 70 74 11 129 "" [1 uses])

(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 11 arch/arm/mm/dma-mapping.c:268 (set (reg:SI 166)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114ecd20>)) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 11 arch/arm/mm/dma-mapping.c:268 (set (reg/f:SI 167)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 11 arch/arm/mm/dma-mapping.c:268 (set (reg:SI 168)
        (plus:SI (reg/f:SI 167)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (nil))

(insn 78 77 79 11 arch/arm/mm/dma-mapping.c:268 (set (reg:SI 0 r0)
        (reg:SI 166)) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 11 arch/arm/mm/dma-mapping.c:268 (set (reg:SI 1 r1)
        (reg:SI 168)) 167 {*arm_movsi_insn} (nil))

(insn 80 79 81 11 arch/arm/mm/dma-mapping.c:268 (set (reg:SI 2 r2)
        (reg:SI 139 [ D.25252 ])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 11 arch/arm/mm/dma-mapping.c:268 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ size.823 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 82 81 83 11 arch/arm/mm/dma-mapping.c:268 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(call_insn 83 82 84 11 arch/arm/mm/dma-mapping.c:270 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 84 83 85 11 arch/arm/mm/dma-mapping.c:271 (set (reg:SI 169)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 12 [0xc])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 11 arch/arm/mm/dma-mapping.c:271 (set (reg:SI 170)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 11 arch/arm/mm/dma-mapping.c:271 (set (reg/v:SI 135 [ size.827 ])
        (minus:SI (reg:SI 169)
            (reg:SI 170))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 11 -> ( 12)

;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 87 86 88 12 130 "" [0 uses])

(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 12 arch/arm/mm/dma-mapping.c:274 (set (reg:SI 171)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 90 89 91 12 arch/arm/mm/dma-mapping.c:274 (set (reg:SI 140 [ D.25251 ])
        (plus:SI (reg:SI 171)
            (const_int 16777216 [0x1000000]))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 12 arch/arm/mm/dma-mapping.c:274 (set (reg/v:SI 143 [ idx ])
        (lshiftrt:SI (reg:SI 140 [ D.25251 ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 92 91 93 12 arch/arm/mm/dma-mapping.c:275 (set (reg:SI 172)
        (lshiftrt:SI (reg:SI 140 [ D.25251 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 93 92 94 12 arch/arm/mm/dma-mapping.c:275 (set (reg:SI 173)
        (ashift:SI (reg:SI 172)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 94 93 95 12 arch/arm/mm/dma-mapping.c:275 (set (reg/v:SI 144 [ off ])
        (lshiftrt:SI (reg:SI 173)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 172)
            (const_int 511 [0x1ff]))
        (nil)))

(insn 95 94 96 12 arch/arm/mm/dma-mapping.c:276 (set (reg/f:SI 174)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 12 arch/arm/mm/dma-mapping.c:276 (set (reg:SI 175)
        (ashift:SI (reg/v:SI 144 [ off ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 97 96 98 12 arch/arm/mm/dma-mapping.c:276 (set (reg:SI 176)
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 143 [ idx ])
                    (const_int 4 [0x4]))
                (reg/f:SI 174)) [0 consistent_pte S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 98 97 137 12 arch/arm/mm/dma-mapping.c:276 (set (reg/v/f:SI 142 [ ptep ])
        (plus:SI (reg:SI 176)
            (reg:SI 175))) 4 {*arm_addsi3} (nil))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 19) -> 13
;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  19 [86.0%]  (dfs_back)
(code_label 137 98 99 13 135 "" [1 uses])

(note 99 137 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 101 13 include/asm-generic/pgtable.h:76 (set (reg/v:SI 145 [ pte ])
        (mem:SI (reg/v/f:SI 142 [ ptep ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 101 100 102 13 include/asm-generic/pgtable.h:77 (set (reg:SI 0 r0)
        (reg/v/f:SI 142 [ ptep ])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 13 include/asm-generic/pgtable.h:77 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 103 102 104 13 include/asm-generic/pgtable.h:77 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 104 103 105 13 include/asm-generic/pgtable.h:77 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_set_pte_ext") [flags 0x41] <function_decl 0x10e63d00 cpu_v7_set_pte_ext>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 105 104 106 13 arch/arm/mm/dma-mapping.c:283 (set (reg/v:SI 144 [ off ])
        (plus:SI (reg/v:SI 144 [ off ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 106 105 107 13 arch/arm/mm/dma-mapping.c:284 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ off ])
            (const_int 512 [0x200]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 107 106 108 13 arch/arm/mm/dma-mapping.c:284 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 13 -> ( 15 14)

;; Succ edge  15 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; Pred edge  13 [50.0%]  (fallthru)
(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 112 14 arch/arm/mm/dma-mapping.c:281 (set (reg/v/f:SI 142 [ ptep ])
        (plus:SI (reg/v/f:SI 142 [ ptep ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))
;; End of basic block 14 -> ( 16)

;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 15
;; Pred edge  13 [50.0%] 
(code_label 112 109 113 15 131 "" [1 uses])

(note 113 112 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 15 arch/arm/mm/dma-mapping.c:286 (set (reg/v:SI 143 [ idx ])
        (plus:SI (reg/v:SI 143 [ idx ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 115 114 116 15 arch/arm/mm/dma-mapping.c:286 (set (reg/f:SI 177)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 15 arch/arm/mm/dma-mapping.c:286 (set (reg/v/f:SI 142 [ ptep ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 143 [ idx ])
                    (const_int 4 [0x4]))
                (reg/f:SI 177)) [0 consistent_pte S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 117 116 118 15 arch/arm/mm/dma-mapping.c:285 (set (reg/v:SI 144 [ off ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 118 117 119 16 132 "" [0 uses])

(note 119 118 120 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 16 arch/arm/mm/dma-mapping.c:289 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ pte ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 121 120 122 16 arch/arm/mm/dma-mapping.c:289 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 126)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 16 -> ( 18 17)

;; Succ edge  18 [0.0%] 
;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; Pred edge  16 [100.0%]  (fallthru)
(note 122 121 123 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 17 arch/arm/mm/dma-mapping.c:289 discrim 1 (set (reg:SI 178)
        (and:SI (reg/v:SI 145 [ pte ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 124 123 125 17 arch/arm/mm/dma-mapping.c:289 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 125 124 126 17 arch/arm/mm/dma-mapping.c:289 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 134)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 17 -> ( 18 19)

;; Succ edge  18 [0.0%]  (fallthru)
;; Succ edge  19 [100.0%] 

;; Start of basic block ( 16 17) -> 18
;; Pred edge  16 [0.0%] 
;; Pred edge  17 [0.0%]  (fallthru)
(code_label 126 125 127 18 133 "" [1 uses])

(note 127 126 128 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 18 arch/arm/mm/dma-mapping.c:290 (set (reg:SI 179)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114f1ac0>)) 167 {*arm_movsi_insn} (nil))

(insn 129 128 130 18 arch/arm/mm/dma-mapping.c:290 (set (reg/f:SI 180)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 18 arch/arm/mm/dma-mapping.c:290 (set (reg:SI 181)
        (plus:SI (reg/f:SI 180)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (nil))

(insn 131 130 132 18 arch/arm/mm/dma-mapping.c:290 (set (reg:SI 0 r0)
        (reg:SI 179)) 167 {*arm_movsi_insn} (nil))

(insn 132 131 133 18 arch/arm/mm/dma-mapping.c:290 (set (reg:SI 1 r1)
        (reg:SI 181)) 167 {*arm_movsi_insn} (nil))

(call_insn 133 132 134 18 arch/arm/mm/dma-mapping.c:290 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 18 -> ( 19)

;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 17 18) -> 19
;; Pred edge  17 [100.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 134 133 135 19 134 "" [1 uses])

(note 135 134 136 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 138 19 arch/arm/mm/dma-mapping.c:292 (set (reg/v:SI 135 [ size.827 ])
        (plus:SI (reg/v:SI 135 [ size.827 ])
            (const_int -4096 [0xfffffffffffff000]))) 4 {*arm_addsi3} (nil))

(insn 138 136 139 19 arch/arm/mm/dma-mapping.c:292 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ size.827 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 139 138 140 19 arch/arm/mm/dma-mapping.c:292 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 19 -> ( 13 20)

;; Succ edge  13 [86.0%]  (dfs_back)
;; Succ edge  20 [14.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; Pred edge  19 [14.0%]  (fallthru)
(note 140 139 141 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 20 arch/arm/mm/dma-mapping.c:294 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 142 141 143 20 arch/arm/mm/dma-mapping.c:294 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 12 [0xc])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 143 142 144 20 arch/arm/mm/dma-mapping.c:294 (parallel [
            (call (mem:SI (symbol_ref:SI ("flush_tlb_kernel_range") [flags 0x41] <function_decl 0x11440480 flush_tlb_kernel_range>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 144 143 145 20 arch/arm/mm/dma-mapping.c:296 (set (reg/f:SI 182)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 145 144 146 20 arch/arm/mm/dma-mapping.c:296 (set (reg:SI 0 r0)
        (reg/f:SI 182)) 167 {*arm_movsi_insn} (nil))

(insn 146 145 147 20 arch/arm/mm/dma-mapping.c:296 (set (reg:SI 1 r1)
        (reg/v/f:SI 141 [ c ])) 167 {*arm_movsi_insn} (nil))

(call_insn 147 146 148 20 arch/arm/mm/dma-mapping.c:296 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_vmregion_free") [flags 0x41] <function_decl 0x11440d80 arm_vmregion_free>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 20 -> ( 21)

;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 8) -> 21
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 148 147 149 21 128 "" [0 uses])

(note 149 148 150 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 21 arch/arm/mm/dma-mapping.c:430 (set (reg/f:SI 183)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 21 arch/arm/mm/dma-mapping.c:430 (set (reg:SI 184)
        (lshiftrt:SI (reg/v:SI 154 [ handle ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 152 151 153 21 arch/arm/mm/dma-mapping.c:430 (set (reg:SI 185)
        (ashift:SI (reg:SI 184)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 153 152 154 21 arch/arm/mm/dma-mapping.c:430 (set (reg:SI 186)
        (mem/f/c/i:SI (reg/f:SI 183) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 154 153 155 21 arch/arm/mm/dma-mapping.c:430 (set (reg/v/f:SI 138 [ page ])
        (plus:SI (reg:SI 186)
            (reg:SI 185))) 4 {*arm_addsi3} (nil))

(insn 155 154 156 21 arch/arm/mm/dma-mapping.c:111 (set (reg:SI 187)
        (lshiftrt:SI (reg/v:SI 136 [ size.823 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 156 155 157 21 arch/arm/mm/dma-mapping.c:111 (set (reg:SI 188)
        (ashift:SI (reg:SI 187)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 157 156 167 21 arch/arm/mm/dma-mapping.c:111 (set (reg/v/f:SI 137 [ e ])
        (plus:SI (reg/v/f:SI 138 [ page ])
            (reg:SI 188))) 4 {*arm_addsi3} (nil))
;; End of basic block 21 -> ( 23)

;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 23) -> 22
;; Pred edge  23 [91.0%] 
(code_label 167 157 160 22 137 "" [1 uses])

(note 160 167 161 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 162 22 arch/arm/mm/dma-mapping.c:114 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 162 161 163 22 arch/arm/mm/dma-mapping.c:114 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 163 162 164 22 arch/arm/mm/dma-mapping.c:114 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10cd6800 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 164 163 165 22 arch/arm/mm/dma-mapping.c:115 (set (reg/v/f:SI 138 [ page ])
        (plus:SI (reg/v/f:SI 138 [ page ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 22 -> ( 23)

;; Succ edge  23 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 21 22) -> 23
;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru,dfs_back)
(code_label 165 164 166 23 136 "" [0 uses])

(note 166 165 168 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 168 166 169 23 arch/arm/mm/dma-mapping.c:113 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 138 [ page ])
            (reg/v/f:SI 137 [ e ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 169 168 175 23 arch/arm/mm/dma-mapping.c:113 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 167)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 23 -> ( 22 24)

;; Succ edge  22 [91.0%] 
;; Succ edge  24 [9.0%]  (fallthru)

;; Start of basic block ( 23 6) -> 24
;; Pred edge  23 [9.0%]  (fallthru)
;; Pred edge  6 [61.0%] 
(code_label 175 169 178 24 138 "" [1 uses])

(note 178 175 0 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 24 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function dma_mmap (dma_mmap)[0:1280]

Deleted 3 trivially dead insns

7 basic blocks, 9 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [19.1%]  (fallthru) 7 [80.9%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 1910, maybe hot.
Predecessors:  2 [19.1%]  (fallthru)
Successors:  5 [4.0%]  (fallthru) 7 [96.0%] 

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 76, maybe hot.
Predecessors:  4 [4.0%]  (fallthru)
Successors:  6 [39.0%]  (fallthru) 7 [61.0%] 

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 30, maybe hot.
Predecessors:  5 [39.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)

Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 9970, maybe hot.
Predecessors:  2 [80.9%]  4 [96.0%]  5 [61.0%] 
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (ab,sibcall) 7 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 2 arch/arm/mm/dma-mapping.c:371 (set (reg/v/f:SI 142 [ vma ])
        (reg:SI 1 r1 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 7 2 arch/arm/mm/dma-mapping.c:371 (set (reg/v/f:SI 143 [ cpu_addr ])
        (reg:SI 2 r2 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(note 7 4 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/dma-mapping.c:377 (set (reg:SI 139 [ D.24577 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vma ])
                (const_int 8 [0x8])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:377 (set (reg:SI 138 [ D.24578 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:379 (set (reg/f:SI 146)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:379 (set (reg:SI 0 r0)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/dma-mapping.c:379 (set (reg:SI 1 r1)
        (reg/v/f:SI 143 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 2 arch/arm/mm/dma-mapping.c:379 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arm_vmregion_find") [flags 0x41] <function_decl 0x11440c80 arm_vmregion_find>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 17 2 arch/arm/mm/dma-mapping.c:379 (set (reg/v/f:SI 134 [ c ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/dma-mapping.c:380 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ c ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 2 arch/arm/mm/dma-mapping.c:380 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8090 [0x1f9a])
        (nil)))
;; End of basic block 2 -> ( 3 6)

;; Succ edge  3 [19.1%]  (fallthru)
;; Succ edge  6 [80.9%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [19.1%]  (fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 arch/arm/mm/dma-mapping.c:381 (set (reg/v:SI 133 [ off ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vma ])
                (const_int 72 [0x48])) [0 <variable>.vm_pgoff+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 arch/arm/mm/dma-mapping.c:383 (set (reg:SI 148)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ c ])
                (const_int 12 [0xc])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 3 arch/arm/mm/dma-mapping.c:383 (set (reg:SI 149)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 arch/arm/mm/dma-mapping.c:383 (set (reg:SI 147)
        (minus:SI (reg:SI 148)
            (reg:SI 149))) 28 {*arm_subsi3_insn} (nil))

(insn 24 23 25 3 arch/arm/mm/dma-mapping.c:383 (set (reg/v:SI 135 [ kern_size ])
        (lshiftrt:SI (reg:SI 147)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 26 3 arch/arm/mm/dma-mapping.c:385 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ off ])
            (reg/v:SI 135 [ kern_size ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 26 25 27 3 arch/arm/mm/dma-mapping.c:385 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
        (nil)))
;; End of basic block 3 -> ( 4 6)

;; Succ edge  4 [4.0%]  (fallthru)
;; Succ edge  6 [96.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [4.0%]  (fallthru)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 arch/arm/mm/dma-mapping.c:377 (set (reg:SI 150)
        (minus:SI (reg:SI 139 [ D.24577 ])
            (reg:SI 138 [ D.24578 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 29 28 30 4 arch/arm/mm/dma-mapping.c:377 (set (reg/v:SI 136 [ user_size ])
        (lshiftrt:SI (reg:SI 150)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 30 29 31 4 arch/arm/mm/dma-mapping.c:386 (set (reg:SI 151)
        (minus:SI (reg/v:SI 135 [ kern_size ])
            (reg/v:SI 133 [ off ]))) 28 {*arm_subsi3_insn} (nil))

(insn 31 30 32 4 arch/arm/mm/dma-mapping.c:386 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ user_size ])
            (reg:SI 151))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 32 31 33 4 arch/arm/mm/dma-mapping.c:386 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [39.0%]  (fallthru)
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 5 arch/arm/mm/dma-mapping.c:387 (set (reg/f:SI 152)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 154)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 134 [ c ])
                (const_int 16 [0x10])) [0 <variable>.vm_pages+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 155)
        (mem/f/c/i:SI (reg/f:SI 152) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 153)
        (minus:SI (reg:SI 154)
            (reg:SI 155))) 28 {*arm_subsi3_insn} (nil))

(insn 38 37 39 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 157)
        (ashiftrt:SI (reg:SI 153)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 153)
            (const_int 32 [0x20]))
        (nil)))

(insn 39 38 40 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 158)
        (plus:SI (reg:SI 157)
            (reg/v:SI 133 [ off ]))) 4 {*arm_addsi3} (nil))

(insn 40 39 41 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 159)
        (ashift:SI (reg/v:SI 136 [ user_size ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 41 40 42 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 160)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vma ])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 5 arch/arm/mm/dma-mapping.c:387 (set (mem:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 160)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 0 r0)
        (reg/v/f:SI 142 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 2 r2)
        (reg:SI 158)) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 3 r3)
        (reg:SI 159)) 167 {*arm_movsi_insn} (nil))

(call_insn/j 47 46 50 5 arch/arm/mm/dma-mapping.c:387 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("remap_pfn_range") [flags 0x41] <function_decl 0x10fb1200 remap_pfn_range>) [0 S4 A32])
                    (const_int 4 [0x4])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2 3 4) -> 6
;; Pred edge  2 [80.9%] 
;; Pred edge  3 [96.0%] 
;; Pred edge  4 [61.0%] 
(code_label 50 47 51 6 144 "" [3 uses])

(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 54 6 arch/arm/mm/dma-mapping.c:372 (set (reg/v:SI 137 [ ret ])
        (const_int -6 [0xfffffffffffffffa])) 167 {*arm_movsi_insn} (nil))

(insn 54 52 58 6 arch/arm/mm/dma-mapping.c:396 (set (reg:SI 140 [ <result> ])
        (reg/v:SI 137 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 58 54 64 6 arch/arm/mm/dma-mapping.c:396 (set (reg/i:SI 0 r0)
        (reg:SI 140 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 64 58 0 6 arch/arm/mm/dma-mapping.c:396 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function dma_mmap_writecombine (dma_mmap_writecombine)[0:1282]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)

Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/dma-mapping.c:408 (set (reg/v/f:SI 135 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:408 (set (reg/v/f:SI 136 [ vma ])
        (reg:SI 1 r1 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:408 (set (reg/v/f:SI 137 [ cpu_addr ])
        (reg:SI 2 r2 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:408 (set (reg/v:SI 138 [ dma_addr ])
        (reg:SI 3 r3 [ dma_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/dma-mapping.c:408 (set (reg/v:SI 139 [ size ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/dma-mapping.c:409 (set (reg:SI 141)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:409 (set (reg:SI 140)
        (and:SI (reg:SI 141)
            (const_int -61 [0xffffffffffffffc3]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:409 (set (reg:SI 142)
        (ior:SI (reg:SI 140)
            (const_int 4 [0x4]))) 89 {*arm_iorsi3} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:409 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/dma-mapping.c:410 (set (mem:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 139 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/mm/dma-mapping.c:410 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/mm/dma-mapping.c:410 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/dma-mapping.c:410 (set (reg:SI 2 r2)
        (reg/v/f:SI 137 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/mm/dma-mapping.c:410 (set (reg:SI 3 r3)
        (reg/v:SI 138 [ dma_addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 19 18 0 2 arch/arm/mm/dma-mapping.c:410 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dma_mmap") [flags 0x3] <function_decl 0x1145e500 dma_mmap>) [0 S4 A32])
                    (const_int 4 [0x4])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)


;; Function dma_mmap_coherent (dma_mmap_coherent)[0:1281]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)

Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (ab,sibcall)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/dma-mapping.c:400 (set (reg/v/f:SI 135 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:400 (set (reg/v/f:SI 136 [ vma ])
        (reg:SI 1 r1 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:400 (set (reg/v/f:SI 137 [ cpu_addr ])
        (reg:SI 2 r2 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:400 (set (reg/v:SI 138 [ dma_addr ])
        (reg:SI 3 r3 [ dma_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/dma-mapping.c:400 (set (reg/v:SI 139 [ size ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/dma-mapping.c:401 (set (reg:SI 141)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:401 (set (reg:SI 140)
        (and:SI (reg:SI 141)
            (const_int -573 [0xfffffffffffffdc3]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:401 (set (reg:SI 142)
        (ior:SI (reg:SI 140)
            (const_int 516 [0x204]))) 89 {*arm_iorsi3} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:401 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/dma-mapping.c:402 (set (mem:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 139 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/mm/dma-mapping.c:402 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/mm/dma-mapping.c:402 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/dma-mapping.c:402 (set (reg:SI 2 r2)
        (reg/v/f:SI 137 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/mm/dma-mapping.c:402 (set (reg:SI 3 r3)
        (reg/v:SI 138 [ dma_addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 19 18 0 2 arch/arm/mm/dma-mapping.c:402 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dma_mmap") [flags 0x3] <function_decl 0x1145e500 dma_mmap>) [0 S4 A32])
                    (const_int 4 [0x4])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)


;; Function __dma_alloc (__dma_alloc)[0:1277]


39 basic blocks, 55 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [100.0%]  (fallthru)

Basic block 4 , prev 2, next 5, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 4 [86.0%]  (dfs_back)
Successors:  4 [86.0%]  (dfs_back) 5 [14.0%]  (fallthru)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  4 [14.0%]  (fallthru)
Successors:  6 [85.0%]  (fallthru) 17 [15.0%] 

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 1190, maybe hot.
Predecessors:  5 [85.0%]  (fallthru)
Successors:  7 [29.0%]  (fallthru) 8 [71.0%] 

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 345, maybe hot.
Predecessors:  6 [29.0%]  (fallthru)
Successors:  40 [100.0%]  (fallthru)

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 845, maybe hot.
Predecessors:  6 [71.0%] 
Successors:  9 [29.0%]  (fallthru) 10 [71.0%] 

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 245, maybe hot.
Predecessors:  8 [29.0%]  (fallthru)
Successors:  40 [100.0%]  (fallthru)

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 0.
Predecessors:  8 [71.0%] 
Successors:  17 [50.0%]  11 [50.0%]  (fallthru)
Invalid sum of incoming frequencies 600, should be 0

Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 0.
Predecessors:  10 [50.0%]  (fallthru)
Successors:  16 [50.0%]  12 [50.0%]  (fallthru)

Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 0.
Predecessors:  11 [50.0%]  (fallthru)
Successors:  17 [50.0%]  13 [50.0%]  (fallthru)

Basic block 13 , prev 12, next 16, loop_depth 0, count 0, freq 0.
Predecessors:  12 [50.0%]  (fallthru)
Successors:  16 [100.0%]  (fallthru)

Basic block 16 , prev 13, next 17, loop_depth 0, count 0, freq 350, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 11 [50.0%] 
Successors:  18 [100.0%]  (fallthru)
Invalid sum of incoming frequencies 0, should be 350

Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 350, maybe hot.
Predecessors:  5 [15.0%]  10 [50.0%]  12 [50.0%] 
Successors:  18 [100.0%]  (fallthru)
Invalid sum of incoming frequencies 210, should be 350

Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  17 [100.0%]  (fallthru) 16 [100.0%]  (fallthru)
Successors:  39 [30.2%]  19 [69.8%]  (fallthru)

Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 489, maybe hot.
Predecessors:  18 [69.8%]  (fallthru)
Successors:  21 [100.0%]  (fallthru)

Basic block 20 , prev 19, next 21, loop_depth 1, count 0, freq 4942, maybe hot.
Predecessors:  21 [91.0%] 
Successors:  21 [100.0%]  (fallthru,dfs_back)

Basic block 21 , prev 20, next 22, loop_depth 1, count 0, freq 5431, maybe hot.
Predecessors:  19 [100.0%]  (fallthru) 20 [100.0%]  (fallthru,dfs_back)
Successors:  20 [91.0%]  22 [9.0%]  (fallthru)

Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 489, maybe hot.
Predecessors:  21 [9.0%]  (fallthru)
Successors:  23 [29.0%]  (fallthru) 24 [71.0%] 

Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 142, maybe hot.
Predecessors:  22 [29.0%]  (fallthru)
Successors:  24 [100.0%]  (fallthru)

Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 489, maybe hot.
Predecessors:  22 [71.0%]  23 [100.0%]  (fallthru)
Successors:  25 [69.8%]  (fallthru) 41 [30.2%] 

Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 341, maybe hot.
Predecessors:  24 [69.8%]  (fallthru)
Successors:  41 [100.0%]  (fallthru)

Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 1.
Predecessors:  41 [0.0%] 
Successors:  38 [100.0%]  (fallthru)

Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 1258, maybe hot.
Predecessors:  41 [100.0%]  (fallthru)
Successors:  28 [85.0%]  (fallthru) 38 [15.0%] 
Invalid sum of incoming frequencies 489, should be 1258

Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 1069, maybe hot.
Predecessors:  27 [85.0%]  (fallthru)
Successors:  29 [100.0%]  (fallthru)

Basic block 29 , prev 28, next 30, loop_depth 1, count 0, freq 7616, maybe hot.
Predecessors:  28 [100.0%]  (fallthru) 34 [100.0%]  (fallthru)
Successors:  30 [0.0%]  (fallthru) 31 [100.0%] 

Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 3.
Predecessors:  29 [0.0%]  (fallthru)
Successors: 

Basic block 31 , prev 30, next 32, loop_depth 1, count 0, freq 7613, maybe hot.
Predecessors:  29 [100.0%] 
Successors:  32 [50.0%]  (fallthru) 33 [50.0%] 

Basic block 32 , prev 31, next 33, loop_depth 1, count 0, freq 3807, maybe hot.
Predecessors:  31 [50.0%]  (fallthru)
Successors:  33 [100.0%]  (fallthru)

Basic block 33 , prev 32, next 34, loop_depth 1, count 0, freq 7613, maybe hot.
Predecessors:  31 [50.0%]  32 [100.0%]  (fallthru)
Successors:  34 [86.0%]  (fallthru) 35 [14.0%] 

Basic block 34 , prev 33, next 35, loop_depth 1, count 0, freq 6547, maybe hot.
Predecessors:  33 [86.0%]  (fallthru)
Successors:  29 [100.0%]  (fallthru)

Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 1066, maybe hot.
Predecessors:  33 [14.0%] 
Successors:  36 [92.3%]  (fallthru) 38 [7.7%] 

Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 984, maybe hot.
Predecessors:  35 [92.3%]  (fallthru)
Successors:  40 [100.0%]  (fallthru)

Basic block 37 , prev 36, next 38, loop_depth 1, count 0, freq 2745, maybe hot.
Predecessors:  38 [91.0%] 
Successors:  38 [100.0%]  (fallthru,dfs_back)

Basic block 38 , prev 37, next 39, loop_depth 1, count 0, freq 3016, maybe hot.
Predecessors:  26 [100.0%]  (fallthru) 37 [100.0%]  (fallthru,dfs_back) 35 [7.7%]  27 [15.0%] 
Successors:  37 [91.0%]  39 [9.0%]  (fallthru)

Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 0.
Predecessors:  18 [30.2%]  38 [9.0%]  (fallthru)
Successors:  40 [100.0%]  (fallthru)
Invalid sum of incoming frequencies 482, should be 0

Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 1397, maybe hot.
Predecessors:  39 [100.0%]  (fallthru) 36 [100.0%]  (fallthru) 9 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)
Invalid sum of incoming frequencies 1574, should be 1397

Basic block 41 , prev 40, next 1, loop_depth 0, count 0, freq 489, maybe hot.
Predecessors:  25 [100.0%]  (fallthru) 24 [30.2%] 
Successors:  26 [0.0%]  27 [100.0%]  (fallthru)

Basic block 1 , prev 41, loop_depth 0, count 0, freq 1397, maybe hot.
Predecessors:  40 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

Fallthru edge 9->11 redirected to 11
Conditionals threaded.
Deleting block 10.
deleting block 10
merging block 13 into block 12
Merged blocks 12 and 13.


try_optimize_cfg iteration 2

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 9 4 2 arch/arm/mm/dma-mapping.c:309 (set (reg/v/f:SI 160 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:309 (set (reg/v:SI 161 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:309 (set (reg/v/f:SI 162 [ handle ])
        (reg:SI 2 r2 [ handle ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/dma-mapping.c:309 (set (reg/v:SI 163 [ gfp ])
        (reg:SI 3 r3 [ gfp ])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/dma-mapping.c:309 (set (reg/v:SI 164 [ prot ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 prot+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 prot+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/mm/dma-mapping.c:318 (set (reg/v:SI 139 [ gfp.958 ])
        (and:SI (reg/v:SI 163 [ gfp ])
            (const_int -16385 [0xffffffffffffbfff]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:320 (set (reg:SI 165)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:320 (set (mem:SI (reg/v/f:SI 162 [ handle ]) [0 S4 A32])
        (reg:SI 165)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/dma-mapping.c:321 (set (reg:SI 166)
        (plus:SI (reg/v:SI 161 [ size ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 15 14 16 2 arch/arm/mm/dma-mapping.c:321 (set (reg:SI 158 [ D.24512 ])
        (plus:SI (reg:SI 166)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 161 [ size ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 16 15 17 2 arch/arm/mm/dma-mapping.c:321 (set (reg:SI 167)
        (and:SI (reg:SI 158 [ D.24512 ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/dma-mapping.c:321 (set (reg/v:SI 138 [ size.959 ])
        (and:SI (reg:SI 167)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 158 [ D.24512 ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 18 17 19 2 include/asm-generic/getorder.h:13 (set (reg:SI 154 [ D.25334 ])
        (plus:SI (reg/v:SI 138 [ size.959 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 19 18 20 2 include/asm-generic/getorder.h:13 (set (reg/v:SI 152 [ size ])
        (lshiftrt:SI (reg:SI 154 [ D.25334 ])
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (nil))

(insn 20 19 24 2 include/asm-generic/getorder.h:14 (set (reg/v:SI 153 [ order ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [86.0%]  (dfs_back)
(code_label 24 20 21 3 153 "" [1 uses])

(note 21 24 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 3 include/asm-generic/getorder.h:16 (set (reg/v:SI 152 [ size ])
        (lshiftrt:SI (reg/v:SI 152 [ size ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 23 22 25 3 include/asm-generic/getorder.h:17 (set (reg/v:SI 153 [ order ])
        (plus:SI (reg/v:SI 153 [ order ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 25 23 26 3 include/asm-generic/getorder.h:18 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 152 [ size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 26 25 27 3 include/asm-generic/getorder.h:18 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 3 -> ( 3 4)

;; Succ edge  3 [86.0%]  (dfs_back)
;; Succ edge  4 [14.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [14.0%]  (fallthru)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 arch/arm/mm/dma-mapping.c:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 160 [ dev ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 4 arch/arm/mm/dma-mapping.c:34 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 4 -> ( 5 14)

;; Succ edge  5 [85.0%]  (fallthru)
;; Succ edge  14 [15.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [85.0%]  (fallthru)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 5 arch/arm/mm/dma-mapping.c:35 (set (reg:SI 168)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 5 arch/arm/mm/dma-mapping.c:35 (set (reg/v:DI 151 [ mask ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 160 [ dev ])
                (reg:SI 168)) [0 <variable>.coherent_dma_mask+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 33 32 34 5 arch/arm/mm/dma-mapping.c:41 (set (reg:SI 169)
        (subreg:SI (reg/v:DI 151 [ mask ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 arch/arm/mm/dma-mapping.c:41 (set (reg:SI 169)
        (ior:SI (reg:SI 169)
            (subreg:SI (reg/v:DI 151 [ mask ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 35 34 36 5 arch/arm/mm/dma-mapping.c:41 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 36 35 37 5 arch/arm/mm/dma-mapping.c:41 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [29.0%]  (fallthru)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 6 arch/arm/mm/dma-mapping.c:42 (set (reg:SI 170)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x115c6b80>)) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 6 arch/arm/mm/dma-mapping.c:42 (set (reg:SI 0 r0)
        (reg/v/f:SI 160 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 6 arch/arm/mm/dma-mapping.c:42 (set (reg:SI 1 r1)
        (reg:SI 170)) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 42 6 arch/arm/mm/dma-mapping.c:42 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dev_warn") [flags 0x41] <function_decl 0x11022280 dev_warn>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 42 41 45 6 arch/arm/mm/dma-mapping.c:325 (set (reg/v/f:SI 156 [ addr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 37)

;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [71.0%] 
(code_label 45 42 46 7 155 "" [1 uses])

(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 7 arch/arm/mm/dma-mapping.c:46 (set (reg:DI 171)
        (not:DI (reg/v:DI 151 [ mask ]))) 133 {one_cmpldi2} (nil))

(insn 48 47 49 7 arch/arm/mm/dma-mapping.c:46 (set (reg:SI 172)
        (subreg:SI (reg:DI 171) 0)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 arch/arm/mm/dma-mapping.c:46 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 7 arch/arm/mm/dma-mapping.c:46 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 [29.0%]  (fallthru)
;; Succ edge  9 [71.0%] 

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [29.0%]  (fallthru)
(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 8 arch/arm/mm/dma-mapping.c:47 (set (reg:SI 173)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x111f0060>)) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 8 arch/arm/mm/dma-mapping.c:47 (set (reg:DI 174)
        (const_int 4294967295 [0xffffffff])) 163 {*arm_movdi} (nil))

(insn 54 53 55 8 arch/arm/mm/dma-mapping.c:47 (set (mem:DI (reg/f:SI 13 sp) [0 S8 A64])
        (reg:DI 174)) 163 {*arm_movdi} (nil))

(insn 55 54 56 8 arch/arm/mm/dma-mapping.c:47 (set (reg:SI 0 r0)
        (reg/v/f:SI 160 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 8 arch/arm/mm/dma-mapping.c:47 (set (reg:SI 1 r1)
        (reg:SI 173)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 8 arch/arm/mm/dma-mapping.c:47 (set (reg:DI 2 r2)
        (reg/v:DI 151 [ mask ])) 163 {*arm_movdi} (nil))

(call_insn 58 57 59 8 arch/arm/mm/dma-mapping.c:47 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dev_warn") [flags 0x41] <function_decl 0x11022280 dev_warn>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 59 58 62 8 arch/arm/mm/dma-mapping.c:325 (set (reg/v/f:SI 156 [ addr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 37)

;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; Pred edge  7 [71.0%] 
(code_label 62 59 63 9 157 "" [1 uses])

(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 9 arch/arm/mm/dma-mapping.c:80 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 151 [ mask ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 283 9 arch/arm/mm/dma-mapping.c:80 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 14 11)

;; Succ edge  14 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; Pred edge  9 [50.0%]  (fallthru)
(note 283 65 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 68 283 69 11 arch/arm/mm/dma-mapping.c:80 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 151 [ mask ]) 0)
            (const_int -2 [0xfffffffffffffffe]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 69 68 284 11 arch/arm/mm/dma-mapping.c:80 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 11 -> ( 14 12)

;; Succ edge  14 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; Pred edge  11 [50.0%]  (fallthru)
(note 284 69 70 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 70 284 76 12 arch/arm/mm/dma-mapping.c:80 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 151 [ mask ]) 0)
            (const_int -2 [0xfffffffffffffffe]))) 219 {*arm_cmpsi_insn} (nil))

(insn 76 70 79 12 arch/arm/mm/dma-mapping.c:81 (set (reg/v:SI 137 [ gfp.960 ])
        (ior:SI (reg/v:SI 139 [ gfp.958 ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 12 -> ( 15)

;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 4 9 11) -> 14
;; Pred edge  4 [15.0%] 
;; Pred edge  9 [50.0%] 
;; Pred edge  11 [50.0%] 
(code_label 79 76 80 14 154 "" [3 uses])

(note 80 79 81 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 14 arch/arm/mm/dma-mapping.c:81 (set (reg/v:SI 137 [ gfp.960 ])
        (reg/v:SI 139 [ gfp.958 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)

;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 12) -> 15
;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 82 81 83 15 159 "" [0 uses])

(note 83 82 84 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 85 15 arch/arm/mm/dma-mapping.c:63 (set (reg/v:SI 147 [ order ])
        (reg/v:SI 153 [ order ])) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 15 include/linux/gfp.h:300 (set (reg:SI 175)
        (const:SI (plus:SI (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)
                (const_int 2304 [0x900])))) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 15 include/linux/gfp.h:300 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ gfp.960 ])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 15 include/linux/gfp.h:300 (set (reg:SI 1 r1)
        (reg/v:SI 147 [ order ])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 89 15 include/linux/gfp.h:300 (set (reg:SI 2 r2)
        (reg:SI 175)) 167 {*arm_movsi_insn} (nil))

(insn 89 88 90 15 include/linux/gfp.h:300 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 90 89 91 15 include/linux/gfp.h:300 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__alloc_pages_nodemask") [flags 0x41] <function_decl 0x10cd6180 __alloc_pages_nodemask>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 91 90 92 15 include/linux/gfp.h:300 (set (reg/v/f:SI 157 [ page ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 92 91 93 15 arch/arm/mm/dma-mapping.c:84 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 157 [ page ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 93 92 94 15 arch/arm/mm/dma-mapping.c:84 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 254)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 15 -> ( 36 16)

;; Succ edge  36 [30.2%] 
;; Succ edge  16 [69.8%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; Pred edge  15 [69.8%]  (fallthru)
(note 94 93 95 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 16 arch/arm/mm/dma-mapping.c:90 (set (reg:SI 0 r0)
        (reg/v/f:SI 157 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 16 arch/arm/mm/dma-mapping.c:90 (set (reg:SI 1 r1)
        (reg/v:SI 147 [ order ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 16 arch/arm/mm/dma-mapping.c:90 (parallel [
            (call (mem:SI (symbol_ref:SI ("split_page") [flags 0x41] <function_decl 0x10f23500 split_page>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 98 97 99 16 arch/arm/mm/dma-mapping.c:91 (set (reg:SI 176)
        (lshiftrt:SI (reg/v:SI 138 [ size.959 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 99 98 100 16 arch/arm/mm/dma-mapping.c:91 (set (reg:SI 177)
        (ashift:SI (reg:SI 176)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 100 99 101 16 arch/arm/mm/dma-mapping.c:91 (set (reg/v/f:SI 148 [ p ])
        (plus:SI (reg/v/f:SI 157 [ page ])
            (reg:SI 177))) 4 {*arm_addsi3} (nil))

(insn 101 100 102 16 arch/arm/mm/dma-mapping.c:91 (set (reg:SI 179)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 16 arch/arm/mm/dma-mapping.c:91 (set (reg:SI 178)
        (ashift:SI (reg:SI 179)
            (reg/v:SI 153 [ order ]))) 117 {*arm_shiftsi3} (nil))

(insn 103 102 104 16 arch/arm/mm/dma-mapping.c:91 (set (reg/v/f:SI 149 [ e ])
        (plus:SI (reg/v/f:SI 157 [ page ])
            (reg:SI 178))) 4 {*arm_addsi3} (nil))

(insn 104 103 114 16 arch/arm/mm/dma-mapping.c:91 (set (reg/v/f:SI 136 [ p.961 ])
        (reg/v/f:SI 148 [ p ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 16 -> ( 18)

;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 17
;; Pred edge  18 [91.0%] 
(code_label 114 104 107 17 162 "" [1 uses])

(note 107 114 108 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 17 arch/arm/mm/dma-mapping.c:92 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ p.961 ])) 167 {*arm_movsi_insn} (nil))

(insn 109 108 110 17 arch/arm/mm/dma-mapping.c:92 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 110 109 111 17 arch/arm/mm/dma-mapping.c:92 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10cd6800 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 111 110 112 17 arch/arm/mm/dma-mapping.c:91 discrim 2 (set (reg/v/f:SI 136 [ p.961 ])
        (plus:SI (reg/v/f:SI 136 [ p.961 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 17 -> ( 18)

;; Succ edge  18 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 16 17) -> 18
;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  17 [100.0%]  (fallthru,dfs_back)
(code_label 112 111 113 18 161 "" [0 uses])

(note 113 112 115 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 115 113 116 18 arch/arm/mm/dma-mapping.c:91 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 136 [ p.961 ])
            (reg/v/f:SI 149 [ e ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 116 115 117 18 arch/arm/mm/dma-mapping.c:91 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 18 -> ( 17 19)

;; Succ edge  17 [91.0%] 
;; Succ edge  19 [9.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; Pred edge  18 [9.0%]  (fallthru)
(note 117 116 118 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 19 arch/arm/mm/dma-mapping.c:98 (set (reg:SI 0 r0)
        (reg/v/f:SI 157 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 119 118 120 19 arch/arm/mm/dma-mapping.c:98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("page_address") [flags 0x41] <function_decl 0x10f7b880 page_address>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 120 119 121 19 arch/arm/mm/dma-mapping.c:98 (set (reg/v/f:SI 150 [ ptr ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 121 120 122 19 arch/arm/mm/dma-mapping.c:99 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ size.959 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 122 121 123 19 arch/arm/mm/dma-mapping.c:99 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 19 -> ( 20 21)

;; Succ edge  20 [29.0%]  (fallthru)
;; Succ edge  21 [71.0%] 

;; Start of basic block ( 19) -> 20
;; Pred edge  19 [29.0%]  (fallthru)
(note 123 122 124 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 125 20 arch/arm/mm/dma-mapping.c:99 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 150 [ ptr ])) 167 {*arm_movsi_insn} (nil))

(insn 125 124 126 20 arch/arm/mm/dma-mapping.c:99 discrim 1 (set (reg:SI 1 r1)
        (reg/v:SI 138 [ size.959 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 126 125 127 20 arch/arm/mm/dma-mapping.c:99 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 20 -> ( 21)

;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 19 20) -> 21
;; Pred edge  19 [71.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
(code_label 127 126 128 21 163 "" [1 uses])

(note 128 127 129 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 129 128 130 21 arch/arm/mm/dma-mapping.c:100 (set (reg/f:SI 180)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x112494e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 21 arch/arm/mm/dma-mapping.c:100 (set (reg:SI 181)
        (plus:SI (reg/v/f:SI 150 [ ptr ])
            (reg/v:SI 138 [ size.959 ]))) 4 {*arm_addsi3} (nil))

(insn 131 130 132 21 arch/arm/mm/dma-mapping.c:100 (set (reg/f:SI 182)
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 180)
                (const_int 36 [0x24])) [0 cpu_cache.dma_flush_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 132 131 133 21 arch/arm/mm/dma-mapping.c:100 (set (reg:SI 0 r0)
        (reg/v/f:SI 150 [ ptr ])) 167 {*arm_movsi_insn} (nil))

(insn 133 132 134 21 arch/arm/mm/dma-mapping.c:100 (set (reg:SI 1 r1)
        (reg:SI 181)) 167 {*arm_movsi_insn} (nil))

(call_insn 134 133 135 21 arch/arm/mm/dma-mapping.c:100 (parallel [
            (call (mem:SI (reg/f:SI 182) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 135 134 136 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:55 (set (reg/f:SI 183)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 136 135 137 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:55 (set (reg/f:SI 155 [ D.25331 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 183)
                (const_int 8 [0x8])) [0 outer_cache.flush_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 137 136 138 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:55 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 155 [ D.25331 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 138 137 139 21 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:55 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 262)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 21 -> ( 22 38)

;; Succ edge  22 [69.8%]  (fallthru)
;; Succ edge  38 [30.2%] 

;; Start of basic block ( 21) -> 22
;; Pred edge  21 [69.8%]  (fallthru)
(note 139 138 140 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 141 22 arch/arm/mm/dma-mapping.c:101 (set (reg:SI 146 [ ptr.344 ])
        (reg/v/f:SI 150 [ ptr ])) 167 {*arm_movsi_insn} (nil))

(insn 141 140 142 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (set (reg:SI 184)
        (plus:SI (reg:SI 146 [ ptr.344 ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 142 141 143 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (set (reg:SI 185)
        (plus:SI (reg/v:SI 138 [ size.959 ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 143 142 144 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (set (reg:SI 186)
        (plus:SI (reg:SI 185)
            (reg:SI 146 [ ptr.344 ]))) 4 {*arm_addsi3} (nil))

(insn 144 143 145 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (set (reg:SI 0 r0)
        (reg:SI 184)) 167 {*arm_movsi_insn} (nil))

(insn 145 144 146 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (set (reg:SI 1 r1)
        (reg:SI 186)) 167 {*arm_movsi_insn} (nil))

(call_insn 146 145 264 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (parallel [
            (call (mem:SI (reg/f:SI 155 [ D.25331 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 22 -> ( 38)

;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 38) -> 23
;; Pred edge  38 [0.0%] 
(code_label 264 146 149 23 171 "" [1 uses])

(note 149 264 150 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 23 arch/arm/mm/dma-mapping.c:202 (set (reg:SI 187)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1150bec0>)) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 23 arch/arm/mm/dma-mapping.c:202 (set (reg/f:SI 188)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 152 151 153 23 arch/arm/mm/dma-mapping.c:202 (set (reg:SI 189)
        (plus:SI (reg/f:SI 188)
            (const_int 36 [0x24]))) 4 {*arm_addsi3} (nil))

(insn 153 152 154 23 arch/arm/mm/dma-mapping.c:202 (set (reg:SI 0 r0)
        (reg:SI 187)) 167 {*arm_movsi_insn} (nil))

(insn 154 153 155 23 arch/arm/mm/dma-mapping.c:202 (set (reg:SI 1 r1)
        (reg:SI 189)) 167 {*arm_movsi_insn} (nil))

(call_insn 155 154 156 23 arch/arm/mm/dma-mapping.c:202 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 156 155 159 23 arch/arm/mm/dma-mapping.c:203 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 23 -> ( 35)

;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 38) -> 24
;; Pred edge  38 [100.0%]  (fallthru)
(note 159 156 160 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 24 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 145 [ ret ])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 154 [ D.25334 ])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1265521)) -1 (nil))

(insn 161 160 162 24 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:269 (set (reg/v:SI 135 [ bit.962 ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 145 [ ret ]))) 28 {*arm_subsi3_insn} (nil))

(insn 162 161 163 24 arch/arm/mm/dma-mapping.c:221 (set (reg/f:SI 190)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 163 162 164 24 arch/arm/mm/dma-mapping.c:221 (parallel [
            (set (reg:SI 191)
                (smin:SI (reg/v:SI 135 [ bit.962 ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 24 cc))
        ]) 105 {*arm_smin_insn} (nil))

(insn 164 163 165 24 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 193)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 165 164 166 24 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 192)
        (ashift:SI (reg:SI 193)
            (reg:SI 191))) 117 {*arm_shiftsi3} (nil))

(insn 166 165 167 24 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 194)
        (and:SI (reg/v:SI 139 [ gfp.958 ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 167 166 168 24 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 0 r0)
        (reg/f:SI 190)) 167 {*arm_movsi_insn} (nil))

(insn 168 167 169 24 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 1 r1)
        (reg:SI 192)) 167 {*arm_movsi_insn} (nil))

(insn 169 168 170 24 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ size.959 ])) 167 {*arm_movsi_insn} (nil))

(insn 170 169 171 24 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 3 r3)
        (reg:SI 194)) 167 {*arm_movsi_insn} (nil))

(call_insn 171 170 172 24 arch/arm/mm/dma-mapping.c:221 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arm_vmregion_alloc") [flags 0x41] <function_decl 0x11440c00 arm_vmregion_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 172 171 173 24 arch/arm/mm/dma-mapping.c:221 (set (reg/v/f:SI 141 [ c ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 173 172 174 24 arch/arm/mm/dma-mapping.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 141 [ c ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 174 173 175 24 arch/arm/mm/dma-mapping.c:223 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 249)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 24 -> ( 25 35)

;; Succ edge  25 [85.0%]  (fallthru)
;; Succ edge  35 [15.0%] 

;; Start of basic block ( 24) -> 25
;; Pred edge  24 [85.0%]  (fallthru)
(note 175 174 176 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 176 175 177 25 arch/arm/mm/dma-mapping.c:225 (set (reg:SI 195)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 177 176 178 25 arch/arm/mm/dma-mapping.c:225 (set (reg:SI 140 [ D.25379 ])
        (plus:SI (reg:SI 195)
            (const_int 16777216 [0x1000000]))) 4 {*arm_addsi3} (nil))

(insn 178 177 179 25 arch/arm/mm/dma-mapping.c:225 (set (reg/v:SI 143 [ idx ])
        (lshiftrt:SI (reg:SI 140 [ D.25379 ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 179 178 180 25 arch/arm/mm/dma-mapping.c:226 (set (reg:SI 196)
        (lshiftrt:SI (reg:SI 140 [ D.25379 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 180 179 181 25 arch/arm/mm/dma-mapping.c:226 (set (reg:SI 197)
        (ashift:SI (reg:SI 196)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 181 180 182 25 arch/arm/mm/dma-mapping.c:226 (set (reg/v:SI 144 [ off ])
        (lshiftrt:SI (reg:SI 197)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 196)
            (const_int 511 [0x1ff]))
        (nil)))

(insn 182 181 183 25 arch/arm/mm/dma-mapping.c:228 (set (reg/f:SI 198)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 183 182 184 25 arch/arm/mm/dma-mapping.c:228 (set (reg:SI 199)
        (ashift:SI (reg/v:SI 144 [ off ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 184 183 185 25 arch/arm/mm/dma-mapping.c:228 (set (reg:SI 200)
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 143 [ idx ])
                    (const_int 4 [0x4]))
                (reg/f:SI 198)) [0 consistent_pte S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 185 184 186 25 arch/arm/mm/dma-mapping.c:228 (set (reg/v/f:SI 142 [ pte ])
        (plus:SI (reg:SI 200)
            (reg:SI 199))) 4 {*arm_addsi3} (nil))

(insn 186 185 187 25 arch/arm/mm/dma-mapping.c:229 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 16 [0x10])) [0 <variable>.vm_pages+0 S4 A32])
        (reg/v/f:SI 157 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 187 186 226 25 arch/arm/mm/dma-mapping.c:229 (set (reg/v/f:SI 134 [ page.963 ])
        (reg/v/f:SI 157 [ page ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 25 -> ( 26)

;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 25 31) -> 26
;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  31 [100.0%]  (fallthru)
(code_label 226 187 188 26 169 "" [0 uses])

(note 188 226 189 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 190 26 arch/arm/mm/dma-mapping.c:232 (set (reg:SI 201)
        (mem:SI (reg/v/f:SI 142 [ pte ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 190 189 191 26 arch/arm/mm/dma-mapping.c:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 201)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 191 190 192 26 arch/arm/mm/dma-mapping.c:232 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 26 -> ( 27 28)

;; Succ edge  27 [0.0%]  (fallthru)
;; Succ edge  28 [100.0%] 

;; Start of basic block ( 26) -> 27
;; Pred edge  26 [0.0%]  (fallthru)
(note 192 191 193 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 27 arch/arm/mm/dma-mapping.c:232 discrim 1 (set (reg:SI 202)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 194 193 195 27 arch/arm/mm/dma-mapping.c:232 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 202)) 167 {*arm_movsi_insn} (nil))

(insn 195 194 196 27 arch/arm/mm/dma-mapping.c:232 discrim 1 (set (reg:SI 1 r1)
        (const_int 232 [0xe8])) 167 {*arm_movsi_insn} (nil))

(call_insn 196 195 198 27 arch/arm/mm/dma-mapping.c:232 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 27 -> ()


;; Start of basic block ( 26) -> 28
;; Pred edge  26 [100.0%] 
(code_label 198 196 199 28 166 "" [1 uses])

(note 199 198 200 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 200 199 201 28 arch/arm/mm/dma-mapping.c:234 (set (reg/f:SI 203)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 201 200 202 28 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 205)
        (mem/f/c/i:SI (reg/f:SI 203) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 202 201 203 28 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 204)
        (minus:SI (reg/v/f:SI 134 [ page.963 ])
            (reg:SI 205))) 28 {*arm_subsi3_insn} (nil))

(insn 203 202 204 28 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 207)
        (ashiftrt:SI (reg:SI 204)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 204)
            (const_int 32 [0x20]))
        (nil)))

(insn 204 203 205 28 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 208)
        (ashift:SI (reg:SI 207)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 205 204 206 28 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 209)
        (ior:SI (reg:SI 208)
            (reg/v:SI 164 [ prot ]))) 89 {*arm_iorsi3} (nil))

(insn 206 205 207 28 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 142 [ pte ])) 167 {*arm_movsi_insn} (nil))

(insn 207 206 208 28 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 1 r1)
        (reg:SI 209)) 167 {*arm_movsi_insn} (nil))

(insn 208 207 209 28 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 209 208 210 28 arch/arm/mm/dma-mapping.c:234 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_set_pte_ext") [flags 0x41] <function_decl 0x10e63d00 cpu_v7_set_pte_ext>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 210 209 211 28 arch/arm/mm/dma-mapping.c:236 (set (reg/v/f:SI 142 [ pte ])
        (plus:SI (reg/v/f:SI 142 [ pte ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 211 210 212 28 arch/arm/mm/dma-mapping.c:237 (set (reg/v:SI 144 [ off ])
        (plus:SI (reg/v:SI 144 [ off ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 212 211 213 28 arch/arm/mm/dma-mapping.c:238 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ off ])
            (const_int 512 [0x200]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 213 212 214 28 arch/arm/mm/dma-mapping.c:238 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 28 -> ( 29 30)

;; Succ edge  29 [50.0%]  (fallthru)
;; Succ edge  30 [50.0%] 

;; Start of basic block ( 28) -> 29
;; Pred edge  28 [50.0%]  (fallthru)
(note 214 213 215 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 216 29 arch/arm/mm/dma-mapping.c:240 (set (reg/v:SI 143 [ idx ])
        (plus:SI (reg/v:SI 143 [ idx ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 216 215 217 29 arch/arm/mm/dma-mapping.c:240 (set (reg/f:SI 210)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 217 216 218 29 arch/arm/mm/dma-mapping.c:240 (set (reg/v/f:SI 142 [ pte ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 143 [ idx ])
                    (const_int 4 [0x4]))
                (reg/f:SI 210)) [0 consistent_pte S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 218 217 219 29 arch/arm/mm/dma-mapping.c:239 (set (reg/v:SI 144 [ off ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 29 -> ( 30)

;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 28 29) -> 30
;; Pred edge  28 [50.0%] 
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 219 218 220 30 167 "" [1 uses])

(note 220 219 221 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 221 220 222 30 arch/arm/mm/dma-mapping.c:242 (set (reg/v:SI 138 [ size.959 ])
        (plus:SI (reg/v:SI 138 [ size.959 ])
            (const_int -4096 [0xfffffffffffff000]))) 4 {*arm_addsi3} (nil))

(insn 222 221 223 30 arch/arm/mm/dma-mapping.c:242 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ size.959 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 223 222 224 30 arch/arm/mm/dma-mapping.c:242 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1400 [0x578])
        (nil)))
;; End of basic block 30 -> ( 31 32)

;; Succ edge  31 [86.0%]  (fallthru)
;; Succ edge  32 [14.0%] 

;; Start of basic block ( 30) -> 31
;; Pred edge  30 [86.0%]  (fallthru)
(note 224 223 225 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 225 224 229 31 arch/arm/mm/dma-mapping.c:235 (set (reg/v/f:SI 134 [ page.963 ])
        (plus:SI (reg/v/f:SI 134 [ page.963 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 31 -> ( 26)

;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 30) -> 32
;; Pred edge  30 [14.0%] 
(code_label 229 225 230 32 168 "" [1 uses])

(note 230 229 231 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 231 230 232 32 arch/arm/mm/dma-mapping.c:244 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8158962)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 232 231 233 32 arch/arm/mm/dma-mapping.c:246 (set (reg/v/f:SI 156 [ addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 233 232 234 32 arch/arm/mm/dma-mapping.c:332 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 156 [ addr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 234 233 235 32 arch/arm/mm/dma-mapping.c:332 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 249)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 767 [0x2ff])
        (nil)))
;; End of basic block 32 -> ( 33 35)

;; Succ edge  33 [92.3%]  (fallthru)
;; Succ edge  35 [7.7%] 

;; Start of basic block ( 32) -> 33
;; Pred edge  32 [92.3%]  (fallthru)
(note 235 234 236 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 33 arch/arm/mm/dma-mapping.c:333 (set (reg/f:SI 211)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 237 236 238 33 arch/arm/mm/dma-mapping.c:333 (set (reg:SI 213)
        (mem/f/c/i:SI (reg/f:SI 211) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 238 237 239 33 arch/arm/mm/dma-mapping.c:333 (set (reg:SI 212)
        (minus:SI (reg/v/f:SI 157 [ page ])
            (reg:SI 213))) 28 {*arm_subsi3_insn} (nil))

(insn 239 238 240 33 arch/arm/mm/dma-mapping.c:333 (set (reg:SI 215)
        (ashiftrt:SI (reg:SI 212)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 212)
            (const_int 32 [0x20]))
        (nil)))

(insn 240 239 241 33 arch/arm/mm/dma-mapping.c:333 (set (reg:SI 216)
        (ashift:SI (reg:SI 215)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 241 240 251 33 arch/arm/mm/dma-mapping.c:333 (set (mem:SI (reg/v/f:SI 162 [ handle ]) [0 S4 A32])
        (reg:SI 216)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 33 -> ( 37)

;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 35) -> 34
;; Pred edge  35 [91.0%] 
(code_label 251 241 244 34 170 "" [1 uses])

(note 244 251 245 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 245 244 246 34 arch/arm/mm/dma-mapping.c:114 (set (reg:SI 0 r0)
        (reg/v/f:SI 157 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 246 245 247 34 arch/arm/mm/dma-mapping.c:114 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 247 246 248 34 arch/arm/mm/dma-mapping.c:114 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10cd6800 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 248 247 249 34 arch/arm/mm/dma-mapping.c:115 (set (reg/v/f:SI 157 [ page ])
        (plus:SI (reg/v/f:SI 157 [ page ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 34 -> ( 35)

;; Succ edge  35 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 23 34 32 24) -> 35
;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  34 [100.0%]  (fallthru,dfs_back)
;; Pred edge  32 [7.7%] 
;; Pred edge  24 [15.0%] 
(code_label 249 248 250 35 165 "" [2 uses])

(note 250 249 252 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 252 250 253 35 arch/arm/mm/dma-mapping.c:113 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 157 [ page ])
            (reg/v/f:SI 148 [ p ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 253 252 254 35 arch/arm/mm/dma-mapping.c:113 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 251)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 35 -> ( 34 36)

;; Succ edge  34 [91.0%] 
;; Succ edge  36 [9.0%]  (fallthru)

;; Start of basic block ( 15 35) -> 36
;; Pred edge  15 [30.2%] 
;; Pred edge  35 [9.0%]  (fallthru)
(code_label 254 253 255 36 160 "" [1 uses])

(note 255 254 256 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 256 255 257 36 arch/arm/mm/dma-mapping.c:325 (set (reg/v/f:SI 156 [ addr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 36 -> ( 37)

;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 36 33 8 6) -> 37
;; Pred edge  36 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 257 256 258 37 156 "" [0 uses])

(note 258 257 259 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 274 37 arch/arm/mm/dma-mapping.c:338 (set (reg:SI 159 [ <result> ])
        (reg/v/f:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 274 259 280 37 arch/arm/mm/dma-mapping.c:338 (set (reg/i:SI 0 r0)
        (reg:SI 159 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 280 274 262 37 arch/arm/mm/dma-mapping.c:338 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 37 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 22 21) -> 38
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  21 [30.2%] 
(code_label 262 280 263 38 164 "" [1 uses])

(note 263 262 265 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 265 263 266 38 arch/arm/mm/dma-mapping.c:201 (set (reg/f:SI 218)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 266 265 267 38 arch/arm/mm/dma-mapping.c:201 (set (reg:SI 219)
        (mem/s/f/j:SI (reg/f:SI 218) [0 consistent_pte+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 267 266 268 38 arch/arm/mm/dma-mapping.c:201 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 219)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 268 267 0 38 arch/arm/mm/dma-mapping.c:201 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 264)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 38 -> ( 23 24)

;; Succ edge  23 [0.0%] 
;; Succ edge  24 [100.0%]  (fallthru)


;; Function dma_alloc_writecombine (dma_alloc_writecombine)[0:1279]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/dma-mapping.c:363 (set (reg/v/f:SI 135 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:363 (set (reg/v:SI 136 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:363 (set (reg/v/f:SI 137 [ handle ])
        (reg:SI 2 r2 [ handle ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:363 (set (reg/v:SI 138 [ gfp ])
        (reg:SI 3 r3 [ gfp ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:364 (set (reg/f:SI 139)
        (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e730c0 pgprot_kernel>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/dma-mapping.c:364 (set (reg:SI 141)
        (mem/c/i:SI (reg/f:SI 139) [0 pgprot_kernel+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:364 (set (reg:SI 140)
        (and:SI (reg:SI 141)
            (const_int -61 [0xffffffffffffffc3]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:364 (set (reg:SI 142)
        (ior:SI (reg:SI 140)
            (const_int 4 [0x4]))) 89 {*arm_iorsi3} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:364 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/dma-mapping.c:364 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/mm/dma-mapping.c:364 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/mm/dma-mapping.c:364 (set (reg:SI 2 r2)
        (reg/v/f:SI 137 [ handle ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/dma-mapping.c:364 (set (reg:SI 3 r3)
        (reg/v:SI 138 [ gfp ])) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 19 2 arch/arm/mm/dma-mapping.c:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__dma_alloc") [flags 0x3] <function_decl 0x1145e100 __dma_alloc>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 19 18 20 2 arch/arm/mm/dma-mapping.c:364 (set (reg/f:SI 133 [ D.24557 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 24 2 arch/arm/mm/dma-mapping.c:366 (set (reg:SI 134 [ <result> ])
        (reg/f:SI 133 [ D.24557 ])) 167 {*arm_movsi_insn} (nil))

(insn 24 20 30 2 arch/arm/mm/dma-mapping.c:366 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 30 24 0 2 arch/arm/mm/dma-mapping.c:366 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function dma_alloc_coherent (dma_alloc_coherent)[0:1278]


6 basic blocks, 6 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [61.0%]  (fallthru) 5 [39.0%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 6102, maybe hot.
Predecessors:  2 [61.0%]  (fallthru)
Successors:  6 [100.0%]  (fallthru)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 3898, maybe hot.
Predecessors:  2 [39.0%] 
Successors:  6 [100.0%]  (fallthru)

Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/dma-mapping.c:346 (set (reg/v/f:SI 136 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:346 (set (reg/v:SI 137 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:346 (set (reg/v/f:SI 138 [ handle ])
        (reg:SI 2 r2 [ handle ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:346 (set (reg/v:SI 139 [ gfp ])
        (reg:SI 3 r3 [ gfp ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:349 (set (reg:SI 140)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 10 9 11 2 arch/arm/mm/dma-mapping.c:349 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:349 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:349 (set (reg:SI 2 r2)
        (reg/v/f:SI 138 [ handle ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:349 (set (reg:SI 3 r3)
        (reg:SI 140)) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 15 2 arch/arm/mm/dma-mapping.c:349 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dma_alloc_from_coherent") [flags 0x41] <function_decl 0x11060380 dma_alloc_from_coherent>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 15 14 16 2 arch/arm/mm/dma-mapping.c:349 (set (reg:SI 134 [ D.24540 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/mm/dma-mapping.c:349 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24540 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 2 arch/arm/mm/dma-mapping.c:349 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
        (nil)))
;; End of basic block 2 -> ( 3 4)

;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [61.0%]  (fallthru)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 22 3 arch/arm/mm/dma-mapping.c:350 (set (reg/f:SI 133 [ D.24543 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 memory+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; Pred edge  2 [39.0%] 
(code_label 22 19 23 4 190 "" [1 uses])

(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 4 arch/arm/mm/dma-mapping.c:352 (set (reg/f:SI 141)
        (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e730c0 pgprot_kernel>)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 143)
        (mem/c/i:SI (reg/f:SI 141) [0 pgprot_kernel+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 142)
        (and:SI (reg:SI 143)
            (const_int -573 [0xfffffffffffffdc3]))) 67 {*arm_andsi3_insn} (nil))

(insn 27 26 28 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 144)
        (ior:SI (reg:SI 142)
            (const_int 516 [0x204]))) 89 {*arm_iorsi3} (nil))

(insn 28 27 29 4 arch/arm/mm/dma-mapping.c:352 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 144)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 2 r2)
        (reg/v/f:SI 138 [ handle ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ gfp ])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 34 4 arch/arm/mm/dma-mapping.c:352 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__dma_alloc") [flags 0x3] <function_decl 0x1145e100 __dma_alloc>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 34 33 35 4 arch/arm/mm/dma-mapping.c:352 (set (reg/f:SI 133 [ D.24543 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 35 34 36 5 191 "" [0 uses])

(note 36 35 37 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 41 5 arch/arm/mm/dma-mapping.c:354 (set (reg:SI 135 [ <result> ])
        (reg/f:SI 133 [ D.24543 ])) 167 {*arm_movsi_insn} (nil))

(insn 41 37 47 5 arch/arm/mm/dma-mapping.c:354 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 47 41 0 5 arch/arm/mm/dma-mapping.c:354 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

