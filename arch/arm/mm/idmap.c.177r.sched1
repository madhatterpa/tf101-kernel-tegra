
;; Function identity_mapping_del (identity_mapping_del)[0:1185]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)


identity_mapping_del

Dataflow summary:
def_info->table_size = 28, use_info->table_size = 48
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={3d,1u} r25={1d,5u} r26={1d,4u} r162={2d,4u} r163={2d,3u} r164={1d,2u} r166={2d,2u} r167={1d,3u} r168={1d,1u} r170={1d,1u} r172={1d,1u} r176={1d,1u} r177={1d,2u} 
;;    total ref usage 70{26d,44u,0e} in 19{19 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d11(25){ }d12(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 162 166 167 168 176 177
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 162 166 167 168 176 177
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177

( 2 4 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 166 167 176 177
;; lr  def 	 24 [cc] 163 164 170 172
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; live  gen 	 24 [cc] 163 164 170 172
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177

( 3 )->[4]->( 3 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164
;; lr  def 	 162 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177
;; live  gen 	 162 166
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177

( 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u44(11){ }u45(13){ }u46(14){ }u47(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 63 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 58 to worklist
  Adding insn 102 to worklist
Finished finding needed instructions:
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
  Adding insn 66 to worklist
  Adding insn 65 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177
  Adding insn 62 to worklist
  Adding insn 99 to worklist
  Adding insn 44 to worklist
  Adding insn 105 to worklist
  Adding insn 104 to worklist
  Adding insn 41 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
  Adding insn 57 to worklist
  Adding insn 45 to worklist
  Adding insn 39 to worklist
  Adding insn 37 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)
;;   ======================================================
;;   -- basic block 3 from 41 to 63 -- before reload
;;   ======================================================

;;	  0-->    41 r170=r166+0x200000                :cortex_a8_default
;;	  0-->    58 [r162]=r177                       :cortex_a8_load_store_1
;;	  1-->    60 [r162+0x4]=r177                   :cortex_a8_load_store_1
;;	  2-->   104 r163=r170 0>>0x15                 :cortex_a8_default
;;	  4-->   105 r163=r163<<0x15                   :cortex_a8_default
;;	  5-->    44 r172=r163-0x1                     :cortex_a8_default
;;	  6-->    99 {r164={(ltu(r172,r176))?r163:r167}:cortex_a8_default
;;	  7-->    61 {asm_operands;clobber cc;}        :nothing
;;	  8-->    62 cc=cmp(r164,r167)                 :cortex_a8_default
changing bb of uid 65
  from 4 to 3
;;	  8-->    65 r162=r162+0x8                     :cortex_a8_default
changing bb of uid 66
  from 4 to 3
;;	  9-->    66 r166=r164                         :cortex_a8_default
;;	 10-->    63 pc={(cc==0x0)?L75:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 41
;;   new tail = 63

;;   ======================================================
;;   -- basic block 4 from 102 to 102 -- before reload
;;   ======================================================

;;	  0-->   102 pc=L67                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 102
;;   new tail = 102

;;   ======================================================
;;   -- basic block 2 from 32 to 57 -- before reload
;;   ======================================================

;;	  0-->    32 r166=r1                           :cortex_a8_default
;;	  0-->    33 r167=r2                           :cortex_a8_default
;;	  1-->    45 r176=r167-0x1                     :cortex_a8_default
;;	  1-->    57 r177=0x0                          :cortex_a8_default
;;	  2-->    37 r168=r166 0>>0x15                 :cortex_a8_default
;;	  4-->    39 r162=r168*0x8+r0                  :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 32
;;   new tail = 57


;; Procedure interblock/speculative motions == 2/2 




identity_mapping_del

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={3d,1u} r25={1d,5u} r26={1d,4u} r162={2d,4u} r163={2d,3u} r164={1d,2u} r166={2d,2u} r167={1d,3u} r168={1d,1u} r170={1d,1u} r172={1d,1u} r176={1d,1u} r177={1d,2u} 
;;    total ref usage 70{26d,44u,0e} in 19{19 regular + 0 call} insns.
(note 30 0 35 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 162 166 167 168 176 177
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 162 166 167 168 176 177
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 35 30 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 31 35 34 2 NOTE_INSN_DELETED)

(note 34 31 38 2 NOTE_INSN_FUNCTION_BEG)

(note 38 34 32 2 NOTE_INSN_DELETED)

(insn 32 38 33 2 arch/arm/mm/idmap.c:65 (set (reg/v:SI 166 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(insn 33 32 45 2 arch/arm/mm/idmap.c:65 (set (reg/v:SI 167 [ end ])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ end ])
        (nil)))

(insn 45 33 57 2 arch/arm/mm/idmap.c:70 (set (reg:SI 176)
        (plus:SI (reg/v:SI 167 [ end ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 57 45 37 2 arch/arm/mm/idmap.c:50 (set (reg:SI 177)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 37 57 39 2 arch/arm/mm/idmap.c:68 (set (reg:SI 168)
        (lshiftrt:SI (reg/v:SI 166 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 39 37 67 2 arch/arm/mm/idmap.c:68 (set (reg/v/f:SI 162 [ pgd.366 ])
        (plus:SI (mult:SI (reg:SI 168)
                (const_int 8 [0x8]))
            (reg:SI 0 r0 [ pgd ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_DEAD (reg:SI 0 r0 [ pgd ])
            (nil))))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 166 167 176 177
;; lr  def 	 24 [cc] 163 164 170 172
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; live  gen 	 24 [cc] 163 164 170 172
;; live  kill	 24 [cc]

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (dfs_back)
(code_label 67 39 40 3 5 "" [1 uses])

(note 40 67 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 42 40 98 3 NOTE_INSN_DELETED)

(note 98 42 41 3 NOTE_INSN_DELETED)

(insn 41 98 58 3 arch/arm/mm/idmap.c:70 (set (reg:SI 170)
        (plus:SI (reg/v:SI 166 [ addr ])
            (const_int 2097152 [0x200000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 166 [ addr ])
        (nil)))

(insn 58 41 60 3 arch/arm/mm/idmap.c:50 (set (mem:SI (reg/v/f:SI 162 [ pgd.366 ]) [0 S4 A32])
        (reg:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 60 58 104 3 arch/arm/mm/idmap.c:50 (set (mem:SI (plus:SI (reg/v/f:SI 162 [ pgd.366 ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 104 60 105 3 arch/arm/mm/idmap.c:70 (set (reg/v:SI 163 [ __boundary ])
        (lshiftrt:SI (reg:SI 170)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 105 104 44 3 arch/arm/mm/idmap.c:70 (set (reg/v:SI 163 [ __boundary ])
        (ashift:SI (reg/v:SI 163 [ __boundary ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 44 105 99 3 arch/arm/mm/idmap.c:70 (set (reg:SI 172)
        (plus:SI (reg/v:SI 163 [ __boundary ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 99 44 61 3 arch/arm/mm/idmap.c:70 discrim 2 (parallel [
            (set (reg/v:SI 164 [ next ])
                (if_then_else:SI (ltu (reg:SI 172)
                        (reg:SI 176))
                    (reg/v:SI 163 [ __boundary ])
                    (reg/v:SI 167 [ end ])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_DEAD (reg/v:SI 163 [ __boundary ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 61 99 62 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:495 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 162 [ pgd.366 ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7194152)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 62 61 65 3 arch/arm/mm/idmap.c:72 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 164 [ next ])
            (reg/v:SI 167 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 65 62 66 3 arch/arm/mm/idmap.c:72 (set (reg/v/f:SI 162 [ pgd.366 ])
        (plus:SI (reg/v/f:SI 162 [ pgd.366 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 66 65 63 3 arch/arm/mm/idmap.c:72 (set (reg/v:SI 166 [ addr ])
        (reg/v:SI 164 [ next ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 164 [ next ])
        (nil)))

(jump_insn 63 66 64 3 arch/arm/mm/idmap.c:72 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1400 [0x578])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177


;; Succ edge  4 [86.0%]  (fallthru)
;; Succ edge  5 [14.0%]  (loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164
;; lr  def 	 162 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 166 167 176 177
;; live  gen 	 162 166
;; live  kill	

;; Pred edge  3 [86.0%]  (fallthru)
(note 64 63 102 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 102 64 103 4 (set (pc)
        (label_ref 67)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 103 102 75)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [14.0%]  (loop_exit)
(code_label 75 103 78 5 6 "" [1 uses])

(note 78 75 106 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 106 78 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function identity_mapping_add (identity_mapping_add)[0:1182]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


identity_mapping_add

Dataflow summary:
def_info->table_size = 153, use_info->table_size = 60
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,4u} r134={1d,2u} r135={2d,3u} r136={1d,2u} r137={1d,1u} r139={1d,1u} r140={2d,3u} r141={1d,3u} r142={1d,1u} r144={1d,1u} r146={1d,1u} r148={2d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} 
;;    total ref usage 205{151d,54u,0e} in 28{27 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d3(1){ }d5(2){ }d7(3){ }d8(11){ }d10(12){ }d11(13){ }d13(14){ }d28(25){ }d29(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137 139 140 141 142 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 137 139 140 141 142 151 152 153
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153

( 2 4 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153
;; lr  def 	 24 [cc] 134 135 136 144 146 148 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153
;; live  gen 	 24 [cc] 134 135 136 144 146 148 150
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 153

( 3 )->[4]->( 3 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; lr  def 	 133 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 153
;; live  gen 	 133 140
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153

( 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u56(11){ }u57(13){ }u58(14){ }u59(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 73 to worklist
Finished finding needed instructions:
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
  Adding insn 53 to worklist
  Adding insn 52 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141 153
  Adding insn 49 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
  Adding insn 78 to worklist
  Adding insn 77 to worklist
  Adding insn 71 to worklist
  Adding insn 28 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 25 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
  Adding insn 29 to worklist
  Adding insn 23 to worklist
  Adding insn 21 to worklist
  Adding insn 69 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)
;;   ======================================================
;;   -- basic block 3 from 25 to 50 -- before reload
;;   ======================================================

;;	  0-->    25 r144=r140+0x200000                :cortex_a8_default
;;	  0-->    77 r148=r140 0>>0x15                 :cortex_a8_default
;;	  2-->    75 r135=r144 0>>0x15                 :cortex_a8_default
;;	  2-->    78 r148=r148<<0x15                   :cortex_a8_default
;;	  3-->    43 r134=r148|r137                    :cortex_a8_default
;;	  3-->    44 [r133]=r134                       :cortex_a8_load_store_1
;;	  4-->    76 r135=r135<<0x15                   :cortex_a8_default
;;	  4-->    45 r150=r134+0x100000                :cortex_a8_default
;;	  5-->    28 r146=r135-0x1                     :cortex_a8_default
;;	  5-->    46 [r133+0x4]=r150                   :cortex_a8_load_store_1
;;	  6-->    71 {r136={(ltu(r146,r153))?r135:r141}:cortex_a8_default
;;	  7-->    47 {asm_operands;clobber cc;}        :nothing
;;	  8-->    48 {asm_operands;clobber [scratch];} :nothing
;;	  9-->    49 cc=cmp(r136,r141)                 :cortex_a8_default
changing bb of uid 52
  from 4 to 3
;;	  9-->    52 r133=r133+0x8                     :cortex_a8_default
changing bb of uid 53
  from 4 to 3
;;	 10-->    53 r140=r136                         :cortex_a8_default
;;	 11-->    50 pc={(cc==0x0)?L62:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 11
;;   new head = 25
;;   new tail = 50

;;   ======================================================
;;   -- basic block 4 from 73 to 73 -- before reload
;;   ======================================================

;;	  0-->    73 pc=L54                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 73
;;   new tail = 73

;;   ======================================================
;;   -- basic block 2 from 2 to 29 -- before reload
;;   ======================================================

;;	  0-->     2 r139=r0                           :cortex_a8_default
;;	  0-->     3 r140=r1                           :cortex_a8_default
;;	  1-->     4 r141=r2                           :cortex_a8_default
;;	  1-->     8 r0=call [`cpu_architecture']      :cortex_a8_issue_branch
;;	  2-->    21 r142=r140 0>>0x15                 :cortex_a8_default
;;	  2-->    66 r151=0x402                        :cortex_a8_default
;;	  3-->    67 r152=0x412                        :cortex_a8_default
;;	  3-->    29 r153=r141-0x1                     :cortex_a8_default
;;	  4-->    23 r133=r142*0x8+r139                :cortex_a8_default
;;	 33-->    69 {r137={(r0>0x7)?r151:r152};clobber:cortex_a8_default
;;	Ready list (final):  
;;   total time = 33
;;   new head = 2
;;   new tail = 29


;; Procedure interblock/speculative motions == 2/2 




identity_mapping_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,1u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,4u} r134={1d,2u} r135={2d,3u} r136={1d,2u} r137={1d,1u} r139={1d,1u} r140={2d,3u} r141={1d,3u} r142={1d,1u} r144={1d,1u} r146={1d,1u} r148={2d,2u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} 
;;    total ref usage 205{151d,54u,0e} in 28{27 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137 139 140 141 142 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 137 139 140 141 142 151 152 153
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 68 2 NOTE_INSN_DELETED)

(note 68 9 22 2 NOTE_INSN_DELETED)

(note 22 68 2 2 NOTE_INSN_DELETED)

(insn 2 22 3 2 arch/arm/mm/idmap.c:32 (set (reg/v/f:SI 139 [ pgd ])
        (reg:SI 0 r0 [ pgd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ pgd ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/idmap.c:32 (set (reg/v:SI 140 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(insn 4 3 8 2 arch/arm/mm/idmap.c:32 (set (reg/v:SI 141 [ end ])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ end ])
        (nil)))

(call_insn 8 4 21 2 arch/arm/mm/idmap.c:36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512b2280 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 21 8 66 2 arch/arm/mm/idmap.c:39 (set (reg:SI 142)
        (lshiftrt:SI (reg/v:SI 140 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 66 21 67 2 arch/arm/mm/idmap.c:37 (set (reg:SI 151)
        (const_int 1026 [0x402])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 29 2 arch/arm/mm/idmap.c:37 (set (reg:SI 152)
        (const_int 1042 [0x412])) 167 {*arm_movsi_insn} (nil))

(insn 29 67 23 2 arch/arm/mm/idmap.c:41 (set (reg:SI 153)
        (plus:SI (reg/v:SI 141 [ end ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 23 29 69 2 arch/arm/mm/idmap.c:39 (set (reg/v/f:SI 133 [ pgd.404 ])
        (plus:SI (mult:SI (reg:SI 142)
                (const_int 8 [0x8]))
            (reg/v/f:SI 139 [ pgd ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/v/f:SI 139 [ pgd ])
            (nil))))

(insn 69 23 54 2 arch/arm/mm/idmap.c:37 (parallel [
            (set (reg/v:SI 137 [ prot ])
                (if_then_else:SI (gt (reg:SI 0 r0)
                        (const_int 7 [0x7]))
                    (reg:SI 151)
                    (reg:SI 152)))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg:SI 151)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_UNUSED (reg:CC 24 cc)
                    (nil))))))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153
;; lr  def 	 24 [cc] 134 135 136 144 146 148 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153
;; live  gen 	 24 [cc] 134 135 136 144 146 148 150
;; live  kill	 24 [cc]

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (dfs_back)
(code_label 54 69 24 3 14 "" [1 uses])

(note 24 54 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 26 24 70 3 NOTE_INSN_DELETED)

(note 70 26 41 3 NOTE_INSN_DELETED)

(note 41 70 25 3 NOTE_INSN_DELETED)

(insn 25 41 77 3 arch/arm/mm/idmap.c:41 (set (reg:SI 144)
        (plus:SI (reg/v:SI 140 [ addr ])
            (const_int 2097152 [0x200000]))) 4 {*arm_addsi3} (nil))

(insn 77 25 75 3 arch/arm/mm/idmap.c:12 (set (reg:SI 148)
        (lshiftrt:SI (reg/v:SI 140 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 140 [ addr ])
        (nil)))

(insn 75 77 78 3 arch/arm/mm/idmap.c:41 (set (reg/v:SI 135 [ __boundary ])
        (lshiftrt:SI (reg:SI 144)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 78 75 43 3 arch/arm/mm/idmap.c:12 (set (reg:SI 148)
        (ashift:SI (reg:SI 148)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 43 78 44 3 arch/arm/mm/idmap.c:12 (set (reg/v:SI 134 [ addr ])
        (ior:SI (reg:SI 148)
            (reg/v:SI 137 [ prot ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 44 43 76 3 arch/arm/mm/idmap.c:13 (set (mem:SI (reg/v/f:SI 133 [ pgd.404 ]) [0 S4 A32])
        (reg/v:SI 134 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 76 44 45 3 arch/arm/mm/idmap.c:41 (set (reg/v:SI 135 [ __boundary ])
        (ashift:SI (reg/v:SI 135 [ __boundary ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 45 76 28 3 arch/arm/mm/idmap.c:15 (set (reg:SI 150)
        (plus:SI (reg/v:SI 134 [ addr ])
            (const_int 1048576 [0x100000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 134 [ addr ])
        (nil)))

(insn 28 45 46 3 arch/arm/mm/idmap.c:41 (set (reg:SI 146)
        (plus:SI (reg/v:SI 135 [ __boundary ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 46 28 71 3 arch/arm/mm/idmap.c:15 (set (mem:SI (plus:SI (reg/v/f:SI 133 [ pgd.404 ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 71 46 47 3 arch/arm/mm/idmap.c:41 discrim 2 (parallel [
            (set (reg/v:SI 136 [ next ])
                (if_then_else:SI (ltu (reg:SI 146)
                        (reg:SI 153))
                    (reg/v:SI 135 [ __boundary ])
                    (reg/v:SI 141 [ end ])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_DEAD (reg/v:SI 135 [ __boundary ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 47 71 48 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:479 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 133 [ pgd.404 ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7192104)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 48 47 49 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:487 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7193128)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 49 48 52 3 arch/arm/mm/idmap.c:43 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ next ])
            (reg/v:SI 141 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 52 49 53 3 arch/arm/mm/idmap.c:43 (set (reg/v/f:SI 133 [ pgd.404 ])
        (plus:SI (reg/v/f:SI 133 [ pgd.404 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 53 52 50 3 arch/arm/mm/idmap.c:43 (set (reg/v:SI 140 [ addr ])
        (reg/v:SI 136 [ next ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ next ])
        (nil)))

(jump_insn 50 53 51 3 arch/arm/mm/idmap.c:43 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1400 [0x578])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 153


;; Succ edge  4 [86.0%]  (fallthru)
;; Succ edge  5 [14.0%]  (loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; lr  def 	 133 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 140 141 153
;; live  gen 	 133 140
;; live  kill	

;; Pred edge  3 [86.0%]  (fallthru)
(note 51 50 73 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 73 51 74 4 (set (pc)
        (label_ref 54)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153


;; Succ edge  3 [100.0%]  (dfs_back)

(barrier 74 73 62)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [14.0%]  (loop_exit)
(code_label 62 74 65 5 15 "" [1 uses])

(note 65 62 81 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 81 65 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function setup_mm_for_reboot (setup_mm_for_reboot)[0:1186]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)


setup_mm_for_reboot

Dataflow summary:
def_info->table_size = 144, use_info->table_size = 43
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,6u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r136={2d,2u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r142={1d,1u} r144={1d,1u} 
;;    total ref usage 182{142d,40u,0e} in 21{20 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d31(25){ }d32(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136 138 139 140
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 142
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 144
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 4 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u39(11){ }u40(13){ }u41(14){ }u42(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 23 to worklist
  Adding insn 28 to worklist
  Adding insn 31 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
Finished finding needed instructions:
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 30 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 27 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 22 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 19 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
;;   ======================================================
;;   -- basic block 2 from 43 to 20 -- before reload
;;   ======================================================

;;	  0-->    43 r136=sp&0xffffffffffffe03f        :cortex_a8_default
;;	  0-->    12 r1=0x0                            :cortex_a8_default
;;	  1-->    44 r136=r136&0xffffffffffffffc0      :cortex_a8_default
;;	  1-->    13 r2=0xffffffffbf000000             :cortex_a8_default
;;	  3-->     9 r138=[r136+0xc]                   :cortex_a8_load_store_1
;;	  6-->    10 r139=[r138+0x1f0]                 :cortex_a8_load_store_1
;;	  9-->    11 r0=[r139+0x24]                    :cortex_a8_load_store_1
;;	 10-->    14 call [`identity_mapping_add']     :cortex_a8_issue_branch
;;	 10-->    15 r140=`cpu_tlb'                    :cortex_a8_load_store_1
;;	 13-->    16 r133=[r140+0x8]                   :cortex_a8_load_store_1
;;	 14-->    17 {asm_operands;clobber [scratch];} :nothing
;;	 15-->    19 cc=cmp(zxt(r133,0x1,0xc),0x0)     :cortex_a8_default
;;	 17-->    20 pc={(cc==0x0)?L24:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 17
;;   new head = 43
;;   new tail = 20

;;   ======================================================
;;   -- basic block 3 from 22 to 23 -- before reload
;;   ======================================================

;;	  0-->    22 r142=0x0                          :cortex_a8_default
;;	  1-->    23 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 22
;;   new tail = 23

;;   ======================================================
;;   -- basic block 4 from 27 to 28 -- before reload
;;   ======================================================

;;	  0-->    27 cc=cmp(zxt(r133,0x1,0x14),0x0)    :cortex_a8_default
;;	  2-->    28 pc={(cc==0x0)?L32:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 27
;;   new tail = 28

;;   ======================================================
;;   -- basic block 5 from 30 to 31 -- before reload
;;   ======================================================

;;	  0-->    30 r144=0x0                          :cortex_a8_default
;;	  1-->    31 {asm_operands;clobber cc;}        :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 30
;;   new tail = 31

;;   ======================================================
;;   -- basic block 6 from 34 to 35 -- before reload
;;   ======================================================

;;	  0-->    34 {asm_operands;clobber [scratch];} :nothing
;;	  1-->    35 {asm_operands;clobber [scratch];} :nothing
;;	Ready list (final):  
;;   total time = 1
;;   new head = 34
;;   new tail = 35


;; Procedure interblock/speculative motions == 0/0 




setup_mm_for_reboot

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,6u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r136={2d,2u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r142={1d,1u} r144={1d,1u} 
;;    total ref usage 182{142d,40u,0e} in 21{20 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136 138 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136 138 139 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 18 2 NOTE_INSN_DELETED)

(note 18 7 43 2 NOTE_INSN_DELETED)

(insn 43 18 12 2 arch/arm/mm/idmap.c:88 (set (reg:SI 136)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 43 44 2 arch/arm/mm/idmap.c:88 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 44 12 13 2 arch/arm/mm/idmap.c:88 (set (reg:SI 136)
        (and:SI (reg:SI 136)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 44 9 2 arch/arm/mm/idmap.c:88 (set (reg:SI 2 r2)
        (const_int -1090519040 [0xffffffffbf000000])) 167 {*arm_movsi_insn} (nil))

(insn 9 13 10 2 arch/arm/mm/idmap.c:88 (set (reg/f:SI 138 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 136)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(insn 10 9 11 2 arch/arm/mm/idmap.c:88 (set (reg/f:SI 139 [ <variable>.active_mm ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 138 [ <variable>.task ])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138 [ <variable>.task ])
        (nil)))

(insn 11 10 14 2 arch/arm/mm/idmap.c:88 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 139 [ <variable>.active_mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ <variable>.active_mm ])
        (nil)))

(call_insn 14 11 15 2 arch/arm/mm/idmap.c:88 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_add") [flags 0x3] <function_decl 0x10d1c400 identity_mapping_add>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 140)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x112f45a0 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 133 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x112f45a0 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 17 16 19 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7172648)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 19 17 20 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 20 19 21 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 142
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 142)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 142)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7173288)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 24 23 25 4 17 "" [1 uses])

(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 26 25 27 4 NOTE_INSN_DELETED)

(insn 27 26 28 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 133 [ __tlb_flag ])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg/v:SI 133 [ __tlb_flag ])
        (nil)))

(jump_insn 28 27 29 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 144
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 144)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 144)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7174056)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 32 31 33 6 18 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7174440)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 35 34 45 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 7174568)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 45 35 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
