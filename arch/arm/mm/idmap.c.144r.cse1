
;; Function identity_mapping_del (identity_mapping_del)[0:1185]


9 basic blocks, 10 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [100.0%]  (fallthru)


Basic block 3 , prev 2, next 4, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [50.0%]  4 [50.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  3 [50.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 1, count 0, freq 5000, maybe hot.
Predecessors:  3 [50.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 4 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  7 [86.0%]  (fallthru) 8 [14.0%] 


Basic block 7 , prev 6, next 8, loop_depth 1, count 0, freq 8600, maybe hot.
Predecessors:  6 [86.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 1, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  6 [14.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 8, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  8 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 17 (  1.9)


identity_mapping_del

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r11={1d,8u} r12={1d} r13={1d,8u} r14={1d,1u} r24={3d,2u} r25={1d,8u} r26={1d,7u} r162={2d,4u} r163={1d,2u} r164={2d,2u} r165={1d,1u} r166={2d,2u} r167={1d,3u} r168={1d,1u} r169={1d,1u} r170={1d,1u,1d} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} 
;;    total ref usage 90{30d,59u,1e} in 24{24 regular + 0 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 7 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 4 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 3 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 47 to worklist
  Adding insn 63 to worklist
  Adding insn 61 to worklist
  Adding insn 60 to worklist
  Adding insn 58 to worklist
Finished finding needed instructions:
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167
  Adding insn 66 to worklist
  Adding insn 65 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167
  Adding insn 62 to worklist
  Adding insn 59 to worklist
  Adding insn 57 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167
  Adding insn 54 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167
  Adding insn 49 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 167
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 33 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 10 count 17 (  1.9)
;; Following path with 6 sets: 2 
;; Following path with 8 sets: 3 5 
;; Following path with 8 sets: 3 4 
;; Following path with 8 sets: 6 8 
deferring rescan insn with uid = 59.
deferring rescan insn with uid = 60.
;; Following path with 10 sets: 6 7 
;; Following path with 2 sets: 7 


try_optimize_cfg iteration 1



identity_mapping_del

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r11={1d,8u} r12={1d} r13={1d,8u} r14={1d,1u} r24={3d,2u} r25={1d,8u} r26={1d,7u} r162={2d,4u} r163={1d,2u} r164={2d,2u} r165={1d,1u} r166={2d,2u} r167={1d,3u} r168={1d,1u} r169={1d,1u} r170={1d,1u,1d} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} 
;;    total ref usage 90{30d,59u,1e} in 24{24 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 162 165 166 167 168 169
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 162 165 166 167 168 169
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 35 0 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 31 35 32 2 arch/arm/mm/idmap.c:65 (set (reg/v/f:SI 165 [ pgd ])
        (reg:SI 0 r0 [ pgd ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 2 arch/arm/mm/idmap.c:65 (set (reg/v:SI 166 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 2 arch/arm/mm/idmap.c:65 (set (reg/v:SI 167 [ end ])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (nil))

(note 34 33 37 2 NOTE_INSN_FUNCTION_BEG)

(insn 37 34 38 2 arch/arm/mm/idmap.c:68 (set (reg:SI 168)
        (lshiftrt:SI (reg/v:SI 166 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 38 37 39 2 arch/arm/mm/idmap.c:68 (set (reg:SI 169)
        (ashift:SI (reg:SI 168)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 39 38 67 2 arch/arm/mm/idmap.c:68 (set (reg/v/f:SI 162 [ pgd.366 ])
        (plus:SI (reg/v/f:SI 165 [ pgd ])
            (reg:SI 169))) 4 {*arm_addsi3} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 7) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167
;; lr  def 	 24 [cc] 163 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167
;; live  gen 	 24 [cc] 163 170 171 172 173
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 67 39 40 3 5 "" [0 uses])

(note 40 67 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 3 arch/arm/mm/idmap.c:70 (set (reg:SI 170)
        (plus:SI (reg/v:SI 166 [ addr ])
            (const_int 2097152 [0x200000]))) 4 {*arm_addsi3} (nil))

(insn 42 41 43 3 arch/arm/mm/idmap.c:70 (set (reg:SI 171)
        (lshiftrt:SI (reg:SI 170)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 43 42 44 3 arch/arm/mm/idmap.c:70 (set (reg/v:SI 163 [ __boundary ])
        (ashift:SI (reg:SI 171)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 170)
            (const_int -2097152 [0xffffffffffe00000]))
        (nil)))

(insn 44 43 45 3 arch/arm/mm/idmap.c:70 (set (reg:SI 172)
        (plus:SI (reg/v:SI 163 [ __boundary ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 3 arch/arm/mm/idmap.c:70 (set (reg:SI 173)
        (plus:SI (reg/v:SI 167 [ end ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 46 45 47 3 arch/arm/mm/idmap.c:70 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (reg:SI 173))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 47 46 48 3 arch/arm/mm/idmap.c:70 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 167


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 167
;; live  gen 	 164
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 48 47 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 52 4 arch/arm/mm/idmap.c:70 discrim 2 (set (reg/v:SI 164 [ next ])
        (reg/v:SI 167 [ end ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 163 167
;; live  gen 	 164
;; live  kill	

;; Pred edge  3 [50.0%] 
(code_label 52 49 53 5 2 "" [1 uses])

(note 53 52 54 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 5 arch/arm/mm/idmap.c:70 discrim 1 (set (reg/v:SI 164 [ next ])
        (reg/v:SI 163 [ __boundary ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164 167
;; lr  def 	 24 [cc] 174 175
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167
;; live  gen 	 24 [cc] 174 175
;; live  kill	 24 [cc]

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 55 54 56 6 3 "" [0 uses])

(note 56 55 57 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 6 arch/arm/mm/idmap.c:50 (set (reg:SI 174)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 6 arch/arm/mm/idmap.c:50 (set (mem:SI (reg/v/f:SI 162 [ pgd.366 ]) [0 S4 A32])
        (reg:SI 174)) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 6 arch/arm/mm/idmap.c:50 (set (reg:SI 175)
        (reg:SI 174)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 60 59 61 6 arch/arm/mm/idmap.c:50 (set (mem:SI (plus:SI (reg/v/f:SI 162 [ pgd.366 ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 174)) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:495 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 162 [ pgd.366 ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7194152)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 62 61 63 6 arch/arm/mm/idmap.c:72 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 164 [ next ])
            (reg/v:SI 167 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 63 62 64 6 arch/arm/mm/idmap.c:72 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1400 [0x578])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167


;; Succ edge  7 [86.0%]  (fallthru)
;; Succ edge  8 [14.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164
;; lr  def 	 162 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167
;; live  gen 	 162 166
;; live  kill	

;; Pred edge  6 [86.0%]  (fallthru)
(note 64 63 65 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 7 arch/arm/mm/idmap.c:72 (set (reg/v/f:SI 162 [ pgd.366 ])
        (plus:SI (reg/v/f:SI 162 [ pgd.366 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 66 65 75 7 arch/arm/mm/idmap.c:72 (set (reg/v:SI 166 [ addr ])
        (reg/v:SI 164 [ next ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [14.0%] 
(code_label 75 66 78 8 6 "" [1 uses])

(note 78 75 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 59.
deleting insn with uid = 59.
rescanning insn with uid = 60.
deleting insn with uid = 60.
ending the processing of deferred insns

;; Function identity_mapping_add (identity_mapping_add)[0:1182]


12 basic blocks, 14 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 700, maybe hot.
Predecessors:  2 [50.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [100.0%]  (fallthru)


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 3 [100.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 7, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (fallthru) 10 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  8 [50.0%]  7 [50.0%]  (fallthru)


Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 8 , prev 7, next 9, loop_depth 1, count 0, freq 5000, maybe hot.
Predecessors:  6 [50.0%] 
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  9 [100.0%]  (fallthru)


Basic block 9 , prev 8, next 10, loop_depth 1, count 0, freq 10000, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  10 [86.0%]  (fallthru) 11 [14.0%] 


Basic block 10 , prev 9, next 11, loop_depth 1, count 0, freq 8600, maybe hot.
Predecessors:  9 [86.0%]  (fallthru)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [100.0%]  (fallthru)


Basic block 11 , prev 10, next 1, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  9 [14.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 11, loop_depth 0, count 0, freq 1400, maybe hot.
Predecessors:  11 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 22 (  1.8)


identity_mapping_add

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,11u} r12={2d} r13={1d,12u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,3u} r25={1d,11u} r26={1d,10u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,4u} r134={1d,2u} r135={1d,2u} r136={2d,2u} r137={2d,1u} r138={1d,1u} r139={1d,1u} r140={2d,3u,1d} r141={1d,3u} r142={1d,1u} r143={1d,1u} r144={1d,1u,1d} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} 
;;    total ref usage 235{153d,80u,2e} in 33{32 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 5 10 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 8 7 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[10]->( 6 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 9 )->[11]->( 1 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 11 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 8 to worklist
  Adding insn 31 to worklist
  Adding insn 50 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
Finished finding needed instructions:
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141
  Adding insn 53 to worklist
  Adding insn 52 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141
  Adding insn 49 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 41 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 140 141
  Adding insn 38 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 140 141
  Adding insn 33 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 140 141
  Adding insn 30 to worklist
  Adding insn 29 to worklist
  Adding insn 28 to worklist
  Adding insn 27 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141
  Adding insn 23 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 140 141
  Adding insn 13 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 140 141
  Adding insn 18 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 4 to worklist
  Adding insn 3 to worklist
  Adding insn 2 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 14 count 23 (  1.9)
;; Following path with 10 sets: 2 4 
;; Following path with 10 sets: 2 3 
;; Following path with 3 sets: 5 
;; Following path with 8 sets: 6 8 
;; Following path with 8 sets: 6 7 
;; Following path with 12 sets: 9 11 
;; Following path with 14 sets: 9 10 
;; Following path with 2 sets: 10 


try_optimize_cfg iteration 1



identity_mapping_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,11u} r12={2d} r13={1d,12u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,3u} r25={1d,11u} r26={1d,10u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,4u} r134={1d,2u} r135={1d,2u} r136={2d,2u} r137={2d,1u} r138={1d,1u} r139={1d,1u} r140={2d,3u,1d} r141={1d,3u} r142={1d,1u} r143={1d,1u} r144={1d,1u,1d} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} 
;;    total ref usage 235{153d,80u,2e} in 33{32 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139 140 141
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 138 139 140 141
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/idmap.c:32 (set (reg/v/f:SI 139 [ pgd ])
        (reg:SI 0 r0 [ pgd ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/idmap.c:32 (set (reg/v:SI 140 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/idmap.c:32 (set (reg/v:SI 141 [ end ])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 8 5 9 2 arch/arm/mm/idmap.c:36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512b2280 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 9 8 10 2 arch/arm/mm/idmap.c:36 (set (reg:SI 138 [ D.21535 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/idmap.c:36 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.21535 ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/idmap.c:36 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 137
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 16 3 arch/arm/mm/idmap.c:37 (set (reg/v:SI 137 [ prot ])
        (const_int 1042 [0x412])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 141


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 137
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 16 13 17 4 9 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 arch/arm/mm/idmap.c:35 (set (reg/v:SI 137 [ prot ])
        (const_int 1026 [0x402])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 141


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 133 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 141
;; live  gen 	 133 142 143
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 19 18 20 5 10 "" [0 uses])

(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 5 arch/arm/mm/idmap.c:39 (set (reg:SI 142)
        (lshiftrt:SI (reg/v:SI 140 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 22 21 23 5 arch/arm/mm/idmap.c:39 (set (reg:SI 143)
        (ashift:SI (reg:SI 142)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 23 22 54 5 arch/arm/mm/idmap.c:39 (set (reg/v/f:SI 133 [ pgd.404 ])
        (plus:SI (reg/v/f:SI 139 [ pgd ])
            (reg:SI 143))) 4 {*arm_addsi3} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 10) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 141
;; lr  def 	 24 [cc] 135 144 145 146 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141
;; live  gen 	 24 [cc] 135 144 145 146 147
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 54 23 24 6 14 "" [0 uses])

(note 24 54 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 6 arch/arm/mm/idmap.c:41 (set (reg:SI 144)
        (plus:SI (reg/v:SI 140 [ addr ])
            (const_int 2097152 [0x200000]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 6 arch/arm/mm/idmap.c:41 (set (reg:SI 145)
        (lshiftrt:SI (reg:SI 144)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 28 6 arch/arm/mm/idmap.c:41 (set (reg/v:SI 135 [ __boundary ])
        (ashift:SI (reg:SI 145)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 144)
            (const_int -2097152 [0xffffffffffe00000]))
        (nil)))

(insn 28 27 29 6 arch/arm/mm/idmap.c:41 (set (reg:SI 146)
        (plus:SI (reg/v:SI 135 [ __boundary ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 29 28 30 6 arch/arm/mm/idmap.c:41 (set (reg:SI 147)
        (plus:SI (reg/v:SI 141 [ end ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 30 29 31 6 arch/arm/mm/idmap.c:41 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146)
            (reg:SI 147))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 32 6 arch/arm/mm/idmap.c:41 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 140 141


;; Succ edge  8 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141
;; live  gen 	 136
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 36 7 arch/arm/mm/idmap.c:41 discrim 2 (set (reg/v:SI 136 [ next ])
        (reg/v:SI 141 [ end ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 140 141


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 137 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 137 140 141
;; live  gen 	 136
;; live  kill	

;; Pred edge  6 [50.0%] 
(code_label 36 33 37 8 11 "" [1 uses])

(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 8 arch/arm/mm/idmap.c:41 discrim 1 (set (reg/v:SI 136 [ next ])
        (reg/v:SI 135 [ __boundary ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 140 141


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 140 141
;; lr  def 	 24 [cc] 134 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 140 141
;; live  gen 	 24 [cc] 134 148 149 150
;; live  kill	 24 [cc]

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 39 38 40 9 12 "" [0 uses])

(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 9 arch/arm/mm/idmap.c:12 (set (reg:SI 149)
        (lshiftrt:SI (reg/v:SI 140 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 42 41 43 9 arch/arm/mm/idmap.c:12 (set (reg:SI 148)
        (ashift:SI (reg:SI 149)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/v:SI 140 [ addr ])
            (const_int -2097152 [0xffffffffffe00000]))
        (nil)))

(insn 43 42 44 9 arch/arm/mm/idmap.c:12 (set (reg/v:SI 134 [ addr ])
        (ior:SI (reg:SI 148)
            (reg/v:SI 137 [ prot ]))) 89 {*arm_iorsi3} (nil))

(insn 44 43 45 9 arch/arm/mm/idmap.c:13 (set (mem:SI (reg/v/f:SI 133 [ pgd.404 ]) [0 S4 A32])
        (reg/v:SI 134 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 9 arch/arm/mm/idmap.c:15 (set (reg:SI 150)
        (plus:SI (reg/v:SI 134 [ addr ])
            (const_int 1048576 [0x100000]))) 4 {*arm_addsi3} (nil))

(insn 46 45 47 9 arch/arm/mm/idmap.c:15 (set (mem:SI (plus:SI (reg/v/f:SI 133 [ pgd.404 ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:479 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 133 [ pgd.404 ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7192104)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 48 47 49 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:487 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7193128)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 49 48 50 9 arch/arm/mm/idmap.c:43 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ next ])
            (reg/v:SI 141 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 9 arch/arm/mm/idmap.c:43 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1400 [0x578])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141


;; Succ edge  10 [86.0%]  (fallthru)
;; Succ edge  11 [14.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; lr  def 	 133 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141
;; live  gen 	 133 140
;; live  kill	

;; Pred edge  9 [86.0%]  (fallthru)
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 10 arch/arm/mm/idmap.c:43 (set (reg/v/f:SI 133 [ pgd.404 ])
        (plus:SI (reg/v/f:SI 133 [ pgd.404 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 53 52 62 10 arch/arm/mm/idmap.c:43 (set (reg/v:SI 140 [ addr ])
        (reg/v:SI 136 [ next ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [14.0%] 
(code_label 62 53 65 11 15 "" [1 uses])

(note 65 62 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 11 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function setup_mm_for_reboot (setup_mm_for_reboot)[0:1186]


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

Successors:  2 [100.0%]  (fallthru)


Basic block 2 , prev 0, next 3, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  3 [50.0%]  (fallthru) 4 [50.0%] 


Basic block 3 , prev 2, next 4, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  4 [100.0%]  (fallthru)


Basic block 4 , prev 3, next 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [50.0%]  3 [100.0%]  (fallthru)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  5 [61.0%]  (fallthru) 6 [39.0%] 


Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  4 [61.0%]  (fallthru)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  6 [100.0%]  (fallthru)


Basic block 6 , prev 5, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [39.0%]  5 [100.0%]  (fallthru)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

Successors:  EXIT [100.0%]  (fallthru)


Basic block 1 , prev 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  6 [100.0%]  (fallthru)
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Successors: 


starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)


setup_mm_for_reboot

Dataflow summary:
def_info->table_size = 0, use_info->table_size = 0
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,6u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,1u,1d} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 189{145d,43u,1e} in 24{23 regular + 1 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(11){ }d-1(12){ }d-1(13){ }d-1(14){ }d-1(25){ }d-1(26){ }}
;; bb 0 artificial_uses: { }

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 4 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(11){ }u-1(13){ }u-1(14){ }u-1(25){ }}

Finding needed instructions:
  Adding insn 20 to worklist
  Adding insn 17 to worklist
  Adding insn 14 to worklist
  Adding insn 23 to worklist
  Adding insn 28 to worklist
  Adding insn 31 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
Finished finding needed instructions:
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 30 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 27 to worklist
  Adding insn 26 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 22 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
;; Following path with 21 sets: 2 3 
deferring rescan insn with uid = 7.
;; Following path with 6 sets: 4 5 
;; Following path with 4 sets: 6 


try_optimize_cfg iteration 1



setup_mm_for_reboot

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,6u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,1u,1d} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 189{145d,43u,1e} in 24{23 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137 138 139 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 136 137 138 139 140 141
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 134 [ sp.81 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/idmap.c:88 (set (reg:SI 137)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 arch/arm/mm/idmap.c:88 (set (reg:SI 136)
        (and:SI (reg:SI 137)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 9 8 10 2 arch/arm/mm/idmap.c:88 (set (reg/f:SI 138 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 136)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/idmap.c:88 (set (reg/f:SI 139 [ <variable>.active_mm ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 138 [ <variable>.task ])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/idmap.c:88 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 139 [ <variable>.active_mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/idmap.c:88 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/idmap.c:88 (set (reg:SI 2 r2)
        (const_int -1090519040 [0xffffffffbf000000])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 15 2 arch/arm/mm/idmap.c:88 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_add") [flags 0x3] <function_decl 0x10d1c400 identity_mapping_add>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 140)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x112f45a0 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 133 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7172648)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 18 17 19 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:SI 141)
        (and:SI (reg/v:SI 133 [ __tlb_flag ])
            (const_int 4096 [0x1000]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 18 20 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 20 19 21 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 142
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 142)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 142)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7173288)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 143
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 24 23 25 4 17 "" [1 uses])

(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:SI 143)
        (and:SI (reg/v:SI 133 [ __tlb_flag ])
            (const_int 1048576 [0x100000]))) 67 {*arm_andsi3_insn} (nil))

(insn 27 26 28 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 28 27 29 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 144
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 144)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 144)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7174056)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 32 31 33 6 18 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7174440)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 35 34 0 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 7174568)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
rescanning insn with uid = 7.
deleting insn with uid = 7.
ending the processing of deferred insns
