
;; Function do_bad (do_bad)[0:1296]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   18 use r0:SI
   12 r0:SI=r133:SI
      REG_DEAD: r133:SI
      REG_EQUAL: 0x1
    8 r133:SI=0x1


do_bad

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 3{3 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 12 2 arch/arm/mm/fault.c:489 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 18 2 arch/arm/mm/fault.c:489 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 18 12 0 2 arch/arm/mm/fault.c:489 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __do_user_fault (__do_user_fault)[0:1289]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   25 r0:SI=call [`force_sig_info'] argc:0x0
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_UNUSED: r0:SI
   24 r2:SI=r134:SI
      REG_DEAD: r134:SI
   23 r1:SI=r142:SI
      REG_DEAD: r142:SI
      REG_EQUAL: sfp:SI-0x80
   22 r0:SI=r137:SI
      REG_DEAD: r137:SI
   21 r142:SI=sfp:SI-0x80
   21 r142:SI=sfp:SI-0x80
found pre add(21) r[142]=r[25]+-128
   20 [sfp:SI-0x74]=r135:SI
      REG_DEAD: r135:SI
   20 [sfp:SI-0x74]=r135:SI
      REG_DEAD: r135:SI
found mem(20) *(r[25]+-116)
   21 r142:SI=sfp:SI-0x80
found post add(21) r[142]=r[25]+-128
   19 [sfp:SI-0x78]=r138:SI
      REG_DEAD: r138:SI
   19 [sfp:SI-0x78]=r138:SI
      REG_DEAD: r138:SI
found mem(19) *(r[25]+-120)
   18 [sfp:SI-0x7c]=r141:SI
      REG_DEAD: r141:SI
      REG_EQUAL: 0x0
   18 [sfp:SI-0x7c]=r141:SI
      REG_DEAD: r141:SI
      REG_EQUAL: 0x0
found mem(18) *(r[25]+-124)
   17 r141:SI=0x0
   16 [sfp:SI-0x80]=r137:SI
   16 [sfp:SI-0x80]=r137:SI
found mem(16) *(r[25]+-128)
   14 [r134:SI+0x314]=r140:SI
      REG_DEAD: r140:SI
      REG_EQUAL: 0xe
   14 [r134:SI+0x314]=r140:SI
      REG_DEAD: r140:SI
      REG_EQUAL: 0xe
found mem(14) *(r[134]+788)
   13 r140:SI=0xe
   12 [r134:SI+0x318]=r136:SI
      REG_DEAD: r136:SI
   12 [r134:SI+0x318]=r136:SI
      REG_DEAD: r136:SI
found mem(12) *(r[134]+792)
   11 [r134:SI+0x310]=r135:SI
   11 [r134:SI+0x310]=r135:SI
found mem(11) *(r[134]+784)
    6 r138:SI=[afp:SI+0x4]
      REG_EQUIV: [afp:SI+0x4]
    6 r138:SI=[afp:SI+0x4]
      REG_EQUIV: [afp:SI+0x4]
found mem(6) *(r[26]+4)
    5 r137:SI=r3:SI
      REG_DEAD: r3:SI
    4 r136:SI=r2:SI
      REG_DEAD: r2:SI
    3 r135:SI=r1:SI
      REG_DEAD: r1:SI
    2 r134:SI=r0:SI
      REG_DEAD: r0:SI


__do_user_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,2u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,4u} r135={1d,2u} r136={1d,1u} r137={1d,2u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 175{138d,35u,2e} in 19{18 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137 138 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 136 137 138 140 141 142
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/mm/fault.c:173 (set (reg/v/f:SI 134 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tsk ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 135 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 136 [ fsr ])
        (reg:SI 2 r2 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ fsr ])
        (nil)))

(insn 5 4 6 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 137 [ sig ])
        (reg:SI 3 r3 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ sig ])
        (nil)))

(insn 6 5 8 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 138 [ code ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 code+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 code+0 S4 A32])
        (nil)))

(note 8 6 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/mm/fault.c:185 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 784 [0x310])) [0 <variable>.thread.address+0 S4 A64])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:186 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ fsr ])
        (nil)))

(insn 13 12 14 2 arch/arm/mm/fault.c:187 (set (reg:SI 140)
        (const_int 14 [0xe])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 16 2 arch/arm/mm/fault.c:187 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (const_int 14 [0xe])
            (nil))))

(insn 16 14 17 2 arch/arm/mm/fault.c:188 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 si.si_signo+0 S4 A64])
        (reg/v:SI 137 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/fault.c:189 (set (reg:SI 141)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/mm/fault.c:189 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 si.si_errno+0 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 19 18 20 2 arch/arm/mm/fault.c:190 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 si.si_code+0 S4 A64])
        (reg/v:SI 138 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ code ])
        (nil)))

(insn 20 19 21 2 arch/arm/mm/fault.c:191 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 si._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ addr ])
        (nil)))

(insn 21 20 22 2 arch/arm/mm/fault.c:192 (set (reg/f:SI 142)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 22 21 23 2 arch/arm/mm/fault.c:192 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ sig ])
        (nil)))

(insn 23 22 24 2 arch/arm/mm/fault.c:192 (set (reg:SI 1 r1)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 24 23 25 2 arch/arm/mm/fault.c:192 (set (reg:SI 2 r2)
        (reg/v/f:SI 134 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ tsk ])
        (nil)))

(call_insn 25 24 0 2 arch/arm/mm/fault.c:192 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x11156f80 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_pte (show_pte)[0:1287]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   29 cc:CC=cmp(r136:SI,0x0)
   28 r136:SI=[r140:SI*0x8+r142:SI]
      REG_DEAD: r142:SI
      REG_DEAD: r140:SI
   27 r0:SI=call [`printk'] argc:0x0
      REG_DEAD: r1:SI
      REG_UNUSED: r0:SI
   96 r3:SI=0x0
      REG_EQUAL: 0x0
   95 r2:SI=r145:SI
      REG_DEAD: r145:SI
   25 r1:SI=r138:SI
   24 r0:SI=`*.LC1'
      REG_EQUAL: `*.LC1'
   22 r145:SI=[r140:SI*0x8+r142:SI]
   19 r142:SI=[r137:SI+0x24]
      REG_DEAD: r137:SI
   19 r142:SI=[r137:SI+0x24]
      REG_DEAD: r137:SI
found mem(19) *(r[137]+36)
   17 r140:SI=r138:SI 0>>0x15
   16 r0:SI=call [`printk'] argc:0x0
      REG_DEAD: r1:SI
      REG_UNUSED: r0:SI
   15 r1:SI=[r137:SI+0x24]
   15 r1:SI=[r137:SI+0x24]
found mem(15) *(r[137]+36)
   14 r0:SI=`*.LC0'
      REG_EQUAL: `*.LC0'
  126 r137:SI={(cc:CC!=0x0)?r137:SI:r178:SI}
      REG_DEAD: r178:SI
      REG_DEAD: cc:CC
      REG_EQUAL: {(cc:CC!=0x0)?r137:SI:`init_mm'}
  124 r178:SI=`init_mm'
    7 cc:CC=cmp(r137:SI,0x0)
    3 r138:SI=r1:SI
      REG_DEAD: r1:SI
    2 r137:SI=r0:SI
      REG_DEAD: r0:SI


starting bb 3
   33 cc:CC=cmp(r146:SI,0x0)
   32 r146:SI=r136:SI&0x2


starting bb 4
   38 r0:SI=call [`printk'] argc:0x0
      REG_UNUSED: r0:SI
   37 r0:SI=`*.LC2'
      REG_EQUAL: `*.LC2'


starting bb 5
   54 cc:CC=cmp(r156:SI,0x300)
      REG_DEAD: r156:SI
   53 r156:SI=r133:SI-r157:SI
      REG_DEAD: r157:SI
      REG_DEAD: r133:SI
   52 r157:SI=[r133:SI+0x2ec]
   52 r157:SI=[r133:SI+0x2ec]
found mem(52) *(r[133]+748)
   51 r133:SI=r153:SI+r155:SI
      REG_DEAD: r155:SI
      REG_DEAD: r153:SI
      REG_EQUAL: r153:SI+`contig_page_data'
   50 r155:SI=`contig_page_data'
   49 r153:SI=r154:SI*r151:SI
      REG_DEAD: r154:SI
      REG_DEAD: r151:SI
      REG_EQUAL: r151:SI*0x300
   48 r154:SI=0x300
   47 r151:SI=r152:SI 0>>0x1e
      REG_DEAD: r152:SI
   46 r152:SI=[r148:SI*0x20+r149:SI]
      REG_DEAD: r149:SI
      REG_DEAD: r148:SI
   45 r149:SI=[r150:SI]
      REG_DEAD: r150:SI
      REG_EQUAL: [`mem_map']
   45 r149:SI=[r150:SI]
      REG_DEAD: r150:SI
      REG_EQUAL: [`mem_map']
found mem(45) *(r[150]+0)
   44 r150:SI=`mem_map'
   43 r148:SI=r136:SI 0>>0xc


starting bb 6
   60 r0:SI=call [`printk'] argc:0x0
      REG_UNUSED: r0:SI
   59 r0:SI=`*.LC3'
      REG_EQUAL: `*.LC3'


starting bb 7
   83 r0:SI=call [`printk'] argc:0x0
      REG_UNUSED: r0:SI
  104 r3:SI=r146:SI
      REG_DEAD: r146:SI
      REG_EQUAL: 0x0
  103 r2:SI=r171:SI
      REG_DEAD: r171:SI
   81 r0:SI=`*.LC5'
      REG_EQUAL: `*.LC5'
   79 r171:SI=[r134:SI+0x800]
      REG_DEAD: r134:SI
   79 r171:SI=[r134:SI+0x800]
      REG_DEAD: r134:SI
found mem(79) *(r[134]+2048)
   77 r0:SI=call [`printk'] argc:0x0
      REG_UNUSED: r0:SI
  100 r3:SI=r146:SI
      REG_EQUAL: 0x0
   99 r2:SI=r168:SI
      REG_DEAD: r168:SI
   75 r0:SI=`*.LC4'
      REG_EQUAL: `*.LC4'
   73 r168:SI=[r163:SI*0x4+r161:SI]
      REG_DEAD: r163:SI
      REG_DEAD: r161:SI
   71 r134:SI=r161:SI+r165:SI
      REG_DEAD: r165:SI
   70 r165:SI=r163:SI<<0x2
   69 r163:SI=r164:SI 0>>0x17
      REG_DEAD: r164:SI
      REG_EQUAL: r162:SI&0x1ff
   68 r164:SI=r162:SI<<0x17
      REG_DEAD: r162:SI
   67 r162:SI=r138:SI 0>>0xc
      REG_DEAD: r138:SI
   66 r161:SI=r159:SI-0x40000000
      REG_DEAD: r159:SI
   66 r161:SI=r159:SI-0x40000000
      REG_DEAD: r159:SI
found pre add(66) r[161]=r[159]+-1073741824
   65 r159:SI=r160:SI&0xfffffffffffffff0
      REG_DEAD: r160:SI
      REG_EQUAL: r136:SI&0xfffffffffffff000
   64 r160:SI=r136:SI&0xfffffffffffff00f
      REG_DEAD: r136:SI


show_pte

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,7u} r1={9d,3u} r2={10d,3u} r3={10d,3u} r11={1d,7u} r12={7d} r13={1d,13u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={10d,4u,1d} r25={1d,7u} r26={1d,6u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,2u} r134={1d,1u} r136={1d,4u,1d} r137={2d,4u,1d} r138={1d,3u} r140={1d,2u} r142={1d,2u} r145={1d,1u} r146={1d,3u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u,1d} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r162={1d,1u,1d} r163={1d,2u} r164={1d,1u} r165={1d,1u} r168={1d,1u} r171={1d,1u} r178={1d,1u} 
;;    total ref usage 863{759d,98u,6e} in 57{51 regular + 6 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 140 142 145 178
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 136 137 138 140 142 145 178
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/mm/fault.c:71 (set (reg/v/f:SI 137 [ mm ])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mm ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:71 (set (reg/v:SI 138 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 124 2 arch/arm/mm/fault.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 137 [ mm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 124 7 126 2 arch/arm/mm/fault.c:75 (set (reg/f:SI 178)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>)) 167 {*arm_movsi_insn} (nil))

(insn 126 124 14 2 arch/arm/mm/fault.c:75 (set (reg/v/f:SI 137 [ mm ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v/f:SI 137 [ mm ])
            (reg/f:SI 178))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg/f:SI 178)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (expr_list:REG_EQUAL (if_then_else:SI (ne (reg:CC 24 cc)
                        (const_int 0 [0x0]))
                    (reg/v/f:SI 137 [ mm ])
                    (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>))
                (nil)))))

(insn 14 126 15 2 arch/arm/mm/fault.c:77 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114bfdb0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114bfdb0>)
        (nil)))

(insn 15 14 16 2 arch/arm/mm/fault.c:77 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 2 arch/arm/mm/fault.c:77 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 17 16 19 2 arch/arm/mm/fault.c:78 (set (reg:SI 140)
        (lshiftrt:SI (reg/v:SI 138 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 19 17 22 2 arch/arm/mm/fault.c:78 (set (reg/f:SI 142 [ <variable>.pgd ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ mm ])
        (nil)))

(insn 22 19 24 2 arch/arm/mm/fault.c:79 (set (reg:SI 145)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 140)
                    (const_int 8 [0x8]))
                (reg/f:SI 142 [ <variable>.pgd ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 22 25 2 arch/arm/mm/fault.c:79 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x114b7420>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x114b7420>)
        (nil)))

(insn 25 24 95 2 arch/arm/mm/fault.c:79 (set (reg:SI 1 r1)
        (reg/v:SI 138 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 95 25 96 2 arch/arm/mm/fault.c:79 (set (reg:SI 2 r2)
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 96 95 27 2 arch/arm/mm/fault.c:79 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 27 96 28 2 arch/arm/mm/fault.c:79 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 28 27 29 2 arch/arm/mm/fault.c:111 (set (reg:SI 136 [ D.24402 ])
        (mem:SI (plus:SI (mult:SI (reg:SI 140)
                    (const_int 8 [0x8]))
                (reg/f:SI 142 [ <variable>.pgd ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142 [ <variable>.pgd ])
        (expr_list:REG_DEAD (reg:SI 140)
            (nil))))

(insn 29 28 30 2 arch/arm/mm/fault.c:111 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.24402 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 2 arch/arm/mm/fault.c:111 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 6 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138


;; Succ edge  6 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 24 [cc] 146
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 31 30 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 3 arch/arm/mm/fault.c:114 (set (reg:SI 146)
        (and:SI (reg:SI 136 [ D.24402 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 32 34 3 arch/arm/mm/fault.c:114 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 34 33 35 3 arch/arm/mm/fault.c:114 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru)
(note 35 34 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 37 35 38 4 arch/arm/mm/fault.c:115 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x114e0740>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x114e0740>)
        (nil)))

(call_insn 38 37 41 4 arch/arm/mm/fault.c:115 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133 148 149 150 151 152 153 154 155 156 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; live  gen 	 24 [cc] 133 148 149 150 151 152 153 154 155 156 157
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 41 38 42 5 8 "" [1 uses])

(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 5 include/linux/mm.h:692 (set (reg:SI 148)
        (lshiftrt:SI (reg:SI 136 [ D.24402 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 44 43 45 5 include/linux/mm.h:692 (set (reg/f:SI 150)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 5 include/linux/mm.h:692 (set (reg/f:SI 149 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 150) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>) [0 mem_map+0 S4 A32])
            (nil))))

(insn 46 45 47 5 include/linux/mm.h:692 (set (reg:SI 152 [ <variable>.flags ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 148)
                    (const_int 32 [0x20]))
                (reg/f:SI 149 [ mem_map ])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ mem_map ])
        (expr_list:REG_DEAD (reg:SI 148)
            (nil))))

(insn 47 46 48 5 include/linux/mm.h:692 (set (reg:SI 151)
        (lshiftrt:SI (reg:SI 152 [ <variable>.flags ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152 [ <variable>.flags ])
        (nil)))

(insn 48 47 49 5 include/linux/mm.h:692 (set (reg:SI 154)
        (const_int 768 [0x300])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 5 include/linux/mm.h:692 (set (reg:SI 153)
        (mult:SI (reg:SI 154)
            (reg:SI 151))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_DEAD (reg:SI 151)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 151)
                    (const_int 768 [0x300]))
                (nil)))))

(insn 50 49 51 5 include/linux/mm.h:692 (set (reg/f:SI 155)
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 5 include/linux/mm.h:692 (set (reg/f:SI 133 [ D.24788 ])
        (plus:SI (reg:SI 153)
            (reg/f:SI 155))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_DEAD (reg:SI 153)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 153)
                    (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>))
                (nil)))))

(insn 52 51 53 5 include/linux/mmzone.h:741 (set (reg/f:SI 157 [ <variable>.zone_pgdat ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 133 [ D.24788 ])
                (const_int 748 [0x2ec])) [0 <variable>.zone_pgdat+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 5 include/linux/mmzone.h:741 (set (reg:SI 156)
        (minus:SI (reg/f:SI 133 [ D.24788 ])
            (reg/f:SI 157 [ <variable>.zone_pgdat ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 157 [ <variable>.zone_pgdat ])
        (expr_list:REG_DEAD (reg/f:SI 133 [ D.24788 ])
            (nil))))

(insn 54 53 55 5 include/linux/mmzone.h:741 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156)
            (const_int 768 [0x300]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(jump_insn 55 54 56 5 include/linux/mmzone.h:741 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146


;; Succ edge  6 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 7 5 2 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [28.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 56 55 57 6 7 "" [1 uses])

(note 57 56 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 59 57 60 6 arch/arm/mm/fault.c:130 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114e09e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114e09e0>)
        (nil)))

(call_insn/j 60 59 62 6 arch/arm/mm/fault.c:130 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 159 160 161 162 163 164 165 168 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 134 159 160 161 162 163 164 165 168 171
;; live  kill	 14 [lr]

;; Pred edge  5 [72.0%] 
(code_label 62 60 63 7 9 "" [1 uses])

(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 7 arch/arm/mm/fault.c:123 (set (reg:SI 160)
        (and:SI (reg:SI 136 [ D.24402 ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.24402 ])
        (nil)))

(insn 65 64 66 7 arch/arm/mm/fault.c:123 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (and:SI (reg:SI 136 [ D.24402 ])
                (const_int -4096 [0xfffffffffffff000]))
            (nil))))

(insn 66 65 67 7 arch/arm/mm/fault.c:123 (set (reg:SI 161)
        (plus:SI (reg:SI 159)
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 67 66 68 7 arch/arm/mm/fault.c:123 (set (reg:SI 162)
        (lshiftrt:SI (reg/v:SI 138 [ addr ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ addr ])
        (nil)))

(insn 68 67 69 7 arch/arm/mm/fault.c:123 (set (reg:SI 164)
        (ashift:SI (reg:SI 162)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 69 68 70 7 arch/arm/mm/fault.c:123 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 164)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (and:SI (reg:SI 162)
                (const_int 511 [0x1ff]))
            (nil))))

(insn 70 69 71 7 arch/arm/mm/fault.c:123 (set (reg:SI 165)
        (ashift:SI (reg:SI 163)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 71 70 73 7 arch/arm/mm/fault.c:123 (set (reg/v/f:SI 134 [ pte ])
        (plus:SI (reg:SI 161)
            (reg:SI 165))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 73 71 75 7 arch/arm/mm/fault.c:124 (set (reg:SI 168)
        (mem:SI (plus:SI (mult:SI (reg:SI 163)
                    (const_int 4 [0x4]))
                (reg:SI 161)) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg:SI 161)
            (nil))))

(insn 75 73 99 7 arch/arm/mm/fault.c:124 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114e1ab0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114e1ab0>)
        (nil)))

(insn 99 75 100 7 arch/arm/mm/fault.c:124 (set (reg:SI 2 r2)
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 100 99 77 7 arch/arm/mm/fault.c:124 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 77 100 79 7 arch/arm/mm/fault.c:124 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 79 77 81 7 arch/arm/mm/fault.c:125 (set (reg:SI 171)
        (mem:SI (plus:SI (reg/v/f:SI 134 [ pte ])
                (const_int 2048 [0x800])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ pte ])
        (nil)))

(insn 81 79 103 7 arch/arm/mm/fault.c:125 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114e1c60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114e1c60>)
        (nil)))

(insn 103 81 104 7 arch/arm/mm/fault.c:125 (set (reg:SI 2 r2)
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 104 103 83 7 arch/arm/mm/fault.c:125 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 83 104 0 7 arch/arm/mm/fault.c:125 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __do_kernel_fault (__do_kernel_fault)[0:1288]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   12 cc:CC=cmp(r134:SI,0x0)
   11 r134:SI=r0:SI
      REG_DEAD: r0:SI
   10 r0:SI=call [`fixup_exception'] argc:0x0
    9 r0:SI=r138:SI
    5 r138:SI=r3:SI
      REG_DEAD: r3:SI
    4 r137:SI=r2:SI
      REG_DEAD: r2:SI
    3 r136:SI=r1:SI
      REG_DEAD: r1:SI
    2 r135:SI=r0:SI
      REG_DEAD: r0:SI


starting bb 3
   45 call [`do_exit'] argc:0x0
      REG_DEAD: r0:SI
      REG_NORETURN: 0x0
   44 r0:SI=0x9
   43 call [`bust_spinlocks'] argc:0x0
      REG_DEAD: r0:SI
   42 r0:SI=r134:SI
      REG_DEAD: r134:SI
      REG_EQUAL: 0x0
   41 call [`die'] argc:0x0
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
   40 r2:SI=r137:SI
      REG_DEAD: r137:SI
   39 r1:SI=r138:SI
      REG_DEAD: r138:SI
   38 r0:SI=`*.LC9'
      REG_EQUAL: `*.LC9'
   36 call [`show_pte'] argc:0x0
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_EH_REGION: 0x0
   35 r1:SI=r136:SI
      REG_DEAD: r136:SI
   34 r0:SI=r135:SI
      REG_DEAD: r135:SI
   33 r0:SI=call [`printk'] argc:0x0
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_UNUSED: r0:SI
   32 r2:SI=r136:SI
   31 r1:SI=r133:SI
      REG_DEAD: r133:SI
   30 r0:SI=`*.LC8'
      REG_EQUAL: `*.LC8'
   59 r133:SI={(leu(cc:CC,0x0))?r142:SI:r143:SI}
      REG_DEAD: r143:SI
      REG_DEAD: r142:SI
      REG_DEAD: cc:CC
      REG_EQUAL: {(leu(cc:CC,0x0))?`*.LC7':`*.LC6'}
   57 r143:SI=`*.LC6'
   56 r142:SI=`*.LC7'
   18 cc:CC=cmp(r136:SI,r139:SI)
      REG_DEAD: r139:SI
      REG_EQUAL: cmp(r136:SI,0xfff)
   17 r139:SI=0xfff
   16 call [`bust_spinlocks'] argc:0x0
      REG_DEAD: r0:SI
   15 r0:SI=0x1


starting bb 4


__do_kernel_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,9u} r1={11d,4u} r2={10d,3u} r3={8d,1u} r11={1d,4u} r12={8d} r13={1d,11u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={9d,2u,1d} r25={1d,4u} r26={1d,3u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,1u} r134={1d,2u} r135={1d,1u} r136={1d,3u,1d} r137={1d,1u} r138={1d,2u} r139={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 909{852d,55u,2e} in 31{24 regular + 7 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137 138
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 135 136 137 138
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/fault.c:143 (set (reg/v/f:SI 135 [ mm ])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mm ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:143 (set (reg/v:SI 136 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:143 (set (reg/v:SI 137 [ fsr ])
        (reg:SI 2 r2 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ fsr ])
        (nil)))

(insn 5 4 6 2 arch/arm/mm/fault.c:143 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 3 r3 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ regs ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/fault.c:147 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 11 2 arch/arm/mm/fault.c:147 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fixup_exception") [flags 0x41] <function_decl 0x11013a80 fixup_exception>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/mm/fault.c:147 (set (reg:SI 134 [ D.24430 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 12 11 13 2 arch/arm/mm/fault.c:147 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24430 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 arch/arm/mm/fault.c:147 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 139 142 143
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 arch/arm/mm/fault.c:153 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 3 arch/arm/mm/fault.c:153 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10a82a00 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 17 16 18 3 arch/arm/mm/fault.c:154 (set (reg:SI 139)
        (const_int 4095 [0xfff])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 56 3 arch/arm/mm/fault.c:154 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ addr ])
            (reg:SI 139))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 136 [ addr ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 56 18 57 3 arch/arm/mm/fault.c:154 discrim 2 (set (reg/f:SI 142)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x114c3f80>)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 59 3 arch/arm/mm/fault.c:154 discrim 2 (set (reg/f:SI 143)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114ed540>)) 167 {*arm_movsi_insn} (nil))

(insn 59 57 30 3 arch/arm/mm/fault.c:154 discrim 2 (set (reg/f:SI 133 [ iftmp.320 ])
        (if_then_else:SI (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 142)
            (reg/f:SI 143))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 142)
            (expr_list:REG_DEAD (reg:CC 24 cc)
                (expr_list:REG_EQUAL (if_then_else:SI (leu (reg:CC 24 cc)
                            (const_int 0 [0x0]))
                        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x114c3f80>)
                        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114ed540>))
                    (nil))))))

(insn 30 59 31 3 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10b2ecc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10b2ecc0>)
        (nil)))

(insn 31 30 32 3 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 1 r1)
        (reg/f:SI 133 [ iftmp.320 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ iftmp.320 ])
        (nil)))

(insn 32 31 33 3 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 34 3 arch/arm/mm/fault.c:154 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 34 33 35 3 arch/arm/mm/fault.c:159 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ mm ])
        (nil)))

(insn 35 34 36 3 arch/arm/mm/fault.c:159 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ addr ])
        (nil)))

(call_insn 36 35 38 3 arch/arm/mm/fault.c:159 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_pte") [flags 0x3] <function_decl 0x512d9600 show_pte>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 38 36 39 3 arch/arm/mm/fault.c:160 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x114ebb40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x114ebb40>)
        (nil)))

(insn 39 38 40 3 arch/arm/mm/fault.c:160 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ regs ])
        (nil)))

(insn 40 39 41 3 arch/arm/mm/fault.c:160 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ fsr ])
        (nil)))

(call_insn 41 40 42 3 arch/arm/mm/fault.c:160 (parallel [
            (call (mem:SI (symbol_ref:SI ("die") [flags 0x41] <function_decl 0x512d9300 die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 42 41 43 3 arch/arm/mm/fault.c:161 (set (reg:SI 0 r0)
        (reg:SI 134 [ D.24430 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.24430 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 43 42 44 3 arch/arm/mm/fault.c:161 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10a82a00 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 44 43 45 3 arch/arm/mm/fault.c:162 (set (reg:SI 0 r0)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 52 3 arch/arm/mm/fault.c:162 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_exit") [flags 0x41] <function_decl 0x10a67900 do_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 52 45 55 4 18 "" [1 uses])

(note 55 52 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_page_fault (do_page_fault)[0:1293]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   15 cc:CC=cmp(r161:SI,0x0)
      REG_DEAD: r161:SI
   14 r161:SI=r162:SI&0x80
      REG_DEAD: r162:SI
   13 r162:SI=[r158:SI+0x40]
   13 r162:SI=[r158:SI+0x40]
found mem(13) *(r[158]+64)
   12 r148:SI=[r149:SI+0x1ec]
   12 r148:SI=[r149:SI+0x1ec]
found mem(12) *(r[149]+492)
   11 r149:SI=[r159:SI+0xc]
      REG_DEAD: r159:SI
   11 r149:SI=[r159:SI+0xc]
      REG_DEAD: r159:SI
found mem(11) *(r[159]+12)
   10 r159:SI=r160:SI&0xffffffffffffffc0
      REG_DEAD: r160:SI
      REG_EQUAL: sp:SI&0xffffffffffffe000
    9 r160:SI=sp:SI&0xffffffffffffe03f
    4 r158:SI=r2:SI
      REG_DEAD: r2:SI
    3 r157:SI=r1:SI
      REG_DEAD: r1:SI
    2 r156:SI=r0:SI
      REG_DEAD: r0:SI


starting bb 3
   18 {asm_operands;clobber cc:QI;clobber [scratch];}
      REG_UNUSED: cc:QI


starting bb 4
   35 cc:CC=cmp(r173:SI,0x0)
      REG_DEAD: r173:SI
   34 r173:SI=zero_extend(r172:QI)
      REG_DEAD: r172:QI
   33 r172:QI=r171:SI#0
      REG_DEAD: r171:SI
   32 r171:SI=r168:SI|r170:SI
      REG_DEAD: r170:SI
      REG_DEAD: r168:SI
   30 r170:SI=cc:CC==0x0
      REG_DEAD: cc:CC
   29 cc:CC=cmp(r148:SI,0x0)
   27 r168:SI=cc:CC!=0x0
      REG_DEAD: cc:CC
   26 cc:CC=cmp(r165:SI,0x0)
      REG_DEAD: r165:SI
   25 r165:SI=r166:SI&0xffffffffbfffffff
      REG_DEAD: r166:SI
   24 r166:SI=[r163:SI+0x4]
      REG_DEAD: r163:SI
   24 r166:SI=[r163:SI+0x4]
      REG_DEAD: r163:SI
found mem(24) *(r[163]+4)
   23 r163:SI=r164:SI&0xffffffffffffffc0
      REG_DEAD: r164:SI
      REG_EQUAL: sp:SI&0xffffffffffffe000
   22 r164:SI=sp:SI&0xffffffffffffe03f


starting bb 5
  306 r206:SI=[r158:SI+0x40]
  306 r206:SI=[r158:SI+0x40]
found mem(306) *(r[158]+64)
   42 cc:CC=cmp(r153:SI,0x0)
      REG_DEAD: r153:SI
   41 r153:SI=r0:SI
      REG_DEAD: r0:SI
   40 r0:SI=call [`down_read_trylock'] argc:0x0
   39 r0:SI=r154:SI
   38 r154:SI=r148:SI+0x3c
   38 r154:SI=r148:SI+0x3c
found pre add(38) r[154]=r[148]+60


starting bb 6
   47 cc:CC=cmp(r174:SI,0x0)
      REG_DEAD: r174:SI
   46 r174:SI=r206:SI&0xf
      REG_DEAD: r206:SI


starting bb 7
   53 cc:CC=cmp(r152:SI,0x0)
      REG_DEAD: r152:SI
   52 r152:SI=r0:SI
      REG_DEAD: r0:SI
   51 r0:SI=call [`search_exception_tables'] argc:0x0
   50 r0:SI=[r158:SI+0x3c]
   50 r0:SI=[r158:SI+0x3c]
found mem(50) *(r[158]+60)


starting bb 8
   58 call [`down_read'] argc:0x0
      REG_DEAD: r0:SI
   57 r0:SI=r154:SI


starting bb 9
   65 cc:CC=cmp(r176:SI,0x0)
      REG_DEAD: r176:SI
   64 r176:SI=r206:SI&0xf
      REG_DEAD: r206:SI


starting bb 10
   71 cc:CC=cmp(r151:SI,0x0)
      REG_DEAD: r151:SI
   70 r151:SI=r0:SI
      REG_DEAD: r0:SI
   69 r0:SI=call [`search_exception_tables'] argc:0x0
   68 r0:SI=[r158:SI+0x3c]
   68 r0:SI=[r158:SI+0x3c]
found mem(68) *(r[158]+60)


starting bb 11
   79 cc:CC=cmp(r136:SI,0x0)
   78 r136:SI=r0:SI
   77 r0:SI=call [`find_vma'] argc:0x0
      REG_DEAD: r1:SI
   76 r1:SI=r156:SI
   75 r0:SI=r148:SI


starting bb 12
   83 cc:CC=cmp(r178:SI,r156:SI)
      REG_DEAD: r178:SI
   82 r178:SI=[r136:SI+0x4]
   82 r178:SI=[r136:SI+0x4]
found mem(82) *(r[136]+4)


starting bb 13
  106 cc:CC=cmp(r179:SI,0x0)
      REG_DEAD: r179:SI
  105 r179:SI=r137:SI&r180:SI
      REG_DEAD: r180:SI
      REG_DEAD: r137:SI
  104 r180:SI=[r136:SI+0x18]
  104 r180:SI=[r136:SI+0x18]
found mem(104) *(r[136]+24)
  317 r137:SI={(cc:CC>=0x0)?r137:SI:0x4}
      REG_DEAD: cc:CC
   98 cc:CC=cmp(r157:SI,0x0)
  309 r137:SI={(cc:CC==0x0)?0x7:0x2}
      REG_DEAD: cc:CC
   87 cc:CC=cmp(r138:SI,0x0)
   86 r138:SI=r157:SI&0x800


starting bb 14
  109 r147:SI=0x20000


starting bb 15
  125 cc:CC=cmp(r185:SI,0x0)
      REG_DEAD: r185:SI
  124 r185:SI=r147:SI&0x33
  123 r147:SI=r0:SI
      REG_DEAD: r0:SI
  122 r0:SI=call [`handle_mm_fault'] argc:0x0
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
  121 r3:SI=r184:SI
      REG_DEAD: r184:SI
  120 r2:SI=r181:SI
      REG_DEAD: r181:SI
  119 r1:SI=r136:SI
      REG_DEAD: r136:SI
  118 r0:SI=r148:SI
  117 r184:SI=cc:CC!=0x0
      REG_DEAD: cc:CC
  116 cc:CC=cmp(r138:SI,0x0)
      REG_DEAD: r138:SI
  115 r181:SI=r182:SI&0xfffffffffffffff0
      REG_DEAD: r182:SI
      REG_EQUAL: r156:SI&0xfffffffffffff000
  114 r182:SI=r156:SI&0xfffffffffffff00f


starting bb 16
  129 cc:CC=cmp(r186:SI,0x0)
      REG_DEAD: r186:SI
  128 r186:SI=r147:SI&0x4


starting bb 17
  134 [r149:SI+0x2b8]=r188:SI
      REG_DEAD: r188:SI
  134 [r149:SI+0x2b8]=r188:SI
      REG_DEAD: r188:SI
found mem(134) *(r[149]+696)
  133 r188:SI=r187:SI+0x1
      REG_DEAD: r187:SI
  133 r188:SI=r187:SI+0x1
      REG_DEAD: r187:SI
found pre add(133) r[188]=r[187]+1
  132 r187:SI=[r149:SI+0x2b8]
  132 r187:SI=[r149:SI+0x2b8]
found mem(132) *(r[149]+696)


starting bb 18
  141 [r149:SI+0x2b4]=r190:SI
      REG_DEAD: r190:SI
  141 [r149:SI+0x2b4]=r190:SI
      REG_DEAD: r190:SI
found mem(141) *(r[149]+692)
  140 r190:SI=r189:SI+0x1
      REG_DEAD: r189:SI
  140 r190:SI=r189:SI+0x1
      REG_DEAD: r189:SI
found pre add(140) r[190]=r[189]+1
  139 r189:SI=[r149:SI+0x2b4]
  139 r189:SI=[r149:SI+0x2b4]
found mem(139) *(r[149]+692)


starting bb 19
  148 cc:CC=cmp(r191:SI,0x0)
      REG_DEAD: r191:SI
  147 r191:SI=r192:SI&0x100
      REG_DEAD: r192:SI
  146 r192:SI=[r136:SI+0x18]
  146 r192:SI=[r136:SI+0x18]
found mem(146) *(r[136]+24)


starting bb 20
  156 cc:CC=cmp(r135:SI,0x0)
      REG_DEAD: r135:SI
  154 r135:SI=r0:SI
      REG_DEAD: r0:SI
  153 r0:SI=call [`expand_stack'] argc:0x0
      REG_DEAD: r1:SI
  152 r1:SI=r156:SI


starting bb 21
  160 r147:SI=0x10000


starting bb 22
  168 cc:CC=cmp(r141:SI,0x0)
      REG_DEAD: r141:SI
  167 r141:SI=[r142:SI]
      REG_DEAD: r142:SI
      REG_EQUAL: [const(`perf_swevent_enabled'+0x8)]
  167 r141:SI=[r142:SI]
      REG_DEAD: r142:SI
      REG_EQUAL: [const(`perf_swevent_enabled'+0x8)]
found mem(167) *(r[142]+0)
  166 r142:SI=const(`perf_swevent_enabled'+0x8)
  300 r205:SI=0x0
  164 call [`up_read'] argc:0x0
      REG_DEAD: r0:SI
  163 r0:SI=r154:SI
      REG_DEAD: r154:SI


starting bb 23
  171 cc:CC=cmp(r158:SI,0x0)


starting bb 24
  174 r134:SI=r158:SI


starting bb 25
  183 r134:SI=r193:SI
      REG_DEAD: r193:SI
      REG_EQUAL: sfp:SI-0x48
  182 call [`__memzero'] argc:0x0
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
  181 r1:SI=0x48
  180 r0:SI=r193:SI
      REG_EQUAL: sfp:SI-0x48
  179 r193:SI=sfp:SI-0x48
  179 r193:SI=sfp:SI-0x48
found pre add(179) r[193]=r[25]+-72


starting bb 26
  190 call [`__perf_sw_event'] argc:0x10
      REG_DEAD: r0:SI
  189 r2:DI=0x1
  188 r0:SI=0x2
  302 [sp:SI+0xc]=r205:SI
      REG_EQUAL: 0x0
  302 [sp:SI+0xc]=r205:SI
      REG_EQUAL: 0x0
found mem(302) *(r[13]+12)
  301 [sp:SI+0x8]=r156:SI
  301 [sp:SI+0x8]=r156:SI
found mem(301) *(r[13]+8)
  186 [sp:SI]=r134:SI
      REG_DEAD: r134:SI
  186 [sp:SI]=r134:SI
      REG_DEAD: r134:SI
found mem(186) *(r[13]+0)


starting bb 27
  194 cc:CC=cmp(r195:SI,0x0)
      REG_DEAD: r195:SI
  193 r195:SI=r147:SI&0x4


starting bb 28
  199 cc:CC=cmp(r139:SI,0x0)
      REG_DEAD: r139:SI
  198 r139:SI=[r140:SI]
      REG_DEAD: r140:SI
      REG_EQUAL: [const(`perf_swevent_enabled'+0x18)]
  198 r139:SI=[r140:SI]
      REG_DEAD: r140:SI
      REG_EQUAL: [const(`perf_swevent_enabled'+0x18)]
found mem(198) *(r[140]+0)
  197 r140:SI=const(`perf_swevent_enabled'+0x18)


starting bb 29
  202 cc:CC=cmp(r158:SI,0x0)


starting bb 30
  205 r133:SI=r158:SI


starting bb 31
  214 r133:SI=r196:SI
      REG_DEAD: r196:SI
      REG_EQUAL: sfp:SI-0x48
  213 call [`__memzero'] argc:0x0
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
  212 r1:SI=0x48
  211 r0:SI=r196:SI
      REG_EQUAL: sfp:SI-0x48
  210 r196:SI=sfp:SI-0x48
  210 r196:SI=sfp:SI-0x48
found pre add(210) r[196]=r[25]+-72


starting bb 32
  221 call [`__perf_sw_event'] argc:0x10
      REG_DEAD: r0:SI
  220 r2:DI=0x1
  219 r0:SI=0x6
  304 [sp:SI+0xc]=r205:SI
      REG_DEAD: r205:SI
      REG_EQUAL: 0x0
  304 [sp:SI+0xc]=r205:SI
      REG_DEAD: r205:SI
      REG_EQUAL: 0x0
found mem(304) *(r[13]+12)
  303 [sp:SI+0x8]=r156:SI
  303 [sp:SI+0x8]=r156:SI
found mem(303) *(r[13]+8)
  217 [sp:SI]=r133:SI
      REG_DEAD: r133:SI
  217 [sp:SI]=r133:SI
      REG_DEAD: r133:SI
found mem(217) *(r[13]+0)


starting bb 33
  226 cc:CC=cmp(r197:SI,0x0)
      REG_DEAD: r197:SI
  225 r197:SI=r147:SI&0x30033
      REG_EQUAL: r147:SI&0x30033


starting bb 34
  230 cc:CC=cmp(r199:SI,0x0)
      REG_DEAD: r199:SI
  229 r199:SI=r147:SI&0x1


starting bb 35
  233 call [`pagefault_out_of_memory'] argc:0x0


starting bb 36
  240 cc:CC=cmp(r200:SI,0x0)
      REG_DEAD: r200:SI
  239 r200:SI=r201:SI&0xf
      REG_DEAD: r201:SI
  238 r201:SI=[r158:SI+0x40]
  238 r201:SI=[r158:SI+0x40]
found mem(238) *(r[158]+64)


starting bb 37
  244 cc:CC=cmp(r202:SI,0x0)
      REG_DEAD: r202:SI
  243 r202:SI=r147:SI&0x2


starting bb 38
  248 r146:SI=0x7
  247 r145:SI=0x30002


starting bb 39
  315 r146:SI=0xb
  313 r145:SI={(cc:CC==0x0)?r207:SI:r208:SI}
      REG_DEAD: r208:SI
      REG_DEAD: r207:SI
      REG_DEAD: cc:CC
      REG_EQUAL: {(cc:CC==0x0)?0x30002:0x30001}
  311 r208:SI=0x30001
  310 r207:SI=0x30002
  253 cc:CC=cmp(r147:SI,0x20000)
      REG_DEAD: r147:SI


starting bb 40
  272 call [`__do_user_fault'] argc:0x8
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_EH_REGION: 0x0
  271 r3:SI=r146:SI
      REG_DEAD: r146:SI
  270 r2:SI=r157:SI
      REG_DEAD: r157:SI
  269 r1:SI=r156:SI
      REG_DEAD: r156:SI
  268 r0:SI=r149:SI
      REG_DEAD: r149:SI
  267 [sp:SI+0x4]=r158:SI
      REG_DEAD: r158:SI
  267 [sp:SI+0x4]=r158:SI
      REG_DEAD: r158:SI
found mem(267) *(r[13]+4)
  266 [sp:SI]=r145:SI
      REG_DEAD: r145:SI
  266 [sp:SI]=r145:SI
      REG_DEAD: r145:SI
found mem(266) *(r[13]+0)


starting bb 41
  281 call [`__do_kernel_fault'] argc:0x0
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_EH_REGION: 0x0
  280 r3:SI=r158:SI
      REG_DEAD: r158:SI
  279 r2:SI=r157:SI
      REG_DEAD: r157:SI
  278 r1:SI=r156:SI
      REG_DEAD: r156:SI
  277 r0:SI=r148:SI
      REG_DEAD: r148:SI


starting bb 42
  294 use r0:SI
  288 r0:SI=0x0
      REG_EQUAL: 0x0


do_page_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,23u} r1={23d,8u} r2={21d,6u} r3={21d,5u} r11={1d,42u} r12={16d} r13={1d,67u,2d} r14={16d,1u} r15={15d} r16={15d} r17={15d} r18={15d} r19={15d} r20={15d} r21={15d} r22={15d} r23={15d} r24={45d,29u,1d} r25={1d,44u,4d} r26={1d,41u} r27={15d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={15d} r38={15d} r39={15d} r40={15d} r41={15d} r42={15d} r43={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r81={15d} r82={15d} r83={15d} r84={15d} r85={15d} r86={15d} r87={15d} r88={15d} r89={15d} r90={15d} r91={15d} r92={15d} r93={15d} r94={15d} r95={15d} r96={15d} r97={15d} r98={15d} r99={15d} r100={15d} r101={15d} r102={15d} r103={15d} r104={15d} r105={15d} r106={15d} r107={15d} r108={15d} r109={15d} r110={15d} r111={15d} r112={15d} r113={15d} r114={15d} r115={15d} r116={15d} r117={15d} r118={15d} r119={15d} r120={15d} r121={15d} r122={15d} r123={15d} r124={15d} r125={15d} r126={15d} r127={15d} r133={2d,1u} r134={2d,1u} r135={1d,1u} r136={1d,5u} r137={2d,2u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r145={2d,1u} r146={2d,1u} r147={3d,7u,1d} r148={1d,5u} r149={1d,6u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,3u} r156={1d,8u,1d} r157={1d,4u} r158={1d,11u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,2u} r195={1d,1u} r196={1d,2u} r197={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r205={1d,2u} r206={1d,2u} r207={1d,1u} r208={1d,1u} 
;;    total ref usage 2281{1896d,376u,9e} in 178{163 regular + 15 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 148 149 156 157 158 159 160 161 162
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148 149 156 157 158 159 160 161 162
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:277 (set (reg/v:SI 156 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ addr ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:277 (set (reg/v:SI 157 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fsr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:277 (set (reg/v/f:SI 158 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ regs ])
        (nil)))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 160)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 149 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 159)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 12 11 13 2 arch/arm/mm/fault.c:286 (set (reg/v/f:SI 148 [ mm ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:289 (set (reg:SI 162 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:289 (set (reg:SI 161)
        (and:SI (reg:SI 162 [ <variable>.uregs+64 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 162 [ <variable>.uregs+64 ])
        (nil)))

(insn 15 14 16 2 arch/arm/mm/fault.c:289 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(jump_insn 16 15 17 2 arch/arm/mm/fault.c:289 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104506)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 163 164 165 166 168 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	 24 [cc] 163 164 165 166 168 170 171 172 173
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 19 18 20 4 22 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 164)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 23 22 24 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163)
        (and:SI (reg:SI 164)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 24 23 25 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 166 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg:SI 163)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 25 24 26 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 165)
        (and:SI (reg:SI 166 [ <variable>.preempt_count ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 166 [ <variable>.preempt_count ])
        (nil)))

(insn 26 25 27 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 27 26 29 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 168)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 29 27 30 4 arch/arm/mm/fault.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ mm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 30 29 32 4 arch/arm/mm/fault.c:296 (set (reg:SI 170)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 32 30 33 4 arch/arm/mm/fault.c:296 (set (reg:SI 171)
        (ior:SI (reg:SI 168)
            (reg:SI 170))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg:SI 168)
            (nil))))

(insn 33 32 34 4 arch/arm/mm/fault.c:296 (set (reg:QI 172)
        (subreg:QI (reg:SI 171) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 34 33 35 4 arch/arm/mm/fault.c:296 (set (reg:SI 173)
        (zero_extend:SI (reg:QI 172))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 172)
        (nil)))

(insn 35 34 36 4 arch/arm/mm/fault.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(jump_insn 36 35 37 4 arch/arm/mm/fault.c:296 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 41 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158


;; Succ edge  41 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 154 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 153 154 206
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%]  (fallthru)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 arch/arm/mm/fault.c:304 (set (reg/f:SI 154 [ D.24547 ])
        (plus:SI (reg/v/f:SI 148 [ mm ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 39 38 40 5 arch/arm/mm/fault.c:304 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 40 39 41 5 arch/arm/mm/fault.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("down_read_trylock") [flags 0x41] <function_decl 0x10c30c80 down_read_trylock>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 41 40 42 5 arch/arm/mm/fault.c:304 (set (reg:SI 153 [ D.24548 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 42 41 306 5 arch/arm/mm/fault.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.24548 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.24548 ])
        (nil)))

(insn 306 42 43 5 (set (reg:SI 206 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) -1 (nil))

(jump_insn 43 306 44 5 arch/arm/mm/fault.c:304 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; live  gen 	 24 [cc] 174
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 44 43 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 44 47 6 arch/arm/mm/fault.c:305 (set (reg:SI 174)
        (and:SI (reg:SI 206 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 206 [ <variable>.uregs+64 ])
        (nil)))

(insn 47 46 48 6 arch/arm/mm/fault.c:305 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(jump_insn 48 47 49 6 arch/arm/mm/fault.c:305 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 152
;; live  kill	 14 [lr]

;; Pred edge  6 [50.0%]  (fallthru)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 51 50 52 7 arch/arm/mm/fault.c:305 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("search_exception_tables") [flags 0x41] <function_decl 0x10e04f80 search_exception_tables>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 52 51 53 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg/f:SI 152 [ D.24555 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 53 52 54 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 152 [ D.24555 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 152 [ D.24555 ])
        (nil)))

(jump_insn 54 53 55 7 arch/arm/mm/fault.c:305 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 7 -> ( 41 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158


;; Succ edge  41 [15.0%] 
;; Succ edge  8 [85.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [85.0%]  (fallthru)
(code_label 55 54 56 8 25 "" [1 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 arch/arm/mm/fault.c:307 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 61 8 arch/arm/mm/fault.c:307 (parallel [
            (call (mem:SI (symbol_ref:SI ("down_read") [flags 0x41] <function_decl 0x10c30c00 down_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 8 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206
;; lr  def 	 24 [cc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; live  gen 	 24 [cc] 176
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 61 58 62 9 24 "" [1 uses])

(note 62 61 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 62 65 9 arch/arm/mm/fault.c:316 (set (reg:SI 176)
        (and:SI (reg:SI 206 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 206 [ <variable>.uregs+64 ])
        (nil)))

(insn 65 64 66 9 arch/arm/mm/fault.c:316 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(jump_insn 66 65 67 9 arch/arm/mm/fault.c:316 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158


;; Succ edge  10 [29.0%]  (fallthru)
;; Succ edge  11 [71.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 151
;; live  kill	 14 [lr]

;; Pred edge  9 [29.0%]  (fallthru)
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 10 arch/arm/mm/fault.c:317 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 69 68 70 10 arch/arm/mm/fault.c:317 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("search_exception_tables") [flags 0x41] <function_decl 0x10e04f80 search_exception_tables>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 70 69 71 10 arch/arm/mm/fault.c:317 (set (reg/f:SI 151 [ D.24560 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 71 70 72 10 arch/arm/mm/fault.c:316 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 151 [ D.24560 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 151 [ D.24560 ])
        (nil)))

(jump_insn 72 71 73 10 arch/arm/mm/fault.c:316 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 10 -> ( 41 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158


;; Succ edge  41 [15.0%] 
;; Succ edge  11 [85.0%]  (fallthru)

;; Start of basic block ( 9 8 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136
;; live  kill	 14 [lr]

;; Pred edge  9 [71.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  10 [85.0%]  (fallthru)
(code_label 73 72 74 11 26 "" [1 uses])

(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 11 arch/arm/mm/fault.c:238 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 11 arch/arm/mm/fault.c:238 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 77 76 78 11 arch/arm/mm/fault.c:238 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("find_vma") [flags 0x41] <function_decl 0x10fe6c80 find_vma>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 78 77 79 11 arch/arm/mm/fault.c:238 (set (reg/v/f:SI 136 [ vma ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 11 arch/arm/mm/fault.c:240 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 136 [ vma ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 80 79 81 11 arch/arm/mm/fault.c:240 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 11 -> ( 21 12)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158


;; Succ edge  21 [0.0%] 
;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 156
;; lr  def 	 24 [cc] 178
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 178
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 12 arch/arm/mm/fault.c:242 (set (reg:SI 178 [ <variable>.vm_start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 12 arch/arm/mm/fault.c:242 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ <variable>.vm_start ])
            (reg/v:SI 156 [ addr ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178 [ <variable>.vm_start ])
        (nil)))

(jump_insn 84 83 155 12 arch/arm/mm/fault.c:242 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 12 -> ( 19 13)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158


;; Succ edge  19 [0.0%] 
;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 20) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 157
;; lr  def 	 24 [cc] 137 138 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 137 138 179 180
;; live  kill	

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  20 [50.0%] 
(code_label 155 84 85 13 35 "" [1 uses])

(note 85 155 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 13 arch/arm/mm/fault.c:223 (set (reg:SI 138 [ D.24984 ])
        (and:SI (reg/v:SI 157 [ fsr ])
            (const_int 2048 [0x800]))) 67 {*arm_andsi3_insn} (nil))

(insn 87 86 309 13 arch/arm/mm/fault.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.24984 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 309 87 98 13 arch/arm/mm/fault.c:224 (set (reg/v:SI 137 [ mask ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 7 [0x7])
            (const_int 2 [0x2]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 98 309 317 13 arch/arm/mm/fault.c:225 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 157 [ fsr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 317 98 104 13 arch/arm/mm/fault.c:226 (set (reg/v:SI 137 [ mask ])
        (if_then_else:SI (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 137 [ mask ])
            (const_int 4 [0x4]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 104 317 105 13 arch/arm/mm/fault.c:228 (set (reg:SI 180 [ <variable>.vm_flags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 13 arch/arm/mm/fault.c:228 (set (reg:SI 179)
        (and:SI (reg/v:SI 137 [ mask ])
            (reg:SI 180 [ <variable>.vm_flags ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 180 [ <variable>.vm_flags ])
        (expr_list:REG_DEAD (reg/v:SI 137 [ mask ])
            (nil))))

(insn 106 105 107 13 arch/arm/mm/fault.c:228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(jump_insn 107 106 108 13 arch/arm/mm/fault.c:228 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158


;; Succ edge  14 [71.0%]  (fallthru)
;; Succ edge  15 [29.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 147
;; live  kill	

;; Pred edge  13 [71.0%]  (fallthru)
(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 112 14 arch/arm/mm/fault.c:251 (set (reg/v:SI 147 [ fault ])
        (const_int 131072 [0x20000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 181 182 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 147 181 182 184 185
;; live  kill	 14 [lr]

;; Pred edge  13 [29.0%] 
(code_label 112 109 113 15 32 "" [1 uses])

(note 113 112 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 15 arch/arm/mm/fault.c:259 (set (reg:SI 182)
        (and:SI (reg/v:SI 156 [ addr ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 115 114 116 15 arch/arm/mm/fault.c:259 (set (reg:SI 181)
        (and:SI (reg:SI 182)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 156 [ addr ])
                (const_int -4096 [0xfffffffffffff000]))
            (nil))))

(insn 116 115 117 15 arch/arm/mm/fault.c:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.24984 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.24984 ])
        (nil)))

(insn 117 116 118 15 arch/arm/mm/fault.c:259 (set (reg:SI 184)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 118 117 119 15 arch/arm/mm/fault.c:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 119 118 120 15 arch/arm/mm/fault.c:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ vma ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ vma ])
        (nil)))

(insn 120 119 121 15 arch/arm/mm/fault.c:259 (set (reg:SI 2 r2)
        (reg:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(insn 121 120 122 15 arch/arm/mm/fault.c:259 (set (reg:SI 3 r3)
        (reg:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(call_insn 122 121 123 15 arch/arm/mm/fault.c:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("handle_mm_fault") [flags 0x41] <function_decl 0x10fbfc80 handle_mm_fault>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 123 122 124 15 arch/arm/mm/fault.c:259 (set (reg/v:SI 147 [ fault ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 124 123 125 15 arch/arm/mm/fault.c:260 (set (reg:SI 185)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 51 [0x33]))) 67 {*arm_andsi3_insn} (nil))

(insn 125 124 126 15 arch/arm/mm/fault.c:260 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(jump_insn 126 125 127 15 arch/arm/mm/fault.c:260 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 161)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 15 -> ( 22 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158


;; Succ edge  22 [0.0%] 
;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 24 [cc] 186
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
(note 127 126 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 16 arch/arm/mm/fault.c:262 (set (reg:SI 186)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 129 128 130 16 arch/arm/mm/fault.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(jump_insn 130 129 131 16 arch/arm/mm/fault.c:262 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 187 188
;; live  kill	

;; Pred edge  16 [50.0%]  (fallthru)
(note 131 130 132 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 132 131 133 17 arch/arm/mm/fault.c:263 (set (reg:SI 187 [ <variable>.maj_flt ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 696 [0x2b8])) [0 <variable>.maj_flt+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 133 132 134 17 arch/arm/mm/fault.c:263 (set (reg:SI 188)
        (plus:SI (reg:SI 187 [ <variable>.maj_flt ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 187 [ <variable>.maj_flt ])
        (nil)))

(insn 134 133 137 17 arch/arm/mm/fault.c:263 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 696 [0x2b8])) [0 <variable>.maj_flt+0 S4 A64])
        (reg:SI 188)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 188)
        (nil)))
;; End of basic block 17 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 189 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 189 190
;; live  kill	

;; Pred edge  16 [50.0%] 
(code_label 137 134 138 18 34 "" [1 uses])

(note 138 137 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 18 arch/arm/mm/fault.c:265 (set (reg:SI 189 [ <variable>.min_flt ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 692 [0x2b4])) [0 <variable>.min_flt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 140 139 141 18 arch/arm/mm/fault.c:265 (set (reg:SI 190)
        (plus:SI (reg:SI 189 [ <variable>.min_flt ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 189 [ <variable>.min_flt ])
        (nil)))

(insn 141 140 144 18 arch/arm/mm/fault.c:265 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 692 [0x2b4])) [0 <variable>.min_flt+0 S4 A32])
        (reg:SI 190)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))
;; End of basic block 18 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 191 192
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 191 192
;; live  kill	

;; Pred edge  12 [0.0%] 
(code_label 144 141 145 19 28 ("check_stack") [1 uses])

(note 145 144 146 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 19 arch/arm/mm/fault.c:269 (set (reg:SI 192 [ <variable>.vm_flags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 19 arch/arm/mm/fault.c:269 (set (reg:SI 191)
        (and:SI (reg:SI 192 [ <variable>.vm_flags ])
            (const_int 256 [0x100]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 192 [ <variable>.vm_flags ])
        (nil)))

(insn 148 147 149 19 arch/arm/mm/fault.c:269 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 191)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(jump_insn 149 148 150 19 arch/arm/mm/fault.c:269 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158


;; Succ edge  20 [29.0%]  (fallthru)
;; Succ edge  21 [71.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135
;; live  kill	 14 [lr]

;; Pred edge  19 [29.0%]  (fallthru)
(note 150 149 152 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 152 150 153 20 arch/arm/mm/fault.c:269 discrim 1 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 153 152 154 20 arch/arm/mm/fault.c:269 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("expand_stack") [flags 0x41] <function_decl 0x10fe6b80 expand_stack>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 154 153 156 20 arch/arm/mm/fault.c:269 discrim 1 (set (reg:SI 135 [ D.24988 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 156 154 157 20 arch/arm/mm/fault.c:269 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.24988 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.24988 ])
        (nil)))

(jump_insn 157 156 158 20 arch/arm/mm/fault.c:269 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 155)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 13 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158


;; Succ edge  13 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 19 20 11) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 147
;; live  kill	

;; Pred edge  19 [71.0%] 
;; Pred edge  20 [50.0%]  (fallthru)
;; Pred edge  11 [0.0%] 
(code_label 158 157 159 21 27 "" [2 uses])

(note 159 158 160 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 21 arch/arm/mm/fault.c:239 (set (reg/v:SI 147 [ fault ])
        (const_int 65536 [0x10000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 15 17 18 14) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 141 142 205
;; live  kill	 14 [lr]

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  15 [0.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 161 160 162 22 33 "" [1 uses])

(note 162 161 163 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 164 22 arch/arm/mm/fault.c:323 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 154 [ D.24547 ])
        (nil)))

(call_insn 164 163 300 22 arch/arm/mm/fault.c:323 (parallel [
            (call (mem:SI (symbol_ref:SI ("up_read") [flags 0x41] <function_decl 0x10c30e00 up_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 300 164 166 22 arch/arm/mm/fault.c:325 (set (reg:SI 205 [ D.24563+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 166 300 167 22 include/linux/jump_label.h:67 (set (reg/f:SI 142 [ D.24830 ])
        (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                (const_int 8 [0x8])))) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 22 include/linux/jump_label.h:67 (set (reg:SI 141 [ D.24831 ])
        (mem/v:SI (reg/f:SI 142 [ D.24830 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142 [ D.24830 ])
        (expr_list:REG_EQUAL (mem/v:SI (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                        (const_int 8 [0x8]))) [0 S4 A32])
            (nil))))

(insn 168 167 169 22 include/linux/jump_label.h:67 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.24831 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.24831 ])
        (nil)))

(jump_insn 169 168 170 22 include/linux/jump_label.h:67 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 22 -> ( 23 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205


;; Succ edge  23 [0.0%]  (fallthru)
;; Succ edge  27 [100.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u209(11){ }u210(13){ }u211(25){ }u212(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  22 [0.0%]  (fallthru)
(note 170 169 171 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 171 170 172 23 include/linux/perf_event.h:1054 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 158 [ regs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 172 171 173 23 include/linux/perf_event.h:1054 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 177)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
            (nil))))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205


;; Succ edge  25 [6.7%] 
;; Succ edge  24 [93.3%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 134
;; live  kill	

;; Pred edge  23 [93.3%]  (fallthru)
(note 173 172 174 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 177 24 include/linux/perf_event.h:1054 (set (reg/v/f:SI 134 [ regs.462 ])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 1 [r1] 134 193
;; live  kill	 14 [lr]

;; Pred edge  23 [6.7%] 
(code_label 177 174 178 25 37 "" [1 uses])

(note 178 177 179 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 25 include/linux/perf_event.h:1043 discrim 1 (set (reg/f:SI 193)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 180 179 181 25 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 181 180 182 25 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 182 181 183 25 include/linux/perf_event.h:1043 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 183 182 184 25 include/linux/perf_event.h:1056 (set (reg/v/f:SI 134 [ regs.462 ])
        (reg/f:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 193)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8]))
            (nil))))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 24 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 156 205
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  24 [100.0%]  (fallthru)
;; Pred edge  25 [100.0%]  (fallthru)
(code_label 184 183 185 26 38 "" [0 uses])

(note 185 184 186 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 186 185 301 26 include/linux/perf_event.h:1058 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 134 [ regs.462 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ regs.462 ])
        (nil)))

(insn 301 186 302 26 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A64])
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 302 301 188 26 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 205 [ D.24563+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 188 302 189 26 include/linux/perf_event.h:1058 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 26 include/linux/perf_event.h:1058 (set (reg:DI 2 r2)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(call_insn 190 189 191 26 include/linux/perf_event.h:1058 (parallel [
            (call (mem:SI (symbol_ref:SI ("__perf_sw_event") [flags 0x41] <function_decl 0x11436b00 __perf_sw_event>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 26 22) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u246(11){ }u247(13){ }u248(25){ }u249(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc] 195
;; live  kill	

;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 191 190 192 27 36 "" [1 uses])

(note 192 191 193 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 27 arch/arm/mm/fault.c:326 (set (reg:SI 195)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 194 193 195 27 arch/arm/mm/fault.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 195)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 195)
        (nil)))

(jump_insn 195 194 196 27 arch/arm/mm/fault.c:326 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 222)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  33 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u253(11){ }u254(13){ }u255(25){ }u256(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc] 139 140
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 196 195 197 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 197 196 198 28 include/linux/jump_label.h:67 (set (reg/f:SI 140 [ D.24847 ])
        (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                (const_int 24 [0x18])))) 167 {*arm_movsi_insn} (nil))

(insn 198 197 199 28 include/linux/jump_label.h:67 (set (reg:SI 139 [ D.24848 ])
        (mem/v:SI (reg/f:SI 140 [ D.24847 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ D.24847 ])
        (expr_list:REG_EQUAL (mem/v:SI (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                        (const_int 24 [0x18]))) [0 S4 A32])
            (nil))))

(insn 199 198 200 28 include/linux/jump_label.h:67 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.24848 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.24848 ])
        (nil)))

(jump_insn 200 199 201 28 include/linux/jump_label.h:67 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 222)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 28 -> ( 29 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205


;; Succ edge  29 [0.0%]  (fallthru)
;; Succ edge  33 [100.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u260(11){ }u261(13){ }u262(25){ }u263(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  28 [0.0%]  (fallthru)
(note 201 200 202 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 202 201 203 29 include/linux/perf_event.h:1054 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 158 [ regs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 203 202 204 29 include/linux/perf_event.h:1054 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
            (nil))))
;; End of basic block 29 -> ( 31 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205


;; Succ edge  31 [6.7%] 
;; Succ edge  30 [93.3%]  (fallthru)

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u266(11){ }u267(13){ }u268(25){ }u269(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 133
;; live  kill	

;; Pred edge  29 [93.3%]  (fallthru)
(note 204 203 205 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 205 204 208 30 include/linux/perf_event.h:1054 (set (reg/v/f:SI 133 [ regs.463 ])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 30 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 29) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 1 [r1] 133 196
;; live  kill	 14 [lr]

;; Pred edge  29 [6.7%] 
(code_label 208 205 209 31 40 "" [1 uses])

(note 209 208 210 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 31 include/linux/perf_event.h:1043 discrim 1 (set (reg/f:SI 196)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 211 210 212 31 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 212 211 213 31 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 213 212 214 31 include/linux/perf_event.h:1043 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 214 213 215 31 include/linux/perf_event.h:1056 (set (reg/v/f:SI 133 [ regs.463 ])
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 196)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8]))
            (nil))))
;; End of basic block 31 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 30 31) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u283(11){ }u284(13){ }u285(25){ }u286(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 156 205
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  30 [100.0%]  (fallthru)
;; Pred edge  31 [100.0%]  (fallthru)
(code_label 215 214 216 32 41 "" [0 uses])

(note 216 215 217 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 217 216 303 32 include/linux/perf_event.h:1058 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 133 [ regs.463 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ regs.463 ])
        (nil)))

(insn 303 217 304 32 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A64])
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 304 303 219 32 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 205 [ D.24563+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 205 [ D.24563+4 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 219 304 220 32 include/linux/perf_event.h:1058 (set (reg:SI 0 r0)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 220 219 221 32 include/linux/perf_event.h:1058 (set (reg:DI 2 r2)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(call_insn 221 220 222 32 include/linux/perf_event.h:1058 (parallel [
            (call (mem:SI (symbol_ref:SI ("__perf_sw_event") [flags 0x41] <function_decl 0x11436b00 __perf_sw_event>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 32 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 28 27 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u297(11){ }u298(13){ }u299(25){ }u300(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 197
;; live  kill	

;; Pred edge  28 [100.0%] 
;; Pred edge  27 [50.0%] 
;; Pred edge  32 [100.0%]  (fallthru)
(code_label 222 221 223 33 39 "" [2 uses])

(note 223 222 225 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 225 223 226 33 arch/arm/mm/fault.c:334 (set (reg:SI 197)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 196659 [0x30033]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 147 [ fault ])
            (const_int 196659 [0x30033]))
        (nil)))

(insn 226 225 227 33 arch/arm/mm/fault.c:334 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 197)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (nil)))

(jump_insn 227 226 228 33 arch/arm/mm/fault.c:334 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 282)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 33 -> ( 42 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158


;; Succ edge  42 [100.0%] 
;; Succ edge  34 [0.0%]  (fallthru)

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u305(11){ }u306(13){ }u307(25){ }u308(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 199
;; live  kill	

;; Pred edge  33 [0.0%]  (fallthru)
(note 228 227 229 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 230 34 arch/arm/mm/fault.c:337 (set (reg:SI 199)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 230 229 231 34 arch/arm/mm/fault.c:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 199)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(jump_insn 231 230 232 34 arch/arm/mm/fault.c:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
            (nil))))
;; End of basic block 34 -> ( 35 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158


;; Succ edge  35 [20.7%]  (fallthru)
;; Succ edge  36 [79.3%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u312(11){ }u313(13){ }u314(25){ }u315(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  34 [20.7%]  (fallthru)
(note 232 231 233 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(call_insn 233 232 236 35 arch/arm/mm/fault.c:343 (parallel [
            (call (mem:SI (symbol_ref:SI ("pagefault_out_of_memory") [flags 0x41] <function_decl 0x10fb4d80 pagefault_out_of_memory>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 35 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  42 [100.0%]  (fallthru)

;; Start of basic block ( 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u317(11){ }u318(13){ }u319(25){ }u320(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 200 201
;; live  kill	

;; Pred edge  34 [79.3%] 
(code_label 236 233 237 36 43 "" [1 uses])

(note 237 236 238 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 36 arch/arm/mm/fault.c:351 (set (reg:SI 201 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 239 238 240 36 arch/arm/mm/fault.c:351 (set (reg:SI 200)
        (and:SI (reg:SI 201 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 201 [ <variable>.uregs+64 ])
        (nil)))

(insn 240 239 241 36 arch/arm/mm/fault.c:351 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 200)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(jump_insn 241 240 242 36 arch/arm/mm/fault.c:351 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36 -> ( 41 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158


;; Succ edge  41 [50.0%] 
;; Succ edge  37 [50.0%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  gen 	 24 [cc] 202
;; live  kill	

;; Pred edge  36 [50.0%]  (fallthru)
(note 242 241 243 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 244 37 arch/arm/mm/fault.c:354 (set (reg:SI 202)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 244 243 245 37 arch/arm/mm/fault.c:354 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 202)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(jump_insn 245 244 246 37 arch/arm/mm/fault.c:354 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 251)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 37 -> ( 38 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158


;; Succ edge  38 [39.0%]  (fallthru)
;; Succ edge  39 [61.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u332(11){ }u333(13){ }u334(25){ }u335(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; live  gen 	 145 146
;; live  kill	

;; Pred edge  37 [39.0%]  (fallthru)
(note 246 245 247 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 247 246 248 38 arch/arm/mm/fault.c:360 (set (reg/v:SI 145 [ code ])
        (const_int 196610 [0x30002])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 251 38 arch/arm/mm/fault.c:359 (set (reg/v:SI 146 [ sig ])
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 38 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 37) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u336(11){ }u337(13){ }u338(25){ }u339(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 145 146 207 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  gen 	 24 [cc] 145 146 207 208
;; live  kill	

;; Pred edge  37 [61.0%] 
(code_label 251 248 252 39 44 "" [1 uses])

(note 252 251 253 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 310 39 arch/arm/mm/fault.c:367 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ fault ])
            (const_int 131072 [0x20000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ fault ])
        (nil)))

(insn 310 253 311 39 arch/arm/mm/fault.c:367 discrim 2 (set (reg:SI 207)
        (const_int 196610 [0x30002])) 167 {*arm_movsi_insn} (nil))

(insn 311 310 313 39 arch/arm/mm/fault.c:367 discrim 2 (set (reg:SI 208)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 313 311 315 39 arch/arm/mm/fault.c:367 discrim 2 (set (reg/v:SI 145 [ code ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 207)
            (reg:SI 208))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_DEAD (reg:SI 207)
            (expr_list:REG_DEAD (reg:CC 24 cc)
                (expr_list:REG_EQUAL (if_then_else:SI (eq (reg:CC 24 cc)
                            (const_int 0 [0x0]))
                        (const_int 196610 [0x30002])
                        (const_int 196609 [0x30001]))
                    (nil))))))

(insn 315 313 264 39 arch/arm/mm/fault.c:367 discrim 2 (set (reg/v:SI 146 [ sig ])
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 38 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u345(11){ }u346(13){ }u347(25){ }u348(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  38 [100.0%]  (fallthru)
;; Pred edge  39 [100.0%]  (fallthru)
(code_label 264 315 265 40 45 "" [0 uses])

(note 265 264 266 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 266 265 267 40 arch/arm/mm/fault.c:371 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 145 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ code ])
        (nil)))

(insn 267 266 268 40 arch/arm/mm/fault.c:371 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 158 [ regs ])
        (nil)))

(insn 268 267 269 40 arch/arm/mm/fault.c:371 (set (reg:SI 0 r0)
        (reg/v/f:SI 149 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ tsk ])
        (nil)))

(insn 269 268 270 40 arch/arm/mm/fault.c:371 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 156 [ addr ])
        (nil)))

(insn 270 269 271 40 arch/arm/mm/fault.c:371 (set (reg:SI 2 r2)
        (reg/v:SI 157 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 157 [ fsr ])
        (nil)))

(insn 271 270 272 40 arch/arm/mm/fault.c:371 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ sig ])
        (nil)))

(call_insn 272 271 275 40 arch/arm/mm/fault.c:371 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_user_fault") [flags 0x3] <function_decl 0x11459d80 __do_user_fault>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 40 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  42 [100.0%]  (fallthru)

;; Start of basic block ( 4 7 10 36) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u362(11){ }u363(13){ }u364(25){ }u365(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  4 [50.0%] 
;; Pred edge  7 [15.0%] 
;; Pred edge  10 [15.0%] 
;; Pred edge  36 [50.0%] 
(code_label 275 272 276 41 23 ("no_context") [4 uses])

(note 276 275 277 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 277 276 278 41 arch/arm/mm/fault.c:375 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 148 [ mm ])
        (nil)))

(insn 278 277 279 41 arch/arm/mm/fault.c:375 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 156 [ addr ])
        (nil)))

(insn 279 278 280 41 arch/arm/mm/fault.c:375 (set (reg:SI 2 r2)
        (reg/v:SI 157 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 157 [ fsr ])
        (nil)))

(insn 280 279 281 41 arch/arm/mm/fault.c:375 (set (reg:SI 3 r3)
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 158 [ regs ])
        (nil)))

(call_insn 281 280 282 41 arch/arm/mm/fault.c:375 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_kernel_fault") [flags 0x3] <function_decl 0x11459c80 __do_kernel_fault>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 41 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  42 [100.0%]  (fallthru)

;; Start of basic block ( 41 33 35 40) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u375(11){ }u376(13){ }u377(25){ }u378(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  41 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%] 
;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  40 [100.0%]  (fallthru)
(code_label 282 281 283 42 42 "" [1 uses])

(note 283 282 288 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 288 283 294 42 arch/arm/mm/fault.c:377 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 294 288 0 42 arch/arm/mm/fault.c:377 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 42 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_bad_area (do_bad_area)[0:1290]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   15 cc:CC=cmp(r141:SI,0x0)
      REG_DEAD: r141:SI
   14 r141:SI=r142:SI&0xf
      REG_DEAD: r142:SI
   13 r142:SI=[r138:SI+0x40]
   13 r142:SI=[r138:SI+0x40]
found mem(13) *(r[138]+64)
   12 r134:SI=[r135:SI+0x1f0]
   12 r134:SI=[r135:SI+0x1f0]
found mem(12) *(r[135]+496)
   11 r135:SI=[r139:SI+0xc]
      REG_DEAD: r139:SI
   11 r135:SI=[r139:SI+0xc]
      REG_DEAD: r139:SI
found mem(11) *(r[139]+12)
   10 r139:SI=r140:SI&0xffffffffffffffc0
      REG_DEAD: r140:SI
      REG_EQUAL: sp:SI&0xffffffffffffe000
    9 r140:SI=sp:SI&0xffffffffffffe03f
    4 r138:SI=r2:SI
      REG_DEAD: r2:SI
    3 r137:SI=r1:SI
      REG_DEAD: r1:SI
    2 r136:SI=r0:SI
      REG_DEAD: r0:SI


starting bb 3
   25 call [`__do_user_fault'] argc:0x8
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_EH_REGION: 0x0
   24 r3:SI=0xb
   23 r2:SI=r137:SI
      REG_DEAD: r137:SI
   22 r1:SI=r136:SI
      REG_DEAD: r136:SI
   21 r0:SI=r135:SI
      REG_DEAD: r135:SI
   20 [sp:SI+0x4]=r138:SI
      REG_DEAD: r138:SI
   20 [sp:SI+0x4]=r138:SI
      REG_DEAD: r138:SI
found mem(20) *(r[13]+4)
   19 [sp:SI]=r143:SI
      REG_DEAD: r143:SI
      REG_EQUAL: 0x30001
   19 [sp:SI]=r143:SI
      REG_DEAD: r143:SI
      REG_EQUAL: 0x30001
found mem(19) *(r[13]+0)
   18 r143:SI=0x30001


starting bb 4
   34 call [`__do_kernel_fault'] argc:0x0
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_EH_REGION: 0x0
   33 r3:SI=r138:SI
      REG_DEAD: r138:SI
   32 r2:SI=r137:SI
      REG_DEAD: r137:SI
   31 r1:SI=r136:SI
      REG_DEAD: r136:SI
   30 r0:SI=r134:SI
      REG_DEAD: r134:SI


do_bad_area

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,3u} r3={5d,2u} r11={1d,4u} r12={3d} r13={1d,9u,1d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r138={1d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 311{262d,48u,1e} in 24{22 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136 137 138 139 140 141 142
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:196 (set (reg/v:SI 136 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ addr ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:196 (set (reg/v:SI 137 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fsr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:196 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ regs ])
        (nil)))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 140)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 139)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 135 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 139)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 12 11 13 2 arch/arm/mm/fault.c:198 (set (reg/v/f:SI 134 [ mm ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ tsk ])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:204 (set (reg:SI 142 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:204 (set (reg:SI 141)
        (and:SI (reg:SI 142 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142 [ <variable>.uregs+64 ])
        (nil)))

(insn 15 14 16 2 arch/arm/mm/fault.c:204 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(jump_insn 16 15 17 2 arch/arm/mm/fault.c:204 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 143
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 arch/arm/mm/fault.c:205 (set (reg:SI 143)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 arch/arm/mm/fault.c:205 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (const_int 196609 [0x30001])
            (nil))))

(insn 20 19 21 3 arch/arm/mm/fault.c:205 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ regs ])
        (nil)))

(insn 21 20 22 3 arch/arm/mm/fault.c:205 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ tsk ])
        (nil)))

(insn 22 21 23 3 arch/arm/mm/fault.c:205 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ addr ])
        (nil)))

(insn 23 22 24 3 arch/arm/mm/fault.c:205 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ fsr ])
        (nil)))

(insn 24 23 25 3 arch/arm/mm/fault.c:205 (set (reg:SI 3 r3)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 28 3 arch/arm/mm/fault.c:205 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_user_fault") [flags 0x3] <function_decl 0x11459d80 __do_user_fault>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 28 25 29 4 51 "" [1 uses])

(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 4 arch/arm/mm/fault.c:207 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ mm ])
        (nil)))

(insn 31 30 32 4 arch/arm/mm/fault.c:207 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ addr ])
        (nil)))

(insn 32 31 33 4 arch/arm/mm/fault.c:207 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ fsr ])
        (nil)))

(insn 33 32 34 4 arch/arm/mm/fault.c:207 (set (reg:SI 3 r3)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ regs ])
        (nil)))

(call_insn/j 34 33 0 4 arch/arm/mm/fault.c:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_kernel_fault") [flags 0x3] <function_decl 0x11459c80 __do_kernel_fault>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_translation_fault (do_translation_fault)[0:1294]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
    9 cc:CC=cmp(r139:SI,r142:SI)
      REG_DEAD: r142:SI
      REG_EQUAL: cmp(r139:SI,0xffffffffbeffffff)
    8 r142:SI=0xffffffffbeffffff
    4 r141:SI=r2:SI
    3 r140:SI=r1:SI
    2 r139:SI=r0:SI


starting bb 3
   15 r0:SI=call [`do_page_fault'] argc:0x0
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_EH_REGION: 0x0


starting bb 4
   22 cc:CC=cmp(r143:SI,0x0)
      REG_DEAD: r143:SI
   21 r143:SI=r144:SI&0xf
      REG_DEAD: r144:SI
   20 r144:SI=[r141:SI+0x40]
   20 r144:SI=[r141:SI+0x40]
found mem(20) *(r[141]+64)


starting bb 5
   34 cc:CC=cmp(r150:SI,0x0)
      REG_DEAD: r150:SI
   33 r150:SI=[r149:SI*0x4+r134:SI]
      REG_DEAD: r149:SI
   32 r149:SI=r148:SI&0x1
      REG_DEAD: r148:SI
   31 r148:SI=r139:SI 0>>0x14
   30 r134:SI=r147:SI+r136:SI
   29 r147:SI=[r146:SI+0x24]
      REG_DEAD: r146:SI
      REG_EQUAL: [const(`init_mm'+0x24)]
   29 r147:SI=[r146:SI+0x24]
      REG_DEAD: r146:SI
      REG_EQUAL: [const(`init_mm'+0x24)]
found mem(29) *(r[146]+36)
   28 r146:SI=`init_mm'
   27 r136:SI=r145:SI<<0x3
   26 r145:SI=r139:SI 0>>0x15
   25 {r133:SI=asm_operands;clobber cc:QI;}
      REG_UNUSED: cc:QI


starting bb 6
   46 {asm_operands;clobber [scratch];}
   45 {asm_operands;clobber cc:QI;}
      REG_DEAD: r135:SI
      REG_UNUSED: cc:QI
   44 [r135:SI+0x4]=r155:SI
      REG_DEAD: r155:SI
   44 [r135:SI+0x4]=r155:SI
      REG_DEAD: r155:SI
found mem(44) *(r[135]+4)
   43 r155:SI=[r134:SI+0x4]
      REG_DEAD: r134:SI
   43 r155:SI=[r134:SI+0x4]
      REG_DEAD: r134:SI
found mem(43) *(r[134]+4)
   42 [r145:SI*0x8+r153:SI]=r154:SI
      REG_DEAD: r154:SI
      REG_DEAD: r153:SI
      REG_DEAD: r145:SI
   41 r154:SI=[r145:SI*0x8+r147:SI]
      REG_DEAD: r147:SI
   40 r135:SI=r153:SI+r136:SI
      REG_DEAD: r136:SI
   39 r153:SI=r151:SI-0x40000000
      REG_DEAD: r151:SI
   39 r153:SI=r151:SI-0x40000000
      REG_DEAD: r151:SI
found pre add(39) r[153]=r[151]+-1073741824
   38 r151:SI=r152:SI&0xffffffffffffffc0
      REG_DEAD: r152:SI
      REG_EQUAL: r133:SI&0xffffffffffffc000
   37 r152:SI=r133:SI&0xffffffffffffc03f
      REG_DEAD: r133:SI


starting bb 7
   55 call [`do_bad_area'] argc:0x0
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_EH_REGION: 0x0
   54 r2:SI=r141:SI
      REG_DEAD: r141:SI
   53 r1:SI=r140:SI
      REG_DEAD: r140:SI
   52 r0:SI=r139:SI
      REG_DEAD: r139:SI


starting bb 8
   69 use r0:SI
   63 r0:SI=0x0


do_translation_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={4d,3u} r3={3d} r11={1d,8u} r12={3d} r13={1d,10u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,3u} r25={1d,8u} r26={1d,7u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u,1d} r134={1d,2u} r135={1d,2u} r136={1d,2u} r139={1d,4u,1d} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,1u} r147={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,2u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 355{273d,80u,2e} in 38{36 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:407 (set (reg/v:SI 139 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:407 (set (reg/v:SI 140 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:407 (set (reg/v/f:SI 141 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:413 (set (reg:SI 142)
        (const_int -1090519041 [0xffffffffbeffffff])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:413 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ addr ])
            (reg:SI 142))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 139 [ addr ])
                (const_int -1090519041 [0xffffffffbeffffff]))
            (nil))))

(jump_insn 10 9 11 2 arch/arm/mm/fault.c:413 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141


;; Succ edge  3 [20.7%]  (fallthru)
;; Succ edge  4 [79.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [20.7%]  (fallthru)
(note 11 10 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 15 11 18 3 arch/arm/mm/fault.c:414 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_page_fault") [flags 0x3] <function_decl 0x1147d180 do_page_fault>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 143 144
;; live  kill	

;; Pred edge  2 [79.3%] 
(code_label 18 15 19 4 57 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/fault.c:416 (set (reg:SI 144 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 arch/arm/mm/fault.c:416 (set (reg:SI 143)
        (and:SI (reg:SI 144 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 144 [ <variable>.uregs+64 ])
        (nil)))

(insn 22 21 23 4 arch/arm/mm/fault.c:416 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn 23 22 24 4 arch/arm/mm/fault.c:416 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 4 -> ( 7 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141


;; Succ edge  7 [29.0%] 
;; Succ edge  5 [71.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 133 134 136 145 146 147 148 149 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 133 134 136 145 146 147 148 149 150
;; live  kill	 24 [cc]

;; Pred edge  4 [71.0%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/mm/fault.c:424 (parallel [
            (set (reg/v:SI 133 [ pg ])
                (asm_operands:SI ("mrc	p15, 0, %0, c2, c0, 0") ("=r") 0 []
                     [] 8342805))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 26 25 27 5 arch/arm/mm/fault.c:424 (set (reg:SI 145)
        (lshiftrt:SI (reg/v:SI 139 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 28 5 arch/arm/mm/fault.c:424 (set (reg:SI 136 [ D.24612 ])
        (ashift:SI (reg:SI 145)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 5 arch/arm/mm/fault.c:441 (set (reg/f:SI 146)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/mm/fault.c:441 (set (reg/f:SI 147 [ init_mm.pgd ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 146)
                (const_int 36 [0x24])) [0 init_mm.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>)
                        (const_int 36 [0x24]))) [0 init_mm.pgd+0 S4 A32])
            (nil))))

(insn 30 29 31 5 arch/arm/mm/fault.c:441 (set (reg/v/f:SI 134 [ pmd_k ])
        (plus:SI (reg/f:SI 147 [ init_mm.pgd ])
            (reg:SI 136 [ D.24612 ]))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 5 arch/arm/mm/fault.c:451 (set (reg:SI 148)
        (lshiftrt:SI (reg/v:SI 139 [ addr ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 32 31 33 5 arch/arm/mm/fault.c:451 (set (reg:SI 149)
        (and:SI (reg:SI 148)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 33 32 34 5 arch/arm/mm/fault.c:451 (set (reg:SI 150)
        (mem:SI (plus:SI (mult:SI (reg:SI 149)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 134 [ pmd_k ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 34 33 35 5 arch/arm/mm/fault.c:451 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(jump_insn 35 34 36 5 arch/arm/mm/fault.c:451 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 139 140 141 145 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 139 140 141 145 147


;; Succ edge  7 [61.0%] 
;; Succ edge  6 [39.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 145 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 145 147
;; lr  def 	 24 [cc] 135 151 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 145 147
;; live  gen 	 135 151 152 153 154 155
;; live  kill	 24 [cc]

;; Pred edge  5 [39.0%]  (fallthru)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 arch/arm/mm/fault.c:440 (set (reg:SI 152)
        (and:SI (reg/v:SI 133 [ pg ])
            (const_int -16321 [0xffffffffffffc03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ pg ])
        (nil)))

(insn 38 37 39 6 arch/arm/mm/fault.c:440 (set (reg:SI 151)
        (and:SI (reg:SI 152)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 133 [ pg ])
                (const_int -16384 [0xffffffffffffc000]))
            (nil))))

(insn 39 38 40 6 arch/arm/mm/fault.c:440 (set (reg:SI 153)
        (plus:SI (reg:SI 151)
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 40 39 41 6 arch/arm/mm/fault.c:440 (set (reg/v/f:SI 135 [ pmd ])
        (plus:SI (reg:SI 153)
            (reg:SI 136 [ D.24612 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 136 [ D.24612 ])
        (nil)))

(insn 41 40 42 6 arch/arm/mm/fault.c:455 (set (reg:SI 154)
        (mem:SI (plus:SI (mult:SI (reg:SI 145)
                    (const_int 8 [0x8]))
                (reg/f:SI 147 [ init_mm.pgd ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147 [ init_mm.pgd ])
        (nil)))

(insn 42 41 43 6 arch/arm/mm/fault.c:455 (set (mem:SI (plus:SI (mult:SI (reg:SI 145)
                    (const_int 8 [0x8]))
                (reg:SI 153)) [0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_DEAD (reg:SI 153)
            (expr_list:REG_DEAD (reg:SI 145)
                (nil)))))

(insn 43 42 44 6 arch/arm/mm/fault.c:455 (set (reg:SI 155)
        (mem:SI (plus:SI (reg/v/f:SI 134 [ pmd_k ])
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ pmd_k ])
        (nil)))

(insn 44 43 45 6 arch/arm/mm/fault.c:455 (set (mem:SI (plus:SI (reg/v/f:SI 135 [ pmd ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 45 44 46 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:479 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 135 [ pmd ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8282573)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v/f:SI 135 [ pmd ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 46 45 50 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:487 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8283597)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  4 [29.0%] 
;; Pred edge  5 [61.0%] 
(code_label 50 46 51 7 58 ("bad_area") [2 uses])

(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 7 arch/arm/mm/fault.c:459 (set (reg:SI 0 r0)
        (reg/v:SI 139 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ addr ])
        (nil)))

(insn 53 52 54 7 arch/arm/mm/fault.c:459 (set (reg:SI 1 r1)
        (reg/v:SI 140 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ fsr ])
        (nil)))

(insn 54 53 55 7 arch/arm/mm/fault.c:459 (set (reg:SI 2 r2)
        (reg/v/f:SI 141 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ regs ])
        (nil)))

(call_insn 55 54 57 7 arch/arm/mm/fault.c:459 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_bad_area") [flags 0x3] <function_decl 0x11459880 do_bad_area>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 57 55 58 8 59 "" [0 uses])

(note 58 57 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 63 58 69 8 arch/arm/mm/fault.c:461 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 69 63 0 8 arch/arm/mm/fault.c:461 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_sect_fault (do_sect_fault)[0:1295]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   22 use r0:SI
   16 r0:SI=r133:SI
      REG_DEAD: r133:SI
      REG_EQUAL: 0x0
   12 r133:SI=0x0
   11 call [`do_bad_area'] argc:0x0
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_EH_REGION: 0x0


do_sect_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} 
;;    total ref usage 144{129d,15u,0e} in 4{3 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 11 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 11 5 12 2 arch/arm/mm/fault.c:478 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_bad_area") [flags 0x3] <function_decl 0x11459880 do_bad_area>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 16 2 arch/arm/mm/fault.c:480 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 12 22 2 arch/arm/mm/fault.c:480 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 22 16 0 2 arch/arm/mm/fault.c:480 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_PrefetchAbort (do_PrefetchAbort)[0:1300]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   22 cc:CC=cmp(r134:SI,0x0)
      REG_DEAD: r134:SI
   21 r134:SI=r0:SI
      REG_DEAD: r0:SI
   20 r0:SI=call [r145:SI] argc:0x0
      REG_DEAD: r145:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
   20 r0:SI=call [r145:SI] argc:0x0
      REG_DEAD: r145:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
found mem(20) *(r[145]+0)
   18 r1:SI=r144:SI
      REG_DEAD: r144:SI
   16 r145:SI=[r142:SI*0x10+r138:SI]
      REG_DEAD: r142:SI
      REG_DEAD: r138:SI
      REG_EQUAL: [r142:SI*0x10+`*.LANCHOR0']
   15 r144:SI=r136:SI|0xffffffff80000000
   14 r133:SI=r138:SI+r143:SI
      REG_DEAD: r143:SI
      REG_EQUAL: r143:SI+`*.LANCHOR0'
   13 r143:SI=r142:SI<<0x4
   12 r142:SI=r140:SI|r141:SI
      REG_DEAD: r141:SI
      REG_DEAD: r140:SI
   11 r141:SI=r136:SI&0xf
   10 r140:SI=r139:SI 0>>0x6
      REG_DEAD: r139:SI
    9 r139:SI=r136:SI&0x400
    8 r138:SI=`*.LANCHOR0'
    4 r137:SI=r2:SI
    3 r136:SI=r1:SI
      REG_DEAD: r1:SI
    2 r135:SI=r0:SI


starting bb 3
   46 call [`arm_notify_die'] argc:0x8
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
   45 r3:SI=r136:SI
      REG_DEAD: r136:SI
   44 r2:SI=r151:SI
      REG_DEAD: r151:SI
      REG_EQUAL: sfp:SI-0x80
   43 r1:SI=r137:SI
      REG_DEAD: r137:SI
   42 r0:SI=`*.LC11'
      REG_EQUAL: `*.LC11'
   41 [sp:SI]=r148:SI
      REG_DEAD: r148:SI
      REG_EQUAL: 0x0
   41 [sp:SI]=r148:SI
      REG_DEAD: r148:SI
      REG_EQUAL: 0x0
found mem(41) *(r[13]+0)
   39 r151:SI=sfp:SI-0x80
   39 r151:SI=sfp:SI-0x80
found pre add(39) r[151]=r[25]+-128
   37 [sfp:SI-0x74]=r135:SI
      REG_DEAD: r135:SI
   37 [sfp:SI-0x74]=r135:SI
      REG_DEAD: r135:SI
found mem(37) *(r[25]+-116)
   39 r151:SI=sfp:SI-0x80
found post add(39) r[151]=r[25]+-128
   36 [sfp:SI-0x78]=r149:SI
      REG_DEAD: r149:SI
   36 [sfp:SI-0x78]=r149:SI
      REG_DEAD: r149:SI
found mem(36) *(r[25]+-120)
   35 r149:SI=[r133:SI+0x8]
      REG_DEAD: r133:SI
   35 r149:SI=[r133:SI+0x8]
      REG_DEAD: r133:SI
found mem(35) *(r[133]+8)
   34 [sfp:SI-0x7c]=r148:SI
      REG_EQUAL: 0x0
   34 [sfp:SI-0x7c]=r148:SI
      REG_EQUAL: 0x0
found mem(34) *(r[25]+-124)
   33 r148:SI=0x0
   32 [sfp:SI-0x80]=r147:SI
      REG_DEAD: r147:SI
   32 [sfp:SI-0x80]=r147:SI
      REG_DEAD: r147:SI
found mem(32) *(r[25]+-128)
   31 r147:SI=[r133:SI+0x4]
   31 r147:SI=[r133:SI+0x4]
found mem(31) *(r[133]+4)
   30 r0:SI=call [`printk'] argc:0x0
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_UNUSED: r0:SI
   29 r3:SI=r135:SI
   28 r2:SI=r136:SI
   27 r1:SI=[r133:SI+0xc]
   27 r1:SI=[r133:SI+0xc]
found mem(27) *(r[133]+12)
   26 r0:SI=`*.LC10'
      REG_EQUAL: `*.LC10'


starting bb 4


do_PrefetchAbort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={7d,4u} r2={6d,4u} r3={6d,2u} r11={1d,4u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,9u,1d} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,3u} r134={1d,1u} r135={1d,2u} r136={1d,5u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,2u,1d} r143={1d,1u,1d} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,2u} r149={1d,1u} r151={1d,1u} 
;;    total ref usage 459{388d,68u,3e} in 36{33 regular + 3 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 136 137 138 139 140 141 142 143 144 145
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:626 (set (reg/v:SI 135 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:626 (set (reg/v:SI 136 [ ifsr ])
        (reg:SI 1 r1 [ ifsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ ifsr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:626 (set (reg/v/f:SI 137 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:627 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:627 (set (reg:SI 139)
        (and:SI (reg/v:SI 136 [ ifsr ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/fault.c:627 (set (reg:SI 140)
        (lshiftrt:SI (reg:SI 139)
            (const_int 6 [0x6]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 11 10 12 2 arch/arm/mm/fault.c:627 (set (reg:SI 141)
        (and:SI (reg/v:SI 136 [ ifsr ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:627 (set (reg:SI 142)
        (ior:SI (reg:SI 140)
            (reg:SI 141))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg:SI 140)
            (nil))))

(insn 13 12 14 2 arch/arm/mm/fault.c:627 (set (reg:SI 143)
        (ashift:SI (reg:SI 142)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:627 (set (reg/v/f:SI 133 [ inf ])
        (plus:SI (reg/f:SI 138)
            (reg:SI 143))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 143)
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
            (nil))))

(insn 15 14 16 2 arch/arm/mm/fault.c:630 (set (reg:SI 144)
        (ior:SI (reg/v:SI 136 [ ifsr ])
            (const_int -2147483648 [0xffffffff80000000]))) 89 {*arm_iorsi3} (nil))

(insn 16 15 18 2 arch/arm/mm/fault.c:630 (set (reg/f:SI 145 [ <variable>.fn ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 142)
                    (const_int 16 [0x10]))
                (reg/f:SI 138)) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/f:SI 138)
            (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 142)
                            (const_int 16 [0x10]))
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 <variable>.fn+0 S4 A32])
                (nil)))))

(insn 18 16 20 2 arch/arm/mm/fault.c:630 (set (reg:SI 1 r1)
        (reg:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(call_insn 20 18 21 2 arch/arm/mm/fault.c:630 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 145 [ <variable>.fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 145 [ <variable>.fn ])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 21 20 22 2 arch/arm/mm/fault.c:630 (set (reg:SI 134 [ D.24714 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 22 21 23 2 arch/arm/mm/fault.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24714 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.24714 ])
        (nil)))

(jump_insn 23 22 24 2 arch/arm/mm/fault.c:630 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148 149 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 148 149 151
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 24 23 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 24 27 3 arch/arm/mm/fault.c:633 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x114abbe0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x114abbe0>)
        (nil)))

(insn 27 26 28 3 arch/arm/mm/fault.c:633 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 12 [0xc])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 arch/arm/mm/fault.c:633 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ ifsr ])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 arch/arm/mm/fault.c:633 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 30 29 31 3 arch/arm/mm/fault.c:633 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 31 30 32 3 arch/arm/mm/fault.c:636 (set (reg:SI 147 [ <variable>.sig ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 3 arch/arm/mm/fault.c:636 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 147 [ <variable>.sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147 [ <variable>.sig ])
        (nil)))

(insn 33 32 34 3 arch/arm/mm/fault.c:637 (set (reg:SI 148)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 3 arch/arm/mm/fault.c:637 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 35 34 36 3 arch/arm/mm/fault.c:638 (set (reg:SI 149 [ <variable>.code ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 8 [0x8])) [0 <variable>.code+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ inf ])
        (nil)))

(insn 36 35 37 3 arch/arm/mm/fault.c:638 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 149 [ <variable>.code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149 [ <variable>.code ])
        (nil)))

(insn 37 36 39 3 arch/arm/mm/fault.c:639 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ addr ])
        (nil)))

(insn 39 37 41 3 arch/arm/mm/fault.c:640 (set (reg/f:SI 151)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 41 39 42 3 arch/arm/mm/fault.c:640 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 42 41 43 3 arch/arm/mm/fault.c:640 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)
        (nil)))

(insn 43 42 44 3 arch/arm/mm/fault.c:640 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ regs ])
        (nil)))

(insn 44 43 45 3 arch/arm/mm/fault.c:640 (set (reg:SI 2 r2)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 45 44 46 3 arch/arm/mm/fault.c:640 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ ifsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ ifsr ])
        (nil)))

(call_insn 46 45 52 3 arch/arm/mm/fault.c:640 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x41] <function_decl 0x512d9380 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 52 46 55 4 67 "" [1 uses])

(note 55 52 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_DataAbort (do_DataAbort)[0:1298]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   23 cc:CC=cmp(r134:SI,0x0)
      REG_DEAD: r134:SI
   22 r134:SI=r0:SI
      REG_DEAD: r0:SI
   21 r0:SI=call [r146:SI] argc:0x0
      REG_DEAD: r146:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
   21 r0:SI=call [r146:SI] argc:0x0
      REG_DEAD: r146:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
found mem(21) *(r[146]+0)
   19 r1:SI=r145:SI
      REG_DEAD: r145:SI
   17 r146:SI=[r143:SI*0x10+r139:SI]
      REG_DEAD: r143:SI
      REG_DEAD: r139:SI
      REG_EQUAL: [r143:SI*0x10+const(`*.LANCHOR0'+0x200)]
   16 r145:SI=r136:SI&0x7fffffff
   15 r133:SI=r139:SI+r144:SI
      REG_DEAD: r144:SI
      REG_EQUAL: r144:SI+const(`*.LANCHOR0'+0x200)
   14 r144:SI=r143:SI<<0x4
   13 r143:SI=r141:SI|r142:SI
      REG_DEAD: r142:SI
      REG_DEAD: r141:SI
   12 r142:SI=r136:SI&0xf
   11 r141:SI=r140:SI 0>>0x6
      REG_DEAD: r140:SI
   10 r140:SI=r136:SI&0x400
    9 r139:SI=const(`*.LANCHOR0'+0x200)
      REG_EQUAL: const(`*.LANCHOR0'+0x200)
    4 r137:SI=r2:SI
    3 r136:SI=r1:SI
      REG_DEAD: r1:SI
    2 r135:SI=r0:SI


starting bb 3
   47 call [`arm_notify_die'] argc:0x8
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
   46 r3:SI=r136:SI
      REG_DEAD: r136:SI
   45 r2:SI=r152:SI
      REG_DEAD: r152:SI
      REG_EQUAL: sfp:SI-0x80
   44 r1:SI=r137:SI
      REG_DEAD: r137:SI
   43 r0:SI=`*.LC11'
      REG_EQUAL: `*.LC11'
   42 [sp:SI]=r149:SI
      REG_DEAD: r149:SI
      REG_EQUAL: 0x0
   42 [sp:SI]=r149:SI
      REG_DEAD: r149:SI
      REG_EQUAL: 0x0
found mem(42) *(r[13]+0)
   40 r152:SI=sfp:SI-0x80
   40 r152:SI=sfp:SI-0x80
found pre add(40) r[152]=r[25]+-128
   38 [sfp:SI-0x74]=r135:SI
      REG_DEAD: r135:SI
   38 [sfp:SI-0x74]=r135:SI
      REG_DEAD: r135:SI
found mem(38) *(r[25]+-116)
   40 r152:SI=sfp:SI-0x80
found post add(40) r[152]=r[25]+-128
   37 [sfp:SI-0x78]=r150:SI
      REG_DEAD: r150:SI
   37 [sfp:SI-0x78]=r150:SI
      REG_DEAD: r150:SI
found mem(37) *(r[25]+-120)
   36 r150:SI=[r133:SI+0x8]
      REG_DEAD: r133:SI
   36 r150:SI=[r133:SI+0x8]
      REG_DEAD: r133:SI
found mem(36) *(r[133]+8)
   35 [sfp:SI-0x7c]=r149:SI
      REG_EQUAL: 0x0
   35 [sfp:SI-0x7c]=r149:SI
      REG_EQUAL: 0x0
found mem(35) *(r[25]+-124)
   34 r149:SI=0x0
   33 [sfp:SI-0x80]=r148:SI
      REG_DEAD: r148:SI
   33 [sfp:SI-0x80]=r148:SI
      REG_DEAD: r148:SI
found mem(33) *(r[25]+-128)
   32 r148:SI=[r133:SI+0x4]
   32 r148:SI=[r133:SI+0x4]
found mem(32) *(r[133]+4)
   31 r0:SI=call [`printk'] argc:0x0
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_UNUSED: r0:SI
   30 r3:SI=r135:SI
   29 r2:SI=r136:SI
   28 r1:SI=[r133:SI+0xc]
   28 r1:SI=[r133:SI+0xc]
found mem(28) *(r[133]+12)
   27 r0:SI=`*.LC12'
      REG_EQUAL: `*.LC12'


starting bb 4


do_DataAbort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={7d,4u} r2={6d,4u} r3={6d,2u} r11={1d,4u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,9u,1d} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,3u} r134={1d,1u} r135={1d,2u} r136={1d,5u} r137={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,2u,1d} r144={1d,1u,1d} r145={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,2u} r150={1d,1u} r152={1d,1u} 
;;    total ref usage 459{388d,68u,3e} in 36{33 regular + 3 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 139 140 141 142 143 144 145 146
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 136 137 139 140 141 142 143 144 145 146
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:558 (set (reg/v:SI 135 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:558 (set (reg/v:SI 136 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fsr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:558 (set (reg/v/f:SI 137 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 arch/arm/mm/fault.c:559 (set (reg/f:SI 139)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 512 [0x200])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 512 [0x200])))
        (nil)))

(insn 10 9 11 2 arch/arm/mm/fault.c:559 (set (reg:SI 140)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/fault.c:559 (set (reg:SI 141)
        (lshiftrt:SI (reg:SI 140)
            (const_int 6 [0x6]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(insn 12 11 13 2 arch/arm/mm/fault.c:559 (set (reg:SI 142)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:559 (set (reg:SI 143)
        (ior:SI (reg:SI 141)
            (reg:SI 142))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg:SI 141)
            (nil))))

(insn 14 13 15 2 arch/arm/mm/fault.c:559 (set (reg:SI 144)
        (ashift:SI (reg:SI 143)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 15 14 16 2 arch/arm/mm/fault.c:559 (set (reg/v/f:SI 133 [ inf ])
        (plus:SI (reg/f:SI 139)
            (reg:SI 144))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 144)
                (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 512 [0x200]))))
            (nil))))

(insn 16 15 17 2 arch/arm/mm/fault.c:562 (set (reg:SI 145)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 19 2 arch/arm/mm/fault.c:562 (set (reg/f:SI 146 [ <variable>.fn ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 143)
                    (const_int 16 [0x10]))
                (reg/f:SI 139)) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 143)
                            (const_int 16 [0x10]))
                        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                                (const_int 512 [0x200])))) [0 <variable>.fn+0 S4 A32])
                (nil)))))

(insn 19 17 21 2 arch/arm/mm/fault.c:562 (set (reg:SI 1 r1)
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(call_insn 21 19 22 2 arch/arm/mm/fault.c:562 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 146 [ <variable>.fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 146 [ <variable>.fn ])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 22 21 23 2 arch/arm/mm/fault.c:562 (set (reg:SI 134 [ D.24678 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 23 22 24 2 arch/arm/mm/fault.c:562 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24678 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.24678 ])
        (nil)))

(jump_insn 24 23 25 2 arch/arm/mm/fault.c:562 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 149 150 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 148 149 150 152
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 25 24 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 27 25 28 3 arch/arm/mm/fault.c:565 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114abc30>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114abc30>)
        (nil)))

(insn 28 27 29 3 arch/arm/mm/fault.c:565 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 12 [0xc])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 arch/arm/mm/fault.c:565 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 3 arch/arm/mm/fault.c:565 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 32 3 arch/arm/mm/fault.c:565 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 32 31 33 3 arch/arm/mm/fault.c:568 (set (reg:SI 148 [ <variable>.sig ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 3 arch/arm/mm/fault.c:568 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 148 [ <variable>.sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ <variable>.sig ])
        (nil)))

(insn 34 33 35 3 arch/arm/mm/fault.c:569 (set (reg:SI 149)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 3 arch/arm/mm/fault.c:569 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 36 35 37 3 arch/arm/mm/fault.c:570 (set (reg:SI 150 [ <variable>.code ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 8 [0x8])) [0 <variable>.code+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ inf ])
        (nil)))

(insn 37 36 38 3 arch/arm/mm/fault.c:570 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 150 [ <variable>.code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150 [ <variable>.code ])
        (nil)))

(insn 38 37 40 3 arch/arm/mm/fault.c:571 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ addr ])
        (nil)))

(insn 40 38 42 3 arch/arm/mm/fault.c:572 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 42 40 43 3 arch/arm/mm/fault.c:572 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 43 42 44 3 arch/arm/mm/fault.c:572 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)
        (nil)))

(insn 44 43 45 3 arch/arm/mm/fault.c:572 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ regs ])
        (nil)))

(insn 45 44 46 3 arch/arm/mm/fault.c:572 (set (reg:SI 2 r2)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 46 45 47 3 arch/arm/mm/fault.c:572 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ fsr ])
        (nil)))

(call_insn 47 46 53 3 arch/arm/mm/fault.c:572 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x41] <function_decl 0x512d9380 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 53 47 56 4 72 "" [1 uses])

(note 56 53 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hook_ifault_code (hook_ifault_code)[0:1299] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   10 cc:CC=cmp(r133:SI,0x1f)
    6 r137:SI=[afp:SI+0x4]
      REG_EQUIV: [afp:SI+0x4]
    6 r137:SI=[afp:SI+0x4]
      REG_EQUIV: [afp:SI+0x4]
found mem(6) *(r[26]+4)
    5 r136:SI=r3:SI
      REG_DEAD: r3:SI
    4 r135:SI=r2:SI
      REG_DEAD: r2:SI
    3 r134:SI=r1:SI
      REG_DEAD: r1:SI
    2 r133:SI=r0:SI
      REG_DEAD: r0:SI


starting bb 3
   16 call [`__bug'] argc:0x0
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_NORETURN: 0x0
   15 r1:SI=0x268
   14 r0:SI=`*.LC13'
      REG_EQUAL: `*.LC13'


starting bb 4
   39 [r153:SI+0x4]=r137:SI
      REG_DEAD: r153:SI
      REG_DEAD: r137:SI
   39 [r153:SI+0x4]=r137:SI
      REG_DEAD: r153:SI
      REG_DEAD: r137:SI
found mem(39) *(r[153]+4)
   37 r153:SI=r139:SI+r152:SI
      REG_DEAD: r152:SI
      REG_DEAD: r139:SI
      REG_EQUAL: r152:SI+`*.LANCHOR0'
   36 r152:SI=r147:SI<<0x3
      REG_DEAD: r147:SI
   31 [r147:SI*0x8+r139:SI]=r136:SI
      REG_DEAD: r136:SI
   30 r147:SI=r146:SI+0x1
      REG_DEAD: r146:SI
   30 r147:SI=r146:SI+0x1
      REG_DEAD: r146:SI
found pre add(30) r[147]=r[146]+1
   29 r146:SI=r133:SI<<0x1
      REG_DEAD: r133:SI
   27 [r143:SI+0x4]=r135:SI
      REG_DEAD: r143:SI
      REG_DEAD: r135:SI
   27 [r143:SI+0x4]=r135:SI
      REG_DEAD: r143:SI
      REG_DEAD: r135:SI
found mem(27) *(r[143]+4)
   25 r143:SI=r139:SI+r142:SI
      REG_DEAD: r142:SI
      REG_EQUAL: r142:SI+`*.LANCHOR0'
   24 r142:SI=r133:SI<<0x4
   21 [r133:SI*0x10+r139:SI]=r134:SI
      REG_DEAD: r134:SI
   20 r139:SI=`*.LANCHOR0'


hook_ifault_code

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,4u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r139={1d,4u} r142={1d,1u,1d} r143={1d,1u} r146={1d,1u} r147={1d,2u} r152={1d,1u,1d} r153={1d,1u} 
;;    total ref usage 189{142d,44u,3e} in 21{20 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 133 [ nr ])
        (reg:SI 0 r0 [ nr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ nr ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:614 (set (reg/v/f:SI 134 [ fn ])
        (reg:SI 1 r1 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fn ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 135 [ sig ])
        (reg:SI 2 r2 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ sig ])
        (nil)))

(insn 5 4 6 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 136 [ code ])
        (reg:SI 3 r3 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ code ])
        (nil)))

(insn 6 5 7 2 arch/arm/mm/fault.c:614 (set (reg/v/f:SI 137 [ name ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/fault.c:615 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ nr ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/fault.c:615 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 12 15 3 arch/arm/mm/fault.c:616 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)
        (nil)))

(insn 15 14 16 3 arch/arm/mm/fault.c:616 (set (reg:SI 1 r1)
        (const_int 616 [0x268])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 18 3 arch/arm/mm/fault.c:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  def 	 139 142 143 146 147 152 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  gen 	 139 142 143 146 147 152 153
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 18 16 19 4 76 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/fault.c:618 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 24 4 arch/arm/mm/fault.c:618 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 133 [ nr ])
                    (const_int 16 [0x10]))
                (reg/f:SI 139)) [0 <variable>.fn+0 S4 A32])
        (reg/v/f:SI 134 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ fn ])
        (nil)))

(insn 24 21 25 4 arch/arm/mm/fault.c:619 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 27 4 arch/arm/mm/fault.c:619 (set (reg:SI 143)
        (plus:SI (reg/f:SI 139)
            (reg:SI 142))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 142)
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
            (nil))))

(insn 27 25 29 4 arch/arm/mm/fault.c:619 (set (mem/s/j:SI (plus:SI (reg:SI 143)
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])
        (reg/v:SI 135 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/v:SI 135 [ sig ])
            (nil))))

(insn 29 27 30 4 arch/arm/mm/fault.c:620 (set (reg:SI 146)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ nr ])
        (nil)))

(insn 30 29 31 4 arch/arm/mm/fault.c:620 (set (reg:SI 147)
        (plus:SI (reg:SI 146)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 31 30 36 4 arch/arm/mm/fault.c:620 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 147)
                    (const_int 8 [0x8]))
                (reg/f:SI 139)) [0 <variable>.code+0 S4 A32])
        (reg/v:SI 136 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ code ])
        (nil)))

(insn 36 31 37 4 arch/arm/mm/fault.c:621 (set (reg:SI 152)
        (ashift:SI (reg:SI 147)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 37 36 39 4 arch/arm/mm/fault.c:621 (set (reg:SI 153)
        (plus:SI (reg/f:SI 139)
            (reg:SI 152))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 152)
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
                (nil)))))

(insn 39 37 0 4 arch/arm/mm/fault.c:621 (set (mem/s/f/j:SI (plus:SI (reg:SI 153)
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])
        (reg/v/f:SI 137 [ name ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_DEAD (reg/v/f:SI 137 [ name ])
            (nil))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hook_fault_code (hook_fault_code)[0:1297] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
   10 cc:CC=cmp(r133:SI,0x1f)
    6 r137:SI=[afp:SI+0x4]
      REG_EQUIV: [afp:SI+0x4]
    6 r137:SI=[afp:SI+0x4]
      REG_EQUIV: [afp:SI+0x4]
found mem(6) *(r[26]+4)
    5 r136:SI=r3:SI
      REG_DEAD: r3:SI
    4 r135:SI=r2:SI
      REG_DEAD: r2:SI
    3 r134:SI=r1:SI
      REG_DEAD: r1:SI
    2 r133:SI=r0:SI
      REG_DEAD: r0:SI


starting bb 3
   17 call [`__bug'] argc:0x0
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_NORETURN: 0x0
   16 r1:SI=0x221
      REG_EQUAL: 0x221
   15 r0:SI=`*.LC13'
      REG_EQUAL: `*.LC13'


starting bb 4
   48 [r155:SI+0x204]=r137:SI
      REG_DEAD: r155:SI
      REG_DEAD: r137:SI
   48 [r155:SI+0x204]=r137:SI
      REG_DEAD: r155:SI
      REG_DEAD: r137:SI
found mem(48) *(r[155]+516)
   40 [r155:SI+0x200]=r136:SI
      REG_DEAD: r136:SI
   40 [r155:SI+0x200]=r136:SI
      REG_DEAD: r136:SI
found mem(40) *(r[155]+512)
   38 r155:SI=r140:SI+r154:SI
      REG_DEAD: r154:SI
      REG_DEAD: r140:SI
      REG_EQUAL: r154:SI+`*.LANCHOR0'
   37 r154:SI=r152:SI<<0x3
      REG_DEAD: r152:SI
   35 r152:SI=r151:SI+0x1
      REG_DEAD: r151:SI
   35 r152:SI=r151:SI+0x1
      REG_DEAD: r151:SI
found pre add(35) r[152]=r[151]+1
   34 r151:SI=r133:SI<<0x1
      REG_DEAD: r133:SI
   32 [r143:SI+0x204]=r135:SI
      REG_DEAD: r143:SI
      REG_DEAD: r135:SI
   32 [r143:SI+0x204]=r135:SI
      REG_DEAD: r143:SI
      REG_DEAD: r135:SI
found mem(32) *(r[143]+516)
   26 [r143:SI+0x200]=r134:SI
      REG_DEAD: r134:SI
   26 [r143:SI+0x200]=r134:SI
      REG_DEAD: r134:SI
found mem(26) *(r[143]+512)
   24 r143:SI=r140:SI+r142:SI
      REG_DEAD: r142:SI
      REG_EQUAL: r142:SI+`*.LANCHOR0'
   23 r142:SI=r133:SI<<0x4
   21 r140:SI=`*.LANCHOR0'


hook_fault_code

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,4u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r140={1d,2u} r142={1d,1u,1d} r143={1d,2u} r151={1d,1u} r152={1d,1u} r154={1d,1u,1d} r155={1d,2u} 
;;    total ref usage 187{142d,42u,3e} in 21{20 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 133 [ nr ])
        (reg:SI 0 r0 [ nr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ nr ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:543 (set (reg/v/f:SI 134 [ fn ])
        (reg:SI 1 r1 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fn ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 135 [ sig ])
        (reg:SI 2 r2 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ sig ])
        (nil)))

(insn 5 4 6 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 136 [ code ])
        (reg:SI 3 r3 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ code ])
        (nil)))

(insn 6 5 7 2 arch/arm/mm/fault.c:543 (set (reg/v/f:SI 137 [ name ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/fault.c:544 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ nr ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/fault.c:544 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 12 16 3 arch/arm/mm/fault.c:545 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)
        (nil)))

(insn 16 15 17 3 arch/arm/mm/fault.c:545 (set (reg:SI 1 r1)
        (const_int 545 [0x221])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 545 [0x221])
        (nil)))

(call_insn 17 16 19 3 arch/arm/mm/fault.c:545 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]



;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  def 	 140 142 143 151 152 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  gen 	 140 142 143 151 152 154 155
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 19 17 20 4 81 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 23 4 arch/arm/mm/fault.c:547 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 23 21 24 4 arch/arm/mm/fault.c:547 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 26 4 arch/arm/mm/fault.c:547 (set (reg:SI 143)
        (plus:SI (reg/f:SI 140)
            (reg:SI 142))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 142)
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
            (nil))))

(insn 26 24 32 4 arch/arm/mm/fault.c:547 (set (mem/s/f/j:SI (plus:SI (reg:SI 143)
                (const_int 512 [0x200])) [0 <variable>.fn+0 S4 A32])
        (reg/v/f:SI 134 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ fn ])
        (nil)))

(insn 32 26 34 4 arch/arm/mm/fault.c:548 (set (mem/s/j:SI (plus:SI (reg:SI 143)
                (const_int 516 [0x204])) [0 <variable>.sig+0 S4 A32])
        (reg/v:SI 135 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/v:SI 135 [ sig ])
            (nil))))

(insn 34 32 35 4 arch/arm/mm/fault.c:549 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ nr ])
        (nil)))

(insn 35 34 37 4 arch/arm/mm/fault.c:549 (set (reg:SI 152)
        (plus:SI (reg:SI 151)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 37 35 38 4 arch/arm/mm/fault.c:549 (set (reg:SI 154)
        (ashift:SI (reg:SI 152)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 38 37 40 4 arch/arm/mm/fault.c:549 (set (reg:SI 155)
        (plus:SI (reg/f:SI 140)
            (reg:SI 154))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_DEAD (reg/f:SI 140)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 154)
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
                (nil)))))

(insn 40 38 48 4 arch/arm/mm/fault.c:549 (set (mem/s/j:SI (plus:SI (reg:SI 155)
                (const_int 512 [0x200])) [0 <variable>.code+0 S4 A32])
        (reg/v:SI 136 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ code ])
        (nil)))

(insn 48 40 0 4 arch/arm/mm/fault.c:550 (set (mem/s/f/j:SI (plus:SI (reg:SI 155)
                (const_int 516 [0x204])) [0 <variable>.name+0 S4 A32])
        (reg/v/f:SI 137 [ name ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg/v/f:SI 137 [ name ])
            (nil))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function exceptions_init (exceptions_init)[0:1301] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called


starting bb 2
    7 cc:CC=cmp(r134:SI,0x7)
      REG_DEAD: r134:SI
    6 r134:SI=r0:SI
      REG_DEAD: r0:SI
    5 r0:SI=call [`cpu_architecture'] argc:0x0


starting bb 3
   18 call [`hook_fault_code'] argc:0x8
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_EH_REGION: 0x0
   17 r3:SI=0x30001
      REG_EQUAL: 0x30001
   16 r2:SI=0xb
   15 r1:SI=`do_translation_fault'
      REG_EQUAL: `do_translation_fault'
   14 r0:SI=0x4
   13 [sp:SI]=r138:SI
      REG_DEAD: r138:SI
      REG_EQUAL: `*.LC14'
   13 [sp:SI]=r138:SI
      REG_DEAD: r138:SI
      REG_EQUAL: `*.LC14'
found mem(13) *(r[13]+0)
   12 r138:SI=`*.LC14'


starting bb 4
   23 cc:CC=cmp(r133:SI,0x8)
      REG_DEAD: r133:SI
   22 r133:SI=r0:SI
      REG_DEAD: r0:SI
   21 r0:SI=call [`cpu_architecture'] argc:0x0


starting bb 5
   43 call [`hook_fault_code'] argc:0x8
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_EH_REGION: 0x0
   42 r3:SI=0x30001
      REG_EQUAL: 0x30001
   41 r2:SI=0xb
   40 r1:SI=`do_bad'
      REG_EQUAL: `do_bad'
   39 r0:SI=0x6
   38 [sp:SI]=r141:SI
      REG_DEAD: r141:SI
      REG_EQUAL: `*.LC15'
   38 [sp:SI]=r141:SI
      REG_DEAD: r141:SI
      REG_EQUAL: `*.LC15'
found mem(38) *(r[13]+0)
   34 call [`hook_fault_code'] argc:0x8
      REG_DEAD: r3:SI
      REG_DEAD: r2:SI
      REG_DEAD: r1:SI
      REG_DEAD: r0:SI
      REG_EH_REGION: 0x0
   33 r3:SI=0x30001
      REG_EQUAL: 0x30001
   32 r2:SI=0xb
   31 r1:SI=`do_bad'
      REG_EQUAL: `do_bad'
   30 r0:SI=0x3
   29 [sp:SI]=r141:SI
      REG_EQUAL: `*.LC15'
   29 [sp:SI]=r141:SI
      REG_EQUAL: `*.LC15'
found mem(29) *(r[13]+0)
   28 r141:SI=`*.LC15'


starting bb 6
   56 use r0:SI
   50 r0:SI=0x0
      REG_EQUAL: 0x0


exceptions_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={9d,3u} r2={9d,3u} r3={9d,3u} r11={1d,6u} r12={6d} r13={1d,14u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={7d,2u} r25={1d,6u} r26={1d,5u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,1u} r134={1d,1u} r138={1d,1u} r141={1d,2u} 
;;    total ref usage 669{614d,55u,0e} in 30{25 regular + 5 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 6 2 arch/arm/mm/fault.c:645 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 6 5 7 2 arch/arm/mm/fault.c:645 (set (reg:SI 134 [ D.24724 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 7 6 8 2 arch/arm/mm/fault.c:645 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24724 ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.24724 ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/mm/fault.c:645 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 138
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 9 13 3 arch/arm/mm/fault.c:646 (set (reg/f:SI 138)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x1154a280>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/mm/fault.c:646 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x1154a280>)
            (nil))))

(insn 14 13 15 3 arch/arm/mm/fault.c:646 (set (reg:SI 0 r0)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/mm/fault.c:646 (set (reg:SI 1 r1)
        (symbol_ref:SI ("do_translation_fault") [flags 0x3] <function_decl 0x1147d280 do_translation_fault>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_translation_fault") [flags 0x3] <function_decl 0x1147d280 do_translation_fault>)
        (nil)))

(insn 16 15 17 3 arch/arm/mm/fault.c:646 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/mm/fault.c:646 (set (reg:SI 3 r3)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(call_insn 18 17 19 3 arch/arm/mm/fault.c:646 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 19 18 20 4 86 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 21 20 22 4 arch/arm/mm/fault.c:650 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 22 21 23 4 arch/arm/mm/fault.c:650 (set (reg:SI 133 [ D.24727 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 23 22 24 4 arch/arm/mm/fault.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.24727 ])
            (const_int 8 [0x8]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.24727 ])
        (nil)))

(jump_insn 24 23 25 4 arch/arm/mm/fault.c:650 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 141
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 25 24 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 25 29 5 arch/arm/mm/fault.c:655 (set (reg/f:SI 141)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/mm/fault.c:655 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)
        (nil)))

(insn 30 29 31 5 arch/arm/mm/fault.c:655 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/mm/fault.c:655 (set (reg:SI 1 r1)
        (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)
        (nil)))

(insn 32 31 33 5 arch/arm/mm/fault.c:655 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/fault.c:655 (set (reg:SI 3 r3)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(call_insn 34 33 38 5 arch/arm/mm/fault.c:655 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 38 34 39 5 arch/arm/mm/fault.c:657 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)
            (nil))))

(insn 39 38 40 5 arch/arm/mm/fault.c:657 (set (reg:SI 0 r0)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 arch/arm/mm/fault.c:657 (set (reg:SI 1 r1)
        (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)
        (nil)))

(insn 41 40 42 5 arch/arm/mm/fault.c:657 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 5 arch/arm/mm/fault.c:657 (set (reg:SI 3 r3)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(call_insn 43 42 44 5 arch/arm/mm/fault.c:657 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 44 43 45 6 87 "" [1 uses])

(note 45 44 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 50 45 56 6 arch/arm/mm/fault.c:662 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 56 50 0 6 arch/arm/mm/fault.c:662 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
