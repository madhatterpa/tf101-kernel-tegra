
;; Function do_bad (do_bad)[0:1296]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


do_bad

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(2)
0, 11
;; rd  kill	(3)
0, 1, 11
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 133 { d11(bb 2 insn 8) }
;;   UD chains for insn luid 2 uid 18
;;      reg 0 { d0(bb 2 insn 12) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u6(0){ d0(bb 2 insn 12) }u7(11){ d5(bb 0 insn -1) }u8(13){ d7(bb 0 insn -1) }u9(14){ d8(bb 0 insn -1) }u10(25){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 12) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
Finished finding needed instructions:
  Adding insn 12 to worklist
Processing use of (reg 133 [ <result> ]) in insn 12:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 18:


do_bad

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(2)
0, 11
;; rd  kill	(3)
0, 1, 11

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 12 2 arch/arm/mm/fault.c:489 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 18 2 arch/arm/mm/fault.c:489 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 18 12 0 2 arch/arm/mm/fault.c:489 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __do_user_fault (__do_user_fault)[0:1289]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


__do_user_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,2u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,4u} r135={1d,2u} r136={1d,1u} r137={1d,2u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 175{138d,35u,2e} in 19{18 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 134[130,1] 135[131,1] 136[132,1] 137[133,1] 138[134,1] 140[135,1] 141[136,1] 142[137,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 27, 28
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137 138 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 136 137 138 140 141 142
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(9)
1, 130, 131, 132, 133, 134, 135, 136, 137
;; rd  kill	(13)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134, 135, 136, 137
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 6
;;      reg 26 { d28(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 134 { d130(bb 2 insn 2) }
;;      reg 135 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 6 uid 12
;;      reg 134 { d130(bb 2 insn 2) }
;;      reg 136 { d132(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 14
;;      reg 134 { d130(bb 2 insn 2) }
;;      reg 140 { d135(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 16
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 137 { d133(bb 2 insn 5) }
;;   UD chains for insn luid 11 uid 18
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 141 { d136(bb 2 insn 17) }
;;   UD chains for insn luid 12 uid 19
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 138 { d134(bb 2 insn 6) }
;;   UD chains for insn luid 13 uid 20
;;      reg 25 { d27(bb 0 insn -1) }
;;      reg 135 { d131(bb 2 insn 3) }
;;   UD chains for insn luid 14 uid 21
;;      reg 25 { d27(bb 0 insn -1) }
;;   UD chains for insn luid 15 uid 22
;;      reg 137 { d133(bb 2 insn 5) }
;;   UD chains for insn luid 16 uid 23
;;      reg 142 { d137(bb 2 insn 21) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 17 uid 24
;;      reg 134 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 18 uid 25
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d0(bb 2 insn 22) }
;;      reg 1 { d4(bb 2 insn 23) }
;;      reg 2 { d7(bb 2 insn 24) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u33(11){ d11(bb 0 insn -1) }u34(13){ d14(bb 0 insn -1) }u35(14){ }u36(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 25 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 18 to worklist
  Adding insn 16 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
Processing use of (reg 134 [ tsk ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 135 [ addr ]) in insn 11:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ tsk ]) in insn 12:
Processing use of (reg 136 [ fsr ]) in insn 12:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 134 [ tsk ]) in insn 14:
Processing use of (reg 140) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 25 sfp) in insn 16:
Processing use of (reg 137 [ sig ]) in insn 16:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 25 sfp) in insn 18:
Processing use of (reg 141) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 25 sfp) in insn 19:
Processing use of (reg 138 [ code ]) in insn 19:
  Adding insn 6 to worklist
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 25 sfp) in insn 20:
Processing use of (reg 135 [ addr ]) in insn 20:
Processing use of (reg 13 sp) in insn 25:
Processing use of (reg 0 r0) in insn 25:
  Adding insn 22 to worklist
Processing use of (reg 1 r1) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 2 r2) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 134 [ tsk ]) in insn 24:
Processing use of (reg 142) in insn 23:
  Adding insn 21 to worklist
Processing use of (reg 25 sfp) in insn 21:
Processing use of (reg 137 [ sig ]) in insn 22:


__do_user_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,2u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,4u} r135={1d,2u} r136={1d,1u} r137={1d,2u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 175{138d,35u,2e} in 19{18 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 134[130,1] 135[131,1] 136[132,1] 137[133,1] 138[134,1] 140[135,1] 141[136,1] 142[137,1] 
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137 138 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 135 136 137 138 140 141 142
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(9)
1, 130, 131, 132, 133, 134, 135, 136, 137
;; rd  kill	(13)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134, 135, 136, 137

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/mm/fault.c:173 (set (reg/v/f:SI 134 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tsk ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 135 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 136 [ fsr ])
        (reg:SI 2 r2 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ fsr ])
        (nil)))

(insn 5 4 6 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 137 [ sig ])
        (reg:SI 3 r3 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ sig ])
        (nil)))

(insn 6 5 8 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 138 [ code ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 code+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 code+0 S4 A32])
        (nil)))

(note 8 6 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/mm/fault.c:185 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 784 [0x310])) [0 <variable>.thread.address+0 S4 A64])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:186 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ fsr ])
        (nil)))

(insn 13 12 14 2 arch/arm/mm/fault.c:187 (set (reg:SI 140)
        (const_int 14 [0xe])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 16 2 arch/arm/mm/fault.c:187 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (const_int 14 [0xe])
            (nil))))

(insn 16 14 17 2 arch/arm/mm/fault.c:188 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 si.si_signo+0 S4 A64])
        (reg/v:SI 137 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/fault.c:189 (set (reg:SI 141)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/mm/fault.c:189 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 si.si_errno+0 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 19 18 20 2 arch/arm/mm/fault.c:190 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 si.si_code+0 S4 A64])
        (reg/v:SI 138 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ code ])
        (nil)))

(insn 20 19 21 2 arch/arm/mm/fault.c:191 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 si._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ addr ])
        (nil)))

(insn 21 20 22 2 arch/arm/mm/fault.c:192 (set (reg/f:SI 142)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 22 21 23 2 arch/arm/mm/fault.c:192 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ sig ])
        (nil)))

(insn 23 22 24 2 arch/arm/mm/fault.c:192 (set (reg:SI 1 r1)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 24 23 25 2 arch/arm/mm/fault.c:192 (set (reg:SI 2 r2)
        (reg/v/f:SI 134 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ tsk ])
        (nil)))

(call_insn 25 24 0 2 arch/arm/mm/fault.c:192 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x11156f80 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_pte (show_pte)[0:1287]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 13 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)


show_pte

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,7u} r1={9d,3u} r2={10d,3u} r3={10d,3u} r11={1d,7u} r12={7d} r13={1d,13u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={10d,4u,1d} r25={1d,7u} r26={1d,6u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,2u} r134={1d,1u} r136={1d,4u,1d} r137={2d,4u,1d} r138={1d,3u} r140={1d,2u} r142={1d,2u} r145={1d,1u} r146={1d,3u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u,1d} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r162={1d,1u,1d} r163={1d,2u} r164={1d,1u} r165={1d,1u} r168={1d,1u} r171={1d,1u} r178={1d,1u} 
;;    total ref usage 863{759d,98u,6e} in 59{53 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728
0[0,13] 1[13,9] 2[22,10] 3[32,10] 11[42,1] 12[43,7] 13[50,1] 14[51,6] 15[57,6] 16[63,6] 17[69,6] 18[75,6] 19[81,6] 20[87,6] 21[93,6] 22[99,6] 23[105,6] 24[111,10] 25[121,1] 26[122,1] 27[123,6] 28[129,6] 29[135,6] 30[141,6] 31[147,6] 32[153,6] 33[159,6] 34[165,6] 35[171,6] 36[177,6] 37[183,6] 38[189,6] 39[195,6] 40[201,6] 41[207,6] 42[213,6] 43[219,6] 44[225,6] 45[231,6] 46[237,6] 47[243,6] 48[249,6] 49[255,6] 50[261,6] 51[267,6] 52[273,6] 53[279,6] 54[285,6] 55[291,6] 56[297,6] 57[303,6] 58[309,6] 59[315,6] 60[321,6] 61[327,6] 62[333,6] 63[339,6] 64[345,6] 65[351,6] 66[357,6] 67[363,6] 68[369,6] 69[375,6] 70[381,6] 71[387,6] 72[393,6] 73[399,6] 74[405,6] 75[411,6] 76[417,6] 77[423,6] 78[429,6] 79[435,6] 80[441,6] 81[447,6] 82[453,6] 83[459,6] 84[465,6] 85[471,6] 86[477,6] 87[483,6] 88[489,6] 89[495,6] 90[501,6] 91[507,6] 92[513,6] 93[519,6] 94[525,6] 95[531,6] 96[537,6] 97[543,6] 98[549,6] 99[555,6] 100[561,6] 101[567,6] 102[573,6] 103[579,6] 104[585,6] 105[591,6] 106[597,6] 107[603,6] 108[609,6] 109[615,6] 110[621,6] 111[627,6] 112[633,6] 113[639,6] 114[645,6] 115[651,6] 116[657,6] 117[663,6] 118[669,6] 119[675,6] 120[681,6] 121[687,6] 122[693,6] 123[699,6] 124[705,6] 125[711,6] 126[717,6] 127[723,6] 133[729,1] 134[730,1] 136[731,1] 137[732,2] 138[734,1] 140[735,1] 142[736,1] 145[737,1] 146[738,1] 148[739,1] 149[740,1] 150[741,1] 151[742,1] 152[743,1] 153[744,1] 154[745,1] 155[746,1] 156[747,1] 157[748,1] 159[749,1] 160[750,1] 161[751,1] 162[752,1] 163[753,1] 164[754,1] 165[755,1] 168[756,1] 171[757,1] 178[758,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d12(0){ }d21(1){ }d31(2){ }d41(3){ }d42(11){ }d49(12){ }d50(13){ }d56(14){ }d121(25){ }d122(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
12, 21, 31, 41, 42, 49, 50, 56, 121, 122
;; rd  kill	(59)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 121, 122
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
12, 21, 31, 41, 42, 49, 50, 56, 121, 122

( 0 )->[2]->( 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d42(bb 0 insn -1) }u1(13){ d50(bb 0 insn -1) }u2(25){ d121(bb 0 insn -1) }u3(26){ d122(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 140 142 145 178
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 136 137 138 140 142 145 178
;; live  kill	 14 [lr]
;; rd  in  	(10)
12, 21, 31, 41, 42, 49, 50, 56, 121, 122
;; rd  gen 	(9)
10, 117, 731, 732, 734, 735, 736, 737, 758
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 51, 52, 53, 54, 55, 56, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 731, 732, 733, 734, 735, 736, 737, 758
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; rd  out 	(17)
10, 21, 31, 41, 42, 49, 50, 117, 121, 122, 731, 732, 734, 735, 736, 737, 758
;;  UD chains for artificial uses
;;   reg 11 { d42(bb 0 insn -1) }
;;   reg 13 { d50(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d733(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 126
;;      reg 24 { d120(bb 2 insn 7) }
;;      reg 137 { d733(bb 2 insn 2) }
;;      reg 178 { d758(bb 2 insn 124) }
;;   eq_note reg 24 { }
;;   eq_note reg 137 { }
;;   UD chains for insn luid 6 uid 15
;;      reg 137 { d732(bb 2 insn 126) }
;;   UD chains for insn luid 7 uid 16
;;      reg 13 { d50(bb 0 insn -1) }
;;      reg 0 { d5(bb 2 insn 14) }
;;      reg 1 { d20(bb 2 insn 15) }
;;   UD chains for insn luid 8 uid 17
;;      reg 138 { d734(bb 2 insn 3) }
;;   UD chains for insn luid 9 uid 19
;;      reg 137 { d732(bb 2 insn 126) }
;;   UD chains for insn luid 10 uid 22
;;      reg 140 { d735(bb 2 insn 17) }
;;      reg 142 { d736(bb 2 insn 19) }
;;   UD chains for insn luid 12 uid 25
;;      reg 138 { d734(bb 2 insn 3) }
;;   UD chains for insn luid 13 uid 95
;;      reg 145 { d737(bb 2 insn 22) }
;;   UD chains for insn luid 15 uid 27
;;      reg 13 { d50(bb 0 insn -1) }
;;      reg 0 { d4(bb 2 insn 24) }
;;      reg 1 { d18(bb 2 insn 25) }
;;      reg 2 { d24(bb 2 insn 95) }
;;      reg 3 { d34(bb 2 insn 96) }
;;   UD chains for insn luid 16 uid 28
;;      reg 140 { d735(bb 2 insn 17) }
;;      reg 142 { d736(bb 2 insn 19) }
;;   UD chains for insn luid 17 uid 29
;;      reg 136 { d731(bb 2 insn 28) }
;;   UD chains for insn luid 18 uid 30
;;      reg 24 { d117(bb 2 insn 29) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u31(11){ d42(bb 0 insn -1) }u32(13){ d50(bb 0 insn -1) }u33(25){ d121(bb 0 insn -1) }u34(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 24 [cc] 146
;; live  kill	
;; rd  in  	(17)
10, 21, 31, 41, 42, 49, 50, 117, 121, 122, 731, 732, 734, 735, 736, 737, 758
;; rd  gen 	(2)
116, 738
;; rd  kill	(11)
111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 738
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; rd  out 	(18)
10, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 734, 735, 736, 737, 738, 758
;;  UD chains for artificial uses
;;   reg 11 { d42(bb 0 insn -1) }
;;   reg 13 { d50(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 32
;;      reg 136 { d731(bb 2 insn 28) }
;;   UD chains for insn luid 1 uid 33
;;      reg 146 { d738(bb 3 insn 32) }
;;   UD chains for insn luid 2 uid 34
;;      reg 24 { d116(bb 3 insn 33) }

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u38(11){ d42(bb 0 insn -1) }u39(13){ d50(bb 0 insn -1) }u40(25){ d121(bb 0 insn -1) }u41(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(18)
10, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 734, 735, 736, 737, 738, 758
;; rd  gen 	(1)
9
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 51, 52, 53, 54, 55, 56
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
9, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 734, 735, 736, 737, 738, 758
;;  UD chains for artificial uses
;;   reg 11 { d42(bb 0 insn -1) }
;;   reg 13 { d50(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 38
;;      reg 13 { d50(bb 0 insn -1) }
;;      reg 0 { d3(bb 4 insn 37) }

( 3 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u44(11){ d42(bb 0 insn -1) }u45(13){ d50(bb 0 insn -1) }u46(25){ d121(bb 0 insn -1) }u47(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133 148 149 150 151 152 153 154 155 156 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; live  gen 	 24 [cc] 133 148 149 150 151 152 153 154 155 156 157
;; live  kill	
;; rd  in  	(18)
10, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 734, 735, 736, 737, 738, 758
;; rd  gen 	(12)
114, 729, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748
;; rd  kill	(21)
111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 729, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; rd  out 	(29)
10, 21, 31, 41, 42, 49, 50, 114, 121, 122, 729, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 758
;;  UD chains for artificial uses
;;   reg 11 { d42(bb 0 insn -1) }
;;   reg 13 { d50(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 43
;;      reg 136 { d731(bb 2 insn 28) }
;;   UD chains for insn luid 2 uid 45
;;      reg 150 { d741(bb 5 insn 44) }
;;   UD chains for insn luid 3 uid 46
;;      reg 148 { d739(bb 5 insn 43) }
;;      reg 149 { d740(bb 5 insn 45) }
;;   UD chains for insn luid 4 uid 47
;;      reg 152 { d743(bb 5 insn 46) }
;;   UD chains for insn luid 6 uid 49
;;      reg 151 { d742(bb 5 insn 47) }
;;      reg 154 { d745(bb 5 insn 48) }
;;   eq_note reg 151 { }
;;   UD chains for insn luid 8 uid 51
;;      reg 153 { d744(bb 5 insn 49) }
;;      reg 155 { d746(bb 5 insn 50) }
;;   eq_note reg 153 { }
;;   UD chains for insn luid 9 uid 52
;;      reg 133 { d729(bb 5 insn 51) }
;;   UD chains for insn luid 10 uid 53
;;      reg 133 { d729(bb 5 insn 51) }
;;      reg 157 { d748(bb 5 insn 52) }
;;   UD chains for insn luid 11 uid 54
;;      reg 156 { d747(bb 5 insn 53) }
;;   UD chains for insn luid 12 uid 55
;;      reg 24 { d114(bb 5 insn 54) }

( 4 5 2 7 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u64(11){ d42(bb 0 insn -1) }u65(13){ d50(bb 0 insn -1) }u66(25){ d121(bb 0 insn -1) }u67(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(43)
6, 9, 10, 21, 31, 41, 42, 49, 50, 114, 116, 117, 121, 122, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758
;; rd  gen 	(1)
8
;; rd  kill	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(41)
8, 21, 31, 41, 42, 49, 50, 114, 116, 117, 121, 122, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758
;;  UD chains for artificial uses
;;   reg 11 { d42(bb 0 insn -1) }
;;   reg 13 { d50(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 60
;;      reg 13 { d50(bb 0 insn -1) }
;;      reg 0 { d2(bb 6 insn 59) }

( 5 )->[7]->( 6 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u70(11){ d42(bb 0 insn -1) }u71(13){ d50(bb 0 insn -1) }u72(25){ d121(bb 0 insn -1) }u73(26){ d122(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 159 160 161 162 163 164 165 168 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 134 159 160 161 162 163 164 165 168 171
;; live  kill	 14 [lr]
;; rd  in  	(29)
10, 21, 31, 41, 42, 49, 50, 114, 121, 122, 729, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 758
;; rd  gen 	(11)
6, 730, 749, 750, 751, 752, 753, 754, 755, 756, 757
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 51, 52, 53, 54, 55, 56, 730, 749, 750, 751, 752, 753, 754, 755, 756, 757
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(39)
6, 21, 31, 41, 42, 49, 50, 114, 121, 122, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758
;;  UD chains for artificial uses
;;   reg 11 { d42(bb 0 insn -1) }
;;   reg 13 { d50(bb 0 insn -1) }
;;   reg 25 { d121(bb 0 insn -1) }
;;   reg 26 { d122(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 64
;;      reg 136 { d731(bb 2 insn 28) }
;;   UD chains for insn luid 1 uid 65
;;      reg 160 { d750(bb 7 insn 64) }
;;   eq_note reg 136 { }
;;   UD chains for insn luid 2 uid 66
;;      reg 159 { d749(bb 7 insn 65) }
;;   UD chains for insn luid 3 uid 67
;;      reg 138 { d734(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 68
;;      reg 162 { d752(bb 7 insn 67) }
;;   UD chains for insn luid 5 uid 69
;;      reg 164 { d754(bb 7 insn 68) }
;;   eq_note reg 162 { }
;;   UD chains for insn luid 6 uid 70
;;      reg 163 { d753(bb 7 insn 69) }
;;   UD chains for insn luid 7 uid 71
;;      reg 161 { d751(bb 7 insn 66) }
;;      reg 165 { d755(bb 7 insn 70) }
;;   UD chains for insn luid 8 uid 73
;;      reg 161 { d751(bb 7 insn 66) }
;;      reg 163 { d753(bb 7 insn 69) }
;;   UD chains for insn luid 10 uid 99
;;      reg 168 { d756(bb 7 insn 73) }
;;   UD chains for insn luid 11 uid 100
;;      reg 146 { d738(bb 3 insn 32) }
;;   UD chains for insn luid 12 uid 77
;;      reg 13 { d50(bb 0 insn -1) }
;;      reg 0 { d1(bb 7 insn 75) }
;;      reg 2 { d23(bb 7 insn 99) }
;;      reg 3 { d33(bb 7 insn 100) }
;;   UD chains for insn luid 13 uid 79
;;      reg 134 { d730(bb 7 insn 71) }
;;   UD chains for insn luid 15 uid 103
;;      reg 171 { d757(bb 7 insn 79) }
;;   UD chains for insn luid 16 uid 104
;;      reg 146 { d738(bb 3 insn 32) }
;;   UD chains for insn luid 17 uid 83
;;      reg 13 { d50(bb 0 insn -1) }
;;      reg 0 { d0(bb 7 insn 81) }
;;      reg 2 { d22(bb 7 insn 103) }
;;      reg 3 { d32(bb 7 insn 104) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u100(11){ d42(bb 0 insn -1) }u101(13){ d50(bb 0 insn -1) }u102(14){ }u103(25){ d121(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(41)
8, 21, 31, 41, 42, 49, 50, 114, 116, 117, 121, 122, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(41)
8, 21, 31, 41, 42, 49, 50, 114, 116, 117, 121, 122, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758
;;  UD chains for artificial uses
;;   reg 11 { d42(bb 0 insn -1) }
;;   reg 13 { d50(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d121(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 30 to worklist
  Adding insn 27 to worklist
  Adding insn 16 to worklist
  Adding insn 34 to worklist
  Adding insn 127 to worklist
  Adding insn 38 to worklist
  Adding insn 55 to worklist
  Adding insn 60 to worklist
  Adding insn 129 to worklist
  Adding insn 83 to worklist
  Adding insn 77 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 77:
Processing use of (reg 0 r0) in insn 77:
  Adding insn 75 to worklist
Processing use of (reg 2 r2) in insn 77:
  Adding insn 99 to worklist
Processing use of (reg 3 r3) in insn 77:
  Adding insn 100 to worklist
Processing use of (reg 146) in insn 100:
  Adding insn 32 to worklist
Processing use of (reg 136 [ D.24402 ]) in insn 32:
  Adding insn 28 to worklist
Processing use of (reg 140) in insn 28:
  Adding insn 17 to worklist
Processing use of (reg 142 [ <variable>.pgd ]) in insn 28:
  Adding insn 19 to worklist
Processing use of (reg 137 [ mm ]) in insn 19:
  Adding insn 126 to worklist
Processing use of (reg 24 cc) in insn 126:
  Adding insn 7 to worklist
Processing use of (reg 137 [ mm ]) in insn 126:
  Adding insn 2 to worklist
Processing use of (reg 178) in insn 126:
  Adding insn 124 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 137 [ mm ]) in insn 7:
Processing use of (reg 138 [ addr ]) in insn 17:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 168) in insn 99:
  Adding insn 73 to worklist
Processing use of (reg 161) in insn 73:
  Adding insn 66 to worklist
Processing use of (reg 163) in insn 73:
  Adding insn 69 to worklist
Processing use of (reg 164) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 162) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 138 [ addr ]) in insn 67:
Processing use of (reg 159) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 160) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 136 [ D.24402 ]) in insn 64:
Processing use of (reg 13 sp) in insn 83:
Processing use of (reg 0 r0) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 2 r2) in insn 83:
  Adding insn 103 to worklist
Processing use of (reg 3 r3) in insn 83:
  Adding insn 104 to worklist
Processing use of (reg 146) in insn 104:
Processing use of (reg 171) in insn 103:
  Adding insn 79 to worklist
Processing use of (reg 134 [ pte ]) in insn 79:
  Adding insn 71 to worklist
Processing use of (reg 161) in insn 71:
Processing use of (reg 165) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 163) in insn 70:
Processing use of (reg 13 sp) in insn 60:
Processing use of (reg 0 r0) in insn 60:
  Adding insn 59 to worklist
Processing use of (reg 24 cc) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 156) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 133 [ D.24788 ]) in insn 53:
  Adding insn 51 to worklist
Processing use of (reg 157 [ <variable>.zone_pgdat ]) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 133 [ D.24788 ]) in insn 52:
Processing use of (reg 153) in insn 51:
  Adding insn 49 to worklist
Processing use of (reg 155) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 151) in insn 49:
  Adding insn 47 to worklist
Processing use of (reg 154) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 152 [ <variable>.flags ]) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 148) in insn 46:
  Adding insn 43 to worklist
Processing use of (reg 149 [ mem_map ]) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 150) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 136 [ D.24402 ]) in insn 43:
Processing use of (reg 13 sp) in insn 38:
Processing use of (reg 0 r0) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 24 cc) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 146) in insn 33:
Processing use of (reg 13 sp) in insn 16:
Processing use of (reg 0 r0) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 1 r1) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 137 [ mm ]) in insn 15:
Processing use of (reg 13 sp) in insn 27:
Processing use of (reg 0 r0) in insn 27:
  Adding insn 24 to worklist
Processing use of (reg 1 r1) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 2 r2) in insn 27:
  Adding insn 95 to worklist
Processing use of (reg 3 r3) in insn 27:
  Adding insn 96 to worklist
Processing use of (reg 145) in insn 95:
  Adding insn 22 to worklist
Processing use of (reg 140) in insn 22:
Processing use of (reg 142 [ <variable>.pgd ]) in insn 22:
Processing use of (reg 138 [ addr ]) in insn 25:
Processing use of (reg 24 cc) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 136 [ D.24402 ]) in insn 29:


show_pte

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,7u} r1={9d,3u} r2={10d,3u} r3={10d,3u} r11={1d,7u} r12={7d} r13={1d,13u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={10d,4u,1d} r25={1d,7u} r26={1d,6u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,2u} r134={1d,1u} r136={1d,4u,1d} r137={2d,4u,1d} r138={1d,3u} r140={1d,2u} r142={1d,2u} r145={1d,1u} r146={1d,3u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u,1d} r152={1d,1u} r153={1d,1u,1d} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r162={1d,1u,1d} r163={1d,2u} r164={1d,1u} r165={1d,1u} r168={1d,1u} r171={1d,1u} r178={1d,1u} 
;;    total ref usage 863{759d,98u,6e} in 59{53 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728
0[0,13] 1[13,9] 2[22,10] 3[32,10] 11[42,1] 12[43,7] 13[50,1] 14[51,6] 15[57,6] 16[63,6] 17[69,6] 18[75,6] 19[81,6] 20[87,6] 21[93,6] 22[99,6] 23[105,6] 24[111,10] 25[121,1] 26[122,1] 27[123,6] 28[129,6] 29[135,6] 30[141,6] 31[147,6] 32[153,6] 33[159,6] 34[165,6] 35[171,6] 36[177,6] 37[183,6] 38[189,6] 39[195,6] 40[201,6] 41[207,6] 42[213,6] 43[219,6] 44[225,6] 45[231,6] 46[237,6] 47[243,6] 48[249,6] 49[255,6] 50[261,6] 51[267,6] 52[273,6] 53[279,6] 54[285,6] 55[291,6] 56[297,6] 57[303,6] 58[309,6] 59[315,6] 60[321,6] 61[327,6] 62[333,6] 63[339,6] 64[345,6] 65[351,6] 66[357,6] 67[363,6] 68[369,6] 69[375,6] 70[381,6] 71[387,6] 72[393,6] 73[399,6] 74[405,6] 75[411,6] 76[417,6] 77[423,6] 78[429,6] 79[435,6] 80[441,6] 81[447,6] 82[453,6] 83[459,6] 84[465,6] 85[471,6] 86[477,6] 87[483,6] 88[489,6] 89[495,6] 90[501,6] 91[507,6] 92[513,6] 93[519,6] 94[525,6] 95[531,6] 96[537,6] 97[543,6] 98[549,6] 99[555,6] 100[561,6] 101[567,6] 102[573,6] 103[579,6] 104[585,6] 105[591,6] 106[597,6] 107[603,6] 108[609,6] 109[615,6] 110[621,6] 111[627,6] 112[633,6] 113[639,6] 114[645,6] 115[651,6] 116[657,6] 117[663,6] 118[669,6] 119[675,6] 120[681,6] 121[687,6] 122[693,6] 123[699,6] 124[705,6] 125[711,6] 126[717,6] 127[723,6] 133[729,1] 134[730,1] 136[731,1] 137[732,2] 138[734,1] 140[735,1] 142[736,1] 145[737,1] 146[738,1] 148[739,1] 149[740,1] 150[741,1] 151[742,1] 152[743,1] 153[744,1] 154[745,1] 155[746,1] 156[747,1] 157[748,1] 159[749,1] 160[750,1] 161[751,1] 162[752,1] 163[753,1] 164[754,1] 165[755,1] 168[756,1] 171[757,1] 178[758,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 140 142 145 178
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 136 137 138 140 142 145 178
;; live  kill	 14 [lr]
;; rd  in  	(10)
12, 21, 31, 41, 42, 49, 50, 56, 121, 122
;; rd  gen 	(9)
10, 117, 731, 732, 734, 735, 736, 737, 758
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 51, 52, 53, 54, 55, 56, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 731, 732, 733, 734, 735, 736, 737, 758

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/mm/fault.c:71 (set (reg/v/f:SI 137 [ mm ])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mm ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:71 (set (reg/v:SI 138 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 124 2 arch/arm/mm/fault.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 137 [ mm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 124 7 126 2 arch/arm/mm/fault.c:75 (set (reg/f:SI 178)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>)) 167 {*arm_movsi_insn} (nil))

(insn 126 124 14 2 arch/arm/mm/fault.c:75 (set (reg/v/f:SI 137 [ mm ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v/f:SI 137 [ mm ])
            (reg/f:SI 178))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg/f:SI 178)
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (expr_list:REG_EQUAL (if_then_else:SI (ne (reg:CC 24 cc)
                        (const_int 0 [0x0]))
                    (reg/v/f:SI 137 [ mm ])
                    (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>))
                (nil)))))

(insn 14 126 15 2 arch/arm/mm/fault.c:77 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114bfdb0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114bfdb0>)
        (nil)))

(insn 15 14 16 2 arch/arm/mm/fault.c:77 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 2 arch/arm/mm/fault.c:77 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 17 16 19 2 arch/arm/mm/fault.c:78 (set (reg:SI 140)
        (lshiftrt:SI (reg/v:SI 138 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 19 17 22 2 arch/arm/mm/fault.c:78 (set (reg/f:SI 142 [ <variable>.pgd ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ mm ])
        (nil)))

(insn 22 19 24 2 arch/arm/mm/fault.c:79 (set (reg:SI 145)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 140)
                    (const_int 8 [0x8]))
                (reg/f:SI 142 [ <variable>.pgd ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 22 25 2 arch/arm/mm/fault.c:79 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x114b7420>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x114b7420>)
        (nil)))

(insn 25 24 95 2 arch/arm/mm/fault.c:79 (set (reg:SI 1 r1)
        (reg/v:SI 138 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 95 25 96 2 arch/arm/mm/fault.c:79 (set (reg:SI 2 r2)
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 96 95 27 2 arch/arm/mm/fault.c:79 (set (reg:SI 3 r3 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 27 96 28 2 arch/arm/mm/fault.c:79 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 28 27 29 2 arch/arm/mm/fault.c:111 (set (reg:SI 136 [ D.24402 ])
        (mem:SI (plus:SI (mult:SI (reg:SI 140)
                    (const_int 8 [0x8]))
                (reg/f:SI 142 [ <variable>.pgd ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142 [ <variable>.pgd ])
        (expr_list:REG_DEAD (reg:SI 140)
            (nil))))

(insn 29 28 30 2 arch/arm/mm/fault.c:111 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.24402 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 2 arch/arm/mm/fault.c:111 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 6 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; rd  out 	(17)
10, 21, 31, 41, 42, 49, 50, 117, 121, 122, 731, 732, 734, 735, 736, 737, 758


;; Succ edge  6 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 24 [cc] 146
;; live  kill	
;; rd  in  	(17)
10, 21, 31, 41, 42, 49, 50, 117, 121, 122, 731, 732, 734, 735, 736, 737, 758
;; rd  gen 	(2)
116, 738
;; rd  kill	(11)
111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 738

;; Pred edge  2 [61.0%]  (fallthru)
(note 31 30 32 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 3 arch/arm/mm/fault.c:114 (set (reg:SI 146)
        (and:SI (reg:SI 136 [ D.24402 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 32 34 3 arch/arm/mm/fault.c:114 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 34 33 35 3 arch/arm/mm/fault.c:114 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; rd  out 	(18)
10, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 734, 735, 736, 737, 738, 758


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(18)
10, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 734, 735, 736, 737, 738, 758
;; rd  gen 	(1)
9
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 51, 52, 53, 54, 55, 56

;; Pred edge  3 [0.0%]  (fallthru)
(note 35 34 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 37 35 38 4 arch/arm/mm/fault.c:115 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x114e0740>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x114e0740>)
        (nil)))

(call_insn 38 37 127 4 arch/arm/mm/fault.c:115 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 127 38 128 4 arch/arm/mm/fault.c:116 (set (pc)
        (label_ref 56)) -1 (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
9, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 734, 735, 736, 737, 738, 758


;; Succ edge  6 [100.0%] 

(barrier 128 127 41)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133 148 149 150 151 152 153 154 155 156 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; live  gen 	 24 [cc] 133 148 149 150 151 152 153 154 155 156 157
;; live  kill	
;; rd  in  	(18)
10, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 734, 735, 736, 737, 738, 758
;; rd  gen 	(12)
114, 729, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748
;; rd  kill	(21)
111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 729, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748

;; Pred edge  3 [100.0%] 
(code_label 41 128 42 5 8 "" [1 uses])

(note 42 41 43 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 5 include/linux/mm.h:692 (set (reg:SI 148)
        (lshiftrt:SI (reg:SI 136 [ D.24402 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 44 43 45 5 include/linux/mm.h:692 (set (reg/f:SI 150)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 5 include/linux/mm.h:692 (set (reg/f:SI 149 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 150) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 150)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>) [0 mem_map+0 S4 A32])
            (nil))))

(insn 46 45 47 5 include/linux/mm.h:692 (set (reg:SI 152 [ <variable>.flags ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 148)
                    (const_int 32 [0x20]))
                (reg/f:SI 149 [ mem_map ])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 149 [ mem_map ])
        (expr_list:REG_DEAD (reg:SI 148)
            (nil))))

(insn 47 46 48 5 include/linux/mm.h:692 (set (reg:SI 151)
        (lshiftrt:SI (reg:SI 152 [ <variable>.flags ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152 [ <variable>.flags ])
        (nil)))

(insn 48 47 49 5 include/linux/mm.h:692 (set (reg:SI 154)
        (const_int 768 [0x300])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 5 include/linux/mm.h:692 (set (reg:SI 153)
        (mult:SI (reg:SI 154)
            (reg:SI 151))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_DEAD (reg:SI 151)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 151)
                    (const_int 768 [0x300]))
                (nil)))))

(insn 50 49 51 5 include/linux/mm.h:692 (set (reg/f:SI 155)
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 5 include/linux/mm.h:692 (set (reg/f:SI 133 [ D.24788 ])
        (plus:SI (reg:SI 153)
            (reg/f:SI 155))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_DEAD (reg:SI 153)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 153)
                    (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>))
                (nil)))))

(insn 52 51 53 5 include/linux/mmzone.h:741 (set (reg/f:SI 157 [ <variable>.zone_pgdat ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 133 [ D.24788 ])
                (const_int 748 [0x2ec])) [0 <variable>.zone_pgdat+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 5 include/linux/mmzone.h:741 (set (reg:SI 156)
        (minus:SI (reg/f:SI 133 [ D.24788 ])
            (reg/f:SI 157 [ <variable>.zone_pgdat ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 157 [ <variable>.zone_pgdat ])
        (expr_list:REG_DEAD (reg/f:SI 133 [ D.24788 ])
            (nil))))

(insn 54 53 55 5 include/linux/mmzone.h:741 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156)
            (const_int 768 [0x300]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(jump_insn 55 54 56 5 include/linux/mmzone.h:741 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; rd  out 	(29)
10, 21, 31, 41, 42, 49, 50, 114, 121, 122, 729, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 758


;; Succ edge  6 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 4 5 2 7) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(43)
6, 9, 10, 21, 31, 41, 42, 49, 50, 114, 116, 117, 121, 122, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758
;; rd  gen 	(1)
8
;; rd  kill	(13)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [28.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
;; Pred edge  7 [100.0%] 
(code_label 56 55 57 6 7 "" [3 uses])

(note 57 56 59 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 59 57 60 6 arch/arm/mm/fault.c:130 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114e09e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114e09e0>)
        (nil)))

(call_insn/j 60 59 61 6 arch/arm/mm/fault.c:130 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(41)
8, 21, 31, 41, 42, 49, 50, 114, 116, 117, 121, 122, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 61 60 62)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 159 160 161 162 163 164 165 168 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 134 159 160 161 162 163 164 165 168 171
;; live  kill	 14 [lr]
;; rd  in  	(29)
10, 21, 31, 41, 42, 49, 50, 114, 121, 122, 729, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 758
;; rd  gen 	(11)
6, 730, 749, 750, 751, 752, 753, 754, 755, 756, 757
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 51, 52, 53, 54, 55, 56, 730, 749, 750, 751, 752, 753, 754, 755, 756, 757

;; Pred edge  5 [72.0%] 
(code_label 62 61 63 7 9 "" [1 uses])

(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 7 arch/arm/mm/fault.c:123 (set (reg:SI 160)
        (and:SI (reg:SI 136 [ D.24402 ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.24402 ])
        (nil)))

(insn 65 64 66 7 arch/arm/mm/fault.c:123 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (and:SI (reg:SI 136 [ D.24402 ])
                (const_int -4096 [0xfffffffffffff000]))
            (nil))))

(insn 66 65 67 7 arch/arm/mm/fault.c:123 (set (reg:SI 161)
        (plus:SI (reg:SI 159)
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 67 66 68 7 arch/arm/mm/fault.c:123 (set (reg:SI 162)
        (lshiftrt:SI (reg/v:SI 138 [ addr ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ addr ])
        (nil)))

(insn 68 67 69 7 arch/arm/mm/fault.c:123 (set (reg:SI 164)
        (ashift:SI (reg:SI 162)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 69 68 70 7 arch/arm/mm/fault.c:123 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 164)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (and:SI (reg:SI 162)
                (const_int 511 [0x1ff]))
            (nil))))

(insn 70 69 71 7 arch/arm/mm/fault.c:123 (set (reg:SI 165)
        (ashift:SI (reg:SI 163)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 71 70 73 7 arch/arm/mm/fault.c:123 (set (reg/v/f:SI 134 [ pte ])
        (plus:SI (reg:SI 161)
            (reg:SI 165))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 73 71 75 7 arch/arm/mm/fault.c:124 (set (reg:SI 168)
        (mem:SI (plus:SI (mult:SI (reg:SI 163)
                    (const_int 4 [0x4]))
                (reg:SI 161)) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg:SI 161)
            (nil))))

(insn 75 73 99 7 arch/arm/mm/fault.c:124 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114e1ab0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114e1ab0>)
        (nil)))

(insn 99 75 100 7 arch/arm/mm/fault.c:124 (set (reg:SI 2 r2)
        (reg:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 100 99 77 7 arch/arm/mm/fault.c:124 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 77 100 79 7 arch/arm/mm/fault.c:124 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 79 77 81 7 arch/arm/mm/fault.c:125 (set (reg:SI 171)
        (mem:SI (plus:SI (reg/v/f:SI 134 [ pte ])
                (const_int 2048 [0x800])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ pte ])
        (nil)))

(insn 81 79 103 7 arch/arm/mm/fault.c:125 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114e1c60>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114e1c60>)
        (nil)))

(insn 103 81 104 7 arch/arm/mm/fault.c:125 (set (reg:SI 2 r2)
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 104 103 83 7 arch/arm/mm/fault.c:125 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 83 104 129 7 arch/arm/mm/fault.c:125 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 129 83 130 7 (set (pc)
        (label_ref 56)) -1 (nil))
;; End of basic block 7 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(39)
6, 21, 31, 41, 42, 49, 50, 114, 121, 122, 729, 730, 731, 732, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758


;; Succ edge  6 [100.0%] 

(barrier 130 129 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __do_kernel_fault (__do_kernel_fault)[0:1288]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 8 (  1.6)


__do_kernel_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,9u} r1={11d,4u} r2={10d,3u} r3={8d,1u} r11={1d,4u} r12={8d} r13={1d,11u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={9d,2u,1d} r25={1d,4u} r26={1d,3u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,1u} r134={1d,2u} r135={1d,1u} r136={1d,3u,1d} r137={1d,1u} r138={1d,2u} r139={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 909{852d,55u,2e} in 31{24 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842
0[0,15] 1[15,11] 2[26,10] 3[36,8] 11[44,1] 12[45,8] 13[53,1] 14[54,8] 15[62,7] 16[69,7] 17[76,7] 18[83,7] 19[90,7] 20[97,7] 21[104,7] 22[111,7] 23[118,7] 24[125,9] 25[134,1] 26[135,1] 27[136,7] 28[143,7] 29[150,7] 30[157,7] 31[164,7] 32[171,7] 33[178,7] 34[185,7] 35[192,7] 36[199,7] 37[206,7] 38[213,7] 39[220,7] 40[227,7] 41[234,7] 42[241,7] 43[248,7] 44[255,7] 45[262,7] 46[269,7] 47[276,7] 48[283,7] 49[290,7] 50[297,7] 51[304,7] 52[311,7] 53[318,7] 54[325,7] 55[332,7] 56[339,7] 57[346,7] 58[353,7] 59[360,7] 60[367,7] 61[374,7] 62[381,7] 63[388,7] 64[395,7] 65[402,7] 66[409,7] 67[416,7] 68[423,7] 69[430,7] 70[437,7] 71[444,7] 72[451,7] 73[458,7] 74[465,7] 75[472,7] 76[479,7] 77[486,7] 78[493,7] 79[500,7] 80[507,7] 81[514,7] 82[521,7] 83[528,7] 84[535,7] 85[542,7] 86[549,7] 87[556,7] 88[563,7] 89[570,7] 90[577,7] 91[584,7] 92[591,7] 93[598,7] 94[605,7] 95[612,7] 96[619,7] 97[626,7] 98[633,7] 99[640,7] 100[647,7] 101[654,7] 102[661,7] 103[668,7] 104[675,7] 105[682,7] 106[689,7] 107[696,7] 108[703,7] 109[710,7] 110[717,7] 111[724,7] 112[731,7] 113[738,7] 114[745,7] 115[752,7] 116[759,7] 117[766,7] 118[773,7] 119[780,7] 120[787,7] 121[794,7] 122[801,7] 123[808,7] 124[815,7] 125[822,7] 126[829,7] 127[836,7] 133[843,1] 134[844,1] 135[845,1] 136[846,1] 137[847,1] 138[848,1] 139[849,1] 142[850,1] 143[851,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d14(0){ }d25(1){ }d35(2){ }d43(3){ }d44(11){ }d52(12){ }d53(13){ }d61(14){ }d134(25){ }d135(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
14, 25, 35, 43, 44, 52, 53, 61, 134, 135
;; rd  kill	(64)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 134, 135
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
14, 25, 35, 43, 44, 52, 53, 61, 134, 135

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d44(bb 0 insn -1) }u1(13){ d53(bb 0 insn -1) }u2(25){ d134(bb 0 insn -1) }u3(26){ d135(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137 138
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 135 136 137 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
14, 25, 35, 43, 44, 52, 53, 61, 134, 135
;; rd  gen 	(7)
12, 132, 844, 845, 846, 847, 848
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 54, 55, 56, 57, 58, 59, 60, 61, 125, 126, 127, 128, 129, 130, 131, 132, 133, 844, 845, 846, 847, 848
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; rd  out 	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 844, 845, 846, 847, 848
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 25 { d134(bb 0 insn -1) }
;;   reg 26 { d135(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d25(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d35(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 138 { d848(bb 2 insn 5) }
;;   UD chains for insn luid 5 uid 10
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d13(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 0 { d12(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 12
;;      reg 134 { d844(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 24 { d132(bb 2 insn 12) }

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ d44(bb 0 insn -1) }u15(13){ d53(bb 0 insn -1) }u16(25){ d134(bb 0 insn -1) }u17(26){ d135(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 139 142 143
;; live  kill	 14 [lr]
;; rd  in  	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 844, 845, 846, 847, 848
;; rd  gen 	(4)
843, 849, 850, 851
;; rd  kill	(12)
54, 55, 56, 57, 58, 59, 60, 61, 843, 849, 850, 851
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 843, 844, 845, 846, 847, 848, 849, 850, 851
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 25 { d134(bb 0 insn -1) }
;;   reg 26 { d135(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 16
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d11(bb 3 insn 15) }
;;   UD chains for insn luid 3 uid 18
;;      reg 136 { d846(bb 2 insn 3) }
;;      reg 139 { d849(bb 3 insn 17) }
;;   eq_note reg 136 { }
;;   UD chains for insn luid 6 uid 59
;;      reg 24 { d130(bb 3 insn 18) }
;;      reg 142 { d850(bb 3 insn 56) }
;;      reg 143 { d851(bb 3 insn 57) }
;;   eq_note reg 24 { }
;;   UD chains for insn luid 8 uid 31
;;      reg 133 { d843(bb 3 insn 59) }
;;   UD chains for insn luid 9 uid 32
;;      reg 136 { d846(bb 2 insn 3) }
;;   UD chains for insn luid 10 uid 33
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 30) }
;;      reg 1 { d22(bb 3 insn 31) }
;;      reg 2 { d32(bb 3 insn 32) }
;;   UD chains for insn luid 11 uid 34
;;      reg 135 { d845(bb 2 insn 2) }
;;   UD chains for insn luid 12 uid 35
;;      reg 136 { d846(bb 2 insn 3) }
;;   UD chains for insn luid 13 uid 36
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d8(bb 3 insn 34) }
;;      reg 1 { d20(bb 3 insn 35) }
;;   UD chains for insn luid 15 uid 39
;;      reg 138 { d848(bb 2 insn 5) }
;;   UD chains for insn luid 16 uid 40
;;      reg 137 { d847(bb 2 insn 4) }
;;   UD chains for insn luid 17 uid 41
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d1(bb 3 insn 38) }
;;      reg 1 { d18(bb 3 insn 39) }
;;      reg 2 { d29(bb 3 insn 40) }
;;   UD chains for insn luid 18 uid 42
;;      reg 134 { d844(bb 2 insn 11) }
;;   UD chains for insn luid 19 uid 43
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d0(bb 3 insn 42) }
;;   UD chains for insn luid 21 uid 45
;;      reg 13 { d53(bb 0 insn -1) }
;;      reg 0 { d4(bb 3 insn 44) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u49(11){ d44(bb 0 insn -1) }u50(13){ d53(bb 0 insn -1) }u51(25){ d134(bb 0 insn -1) }u52(26){ d135(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 844, 845, 846, 847, 848
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 844, 845, 846, 847, 848
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 25 { d134(bb 0 insn -1) }
;;   reg 26 { d135(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u53(11){ d44(bb 0 insn -1) }u54(13){ d53(bb 0 insn -1) }u55(14){ }u56(25){ d134(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 844, 845, 846, 847, 848
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 844, 845, 846, 847, 848
;;  UD chains for artificial uses
;;   reg 11 { d44(bb 0 insn -1) }
;;   reg 13 { d53(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d134(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 10 to worklist
  Adding insn 45 to worklist
  Adding insn 43 to worklist
  Adding insn 41 to worklist
  Adding insn 36 to worklist
  Adding insn 33 to worklist
  Adding insn 16 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 16:
Processing use of (reg 0 r0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 13 sp) in insn 33:
Processing use of (reg 0 r0) in insn 33:
  Adding insn 30 to worklist
Processing use of (reg 1 r1) in insn 33:
  Adding insn 31 to worklist
Processing use of (reg 2 r2) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 136 [ addr ]) in insn 32:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 133 [ iftmp.320 ]) in insn 31:
  Adding insn 59 to worklist
Processing use of (reg 24 cc) in insn 59:
  Adding insn 18 to worklist
Processing use of (reg 142) in insn 59:
  Adding insn 56 to worklist
Processing use of (reg 143) in insn 59:
  Adding insn 57 to worklist
Processing use of (reg 136 [ addr ]) in insn 18:
Processing use of (reg 139) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 13 sp) in insn 36:
Processing use of (reg 0 r0) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 1 r1) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 136 [ addr ]) in insn 35:
Processing use of (reg 135 [ mm ]) in insn 34:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 41:
Processing use of (reg 0 r0) in insn 41:
  Adding insn 38 to worklist
Processing use of (reg 1 r1) in insn 41:
  Adding insn 39 to worklist
Processing use of (reg 2 r2) in insn 41:
  Adding insn 40 to worklist
Processing use of (reg 137 [ fsr ]) in insn 40:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 138 [ regs ]) in insn 39:
  Adding insn 5 to worklist
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 13 sp) in insn 43:
Processing use of (reg 0 r0) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 134 [ D.24430 ]) in insn 42:
  Adding insn 11 to worklist
Processing use of (reg 0 r0) in insn 11:
Processing use of (reg 13 sp) in insn 45:
Processing use of (reg 0 r0) in insn 45:
  Adding insn 44 to worklist
Processing use of (reg 13 sp) in insn 10:
Processing use of (reg 0 r0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 138 [ regs ]) in insn 9:
Processing use of (reg 24 cc) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 134 [ D.24430 ]) in insn 12:


__do_kernel_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,9u} r1={11d,4u} r2={10d,3u} r3={8d,1u} r11={1d,4u} r12={8d} r13={1d,11u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={9d,2u,1d} r25={1d,4u} r26={1d,3u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,1u} r134={1d,2u} r135={1d,1u} r136={1d,3u,1d} r137={1d,1u} r138={1d,2u} r139={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 909{852d,55u,2e} in 31{24 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842
0[0,15] 1[15,11] 2[26,10] 3[36,8] 11[44,1] 12[45,8] 13[53,1] 14[54,8] 15[62,7] 16[69,7] 17[76,7] 18[83,7] 19[90,7] 20[97,7] 21[104,7] 22[111,7] 23[118,7] 24[125,9] 25[134,1] 26[135,1] 27[136,7] 28[143,7] 29[150,7] 30[157,7] 31[164,7] 32[171,7] 33[178,7] 34[185,7] 35[192,7] 36[199,7] 37[206,7] 38[213,7] 39[220,7] 40[227,7] 41[234,7] 42[241,7] 43[248,7] 44[255,7] 45[262,7] 46[269,7] 47[276,7] 48[283,7] 49[290,7] 50[297,7] 51[304,7] 52[311,7] 53[318,7] 54[325,7] 55[332,7] 56[339,7] 57[346,7] 58[353,7] 59[360,7] 60[367,7] 61[374,7] 62[381,7] 63[388,7] 64[395,7] 65[402,7] 66[409,7] 67[416,7] 68[423,7] 69[430,7] 70[437,7] 71[444,7] 72[451,7] 73[458,7] 74[465,7] 75[472,7] 76[479,7] 77[486,7] 78[493,7] 79[500,7] 80[507,7] 81[514,7] 82[521,7] 83[528,7] 84[535,7] 85[542,7] 86[549,7] 87[556,7] 88[563,7] 89[570,7] 90[577,7] 91[584,7] 92[591,7] 93[598,7] 94[605,7] 95[612,7] 96[619,7] 97[626,7] 98[633,7] 99[640,7] 100[647,7] 101[654,7] 102[661,7] 103[668,7] 104[675,7] 105[682,7] 106[689,7] 107[696,7] 108[703,7] 109[710,7] 110[717,7] 111[724,7] 112[731,7] 113[738,7] 114[745,7] 115[752,7] 116[759,7] 117[766,7] 118[773,7] 119[780,7] 120[787,7] 121[794,7] 122[801,7] 123[808,7] 124[815,7] 125[822,7] 126[829,7] 127[836,7] 133[843,1] 134[844,1] 135[845,1] 136[846,1] 137[847,1] 138[848,1] 139[849,1] 142[850,1] 143[851,1] 
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137 138
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 135 136 137 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
14, 25, 35, 43, 44, 52, 53, 61, 134, 135
;; rd  gen 	(7)
12, 132, 844, 845, 846, 847, 848
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 54, 55, 56, 57, 58, 59, 60, 61, 125, 126, 127, 128, 129, 130, 131, 132, 133, 844, 845, 846, 847, 848

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/fault.c:143 (set (reg/v/f:SI 135 [ mm ])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mm ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:143 (set (reg/v:SI 136 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:143 (set (reg/v:SI 137 [ fsr ])
        (reg:SI 2 r2 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ fsr ])
        (nil)))

(insn 5 4 6 2 arch/arm/mm/fault.c:143 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 3 r3 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ regs ])
        (nil)))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/fault.c:147 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 11 2 arch/arm/mm/fault.c:147 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fixup_exception") [flags 0x41] <function_decl 0x11013a80 fixup_exception>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/mm/fault.c:147 (set (reg:SI 134 [ D.24430 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 12 11 13 2 arch/arm/mm/fault.c:147 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24430 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 arch/arm/mm/fault.c:147 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; rd  out 	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 844, 845, 846, 847, 848


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 139 142 143
;; live  kill	 14 [lr]
;; rd  in  	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 844, 845, 846, 847, 848
;; rd  gen 	(4)
843, 849, 850, 851
;; rd  kill	(12)
54, 55, 56, 57, 58, 59, 60, 61, 843, 849, 850, 851

;; Pred edge  2 [0.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 arch/arm/mm/fault.c:153 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 3 arch/arm/mm/fault.c:153 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10a82a00 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 17 16 18 3 arch/arm/mm/fault.c:154 (set (reg:SI 139)
        (const_int 4095 [0xfff])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 56 3 arch/arm/mm/fault.c:154 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ addr ])
            (reg:SI 139))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 136 [ addr ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 56 18 57 3 arch/arm/mm/fault.c:154 discrim 2 (set (reg/f:SI 142)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x114c3f80>)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 59 3 arch/arm/mm/fault.c:154 discrim 2 (set (reg/f:SI 143)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114ed540>)) 167 {*arm_movsi_insn} (nil))

(insn 59 57 30 3 arch/arm/mm/fault.c:154 discrim 2 (set (reg/f:SI 133 [ iftmp.320 ])
        (if_then_else:SI (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/f:SI 142)
            (reg/f:SI 143))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 142)
            (expr_list:REG_DEAD (reg:CC 24 cc)
                (expr_list:REG_EQUAL (if_then_else:SI (leu (reg:CC 24 cc)
                            (const_int 0 [0x0]))
                        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x114c3f80>)
                        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114ed540>))
                    (nil))))))

(insn 30 59 31 3 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10b2ecc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10b2ecc0>)
        (nil)))

(insn 31 30 32 3 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 1 r1)
        (reg/f:SI 133 [ iftmp.320 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ iftmp.320 ])
        (nil)))

(insn 32 31 33 3 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 34 3 arch/arm/mm/fault.c:154 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 34 33 35 3 arch/arm/mm/fault.c:159 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ mm ])
        (nil)))

(insn 35 34 36 3 arch/arm/mm/fault.c:159 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ addr ])
        (nil)))

(call_insn 36 35 38 3 arch/arm/mm/fault.c:159 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_pte") [flags 0x3] <function_decl 0x512d9600 show_pte>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 38 36 39 3 arch/arm/mm/fault.c:160 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x114ebb40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x114ebb40>)
        (nil)))

(insn 39 38 40 3 arch/arm/mm/fault.c:160 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ regs ])
        (nil)))

(insn 40 39 41 3 arch/arm/mm/fault.c:160 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ fsr ])
        (nil)))

(call_insn 41 40 42 3 arch/arm/mm/fault.c:160 (parallel [
            (call (mem:SI (symbol_ref:SI ("die") [flags 0x41] <function_decl 0x512d9300 die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 42 41 43 3 arch/arm/mm/fault.c:161 (set (reg:SI 0 r0)
        (reg:SI 134 [ D.24430 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.24430 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 43 42 44 3 arch/arm/mm/fault.c:161 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10a82a00 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 44 43 45 3 arch/arm/mm/fault.c:162 (set (reg:SI 0 r0)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 46 3 arch/arm/mm/fault.c:162 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_exit") [flags 0x41] <function_decl 0x10a67900 do_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_NORETURN (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 843, 844, 845, 846, 847, 848, 849, 850, 851



(barrier 46 45 52)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 844, 845, 846, 847, 848
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [100.0%] 
(code_label 52 46 55 4 18 "" [1 uses])

(note 55 52 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 844, 845, 846, 847, 848


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_page_fault (do_page_fault)[0:1293]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 43 n_edges 65 count 81 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 43 n_edges 65 count 84 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 43 n_edges 65 count 84 (    2)


do_page_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,23u} r1={23d,8u} r2={21d,6u} r3={21d,5u} r11={1d,42u} r12={16d} r13={1d,67u,2d} r14={16d,1u} r15={15d} r16={15d} r17={15d} r18={15d} r19={15d} r20={15d} r21={15d} r22={15d} r23={15d} r24={45d,29u,1d} r25={1d,44u,4d} r26={1d,41u} r27={15d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={15d} r38={15d} r39={15d} r40={15d} r41={15d} r42={15d} r43={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r81={15d} r82={15d} r83={15d} r84={15d} r85={15d} r86={15d} r87={15d} r88={15d} r89={15d} r90={15d} r91={15d} r92={15d} r93={15d} r94={15d} r95={15d} r96={15d} r97={15d} r98={15d} r99={15d} r100={15d} r101={15d} r102={15d} r103={15d} r104={15d} r105={15d} r106={15d} r107={15d} r108={15d} r109={15d} r110={15d} r111={15d} r112={15d} r113={15d} r114={15d} r115={15d} r116={15d} r117={15d} r118={15d} r119={15d} r120={15d} r121={15d} r122={15d} r123={15d} r124={15d} r125={15d} r126={15d} r127={15d} r133={2d,1u} r134={2d,1u} r135={1d,1u} r136={1d,5u} r137={2d,2u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r145={2d,1u} r146={2d,1u} r147={3d,7u,1d} r148={1d,5u} r149={1d,6u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,3u} r156={1d,8u,1d} r157={1d,4u} r158={1d,11u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,2u} r195={1d,1u} r196={1d,2u} r197={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r205={1d,2u} r206={1d,2u} r207={1d,1u} r208={1d,1u} 
;;    total ref usage 2281{1896d,376u,9e} in 187{172 regular + 15 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,30] 1[30,23] 2[53,21] 3[74,21] 11[95,1] 12[96,16] 13[112,1] 14[113,16] 15[129,15] 16[144,15] 17[159,15] 18[174,15] 19[189,15] 20[204,15] 21[219,15] 22[234,15] 23[249,15] 24[264,45] 25[309,1] 26[310,1] 27[311,15] 28[326,15] 29[341,15] 30[356,15] 31[371,15] 32[386,15] 33[401,15] 34[416,15] 35[431,15] 36[446,15] 37[461,15] 38[476,15] 39[491,15] 40[506,15] 41[521,15] 42[536,15] 43[551,15] 44[566,15] 45[581,15] 46[596,15] 47[611,15] 48[626,15] 49[641,15] 50[656,15] 51[671,15] 52[686,15] 53[701,15] 54[716,15] 55[731,15] 56[746,15] 57[761,15] 58[776,15] 59[791,15] 60[806,15] 61[821,15] 62[836,15] 63[851,15] 64[866,15] 65[881,15] 66[896,15] 67[911,15] 68[926,15] 69[941,15] 70[956,15] 71[971,15] 72[986,15] 73[1001,15] 74[1016,15] 75[1031,15] 76[1046,15] 77[1061,15] 78[1076,15] 79[1091,15] 80[1106,15] 81[1121,15] 82[1136,15] 83[1151,15] 84[1166,15] 85[1181,15] 86[1196,15] 87[1211,15] 88[1226,15] 89[1241,15] 90[1256,15] 91[1271,15] 92[1286,15] 93[1301,15] 94[1316,15] 95[1331,15] 96[1346,15] 97[1361,15] 98[1376,15] 99[1391,15] 100[1406,15] 101[1421,15] 102[1436,15] 103[1451,15] 104[1466,15] 105[1481,15] 106[1496,15] 107[1511,15] 108[1526,15] 109[1541,15] 110[1556,15] 111[1571,15] 112[1586,15] 113[1601,15] 114[1616,15] 115[1631,15] 116[1646,15] 117[1661,15] 118[1676,15] 119[1691,15] 120[1706,15] 121[1721,15] 122[1736,15] 123[1751,15] 124[1766,15] 125[1781,15] 126[1796,15] 127[1811,15] 133[1826,2] 134[1828,2] 135[1830,1] 136[1831,1] 137[1832,2] 138[1834,1] 139[1835,1] 140[1836,1] 141[1837,1] 142[1838,1] 145[1839,2] 146[1841,2] 147[1843,3] 148[1846,1] 149[1847,1] 151[1848,1] 152[1849,1] 153[1850,1] 154[1851,1] 156[1852,1] 157[1853,1] 158[1854,1] 159[1855,1] 160[1856,1] 161[1857,1] 162[1858,1] 163[1859,1] 164[1860,1] 165[1861,1] 166[1862,1] 168[1863,1] 170[1864,1] 171[1865,1] 172[1866,1] 173[1867,1] 174[1868,1] 176[1869,1] 178[1870,1] 179[1871,1] 180[1872,1] 181[1873,1] 182[1874,1] 184[1875,1] 185[1876,1] 186[1877,1] 187[1878,1] 188[1879,1] 189[1880,1] 190[1881,1] 191[1882,1] 192[1883,1] 193[1884,1] 195[1885,1] 196[1886,1] 197[1887,1] 199[1888,1] 200[1889,1] 201[1890,1] 202[1891,1] 205[1892,1] 206[1893,1] 207[1894,1] 208[1895,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d29(0){ }d52(1){ }d73(2){ }d94(3){ }d95(11){ }d111(12){ }d112(13){ }d128(14){ }d309(25){ }d310(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
29, 52, 73, 94, 95, 111, 112, 128, 309, 310
;; rd  kill	(131)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 309, 310
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
29, 52, 73, 94, 95, 111, 112, 128, 309, 310

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d95(bb 0 insn -1) }u1(13){ d112(bb 0 insn -1) }u2(25){ d309(bb 0 insn -1) }u3(26){ d310(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 148 149 156 157 158 159 160 161 162
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148 149 156 157 158 159 160 161 162
;; live  kill	
;; rd  in  	(10)
29, 52, 73, 94, 95, 111, 112, 128, 309, 310
;; rd  gen 	(10)
308, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858
;; rd  kill	(9)
1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; rd  out 	(20)
29, 52, 73, 94, 95, 111, 112, 128, 308, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d73(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 13 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 10
;;      reg 160 { d1856(bb 2 insn 9) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 159 { d1855(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 149 { d1847(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 158 { d1854(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 14
;;      reg 162 { d1858(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 161 { d1857(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 16
;;      reg 24 { d308(bb 2 insn 15) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ d95(bb 0 insn -1) }u17(13){ d112(bb 0 insn -1) }u18(25){ d309(bb 0 insn -1) }u19(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	
;; live  kill	 24 [cc]
;; rd  in  	(20)
29, 52, 73, 94, 95, 111, 112, 128, 308, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; rd  out 	(19)
29, 52, 73, 94, 95, 111, 112, 128, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }

( 3 2 )->[4]->( 41 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ d95(bb 0 insn -1) }u21(13){ d112(bb 0 insn -1) }u22(25){ d309(bb 0 insn -1) }u23(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 163 164 165 166 168 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	 24 [cc] 163 164 165 166 168 170 171 172 173
;; live  kill	
;; rd  in  	(20)
29, 52, 73, 94, 95, 111, 112, 128, 308, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858
;; rd  gen 	(10)
304, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867
;; rd  kill	(9)
1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; rd  out 	(29)
29, 52, 73, 94, 95, 111, 112, 128, 304, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 13 { d112(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 164 { d1860(bb 4 insn 22) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 2 uid 24
;;      reg 163 { d1859(bb 4 insn 23) }
;;   UD chains for insn luid 3 uid 25
;;      reg 166 { d1862(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 26
;;      reg 165 { d1861(bb 4 insn 25) }
;;   UD chains for insn luid 5 uid 27
;;      reg 24 { d306(bb 4 insn 26) }
;;   UD chains for insn luid 6 uid 29
;;      reg 148 { d1846(bb 2 insn 12) }
;;   UD chains for insn luid 7 uid 30
;;      reg 24 { d305(bb 4 insn 29) }
;;   UD chains for insn luid 8 uid 32
;;      reg 168 { d1863(bb 4 insn 27) }
;;      reg 170 { d1864(bb 4 insn 30) }
;;   UD chains for insn luid 9 uid 33
;;      reg 171 { d1865(bb 4 insn 32) }
;;   UD chains for insn luid 10 uid 34
;;      reg 172 { d1866(bb 4 insn 33) }
;;   UD chains for insn luid 11 uid 35
;;      reg 173 { d1867(bb 4 insn 34) }
;;   UD chains for insn luid 12 uid 36
;;      reg 24 { d304(bb 4 insn 35) }

( 4 )->[5]->( 6 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ d95(bb 0 insn -1) }u40(13){ d112(bb 0 insn -1) }u41(25){ d309(bb 0 insn -1) }u42(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 154 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 153 154 206
;; live  kill	 14 [lr]
;; rd  in  	(29)
29, 52, 73, 94, 95, 111, 112, 128, 304, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867
;; rd  gen 	(5)
27, 302, 1850, 1851, 1893
;; rd  kill	(49)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1850, 1851, 1893
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; rd  out 	(31)
27, 52, 73, 94, 95, 111, 112, 302, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 148 { d1846(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 39
;;      reg 154 { d1851(bb 5 insn 38) }
;;   UD chains for insn luid 2 uid 40
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d28(bb 5 insn 39) }
;;   UD chains for insn luid 3 uid 41
;;      reg 0 { d27(bb 5 insn 40) }
;;   UD chains for insn luid 4 uid 42
;;      reg 153 { d1850(bb 5 insn 41) }
;;   UD chains for insn luid 5 uid 306
;;      reg 158 { d1854(bb 2 insn 4) }
;;   UD chains for insn luid 6 uid 43
;;      reg 24 { d302(bb 5 insn 42) }

( 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ d95(bb 0 insn -1) }u52(13){ d112(bb 0 insn -1) }u53(25){ d309(bb 0 insn -1) }u54(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; live  gen 	 24 [cc] 174
;; live  kill	
;; rd  in  	(31)
27, 52, 73, 94, 95, 111, 112, 302, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1893
;; rd  gen 	(2)
301, 1868
;; rd  kill	(1)
1868
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(32)
27, 52, 73, 94, 95, 111, 112, 301, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 46
;;      reg 206 { d1893(bb 5 insn 306) }
;;   UD chains for insn luid 1 uid 47
;;      reg 174 { d1868(bb 6 insn 46) }
;;   UD chains for insn luid 2 uid 48
;;      reg 24 { d301(bb 6 insn 47) }

( 6 )->[7]->( 41 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u58(11){ d95(bb 0 insn -1) }u59(13){ d112(bb 0 insn -1) }u60(25){ d309(bb 0 insn -1) }u61(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 152
;; live  kill	 14 [lr]
;; rd  in  	(32)
27, 52, 73, 94, 95, 111, 112, 301, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1893
;; rd  gen 	(3)
25, 299, 1849
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1849
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(33)
25, 52, 73, 94, 95, 111, 112, 299, 309, 310, 1846, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 158 { d1854(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 51
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d26(bb 7 insn 50) }
;;   UD chains for insn luid 2 uid 52
;;      reg 0 { d25(bb 7 insn 51) }
;;   UD chains for insn luid 3 uid 53
;;      reg 152 { d1849(bb 7 insn 52) }
;;   UD chains for insn luid 4 uid 54
;;      reg 24 { d299(bb 7 insn 53) }

( 6 7 )->[8]->( 11 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u68(11){ d95(bb 0 insn -1) }u69(13){ d112(bb 0 insn -1) }u70(25){ d309(bb 0 insn -1) }u71(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(35)
25, 27, 52, 73, 94, 95, 111, 112, 299, 301, 309, 310, 1846, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1893
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(35)
25, 27, 52, 73, 94, 95, 111, 112, 299, 301, 309, 310, 1846, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 57
;;      reg 154 { d1851(bb 5 insn 38) }
;;   UD chains for insn luid 1 uid 58
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d24(bb 8 insn 57) }

( 5 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u75(11){ d95(bb 0 insn -1) }u76(13){ d112(bb 0 insn -1) }u77(25){ d309(bb 0 insn -1) }u78(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206
;; lr  def 	 24 [cc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; live  gen 	 24 [cc] 176
;; live  kill	
;; rd  in  	(31)
27, 52, 73, 94, 95, 111, 112, 302, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1893
;; rd  gen 	(2)
297, 1869
;; rd  kill	(1)
1869
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(32)
27, 52, 73, 94, 95, 111, 112, 297, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 64
;;      reg 206 { d1893(bb 5 insn 306) }
;;   UD chains for insn luid 1 uid 65
;;      reg 176 { d1869(bb 9 insn 64) }
;;   UD chains for insn luid 2 uid 66
;;      reg 24 { d297(bb 9 insn 65) }

( 9 )->[10]->( 41 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(11){ d95(bb 0 insn -1) }u83(13){ d112(bb 0 insn -1) }u84(25){ d309(bb 0 insn -1) }u85(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 151
;; live  kill	 14 [lr]
;; rd  in  	(32)
27, 52, 73, 94, 95, 111, 112, 297, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1893
;; rd  gen 	(3)
21, 295, 1848
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1848
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(33)
21, 52, 73, 94, 95, 111, 112, 295, 309, 310, 1846, 1847, 1848, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 68
;;      reg 158 { d1854(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 69
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d22(bb 10 insn 68) }
;;   UD chains for insn luid 2 uid 70
;;      reg 0 { d21(bb 10 insn 69) }
;;   UD chains for insn luid 3 uid 71
;;      reg 151 { d1848(bb 10 insn 70) }
;;   UD chains for insn luid 4 uid 72
;;      reg 24 { d295(bb 10 insn 71) }

( 9 10 8 )->[11]->( 21 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(11){ d95(bb 0 insn -1) }u93(13){ d112(bb 0 insn -1) }u94(25){ d309(bb 0 insn -1) }u95(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(40)
21, 25, 27, 52, 73, 94, 95, 111, 112, 295, 297, 299, 301, 309, 310, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1893
;; rd  gen 	(3)
19, 293, 1831
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1831
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(36)
19, 52, 73, 94, 95, 111, 112, 293, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 75
;;      reg 148 { d1846(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 76
;;      reg 156 { d1852(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 77
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d20(bb 11 insn 75) }
;;      reg 1 { d47(bb 11 insn 76) }
;;   UD chains for insn luid 3 uid 78
;;      reg 0 { d19(bb 11 insn 77) }
;;   UD chains for insn luid 4 uid 79
;;      reg 136 { d1831(bb 11 insn 78) }
;;   UD chains for insn luid 5 uid 80
;;      reg 24 { d293(bb 11 insn 79) }

( 11 )->[12]->( 19 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u104(11){ d95(bb 0 insn -1) }u105(13){ d112(bb 0 insn -1) }u106(25){ d309(bb 0 insn -1) }u107(26){ d310(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 156
;; lr  def 	 24 [cc] 178
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 178
;; live  kill	
;; rd  in  	(36)
19, 52, 73, 94, 95, 111, 112, 293, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1893
;; rd  gen 	(2)
292, 1870
;; rd  kill	(1)
1870
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(37)
19, 52, 73, 94, 95, 111, 112, 292, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 82
;;      reg 136 { d1831(bb 11 insn 78) }
;;   UD chains for insn luid 1 uid 83
;;      reg 156 { d1852(bb 2 insn 2) }
;;      reg 178 { d1870(bb 12 insn 82) }
;;   UD chains for insn luid 2 uid 84
;;      reg 24 { d292(bb 12 insn 83) }

( 12 20 )->[13]->( 14 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u112(11){ d95(bb 0 insn -1) }u113(13){ d112(bb 0 insn -1) }u114(25){ d309(bb 0 insn -1) }u115(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 157
;; lr  def 	 24 [cc] 137 138 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 137 138 179 180
;; live  kill	
;; rd  in  	(42)
16, 19, 52, 73, 94, 95, 111, 112, 282, 292, 309, 310, 1830, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893
;; rd  gen 	(5)
289, 1832, 1834, 1871, 1872
;; rd  kill	(5)
1832, 1833, 1834, 1871, 1872
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; rd  out 	(45)
16, 19, 52, 73, 94, 95, 111, 112, 289, 309, 310, 1830, 1831, 1832, 1834, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1882, 1883, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 86
;;      reg 157 { d1853(bb 2 insn 3) }
;;   UD chains for insn luid 1 uid 87
;;      reg 138 { d1834(bb 13 insn 86) }
;;   UD chains for insn luid 2 uid 309
;;      reg 24 { d291(bb 13 insn 87) }
;;   UD chains for insn luid 3 uid 98
;;      reg 157 { d1853(bb 2 insn 3) }
;;   UD chains for insn luid 4 uid 317
;;      reg 24 { d290(bb 13 insn 98) }
;;      reg 137 { d1833(bb 13 insn 309) }
;;   UD chains for insn luid 5 uid 104
;;      reg 136 { d1831(bb 11 insn 78) }
;;   UD chains for insn luid 6 uid 105
;;      reg 137 { d1832(bb 13 insn 317) }
;;      reg 180 { d1872(bb 13 insn 104) }
;;   UD chains for insn luid 7 uid 106
;;      reg 179 { d1871(bb 13 insn 105) }
;;   UD chains for insn luid 8 uid 107
;;      reg 24 { d289(bb 13 insn 106) }

( 13 )->[14]->( 22 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u127(11){ d95(bb 0 insn -1) }u128(13){ d112(bb 0 insn -1) }u129(25){ d309(bb 0 insn -1) }u130(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 147
;; live  kill	
;; rd  in  	(45)
16, 19, 52, 73, 94, 95, 111, 112, 289, 309, 310, 1830, 1831, 1832, 1834, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1882, 1883, 1893
;; rd  gen 	(1)
1845
;; rd  kill	(3)
1843, 1844, 1845
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(46)
16, 19, 52, 73, 94, 95, 111, 112, 289, 309, 310, 1830, 1831, 1832, 1834, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1882, 1883, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }

( 13 )->[15]->( 22 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u131(11){ d95(bb 0 insn -1) }u132(13){ d112(bb 0 insn -1) }u133(25){ d309(bb 0 insn -1) }u134(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 181 182 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 147 181 182 184 185
;; live  kill	 14 [lr]
;; rd  in  	(45)
16, 19, 52, 73, 94, 95, 111, 112, 289, 309, 310, 1830, 1831, 1832, 1834, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1882, 1883, 1893
;; rd  gen 	(7)
17, 286, 1844, 1873, 1874, 1875, 1876
;; rd  kill	(53)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1843, 1844, 1845, 1873, 1874, 1875, 1876
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(49)
17, 52, 73, 94, 95, 111, 112, 286, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1882, 1883, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 114
;;      reg 156 { d1852(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 115
;;      reg 182 { d1874(bb 15 insn 114) }
;;   eq_note reg 156 { }
;;   UD chains for insn luid 2 uid 116
;;      reg 138 { d1834(bb 13 insn 86) }
;;   UD chains for insn luid 3 uid 117
;;      reg 24 { d288(bb 15 insn 116) }
;;   UD chains for insn luid 4 uid 118
;;      reg 148 { d1846(bb 2 insn 12) }
;;   UD chains for insn luid 5 uid 119
;;      reg 136 { d1831(bb 11 insn 78) }
;;   UD chains for insn luid 6 uid 120
;;      reg 181 { d1873(bb 15 insn 115) }
;;   UD chains for insn luid 7 uid 121
;;      reg 184 { d1875(bb 15 insn 117) }
;;   UD chains for insn luid 8 uid 122
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d18(bb 15 insn 118) }
;;      reg 1 { d45(bb 15 insn 119) }
;;      reg 2 { d67(bb 15 insn 120) }
;;      reg 3 { d88(bb 15 insn 121) }
;;   UD chains for insn luid 9 uid 123
;;      reg 0 { d17(bb 15 insn 122) }
;;   UD chains for insn luid 10 uid 124
;;      reg 147 { d1844(bb 15 insn 123) }
;;   UD chains for insn luid 11 uid 125
;;      reg 185 { d1876(bb 15 insn 124) }
;;   UD chains for insn luid 12 uid 126
;;      reg 24 { d286(bb 15 insn 125) }

( 15 )->[16]->( 17 18 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u153(11){ d95(bb 0 insn -1) }u154(13){ d112(bb 0 insn -1) }u155(25){ d309(bb 0 insn -1) }u156(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 24 [cc] 186
;; live  kill	
;; rd  in  	(49)
17, 52, 73, 94, 95, 111, 112, 286, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1882, 1883, 1893
;; rd  gen 	(2)
285, 1877
;; rd  kill	(1)
1877
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(50)
17, 52, 73, 94, 95, 111, 112, 285, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1882, 1883, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 128
;;      reg 147 { d1844(bb 15 insn 123) }
;;   UD chains for insn luid 1 uid 129
;;      reg 186 { d1877(bb 16 insn 128) }
;;   UD chains for insn luid 2 uid 130
;;      reg 24 { d285(bb 16 insn 129) }

( 16 )->[17]->( 22 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u160(11){ d95(bb 0 insn -1) }u161(13){ d112(bb 0 insn -1) }u162(25){ d309(bb 0 insn -1) }u163(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 187 188
;; live  kill	
;; rd  in  	(50)
17, 52, 73, 94, 95, 111, 112, 285, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1882, 1883, 1893
;; rd  gen 	(2)
1878, 1879
;; rd  kill	(2)
1878, 1879
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(52)
17, 52, 73, 94, 95, 111, 112, 285, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1882, 1883, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 132
;;      reg 149 { d1847(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 133
;;      reg 187 { d1878(bb 17 insn 132) }
;;   UD chains for insn luid 2 uid 134
;;      reg 149 { d1847(bb 2 insn 11) }
;;      reg 188 { d1879(bb 17 insn 133) }

( 16 )->[18]->( 22 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u168(11){ d95(bb 0 insn -1) }u169(13){ d112(bb 0 insn -1) }u170(25){ d309(bb 0 insn -1) }u171(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 189 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 189 190
;; live  kill	
;; rd  in  	(50)
17, 52, 73, 94, 95, 111, 112, 285, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1882, 1883, 1893
;; rd  gen 	(2)
1880, 1881
;; rd  kill	(2)
1880, 1881
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(52)
17, 52, 73, 94, 95, 111, 112, 285, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 139
;;      reg 149 { d1847(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 140
;;      reg 189 { d1880(bb 18 insn 139) }
;;   UD chains for insn luid 2 uid 141
;;      reg 149 { d1847(bb 2 insn 11) }
;;      reg 190 { d1881(bb 18 insn 140) }

( 12 )->[19]->( 20 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u176(11){ d95(bb 0 insn -1) }u177(13){ d112(bb 0 insn -1) }u178(25){ d309(bb 0 insn -1) }u179(26){ d310(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 191 192
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 191 192
;; live  kill	
;; rd  in  	(37)
19, 52, 73, 94, 95, 111, 112, 292, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1893
;; rd  gen 	(3)
284, 1882, 1883
;; rd  kill	(2)
1882, 1883
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(39)
19, 52, 73, 94, 95, 111, 112, 284, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 146
;;      reg 136 { d1831(bb 11 insn 78) }
;;   UD chains for insn luid 1 uid 147
;;      reg 192 { d1883(bb 19 insn 146) }
;;   UD chains for insn luid 2 uid 148
;;      reg 191 { d1882(bb 19 insn 147) }
;;   UD chains for insn luid 3 uid 149
;;      reg 24 { d284(bb 19 insn 148) }

( 19 )->[20]->( 13 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u184(11){ d95(bb 0 insn -1) }u185(13){ d112(bb 0 insn -1) }u186(25){ d309(bb 0 insn -1) }u187(26){ d310(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135
;; live  kill	 14 [lr]
;; rd  in  	(39)
19, 52, 73, 94, 95, 111, 112, 284, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893
;; rd  gen 	(3)
16, 282, 1830
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1830
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(40)
16, 52, 73, 94, 95, 111, 112, 282, 309, 310, 1830, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 152
;;      reg 156 { d1852(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 153
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d19(bb 11 insn 77) }
;;      reg 1 { d43(bb 20 insn 152) }
;;   UD chains for insn luid 2 uid 154
;;      reg 0 { d16(bb 20 insn 153) }
;;   UD chains for insn luid 3 uid 156
;;      reg 135 { d1830(bb 20 insn 154) }
;;   UD chains for insn luid 4 uid 157
;;      reg 24 { d282(bb 20 insn 156) }

( 19 20 11 )->[21]->( 22 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u195(11){ d95(bb 0 insn -1) }u196(13){ d112(bb 0 insn -1) }u197(25){ d309(bb 0 insn -1) }u198(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 147
;; live  kill	
;; rd  in  	(43)
16, 19, 52, 73, 94, 95, 111, 112, 282, 284, 293, 309, 310, 1830, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893
;; rd  gen 	(1)
1843
;; rd  kill	(3)
1843, 1844, 1845
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(44)
16, 19, 52, 73, 94, 95, 111, 112, 282, 284, 293, 309, 310, 1830, 1831, 1843, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }

( 21 15 14 17 18 )->[22]->( 23 27 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u199(11){ d95(bb 0 insn -1) }u200(13){ d112(bb 0 insn -1) }u201(25){ d309(bb 0 insn -1) }u202(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 141 142 205
;; live  kill	 14 [lr]
;; rd  in  	(63)
16, 17, 19, 52, 73, 94, 95, 111, 112, 282, 284, 285, 286, 289, 293, 309, 310, 1830, 1831, 1832, 1834, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1893
;; rd  gen 	(4)
280, 1837, 1838, 1892
;; rd  kill	(19)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1837, 1838, 1892
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(61)
16, 17, 19, 52, 73, 94, 95, 111, 112, 280, 309, 310, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 163
;;      reg 154 { d1851(bb 5 insn 38) }
;;   UD chains for insn luid 1 uid 164
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d15(bb 22 insn 163) }
;;   UD chains for insn luid 4 uid 167
;;      reg 142 { d1838(bb 22 insn 166) }
;;   UD chains for insn luid 5 uid 168
;;      reg 141 { d1837(bb 22 insn 167) }
;;   UD chains for insn luid 6 uid 169
;;      reg 24 { d280(bb 22 insn 168) }

( 22 )->[23]->( 25 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u209(11){ d95(bb 0 insn -1) }u210(13){ d112(bb 0 insn -1) }u211(25){ d309(bb 0 insn -1) }u212(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(61)
16, 17, 19, 52, 73, 94, 95, 111, 112, 280, 309, 310, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893
;; rd  gen 	(1)
279
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(61)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 171
;;      reg 158 { d1854(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 172
;;      reg 24 { d279(bb 23 insn 171) }

( 23 )->[24]->( 26 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u215(11){ d95(bb 0 insn -1) }u216(13){ d112(bb 0 insn -1) }u217(25){ d309(bb 0 insn -1) }u218(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 134
;; live  kill	
;; rd  in  	(61)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893
;; rd  gen 	(1)
1829
;; rd  kill	(2)
1828, 1829
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; rd  out 	(62)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 174
;;      reg 158 { d1854(bb 2 insn 4) }

( 23 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u220(11){ d95(bb 0 insn -1) }u221(13){ d112(bb 0 insn -1) }u222(25){ d309(bb 0 insn -1) }u223(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 1 [r1] 134 193
;; live  kill	 14 [lr]
;; rd  in  	(61)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893
;; rd  gen 	(2)
1828, 1884
;; rd  kill	(19)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1828, 1829, 1884
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; rd  out 	(63)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1828, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 179
;;      reg 25 { d309(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 180
;;      reg 193 { d1884(bb 25 insn 179) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 3 uid 182
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d13(bb 25 insn 180) }
;;      reg 1 { d40(bb 25 insn 181) }
;;   UD chains for insn luid 4 uid 183
;;      reg 193 { d1884(bb 25 insn 179) }
;;   eq_note reg 25 { }

( 25 24 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u232(11){ d95(bb 0 insn -1) }u233(13){ d112(bb 0 insn -1) }u234(25){ d309(bb 0 insn -1) }u235(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 156 205
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(64)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1892, 1893
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(64)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 186
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 134 { d1829(bb 24 insn 174) d1828(bb 25 insn 183) }
;;   UD chains for insn luid 1 uid 301
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 156 { d1852(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 302
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 205 { d1892(bb 22 insn 300) }
;;   UD chains for insn luid 5 uid 190
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d11(bb 26 insn 188) }
;;      reg 2 { d62(bb 26 insn 189) }
;;      reg 3 { d83(bb 26 insn 189) }

( 26 22 )->[27]->( 28 33 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u246(11){ d95(bb 0 insn -1) }u247(13){ d112(bb 0 insn -1) }u248(25){ d309(bb 0 insn -1) }u249(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc] 195
;; live  kill	
;; rd  in  	(65)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 280, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1892, 1893
;; rd  gen 	(2)
276, 1885
;; rd  kill	(1)
1885
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(65)
16, 17, 19, 52, 73, 94, 95, 111, 112, 276, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 193
;;      reg 147 { d1845(bb 14 insn 109) d1844(bb 15 insn 123) d1843(bb 21 insn 160) }
;;   UD chains for insn luid 1 uid 194
;;      reg 195 { d1885(bb 27 insn 193) }
;;   UD chains for insn luid 2 uid 195
;;      reg 24 { d276(bb 27 insn 194) }

( 27 )->[28]->( 29 33 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u253(11){ d95(bb 0 insn -1) }u254(13){ d112(bb 0 insn -1) }u255(25){ d309(bb 0 insn -1) }u256(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(65)
16, 17, 19, 52, 73, 94, 95, 111, 112, 276, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;; rd  gen 	(3)
275, 1835, 1836
;; rd  kill	(2)
1835, 1836
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(67)
16, 17, 19, 52, 73, 94, 95, 111, 112, 275, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 198
;;      reg 140 { d1836(bb 28 insn 197) }
;;   UD chains for insn luid 2 uid 199
;;      reg 139 { d1835(bb 28 insn 198) }
;;   UD chains for insn luid 3 uid 200
;;      reg 24 { d275(bb 28 insn 199) }

( 28 )->[29]->( 31 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u260(11){ d95(bb 0 insn -1) }u261(13){ d112(bb 0 insn -1) }u262(25){ d309(bb 0 insn -1) }u263(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(67)
16, 17, 19, 52, 73, 94, 95, 111, 112, 275, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;; rd  gen 	(1)
274
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(67)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 202
;;      reg 158 { d1854(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 203
;;      reg 24 { d274(bb 29 insn 202) }

( 29 )->[30]->( 32 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u266(11){ d95(bb 0 insn -1) }u267(13){ d112(bb 0 insn -1) }u268(25){ d309(bb 0 insn -1) }u269(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 133
;; live  kill	
;; rd  in  	(67)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;; rd  gen 	(1)
1827
;; rd  kill	(2)
1826, 1827
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; rd  out 	(68)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 205
;;      reg 158 { d1854(bb 2 insn 4) }

( 29 )->[31]->( 32 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u271(11){ d95(bb 0 insn -1) }u272(13){ d112(bb 0 insn -1) }u273(25){ d309(bb 0 insn -1) }u274(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 1 [r1] 133 196
;; live  kill	 14 [lr]
;; rd  in  	(67)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;; rd  gen 	(2)
1826, 1886
;; rd  kill	(19)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1826, 1827, 1886
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; rd  out 	(69)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1826, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 210
;;      reg 25 { d309(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 211
;;      reg 196 { d1886(bb 31 insn 210) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 3 uid 213
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d9(bb 31 insn 211) }
;;      reg 1 { d37(bb 31 insn 212) }
;;   UD chains for insn luid 4 uid 214
;;      reg 196 { d1886(bb 31 insn 210) }
;;   eq_note reg 25 { }

( 31 30 )->[32]->( 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u283(11){ d95(bb 0 insn -1) }u284(13){ d112(bb 0 insn -1) }u285(25){ d309(bb 0 insn -1) }u286(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 156 205
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(70)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1893
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(70)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 217
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 133 { d1827(bb 30 insn 205) d1826(bb 31 insn 214) }
;;   UD chains for insn luid 1 uid 303
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 156 { d1852(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 304
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 205 { d1892(bb 22 insn 300) }
;;   UD chains for insn luid 5 uid 221
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d7(bb 32 insn 219) }
;;      reg 2 { d59(bb 32 insn 220) }
;;      reg 3 { d80(bb 32 insn 220) }

( 28 27 32 )->[33]->( 42 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u297(11){ d95(bb 0 insn -1) }u298(13){ d112(bb 0 insn -1) }u299(25){ d309(bb 0 insn -1) }u300(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 197
;; live  kill	
;; rd  in  	(72)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 275, 276, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1893
;; rd  gen 	(2)
271, 1887
;; rd  kill	(1)
1887
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(71)
16, 17, 19, 52, 73, 94, 95, 111, 112, 271, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 225
;;      reg 147 { d1845(bb 14 insn 109) d1844(bb 15 insn 123) d1843(bb 21 insn 160) }
;;   eq_note reg 147 { }
;;   UD chains for insn luid 1 uid 226
;;      reg 197 { d1887(bb 33 insn 225) }
;;   UD chains for insn luid 2 uid 227
;;      reg 24 { d271(bb 33 insn 226) }

( 33 )->[34]->( 35 36 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u305(11){ d95(bb 0 insn -1) }u306(13){ d112(bb 0 insn -1) }u307(25){ d309(bb 0 insn -1) }u308(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 199
;; live  kill	
;; rd  in  	(71)
16, 17, 19, 52, 73, 94, 95, 111, 112, 271, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1892, 1893
;; rd  gen 	(2)
270, 1888
;; rd  kill	(1)
1888
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(72)
16, 17, 19, 52, 73, 94, 95, 111, 112, 270, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 229
;;      reg 147 { d1845(bb 14 insn 109) d1844(bb 15 insn 123) d1843(bb 21 insn 160) }
;;   UD chains for insn luid 1 uid 230
;;      reg 199 { d1888(bb 34 insn 229) }
;;   UD chains for insn luid 2 uid 231
;;      reg 24 { d270(bb 34 insn 230) }

( 34 )->[35]->( 42 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u312(11){ d95(bb 0 insn -1) }u313(13){ d112(bb 0 insn -1) }u314(25){ d309(bb 0 insn -1) }u315(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(72)
16, 17, 19, 52, 73, 94, 95, 111, 112, 270, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1893
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(72)
16, 17, 19, 52, 73, 94, 95, 111, 112, 270, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 233
;;      reg 13 { d112(bb 0 insn -1) }

( 34 )->[36]->( 41 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u317(11){ d95(bb 0 insn -1) }u318(13){ d112(bb 0 insn -1) }u319(25){ d309(bb 0 insn -1) }u320(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 200 201
;; live  kill	
;; rd  in  	(72)
16, 17, 19, 52, 73, 94, 95, 111, 112, 270, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1893
;; rd  gen 	(3)
268, 1889, 1890
;; rd  kill	(2)
1889, 1890
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(74)
16, 17, 19, 52, 73, 94, 95, 111, 112, 268, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 238
;;      reg 158 { d1854(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 239
;;      reg 201 { d1890(bb 36 insn 238) }
;;   UD chains for insn luid 2 uid 240
;;      reg 200 { d1889(bb 36 insn 239) }
;;   UD chains for insn luid 3 uid 241
;;      reg 24 { d268(bb 36 insn 240) }

( 36 )->[37]->( 38 39 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u325(11){ d95(bb 0 insn -1) }u326(13){ d112(bb 0 insn -1) }u327(25){ d309(bb 0 insn -1) }u328(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  gen 	 24 [cc] 202
;; live  kill	
;; rd  in  	(74)
16, 17, 19, 52, 73, 94, 95, 111, 112, 268, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893
;; rd  gen 	(2)
267, 1891
;; rd  kill	(1)
1891
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; rd  out 	(75)
16, 17, 19, 52, 73, 94, 95, 111, 112, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 243
;;      reg 147 { d1845(bb 14 insn 109) d1844(bb 15 insn 123) d1843(bb 21 insn 160) }
;;   UD chains for insn luid 1 uid 244
;;      reg 202 { d1891(bb 37 insn 243) }
;;   UD chains for insn luid 2 uid 245
;;      reg 24 { d267(bb 37 insn 244) }

( 37 )->[38]->( 40 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u332(11){ d95(bb 0 insn -1) }u333(13){ d112(bb 0 insn -1) }u334(25){ d309(bb 0 insn -1) }u335(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; live  gen 	 145 146
;; live  kill	
;; rd  in  	(75)
16, 17, 19, 52, 73, 94, 95, 111, 112, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893
;; rd  gen 	(2)
1840, 1842
;; rd  kill	(4)
1839, 1840, 1841, 1842
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; rd  out 	(77)
16, 17, 19, 52, 73, 94, 95, 111, 112, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }

( 37 )->[39]->( 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u336(11){ d95(bb 0 insn -1) }u337(13){ d112(bb 0 insn -1) }u338(25){ d309(bb 0 insn -1) }u339(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 145 146 207 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  gen 	 24 [cc] 145 146 207 208
;; live  kill	
;; rd  in  	(75)
16, 17, 19, 52, 73, 94, 95, 111, 112, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893
;; rd  gen 	(5)
266, 1839, 1841, 1894, 1895
;; rd  kill	(6)
1839, 1840, 1841, 1842, 1894, 1895
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; rd  out 	(79)
16, 17, 19, 52, 73, 94, 95, 111, 112, 266, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 253
;;      reg 147 { d1845(bb 14 insn 109) d1844(bb 15 insn 123) d1843(bb 21 insn 160) }
;;   UD chains for insn luid 3 uid 313
;;      reg 24 { d266(bb 39 insn 253) }
;;      reg 207 { d1894(bb 39 insn 310) }
;;      reg 208 { d1895(bb 39 insn 311) }
;;   eq_note reg 24 { }

( 39 38 )->[40]->( 42 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u345(11){ d95(bb 0 insn -1) }u346(13){ d112(bb 0 insn -1) }u347(25){ d309(bb 0 insn -1) }u348(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(82)
16, 17, 19, 52, 73, 94, 95, 111, 112, 266, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(82)
16, 17, 19, 52, 73, 94, 95, 111, 112, 266, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 266
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 145 { d1840(bb 38 insn 247) d1839(bb 39 insn 313) }
;;   UD chains for insn luid 1 uid 267
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 158 { d1854(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 268
;;      reg 149 { d1847(bb 2 insn 11) }
;;   UD chains for insn luid 3 uid 269
;;      reg 156 { d1852(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 270
;;      reg 157 { d1853(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 271
;;      reg 146 { d1842(bb 38 insn 248) d1841(bb 39 insn 315) }
;;   UD chains for insn luid 6 uid 272
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d4(bb 40 insn 268) }
;;      reg 1 { d33(bb 40 insn 269) }
;;      reg 2 { d56(bb 40 insn 270) }
;;      reg 3 { d77(bb 40 insn 271) }

( 4 7 10 36 )->[41]->( 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u362(11){ d95(bb 0 insn -1) }u363(13){ d112(bb 0 insn -1) }u364(25){ d309(bb 0 insn -1) }u365(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(81)
16, 17, 19, 21, 25, 29, 52, 73, 94, 95, 111, 112, 128, 268, 295, 299, 304, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(80)
16, 17, 19, 21, 25, 29, 52, 73, 94, 95, 111, 112, 268, 295, 299, 304, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 277
;;      reg 148 { d1846(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 278
;;      reg 156 { d1852(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 279
;;      reg 157 { d1853(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 280
;;      reg 158 { d1854(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 281
;;      reg 13 { d112(bb 0 insn -1) }
;;      reg 0 { d2(bb 41 insn 277) }
;;      reg 1 { d31(bb 41 insn 278) }
;;      reg 2 { d54(bb 41 insn 279) }
;;      reg 3 { d75(bb 41 insn 280) }

( 41 33 35 40 )->[42]->( 1 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u375(11){ d95(bb 0 insn -1) }u376(13){ d112(bb 0 insn -1) }u377(25){ d309(bb 0 insn -1) }u378(26){ d310(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(91)
16, 17, 19, 21, 25, 29, 52, 73, 94, 95, 111, 112, 266, 267, 268, 270, 271, 295, 299, 304, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895
;; rd  gen 	(1)
0
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(86)
0, 52, 73, 94, 95, 111, 112, 266, 267, 268, 270, 271, 295, 299, 304, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895
;;  UD chains for artificial uses
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 25 { d309(bb 0 insn -1) }
;;   reg 26 { d310(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 294
;;      reg 0 { d0(bb 42 insn 288) }

( 42 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u380(0){ d0(bb 42 insn 288) }u381(11){ d95(bb 0 insn -1) }u382(13){ d112(bb 0 insn -1) }u383(14){ }u384(25){ d309(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(86)
0, 52, 73, 94, 95, 111, 112, 266, 267, 268, 270, 271, 295, 299, 304, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(86)
0, 52, 73, 94, 95, 111, 112, 266, 267, 268, 270, 271, 295, 299, 304, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 42 insn 288) }
;;   reg 11 { d95(bb 0 insn -1) }
;;   reg 13 { d112(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d309(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 18 to worklist
  Adding insn 36 to worklist
  Adding insn 43 to worklist
  Adding insn 40 to worklist
  Adding insn 48 to worklist
  Adding insn 54 to worklist
  Adding insn 51 to worklist
  Adding insn 318 to worklist
  Adding insn 58 to worklist
  Adding insn 66 to worklist
  Adding insn 72 to worklist
  Adding insn 69 to worklist
  Adding insn 80 to worklist
  Adding insn 77 to worklist
  Adding insn 84 to worklist
  Adding insn 107 to worklist
  Adding insn 320 to worklist
  Adding insn 126 to worklist
  Adding insn 122 to worklist
  Adding insn 130 to worklist
  Adding insn 322 to worklist
  Adding insn 134 to worklist
  Adding insn 324 to worklist
  Adding insn 141 to worklist
  Adding insn 149 to worklist
  Adding insn 157 to worklist
  Adding insn 153 to worklist
  Adding insn 169 to worklist
  Adding insn 167 to worklist
  Adding insn 164 to worklist
  Adding insn 172 to worklist
  Adding insn 326 to worklist
  Adding insn 182 to worklist
  Adding insn 190 to worklist
  Adding insn 302 to worklist
  Adding insn 301 to worklist
  Adding insn 186 to worklist
  Adding insn 195 to worklist
  Adding insn 200 to worklist
  Adding insn 198 to worklist
  Adding insn 203 to worklist
  Adding insn 328 to worklist
  Adding insn 213 to worklist
  Adding insn 221 to worklist
  Adding insn 304 to worklist
  Adding insn 303 to worklist
  Adding insn 217 to worklist
  Adding insn 227 to worklist
  Adding insn 231 to worklist
  Adding insn 330 to worklist
  Adding insn 233 to worklist
  Adding insn 241 to worklist
  Adding insn 245 to worklist
  Adding insn 332 to worklist
  Adding insn 334 to worklist
  Adding insn 272 to worklist
  Adding insn 267 to worklist
  Adding insn 266 to worklist
  Adding insn 281 to worklist
  Adding insn 294 to worklist
Finished finding needed instructions:
  Adding insn 288 to worklist
Processing use of (reg 0 r0) in insn 294:
Processing use of (reg 13 sp) in insn 281:
Processing use of (reg 0 r0) in insn 281:
  Adding insn 277 to worklist
Processing use of (reg 1 r1) in insn 281:
  Adding insn 278 to worklist
Processing use of (reg 2 r2) in insn 281:
  Adding insn 279 to worklist
Processing use of (reg 3 r3) in insn 281:
  Adding insn 280 to worklist
Processing use of (reg 158 [ regs ]) in insn 280:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 157 [ fsr ]) in insn 279:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 156 [ addr ]) in insn 278:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 148 [ mm ]) in insn 277:
  Adding insn 12 to worklist
Processing use of (reg 149 [ tsk ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 159) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 160) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 13 sp) in insn 266:
Processing use of (reg 145 [ code ]) in insn 266:
  Adding insn 247 to worklist
  Adding insn 313 to worklist
Processing use of (reg 24 cc) in insn 313:
  Adding insn 253 to worklist
Processing use of (reg 207) in insn 313:
  Adding insn 310 to worklist
Processing use of (reg 208) in insn 313:
  Adding insn 311 to worklist
Processing use of (reg 147 [ fault ]) in insn 253:
  Adding insn 109 to worklist
  Adding insn 123 to worklist
  Adding insn 160 to worklist
Processing use of (reg 0 r0) in insn 123:
Processing use of (reg 13 sp) in insn 267:
Processing use of (reg 158 [ regs ]) in insn 267:
Processing use of (reg 13 sp) in insn 272:
Processing use of (reg 0 r0) in insn 272:
  Adding insn 268 to worklist
Processing use of (reg 1 r1) in insn 272:
  Adding insn 269 to worklist
Processing use of (reg 2 r2) in insn 272:
  Adding insn 270 to worklist
Processing use of (reg 3 r3) in insn 272:
  Adding insn 271 to worklist
Processing use of (reg 146 [ sig ]) in insn 271:
  Adding insn 248 to worklist
  Adding insn 315 to worklist
Processing use of (reg 157 [ fsr ]) in insn 270:
Processing use of (reg 156 [ addr ]) in insn 269:
Processing use of (reg 149 [ tsk ]) in insn 268:
Processing use of (reg 24 cc) in insn 245:
  Adding insn 244 to worklist
Processing use of (reg 202) in insn 244:
  Adding insn 243 to worklist
Processing use of (reg 147 [ fault ]) in insn 243:
Processing use of (reg 24 cc) in insn 241:
  Adding insn 240 to worklist
Processing use of (reg 200) in insn 240:
  Adding insn 239 to worklist
Processing use of (reg 201 [ <variable>.uregs+64 ]) in insn 239:
  Adding insn 238 to worklist
Processing use of (reg 158 [ regs ]) in insn 238:
Processing use of (reg 13 sp) in insn 233:
Processing use of (reg 24 cc) in insn 231:
  Adding insn 230 to worklist
Processing use of (reg 199) in insn 230:
  Adding insn 229 to worklist
Processing use of (reg 147 [ fault ]) in insn 229:
Processing use of (reg 24 cc) in insn 227:
  Adding insn 226 to worklist
Processing use of (reg 197) in insn 226:
  Adding insn 225 to worklist
Processing use of (reg 147 [ fault ]) in insn 225:
Processing use of (reg 13 sp) in insn 217:
Processing use of (reg 133 [ regs.463 ]) in insn 217:
  Adding insn 205 to worklist
  Adding insn 214 to worklist
Processing use of (reg 196) in insn 214:
  Adding insn 210 to worklist
Processing use of (reg 25 sfp) in insn 210:
Processing use of (reg 158 [ regs ]) in insn 205:
Processing use of (reg 13 sp) in insn 303:
Processing use of (reg 156 [ addr ]) in insn 303:
Processing use of (reg 13 sp) in insn 304:
Processing use of (reg 205 [ D.24563+4 ]) in insn 304:
  Adding insn 300 to worklist
Processing use of (reg 13 sp) in insn 221:
Processing use of (reg 0 r0) in insn 221:
  Adding insn 219 to worklist
Processing use of (reg 2 r2) in insn 221:
  Adding insn 220 to worklist
Processing use of (reg 3 r3) in insn 221:
Processing use of (reg 13 sp) in insn 213:
Processing use of (reg 0 r0) in insn 213:
  Adding insn 211 to worklist
Processing use of (reg 1 r1) in insn 213:
  Adding insn 212 to worklist
Processing use of (reg 196) in insn 211:
Processing use of (reg 24 cc) in insn 203:
  Adding insn 202 to worklist
Processing use of (reg 158 [ regs ]) in insn 202:
Processing use of (reg 140 [ D.24847 ]) in insn 198:
  Adding insn 197 to worklist
Processing use of (reg 24 cc) in insn 200:
  Adding insn 199 to worklist
Processing use of (reg 139 [ D.24848 ]) in insn 199:
Processing use of (reg 24 cc) in insn 195:
  Adding insn 194 to worklist
Processing use of (reg 195) in insn 194:
  Adding insn 193 to worklist
Processing use of (reg 147 [ fault ]) in insn 193:
Processing use of (reg 13 sp) in insn 186:
Processing use of (reg 134 [ regs.462 ]) in insn 186:
  Adding insn 174 to worklist
  Adding insn 183 to worklist
Processing use of (reg 193) in insn 183:
  Adding insn 179 to worklist
Processing use of (reg 25 sfp) in insn 179:
Processing use of (reg 158 [ regs ]) in insn 174:
Processing use of (reg 13 sp) in insn 301:
Processing use of (reg 156 [ addr ]) in insn 301:
Processing use of (reg 13 sp) in insn 302:
Processing use of (reg 205 [ D.24563+4 ]) in insn 302:
Processing use of (reg 13 sp) in insn 190:
Processing use of (reg 0 r0) in insn 190:
  Adding insn 188 to worklist
Processing use of (reg 2 r2) in insn 190:
  Adding insn 189 to worklist
Processing use of (reg 3 r3) in insn 190:
Processing use of (reg 13 sp) in insn 182:
Processing use of (reg 0 r0) in insn 182:
  Adding insn 180 to worklist
Processing use of (reg 1 r1) in insn 182:
  Adding insn 181 to worklist
Processing use of (reg 193) in insn 180:
Processing use of (reg 24 cc) in insn 172:
  Adding insn 171 to worklist
Processing use of (reg 158 [ regs ]) in insn 171:
Processing use of (reg 13 sp) in insn 164:
Processing use of (reg 0 r0) in insn 164:
  Adding insn 163 to worklist
Processing use of (reg 154 [ D.24547 ]) in insn 163:
  Adding insn 38 to worklist
Processing use of (reg 148 [ mm ]) in insn 38:
Processing use of (reg 142 [ D.24830 ]) in insn 167:
  Adding insn 166 to worklist
Processing use of (reg 24 cc) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 141 [ D.24831 ]) in insn 168:
Processing use of (reg 13 sp) in insn 153:
Processing use of (reg 0 r0) in insn 153:
Processing use of (reg 1 r1) in insn 153:
  Adding insn 152 to worklist
Processing use of (reg 156 [ addr ]) in insn 152:
Processing use of (reg 24 cc) in insn 157:
  Adding insn 156 to worklist
Processing use of (reg 135 [ D.24988 ]) in insn 156:
  Adding insn 154 to worklist
Processing use of (reg 0 r0) in insn 154:
Processing use of (reg 24 cc) in insn 149:
  Adding insn 148 to worklist
Processing use of (reg 191) in insn 148:
  Adding insn 147 to worklist
Processing use of (reg 192 [ <variable>.vm_flags ]) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 136 [ vma ]) in insn 146:
  Adding insn 78 to worklist
Processing use of (reg 0 r0) in insn 78:
Processing use of (reg 149 [ tsk ]) in insn 141:
Processing use of (reg 190) in insn 141:
  Adding insn 140 to worklist
Processing use of (reg 189 [ <variable>.min_flt ]) in insn 140:
  Adding insn 139 to worklist
Processing use of (reg 149 [ tsk ]) in insn 139:
Processing use of (reg 149 [ tsk ]) in insn 134:
Processing use of (reg 188) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 187 [ <variable>.maj_flt ]) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 149 [ tsk ]) in insn 132:
Processing use of (reg 24 cc) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 186) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 147 [ fault ]) in insn 128:
Processing use of (reg 13 sp) in insn 122:
Processing use of (reg 0 r0) in insn 122:
  Adding insn 118 to worklist
Processing use of (reg 1 r1) in insn 122:
  Adding insn 119 to worklist
Processing use of (reg 2 r2) in insn 122:
  Adding insn 120 to worklist
Processing use of (reg 3 r3) in insn 122:
  Adding insn 121 to worklist
Processing use of (reg 184) in insn 121:
  Adding insn 117 to worklist
Processing use of (reg 24 cc) in insn 117:
  Adding insn 116 to worklist
Processing use of (reg 138 [ D.24984 ]) in insn 116:
  Adding insn 86 to worklist
Processing use of (reg 157 [ fsr ]) in insn 86:
Processing use of (reg 181) in insn 120:
  Adding insn 115 to worklist
Processing use of (reg 182) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 156 [ addr ]) in insn 114:
Processing use of (reg 136 [ vma ]) in insn 119:
Processing use of (reg 148 [ mm ]) in insn 118:
Processing use of (reg 24 cc) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 185) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 147 [ fault ]) in insn 124:
Processing use of (reg 24 cc) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 179) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 137 [ mask ]) in insn 105:
  Adding insn 317 to worklist
Processing use of (reg 180 [ <variable>.vm_flags ]) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 136 [ vma ]) in insn 104:
Processing use of (reg 24 cc) in insn 317:
  Adding insn 98 to worklist
Processing use of (reg 137 [ mask ]) in insn 317:
  Adding insn 309 to worklist
Processing use of (reg 24 cc) in insn 309:
  Adding insn 87 to worklist
Processing use of (reg 138 [ D.24984 ]) in insn 87:
Processing use of (reg 157 [ fsr ]) in insn 98:
Processing use of (reg 24 cc) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 156 [ addr ]) in insn 83:
Processing use of (reg 178 [ <variable>.vm_start ]) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 136 [ vma ]) in insn 82:
Processing use of (reg 13 sp) in insn 77:
Processing use of (reg 0 r0) in insn 77:
  Adding insn 75 to worklist
Processing use of (reg 1 r1) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 156 [ addr ]) in insn 76:
Processing use of (reg 148 [ mm ]) in insn 75:
Processing use of (reg 24 cc) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 136 [ vma ]) in insn 79:
Processing use of (reg 13 sp) in insn 69:
Processing use of (reg 0 r0) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 158 [ regs ]) in insn 68:
Processing use of (reg 24 cc) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 151 [ D.24560 ]) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 0 r0) in insn 70:
Processing use of (reg 24 cc) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 176) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 206 [ <variable>.uregs+64 ]) in insn 64:
  Adding insn 306 to worklist
Processing use of (reg 158 [ regs ]) in insn 306:
Processing use of (reg 13 sp) in insn 58:
Processing use of (reg 0 r0) in insn 58:
  Adding insn 57 to worklist
Processing use of (reg 154 [ D.24547 ]) in insn 57:
Processing use of (reg 13 sp) in insn 51:
Processing use of (reg 0 r0) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 158 [ regs ]) in insn 50:
Processing use of (reg 24 cc) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 152 [ D.24555 ]) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 0 r0) in insn 52:
Processing use of (reg 24 cc) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 174) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 206 [ <variable>.uregs+64 ]) in insn 46:
Processing use of (reg 13 sp) in insn 40:
Processing use of (reg 0 r0) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 154 [ D.24547 ]) in insn 39:
Processing use of (reg 24 cc) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 153 [ D.24548 ]) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 0 r0) in insn 41:
Processing use of (reg 24 cc) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 173) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 172) in insn 34:
  Adding insn 33 to worklist
Processing use of (subreg (reg 171) 0) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 168) in insn 32:
  Adding insn 27 to worklist
Processing use of (reg 170) in insn 32:
  Adding insn 30 to worklist
Processing use of (reg 24 cc) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 148 [ mm ]) in insn 29:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 165) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 166 [ <variable>.preempt_count ]) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 163) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 164) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 13 sp) in insn 22:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 161) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 162 [ <variable>.uregs+64 ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 158 [ regs ]) in insn 13:


do_page_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,23u} r1={23d,8u} r2={21d,6u} r3={21d,5u} r11={1d,42u} r12={16d} r13={1d,67u,2d} r14={16d,1u} r15={15d} r16={15d} r17={15d} r18={15d} r19={15d} r20={15d} r21={15d} r22={15d} r23={15d} r24={45d,29u,1d} r25={1d,44u,4d} r26={1d,41u} r27={15d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={15d} r38={15d} r39={15d} r40={15d} r41={15d} r42={15d} r43={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r81={15d} r82={15d} r83={15d} r84={15d} r85={15d} r86={15d} r87={15d} r88={15d} r89={15d} r90={15d} r91={15d} r92={15d} r93={15d} r94={15d} r95={15d} r96={15d} r97={15d} r98={15d} r99={15d} r100={15d} r101={15d} r102={15d} r103={15d} r104={15d} r105={15d} r106={15d} r107={15d} r108={15d} r109={15d} r110={15d} r111={15d} r112={15d} r113={15d} r114={15d} r115={15d} r116={15d} r117={15d} r118={15d} r119={15d} r120={15d} r121={15d} r122={15d} r123={15d} r124={15d} r125={15d} r126={15d} r127={15d} r133={2d,1u} r134={2d,1u} r135={1d,1u} r136={1d,5u} r137={2d,2u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r145={2d,1u} r146={2d,1u} r147={3d,7u,1d} r148={1d,5u} r149={1d,6u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,3u} r156={1d,8u,1d} r157={1d,4u} r158={1d,11u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,2u} r195={1d,1u} r196={1d,2u} r197={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r205={1d,2u} r206={1d,2u} r207={1d,1u} r208={1d,1u} 
;;    total ref usage 2281{1896d,376u,9e} in 187{172 regular + 15 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,30] 1[30,23] 2[53,21] 3[74,21] 11[95,1] 12[96,16] 13[112,1] 14[113,16] 15[129,15] 16[144,15] 17[159,15] 18[174,15] 19[189,15] 20[204,15] 21[219,15] 22[234,15] 23[249,15] 24[264,45] 25[309,1] 26[310,1] 27[311,15] 28[326,15] 29[341,15] 30[356,15] 31[371,15] 32[386,15] 33[401,15] 34[416,15] 35[431,15] 36[446,15] 37[461,15] 38[476,15] 39[491,15] 40[506,15] 41[521,15] 42[536,15] 43[551,15] 44[566,15] 45[581,15] 46[596,15] 47[611,15] 48[626,15] 49[641,15] 50[656,15] 51[671,15] 52[686,15] 53[701,15] 54[716,15] 55[731,15] 56[746,15] 57[761,15] 58[776,15] 59[791,15] 60[806,15] 61[821,15] 62[836,15] 63[851,15] 64[866,15] 65[881,15] 66[896,15] 67[911,15] 68[926,15] 69[941,15] 70[956,15] 71[971,15] 72[986,15] 73[1001,15] 74[1016,15] 75[1031,15] 76[1046,15] 77[1061,15] 78[1076,15] 79[1091,15] 80[1106,15] 81[1121,15] 82[1136,15] 83[1151,15] 84[1166,15] 85[1181,15] 86[1196,15] 87[1211,15] 88[1226,15] 89[1241,15] 90[1256,15] 91[1271,15] 92[1286,15] 93[1301,15] 94[1316,15] 95[1331,15] 96[1346,15] 97[1361,15] 98[1376,15] 99[1391,15] 100[1406,15] 101[1421,15] 102[1436,15] 103[1451,15] 104[1466,15] 105[1481,15] 106[1496,15] 107[1511,15] 108[1526,15] 109[1541,15] 110[1556,15] 111[1571,15] 112[1586,15] 113[1601,15] 114[1616,15] 115[1631,15] 116[1646,15] 117[1661,15] 118[1676,15] 119[1691,15] 120[1706,15] 121[1721,15] 122[1736,15] 123[1751,15] 124[1766,15] 125[1781,15] 126[1796,15] 127[1811,15] 133[1826,2] 134[1828,2] 135[1830,1] 136[1831,1] 137[1832,2] 138[1834,1] 139[1835,1] 140[1836,1] 141[1837,1] 142[1838,1] 145[1839,2] 146[1841,2] 147[1843,3] 148[1846,1] 149[1847,1] 151[1848,1] 152[1849,1] 153[1850,1] 154[1851,1] 156[1852,1] 157[1853,1] 158[1854,1] 159[1855,1] 160[1856,1] 161[1857,1] 162[1858,1] 163[1859,1] 164[1860,1] 165[1861,1] 166[1862,1] 168[1863,1] 170[1864,1] 171[1865,1] 172[1866,1] 173[1867,1] 174[1868,1] 176[1869,1] 178[1870,1] 179[1871,1] 180[1872,1] 181[1873,1] 182[1874,1] 184[1875,1] 185[1876,1] 186[1877,1] 187[1878,1] 188[1879,1] 189[1880,1] 190[1881,1] 191[1882,1] 192[1883,1] 193[1884,1] 195[1885,1] 196[1886,1] 197[1887,1] 199[1888,1] 200[1889,1] 201[1890,1] 202[1891,1] 205[1892,1] 206[1893,1] 207[1894,1] 208[1895,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 148 149 156 157 158 159 160 161 162
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148 149 156 157 158 159 160 161 162
;; live  kill	
;; rd  in  	(10)
29, 52, 73, 94, 95, 111, 112, 128, 309, 310
;; rd  gen 	(10)
308, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858
;; rd  kill	(9)
1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:277 (set (reg/v:SI 156 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ addr ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:277 (set (reg/v:SI 157 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fsr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:277 (set (reg/v/f:SI 158 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ regs ])
        (nil)))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 160)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 149 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 159)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 159)
        (nil)))

(insn 12 11 13 2 arch/arm/mm/fault.c:286 (set (reg/v/f:SI 148 [ mm ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:289 (set (reg:SI 162 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:289 (set (reg:SI 161)
        (and:SI (reg:SI 162 [ <variable>.uregs+64 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 162 [ <variable>.uregs+64 ])
        (nil)))

(insn 15 14 16 2 arch/arm/mm/fault.c:289 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(jump_insn 16 15 17 2 arch/arm/mm/fault.c:289 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; rd  out 	(20)
29, 52, 73, 94, 95, 111, 112, 128, 308, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	
;; live  kill	 24 [cc]
;; rd  in  	(20)
29, 52, 73, 94, 95, 111, 112, 128, 308, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [50.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104506)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; rd  out 	(19)
29, 52, 73, 94, 95, 111, 112, 128, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 163 164 165 166 168 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	 24 [cc] 163 164 165 166 168 170 171 172 173
;; live  kill	
;; rd  in  	(20)
29, 52, 73, 94, 95, 111, 112, 128, 308, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858
;; rd  gen 	(10)
304, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867
;; rd  kill	(9)
1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 19 18 20 4 22 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 164)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 23 22 24 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163)
        (and:SI (reg:SI 164)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 24 23 25 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 166 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg:SI 163)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 25 24 26 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 165)
        (and:SI (reg:SI 166 [ <variable>.preempt_count ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 166 [ <variable>.preempt_count ])
        (nil)))

(insn 26 25 27 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 27 26 29 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 168)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 29 27 30 4 arch/arm/mm/fault.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ mm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 30 29 32 4 arch/arm/mm/fault.c:296 (set (reg:SI 170)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 32 30 33 4 arch/arm/mm/fault.c:296 (set (reg:SI 171)
        (ior:SI (reg:SI 168)
            (reg:SI 170))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg:SI 168)
            (nil))))

(insn 33 32 34 4 arch/arm/mm/fault.c:296 (set (reg:QI 172)
        (subreg:QI (reg:SI 171) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 34 33 35 4 arch/arm/mm/fault.c:296 (set (reg:SI 173)
        (zero_extend:SI (reg:QI 172))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 172)
        (nil)))

(insn 35 34 36 4 arch/arm/mm/fault.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(jump_insn 36 35 37 4 arch/arm/mm/fault.c:296 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 41 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; rd  out 	(29)
29, 52, 73, 94, 95, 111, 112, 128, 304, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867


;; Succ edge  41 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 154 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 153 154 206
;; live  kill	 14 [lr]
;; rd  in  	(29)
29, 52, 73, 94, 95, 111, 112, 128, 304, 309, 310, 1846, 1847, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867
;; rd  gen 	(5)
27, 302, 1850, 1851, 1893
;; rd  kill	(49)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1850, 1851, 1893

;; Pred edge  4 [50.0%]  (fallthru)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 arch/arm/mm/fault.c:304 (set (reg/f:SI 154 [ D.24547 ])
        (plus:SI (reg/v/f:SI 148 [ mm ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 39 38 40 5 arch/arm/mm/fault.c:304 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 40 39 41 5 arch/arm/mm/fault.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("down_read_trylock") [flags 0x41] <function_decl 0x10c30c80 down_read_trylock>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 41 40 42 5 arch/arm/mm/fault.c:304 (set (reg:SI 153 [ D.24548 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 42 41 306 5 arch/arm/mm/fault.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.24548 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ D.24548 ])
        (nil)))

(insn 306 42 43 5 (set (reg:SI 206 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) -1 (nil))

(jump_insn 43 306 44 5 arch/arm/mm/fault.c:304 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; rd  out 	(31)
27, 52, 73, 94, 95, 111, 112, 302, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1893


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206
;; lr  def 	 24 [cc] 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; live  gen 	 24 [cc] 174
;; live  kill	
;; rd  in  	(31)
27, 52, 73, 94, 95, 111, 112, 302, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1893
;; rd  gen 	(2)
301, 1868
;; rd  kill	(1)
1868

;; Pred edge  5 [50.0%]  (fallthru)
(note 44 43 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 44 47 6 arch/arm/mm/fault.c:305 (set (reg:SI 174)
        (and:SI (reg:SI 206 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 206 [ <variable>.uregs+64 ])
        (nil)))

(insn 47 46 48 6 arch/arm/mm/fault.c:305 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(jump_insn 48 47 49 6 arch/arm/mm/fault.c:305 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(32)
27, 52, 73, 94, 95, 111, 112, 301, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1893


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 152
;; live  kill	 14 [lr]
;; rd  in  	(32)
27, 52, 73, 94, 95, 111, 112, 301, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1893
;; rd  gen 	(3)
25, 299, 1849
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1849

;; Pred edge  6 [50.0%]  (fallthru)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 51 50 52 7 arch/arm/mm/fault.c:305 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("search_exception_tables") [flags 0x41] <function_decl 0x10e04f80 search_exception_tables>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 52 51 53 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg/f:SI 152 [ D.24555 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 53 52 54 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 152 [ D.24555 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 152 [ D.24555 ])
        (nil)))

(jump_insn 54 53 55 7 arch/arm/mm/fault.c:305 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 7 -> ( 41 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(33)
25, 52, 73, 94, 95, 111, 112, 299, 309, 310, 1846, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1893


;; Succ edge  41 [15.0%] 
;; Succ edge  8 [85.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(35)
25, 27, 52, 73, 94, 95, 111, 112, 299, 301, 309, 310, 1846, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1893
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [85.0%]  (fallthru)
(code_label 55 54 56 8 25 "" [1 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 arch/arm/mm/fault.c:307 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 318 8 arch/arm/mm/fault.c:307 (parallel [
            (call (mem:SI (symbol_ref:SI ("down_read") [flags 0x41] <function_decl 0x10c30c00 down_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(jump_insn 318 58 319 8 (set (pc)
        (label_ref 73)) -1 (nil))
;; End of basic block 8 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(35)
25, 27, 52, 73, 94, 95, 111, 112, 299, 301, 309, 310, 1846, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1893


;; Succ edge  11 [100.0%] 

(barrier 319 318 61)

;; Start of basic block ( 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 206
;; lr  def 	 24 [cc] 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158 206
;; live  gen 	 24 [cc] 176
;; live  kill	
;; rd  in  	(31)
27, 52, 73, 94, 95, 111, 112, 302, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1893
;; rd  gen 	(2)
297, 1869
;; rd  kill	(1)
1869

;; Pred edge  5 [50.0%] 
(code_label 61 319 62 9 24 "" [1 uses])

(note 62 61 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 62 65 9 arch/arm/mm/fault.c:316 (set (reg:SI 176)
        (and:SI (reg:SI 206 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 206 [ <variable>.uregs+64 ])
        (nil)))

(insn 65 64 66 9 arch/arm/mm/fault.c:316 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(jump_insn 66 65 67 9 arch/arm/mm/fault.c:316 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(32)
27, 52, 73, 94, 95, 111, 112, 297, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1893


;; Succ edge  10 [29.0%]  (fallthru)
;; Succ edge  11 [71.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 151
;; live  kill	 14 [lr]
;; rd  in  	(32)
27, 52, 73, 94, 95, 111, 112, 297, 309, 310, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1893
;; rd  gen 	(3)
21, 295, 1848
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1848

;; Pred edge  9 [29.0%]  (fallthru)
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 10 arch/arm/mm/fault.c:317 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 69 68 70 10 arch/arm/mm/fault.c:317 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("search_exception_tables") [flags 0x41] <function_decl 0x10e04f80 search_exception_tables>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 70 69 71 10 arch/arm/mm/fault.c:317 (set (reg/f:SI 151 [ D.24560 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 71 70 72 10 arch/arm/mm/fault.c:316 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 151 [ D.24560 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 151 [ D.24560 ])
        (nil)))

(jump_insn 72 71 73 10 arch/arm/mm/fault.c:316 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 10 -> ( 41 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(33)
21, 52, 73, 94, 95, 111, 112, 295, 309, 310, 1846, 1847, 1848, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1869, 1893


;; Succ edge  41 [15.0%] 
;; Succ edge  11 [85.0%]  (fallthru)

;; Start of basic block ( 9 10 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(40)
21, 25, 27, 52, 73, 94, 95, 111, 112, 295, 297, 299, 301, 309, 310, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1893
;; rd  gen 	(3)
19, 293, 1831
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1831

;; Pred edge  9 [71.0%] 
;; Pred edge  10 [85.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 73 72 74 11 26 "" [2 uses])

(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 11 arch/arm/mm/fault.c:238 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 11 arch/arm/mm/fault.c:238 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 77 76 78 11 arch/arm/mm/fault.c:238 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("find_vma") [flags 0x41] <function_decl 0x10fe6c80 find_vma>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 78 77 79 11 arch/arm/mm/fault.c:238 (set (reg/v/f:SI 136 [ vma ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 11 arch/arm/mm/fault.c:240 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 136 [ vma ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 80 79 81 11 arch/arm/mm/fault.c:240 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 11 -> ( 21 12)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(36)
19, 52, 73, 94, 95, 111, 112, 293, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1893


;; Succ edge  21 [0.0%] 
;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 156
;; lr  def 	 24 [cc] 178
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 178
;; live  kill	
;; rd  in  	(36)
19, 52, 73, 94, 95, 111, 112, 293, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1893
;; rd  gen 	(2)
292, 1870
;; rd  kill	(1)
1870

;; Pred edge  11 [100.0%]  (fallthru)
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 12 arch/arm/mm/fault.c:242 (set (reg:SI 178 [ <variable>.vm_start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 12 arch/arm/mm/fault.c:242 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ <variable>.vm_start ])
            (reg/v:SI 156 [ addr ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178 [ <variable>.vm_start ])
        (nil)))

(jump_insn 84 83 155 12 arch/arm/mm/fault.c:242 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 12 -> ( 19 13)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(37)
19, 52, 73, 94, 95, 111, 112, 292, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1893


;; Succ edge  19 [0.0%] 
;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 20) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 157
;; lr  def 	 24 [cc] 137 138 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 137 138 179 180
;; live  kill	
;; rd  in  	(42)
16, 19, 52, 73, 94, 95, 111, 112, 282, 292, 309, 310, 1830, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893
;; rd  gen 	(5)
289, 1832, 1834, 1871, 1872
;; rd  kill	(5)
1832, 1833, 1834, 1871, 1872

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  20 [50.0%] 
(code_label 155 84 85 13 35 "" [1 uses])

(note 85 155 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 13 arch/arm/mm/fault.c:223 (set (reg:SI 138 [ D.24984 ])
        (and:SI (reg/v:SI 157 [ fsr ])
            (const_int 2048 [0x800]))) 67 {*arm_andsi3_insn} (nil))

(insn 87 86 309 13 arch/arm/mm/fault.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.24984 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 309 87 98 13 arch/arm/mm/fault.c:224 (set (reg/v:SI 137 [ mask ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 7 [0x7])
            (const_int 2 [0x2]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 98 309 317 13 arch/arm/mm/fault.c:225 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 157 [ fsr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 317 98 104 13 arch/arm/mm/fault.c:226 (set (reg/v:SI 137 [ mask ])
        (if_then_else:SI (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 137 [ mask ])
            (const_int 4 [0x4]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 104 317 105 13 arch/arm/mm/fault.c:228 (set (reg:SI 180 [ <variable>.vm_flags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 13 arch/arm/mm/fault.c:228 (set (reg:SI 179)
        (and:SI (reg/v:SI 137 [ mask ])
            (reg:SI 180 [ <variable>.vm_flags ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 180 [ <variable>.vm_flags ])
        (expr_list:REG_DEAD (reg/v:SI 137 [ mask ])
            (nil))))

(insn 106 105 107 13 arch/arm/mm/fault.c:228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(jump_insn 107 106 108 13 arch/arm/mm/fault.c:228 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; rd  out 	(45)
16, 19, 52, 73, 94, 95, 111, 112, 289, 309, 310, 1830, 1831, 1832, 1834, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1882, 1883, 1893


;; Succ edge  14 [71.0%]  (fallthru)
;; Succ edge  15 [29.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u127(11){ }u128(13){ }u129(25){ }u130(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 147
;; live  kill	
;; rd  in  	(45)
16, 19, 52, 73, 94, 95, 111, 112, 289, 309, 310, 1830, 1831, 1832, 1834, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1882, 1883, 1893
;; rd  gen 	(1)
1845
;; rd  kill	(3)
1843, 1844, 1845

;; Pred edge  13 [71.0%]  (fallthru)
(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 320 14 arch/arm/mm/fault.c:251 (set (reg/v:SI 147 [ fault ])
        (const_int 131072 [0x20000])) 167 {*arm_movsi_insn} (nil))

(jump_insn 320 109 321 14 (set (pc)
        (label_ref 161)) -1 (nil))
;; End of basic block 14 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(46)
16, 19, 52, 73, 94, 95, 111, 112, 289, 309, 310, 1830, 1831, 1832, 1834, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1882, 1883, 1893


;; Succ edge  22 [100.0%] 

(barrier 321 320 112)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 181 182 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 147 181 182 184 185
;; live  kill	 14 [lr]
;; rd  in  	(45)
16, 19, 52, 73, 94, 95, 111, 112, 289, 309, 310, 1830, 1831, 1832, 1834, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1882, 1883, 1893
;; rd  gen 	(7)
17, 286, 1844, 1873, 1874, 1875, 1876
;; rd  kill	(53)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1843, 1844, 1845, 1873, 1874, 1875, 1876

;; Pred edge  13 [29.0%] 
(code_label 112 321 113 15 32 "" [1 uses])

(note 113 112 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 15 arch/arm/mm/fault.c:259 (set (reg:SI 182)
        (and:SI (reg/v:SI 156 [ addr ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 115 114 116 15 arch/arm/mm/fault.c:259 (set (reg:SI 181)
        (and:SI (reg:SI 182)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 156 [ addr ])
                (const_int -4096 [0xfffffffffffff000]))
            (nil))))

(insn 116 115 117 15 arch/arm/mm/fault.c:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.24984 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.24984 ])
        (nil)))

(insn 117 116 118 15 arch/arm/mm/fault.c:259 (set (reg:SI 184)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 118 117 119 15 arch/arm/mm/fault.c:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 119 118 120 15 arch/arm/mm/fault.c:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ vma ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ vma ])
        (nil)))

(insn 120 119 121 15 arch/arm/mm/fault.c:259 (set (reg:SI 2 r2)
        (reg:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(insn 121 120 122 15 arch/arm/mm/fault.c:259 (set (reg:SI 3 r3)
        (reg:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(call_insn 122 121 123 15 arch/arm/mm/fault.c:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("handle_mm_fault") [flags 0x41] <function_decl 0x10fbfc80 handle_mm_fault>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 123 122 124 15 arch/arm/mm/fault.c:259 (set (reg/v:SI 147 [ fault ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 124 123 125 15 arch/arm/mm/fault.c:260 (set (reg:SI 185)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 51 [0x33]))) 67 {*arm_andsi3_insn} (nil))

(insn 125 124 126 15 arch/arm/mm/fault.c:260 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(jump_insn 126 125 127 15 arch/arm/mm/fault.c:260 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 161)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 15 -> ( 22 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(49)
17, 52, 73, 94, 95, 111, 112, 286, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1882, 1883, 1893


;; Succ edge  22 [0.0%] 
;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u153(11){ }u154(13){ }u155(25){ }u156(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 24 [cc] 186
;; live  kill	
;; rd  in  	(49)
17, 52, 73, 94, 95, 111, 112, 286, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1882, 1883, 1893
;; rd  gen 	(2)
285, 1877
;; rd  kill	(1)
1877

;; Pred edge  15 [100.0%]  (fallthru)
(note 127 126 128 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 16 arch/arm/mm/fault.c:262 (set (reg:SI 186)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 129 128 130 16 arch/arm/mm/fault.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(jump_insn 130 129 131 16 arch/arm/mm/fault.c:262 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(50)
17, 52, 73, 94, 95, 111, 112, 285, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1882, 1883, 1893


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 187 188
;; live  kill	
;; rd  in  	(50)
17, 52, 73, 94, 95, 111, 112, 285, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1882, 1883, 1893
;; rd  gen 	(2)
1878, 1879
;; rd  kill	(2)
1878, 1879

;; Pred edge  16 [50.0%]  (fallthru)
(note 131 130 132 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 132 131 133 17 arch/arm/mm/fault.c:263 (set (reg:SI 187 [ <variable>.maj_flt ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 696 [0x2b8])) [0 <variable>.maj_flt+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 133 132 134 17 arch/arm/mm/fault.c:263 (set (reg:SI 188)
        (plus:SI (reg:SI 187 [ <variable>.maj_flt ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 187 [ <variable>.maj_flt ])
        (nil)))

(insn 134 133 322 17 arch/arm/mm/fault.c:263 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 696 [0x2b8])) [0 <variable>.maj_flt+0 S4 A64])
        (reg:SI 188)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 188)
        (nil)))

(jump_insn 322 134 323 17 (set (pc)
        (label_ref 161)) -1 (nil))
;; End of basic block 17 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(52)
17, 52, 73, 94, 95, 111, 112, 285, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1882, 1883, 1893


;; Succ edge  22 [100.0%] 

(barrier 323 322 137)

;; Start of basic block ( 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 189 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 189 190
;; live  kill	
;; rd  in  	(50)
17, 52, 73, 94, 95, 111, 112, 285, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1882, 1883, 1893
;; rd  gen 	(2)
1880, 1881
;; rd  kill	(2)
1880, 1881

;; Pred edge  16 [50.0%] 
(code_label 137 323 138 18 34 "" [1 uses])

(note 138 137 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 18 arch/arm/mm/fault.c:265 (set (reg:SI 189 [ <variable>.min_flt ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 692 [0x2b4])) [0 <variable>.min_flt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 140 139 141 18 arch/arm/mm/fault.c:265 (set (reg:SI 190)
        (plus:SI (reg:SI 189 [ <variable>.min_flt ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 189 [ <variable>.min_flt ])
        (nil)))

(insn 141 140 324 18 arch/arm/mm/fault.c:265 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 692 [0x2b4])) [0 <variable>.min_flt+0 S4 A32])
        (reg:SI 190)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))

(jump_insn 324 141 325 18 (set (pc)
        (label_ref 161)) -1 (nil))
;; End of basic block 18 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(52)
17, 52, 73, 94, 95, 111, 112, 285, 309, 310, 1830, 1831, 1832, 1834, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1893


;; Succ edge  22 [100.0%] 

(barrier 325 324 144)

;; Start of basic block ( 12) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 191 192
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 191 192
;; live  kill	
;; rd  in  	(37)
19, 52, 73, 94, 95, 111, 112, 292, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1893
;; rd  gen 	(3)
284, 1882, 1883
;; rd  kill	(2)
1882, 1883

;; Pred edge  12 [0.0%] 
(code_label 144 325 145 19 28 ("check_stack") [1 uses])

(note 145 144 146 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 19 arch/arm/mm/fault.c:269 (set (reg:SI 192 [ <variable>.vm_flags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 19 arch/arm/mm/fault.c:269 (set (reg:SI 191)
        (and:SI (reg:SI 192 [ <variable>.vm_flags ])
            (const_int 256 [0x100]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 192 [ <variable>.vm_flags ])
        (nil)))

(insn 148 147 149 19 arch/arm/mm/fault.c:269 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 191)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(jump_insn 149 148 150 19 arch/arm/mm/fault.c:269 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 19 -> ( 20 21)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(39)
19, 52, 73, 94, 95, 111, 112, 284, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893


;; Succ edge  20 [29.0%]  (fallthru)
;; Succ edge  21 [71.0%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135
;; live  kill	 14 [lr]
;; rd  in  	(39)
19, 52, 73, 94, 95, 111, 112, 284, 309, 310, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893
;; rd  gen 	(3)
16, 282, 1830
;; rd  kill	(47)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1830

;; Pred edge  19 [29.0%]  (fallthru)
(note 150 149 152 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 152 150 153 20 arch/arm/mm/fault.c:269 discrim 1 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 153 152 154 20 arch/arm/mm/fault.c:269 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("expand_stack") [flags 0x41] <function_decl 0x10fe6b80 expand_stack>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 154 153 156 20 arch/arm/mm/fault.c:269 discrim 1 (set (reg:SI 135 [ D.24988 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 156 154 157 20 arch/arm/mm/fault.c:269 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.24988 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.24988 ])
        (nil)))

(jump_insn 157 156 158 20 arch/arm/mm/fault.c:269 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 155)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 13 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(40)
16, 52, 73, 94, 95, 111, 112, 282, 309, 310, 1830, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893


;; Succ edge  13 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 19 20 11) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 147
;; live  kill	
;; rd  in  	(43)
16, 19, 52, 73, 94, 95, 111, 112, 282, 284, 293, 309, 310, 1830, 1831, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893
;; rd  gen 	(1)
1843
;; rd  kill	(3)
1843, 1844, 1845

;; Pred edge  19 [71.0%] 
;; Pred edge  20 [50.0%]  (fallthru)
;; Pred edge  11 [0.0%] 
(code_label 158 157 159 21 27 "" [2 uses])

(note 159 158 160 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 21 arch/arm/mm/fault.c:239 (set (reg/v:SI 147 [ fault ])
        (const_int 65536 [0x10000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 21 -> ( 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(44)
16, 19, 52, 73, 94, 95, 111, 112, 282, 284, 293, 309, 310, 1830, 1831, 1843, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1882, 1883, 1893


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 15 14 17 18) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 141 142 205
;; live  kill	 14 [lr]
;; rd  in  	(63)
16, 17, 19, 52, 73, 94, 95, 111, 112, 282, 284, 285, 286, 289, 293, 309, 310, 1830, 1831, 1832, 1834, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1893
;; rd  gen 	(4)
280, 1837, 1838, 1892
;; rd  kill	(19)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1837, 1838, 1892

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  15 [0.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  18 [100.0%] 
(code_label 161 160 162 22 33 "" [4 uses])

(note 162 161 163 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 164 22 arch/arm/mm/fault.c:323 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 154 [ D.24547 ])
        (nil)))

(call_insn 164 163 300 22 arch/arm/mm/fault.c:323 (parallel [
            (call (mem:SI (symbol_ref:SI ("up_read") [flags 0x41] <function_decl 0x10c30e00 up_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 300 164 166 22 arch/arm/mm/fault.c:325 (set (reg:SI 205 [ D.24563+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 166 300 167 22 include/linux/jump_label.h:67 (set (reg/f:SI 142 [ D.24830 ])
        (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                (const_int 8 [0x8])))) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 22 include/linux/jump_label.h:67 (set (reg:SI 141 [ D.24831 ])
        (mem/v:SI (reg/f:SI 142 [ D.24830 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142 [ D.24830 ])
        (expr_list:REG_EQUAL (mem/v:SI (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                        (const_int 8 [0x8]))) [0 S4 A32])
            (nil))))

(insn 168 167 169 22 include/linux/jump_label.h:67 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.24831 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.24831 ])
        (nil)))

(jump_insn 169 168 170 22 include/linux/jump_label.h:67 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 22 -> ( 23 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(61)
16, 17, 19, 52, 73, 94, 95, 111, 112, 280, 309, 310, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893


;; Succ edge  23 [0.0%]  (fallthru)
;; Succ edge  27 [100.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u209(11){ }u210(13){ }u211(25){ }u212(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(61)
16, 17, 19, 52, 73, 94, 95, 111, 112, 280, 309, 310, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893
;; rd  gen 	(1)
279
;; rd  kill	(0)


;; Pred edge  22 [0.0%]  (fallthru)
(note 170 169 171 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 171 170 172 23 include/linux/perf_event.h:1054 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 158 [ regs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 172 171 173 23 include/linux/perf_event.h:1054 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 177)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
            (nil))))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(61)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893


;; Succ edge  25 [6.7%] 
;; Succ edge  24 [93.3%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 134
;; live  kill	
;; rd  in  	(61)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893
;; rd  gen 	(1)
1829
;; rd  kill	(2)
1828, 1829

;; Pred edge  23 [93.3%]  (fallthru)
(note 173 172 174 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 326 24 include/linux/perf_event.h:1054 (set (reg/v/f:SI 134 [ regs.462 ])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 326 174 327 24 (set (pc)
        (label_ref 184)) -1 (nil))
;; End of basic block 24 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; rd  out 	(62)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893


;; Succ edge  26 [100.0%] 

(barrier 327 326 177)

;; Start of basic block ( 23) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 1 [r1] 134 193
;; live  kill	 14 [lr]
;; rd  in  	(61)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1892, 1893
;; rd  gen 	(2)
1828, 1884
;; rd  kill	(19)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1828, 1829, 1884

;; Pred edge  23 [6.7%] 
(code_label 177 327 178 25 37 "" [1 uses])

(note 178 177 179 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 25 include/linux/perf_event.h:1043 discrim 1 (set (reg/f:SI 193)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 180 179 181 25 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 181 180 182 25 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 182 181 183 25 include/linux/perf_event.h:1043 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 183 182 184 25 include/linux/perf_event.h:1056 (set (reg/v/f:SI 134 [ regs.462 ])
        (reg/f:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 193)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8]))
            (nil))))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; rd  out 	(63)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1828, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1892, 1893


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 25 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 156 205
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(64)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1892, 1893
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128

;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  24 [100.0%] 
(code_label 184 183 185 26 38 "" [1 uses])

(note 185 184 186 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 186 185 301 26 include/linux/perf_event.h:1058 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 134 [ regs.462 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ regs.462 ])
        (nil)))

(insn 301 186 302 26 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A64])
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 302 301 188 26 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 205 [ D.24563+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 188 302 189 26 include/linux/perf_event.h:1058 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 26 include/linux/perf_event.h:1058 (set (reg:DI 2 r2)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(call_insn 190 189 191 26 include/linux/perf_event.h:1058 (parallel [
            (call (mem:SI (symbol_ref:SI ("__perf_sw_event") [flags 0x41] <function_decl 0x11436b00 __perf_sw_event>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(64)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1892, 1893


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 26 22) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u246(11){ }u247(13){ }u248(25){ }u249(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc] 195
;; live  kill	
;; rd  in  	(65)
16, 17, 19, 52, 73, 94, 95, 111, 112, 279, 280, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1892, 1893
;; rd  gen 	(2)
276, 1885
;; rd  kill	(1)
1885

;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 191 190 192 27 36 "" [1 uses])

(note 192 191 193 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 27 arch/arm/mm/fault.c:326 (set (reg:SI 195)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 194 193 195 27 arch/arm/mm/fault.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 195)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 195)
        (nil)))

(jump_insn 195 194 196 27 arch/arm/mm/fault.c:326 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 222)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 28 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(65)
16, 17, 19, 52, 73, 94, 95, 111, 112, 276, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893


;; Succ edge  28 [50.0%]  (fallthru)
;; Succ edge  33 [50.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u253(11){ }u254(13){ }u255(25){ }u256(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(65)
16, 17, 19, 52, 73, 94, 95, 111, 112, 276, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;; rd  gen 	(3)
275, 1835, 1836
;; rd  kill	(2)
1835, 1836

;; Pred edge  27 [50.0%]  (fallthru)
(note 196 195 197 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 197 196 198 28 include/linux/jump_label.h:67 (set (reg/f:SI 140 [ D.24847 ])
        (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                (const_int 24 [0x18])))) 167 {*arm_movsi_insn} (nil))

(insn 198 197 199 28 include/linux/jump_label.h:67 (set (reg:SI 139 [ D.24848 ])
        (mem/v:SI (reg/f:SI 140 [ D.24847 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ D.24847 ])
        (expr_list:REG_EQUAL (mem/v:SI (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                        (const_int 24 [0x18]))) [0 S4 A32])
            (nil))))

(insn 199 198 200 28 include/linux/jump_label.h:67 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.24848 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.24848 ])
        (nil)))

(jump_insn 200 199 201 28 include/linux/jump_label.h:67 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 222)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 28 -> ( 29 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(67)
16, 17, 19, 52, 73, 94, 95, 111, 112, 275, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893


;; Succ edge  29 [0.0%]  (fallthru)
;; Succ edge  33 [100.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u260(11){ }u261(13){ }u262(25){ }u263(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(67)
16, 17, 19, 52, 73, 94, 95, 111, 112, 275, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;; rd  gen 	(1)
274
;; rd  kill	(0)


;; Pred edge  28 [0.0%]  (fallthru)
(note 201 200 202 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 202 201 203 29 include/linux/perf_event.h:1054 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 158 [ regs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 203 202 204 29 include/linux/perf_event.h:1054 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
            (nil))))
;; End of basic block 29 -> ( 31 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; rd  out 	(67)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893


;; Succ edge  31 [6.7%] 
;; Succ edge  30 [93.3%]  (fallthru)

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u266(11){ }u267(13){ }u268(25){ }u269(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 133
;; live  kill	
;; rd  in  	(67)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;; rd  gen 	(1)
1827
;; rd  kill	(2)
1826, 1827

;; Pred edge  29 [93.3%]  (fallthru)
(note 204 203 205 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 205 204 328 30 include/linux/perf_event.h:1054 (set (reg/v/f:SI 133 [ regs.463 ])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 328 205 329 30 (set (pc)
        (label_ref 215)) -1 (nil))
;; End of basic block 30 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; rd  out 	(68)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893


;; Succ edge  32 [100.0%] 

(barrier 329 328 208)

;; Start of basic block ( 29) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 1 [r1] 133 196
;; live  kill	 14 [lr]
;; rd  in  	(67)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1893
;; rd  gen 	(2)
1826, 1886
;; rd  kill	(19)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 1826, 1827, 1886

;; Pred edge  29 [6.7%] 
(code_label 208 329 209 31 40 "" [1 uses])

(note 209 208 210 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 31 include/linux/perf_event.h:1043 discrim 1 (set (reg/f:SI 196)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 211 210 212 31 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 212 211 213 31 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 213 212 214 31 include/linux/perf_event.h:1043 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 214 213 215 31 include/linux/perf_event.h:1056 (set (reg/v/f:SI 133 [ regs.463 ])
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 196)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -72 [0xffffffffffffffb8]))
            (nil))))
;; End of basic block 31 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; rd  out 	(69)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1826, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1893


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u283(11){ }u284(13){ }u285(25){ }u286(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 156 205
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 205
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(70)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1893
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%] 
(code_label 215 214 216 32 41 "" [1 uses])

(note 216 215 217 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 217 216 303 32 include/linux/perf_event.h:1058 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 133 [ regs.463 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ regs.463 ])
        (nil)))

(insn 303 217 304 32 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A64])
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 304 303 219 32 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 205 [ D.24563+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 205 [ D.24563+4 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 219 304 220 32 include/linux/perf_event.h:1058 (set (reg:SI 0 r0)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 220 219 221 32 include/linux/perf_event.h:1058 (set (reg:DI 2 r2)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(call_insn 221 220 222 32 include/linux/perf_event.h:1058 (parallel [
            (call (mem:SI (symbol_ref:SI ("__perf_sw_event") [flags 0x41] <function_decl 0x11436b00 __perf_sw_event>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 32 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(70)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1893


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 28 27 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u297(11){ }u298(13){ }u299(25){ }u300(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 197
;; live  kill	
;; rd  in  	(72)
16, 17, 19, 52, 73, 94, 95, 111, 112, 274, 275, 276, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1893
;; rd  gen 	(2)
271, 1887
;; rd  kill	(1)
1887

;; Pred edge  28 [100.0%] 
;; Pred edge  27 [50.0%] 
;; Pred edge  32 [100.0%]  (fallthru)
(code_label 222 221 223 33 39 "" [2 uses])

(note 223 222 225 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 225 223 226 33 arch/arm/mm/fault.c:334 (set (reg:SI 197)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 196659 [0x30033]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 147 [ fault ])
            (const_int 196659 [0x30033]))
        (nil)))

(insn 226 225 227 33 arch/arm/mm/fault.c:334 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 197)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (nil)))

(jump_insn 227 226 228 33 arch/arm/mm/fault.c:334 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 282)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 33 -> ( 42 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(71)
16, 17, 19, 52, 73, 94, 95, 111, 112, 271, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1892, 1893


;; Succ edge  42 [100.0%] 
;; Succ edge  34 [0.0%]  (fallthru)

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u305(11){ }u306(13){ }u307(25){ }u308(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 199
;; live  kill	
;; rd  in  	(71)
16, 17, 19, 52, 73, 94, 95, 111, 112, 271, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1892, 1893
;; rd  gen 	(2)
270, 1888
;; rd  kill	(1)
1888

;; Pred edge  33 [0.0%]  (fallthru)
(note 228 227 229 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 230 34 arch/arm/mm/fault.c:337 (set (reg:SI 199)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 230 229 231 34 arch/arm/mm/fault.c:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 199)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(jump_insn 231 230 232 34 arch/arm/mm/fault.c:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
            (nil))))
;; End of basic block 34 -> ( 35 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(72)
16, 17, 19, 52, 73, 94, 95, 111, 112, 270, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1893


;; Succ edge  35 [20.7%]  (fallthru)
;; Succ edge  36 [79.3%] 

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u312(11){ }u313(13){ }u314(25){ }u315(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(72)
16, 17, 19, 52, 73, 94, 95, 111, 112, 270, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1893
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128

;; Pred edge  34 [20.7%]  (fallthru)
(note 232 231 233 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(call_insn 233 232 330 35 arch/arm/mm/fault.c:343 (parallel [
            (call (mem:SI (symbol_ref:SI ("pagefault_out_of_memory") [flags 0x41] <function_decl 0x10fb4d80 pagefault_out_of_memory>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 330 233 331 35 arch/arm/mm/fault.c:344 (set (pc)
        (label_ref 282)) -1 (nil))
;; End of basic block 35 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(72)
16, 17, 19, 52, 73, 94, 95, 111, 112, 270, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1893


;; Succ edge  42 [100.0%] 

(barrier 331 330 236)

;; Start of basic block ( 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u317(11){ }u318(13){ }u319(25){ }u320(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 200 201
;; live  kill	
;; rd  in  	(72)
16, 17, 19, 52, 73, 94, 95, 111, 112, 270, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1893
;; rd  gen 	(3)
268, 1889, 1890
;; rd  kill	(2)
1889, 1890

;; Pred edge  34 [79.3%] 
(code_label 236 331 237 36 43 "" [1 uses])

(note 237 236 238 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 36 arch/arm/mm/fault.c:351 (set (reg:SI 201 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 239 238 240 36 arch/arm/mm/fault.c:351 (set (reg:SI 200)
        (and:SI (reg:SI 201 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 201 [ <variable>.uregs+64 ])
        (nil)))

(insn 240 239 241 36 arch/arm/mm/fault.c:351 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 200)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(jump_insn 241 240 242 36 arch/arm/mm/fault.c:351 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 36 -> ( 41 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(74)
16, 17, 19, 52, 73, 94, 95, 111, 112, 268, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893


;; Succ edge  41 [50.0%] 
;; Succ edge  37 [50.0%]  (fallthru)

;; Start of basic block ( 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u325(11){ }u326(13){ }u327(25){ }u328(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  gen 	 24 [cc] 202
;; live  kill	
;; rd  in  	(74)
16, 17, 19, 52, 73, 94, 95, 111, 112, 268, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893
;; rd  gen 	(2)
267, 1891
;; rd  kill	(1)
1891

;; Pred edge  36 [50.0%]  (fallthru)
(note 242 241 243 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 244 37 arch/arm/mm/fault.c:354 (set (reg:SI 202)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 244 243 245 37 arch/arm/mm/fault.c:354 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 202)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(jump_insn 245 244 246 37 arch/arm/mm/fault.c:354 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 251)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 37 -> ( 38 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; rd  out 	(75)
16, 17, 19, 52, 73, 94, 95, 111, 112, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893


;; Succ edge  38 [39.0%]  (fallthru)
;; Succ edge  39 [61.0%] 

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u332(11){ }u333(13){ }u334(25){ }u335(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; live  gen 	 145 146
;; live  kill	
;; rd  in  	(75)
16, 17, 19, 52, 73, 94, 95, 111, 112, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893
;; rd  gen 	(2)
1840, 1842
;; rd  kill	(4)
1839, 1840, 1841, 1842

;; Pred edge  37 [39.0%]  (fallthru)
(note 246 245 247 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 247 246 248 38 arch/arm/mm/fault.c:360 (set (reg/v:SI 145 [ code ])
        (const_int 196610 [0x30002])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 332 38 arch/arm/mm/fault.c:359 (set (reg/v:SI 146 [ sig ])
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(jump_insn 332 248 333 38 (set (pc)
        (label_ref 264)) -1 (nil))
;; End of basic block 38 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; rd  out 	(77)
16, 17, 19, 52, 73, 94, 95, 111, 112, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893


;; Succ edge  40 [100.0%] 

(barrier 333 332 251)

;; Start of basic block ( 37) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u336(11){ }u337(13){ }u338(25){ }u339(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 145 146 207 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  gen 	 24 [cc] 145 146 207 208
;; live  kill	
;; rd  in  	(75)
16, 17, 19, 52, 73, 94, 95, 111, 112, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893
;; rd  gen 	(5)
266, 1839, 1841, 1894, 1895
;; rd  kill	(6)
1839, 1840, 1841, 1842, 1894, 1895

;; Pred edge  37 [61.0%] 
(code_label 251 333 252 39 44 "" [1 uses])

(note 252 251 253 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 310 39 arch/arm/mm/fault.c:367 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ fault ])
            (const_int 131072 [0x20000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 147 [ fault ])
        (nil)))

(insn 310 253 311 39 arch/arm/mm/fault.c:367 discrim 2 (set (reg:SI 207)
        (const_int 196610 [0x30002])) 167 {*arm_movsi_insn} (nil))

(insn 311 310 313 39 arch/arm/mm/fault.c:367 discrim 2 (set (reg:SI 208)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 313 311 315 39 arch/arm/mm/fault.c:367 discrim 2 (set (reg/v:SI 145 [ code ])
        (if_then_else:SI (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 207)
            (reg:SI 208))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 208)
        (expr_list:REG_DEAD (reg:SI 207)
            (expr_list:REG_DEAD (reg:CC 24 cc)
                (expr_list:REG_EQUAL (if_then_else:SI (eq (reg:CC 24 cc)
                            (const_int 0 [0x0]))
                        (const_int 196610 [0x30002])
                        (const_int 196609 [0x30001]))
                    (nil))))))

(insn 315 313 264 39 arch/arm/mm/fault.c:367 discrim 2 (set (reg/v:SI 146 [ sig ])
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; rd  out 	(79)
16, 17, 19, 52, 73, 94, 95, 111, 112, 266, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 39 38) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u345(11){ }u346(13){ }u347(25){ }u348(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(82)
16, 17, 19, 52, 73, 94, 95, 111, 112, 266, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128

;; Pred edge  39 [100.0%]  (fallthru)
;; Pred edge  38 [100.0%] 
(code_label 264 315 265 40 45 "" [1 uses])

(note 265 264 266 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 266 265 267 40 arch/arm/mm/fault.c:371 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 145 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 145 [ code ])
        (nil)))

(insn 267 266 268 40 arch/arm/mm/fault.c:371 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 158 [ regs ])
        (nil)))

(insn 268 267 269 40 arch/arm/mm/fault.c:371 (set (reg:SI 0 r0)
        (reg/v/f:SI 149 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 149 [ tsk ])
        (nil)))

(insn 269 268 270 40 arch/arm/mm/fault.c:371 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 156 [ addr ])
        (nil)))

(insn 270 269 271 40 arch/arm/mm/fault.c:371 (set (reg:SI 2 r2)
        (reg/v:SI 157 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 157 [ fsr ])
        (nil)))

(insn 271 270 272 40 arch/arm/mm/fault.c:371 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 146 [ sig ])
        (nil)))

(call_insn 272 271 334 40 arch/arm/mm/fault.c:371 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_user_fault") [flags 0x3] <function_decl 0x11459d80 __do_user_fault>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(jump_insn 334 272 335 40 arch/arm/mm/fault.c:372 (set (pc)
        (label_ref 282)) -1 (nil))
;; End of basic block 40 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(82)
16, 17, 19, 52, 73, 94, 95, 111, 112, 266, 267, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895


;; Succ edge  42 [100.0%] 

(barrier 335 334 275)

;; Start of basic block ( 4 7 10 36) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u362(11){ }u363(13){ }u364(25){ }u365(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(81)
16, 17, 19, 21, 25, 29, 52, 73, 94, 95, 111, 112, 128, 268, 295, 299, 304, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893
;; rd  gen 	(0)

;; rd  kill	(16)
113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128

;; Pred edge  4 [50.0%] 
;; Pred edge  7 [15.0%] 
;; Pred edge  10 [15.0%] 
;; Pred edge  36 [50.0%] 
(code_label 275 335 276 41 23 ("no_context") [4 uses])

(note 276 275 277 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 277 276 278 41 arch/arm/mm/fault.c:375 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 148 [ mm ])
        (nil)))

(insn 278 277 279 41 arch/arm/mm/fault.c:375 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 156 [ addr ])
        (nil)))

(insn 279 278 280 41 arch/arm/mm/fault.c:375 (set (reg:SI 2 r2)
        (reg/v:SI 157 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 157 [ fsr ])
        (nil)))

(insn 280 279 281 41 arch/arm/mm/fault.c:375 (set (reg:SI 3 r3)
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 158 [ regs ])
        (nil)))

(call_insn 281 280 282 41 arch/arm/mm/fault.c:375 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_kernel_fault") [flags 0x3] <function_decl 0x11459c80 __do_kernel_fault>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 41 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(80)
16, 17, 19, 21, 25, 29, 52, 73, 94, 95, 111, 112, 268, 295, 299, 304, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893


;; Succ edge  42 [100.0%]  (fallthru)

;; Start of basic block ( 41 33 35 40) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u375(11){ }u376(13){ }u377(25){ }u378(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(91)
16, 17, 19, 21, 25, 29, 52, 73, 94, 95, 111, 112, 266, 267, 268, 270, 271, 295, 299, 304, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895
;; rd  gen 	(1)
0
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29

;; Pred edge  41 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%] 
;; Pred edge  35 [100.0%] 
;; Pred edge  40 [100.0%] 
(code_label 282 281 283 42 42 "" [3 uses])

(note 283 282 288 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 288 283 294 42 arch/arm/mm/fault.c:377 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 294 288 0 42 arch/arm/mm/fault.c:377 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 42 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(86)
0, 52, 73, 94, 95, 111, 112, 266, 267, 268, 270, 271, 295, 299, 304, 309, 310, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_bad_area (do_bad_area)[0:1290]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


do_bad_area

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,3u} r3={5d,2u} r11={1d,4u} r12={3d} r13={1d,9u,1d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r138={1d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 311{262d,48u,1e} in 24{22 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,5] 2[10,5] 3[15,5] 11[20,1] 12[21,3] 13[24,1] 14[25,2] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,3] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 134[252,1] 135[253,1] 136[254,1] 137[255,1] 138[256,1] 139[257,1] 140[258,1] 141[259,1] 142[260,1] 143[261,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d14(2){ }d19(3){ }d20(11){ }d23(12){ }d24(13){ }d26(14){ }d48(25){ }d49(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 14, 19, 20, 23, 24, 26, 48, 49
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 48, 49
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 14, 19, 20, 23, 24, 26, 48, 49

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d20(bb 0 insn -1) }u1(13){ d24(bb 0 insn -1) }u2(25){ d48(bb 0 insn -1) }u3(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136 137 138 139 140 141 142
;; live  kill	
;; rd  in  	(10)
4, 9, 14, 19, 20, 23, 24, 26, 48, 49
;; rd  gen 	(10)
47, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  kill	(12)
45, 46, 47, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138
;; rd  out 	(20)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;;  UD chains for artificial uses
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d14(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 13 { d24(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 10
;;      reg 140 { d258(bb 2 insn 9) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 11
;;      reg 139 { d257(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 135 { d253(bb 2 insn 11) }
;;   UD chains for insn luid 7 uid 13
;;      reg 138 { d256(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 14
;;      reg 142 { d260(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 141 { d259(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 16
;;      reg 24 { d47(bb 2 insn 15) }

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ d20(bb 0 insn -1) }u17(13){ d24(bb 0 insn -1) }u18(25){ d48(bb 0 insn -1) }u19(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 143
;; live  kill	 14 [lr]
;; rd  in  	(20)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  gen 	(1)
261
;; rd  kill	(3)
25, 26, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
4, 9, 14, 19, 20, 23, 24, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261
;;  UD chains for artificial uses
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 19
;;      reg 13 { d24(bb 0 insn -1) }
;;      reg 143 { d261(bb 3 insn 18) }
;;   UD chains for insn luid 2 uid 20
;;      reg 13 { d24(bb 0 insn -1) }
;;      reg 138 { d256(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 21
;;      reg 135 { d253(bb 2 insn 11) }
;;   UD chains for insn luid 4 uid 22
;;      reg 136 { d254(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 23
;;      reg 137 { d255(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 25
;;      reg 13 { d24(bb 0 insn -1) }
;;      reg 0 { d3(bb 3 insn 21) }
;;      reg 1 { d8(bb 3 insn 22) }
;;      reg 2 { d13(bb 3 insn 23) }
;;      reg 3 { d18(bb 3 insn 24) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ d20(bb 0 insn -1) }u33(13){ d24(bb 0 insn -1) }u34(25){ d48(bb 0 insn -1) }u35(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	
;; rd  in  	(20)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;;  UD chains for artificial uses
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 134 { d252(bb 2 insn 12) }
;;   UD chains for insn luid 1 uid 31
;;      reg 136 { d254(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 32
;;      reg 137 { d255(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 33
;;      reg 138 { d256(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 34
;;      reg 13 { d24(bb 0 insn -1) }
;;      reg 0 { d1(bb 4 insn 30) }
;;      reg 1 { d6(bb 4 insn 31) }
;;      reg 2 { d11(bb 4 insn 32) }
;;      reg 3 { d16(bb 4 insn 33) }

( 4 3 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u45(11){ d20(bb 0 insn -1) }u46(13){ d24(bb 0 insn -1) }u47(14){ d26(bb 0 insn -1) }u48(25){ d48(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(21)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(21)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261
;;  UD chains for artificial uses
;;   reg 11 { d20(bb 0 insn -1) }
;;   reg 13 { d24(bb 0 insn -1) }
;;   reg 14 { d26(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 16 to worklist
  Adding insn 25 to worklist
  Adding insn 20 to worklist
  Adding insn 19 to worklist
  Adding insn 34 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 0 r0) in insn 34:
  Adding insn 30 to worklist
Processing use of (reg 1 r1) in insn 34:
  Adding insn 31 to worklist
Processing use of (reg 2 r2) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 3 r3) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 138 [ regs ]) in insn 33:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 137 [ fsr ]) in insn 32:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 136 [ addr ]) in insn 31:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ mm ]) in insn 30:
  Adding insn 12 to worklist
Processing use of (reg 135 [ tsk ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 139) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 140) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 13 sp) in insn 19:
Processing use of (reg 143) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 13 sp) in insn 20:
Processing use of (reg 138 [ regs ]) in insn 20:
Processing use of (reg 13 sp) in insn 25:
Processing use of (reg 0 r0) in insn 25:
  Adding insn 21 to worklist
Processing use of (reg 1 r1) in insn 25:
  Adding insn 22 to worklist
Processing use of (reg 2 r2) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 3 r3) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 137 [ fsr ]) in insn 23:
Processing use of (reg 136 [ addr ]) in insn 22:
Processing use of (reg 135 [ tsk ]) in insn 21:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 141) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 142 [ <variable>.uregs+64 ]) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 138 [ regs ]) in insn 13:


do_bad_area

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,3u} r3={5d,2u} r11={1d,4u} r12={3d} r13={1d,9u,1d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r138={1d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 311{262d,48u,1e} in 24{22 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,5] 2[10,5] 3[15,5] 11[20,1] 12[21,3] 13[24,1] 14[25,2] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,3] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 134[252,1] 135[253,1] 136[254,1] 137[255,1] 138[256,1] 139[257,1] 140[258,1] 141[259,1] 142[260,1] 143[261,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 135 136 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 135 136 137 138 139 140 141 142
;; live  kill	
;; rd  in  	(10)
4, 9, 14, 19, 20, 23, 24, 26, 48, 49
;; rd  gen 	(10)
47, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  kill	(12)
45, 46, 47, 252, 253, 254, 255, 256, 257, 258, 259, 260

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:196 (set (reg/v:SI 136 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ addr ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:196 (set (reg/v:SI 137 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fsr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:196 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ regs ])
        (nil)))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 140)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 139)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 135 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 139)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 12 11 13 2 arch/arm/mm/fault.c:198 (set (reg/v/f:SI 134 [ mm ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ tsk ])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:204 (set (reg:SI 142 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:204 (set (reg:SI 141)
        (and:SI (reg:SI 142 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 142 [ <variable>.uregs+64 ])
        (nil)))

(insn 15 14 16 2 arch/arm/mm/fault.c:204 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(jump_insn 16 15 17 2 arch/arm/mm/fault.c:204 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138
;; rd  out 	(20)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 143
;; live  kill	 14 [lr]
;; rd  in  	(20)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  gen 	(1)
261
;; rd  kill	(3)
25, 26, 261

;; Pred edge  2 [39.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 arch/arm/mm/fault.c:205 (set (reg:SI 143)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 arch/arm/mm/fault.c:205 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (const_int 196609 [0x30001])
            (nil))))

(insn 20 19 21 3 arch/arm/mm/fault.c:205 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ regs ])
        (nil)))

(insn 21 20 22 3 arch/arm/mm/fault.c:205 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ tsk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 135 [ tsk ])
        (nil)))

(insn 22 21 23 3 arch/arm/mm/fault.c:205 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ addr ])
        (nil)))

(insn 23 22 24 3 arch/arm/mm/fault.c:205 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ fsr ])
        (nil)))

(insn 24 23 25 3 arch/arm/mm/fault.c:205 (set (reg:SI 3 r3)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 28 3 arch/arm/mm/fault.c:205 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_user_fault") [flags 0x3] <function_decl 0x11459d80 __do_user_fault>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
4, 9, 14, 19, 20, 23, 24, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	
;; rd  in  	(20)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [61.0%] 
(code_label 28 25 29 4 51 "" [1 uses])

(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 4 arch/arm/mm/fault.c:207 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ mm ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ mm ])
        (nil)))

(insn 31 30 32 4 arch/arm/mm/fault.c:207 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ addr ])
        (nil)))

(insn 32 31 33 4 arch/arm/mm/fault.c:207 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ fsr ])
        (nil)))

(insn 33 32 34 4 arch/arm/mm/fault.c:207 (set (reg:SI 3 r3)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 138 [ regs ])
        (nil)))

(call_insn/j 34 33 35 4 arch/arm/mm/fault.c:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_kernel_fault") [flags 0x3] <function_decl 0x11459c80 __do_kernel_fault>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 35 34 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_translation_fault (do_translation_fault)[0:1294]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 15 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


do_translation_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={4d,3u} r3={3d} r11={1d,8u} r12={3d} r13={1d,10u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,3u} r25={1d,8u} r26={1d,7u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u,1d} r134={1d,2u} r135={1d,2u} r136={1d,2u} r139={1d,4u,1d} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,1u} r147={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,2u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 355{273d,80u,2e} in 39{37 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,4] 2[9,4] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,2] 15[23,2] 16[25,2] 17[27,2] 18[29,2] 19[31,2] 20[33,2] 21[35,2] 22[37,2] 23[39,2] 24[41,7] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 133[252,1] 134[253,1] 135[254,1] 136[255,1] 139[256,1] 140[257,1] 141[258,1] 142[259,1] 143[260,1] 144[261,1] 145[262,1] 146[263,1] 147[264,1] 148[265,1] 149[266,1] 150[267,1] 151[268,1] 152[269,1] 153[270,1] 154[271,1] 155[272,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d12(2){ }d15(3){ }d16(11){ }d19(12){ }d20(13){ }d22(14){ }d48(25){ }d49(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 8, 12, 15, 16, 19, 20, 22, 48, 49
;; rd  kill	(25)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 48, 49
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 8, 12, 15, 16, 19, 20, 22, 48, 49

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d16(bb 0 insn -1) }u1(13){ d20(bb 0 insn -1) }u2(25){ d48(bb 0 insn -1) }u3(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142
;; live  kill	
;; rd  in  	(10)
4, 8, 12, 15, 16, 19, 20, 22, 48, 49
;; rd  gen 	(5)
47, 256, 257, 258, 259
;; rd  kill	(11)
41, 42, 43, 44, 45, 46, 47, 256, 257, 258, 259
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(15)
4, 8, 12, 15, 16, 19, 20, 22, 47, 48, 49, 256, 257, 258, 259
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 139 { d256(bb 2 insn 2) }
;;      reg 142 { d259(bb 2 insn 8) }
;;   eq_note reg 139 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 24 { d47(bb 2 insn 9) }

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d16(bb 0 insn -1) }u12(13){ d20(bb 0 insn -1) }u13(25){ d48(bb 0 insn -1) }u14(26){ d49(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
4, 8, 12, 15, 16, 19, 20, 22, 47, 48, 49, 256, 257, 258, 259
;; rd  gen 	(1)
3
;; rd  kill	(5)
0, 1, 2, 3, 4
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 8, 12, 15, 16, 19, 20, 22, 47, 48, 49, 256, 257, 258, 259
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d4(bb 0 insn -1) }
;;      reg 1 { d8(bb 0 insn -1) }
;;      reg 2 { d12(bb 0 insn -1) }

( 2 )->[4]->( 7 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d16(bb 0 insn -1) }u20(13){ d20(bb 0 insn -1) }u21(25){ d48(bb 0 insn -1) }u22(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(15)
4, 8, 12, 15, 16, 19, 20, 22, 47, 48, 49, 256, 257, 258, 259
;; rd  gen 	(3)
45, 260, 261
;; rd  kill	(9)
41, 42, 43, 44, 45, 46, 47, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(17)
4, 8, 12, 15, 16, 19, 20, 22, 45, 48, 49, 256, 257, 258, 259, 260, 261
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 141 { d258(bb 2 insn 4) }
;;   UD chains for insn luid 1 uid 21
;;      reg 144 { d261(bb 4 insn 20) }
;;   UD chains for insn luid 2 uid 22
;;      reg 143 { d260(bb 4 insn 21) }
;;   UD chains for insn luid 3 uid 23
;;      reg 24 { d45(bb 4 insn 22) }

( 4 )->[5]->( 7 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ d16(bb 0 insn -1) }u28(13){ d20(bb 0 insn -1) }u29(25){ d48(bb 0 insn -1) }u30(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 133 134 136 145 146 147 148 149 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 133 134 136 145 146 147 148 149 150
;; live  kill	 24 [cc]
;; rd  in  	(17)
4, 8, 12, 15, 16, 19, 20, 22, 45, 48, 49, 256, 257, 258, 259, 260, 261
;; rd  gen 	(10)
43, 252, 253, 255, 262, 263, 264, 265, 266, 267
;; rd  kill	(16)
41, 42, 43, 44, 45, 46, 47, 252, 253, 255, 262, 263, 264, 265, 266, 267
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 139 140 141 145 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 139 140 141 145 147
;; rd  out 	(26)
4, 8, 12, 15, 16, 19, 20, 22, 43, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 26
;;      reg 139 { d256(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 27
;;      reg 145 { d262(bb 5 insn 26) }
;;   UD chains for insn luid 4 uid 29
;;      reg 146 { d263(bb 5 insn 28) }
;;   UD chains for insn luid 5 uid 30
;;      reg 136 { d255(bb 5 insn 27) }
;;      reg 147 { d264(bb 5 insn 29) }
;;   UD chains for insn luid 6 uid 31
;;      reg 139 { d256(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 32
;;      reg 148 { d265(bb 5 insn 31) }
;;   UD chains for insn luid 8 uid 33
;;      reg 134 { d253(bb 5 insn 30) }
;;      reg 149 { d266(bb 5 insn 32) }
;;   UD chains for insn luid 9 uid 34
;;      reg 150 { d267(bb 5 insn 33) }
;;   UD chains for insn luid 10 uid 35
;;      reg 24 { d43(bb 5 insn 34) }

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ d16(bb 0 insn -1) }u43(13){ d20(bb 0 insn -1) }u44(25){ d48(bb 0 insn -1) }u45(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 145 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 145 147
;; lr  def 	 24 [cc] 135 151 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 145 147
;; live  gen 	 135 151 152 153 154 155
;; live  kill	 24 [cc]
;; rd  in  	(26)
4, 8, 12, 15, 16, 19, 20, 22, 43, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267
;; rd  gen 	(6)
254, 268, 269, 270, 271, 272
;; rd  kill	(13)
41, 42, 43, 44, 45, 46, 47, 254, 268, 269, 270, 271, 272
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(31)
4, 8, 12, 15, 16, 19, 20, 22, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 37
;;      reg 133 { d252(bb 5 insn 25) }
;;   UD chains for insn luid 1 uid 38
;;      reg 152 { d269(bb 6 insn 37) }
;;   eq_note reg 133 { }
;;   UD chains for insn luid 2 uid 39
;;      reg 151 { d268(bb 6 insn 38) }
;;   UD chains for insn luid 3 uid 40
;;      reg 136 { d255(bb 5 insn 27) }
;;      reg 153 { d270(bb 6 insn 39) }
;;   UD chains for insn luid 4 uid 41
;;      reg 145 { d262(bb 5 insn 26) }
;;      reg 147 { d264(bb 5 insn 29) }
;;   UD chains for insn luid 5 uid 42
;;      reg 145 { d262(bb 5 insn 26) }
;;      reg 153 { d270(bb 6 insn 39) }
;;      reg 154 { d271(bb 6 insn 41) }
;;   UD chains for insn luid 6 uid 43
;;      reg 134 { d253(bb 5 insn 30) }
;;   UD chains for insn luid 7 uid 44
;;      reg 135 { d254(bb 6 insn 40) }
;;      reg 155 { d272(bb 6 insn 43) }
;;   UD chains for insn luid 8 uid 45
;;      reg 135 { d254(bb 6 insn 40) }

( 4 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ d16(bb 0 insn -1) }u62(13){ d20(bb 0 insn -1) }u63(25){ d48(bb 0 insn -1) }u64(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(27)
4, 8, 12, 15, 16, 19, 20, 22, 43, 45, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267
;; rd  gen 	(0)

;; rd  kill	(2)
21, 22
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
4, 8, 12, 15, 16, 19, 20, 43, 45, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 52
;;      reg 139 { d256(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 53
;;      reg 140 { d257(bb 2 insn 3) }
;;   UD chains for insn luid 2 uid 54
;;      reg 141 { d258(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 55
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d2(bb 7 insn 52) }
;;      reg 1 { d6(bb 7 insn 53) }
;;      reg 2 { d10(bb 7 insn 54) }

( 7 6 )->[8]->( 1 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(11){ d16(bb 0 insn -1) }u73(13){ d20(bb 0 insn -1) }u74(25){ d48(bb 0 insn -1) }u75(26){ d49(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(33)
4, 8, 12, 15, 16, 19, 20, 22, 43, 45, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;; rd  gen 	(1)
0
;; rd  kill	(5)
0, 1, 2, 3, 4
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
0, 8, 12, 15, 16, 19, 20, 22, 43, 45, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }
;;   reg 26 { d49(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 69
;;      reg 0 { d0(bb 8 insn 63) }

( 3 8 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u77(0){ d3(bb 3 insn 15) d0(bb 8 insn 63) }u78(11){ d16(bb 0 insn -1) }u79(13){ d20(bb 0 insn -1) }u80(14){ d22(bb 0 insn -1) }u81(25){ d48(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(35)
0, 3, 8, 12, 15, 16, 19, 20, 22, 43, 45, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(35)
0, 3, 8, 12, 15, 16, 19, 20, 22, 43, 45, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;;  UD chains for artificial uses
;;   reg 0 { d3(bb 3 insn 15) d0(bb 8 insn 63) }
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 14 { d22(bb 0 insn -1) }
;;   reg 25 { d48(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 10 to worklist
  Adding insn 15 to worklist
  Adding insn 23 to worklist
  Adding insn 35 to worklist
  Adding insn 73 to worklist
  Adding insn 46 to worklist
  Adding insn 45 to worklist
  Adding insn 44 to worklist
  Adding insn 42 to worklist
  Adding insn 55 to worklist
  Adding insn 69 to worklist
Finished finding needed instructions:
  Adding insn 63 to worklist
Processing use of (reg 0 r0) in insn 69:
Processing use of (reg 13 sp) in insn 55:
Processing use of (reg 0 r0) in insn 55:
  Adding insn 52 to worklist
Processing use of (reg 1 r1) in insn 55:
  Adding insn 53 to worklist
Processing use of (reg 2 r2) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 141 [ regs ]) in insn 54:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 140 [ fsr ]) in insn 53:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 139 [ addr ]) in insn 52:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 145) in insn 42:
  Adding insn 26 to worklist
Processing use of (reg 153) in insn 42:
  Adding insn 39 to worklist
Processing use of (reg 154) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 145) in insn 41:
Processing use of (reg 147 [ init_mm.pgd ]) in insn 41:
  Adding insn 29 to worklist
Processing use of (reg 146) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 151) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 152) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 133 [ pg ]) in insn 37:
  Adding insn 25 to worklist
Processing use of (reg 139 [ addr ]) in insn 26:
Processing use of (reg 135 [ pmd ]) in insn 44:
  Adding insn 40 to worklist
Processing use of (reg 155) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 134 [ pmd_k ]) in insn 43:
  Adding insn 30 to worklist
Processing use of (reg 136 [ D.24612 ]) in insn 30:
  Adding insn 27 to worklist
Processing use of (reg 147 [ init_mm.pgd ]) in insn 30:
Processing use of (reg 145) in insn 27:
Processing use of (reg 136 [ D.24612 ]) in insn 40:
Processing use of (reg 153) in insn 40:
Processing use of (reg 135 [ pmd ]) in insn 45:
Processing use of (reg 24 cc) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 150) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 134 [ pmd_k ]) in insn 33:
Processing use of (reg 149) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 148) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 139 [ addr ]) in insn 31:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 143) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 144 [ <variable>.uregs+64 ]) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 141 [ regs ]) in insn 20:
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 0 r0) in insn 15:
Processing use of (reg 1 r1) in insn 15:
Processing use of (reg 2 r2) in insn 15:
Processing use of (reg 24 cc) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 139 [ addr ]) in insn 9:
Processing use of (reg 142) in insn 9:
  Adding insn 8 to worklist


do_translation_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,5u} r1={4d,3u} r2={4d,3u} r3={3d} r11={1d,8u} r12={3d} r13={1d,10u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,3u} r25={1d,8u} r26={1d,7u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u,1d} r134={1d,2u} r135={1d,2u} r136={1d,2u} r139={1d,4u,1d} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,1u} r147={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,2u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 355{273d,80u,2e} in 39{37 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,4] 2[9,4] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,2] 15[23,2] 16[25,2] 17[27,2] 18[29,2] 19[31,2] 20[33,2] 21[35,2] 22[37,2] 23[39,2] 24[41,7] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 133[252,1] 134[253,1] 135[254,1] 136[255,1] 139[256,1] 140[257,1] 141[258,1] 142[259,1] 143[260,1] 144[261,1] 145[262,1] 146[263,1] 147[264,1] 148[265,1] 149[266,1] 150[267,1] 151[268,1] 152[269,1] 153[270,1] 154[271,1] 155[272,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142
;; live  kill	
;; rd  in  	(10)
4, 8, 12, 15, 16, 19, 20, 22, 48, 49
;; rd  gen 	(5)
47, 256, 257, 258, 259
;; rd  kill	(11)
41, 42, 43, 44, 45, 46, 47, 256, 257, 258, 259

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:407 (set (reg/v:SI 139 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:407 (set (reg/v:SI 140 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:407 (set (reg/v/f:SI 141 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:413 (set (reg:SI 142)
        (const_int -1090519041 [0xffffffffbeffffff])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:413 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ addr ])
            (reg:SI 142))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (compare:CC (reg/v:SI 139 [ addr ])
                (const_int -1090519041 [0xffffffffbeffffff]))
            (nil))))

(jump_insn 10 9 11 2 arch/arm/mm/fault.c:413 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(15)
4, 8, 12, 15, 16, 19, 20, 22, 47, 48, 49, 256, 257, 258, 259


;; Succ edge  3 [20.7%]  (fallthru)
;; Succ edge  4 [79.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(15)
4, 8, 12, 15, 16, 19, 20, 22, 47, 48, 49, 256, 257, 258, 259
;; rd  gen 	(1)
3
;; rd  kill	(5)
0, 1, 2, 3, 4

;; Pred edge  2 [20.7%]  (fallthru)
(note 11 10 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 15 11 16 3 arch/arm/mm/fault.c:414 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_page_fault") [flags 0x3] <function_decl 0x1147d180 do_page_fault>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
3, 8, 12, 15, 16, 19, 20, 22, 47, 48, 49, 256, 257, 258, 259


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 16 15 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(15)
4, 8, 12, 15, 16, 19, 20, 22, 47, 48, 49, 256, 257, 258, 259
;; rd  gen 	(3)
45, 260, 261
;; rd  kill	(9)
41, 42, 43, 44, 45, 46, 47, 260, 261

;; Pred edge  2 [79.3%] 
(code_label 18 16 19 4 57 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/fault.c:416 (set (reg:SI 144 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 arch/arm/mm/fault.c:416 (set (reg:SI 143)
        (and:SI (reg:SI 144 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 144 [ <variable>.uregs+64 ])
        (nil)))

(insn 22 21 23 4 arch/arm/mm/fault.c:416 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn 23 22 24 4 arch/arm/mm/fault.c:416 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 4 -> ( 7 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(17)
4, 8, 12, 15, 16, 19, 20, 22, 45, 48, 49, 256, 257, 258, 259, 260, 261


;; Succ edge  7 [29.0%] 
;; Succ edge  5 [71.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 133 134 136 145 146 147 148 149 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 133 134 136 145 146 147 148 149 150
;; live  kill	 24 [cc]
;; rd  in  	(17)
4, 8, 12, 15, 16, 19, 20, 22, 45, 48, 49, 256, 257, 258, 259, 260, 261
;; rd  gen 	(10)
43, 252, 253, 255, 262, 263, 264, 265, 266, 267
;; rd  kill	(16)
41, 42, 43, 44, 45, 46, 47, 252, 253, 255, 262, 263, 264, 265, 266, 267

;; Pred edge  4 [71.0%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/mm/fault.c:424 (parallel [
            (set (reg/v:SI 133 [ pg ])
                (asm_operands:SI ("mrc	p15, 0, %0, c2, c0, 0") ("=r") 0 []
                     [] 8342805))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 26 25 27 5 arch/arm/mm/fault.c:424 (set (reg:SI 145)
        (lshiftrt:SI (reg/v:SI 139 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 28 5 arch/arm/mm/fault.c:424 (set (reg:SI 136 [ D.24612 ])
        (ashift:SI (reg:SI 145)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 5 arch/arm/mm/fault.c:441 (set (reg/f:SI 146)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/mm/fault.c:441 (set (reg/f:SI 147 [ init_mm.pgd ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 146)
                (const_int 36 [0x24])) [0 init_mm.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>)
                        (const_int 36 [0x24]))) [0 init_mm.pgd+0 S4 A32])
            (nil))))

(insn 30 29 31 5 arch/arm/mm/fault.c:441 (set (reg/v/f:SI 134 [ pmd_k ])
        (plus:SI (reg/f:SI 147 [ init_mm.pgd ])
            (reg:SI 136 [ D.24612 ]))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 5 arch/arm/mm/fault.c:451 (set (reg:SI 148)
        (lshiftrt:SI (reg/v:SI 139 [ addr ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 32 31 33 5 arch/arm/mm/fault.c:451 (set (reg:SI 149)
        (and:SI (reg:SI 148)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 33 32 34 5 arch/arm/mm/fault.c:451 (set (reg:SI 150)
        (mem:SI (plus:SI (mult:SI (reg:SI 149)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 134 [ pmd_k ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 34 33 35 5 arch/arm/mm/fault.c:451 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(jump_insn 35 34 36 5 arch/arm/mm/fault.c:451 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 139 140 141 145 147
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 139 140 141 145 147
;; rd  out 	(26)
4, 8, 12, 15, 16, 19, 20, 22, 43, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267


;; Succ edge  7 [61.0%] 
;; Succ edge  6 [39.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 145 147
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 145 147
;; lr  def 	 24 [cc] 135 151 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 145 147
;; live  gen 	 135 151 152 153 154 155
;; live  kill	 24 [cc]
;; rd  in  	(26)
4, 8, 12, 15, 16, 19, 20, 22, 43, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267
;; rd  gen 	(6)
254, 268, 269, 270, 271, 272
;; rd  kill	(13)
41, 42, 43, 44, 45, 46, 47, 254, 268, 269, 270, 271, 272

;; Pred edge  5 [39.0%]  (fallthru)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 arch/arm/mm/fault.c:440 (set (reg:SI 152)
        (and:SI (reg/v:SI 133 [ pg ])
            (const_int -16321 [0xffffffffffffc03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ pg ])
        (nil)))

(insn 38 37 39 6 arch/arm/mm/fault.c:440 (set (reg:SI 151)
        (and:SI (reg:SI 152)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 133 [ pg ])
                (const_int -16384 [0xffffffffffffc000]))
            (nil))))

(insn 39 38 40 6 arch/arm/mm/fault.c:440 (set (reg:SI 153)
        (plus:SI (reg:SI 151)
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 40 39 41 6 arch/arm/mm/fault.c:440 (set (reg/v/f:SI 135 [ pmd ])
        (plus:SI (reg:SI 153)
            (reg:SI 136 [ D.24612 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 136 [ D.24612 ])
        (nil)))

(insn 41 40 42 6 arch/arm/mm/fault.c:455 (set (reg:SI 154)
        (mem:SI (plus:SI (mult:SI (reg:SI 145)
                    (const_int 8 [0x8]))
                (reg/f:SI 147 [ init_mm.pgd ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147 [ init_mm.pgd ])
        (nil)))

(insn 42 41 43 6 arch/arm/mm/fault.c:455 (set (mem:SI (plus:SI (mult:SI (reg:SI 145)
                    (const_int 8 [0x8]))
                (reg:SI 153)) [0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_DEAD (reg:SI 153)
            (expr_list:REG_DEAD (reg:SI 145)
                (nil)))))

(insn 43 42 44 6 arch/arm/mm/fault.c:455 (set (reg:SI 155)
        (mem:SI (plus:SI (reg/v/f:SI 134 [ pmd_k ])
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ pmd_k ])
        (nil)))

(insn 44 43 45 6 arch/arm/mm/fault.c:455 (set (mem:SI (plus:SI (reg/v/f:SI 135 [ pmd ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 155)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 45 44 46 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:479 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 135 [ pmd ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8282573)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg/v/f:SI 135 [ pmd ])
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))

(insn 46 45 73 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:487 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8283597)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(jump_insn 73 46 74 6 arch/arm/mm/fault.c:456 (set (pc)
        (label_ref 57)) -1 (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(31)
4, 8, 12, 15, 16, 19, 20, 22, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272


;; Succ edge  8 [100.0%] 

(barrier 74 73 50)

;; Start of basic block ( 4 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(27)
4, 8, 12, 15, 16, 19, 20, 22, 43, 45, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267
;; rd  gen 	(0)

;; rd  kill	(2)
21, 22

;; Pred edge  4 [29.0%] 
;; Pred edge  5 [61.0%] 
(code_label 50 74 51 7 58 ("bad_area") [2 uses])

(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 7 arch/arm/mm/fault.c:459 (set (reg:SI 0 r0)
        (reg/v:SI 139 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ addr ])
        (nil)))

(insn 53 52 54 7 arch/arm/mm/fault.c:459 (set (reg:SI 1 r1)
        (reg/v:SI 140 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ fsr ])
        (nil)))

(insn 54 53 55 7 arch/arm/mm/fault.c:459 (set (reg:SI 2 r2)
        (reg/v/f:SI 141 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ regs ])
        (nil)))

(call_insn 55 54 57 7 arch/arm/mm/fault.c:459 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_bad_area") [flags 0x3] <function_decl 0x11459880 do_bad_area>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
4, 8, 12, 15, 16, 19, 20, 43, 45, 48, 49, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(33)
4, 8, 12, 15, 16, 19, 20, 22, 43, 45, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;; rd  gen 	(1)
0
;; rd  kill	(5)
0, 1, 2, 3, 4

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 57 55 58 8 59 "" [1 uses])

(note 58 57 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 63 58 69 8 arch/arm/mm/fault.c:461 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 69 63 0 8 arch/arm/mm/fault.c:461 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
0, 8, 12, 15, 16, 19, 20, 22, 43, 45, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_sect_fault (do_sect_fault)[0:1295]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


do_sect_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} 
;;    total ref usage 144{129d,15u,0e} in 4{3 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 133[128,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d14(14){ }d25(25){ }d26(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 25, 26
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 25, 26
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 25, 26

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d25(bb 0 insn -1) }u3(26){ d26(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 25, 26
;; rd  gen 	(2)
0, 128
;; rd  kill	(6)
0, 1, 2, 13, 14, 128
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 4, 6, 8, 9, 11, 12, 25, 26, 128
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d25(bb 0 insn -1) }
;;   reg 26 { d26(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 11
;;      reg 13 { d12(bb 0 insn -1) }
;;      reg 0 { d2(bb 0 insn -1) }
;;      reg 1 { d4(bb 0 insn -1) }
;;      reg 2 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 16
;;      reg 133 { d128(bb 2 insn 12) }
;;   UD chains for insn luid 3 uid 22
;;      reg 0 { d0(bb 2 insn 16) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u10(0){ d0(bb 2 insn 16) }u11(11){ d9(bb 0 insn -1) }u12(13){ d12(bb 0 insn -1) }u13(14){ }u14(25){ d25(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 4, 6, 8, 9, 11, 12, 25, 26, 128
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
0, 4, 6, 8, 9, 11, 12, 25, 26, 128
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 16) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d25(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 22 to worklist
  Adding insn 11 to worklist
Finished finding needed instructions:
  Adding insn 16 to worklist
Processing use of (reg 133 [ <result> ]) in insn 16:
  Adding insn 12 to worklist
Processing use of (reg 13 sp) in insn 11:
Processing use of (reg 0 r0) in insn 11:
Processing use of (reg 1 r1) in insn 11:
Processing use of (reg 2 r2) in insn 11:
Processing use of (reg 0 r0) in insn 22:


do_sect_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={3d,3u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} 
;;    total ref usage 144{129d,15u,0e} in 4{3 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,1] 25[25,1] 26[26,1] 27[27,1] 28[28,1] 29[29,1] 30[30,1] 31[31,1] 32[32,1] 33[33,1] 34[34,1] 35[35,1] 36[36,1] 37[37,1] 38[38,1] 39[39,1] 40[40,1] 41[41,1] 42[42,1] 43[43,1] 44[44,1] 45[45,1] 46[46,1] 47[47,1] 48[48,1] 49[49,1] 50[50,1] 51[51,1] 52[52,1] 53[53,1] 54[54,1] 55[55,1] 56[56,1] 57[57,1] 58[58,1] 59[59,1] 60[60,1] 61[61,1] 62[62,1] 63[63,1] 64[64,1] 65[65,1] 66[66,1] 67[67,1] 68[68,1] 69[69,1] 70[70,1] 71[71,1] 72[72,1] 73[73,1] 74[74,1] 75[75,1] 76[76,1] 77[77,1] 78[78,1] 79[79,1] 80[80,1] 81[81,1] 82[82,1] 83[83,1] 84[84,1] 85[85,1] 86[86,1] 87[87,1] 88[88,1] 89[89,1] 90[90,1] 91[91,1] 92[92,1] 93[93,1] 94[94,1] 95[95,1] 96[96,1] 97[97,1] 98[98,1] 99[99,1] 100[100,1] 101[101,1] 102[102,1] 103[103,1] 104[104,1] 105[105,1] 106[106,1] 107[107,1] 108[108,1] 109[109,1] 110[110,1] 111[111,1] 112[112,1] 113[113,1] 114[114,1] 115[115,1] 116[116,1] 117[117,1] 118[118,1] 119[119,1] 120[120,1] 121[121,1] 122[122,1] 123[123,1] 124[124,1] 125[125,1] 126[126,1] 127[127,1] 133[128,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 25, 26
;; rd  gen 	(2)
0, 128
;; rd  kill	(6)
0, 1, 2, 13, 14, 128

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 11 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 11 5 12 2 arch/arm/mm/fault.c:478 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_bad_area") [flags 0x3] <function_decl 0x11459880 do_bad_area>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 16 2 arch/arm/mm/fault.c:480 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 12 22 2 arch/arm/mm/fault.c:480 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 22 16 0 2 arch/arm/mm/fault.c:480 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 4, 6, 8, 9, 11, 12, 25, 26, 128


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_PrefetchAbort (do_PrefetchAbort)[0:1300]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


do_PrefetchAbort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={7d,4u} r2={6d,4u} r3={6d,2u} r11={1d,4u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,9u,1d} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,3u} r134={1d,1u} r135={1d,2u} r136={1d,5u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,2u,1d} r143={1d,1u,1d} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,2u} r149={1d,1u} r151={1d,1u} 
;;    total ref usage 459{388d,68u,3e} in 36{33 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370
0[0,6] 1[6,7] 2[13,6] 3[19,6] 11[25,1] 12[26,4] 13[30,1] 14[31,4] 15[35,3] 16[38,3] 17[41,3] 18[44,3] 19[47,3] 20[50,3] 21[53,3] 22[56,3] 23[59,3] 24[62,4] 25[66,1] 26[67,1] 27[68,3] 28[71,3] 29[74,3] 30[77,3] 31[80,3] 32[83,3] 33[86,3] 34[89,3] 35[92,3] 36[95,3] 37[98,3] 38[101,3] 39[104,3] 40[107,3] 41[110,3] 42[113,3] 43[116,3] 44[119,3] 45[122,3] 46[125,3] 47[128,3] 48[131,3] 49[134,3] 50[137,3] 51[140,3] 52[143,3] 53[146,3] 54[149,3] 55[152,3] 56[155,3] 57[158,3] 58[161,3] 59[164,3] 60[167,3] 61[170,3] 62[173,3] 63[176,3] 64[179,3] 65[182,3] 66[185,3] 67[188,3] 68[191,3] 69[194,3] 70[197,3] 71[200,3] 72[203,3] 73[206,3] 74[209,3] 75[212,3] 76[215,3] 77[218,3] 78[221,3] 79[224,3] 80[227,3] 81[230,3] 82[233,3] 83[236,3] 84[239,3] 85[242,3] 86[245,3] 87[248,3] 88[251,3] 89[254,3] 90[257,3] 91[260,3] 92[263,3] 93[266,3] 94[269,3] 95[272,3] 96[275,3] 97[278,3] 98[281,3] 99[284,3] 100[287,3] 101[290,3] 102[293,3] 103[296,3] 104[299,3] 105[302,3] 106[305,3] 107[308,3] 108[311,3] 109[314,3] 110[317,3] 111[320,3] 112[323,3] 113[326,3] 114[329,3] 115[332,3] 116[335,3] 117[338,3] 118[341,3] 119[344,3] 120[347,3] 121[350,3] 122[353,3] 123[356,3] 124[359,3] 125[362,3] 126[365,3] 127[368,3] 133[371,1] 134[372,1] 135[373,1] 136[374,1] 137[375,1] 138[376,1] 139[377,1] 140[378,1] 141[379,1] 142[380,1] 143[381,1] 144[382,1] 145[383,1] 147[384,1] 148[385,1] 149[386,1] 151[387,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d12(1){ }d18(2){ }d24(3){ }d25(11){ }d29(12){ }d30(13){ }d34(14){ }d66(25){ }d67(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 12, 18, 24, 25, 29, 30, 34, 66, 67
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 66, 67
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 12, 18, 24, 25, 29, 30, 34, 66, 67

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d25(bb 0 insn -1) }u1(13){ d30(bb 0 insn -1) }u2(25){ d66(bb 0 insn -1) }u3(26){ d67(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 136 137 138 139 140 141 142 143 144 145
;; live  kill	 14 [lr]
;; rd  in  	(10)
5, 12, 18, 24, 25, 29, 30, 34, 66, 67
;; rd  gen 	(15)
4, 64, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 31, 32, 33, 34, 62, 63, 64, 65, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; rd  out 	(23)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d66(bb 0 insn -1) }
;;   reg 26 { d67(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 9
;;      reg 136 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 10
;;      reg 139 { d377(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 136 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 12
;;      reg 140 { d378(bb 2 insn 10) }
;;      reg 141 { d379(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 142 { d380(bb 2 insn 12) }
;;   UD chains for insn luid 9 uid 14
;;      reg 138 { d376(bb 2 insn 8) }
;;      reg 143 { d381(bb 2 insn 13) }
;;   eq_note reg 143 { }
;;   UD chains for insn luid 10 uid 15
;;      reg 136 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 11 uid 16
;;      reg 138 { d376(bb 2 insn 8) }
;;      reg 142 { d380(bb 2 insn 12) }
;;   eq_note reg 142 { }
;;   UD chains for insn luid 12 uid 18
;;      reg 144 { d382(bb 2 insn 15) }
;;   UD chains for insn luid 13 uid 20
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 0 { d5(bb 0 insn -1) }
;;      reg 1 { d11(bb 2 insn 18) }
;;      reg 2 { d18(bb 0 insn -1) }
;;      reg 145 { d383(bb 2 insn 16) }
;;   UD chains for insn luid 14 uid 21
;;      reg 0 { d4(bb 2 insn 20) }
;;   UD chains for insn luid 15 uid 22
;;      reg 134 { d372(bb 2 insn 21) }
;;   UD chains for insn luid 16 uid 23
;;      reg 24 { d64(bb 2 insn 22) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ d25(bb 0 insn -1) }u30(13){ d30(bb 0 insn -1) }u31(25){ d66(bb 0 insn -1) }u32(26){ d67(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148 149 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 148 149 151
;; live  kill	 14 [lr]
;; rd  in  	(23)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; rd  gen 	(4)
384, 385, 386, 387
;; rd  kill	(8)
31, 32, 33, 34, 384, 385, 386, 387
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d66(bb 0 insn -1) }
;;   reg 26 { d67(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 27
;;      reg 133 { d371(bb 2 insn 14) }
;;   UD chains for insn luid 2 uid 28
;;      reg 136 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 29
;;      reg 135 { d373(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 30
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 0 { d1(bb 3 insn 26) }
;;      reg 1 { d9(bb 3 insn 27) }
;;      reg 2 { d16(bb 3 insn 28) }
;;      reg 3 { d22(bb 3 insn 29) }
;;   UD chains for insn luid 5 uid 31
;;      reg 133 { d371(bb 2 insn 14) }
;;   UD chains for insn luid 6 uid 32
;;      reg 25 { d66(bb 0 insn -1) }
;;      reg 147 { d384(bb 3 insn 31) }
;;   UD chains for insn luid 8 uid 34
;;      reg 25 { d66(bb 0 insn -1) }
;;      reg 148 { d385(bb 3 insn 33) }
;;   UD chains for insn luid 9 uid 35
;;      reg 133 { d371(bb 2 insn 14) }
;;   UD chains for insn luid 10 uid 36
;;      reg 25 { d66(bb 0 insn -1) }
;;      reg 149 { d386(bb 3 insn 35) }
;;   UD chains for insn luid 11 uid 37
;;      reg 25 { d66(bb 0 insn -1) }
;;      reg 135 { d373(bb 2 insn 2) }
;;   UD chains for insn luid 12 uid 39
;;      reg 25 { d66(bb 0 insn -1) }
;;   UD chains for insn luid 13 uid 41
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 148 { d385(bb 3 insn 33) }
;;   UD chains for insn luid 15 uid 43
;;      reg 137 { d375(bb 2 insn 4) }
;;   UD chains for insn luid 16 uid 44
;;      reg 151 { d387(bb 3 insn 39) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 17 uid 45
;;      reg 136 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 18 uid 46
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 0 { d0(bb 3 insn 42) }
;;      reg 1 { d7(bb 3 insn 43) }
;;      reg 2 { d14(bb 3 insn 44) }
;;      reg 3 { d20(bb 3 insn 45) }

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u63(11){ d25(bb 0 insn -1) }u64(13){ d30(bb 0 insn -1) }u65(25){ d66(bb 0 insn -1) }u66(26){ d67(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d66(bb 0 insn -1) }
;;   reg 26 { d67(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u67(11){ d25(bb 0 insn -1) }u68(13){ d30(bb 0 insn -1) }u69(14){ }u70(25){ d66(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d66(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 23 to worklist
  Adding insn 20 to worklist
  Adding insn 46 to worklist
  Adding insn 41 to worklist
  Adding insn 37 to worklist
  Adding insn 36 to worklist
  Adding insn 34 to worklist
  Adding insn 32 to worklist
  Adding insn 30 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 30:
Processing use of (reg 0 r0) in insn 30:
  Adding insn 26 to worklist
Processing use of (reg 1 r1) in insn 30:
  Adding insn 27 to worklist
Processing use of (reg 2 r2) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 3 r3) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 135 [ addr ]) in insn 29:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136 [ ifsr ]) in insn 28:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 133 [ inf ]) in insn 27:
  Adding insn 14 to worklist
Processing use of (reg 138) in insn 14:
  Adding insn 8 to worklist
Processing use of (reg 143) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 142) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 140) in insn 12:
  Adding insn 10 to worklist
Processing use of (reg 141) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 136 [ ifsr ]) in insn 11:
Processing use of (reg 139) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 136 [ ifsr ]) in insn 9:
Processing use of (reg 25 sfp) in insn 32:
Processing use of (reg 147 [ <variable>.sig ]) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 133 [ inf ]) in insn 31:
Processing use of (reg 25 sfp) in insn 34:
Processing use of (reg 148) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 25 sfp) in insn 36:
Processing use of (reg 149 [ <variable>.code ]) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 133 [ inf ]) in insn 35:
Processing use of (reg 25 sfp) in insn 37:
Processing use of (reg 135 [ addr ]) in insn 37:
Processing use of (reg 13 sp) in insn 41:
Processing use of (reg 148) in insn 41:
Processing use of (reg 13 sp) in insn 46:
Processing use of (reg 0 r0) in insn 46:
  Adding insn 42 to worklist
Processing use of (reg 1 r1) in insn 46:
  Adding insn 43 to worklist
Processing use of (reg 2 r2) in insn 46:
  Adding insn 44 to worklist
Processing use of (reg 3 r3) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 136 [ ifsr ]) in insn 45:
Processing use of (reg 151) in insn 44:
  Adding insn 39 to worklist
Processing use of (reg 25 sfp) in insn 39:
Processing use of (reg 137 [ regs ]) in insn 43:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 20:
Processing use of (reg 0 r0) in insn 20:
Processing use of (reg 1 r1) in insn 20:
  Adding insn 18 to worklist
Processing use of (reg 2 r2) in insn 20:
Processing use of (reg 145 [ <variable>.fn ]) in insn 20:
  Adding insn 16 to worklist
Processing use of (reg 138) in insn 16:
Processing use of (reg 142) in insn 16:
Processing use of (reg 144) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 136 [ ifsr ]) in insn 15:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 134 [ D.24714 ]) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 0 r0) in insn 21:


do_PrefetchAbort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={7d,4u} r2={6d,4u} r3={6d,2u} r11={1d,4u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,9u,1d} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,3u} r134={1d,1u} r135={1d,2u} r136={1d,5u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,2u,1d} r143={1d,1u,1d} r144={1d,1u} r145={1d,1u} r147={1d,1u} r148={1d,2u} r149={1d,1u} r151={1d,1u} 
;;    total ref usage 459{388d,68u,3e} in 36{33 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370
0[0,6] 1[6,7] 2[13,6] 3[19,6] 11[25,1] 12[26,4] 13[30,1] 14[31,4] 15[35,3] 16[38,3] 17[41,3] 18[44,3] 19[47,3] 20[50,3] 21[53,3] 22[56,3] 23[59,3] 24[62,4] 25[66,1] 26[67,1] 27[68,3] 28[71,3] 29[74,3] 30[77,3] 31[80,3] 32[83,3] 33[86,3] 34[89,3] 35[92,3] 36[95,3] 37[98,3] 38[101,3] 39[104,3] 40[107,3] 41[110,3] 42[113,3] 43[116,3] 44[119,3] 45[122,3] 46[125,3] 47[128,3] 48[131,3] 49[134,3] 50[137,3] 51[140,3] 52[143,3] 53[146,3] 54[149,3] 55[152,3] 56[155,3] 57[158,3] 58[161,3] 59[164,3] 60[167,3] 61[170,3] 62[173,3] 63[176,3] 64[179,3] 65[182,3] 66[185,3] 67[188,3] 68[191,3] 69[194,3] 70[197,3] 71[200,3] 72[203,3] 73[206,3] 74[209,3] 75[212,3] 76[215,3] 77[218,3] 78[221,3] 79[224,3] 80[227,3] 81[230,3] 82[233,3] 83[236,3] 84[239,3] 85[242,3] 86[245,3] 87[248,3] 88[251,3] 89[254,3] 90[257,3] 91[260,3] 92[263,3] 93[266,3] 94[269,3] 95[272,3] 96[275,3] 97[278,3] 98[281,3] 99[284,3] 100[287,3] 101[290,3] 102[293,3] 103[296,3] 104[299,3] 105[302,3] 106[305,3] 107[308,3] 108[311,3] 109[314,3] 110[317,3] 111[320,3] 112[323,3] 113[326,3] 114[329,3] 115[332,3] 116[335,3] 117[338,3] 118[341,3] 119[344,3] 120[347,3] 121[350,3] 122[353,3] 123[356,3] 124[359,3] 125[362,3] 126[365,3] 127[368,3] 133[371,1] 134[372,1] 135[373,1] 136[374,1] 137[375,1] 138[376,1] 139[377,1] 140[378,1] 141[379,1] 142[380,1] 143[381,1] 144[382,1] 145[383,1] 147[384,1] 148[385,1] 149[386,1] 151[387,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 136 137 138 139 140 141 142 143 144 145
;; live  kill	 14 [lr]
;; rd  in  	(10)
5, 12, 18, 24, 25, 29, 30, 34, 66, 67
;; rd  gen 	(15)
4, 64, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 31, 32, 33, 34, 62, 63, 64, 65, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:626 (set (reg/v:SI 135 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:626 (set (reg/v:SI 136 [ ifsr ])
        (reg:SI 1 r1 [ ifsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ ifsr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:626 (set (reg/v/f:SI 137 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:627 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:627 (set (reg:SI 139)
        (and:SI (reg/v:SI 136 [ ifsr ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/fault.c:627 (set (reg:SI 140)
        (lshiftrt:SI (reg:SI 139)
            (const_int 6 [0x6]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 11 10 12 2 arch/arm/mm/fault.c:627 (set (reg:SI 141)
        (and:SI (reg/v:SI 136 [ ifsr ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:627 (set (reg:SI 142)
        (ior:SI (reg:SI 140)
            (reg:SI 141))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg:SI 140)
            (nil))))

(insn 13 12 14 2 arch/arm/mm/fault.c:627 (set (reg:SI 143)
        (ashift:SI (reg:SI 142)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:627 (set (reg/v/f:SI 133 [ inf ])
        (plus:SI (reg/f:SI 138)
            (reg:SI 143))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 143)
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
            (nil))))

(insn 15 14 16 2 arch/arm/mm/fault.c:630 (set (reg:SI 144)
        (ior:SI (reg/v:SI 136 [ ifsr ])
            (const_int -2147483648 [0xffffffff80000000]))) 89 {*arm_iorsi3} (nil))

(insn 16 15 18 2 arch/arm/mm/fault.c:630 (set (reg/f:SI 145 [ <variable>.fn ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 142)
                    (const_int 16 [0x10]))
                (reg/f:SI 138)) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/f:SI 138)
            (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 142)
                            (const_int 16 [0x10]))
                        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) [0 <variable>.fn+0 S4 A32])
                (nil)))))

(insn 18 16 20 2 arch/arm/mm/fault.c:630 (set (reg:SI 1 r1)
        (reg:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(call_insn 20 18 21 2 arch/arm/mm/fault.c:630 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 145 [ <variable>.fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 145 [ <variable>.fn ])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 21 20 22 2 arch/arm/mm/fault.c:630 (set (reg:SI 134 [ D.24714 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 22 21 23 2 arch/arm/mm/fault.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24714 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.24714 ])
        (nil)))

(jump_insn 23 22 24 2 arch/arm/mm/fault.c:630 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; rd  out 	(23)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148 149 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 148 149 151
;; live  kill	 14 [lr]
;; rd  in  	(23)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; rd  gen 	(4)
384, 385, 386, 387
;; rd  kill	(8)
31, 32, 33, 34, 384, 385, 386, 387

;; Pred edge  2 [0.0%]  (fallthru)
(note 24 23 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 24 27 3 arch/arm/mm/fault.c:633 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x114abbe0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x114abbe0>)
        (nil)))

(insn 27 26 28 3 arch/arm/mm/fault.c:633 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 12 [0xc])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 arch/arm/mm/fault.c:633 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ ifsr ])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 arch/arm/mm/fault.c:633 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 30 29 31 3 arch/arm/mm/fault.c:633 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 31 30 32 3 arch/arm/mm/fault.c:636 (set (reg:SI 147 [ <variable>.sig ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 3 arch/arm/mm/fault.c:636 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 147 [ <variable>.sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147 [ <variable>.sig ])
        (nil)))

(insn 33 32 34 3 arch/arm/mm/fault.c:637 (set (reg:SI 148)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 3 arch/arm/mm/fault.c:637 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 35 34 36 3 arch/arm/mm/fault.c:638 (set (reg:SI 149 [ <variable>.code ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 8 [0x8])) [0 <variable>.code+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ inf ])
        (nil)))

(insn 36 35 37 3 arch/arm/mm/fault.c:638 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 149 [ <variable>.code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149 [ <variable>.code ])
        (nil)))

(insn 37 36 39 3 arch/arm/mm/fault.c:639 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ addr ])
        (nil)))

(insn 39 37 41 3 arch/arm/mm/fault.c:640 (set (reg/f:SI 151)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 41 39 42 3 arch/arm/mm/fault.c:640 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 42 41 43 3 arch/arm/mm/fault.c:640 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)
        (nil)))

(insn 43 42 44 3 arch/arm/mm/fault.c:640 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ regs ])
        (nil)))

(insn 44 43 45 3 arch/arm/mm/fault.c:640 (set (reg:SI 2 r2)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 45 44 46 3 arch/arm/mm/fault.c:640 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ ifsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ ifsr ])
        (nil)))

(call_insn 46 45 52 3 arch/arm/mm/fault.c:640 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x41] <function_decl 0x512d9380 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 52 46 55 4 67 "" [1 uses])

(note 55 52 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_DataAbort (do_DataAbort)[0:1298]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


do_DataAbort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={7d,4u} r2={6d,4u} r3={6d,2u} r11={1d,4u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,9u,1d} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,3u} r134={1d,1u} r135={1d,2u} r136={1d,5u} r137={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,2u,1d} r144={1d,1u,1d} r145={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,2u} r150={1d,1u} r152={1d,1u} 
;;    total ref usage 459{388d,68u,3e} in 36{33 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370
0[0,6] 1[6,7] 2[13,6] 3[19,6] 11[25,1] 12[26,4] 13[30,1] 14[31,4] 15[35,3] 16[38,3] 17[41,3] 18[44,3] 19[47,3] 20[50,3] 21[53,3] 22[56,3] 23[59,3] 24[62,4] 25[66,1] 26[67,1] 27[68,3] 28[71,3] 29[74,3] 30[77,3] 31[80,3] 32[83,3] 33[86,3] 34[89,3] 35[92,3] 36[95,3] 37[98,3] 38[101,3] 39[104,3] 40[107,3] 41[110,3] 42[113,3] 43[116,3] 44[119,3] 45[122,3] 46[125,3] 47[128,3] 48[131,3] 49[134,3] 50[137,3] 51[140,3] 52[143,3] 53[146,3] 54[149,3] 55[152,3] 56[155,3] 57[158,3] 58[161,3] 59[164,3] 60[167,3] 61[170,3] 62[173,3] 63[176,3] 64[179,3] 65[182,3] 66[185,3] 67[188,3] 68[191,3] 69[194,3] 70[197,3] 71[200,3] 72[203,3] 73[206,3] 74[209,3] 75[212,3] 76[215,3] 77[218,3] 78[221,3] 79[224,3] 80[227,3] 81[230,3] 82[233,3] 83[236,3] 84[239,3] 85[242,3] 86[245,3] 87[248,3] 88[251,3] 89[254,3] 90[257,3] 91[260,3] 92[263,3] 93[266,3] 94[269,3] 95[272,3] 96[275,3] 97[278,3] 98[281,3] 99[284,3] 100[287,3] 101[290,3] 102[293,3] 103[296,3] 104[299,3] 105[302,3] 106[305,3] 107[308,3] 108[311,3] 109[314,3] 110[317,3] 111[320,3] 112[323,3] 113[326,3] 114[329,3] 115[332,3] 116[335,3] 117[338,3] 118[341,3] 119[344,3] 120[347,3] 121[350,3] 122[353,3] 123[356,3] 124[359,3] 125[362,3] 126[365,3] 127[368,3] 133[371,1] 134[372,1] 135[373,1] 136[374,1] 137[375,1] 139[376,1] 140[377,1] 141[378,1] 142[379,1] 143[380,1] 144[381,1] 145[382,1] 146[383,1] 148[384,1] 149[385,1] 150[386,1] 152[387,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d5(0){ }d12(1){ }d18(2){ }d24(3){ }d25(11){ }d29(12){ }d30(13){ }d34(14){ }d66(25){ }d67(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
5, 12, 18, 24, 25, 29, 30, 34, 66, 67
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 66, 67
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
5, 12, 18, 24, 25, 29, 30, 34, 66, 67

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d25(bb 0 insn -1) }u1(13){ d30(bb 0 insn -1) }u2(25){ d66(bb 0 insn -1) }u3(26){ d67(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 139 140 141 142 143 144 145 146
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 136 137 139 140 141 142 143 144 145 146
;; live  kill	 14 [lr]
;; rd  in  	(10)
5, 12, 18, 24, 25, 29, 30, 34, 66, 67
;; rd  gen 	(15)
4, 64, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 31, 32, 33, 34, 62, 63, 64, 65, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; rd  out 	(23)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d66(bb 0 insn -1) }
;;   reg 26 { d67(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d18(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 10
;;      reg 136 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 5 uid 11
;;      reg 140 { d377(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 136 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 7 uid 13
;;      reg 141 { d378(bb 2 insn 11) }
;;      reg 142 { d379(bb 2 insn 12) }
;;   UD chains for insn luid 8 uid 14
;;      reg 143 { d380(bb 2 insn 13) }
;;   UD chains for insn luid 9 uid 15
;;      reg 139 { d376(bb 2 insn 9) }
;;      reg 144 { d381(bb 2 insn 14) }
;;   eq_note reg 144 { }
;;   UD chains for insn luid 10 uid 16
;;      reg 136 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 11 uid 17
;;      reg 139 { d376(bb 2 insn 9) }
;;      reg 143 { d380(bb 2 insn 13) }
;;   eq_note reg 143 { }
;;   UD chains for insn luid 12 uid 19
;;      reg 145 { d382(bb 2 insn 16) }
;;   UD chains for insn luid 13 uid 21
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 0 { d5(bb 0 insn -1) }
;;      reg 1 { d11(bb 2 insn 19) }
;;      reg 2 { d18(bb 0 insn -1) }
;;      reg 146 { d383(bb 2 insn 17) }
;;   UD chains for insn luid 14 uid 22
;;      reg 0 { d4(bb 2 insn 21) }
;;   UD chains for insn luid 15 uid 23
;;      reg 134 { d372(bb 2 insn 22) }
;;   UD chains for insn luid 16 uid 24
;;      reg 24 { d64(bb 2 insn 23) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ d25(bb 0 insn -1) }u30(13){ d30(bb 0 insn -1) }u31(25){ d66(bb 0 insn -1) }u32(26){ d67(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 149 150 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 148 149 150 152
;; live  kill	 14 [lr]
;; rd  in  	(23)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; rd  gen 	(4)
384, 385, 386, 387
;; rd  kill	(8)
31, 32, 33, 34, 384, 385, 386, 387
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d66(bb 0 insn -1) }
;;   reg 26 { d67(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 28
;;      reg 133 { d371(bb 2 insn 15) }
;;   UD chains for insn luid 2 uid 29
;;      reg 136 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 30
;;      reg 135 { d373(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 31
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 0 { d1(bb 3 insn 27) }
;;      reg 1 { d9(bb 3 insn 28) }
;;      reg 2 { d16(bb 3 insn 29) }
;;      reg 3 { d22(bb 3 insn 30) }
;;   UD chains for insn luid 5 uid 32
;;      reg 133 { d371(bb 2 insn 15) }
;;   UD chains for insn luid 6 uid 33
;;      reg 25 { d66(bb 0 insn -1) }
;;      reg 148 { d384(bb 3 insn 32) }
;;   UD chains for insn luid 8 uid 35
;;      reg 25 { d66(bb 0 insn -1) }
;;      reg 149 { d385(bb 3 insn 34) }
;;   UD chains for insn luid 9 uid 36
;;      reg 133 { d371(bb 2 insn 15) }
;;   UD chains for insn luid 10 uid 37
;;      reg 25 { d66(bb 0 insn -1) }
;;      reg 150 { d386(bb 3 insn 36) }
;;   UD chains for insn luid 11 uid 38
;;      reg 25 { d66(bb 0 insn -1) }
;;      reg 135 { d373(bb 2 insn 2) }
;;   UD chains for insn luid 12 uid 40
;;      reg 25 { d66(bb 0 insn -1) }
;;   UD chains for insn luid 13 uid 42
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 149 { d385(bb 3 insn 34) }
;;   UD chains for insn luid 15 uid 44
;;      reg 137 { d375(bb 2 insn 4) }
;;   UD chains for insn luid 16 uid 45
;;      reg 152 { d387(bb 3 insn 40) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 17 uid 46
;;      reg 136 { d374(bb 2 insn 3) }
;;   UD chains for insn luid 18 uid 47
;;      reg 13 { d30(bb 0 insn -1) }
;;      reg 0 { d0(bb 3 insn 43) }
;;      reg 1 { d7(bb 3 insn 44) }
;;      reg 2 { d14(bb 3 insn 45) }
;;      reg 3 { d20(bb 3 insn 46) }

( 3 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u63(11){ d25(bb 0 insn -1) }u64(13){ d30(bb 0 insn -1) }u65(25){ d66(bb 0 insn -1) }u66(26){ d67(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 25 { d66(bb 0 insn -1) }
;;   reg 26 { d67(bb 0 insn -1) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u67(11){ d25(bb 0 insn -1) }u68(13){ d30(bb 0 insn -1) }u69(14){ }u70(25){ d66(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;;  UD chains for artificial uses
;;   reg 11 { d25(bb 0 insn -1) }
;;   reg 13 { d30(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d66(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 47 to worklist
  Adding insn 42 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 35 to worklist
  Adding insn 33 to worklist
  Adding insn 31 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 31:
Processing use of (reg 0 r0) in insn 31:
  Adding insn 27 to worklist
Processing use of (reg 1 r1) in insn 31:
  Adding insn 28 to worklist
Processing use of (reg 2 r2) in insn 31:
  Adding insn 29 to worklist
Processing use of (reg 3 r3) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 135 [ addr ]) in insn 30:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136 [ fsr ]) in insn 29:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 133 [ inf ]) in insn 28:
  Adding insn 15 to worklist
Processing use of (reg 139) in insn 15:
  Adding insn 9 to worklist
Processing use of (reg 144) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 143) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 141) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 142) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 136 [ fsr ]) in insn 12:
Processing use of (reg 140) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 136 [ fsr ]) in insn 10:
Processing use of (reg 25 sfp) in insn 33:
Processing use of (reg 148 [ <variable>.sig ]) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 133 [ inf ]) in insn 32:
Processing use of (reg 25 sfp) in insn 35:
Processing use of (reg 149) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 25 sfp) in insn 37:
Processing use of (reg 150 [ <variable>.code ]) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 133 [ inf ]) in insn 36:
Processing use of (reg 25 sfp) in insn 38:
Processing use of (reg 135 [ addr ]) in insn 38:
Processing use of (reg 13 sp) in insn 42:
Processing use of (reg 149) in insn 42:
Processing use of (reg 13 sp) in insn 47:
Processing use of (reg 0 r0) in insn 47:
  Adding insn 43 to worklist
Processing use of (reg 1 r1) in insn 47:
  Adding insn 44 to worklist
Processing use of (reg 2 r2) in insn 47:
  Adding insn 45 to worklist
Processing use of (reg 3 r3) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 136 [ fsr ]) in insn 46:
Processing use of (reg 152) in insn 45:
  Adding insn 40 to worklist
Processing use of (reg 25 sfp) in insn 40:
Processing use of (reg 137 [ regs ]) in insn 44:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 13 sp) in insn 21:
Processing use of (reg 0 r0) in insn 21:
Processing use of (reg 1 r1) in insn 21:
  Adding insn 19 to worklist
Processing use of (reg 2 r2) in insn 21:
Processing use of (reg 146 [ <variable>.fn ]) in insn 21:
  Adding insn 17 to worklist
Processing use of (reg 139) in insn 17:
Processing use of (reg 143) in insn 17:
Processing use of (reg 145) in insn 19:
  Adding insn 16 to worklist
Processing use of (reg 136 [ fsr ]) in insn 16:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 134 [ D.24678 ]) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 0 r0) in insn 22:


do_DataAbort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={7d,4u} r2={6d,4u} r3={6d,2u} r11={1d,4u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,9u,1d} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,3u} r134={1d,1u} r135={1d,2u} r136={1d,5u} r137={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,2u,1d} r144={1d,1u,1d} r145={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,2u} r150={1d,1u} r152={1d,1u} 
;;    total ref usage 459{388d,68u,3e} in 36{33 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370
0[0,6] 1[6,7] 2[13,6] 3[19,6] 11[25,1] 12[26,4] 13[30,1] 14[31,4] 15[35,3] 16[38,3] 17[41,3] 18[44,3] 19[47,3] 20[50,3] 21[53,3] 22[56,3] 23[59,3] 24[62,4] 25[66,1] 26[67,1] 27[68,3] 28[71,3] 29[74,3] 30[77,3] 31[80,3] 32[83,3] 33[86,3] 34[89,3] 35[92,3] 36[95,3] 37[98,3] 38[101,3] 39[104,3] 40[107,3] 41[110,3] 42[113,3] 43[116,3] 44[119,3] 45[122,3] 46[125,3] 47[128,3] 48[131,3] 49[134,3] 50[137,3] 51[140,3] 52[143,3] 53[146,3] 54[149,3] 55[152,3] 56[155,3] 57[158,3] 58[161,3] 59[164,3] 60[167,3] 61[170,3] 62[173,3] 63[176,3] 64[179,3] 65[182,3] 66[185,3] 67[188,3] 68[191,3] 69[194,3] 70[197,3] 71[200,3] 72[203,3] 73[206,3] 74[209,3] 75[212,3] 76[215,3] 77[218,3] 78[221,3] 79[224,3] 80[227,3] 81[230,3] 82[233,3] 83[236,3] 84[239,3] 85[242,3] 86[245,3] 87[248,3] 88[251,3] 89[254,3] 90[257,3] 91[260,3] 92[263,3] 93[266,3] 94[269,3] 95[272,3] 96[275,3] 97[278,3] 98[281,3] 99[284,3] 100[287,3] 101[290,3] 102[293,3] 103[296,3] 104[299,3] 105[302,3] 106[305,3] 107[308,3] 108[311,3] 109[314,3] 110[317,3] 111[320,3] 112[323,3] 113[326,3] 114[329,3] 115[332,3] 116[335,3] 117[338,3] 118[341,3] 119[344,3] 120[347,3] 121[350,3] 122[353,3] 123[356,3] 124[359,3] 125[362,3] 126[365,3] 127[368,3] 133[371,1] 134[372,1] 135[373,1] 136[374,1] 137[375,1] 139[376,1] 140[377,1] 141[378,1] 142[379,1] 143[380,1] 144[381,1] 145[382,1] 146[383,1] 148[384,1] 149[385,1] 150[386,1] 152[387,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 139 140 141 142 143 144 145 146
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 135 136 137 139 140 141 142 143 144 145 146
;; live  kill	 14 [lr]
;; rd  in  	(10)
5, 12, 18, 24, 25, 29, 30, 34, 66, 67
;; rd  gen 	(15)
4, 64, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; rd  kill	(27)
0, 1, 2, 3, 4, 5, 31, 32, 33, 34, 62, 63, 64, 65, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:558 (set (reg/v:SI 135 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:558 (set (reg/v:SI 136 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fsr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:558 (set (reg/v/f:SI 137 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 arch/arm/mm/fault.c:559 (set (reg/f:SI 139)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 512 [0x200])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 512 [0x200])))
        (nil)))

(insn 10 9 11 2 arch/arm/mm/fault.c:559 (set (reg:SI 140)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/fault.c:559 (set (reg:SI 141)
        (lshiftrt:SI (reg:SI 140)
            (const_int 6 [0x6]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(insn 12 11 13 2 arch/arm/mm/fault.c:559 (set (reg:SI 142)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:559 (set (reg:SI 143)
        (ior:SI (reg:SI 141)
            (reg:SI 142))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg:SI 141)
            (nil))))

(insn 14 13 15 2 arch/arm/mm/fault.c:559 (set (reg:SI 144)
        (ashift:SI (reg:SI 143)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 15 14 16 2 arch/arm/mm/fault.c:559 (set (reg/v/f:SI 133 [ inf ])
        (plus:SI (reg/f:SI 139)
            (reg:SI 144))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 144)
                (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 512 [0x200]))))
            (nil))))

(insn 16 15 17 2 arch/arm/mm/fault.c:562 (set (reg:SI 145)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 19 2 arch/arm/mm/fault.c:562 (set (reg/f:SI 146 [ <variable>.fn ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 143)
                    (const_int 16 [0x10]))
                (reg/f:SI 139)) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 143)
                            (const_int 16 [0x10]))
                        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                                (const_int 512 [0x200])))) [0 <variable>.fn+0 S4 A32])
                (nil)))))

(insn 19 17 21 2 arch/arm/mm/fault.c:562 (set (reg:SI 1 r1)
        (reg:SI 145)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(call_insn 21 19 22 2 arch/arm/mm/fault.c:562 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 146 [ <variable>.fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 146 [ <variable>.fn ])
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 22 21 23 2 arch/arm/mm/fault.c:562 (set (reg:SI 134 [ D.24678 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 23 22 24 2 arch/arm/mm/fault.c:562 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24678 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.24678 ])
        (nil)))

(jump_insn 24 23 25 2 arch/arm/mm/fault.c:562 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; rd  out 	(23)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 149 150 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 148 149 150 152
;; live  kill	 14 [lr]
;; rd  in  	(23)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383
;; rd  gen 	(4)
384, 385, 386, 387
;; rd  kill	(8)
31, 32, 33, 34, 384, 385, 386, 387

;; Pred edge  2 [0.0%]  (fallthru)
(note 25 24 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 27 25 28 3 arch/arm/mm/fault.c:565 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114abc30>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114abc30>)
        (nil)))

(insn 28 27 29 3 arch/arm/mm/fault.c:565 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 12 [0xc])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 arch/arm/mm/fault.c:565 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 3 arch/arm/mm/fault.c:565 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 32 3 arch/arm/mm/fault.c:565 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 32 31 33 3 arch/arm/mm/fault.c:568 (set (reg:SI 148 [ <variable>.sig ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 3 arch/arm/mm/fault.c:568 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 148 [ <variable>.sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ <variable>.sig ])
        (nil)))

(insn 34 33 35 3 arch/arm/mm/fault.c:569 (set (reg:SI 149)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 3 arch/arm/mm/fault.c:569 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 36 35 37 3 arch/arm/mm/fault.c:570 (set (reg:SI 150 [ <variable>.code ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 8 [0x8])) [0 <variable>.code+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ inf ])
        (nil)))

(insn 37 36 38 3 arch/arm/mm/fault.c:570 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 150 [ <variable>.code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150 [ <variable>.code ])
        (nil)))

(insn 38 37 40 3 arch/arm/mm/fault.c:571 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ addr ])
        (nil)))

(insn 40 38 42 3 arch/arm/mm/fault.c:572 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 42 40 43 3 arch/arm/mm/fault.c:572 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 43 42 44 3 arch/arm/mm/fault.c:572 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)
        (nil)))

(insn 44 43 45 3 arch/arm/mm/fault.c:572 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ regs ])
        (nil)))

(insn 45 44 46 3 arch/arm/mm/fault.c:572 (set (reg:SI 2 r2)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 152)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80]))
            (nil))))

(insn 46 45 47 3 arch/arm/mm/fault.c:572 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ fsr ])
        (nil)))

(call_insn 47 46 53 3 arch/arm/mm/fault.c:572 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x41] <function_decl 0x512d9380 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 53 47 56 4 72 "" [1 uses])

(note 56 53 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(27)
4, 12, 18, 24, 25, 29, 30, 64, 66, 67, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hook_ifault_code (hook_ifault_code)[0:1299] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 8 (  1.6)


hook_ifault_code

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,4u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r139={1d,4u} r142={1d,1u,1d} r143={1d,1u} r146={1d,1u} r147={1d,2u} r152={1d,1u,1d} r153={1d,1u} 
;;    total ref usage 189{142d,44u,3e} in 21{20 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 139[135,1] 142[136,1] 143[137,1] 146[138,1] 147[139,1] 152[140,1] 153[141,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d15(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 27, 28
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  gen 	(6)
26, 130, 131, 132, 133, 134
;; rd  kill	(7)
25, 26, 130, 131, 132, 133, 134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 6
;;      reg 26 { d28(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 11
;;      reg 24 { d26(bb 2 insn 10) }

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ d10(bb 0 insn -1) }u13(13){ d13(bb 0 insn -1) }u14(25){ d27(bb 0 insn -1) }u15(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(2)
14, 15
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 5, 7, 9, 10, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 16
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d0(bb 3 insn 14) }
;;      reg 1 { d4(bb 3 insn 15) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d10(bb 0 insn -1) }u20(13){ d13(bb 0 insn -1) }u21(25){ d27(bb 0 insn -1) }u22(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  def 	 139 142 143 146 147 152 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  gen 	 139 142 143 146 147 152 153
;; live  kill	
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(7)
135, 136, 137, 138, 139, 140, 141
;; rd  kill	(7)
135, 136, 137, 138, 139, 140, 141
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 21
;;      reg 133 { d130(bb 2 insn 2) }
;;      reg 134 { d131(bb 2 insn 3) }
;;      reg 139 { d135(bb 4 insn 20) }
;;   UD chains for insn luid 2 uid 24
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 25
;;      reg 139 { d135(bb 4 insn 20) }
;;      reg 142 { d136(bb 4 insn 24) }
;;   eq_note reg 142 { }
;;   UD chains for insn luid 4 uid 27
;;      reg 135 { d132(bb 2 insn 4) }
;;      reg 143 { d137(bb 4 insn 25) }
;;   UD chains for insn luid 5 uid 29
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 30
;;      reg 146 { d138(bb 4 insn 29) }
;;   UD chains for insn luid 7 uid 31
;;      reg 136 { d133(bb 2 insn 5) }
;;      reg 139 { d135(bb 4 insn 20) }
;;      reg 147 { d139(bb 4 insn 30) }
;;   UD chains for insn luid 8 uid 36
;;      reg 147 { d139(bb 4 insn 30) }
;;   UD chains for insn luid 9 uid 37
;;      reg 139 { d135(bb 4 insn 20) }
;;      reg 152 { d140(bb 4 insn 36) }
;;   eq_note reg 152 { }
;;   UD chains for insn luid 10 uid 39
;;      reg 137 { d134(bb 2 insn 6) }
;;      reg 153 { d141(bb 4 insn 37) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u43(11){ d10(bb 0 insn -1) }u44(13){ d13(bb 0 insn -1) }u45(14){ d15(bb 0 insn -1) }u46(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(23)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d15(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 16 to worklist
  Adding insn 39 to worklist
  Adding insn 31 to worklist
  Adding insn 27 to worklist
  Adding insn 21 to worklist
Finished finding needed instructions:
Processing use of (reg 133 [ nr ]) in insn 21:
  Adding insn 2 to worklist
Processing use of (reg 134 [ fn ]) in insn 21:
  Adding insn 3 to worklist
Processing use of (reg 139) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 135 [ sig ]) in insn 27:
  Adding insn 4 to worklist
Processing use of (reg 143) in insn 27:
  Adding insn 25 to worklist
Processing use of (reg 139) in insn 25:
Processing use of (reg 142) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 133 [ nr ]) in insn 24:
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 136 [ code ]) in insn 31:
  Adding insn 5 to worklist
Processing use of (reg 139) in insn 31:
Processing use of (reg 147) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 146) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 133 [ nr ]) in insn 29:
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 137 [ name ]) in insn 39:
  Adding insn 6 to worklist
Processing use of (reg 153) in insn 39:
  Adding insn 37 to worklist
Processing use of (reg 139) in insn 37:
Processing use of (reg 152) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 147) in insn 36:
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 13 sp) in insn 16:
Processing use of (reg 0 r0) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 1 r1) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 24 cc) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 133 [ nr ]) in insn 10:


hook_ifault_code

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,4u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r139={1d,4u} r142={1d,1u,1d} r143={1d,1u} r146={1d,1u} r147={1d,2u} r152={1d,1u,1d} r153={1d,1u} 
;;    total ref usage 189{142d,44u,3e} in 21{20 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 139[135,1] 142[136,1] 143[137,1] 146[138,1] 147[139,1] 152[140,1] 153[141,1] 
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  gen 	(6)
26, 130, 131, 132, 133, 134
;; rd  kill	(7)
25, 26, 130, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 133 [ nr ])
        (reg:SI 0 r0 [ nr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ nr ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:614 (set (reg/v/f:SI 134 [ fn ])
        (reg:SI 1 r1 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fn ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 135 [ sig ])
        (reg:SI 2 r2 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ sig ])
        (nil)))

(insn 5 4 6 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 136 [ code ])
        (reg:SI 3 r3 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ code ])
        (nil)))

(insn 6 5 7 2 arch/arm/mm/fault.c:614 (set (reg/v/f:SI 137 [ name ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/fault.c:615 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ nr ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/fault.c:615 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(2)
14, 15

;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 12 15 3 arch/arm/mm/fault.c:616 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)
        (nil)))

(insn 15 14 16 3 arch/arm/mm/fault.c:616 (set (reg:SI 1 r1)
        (const_int 616 [0x268])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 3 arch/arm/mm/fault.c:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 5, 7, 9, 10, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134



(barrier 17 16 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  def 	 139 142 143 146 147 152 153
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  gen 	 139 142 143 146 147 152 153
;; live  kill	
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(7)
135, 136, 137, 138, 139, 140, 141
;; rd  kill	(7)
135, 136, 137, 138, 139, 140, 141

;; Pred edge  2 [100.0%] 
(code_label 18 17 19 4 76 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/fault.c:618 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 24 4 arch/arm/mm/fault.c:618 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 133 [ nr ])
                    (const_int 16 [0x10]))
                (reg/f:SI 139)) [0 <variable>.fn+0 S4 A32])
        (reg/v/f:SI 134 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ fn ])
        (nil)))

(insn 24 21 25 4 arch/arm/mm/fault.c:619 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 27 4 arch/arm/mm/fault.c:619 (set (reg:SI 143)
        (plus:SI (reg/f:SI 139)
            (reg:SI 142))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 142)
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
            (nil))))

(insn 27 25 29 4 arch/arm/mm/fault.c:619 (set (mem/s/j:SI (plus:SI (reg:SI 143)
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])
        (reg/v:SI 135 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/v:SI 135 [ sig ])
            (nil))))

(insn 29 27 30 4 arch/arm/mm/fault.c:620 (set (reg:SI 146)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ nr ])
        (nil)))

(insn 30 29 31 4 arch/arm/mm/fault.c:620 (set (reg:SI 147)
        (plus:SI (reg:SI 146)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 31 30 36 4 arch/arm/mm/fault.c:620 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 147)
                    (const_int 8 [0x8]))
                (reg/f:SI 139)) [0 <variable>.code+0 S4 A32])
        (reg/v:SI 136 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ code ])
        (nil)))

(insn 36 31 37 4 arch/arm/mm/fault.c:621 (set (reg:SI 152)
        (ashift:SI (reg:SI 147)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 37 36 39 4 arch/arm/mm/fault.c:621 (set (reg:SI 153)
        (plus:SI (reg/f:SI 139)
            (reg:SI 152))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 152)
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
                (nil)))))

(insn 39 37 0 4 arch/arm/mm/fault.c:621 (set (mem/s/f/j:SI (plus:SI (reg:SI 153)
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])
        (reg/v/f:SI 137 [ name ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_DEAD (reg/v/f:SI 137 [ name ])
            (nil))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hook_fault_code (hook_fault_code)[0:1297] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 8 (  1.6)


hook_fault_code

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,4u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r140={1d,2u} r142={1d,1u,1d} r143={1d,2u} r151={1d,1u} r152={1d,1u} r154={1d,1u,1d} r155={1d,2u} 
;;    total ref usage 187{142d,42u,3e} in 21{20 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 140[135,1] 142[136,1] 143[137,1] 151[138,1] 152[139,1] 154[140,1] 155[141,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d15(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 27, 28
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  gen 	(6)
26, 130, 131, 132, 133, 134
;; rd  kill	(7)
25, 26, 130, 131, 132, 133, 134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d7(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 5
;;      reg 3 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 6
;;      reg 26 { d28(bb 0 insn -1) }
;;   eq_note reg 26 { }
;;   UD chains for insn luid 5 uid 10
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 11
;;      reg 24 { d26(bb 2 insn 10) }

( 2 )->[3]->( )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ d10(bb 0 insn -1) }u13(13){ d13(bb 0 insn -1) }u14(25){ d27(bb 0 insn -1) }u15(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(2)
14, 15
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 5, 7, 9, 10, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 17
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d0(bb 3 insn 15) }
;;      reg 1 { d3(bb 3 insn 16) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d10(bb 0 insn -1) }u20(13){ d13(bb 0 insn -1) }u21(25){ d27(bb 0 insn -1) }u22(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  def 	 140 142 143 151 152 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  gen 	 140 142 143 151 152 154 155
;; live  kill	
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(7)
135, 136, 137, 138, 139, 140, 141
;; rd  kill	(7)
135, 136, 137, 138, 139, 140, 141
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 24
;;      reg 140 { d135(bb 4 insn 21) }
;;      reg 142 { d136(bb 4 insn 23) }
;;   eq_note reg 142 { }
;;   UD chains for insn luid 3 uid 26
;;      reg 134 { d131(bb 2 insn 3) }
;;      reg 143 { d137(bb 4 insn 24) }
;;   UD chains for insn luid 4 uid 32
;;      reg 135 { d132(bb 2 insn 4) }
;;      reg 143 { d137(bb 4 insn 24) }
;;   UD chains for insn luid 5 uid 34
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 35
;;      reg 151 { d138(bb 4 insn 34) }
;;   UD chains for insn luid 7 uid 37
;;      reg 152 { d139(bb 4 insn 35) }
;;   UD chains for insn luid 8 uid 38
;;      reg 140 { d135(bb 4 insn 21) }
;;      reg 154 { d140(bb 4 insn 37) }
;;   eq_note reg 154 { }
;;   UD chains for insn luid 9 uid 40
;;      reg 136 { d133(bb 2 insn 5) }
;;      reg 155 { d141(bb 4 insn 38) }
;;   UD chains for insn luid 10 uid 48
;;      reg 137 { d134(bb 2 insn 6) }
;;      reg 155 { d141(bb 4 insn 38) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u41(11){ d10(bb 0 insn -1) }u42(13){ d13(bb 0 insn -1) }u43(14){ d15(bb 0 insn -1) }u44(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(23)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(23)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d15(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 11 to worklist
  Adding insn 17 to worklist
  Adding insn 48 to worklist
  Adding insn 40 to worklist
  Adding insn 32 to worklist
  Adding insn 26 to worklist
Finished finding needed instructions:
Processing use of (reg 134 [ fn ]) in insn 26:
  Adding insn 3 to worklist
Processing use of (reg 143) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 140) in insn 24:
  Adding insn 21 to worklist
Processing use of (reg 142) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 133 [ nr ]) in insn 23:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 135 [ sig ]) in insn 32:
  Adding insn 4 to worklist
Processing use of (reg 143) in insn 32:
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 136 [ code ]) in insn 40:
  Adding insn 5 to worklist
Processing use of (reg 155) in insn 40:
  Adding insn 38 to worklist
Processing use of (reg 140) in insn 38:
Processing use of (reg 154) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 152) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 151) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 133 [ nr ]) in insn 34:
Processing use of (reg 3 r3) in insn 5:
Processing use of (reg 137 [ name ]) in insn 48:
  Adding insn 6 to worklist
Processing use of (reg 155) in insn 48:
Processing use of (reg 26 afp) in insn 6:
Processing use of (reg 13 sp) in insn 17:
Processing use of (reg 0 r0) in insn 17:
  Adding insn 15 to worklist
Processing use of (reg 1 r1) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 24 cc) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 133 [ nr ]) in insn 10:


hook_fault_code

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,4u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r140={1d,2u} r142={1d,1u,1d} r143={1d,2u} r151={1d,1u} r152={1d,1u} r154={1d,1u,1d} r155={1d,2u} 
;;    total ref usage 187{142d,42u,3e} in 21{20 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 140[135,1] 142[136,1] 143[137,1] 151[138,1] 152[139,1] 154[140,1] 155[141,1] 
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  gen 	(6)
26, 130, 131, 132, 133, 134
;; rd  kill	(7)
25, 26, 130, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 133 [ nr ])
        (reg:SI 0 r0 [ nr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ nr ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/fault.c:543 (set (reg/v/f:SI 134 [ fn ])
        (reg:SI 1 r1 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ fn ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 135 [ sig ])
        (reg:SI 2 r2 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ sig ])
        (nil)))

(insn 5 4 6 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 136 [ code ])
        (reg:SI 3 r3 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [ code ])
        (nil)))

(insn 6 5 7 2 arch/arm/mm/fault.c:543 (set (reg/v/f:SI 137 [ name ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/fault.c:544 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ nr ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/fault.c:544 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(0)

;; rd  kill	(2)
14, 15

;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 12 16 3 arch/arm/mm/fault.c:545 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)
        (nil)))

(insn 16 15 17 3 arch/arm/mm/fault.c:545 (set (reg:SI 1 r1)
        (const_int 545 [0x221])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 545 [0x221])
        (nil)))

(call_insn 17 16 18 3 arch/arm/mm/fault.c:545 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 5, 7, 9, 10, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134



(barrier 18 17 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  def 	 140 142 143 151 152 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  gen 	 140 142 143 151 152 154 155
;; live  kill	
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(7)
135, 136, 137, 138, 139, 140, 141
;; rd  kill	(7)
135, 136, 137, 138, 139, 140, 141

;; Pred edge  2 [100.0%] 
(code_label 19 18 20 4 81 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 23 4 arch/arm/mm/fault.c:547 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 23 21 24 4 arch/arm/mm/fault.c:547 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 26 4 arch/arm/mm/fault.c:547 (set (reg:SI 143)
        (plus:SI (reg/f:SI 140)
            (reg:SI 142))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 142)
                (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
            (nil))))

(insn 26 24 32 4 arch/arm/mm/fault.c:547 (set (mem/s/f/j:SI (plus:SI (reg:SI 143)
                (const_int 512 [0x200])) [0 <variable>.fn+0 S4 A32])
        (reg/v/f:SI 134 [ fn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ fn ])
        (nil)))

(insn 32 26 34 4 arch/arm/mm/fault.c:548 (set (mem/s/j:SI (plus:SI (reg:SI 143)
                (const_int 516 [0x204])) [0 <variable>.sig+0 S4 A32])
        (reg/v:SI 135 [ sig ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/v:SI 135 [ sig ])
            (nil))))

(insn 34 32 35 4 arch/arm/mm/fault.c:549 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ nr ])
        (nil)))

(insn 35 34 37 4 arch/arm/mm/fault.c:549 (set (reg:SI 152)
        (plus:SI (reg:SI 151)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 37 35 38 4 arch/arm/mm/fault.c:549 (set (reg:SI 154)
        (ashift:SI (reg:SI 152)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 38 37 40 4 arch/arm/mm/fault.c:549 (set (reg:SI 155)
        (plus:SI (reg/f:SI 140)
            (reg:SI 154))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 154)
        (expr_list:REG_DEAD (reg/f:SI 140)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 154)
                    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
                (nil)))))

(insn 40 38 48 4 arch/arm/mm/fault.c:549 (set (mem/s/j:SI (plus:SI (reg:SI 155)
                (const_int 512 [0x200])) [0 <variable>.code+0 S4 A32])
        (reg/v:SI 136 [ code ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ code ])
        (nil)))

(insn 48 40 0 4 arch/arm/mm/fault.c:550 (set (mem/s/f/j:SI (plus:SI (reg:SI 155)
                (const_int 516 [0x204])) [0 <variable>.name+0 S4 A32])
        (reg/v/f:SI 137 [ name ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 155)
        (expr_list:REG_DEAD (reg/v/f:SI 137 [ name ])
            (nil))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(23)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function exceptions_init (exceptions_init)[0:1301] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


exceptions_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={9d,3u} r2={9d,3u} r3={9d,3u} r11={1d,6u} r12={6d} r13={1d,14u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={7d,2u} r25={1d,6u} r26={1d,5u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,1u} r134={1d,1u} r138={1d,1u} r141={1d,2u} 
;;    total ref usage 669{614d,55u,0e} in 30{25 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609
0[0,10] 1[10,9] 2[19,9] 3[28,9] 11[37,1] 12[38,6] 13[44,1] 14[45,6] 15[51,5] 16[56,5] 17[61,5] 18[66,5] 19[71,5] 20[76,5] 21[81,5] 22[86,5] 23[91,5] 24[96,7] 25[103,1] 26[104,1] 27[105,5] 28[110,5] 29[115,5] 30[120,5] 31[125,5] 32[130,5] 33[135,5] 34[140,5] 35[145,5] 36[150,5] 37[155,5] 38[160,5] 39[165,5] 40[170,5] 41[175,5] 42[180,5] 43[185,5] 44[190,5] 45[195,5] 46[200,5] 47[205,5] 48[210,5] 49[215,5] 50[220,5] 51[225,5] 52[230,5] 53[235,5] 54[240,5] 55[245,5] 56[250,5] 57[255,5] 58[260,5] 59[265,5] 60[270,5] 61[275,5] 62[280,5] 63[285,5] 64[290,5] 65[295,5] 66[300,5] 67[305,5] 68[310,5] 69[315,5] 70[320,5] 71[325,5] 72[330,5] 73[335,5] 74[340,5] 75[345,5] 76[350,5] 77[355,5] 78[360,5] 79[365,5] 80[370,5] 81[375,5] 82[380,5] 83[385,5] 84[390,5] 85[395,5] 86[400,5] 87[405,5] 88[410,5] 89[415,5] 90[420,5] 91[425,5] 92[430,5] 93[435,5] 94[440,5] 95[445,5] 96[450,5] 97[455,5] 98[460,5] 99[465,5] 100[470,5] 101[475,5] 102[480,5] 103[485,5] 104[490,5] 105[495,5] 106[500,5] 107[505,5] 108[510,5] 109[515,5] 110[520,5] 111[525,5] 112[530,5] 113[535,5] 114[540,5] 115[545,5] 116[550,5] 117[555,5] 118[560,5] 119[565,5] 120[570,5] 121[575,5] 122[580,5] 123[585,5] 124[590,5] 125[595,5] 126[600,5] 127[605,5] 133[610,1] 134[611,1] 138[612,1] 141[613,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d9(0){ }d18(1){ }d27(2){ }d36(3){ }d37(11){ }d43(12){ }d44(13){ }d50(14){ }d103(25){ }d104(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
9, 18, 27, 36, 37, 43, 44, 50, 103, 104
;; rd  kill	(53)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 103, 104
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
9, 18, 27, 36, 37, 43, 44, 50, 103, 104

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d37(bb 0 insn -1) }u1(13){ d44(bb 0 insn -1) }u2(25){ d103(bb 0 insn -1) }u3(26){ d104(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(10)
9, 18, 27, 36, 37, 43, 44, 50, 103, 104
;; rd  gen 	(3)
8, 101, 611
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 45, 46, 47, 48, 49, 50, 96, 97, 98, 99, 100, 101, 102, 611
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d44(bb 0 insn -1) }
;;   reg 25 { d103(bb 0 insn -1) }
;;   reg 26 { d104(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 5
;;      reg 13 { d44(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 0 { d8(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 134 { d611(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d101(bb 2 insn 7) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d37(bb 0 insn -1) }u9(13){ d44(bb 0 insn -1) }u10(25){ d103(bb 0 insn -1) }u11(26){ d104(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 138
;; live  kill	 14 [lr]
;; rd  in  	(11)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611
;; rd  gen 	(1)
612
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 612
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611, 612
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d44(bb 0 insn -1) }
;;   reg 25 { d103(bb 0 insn -1) }
;;   reg 26 { d104(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 13
;;      reg 13 { d44(bb 0 insn -1) }
;;      reg 138 { d612(bb 3 insn 12) }
;;   UD chains for insn luid 6 uid 18
;;      reg 13 { d44(bb 0 insn -1) }
;;      reg 0 { d7(bb 3 insn 14) }
;;      reg 1 { d12(bb 3 insn 15) }
;;      reg 2 { d25(bb 3 insn 16) }
;;      reg 3 { d30(bb 3 insn 17) }

( 2 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d37(bb 0 insn -1) }u20(13){ d44(bb 0 insn -1) }u21(25){ d103(bb 0 insn -1) }u22(26){ d104(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(12)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611, 612
;; rd  gen 	(3)
5, 98, 610
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 45, 46, 47, 48, 49, 50, 96, 97, 98, 99, 100, 101, 102, 610
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d44(bb 0 insn -1) }
;;   reg 25 { d103(bb 0 insn -1) }
;;   reg 26 { d104(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 21
;;      reg 13 { d44(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 22
;;      reg 0 { d5(bb 4 insn 21) }
;;   UD chains for insn luid 2 uid 23
;;      reg 133 { d610(bb 4 insn 22) }
;;   UD chains for insn luid 3 uid 24
;;      reg 24 { d98(bb 4 insn 23) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ d37(bb 0 insn -1) }u28(13){ d44(bb 0 insn -1) }u29(25){ d103(bb 0 insn -1) }u30(26){ d104(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 141
;; live  kill	 14 [lr]
;; rd  in  	(13)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612
;; rd  gen 	(1)
613
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 613
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612, 613
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d44(bb 0 insn -1) }
;;   reg 25 { d103(bb 0 insn -1) }
;;   reg 26 { d104(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 29
;;      reg 13 { d44(bb 0 insn -1) }
;;      reg 141 { d613(bb 5 insn 28) }
;;   UD chains for insn luid 6 uid 34
;;      reg 13 { d44(bb 0 insn -1) }
;;      reg 0 { d4(bb 5 insn 30) }
;;      reg 1 { d11(bb 5 insn 31) }
;;      reg 2 { d22(bb 5 insn 32) }
;;      reg 3 { d29(bb 5 insn 33) }
;;   UD chains for insn luid 7 uid 38
;;      reg 13 { d44(bb 0 insn -1) }
;;      reg 141 { d613(bb 5 insn 28) }
;;   UD chains for insn luid 12 uid 43
;;      reg 13 { d44(bb 0 insn -1) }
;;      reg 0 { d2(bb 5 insn 39) }
;;      reg 1 { d10(bb 5 insn 40) }
;;      reg 2 { d20(bb 5 insn 41) }
;;      reg 3 { d28(bb 5 insn 42) }

( 4 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ d37(bb 0 insn -1) }u46(13){ d44(bb 0 insn -1) }u47(25){ d103(bb 0 insn -1) }u48(26){ d104(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(14)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612, 613
;; rd  gen 	(1)
0
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612, 613
;;  UD chains for artificial uses
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d44(bb 0 insn -1) }
;;   reg 25 { d103(bb 0 insn -1) }
;;   reg 26 { d104(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 56
;;      reg 0 { d0(bb 6 insn 50) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u50(0){ d0(bb 6 insn 50) }u51(11){ d37(bb 0 insn -1) }u52(13){ d44(bb 0 insn -1) }u53(14){ }u54(25){ d103(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612, 613
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612, 613
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 6 insn 50) }
;;   reg 11 { d37(bb 0 insn -1) }
;;   reg 13 { d44(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d103(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 5 to worklist
  Adding insn 18 to worklist
  Adding insn 13 to worklist
  Adding insn 24 to worklist
  Adding insn 21 to worklist
  Adding insn 43 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 29 to worklist
  Adding insn 56 to worklist
Finished finding needed instructions:
  Adding insn 50 to worklist
Processing use of (reg 0 r0) in insn 56:
Processing use of (reg 13 sp) in insn 29:
Processing use of (reg 141) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 13 sp) in insn 34:
Processing use of (reg 0 r0) in insn 34:
  Adding insn 30 to worklist
Processing use of (reg 1 r1) in insn 34:
  Adding insn 31 to worklist
Processing use of (reg 2 r2) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 3 r3) in insn 34:
  Adding insn 33 to worklist
Processing use of (reg 13 sp) in insn 38:
Processing use of (reg 141) in insn 38:
Processing use of (reg 13 sp) in insn 43:
Processing use of (reg 0 r0) in insn 43:
  Adding insn 39 to worklist
Processing use of (reg 1 r1) in insn 43:
  Adding insn 40 to worklist
Processing use of (reg 2 r2) in insn 43:
  Adding insn 41 to worklist
Processing use of (reg 3 r3) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 13 sp) in insn 21:
Processing use of (reg 24 cc) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 133 [ D.24727 ]) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 0 r0) in insn 22:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 138) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 13 sp) in insn 18:
Processing use of (reg 0 r0) in insn 18:
  Adding insn 14 to worklist
Processing use of (reg 1 r1) in insn 18:
  Adding insn 15 to worklist
Processing use of (reg 2 r2) in insn 18:
  Adding insn 16 to worklist
Processing use of (reg 3 r3) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 13 sp) in insn 5:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 134 [ D.24724 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 6:


exceptions_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={9d,3u} r2={9d,3u} r3={9d,3u} r11={1d,6u} r12={6d} r13={1d,14u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={7d,2u} r25={1d,6u} r26={1d,5u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,1u} r134={1d,1u} r138={1d,1u} r141={1d,2u} 
;;    total ref usage 669{614d,55u,0e} in 30{25 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609
0[0,10] 1[10,9] 2[19,9] 3[28,9] 11[37,1] 12[38,6] 13[44,1] 14[45,6] 15[51,5] 16[56,5] 17[61,5] 18[66,5] 19[71,5] 20[76,5] 21[81,5] 22[86,5] 23[91,5] 24[96,7] 25[103,1] 26[104,1] 27[105,5] 28[110,5] 29[115,5] 30[120,5] 31[125,5] 32[130,5] 33[135,5] 34[140,5] 35[145,5] 36[150,5] 37[155,5] 38[160,5] 39[165,5] 40[170,5] 41[175,5] 42[180,5] 43[185,5] 44[190,5] 45[195,5] 46[200,5] 47[205,5] 48[210,5] 49[215,5] 50[220,5] 51[225,5] 52[230,5] 53[235,5] 54[240,5] 55[245,5] 56[250,5] 57[255,5] 58[260,5] 59[265,5] 60[270,5] 61[275,5] 62[280,5] 63[285,5] 64[290,5] 65[295,5] 66[300,5] 67[305,5] 68[310,5] 69[315,5] 70[320,5] 71[325,5] 72[330,5] 73[335,5] 74[340,5] 75[345,5] 76[350,5] 77[355,5] 78[360,5] 79[365,5] 80[370,5] 81[375,5] 82[380,5] 83[385,5] 84[390,5] 85[395,5] 86[400,5] 87[405,5] 88[410,5] 89[415,5] 90[420,5] 91[425,5] 92[430,5] 93[435,5] 94[440,5] 95[445,5] 96[450,5] 97[455,5] 98[460,5] 99[465,5] 100[470,5] 101[475,5] 102[480,5] 103[485,5] 104[490,5] 105[495,5] 106[500,5] 107[505,5] 108[510,5] 109[515,5] 110[520,5] 111[525,5] 112[530,5] 113[535,5] 114[540,5] 115[545,5] 116[550,5] 117[555,5] 118[560,5] 119[565,5] 120[570,5] 121[575,5] 122[580,5] 123[585,5] 124[590,5] 125[595,5] 126[600,5] 127[605,5] 133[610,1] 134[611,1] 138[612,1] 141[613,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(10)
9, 18, 27, 36, 37, 43, 44, 50, 103, 104
;; rd  gen 	(3)
8, 101, 611
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 45, 46, 47, 48, 49, 50, 96, 97, 98, 99, 100, 101, 102, 611

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 6 2 arch/arm/mm/fault.c:645 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 6 5 7 2 arch/arm/mm/fault.c:645 (set (reg:SI 134 [ D.24724 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 7 6 8 2 arch/arm/mm/fault.c:645 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24724 ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.24724 ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/mm/fault.c:645 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 138
;; live  kill	 14 [lr]
;; rd  in  	(11)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611
;; rd  gen 	(1)
612
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 612

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 9 13 3 arch/arm/mm/fault.c:646 (set (reg/f:SI 138)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x1154a280>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/mm/fault.c:646 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x1154a280>)
            (nil))))

(insn 14 13 15 3 arch/arm/mm/fault.c:646 (set (reg:SI 0 r0)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/mm/fault.c:646 (set (reg:SI 1 r1)
        (symbol_ref:SI ("do_translation_fault") [flags 0x3] <function_decl 0x1147d280 do_translation_fault>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_translation_fault") [flags 0x3] <function_decl 0x1147d280 do_translation_fault>)
        (nil)))

(insn 16 15 17 3 arch/arm/mm/fault.c:646 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/mm/fault.c:646 (set (reg:SI 3 r3)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(call_insn 18 17 19 3 arch/arm/mm/fault.c:646 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611, 612


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(12)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611, 612
;; rd  gen 	(3)
5, 98, 610
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 45, 46, 47, 48, 49, 50, 96, 97, 98, 99, 100, 101, 102, 610

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 19 18 20 4 86 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 21 20 22 4 arch/arm/mm/fault.c:650 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 22 21 23 4 arch/arm/mm/fault.c:650 (set (reg:SI 133 [ D.24727 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 23 22 24 4 arch/arm/mm/fault.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.24727 ])
            (const_int 8 [0x8]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.24727 ])
        (nil)))

(jump_insn 24 23 25 4 arch/arm/mm/fault.c:650 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 141
;; live  kill	 14 [lr]
;; rd  in  	(13)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612
;; rd  gen 	(1)
613
;; rd  kill	(7)
45, 46, 47, 48, 49, 50, 613

;; Pred edge  4 [0.0%]  (fallthru)
(note 25 24 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 25 29 5 arch/arm/mm/fault.c:655 (set (reg/f:SI 141)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/mm/fault.c:655 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)
        (nil)))

(insn 30 29 31 5 arch/arm/mm/fault.c:655 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/mm/fault.c:655 (set (reg:SI 1 r1)
        (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)
        (nil)))

(insn 32 31 33 5 arch/arm/mm/fault.c:655 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/fault.c:655 (set (reg:SI 3 r3)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(call_insn 34 33 38 5 arch/arm/mm/fault.c:655 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 38 34 39 5 arch/arm/mm/fault.c:657 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)
            (nil))))

(insn 39 38 40 5 arch/arm/mm/fault.c:657 (set (reg:SI 0 r0)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 arch/arm/mm/fault.c:657 (set (reg:SI 1 r1)
        (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)
        (nil)))

(insn 41 40 42 5 arch/arm/mm/fault.c:657 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 5 arch/arm/mm/fault.c:657 (set (reg:SI 3 r3)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(call_insn 43 42 44 5 arch/arm/mm/fault.c:657 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (expr_list:REG_EH_REGION (const_int 0 [0x0])
                        (nil))))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612, 613


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(14)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612, 613
;; rd  gen 	(1)
0
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 44 43 45 6 87 "" [1 uses])

(note 45 44 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 50 45 56 6 arch/arm/mm/fault.c:662 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 56 50 0 6 arch/arm/mm/fault.c:662 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612, 613


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
