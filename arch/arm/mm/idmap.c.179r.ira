
;; Function identity_mapping_del (identity_mapping_del)[0:1185]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a10 (r177,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r176,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r172,l1) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r170,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r167,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r166,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r164,l1) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r163,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r162,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r162,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a7(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r176,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r177,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r163,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a13(r172,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r170,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r177: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS

  a0(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r162,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a7(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r176,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r177,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r164,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r163,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a13(r172,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r170,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 39(l0): point = 1
   Insn 37(l0): point = 3
   Insn 57(l0): point = 5
   Insn 45(l0): point = 7
   Insn 33(l0): point = 9
   Insn 32(l0): point = 11
   Insn 102(l1): point = 14
   Insn 63(l1): point = 17
   Insn 66(l1): point = 19
   Insn 65(l1): point = 21
   Insn 62(l1): point = 23
   Insn 61(l1): point = 25
   Insn 99(l1): point = 27
   Insn 44(l1): point = 29
   Insn 105(l1): point = 31
   Insn 104(l1): point = 33
   Insn 60(l1): point = 35
   Insn 58(l1): point = 37
   Insn 41(l1): point = 39
 a0(r162): [1..1]
 a1(r168): [2..3]
 a2(r166): [1..11]
 a3(r177): [1..5]
 a4(r176): [1..7]
 a5(r167): [1..9]
 a6(r162): [14..41]
 a7(r166): [40..41] [14..19]
 a8(r167): [14..41]
 a9(r176): [14..41]
 a10(r177): [14..41]
 a11(r164): [20..27]
 a12(r163): [28..33]
 a13(r172): [28..29]
 a14(r170): [34..39]
 Rebuilding regno allocno list for 172
 Rebuilding regno allocno list for 170
 Rebuilding regno allocno list for 164
 Rebuilding regno allocno list for 163
Compressing live ranges: from 42 to 18 - 42%
Ranges after the compression:
 a0(r162): [7..17] [0..0]
 a1(r168): [1..2]
 a2(r166): [16..17] [7..8] [0..6]
 a3(r177): [7..17] [0..3]
 a4(r176): [7..17] [0..4]
 a5(r167): [7..17] [0..5]
 a11(r164): [9..10]
 a12(r163): [11..13]
 a13(r172): [11..12]
 a14(r170): [14..15]
+++Allocating 80 bytes for conflict table (uncompressed size 120)
;; a0(r162,l0) conflicts: a2(r166,l0) a3(r177,l0) a4(r176,l0) a5(r167,l0) a11(r164,l0) a13(r172,l0) a12(r163,l0) a14(r170,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r168,l0) conflicts: a2(r166,l0) a3(r177,l0) a4(r176,l0) a5(r167,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r166,l0) conflicts: a0(r162,l0) a3(r177,l0) a4(r176,l0) a5(r167,l0) a1(r168,l0)
;;     total conflict hard regs: 0 2 14
;;     conflict hard regs: 0 2 14
;; a3(r177,l0) conflicts: a0(r162,l0) a2(r166,l0) a4(r176,l0) a5(r167,l0) a1(r168,l0) a11(r164,l0) a13(r172,l0) a12(r163,l0) a14(r170,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a4(r176,l0) conflicts: a0(r162,l0) a2(r166,l0) a3(r177,l0) a5(r167,l0) a1(r168,l0) a11(r164,l0) a13(r172,l0) a12(r163,l0) a14(r170,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a5(r167,l0) conflicts: a0(r162,l0) a2(r166,l0) a3(r177,l0) a4(r176,l0) a1(r168,l0) a11(r164,l0) a13(r172,l0) a12(r163,l0) a14(r170,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a11(r164,l0) conflicts: a0(r162,l0) a3(r177,l0) a4(r176,l0) a5(r167,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r163,l0) conflicts: a0(r162,l0) a3(r177,l0) a4(r176,l0) a5(r167,l0) a13(r172,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r172,l0) conflicts: a0(r162,l0) a3(r177,l0) a4(r176,l0) a5(r167,l0) a12(r163,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r170,l0) conflicts: a0(r162,l0) a3(r177,l0) a4(r176,l0) a5(r167,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r166)<->a14(r170)@125:shuffle
  cp1:a12(r163)<->a14(r170)@125:shuffle
  cp2:a11(r164)<->a12(r163)@125:shuffle
  cp3:a11(r164)<->a13(r172)@125:shuffle
  cp4:a2(r166)<->a11(r164)@1000:move
  cp5:a0(r162)<->a1(r168)@125:shuffle
  regions=2, blocks=6, points=18
    allocnos=15, copies=6, conflicts=0, ranges=16

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r162 1r168 2r166 3r177 4r176 5r167 11r164 12r163 13r172 14r170
    modified regnos: 162 163 164 166 167 168 170 172 176 177
    border:
    Pressure: GENERAL_REGS=7
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 168 of GENERAL_REGS has 2 regs less
    Reg 166 of GENERAL_REGS has 3 regs less
    Reg 177 of GENERAL_REGS has 2 regs less
    Reg 176 of GENERAL_REGS has 2 regs less
    Reg 167 of GENERAL_REGS has 2 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 172 of GENERAL_REGS has 1 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
      Pushing a14(r170,l0)
      Pushing a13(r172,l0)
      Pushing a11(r164,l0)
      Pushing a12(r163,l0)
      Pushing a0(r162,l0)
      Pushing a4(r176,l0)
      Pushing a1(r168,l0)
      Pushing a3(r177,l0)
      Pushing a5(r167,l0)
      Pushing a2(r166,l0)
      Popping a2(r166,l0)  -- assign reg 1
      Popping a5(r167,l0)  -- assign reg 2
      Popping a3(r177,l0)  -- assign reg 3
      Popping a1(r168,l0)  -- assign reg 12
      Popping a4(r176,l0)  -- assign reg 4
      Popping a0(r162,l0)  -- assign reg 0
      Popping a12(r163,l0)  -- assign reg 1
      Popping a11(r164,l0)  -- assign reg 1
      Popping a13(r172,l0)  -- assign reg 12
      Popping a14(r170,l0)  -- assign reg 1
Disposition:
    0:r162 l0     0   12:r163 l0     1   11:r164 l0     1    2:r166 l0     1
    5:r167 l0     2    1:r168 l0    12   14:r170 l0     1   13:r172 l0    12
    4:r176 l0     4    3:r177 l0     3
New iteration of spill/restore move
+++Costs: overall -8250, reg -8250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=32, live_throughout: 0, 2, 13, 14, dead_or_set: 1, 166
insn=33, live_throughout: 0, 13, 14, 166, dead_or_set: 2, 167
insn=45, live_throughout: 0, 13, 14, 166, 167, dead_or_set: 176
insn=57, live_throughout: 0, 13, 14, 166, 167, 176, dead_or_set: 177
insn=37, live_throughout: 0, 13, 14, 166, 167, 176, 177, dead_or_set: 168
insn=39, live_throughout: 13, 14, 166, 167, 176, 177, dead_or_set: 0, 162, 168
insn=67, live_throughout: 13, 14, 162, 166, 167, 176, 177, dead_or_set: 
insn=41, live_throughout: 13, 14, 162, 167, 176, 177, dead_or_set: 166, 170
insn=58, live_throughout: 13, 14, 162, 167, 170, 176, 177, dead_or_set: 
insn=60, live_throughout: 13, 14, 162, 167, 170, 176, 177, dead_or_set: 
insn=104, live_throughout: 13, 14, 162, 167, 176, 177, dead_or_set: 163, 170
insn=105, live_throughout: 13, 14, 162, 167, 176, 177, dead_or_set: 163
insn=44, live_throughout: 13, 14, 162, 163, 167, 176, 177, dead_or_set: 172
insn=99, live_throughout: 13, 14, 162, 167, 176, 177, dead_or_set: 163, 164, 172
insn=61, live_throughout: 13, 14, 162, 164, 167, 176, 177, dead_or_set: 
insn=62, live_throughout: 13, 14, 162, 164, 167, 176, 177, dead_or_set: 
insn=65, live_throughout: 13, 14, 24, 164, 167, 176, 177, dead_or_set: 162
insn=66, live_throughout: 13, 14, 24, 162, 167, 176, 177, dead_or_set: 164, 166
insn=63, live_throughout: 13, 14, 162, 166, 167, 176, 177, dead_or_set: 
insn=102, live_throughout: 13, 14, 162, 166, 167, 176, 177, dead_or_set: 
insn=75, live_throughout: 13, 14, dead_or_set: 
init_insns for 177: (insn_list:REG_DEP_TRUE 57 (nil))
changing reg in insn 39
changing reg in insn 65
changing reg in insn 60
changing reg in insn 58
changing reg in insn 65
changing reg in insn 61
changing reg in insn 105
changing reg in insn 104
changing reg in insn 105
changing reg in insn 99
changing reg in insn 44
changing reg in insn 99
changing reg in insn 66
changing reg in insn 62
changing reg in insn 66
changing reg in insn 32
changing reg in insn 41
changing reg in insn 37
changing reg in insn 33
changing reg in insn 99
changing reg in insn 45
changing reg in insn 62
changing reg in insn 37
changing reg in insn 39
changing reg in insn 41
changing reg in insn 104
changing reg in insn 44
changing reg in insn 99
changing reg in insn 45
changing reg in insn 99
changing reg in insn 57
changing reg in insn 60
changing reg in insn 58
Spilling for insn 58.
Spilling for insn 60.

Reloads for insn # 58
Reload 0: reload_out (SI) = (mem:SI (reg/v/f:SI 0 r0 [orig:162 pgd.366 ] [162]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/v/f:SI 0 r0 [orig:162 pgd.366 ] [162]) [0 S4 A32])

Reloads for insn # 60
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/v/f:SI 0 r0 [orig:162 pgd.366 ] [162])
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/v/f:SI 0 r0 [orig:162 pgd.366 ] [162])
                                                        (const_int 4 [0x4])) [0 S4 A32])
deleting insn with uid = 32.
deleting insn with uid = 33.
deleting insn with uid = 66.


try_optimize_cfg iteration 1

Simplifying condjump 63 around jump 102
deleting insn with uid = 64.
deleting insn with uid = 102.
deleting insn with uid = 103.
deleting block 4
deleting insn with uid = 75.
Deleted label in block 5.
Deleting fallthru block 5.
deleting insn with uid = 78.
deleting block 5


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 4 count 7 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 4 count 6 (  1.5)


identity_mapping_del

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 24[cc]
;;  ref usage 	r0={3d,5u} r1={5d,7u} r2={1d,3u} r3={2d,2u} r4={1d,1u} r12={3d,2u} r13={1d,3u} r14={1d,1u} r24={3d,1u} 
;;    total ref usage 45{20d,25u,0e} in 15{15 regular + 0 call} insns.
(note 30 0 35 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 4 [r4] 12 [ip]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 35 30 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 31 35 34 2 NOTE_INSN_DELETED)

(note 34 31 38 2 NOTE_INSN_FUNCTION_BEG)

(note 38 34 45 2 NOTE_INSN_DELETED)

(insn 45 38 57 2 arch/arm/mm/idmap.c:70 (set (reg:SI 4 r4 [176])
        (plus:SI (reg/v:SI 2 r2 [orig:167 end ] [167])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 57 45 37 2 arch/arm/mm/idmap.c:50 (set (reg:SI 3 r3 [177])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 37 57 39 2 arch/arm/mm/idmap.c:68 (set (reg:SI 12 ip [168])
        (lshiftrt:SI (reg/v:SI 1 r1 [orig:166 addr ] [166])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 39 37 67 2 arch/arm/mm/idmap.c:68 (set (reg/v/f:SI 0 r0 [orig:162 pgd.366 ] [162])
        (plus:SI (mult:SI (reg:SI 12 ip [168])
                (const_int 8 [0x8]))
            (reg:SI 0 r0 [ pgd ]))) 270 {*arith_shiftsi} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [86.0%] 
(code_label 67 39 40 3 5 "" [1 uses])

(note 40 67 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 42 40 98 3 NOTE_INSN_DELETED)

(note 98 42 41 3 NOTE_INSN_DELETED)

(insn 41 98 58 3 arch/arm/mm/idmap.c:70 (set (reg:SI 1 r1 [170])
        (plus:SI (reg/v:SI 1 r1 [orig:166 addr ] [166])
            (const_int 2097152 [0x200000]))) 4 {*arm_addsi3} (nil))

(insn 58 41 60 3 arch/arm/mm/idmap.c:50 (set (mem:SI (reg/v/f:SI 0 r0 [orig:162 pgd.366 ] [162]) [0 S4 A32])
        (reg:SI 3 r3 [177])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 60 58 104 3 arch/arm/mm/idmap.c:50 (set (mem:SI (plus:SI (reg/v/f:SI 0 r0 [orig:162 pgd.366 ] [162])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 3 r3 [177])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 104 60 105 3 arch/arm/mm/idmap.c:70 (set (reg/v:SI 1 r1 [orig:163 __boundary ] [163])
        (lshiftrt:SI (reg:SI 1 r1 [170])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 105 104 44 3 arch/arm/mm/idmap.c:70 (set (reg/v:SI 1 r1 [orig:163 __boundary ] [163])
        (ashift:SI (reg/v:SI 1 r1 [orig:163 __boundary ] [163])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 44 105 99 3 arch/arm/mm/idmap.c:70 (set (reg:SI 12 ip [172])
        (plus:SI (reg/v:SI 1 r1 [orig:163 __boundary ] [163])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 99 44 61 3 arch/arm/mm/idmap.c:70 discrim 2 (parallel [
            (set (reg/v:SI 1 r1 [orig:164 next ] [164])
                (if_then_else:SI (ltu (reg:SI 12 ip [172])
                        (reg:SI 4 r4 [176]))
                    (reg/v:SI 1 r1 [orig:163 __boundary ] [163])
                    (reg/v:SI 2 r2 [orig:167 end ] [167])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 61 99 62 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:495 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 0 r0 [orig:162 pgd.366 ] [162])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7194152)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 62 61 65 3 arch/arm/mm/idmap.c:72 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 1 r1 [orig:164 next ] [164])
            (reg/v:SI 2 r2 [orig:167 end ] [167]))) 219 {*arm_cmpsi_insn} (nil))

(insn 65 62 63 3 arch/arm/mm/idmap.c:72 (set (reg/v/f:SI 0 r0 [orig:162 pgd.366 ] [162])
        (plus:SI (reg/v/f:SI 0 r0 [orig:162 pgd.366 ] [162])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(jump_insn 63 65 106 3 arch/arm/mm/idmap.c:72 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 3 -> ( 3 1)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [86.0%] 
;; Succ edge  EXIT [14.0%]  (fallthru,loop_exit)

(note 106 63 107 NOTE_INSN_DELETED)

(note 107 106 0 NOTE_INSN_DELETED)


;; Function identity_mapping_add (identity_mapping_add)[0:1182]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)
scanning new insn with uid = 82.
verify found no changes in insn with uid = 82.
deleting insn with uid = 67.
scanning new insn with uid = 83.
verify found no changes in insn with uid = 83.
deleting insn with uid = 66.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)

Pass 0 for finding allocno costs

    a13 (r153,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r150,l1) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r148,l1) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r146,l1) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r144,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r137,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r136,l1) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r135,l1) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r134,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a10(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r153,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a15(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a16(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a19(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a20(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a10(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a12(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r153,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r136,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a15(r135,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a16(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r134,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a19(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a20(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 69(l0): point = 1
   Insn 83(l0): point = 3
   Insn 82(l0): point = 5
   Insn 23(l0): point = 7
   Insn 29(l0): point = 9
   Insn 21(l0): point = 11
   Insn 8(l0): point = 13
   Insn 4(l0): point = 15
   Insn 3(l0): point = 17
   Insn 2(l0): point = 19
   Insn 73(l1): point = 22
   Insn 50(l1): point = 25
   Insn 53(l1): point = 27
   Insn 52(l1): point = 29
   Insn 49(l1): point = 31
   Insn 48(l1): point = 33
   Insn 47(l1): point = 35
   Insn 71(l1): point = 37
   Insn 46(l1): point = 39
   Insn 28(l1): point = 41
   Insn 45(l1): point = 43
   Insn 76(l1): point = 45
   Insn 44(l1): point = 47
   Insn 43(l1): point = 49
   Insn 78(l1): point = 51
   Insn 75(l1): point = 53
   Insn 77(l1): point = 55
   Insn 25(l1): point = 57
 a0(r137): [1..1]
 a1(r152): [2..5]
 a2(r151): [2..3]
 a3(r133): [1..7]
 a4(r139): [8..19]
 a5(r142): [8..11]
 a6(r153): [1..9]
 a7(r141): [1..15]
 a8(r140): [1..17]
 a9(r133): [22..59]
 a10(r137): [22..59]
 a11(r140): [56..59] [22..27]
 a12(r141): [22..59]
 a13(r153): [22..59]
 a14(r136): [28..37]
 a15(r135): [38..53]
 a16(r146): [38..41]
 a17(r150): [40..43]
 a18(r134): [44..49]
 a19(r148): [50..55]
 a20(r144): [54..57]
 Rebuilding regno allocno list for 150
 Rebuilding regno allocno list for 148
 Rebuilding regno allocno list for 146
 Rebuilding regno allocno list for 144
 Rebuilding regno allocno list for 136
 Rebuilding regno allocno list for 135
 Rebuilding regno allocno list for 134
Compressing live ranges: from 60 to 28 - 46%
Ranges after the compression:
 a0(r137): [11..27] [0..0]
 a1(r152): [1..3]
 a2(r151): [1..2]
 a3(r133): [11..27] [0..4]
 a4(r139): [5..10]
 a5(r142): [5..7]
 a6(r153): [11..27] [0..6]
 a7(r141): [11..27] [0..8]
 a8(r140): [25..27] [11..12] [0..9]
 a14(r136): [13..14]
 a15(r135): [15..22]
 a16(r146): [15..17]
 a17(r150): [16..18]
 a18(r134): [19..20]
 a19(r148): [21..24]
 a20(r144): [23..26]
+++Allocating 128 bytes for conflict table (uncompressed size 168)
;; a0(r137,l0) conflicts: a3(r133,l0) a6(r153,l0) a7(r141,l0) a8(r140,l0) a14(r136,l0) a16(r146,l0) a15(r135,l0) a17(r150,l0) a18(r134,l0) a19(r148,l0) a20(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r152,l0) conflicts: a3(r133,l0) a6(r153,l0) a7(r141,l0) a8(r140,l0) a2(r151,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r151,l0) conflicts: a3(r133,l0) a6(r153,l0) a7(r141,l0) a8(r140,l0) a1(r152,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a3(r133,l0) conflicts: a0(r137,l0) a6(r153,l0) a7(r141,l0) a8(r140,l0) a2(r151,l0) a1(r152,l0) a14(r136,l0) a16(r146,l0) a15(r135,l0) a17(r150,l0) a18(r134,l0) a19(r148,l0) a20(r144,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a4(r139,l0) conflicts: a6(r153,l0) a7(r141,l0) a8(r140,l0) a5(r142,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a5(r142,l0) conflicts: a6(r153,l0) a7(r141,l0) a8(r140,l0) a4(r139,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a6(r153,l0) conflicts: a0(r137,l0) a3(r133,l0) a7(r141,l0) a8(r140,l0) a2(r151,l0) a1(r152,l0) a5(r142,l0) a4(r139,l0) a14(r136,l0) a16(r146,l0) a15(r135,l0) a17(r150,l0) a18(r134,l0) a19(r148,l0) a20(r144,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a7(r141,l0) conflicts: a0(r137,l0) a3(r133,l0) a6(r153,l0) a8(r140,l0) a2(r151,l0) a1(r152,l0) a5(r142,l0) a4(r139,l0) a14(r136,l0) a16(r146,l0) a15(r135,l0) a17(r150,l0) a18(r134,l0) a19(r148,l0) a20(r144,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a8(r140,l0) conflicts: a0(r137,l0) a3(r133,l0) a6(r153,l0) a7(r141,l0) a2(r151,l0) a1(r152,l0) a5(r142,l0) a4(r139,l0) a20(r144,l0)
;;     total conflict hard regs: 0 2 14
;;     conflict hard regs: 0 2 14
;; a14(r136,l0) conflicts: a0(r137,l0) a3(r133,l0) a6(r153,l0) a7(r141,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r135,l0) conflicts: a0(r137,l0) a3(r133,l0) a6(r153,l0) a7(r141,l0) a16(r146,l0) a17(r150,l0) a18(r134,l0) a19(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r146,l0) conflicts: a0(r137,l0) a3(r133,l0) a6(r153,l0) a7(r141,l0) a15(r135,l0) a17(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r150,l0) conflicts: a0(r137,l0) a3(r133,l0) a6(r153,l0) a7(r141,l0) a16(r146,l0) a15(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r134,l0) conflicts: a0(r137,l0) a3(r133,l0) a6(r153,l0) a7(r141,l0) a15(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r148,l0) conflicts: a0(r137,l0) a3(r133,l0) a6(r153,l0) a7(r141,l0) a15(r135,l0) a20(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r144,l0) conflicts: a0(r137,l0) a3(r133,l0) a6(r153,l0) a7(r141,l0) a8(r140,l0) a19(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a8(r140)<->a19(r148)@125:shuffle
  cp1:a15(r135)<->a20(r144)@125:shuffle
  cp2:a18(r134)<->a19(r148)@125:shuffle
  cp3:a17(r150)<->a18(r134)@125:shuffle
  cp4:a14(r136)<->a15(r135)@125:shuffle
  cp5:a14(r136)<->a16(r146)@125:shuffle
  cp6:a8(r140)<->a14(r136)@1000:move
  cp7:a3(r133)<->a4(r139)@125:shuffle
  cp8:a3(r133)<->a5(r142)@125:shuffle
  cp9:a0(r137)<->a2(r151)@125:shuffle
  cp10:a0(r137)<->a1(r152)@125:shuffle
  regions=2, blocks=6, points=28
    allocnos=21, copies=11, conflicts=0, ranges=22

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r137 1r152 2r151 3r133 4r139 5r142 6r153 7r141 8r140 14r136 15r135 16r146 17r150 18r134 19r148 20r144
    modified regnos: 133 134 135 136 137 139 140 141 142 144 146 148 150 151 152 153
    border:
    Pressure: GENERAL_REGS=8
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 2 regs less
    Reg 151 of GENERAL_REGS has 2 regs less
    Reg 133 of GENERAL_REGS has 2 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 142 of GENERAL_REGS has 2 regs less
    Reg 153 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 2 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
      Pushing a20(r144,l0)
      Pushing a17(r150,l0)
      Pushing a16(r146,l0)
      Pushing a0(r137,l0)
      Pushing a18(r134,l0)
      Pushing a14(r136,l0)
      Pushing a19(r148,l0)
      Pushing a15(r135,l0)
      Pushing a6(r153,l0)
      Pushing a5(r142,l0)
      Pushing a2(r151,l0)
      Pushing a1(r152,l0)
      Pushing a7(r141,l0)
      Pushing a3(r133,l0)
      Pushing a8(r140,l0)
      Pushing a4(r139,l0)
      Popping a4(r139,l0)  -- assign reg 4
      Popping a8(r140,l0)  -- assign reg 5
      Popping a3(r133,l0)  -- assign reg 4
      Popping a7(r141,l0)  -- assign reg 6
      Popping a1(r152,l0)  -- assign reg 3
      Popping a2(r151,l0)  -- assign reg 2
      Popping a5(r142,l0)  -- assign reg 3
      Popping a6(r153,l0)  -- assign reg 1
      Popping a15(r135,l0)  -- assign reg 12
      Popping a19(r148,l0)  -- assign reg 5
      Popping a14(r136,l0)  -- assign reg 5
      Popping a18(r134,l0)  -- assign reg 5
      Popping a0(r137,l0)  -- assign reg 3
      Popping a16(r146,l0)  -- assign reg 2
      Popping a17(r150,l0)  -- assign reg 5
      Popping a20(r144,l0)  -- assign reg 12
Disposition:
    3:r133 l0     4   18:r134 l0     5   15:r135 l0    12   14:r136 l0     5
    0:r137 l0     3    4:r139 l0     4    8:r140 l0     5    7:r141 l0     6
    5:r142 l0     3   20:r144 l0    12   16:r146 l0     2   19:r148 l0     5
   17:r150 l0     5    2:r151 l0     2    1:r152 l0     3    6:r153 l0     1
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, dead_or_set: 0, 139
insn=3, live_throughout: 2, 13, 139, dead_or_set: 1, 140
insn=4, live_throughout: 13, 139, 140, dead_or_set: 2, 141
insn=8, live_throughout: 13, 139, 140, 141, dead_or_set: 0, 14
insn=21, live_throughout: 0, 13, 14, 139, 140, 141, dead_or_set: 142
insn=29, live_throughout: 0, 13, 14, 139, 140, 141, 142, dead_or_set: 153
insn=23, live_throughout: 0, 13, 14, 140, 141, 153, dead_or_set: 133, 139, 142
insn=82, live_throughout: 0, 13, 14, 133, 140, 141, 153, dead_or_set: 152
insn=83, live_throughout: 0, 13, 14, 133, 140, 141, 152, 153, dead_or_set: 151
insn=69, live_throughout: 13, 14, 133, 140, 141, 153, dead_or_set: 0, 137, 151, 152
insn=54, live_throughout: 13, 14, 133, 137, 140, 141, 153, dead_or_set: 
insn=25, live_throughout: 13, 14, 133, 137, 140, 141, 153, dead_or_set: 144
insn=77, live_throughout: 13, 14, 133, 137, 141, 144, 153, dead_or_set: 140, 148
insn=75, live_throughout: 13, 14, 133, 137, 141, 148, 153, dead_or_set: 135, 144
insn=78, live_throughout: 13, 14, 133, 135, 137, 141, 153, dead_or_set: 148
insn=43, live_throughout: 13, 14, 133, 135, 137, 141, 153, dead_or_set: 134, 148
insn=44, live_throughout: 13, 14, 133, 134, 135, 137, 141, 153, dead_or_set: 
insn=76, live_throughout: 13, 14, 133, 134, 137, 141, 153, dead_or_set: 135
insn=45, live_throughout: 13, 14, 133, 135, 137, 141, 153, dead_or_set: 134, 150
insn=28, live_throughout: 13, 14, 133, 135, 137, 141, 150, 153, dead_or_set: 146
insn=46, live_throughout: 13, 14, 133, 135, 137, 141, 146, 153, dead_or_set: 150
insn=71, live_throughout: 13, 14, 133, 137, 141, 153, dead_or_set: 135, 136, 146
insn=47, live_throughout: 13, 14, 133, 136, 137, 141, 153, dead_or_set: 
insn=48, live_throughout: 13, 14, 133, 136, 137, 141, 153, dead_or_set: 
insn=49, live_throughout: 13, 14, 133, 136, 137, 141, 153, dead_or_set: 
insn=52, live_throughout: 13, 14, 24, 136, 137, 141, 153, dead_or_set: 133
insn=53, live_throughout: 13, 14, 24, 133, 137, 141, 153, dead_or_set: 136, 140
insn=50, live_throughout: 13, 14, 133, 137, 140, 141, 153, dead_or_set: 
insn=73, live_throughout: 13, 14, 133, 137, 140, 141, 153, dead_or_set: 
insn=62, live_throughout: 13, 14, dead_or_set: 
init_insns for 150: (insn_list:REG_DEP_TRUE 46 (nil))
init_insns for 151: (insn_list:REG_DEP_TRUE 83 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 82 (nil))
changing reg in insn 23
changing reg in insn 52
changing reg in insn 52
changing reg in insn 47
changing reg in insn 46
changing reg in insn 44
changing reg in insn 45
changing reg in insn 43
changing reg in insn 45
changing reg in insn 44
changing reg in insn 76
changing reg in insn 75
changing reg in insn 76
changing reg in insn 71
changing reg in insn 28
changing reg in insn 71
changing reg in insn 53
changing reg in insn 49
changing reg in insn 69
changing reg in insn 43
changing reg in insn 2
changing reg in insn 23
changing reg in insn 53
changing reg in insn 3
changing reg in insn 77
changing reg in insn 25
changing reg in insn 21
changing reg in insn 4
changing reg in insn 71
changing reg in insn 29
changing reg in insn 49
changing reg in insn 21
changing reg in insn 23
changing reg in insn 25
changing reg in insn 75
changing reg in insn 28
changing reg in insn 71
changing reg in insn 78
changing reg in insn 77
changing reg in insn 78
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 83
changing reg in insn 69
changing reg in insn 82
changing reg in insn 69
changing reg in insn 29
changing reg in insn 71
Spilling for insn 44.
Spilling for insn 46.

Reloads for insn # 44
Reload 0: reload_out (SI) = (mem:SI (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133]) [0 S4 A32])

Reloads for insn # 46
Reload 0: reload_out (SI) = (mem:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133])
                                                        (const_int 4 [0x4])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133])
                                                        (const_int 4 [0x4])) [0 S4 A32])
deleting insn with uid = 53.


try_optimize_cfg iteration 1

Simplifying condjump 50 around jump 73
deleting insn with uid = 51.
deleting insn with uid = 73.
deleting insn with uid = 74.
deleting block 4
deleting insn with uid = 62.
Deleted label in block 5.
Deleting fallthru block 5.
deleting insn with uid = 65.
deleting block 5


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 4 count 6 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 4 count 6 (  1.5)


identity_mapping_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,2u} r1={3d,2u} r2={4d,3u} r3={5d,3u} r4={3d,5u,1d} r5={6d,9u} r6={1d,3u} r12={5d,4u} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 185{147d,37u,1e} in 26{25 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 68 2 NOTE_INSN_DELETED)

(note 68 9 22 2 NOTE_INSN_DELETED)

(note 22 68 2 2 NOTE_INSN_DELETED)

(insn 2 22 3 2 arch/arm/mm/idmap.c:32 (set (reg/v/f:SI 4 r4 [orig:139 pgd ] [139])
        (reg:SI 0 r0 [ pgd ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/idmap.c:32 (set (reg/v:SI 5 r5 [orig:140 addr ] [140])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 8 2 arch/arm/mm/idmap.c:32 (set (reg/v:SI 6 r6 [orig:141 end ] [141])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (nil))

(call_insn 8 4 21 2 arch/arm/mm/idmap.c:36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512b2280 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 21 8 29 2 arch/arm/mm/idmap.c:39 (set (reg:SI 3 r3 [142])
        (lshiftrt:SI (reg/v:SI 5 r5 [orig:140 addr ] [140])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 29 21 23 2 arch/arm/mm/idmap.c:41 (set (reg:SI 1 r1 [153])
        (plus:SI (reg/v:SI 6 r6 [orig:141 end ] [141])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 23 29 82 2 arch/arm/mm/idmap.c:39 (set (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133])
        (plus:SI (mult:SI (reg:SI 3 r3 [142])
                (const_int 8 [0x8]))
            (reg/v/f:SI 4 r4 [orig:139 pgd ] [139]))) 270 {*arith_shiftsi} (nil))

(insn 82 23 83 2 arch/arm/mm/idmap.c:37 (set (reg:SI 3 r3 [152])
        (const_int 1042 [0x412])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1042 [0x412])
        (nil)))

(insn 83 82 69 2 arch/arm/mm/idmap.c:37 (set (reg:SI 2 r2 [151])
        (const_int 1026 [0x402])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1026 [0x402])
        (nil)))

(insn 69 83 54 2 arch/arm/mm/idmap.c:37 (parallel [
            (set (reg/v:SI 3 r3 [orig:137 prot ] [137])
                (if_then_else:SI (gt (reg:SI 0 r0)
                        (const_int 7 [0x7]))
                    (reg:SI 2 r2 [151])
                    (reg:SI 3 r3 [152])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 2 [r2] 4 [r4] 5 [r5] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 2 [r2] 4 [r4] 5 [r5] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [86.0%] 
(code_label 54 69 24 3 14 "" [1 uses])

(note 24 54 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 26 24 70 3 NOTE_INSN_DELETED)

(note 70 26 41 3 NOTE_INSN_DELETED)

(note 41 70 25 3 NOTE_INSN_DELETED)

(insn 25 41 77 3 arch/arm/mm/idmap.c:41 (set (reg:SI 12 ip [144])
        (plus:SI (reg/v:SI 5 r5 [orig:140 addr ] [140])
            (const_int 2097152 [0x200000]))) 4 {*arm_addsi3} (nil))

(insn 77 25 75 3 arch/arm/mm/idmap.c:12 (set (reg:SI 5 r5 [148])
        (lshiftrt:SI (reg/v:SI 5 r5 [orig:140 addr ] [140])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 75 77 78 3 arch/arm/mm/idmap.c:41 (set (reg/v:SI 12 ip [orig:135 __boundary ] [135])
        (lshiftrt:SI (reg:SI 12 ip [144])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 78 75 43 3 arch/arm/mm/idmap.c:12 (set (reg:SI 5 r5 [148])
        (ashift:SI (reg:SI 5 r5 [148])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 43 78 44 3 arch/arm/mm/idmap.c:12 (set (reg/v:SI 5 r5 [orig:134 addr ] [134])
        (ior:SI (reg:SI 5 r5 [148])
            (reg/v:SI 3 r3 [orig:137 prot ] [137]))) 89 {*arm_iorsi3} (nil))

(insn 44 43 76 3 arch/arm/mm/idmap.c:13 (set (mem:SI (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133]) [0 S4 A32])
        (reg/v:SI 5 r5 [orig:134 addr ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 76 44 45 3 arch/arm/mm/idmap.c:41 (set (reg/v:SI 12 ip [orig:135 __boundary ] [135])
        (ashift:SI (reg/v:SI 12 ip [orig:135 __boundary ] [135])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 45 76 28 3 arch/arm/mm/idmap.c:15 (set (reg:SI 5 r5 [150])
        (plus:SI (reg/v:SI 5 r5 [orig:134 addr ] [134])
            (const_int 1048576 [0x100000]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133])
                (const_int 4 [0x4])) [0 S4 A32])
        (nil)))

(insn 28 45 46 3 arch/arm/mm/idmap.c:41 (set (reg:SI 2 r2 [146])
        (plus:SI (reg/v:SI 12 ip [orig:135 __boundary ] [135])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 46 28 71 3 arch/arm/mm/idmap.c:15 (set (mem:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 5 r5 [150])) 167 {*arm_movsi_insn} (nil))

(insn 71 46 47 3 arch/arm/mm/idmap.c:41 discrim 2 (parallel [
            (set (reg/v:SI 5 r5 [orig:136 next ] [136])
                (if_then_else:SI (ltu (reg:SI 2 r2 [146])
                        (reg:SI 1 r1 [153]))
                    (reg/v:SI 12 ip [orig:135 __boundary ] [135])
                    (reg/v:SI 6 r6 [orig:141 end ] [141])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 47 71 48 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:479 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7192104)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 48 47 49 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:487 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7193128)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 49 48 52 3 arch/arm/mm/idmap.c:43 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:136 next ] [136])
            (reg/v:SI 6 r6 [orig:141 end ] [141]))) 219 {*arm_cmpsi_insn} (nil))

(insn 52 49 50 3 arch/arm/mm/idmap.c:43 (set (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133])
        (plus:SI (reg/v/f:SI 4 r4 [orig:133 pgd.404 ] [133])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(jump_insn 50 52 81 3 arch/arm/mm/idmap.c:43 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 3 -> ( 3 1)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  3 [86.0%] 
;; Succ edge  EXIT [14.0%]  (fallthru,loop_exit)

(note 81 50 84 NOTE_INSN_DELETED)

(note 84 81 0 NOTE_INSN_DELETED)


;; Function setup_mm_for_reboot (setup_mm_for_reboot)[0:1186]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000


Pass 1 for finding allocno costs

    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r136,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000

   Insn 35(l0): point = 0
   Insn 34(l0): point = 2
   Insn 31(l0): point = 5
   Insn 30(l0): point = 7
   Insn 28(l0): point = 10
   Insn 27(l0): point = 12
   Insn 23(l0): point = 15
   Insn 22(l0): point = 17
   Insn 20(l0): point = 20
   Insn 19(l0): point = 22
   Insn 17(l0): point = 24
   Insn 16(l0): point = 26
   Insn 15(l0): point = 28
   Insn 14(l0): point = 30
   Insn 11(l0): point = 32
   Insn 10(l0): point = 34
   Insn 9(l0): point = 36
   Insn 13(l0): point = 38
   Insn 44(l0): point = 40
   Insn 12(l0): point = 42
   Insn 43(l0): point = 44
 a0(r144): [6..7]
 a1(r133): [13..26]
 a2(r142): [16..17]
 a3(r140): [27..28]
 a4(r139): [33..34]
 a5(r138): [35..36]
 a6(r136): [37..44]
Compressing live ranges: from 47 to 14 - 29%
Ranges after the compression:
 a0(r144): [0..1]
 a1(r133): [2..5]
 a2(r142): [3..4]
 a3(r140): [6..7]
 a4(r139): [8..9]
 a5(r138): [10..11]
 a6(r136): [12..13]
+++Allocating 16 bytes for conflict table (uncompressed size 56)
;; a0(r144,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts: a2(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r142,l0) conflicts: a1(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r140,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r139,l0) conflicts:
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a5(r138,l0) conflicts:
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a6(r136,l0) conflicts:
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2

  regions=1, blocks=7, points=14
    allocnos=7, copies=0, conflicts=2, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r144 1r133 2r142 3r140 4r139 5r138 6r136
    modified regnos: 133 136 138 139 140 142 144
    border:
    Pressure: GENERAL_REGS=4
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
      Pushing a3(r140,l0)
      Pushing a2(r142,l0)
      Pushing a0(r144,l0)
      Pushing a1(r133,l0)
      Pushing a5(r138,l0)
      Pushing a4(r139,l0)
      Pushing a6(r136,l0)
      Popping a6(r136,l0)  -- assign reg 3
      Popping a4(r139,l0)  -- assign reg 3
      Popping a5(r138,l0)  -- assign reg 3
      Popping a1(r133,l0)  -- assign reg 3
      Popping a0(r144,l0)  -- assign reg 3
      Popping a2(r142,l0)  -- assign reg 2
      Popping a3(r140,l0)  -- assign reg 3
Disposition:
    1:r133 l0     3    6:r136 l0     3    5:r138 l0     3    4:r139 l0     3
    3:r140 l0     3    2:r142 l0     2    0:r144 l0     3
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=43, live_throughout: 13, dead_or_set: 136
insn=12, live_throughout: 13, 136, dead_or_set: 1
insn=44, live_throughout: 1, 13, dead_or_set: 136
insn=13, live_throughout: 1, 13, 136, dead_or_set: 2
insn=9, live_throughout: 1, 2, 13, dead_or_set: 136, 138
insn=10, live_throughout: 1, 2, 13, dead_or_set: 138, 139
insn=11, live_throughout: 1, 2, 13, dead_or_set: 0, 139
insn=14, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=15, live_throughout: 13, 14, dead_or_set: 140
insn=16, live_throughout: 13, 14, dead_or_set: 133, 140
insn=17, live_throughout: 13, 14, 133, dead_or_set: 
insn=19, live_throughout: 13, 14, 133, dead_or_set: 
insn=20, live_throughout: 13, 14, 133, dead_or_set: 
insn=22, live_throughout: 13, 14, 133, dead_or_set: 142
insn=23, live_throughout: 13, 14, 133, dead_or_set: 142
insn=24, live_throughout: 13, 14, 133, dead_or_set: 
insn=27, live_throughout: 13, 14, dead_or_set: 133
insn=28, live_throughout: 13, 14, dead_or_set: 
insn=30, live_throughout: 13, 14, dead_or_set: 144
insn=31, live_throughout: 13, 14, dead_or_set: 144
insn=32, live_throughout: 13, 14, dead_or_set: 
insn=34, live_throughout: 13, 14, dead_or_set: 
insn=35, live_throughout: 13, 14, dead_or_set: 
init_insns for 140: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 142: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 30 (nil))
changing reg in insn 16
changing reg in insn 27
changing reg in insn 19
changing reg in insn 44
changing reg in insn 43
changing reg in insn 44
changing reg in insn 9
changing reg in insn 9
changing reg in insn 10
changing reg in insn 10
changing reg in insn 11
changing reg in insn 15
changing reg in insn 16
changing reg in insn 22
changing reg in insn 23
changing reg in insn 30
changing reg in insn 31
Spilling for insn 43.
Using reg 2 for reload 0

Reloads for insn # 43
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


setup_mm_for_reboot

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={5d,3u} r3={9d,8u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 164{140d,24u,0e} in 22{21 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 18 2 NOTE_INSN_DELETED)

(note 18 7 47 2 NOTE_INSN_DELETED)

(insn 47 18 43 2 arch/arm/mm/idmap.c:88 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 43 47 12 2 arch/arm/mm/idmap.c:88 (set (reg:SI 3 r3 [136])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 43 44 2 arch/arm/mm/idmap.c:88 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 44 12 13 2 arch/arm/mm/idmap.c:88 (set (reg:SI 3 r3 [136])
        (and:SI (reg:SI 3 r3 [136])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 44 9 2 arch/arm/mm/idmap.c:88 (set (reg:SI 2 r2)
        (const_int -1090519040 [0xffffffffbf000000])) 167 {*arm_movsi_insn} (nil))

(insn 9 13 10 2 arch/arm/mm/idmap.c:88 (set (reg/f:SI 3 r3 [orig:138 <variable>.task ] [138])
        (mem/s/f/j:SI (plus:SI (reg:SI 3 r3 [136])
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/idmap.c:88 (set (reg/f:SI 3 r3 [orig:139 <variable>.active_mm ] [139])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:138 <variable>.task ] [138])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 14 2 arch/arm/mm/idmap.c:88 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:139 <variable>.active_mm ] [139])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 11 15 2 arch/arm/mm/idmap.c:88 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_add") [flags 0x3] <function_decl 0x10d1c400 identity_mapping_add>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 3 r3 [140])
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x112f45a0 cpu_tlb>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x112f45a0 cpu_tlb>)
        (nil)))

(insn 16 15 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 3 r3 [140])
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x112f45a0 cpu_tlb>)
                    (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
        (nil)))

(insn 17 16 19 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7172648)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 19 17 20 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 12 [0xc]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 20 19 21 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 2 [r2]
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 2 r2 [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 23 22 24 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 2 r2 [142])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7173288)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 24 23 25 4 17 "" [1 uses])

(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 26 25 27 4 NOTE_INSN_DELETED)

(insn 27 26 28 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __tlb_flag ] [133])
                (const_int 1 [0x1])
                (const_int 20 [0x14]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 28 27 29 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  4 [61.0%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 3 r3 [144])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 31 30 32 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 3 r3 [144])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7174056)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 32 31 33 6 18 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7174440)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 35 34 45 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 7174568)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 45 35 46 NOTE_INSN_DELETED)

(note 46 45 0 NOTE_INSN_DELETED)

