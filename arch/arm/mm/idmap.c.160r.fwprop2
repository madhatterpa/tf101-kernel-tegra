
;; Function identity_mapping_del (identity_mapping_del)[0:1185]

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 3 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



identity_mapping_del

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={1d,1u} r1={1d,1u} r2={1d,1u} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={3d,2u} r25={1d,5u} r26={1d,4u} r162={2d,4u} r163={1d,2u} r164={1d,2u} r165={1d,1u} r166={2d,2u} r167={1d,3u} r168={1d,1u} r169={1d,1u} r170={1d,1u,1d} r171={1d,1u} r172={1d,1u} r176={1d,1u} r177={1d,2u} 
;;    total ref usage 76{28d,47u,1e} in 21{21 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7, 8, 9, 10
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 24[8,3] 25[11,1] 26[12,1] 162[13,2] 163[15,1] 164[16,1] 165[17,1] 166[18,2] 167[20,1] 168[21,1] 169[22,1] 170[23,1] 171[24,1] 172[25,1] 176[26,1] 177[27,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 162 165 166 167 168 169 176 177
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 162 165 166 167 168 169 176 177
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12
;; rd  gen 	(8)
14, 17, 19, 20, 21, 22, 26, 27
;; rd  kill	(10)
13, 14, 17, 18, 19, 20, 21, 22, 26, 27

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 35 0 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 31 35 32 2 arch/arm/mm/idmap.c:65 (set (reg/v/f:SI 165 [ pgd ])
        (reg:SI 0 r0 [ pgd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ pgd ])
        (nil)))

(insn 32 31 33 2 arch/arm/mm/idmap.c:65 (set (reg/v:SI 166 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(insn 33 32 34 2 arch/arm/mm/idmap.c:65 (set (reg/v:SI 167 [ end ])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ end ])
        (nil)))

(note 34 33 37 2 NOTE_INSN_FUNCTION_BEG)

(insn 37 34 38 2 arch/arm/mm/idmap.c:68 (set (reg:SI 168)
        (lshiftrt:SI (reg/v:SI 166 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 38 37 39 2 arch/arm/mm/idmap.c:68 (set (reg:SI 169)
        (ashift:SI (reg:SI 168)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 39 38 45 2 arch/arm/mm/idmap.c:68 (set (reg/v/f:SI 162 [ pgd.366 ])
        (plus:SI (reg/v/f:SI 165 [ pgd ])
            (reg:SI 169))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg/v/f:SI 165 [ pgd ])
            (nil))))

(insn 45 39 57 2 arch/arm/mm/idmap.c:70 (set (reg:SI 176)
        (plus:SI (reg/v:SI 167 [ end ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 57 45 67 2 arch/arm/mm/idmap.c:50 (set (reg:SI 177)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; rd  out 	(18)
0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 14, 17, 19, 20, 21, 22, 26, 27


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 166 167 176 177
;; lr  def 	 24 [cc] 163 164 170 171 172
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; live  gen 	 24 [cc] 163 164 170 171 172
;; live  kill	 24 [cc]
;; rd  in  	(26)
0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(6)
9, 15, 16, 23, 24, 25
;; rd  kill	(8)
8, 9, 10, 15, 16, 23, 24, 25

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru,dfs_back)
(code_label 67 57 40 3 5 "" [0 uses])

(note 40 67 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 3 arch/arm/mm/idmap.c:70 (set (reg:SI 170)
        (plus:SI (reg/v:SI 166 [ addr ])
            (const_int 2097152 [0x200000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 166 [ addr ])
        (nil)))

(insn 42 41 43 3 arch/arm/mm/idmap.c:70 (set (reg:SI 171)
        (lshiftrt:SI (reg:SI 170)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 43 42 44 3 arch/arm/mm/idmap.c:70 (set (reg/v:SI 163 [ __boundary ])
        (ashift:SI (reg:SI 171)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_EQUAL (and:SI (reg:SI 170)
                (const_int -2097152 [0xffffffffffe00000]))
            (nil))))

(insn 44 43 98 3 arch/arm/mm/idmap.c:70 (set (reg:SI 172)
        (plus:SI (reg/v:SI 163 [ __boundary ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 98 44 99 3 arch/arm/mm/idmap.c:70 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (reg:SI 176))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 99 98 58 3 arch/arm/mm/idmap.c:70 discrim 2 (set (reg/v:SI 164 [ next ])
        (if_then_else:SI (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 163 [ __boundary ])
            (reg/v:SI 167 [ end ]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg/v:SI 163 [ __boundary ])
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))

(insn 58 99 60 3 arch/arm/mm/idmap.c:50 (set (mem:SI (reg/v/f:SI 162 [ pgd.366 ]) [0 S4 A32])
        (reg:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 60 58 61 3 arch/arm/mm/idmap.c:50 (set (mem:SI (plus:SI (reg/v/f:SI 162 [ pgd.366 ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 61 60 62 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:495 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 162 [ pgd.366 ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7194152)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 62 61 63 3 arch/arm/mm/idmap.c:72 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 164 [ next ])
            (reg/v:SI 167 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 63 62 64 3 arch/arm/mm/idmap.c:72 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1400 [0x578])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177
;; rd  out 	(26)
0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27


;; Succ edge  4 [86.0%]  (fallthru)
;; Succ edge  5 [14.0%]  (loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 162 164
;; lr  def 	 162 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 164 167 176 177
;; live  gen 	 162 166
;; live  kill	
;; rd  in  	(26)
0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(2)
13, 18
;; rd  kill	(4)
13, 14, 18, 19

;; Pred edge  3 [86.0%]  (fallthru)
(note 64 63 65 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 4 arch/arm/mm/idmap.c:72 (set (reg/v/f:SI 162 [ pgd.366 ])
        (plus:SI (reg/v/f:SI 162 [ pgd.366 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 66 65 75 4 arch/arm/mm/idmap.c:72 (set (reg/v:SI 166 [ addr ])
        (reg/v:SI 164 [ next ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 164 [ next ])
        (nil)))
;; End of basic block 4 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 162 166 167 176 177
;; rd  out 	(24)
0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27


;; Succ edge  3 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(26)
0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [14.0%]  (loop_exit)
(code_label 75 66 78 5 6 "" [1 uses])

(note 78 75 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(26)
0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function identity_mapping_add (identity_mapping_add)[0:1182]

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 3, latch 4
;;  depth 1, outer 0
;;  nodes: 3 4
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 3 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



identity_mapping_add

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,2u} r1={2d,1u} r2={2d,1u} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,3u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={2d,4u} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={2d,3u,1d} r141={1d,3u} r142={1d,1u} r143={1d,1u} r144={1d,1u,1d} r145={1d,1u} r146={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} 
;;    total ref usage 213{153d,58u,2e} in 31{30 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,2] 1[2,2] 2[4,2] 3[6,2] 11[8,1] 12[9,2] 13[11,1] 14[12,2] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,5] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,2] 134[133,1] 135[134,1] 136[135,1] 137[136,1] 138[137,1] 139[138,1] 140[139,2] 141[141,1] 142[142,1] 143[143,1] 144[144,1] 145[145,1] 146[146,1] 148[147,1] 149[148,1] 150[149,1] 151[150,1] 152[151,1] 153[152,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137 138 139 140 141 142 143 151 152 153
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 137 138 139 140 141 142 143 151 152 153
;; live  kill	 14 [lr]
;; rd  in  	(10)
1, 3, 5, 7, 8, 10, 11, 13, 28, 29
;; rd  gen 	(13)
0, 24, 132, 136, 137, 138, 140, 141, 142, 143, 150, 151, 152
;; rd  kill	(22)
0, 1, 12, 13, 23, 24, 25, 26, 27, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 150, 151, 152

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/idmap.c:32 (set (reg/v/f:SI 139 [ pgd ])
        (reg:SI 0 r0 [ pgd ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ pgd ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/idmap.c:32 (set (reg/v:SI 140 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(insn 4 3 5 2 arch/arm/mm/idmap.c:32 (set (reg/v:SI 141 [ end ])
        (reg:SI 2 r2 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ end ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 8 5 9 2 arch/arm/mm/idmap.c:36 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512b2280 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 9 8 66 2 arch/arm/mm/idmap.c:36 (set (reg:SI 138 [ D.21535 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 66 9 67 2 arch/arm/mm/idmap.c:37 (set (reg:SI 151)
        (const_int 1026 [0x402])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 2 arch/arm/mm/idmap.c:37 (set (reg:SI 152)
        (const_int 1042 [0x412])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 69 2 arch/arm/mm/idmap.c:37 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.21535 ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.21535 ])
        (nil)))

(insn 69 68 21 2 arch/arm/mm/idmap.c:37 (set (reg/v:SI 137 [ prot ])
        (if_then_else:SI (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 151)
            (reg:SI 152))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 152)
        (expr_list:REG_DEAD (reg:SI 151)
            (expr_list:REG_DEAD (reg:CC 24 cc)
                (nil)))))

(insn 21 69 22 2 arch/arm/mm/idmap.c:39 (set (reg:SI 142)
        (lshiftrt:SI (reg/v:SI 140 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 22 21 23 2 arch/arm/mm/idmap.c:39 (set (reg:SI 143)
        (ashift:SI (reg:SI 142)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 23 22 29 2 arch/arm/mm/idmap.c:39 (set (reg/v/f:SI 133 [ pgd.404 ])
        (plus:SI (reg/v/f:SI 139 [ pgd ])
            (reg:SI 143))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/v/f:SI 139 [ pgd ])
            (nil))))

(insn 29 23 54 2 arch/arm/mm/idmap.c:41 (set (reg:SI 153)
        (plus:SI (reg/v:SI 141 [ end ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153
;; rd  out 	(21)
0, 3, 5, 7, 8, 10, 11, 24, 28, 29, 132, 136, 137, 138, 140, 141, 142, 143, 150, 151, 152


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153
;; lr  def 	 24 [cc] 134 135 136 144 145 146 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153
;; live  gen 	 24 [cc] 134 135 136 144 145 146 148 149 150
;; live  kill	 24 [cc]
;; rd  in  	(33)
0, 3, 5, 7, 8, 10, 11, 24, 25, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;; rd  gen 	(10)
25, 133, 134, 135, 144, 145, 146, 147, 148, 149
;; rd  kill	(14)
23, 24, 25, 26, 27, 133, 134, 135, 144, 145, 146, 147, 148, 149

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru,dfs_back)
(code_label 54 29 24 3 14 "" [0 uses])

(note 24 54 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 3 arch/arm/mm/idmap.c:41 (set (reg:SI 144)
        (plus:SI (reg/v:SI 140 [ addr ])
            (const_int 2097152 [0x200000]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 3 arch/arm/mm/idmap.c:41 (set (reg:SI 145)
        (lshiftrt:SI (reg:SI 144)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(insn 27 26 28 3 arch/arm/mm/idmap.c:41 (set (reg/v:SI 135 [ __boundary ])
        (ashift:SI (reg:SI 145)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_EQUAL (and:SI (reg:SI 144)
                (const_int -2097152 [0xffffffffffe00000]))
            (nil))))

(insn 28 27 70 3 arch/arm/mm/idmap.c:41 (set (reg:SI 146)
        (plus:SI (reg/v:SI 135 [ __boundary ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 70 28 71 3 arch/arm/mm/idmap.c:41 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146)
            (reg:SI 153))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 146)
        (nil)))

(insn 71 70 41 3 arch/arm/mm/idmap.c:41 discrim 2 (set (reg/v:SI 136 [ next ])
        (if_then_else:SI (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg/v:SI 135 [ __boundary ])
            (reg/v:SI 141 [ end ]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ __boundary ])
        (expr_list:REG_DEAD (reg:CC 24 cc)
            (nil))))

(insn 41 71 42 3 arch/arm/mm/idmap.c:12 (set (reg:SI 149)
        (lshiftrt:SI (reg/v:SI 140 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 140 [ addr ])
        (nil)))

(insn 42 41 43 3 arch/arm/mm/idmap.c:12 (set (reg:SI 148)
        (ashift:SI (reg:SI 149)
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 140 [ addr ])
                (const_int -2097152 [0xffffffffffe00000]))
            (nil))))

(insn 43 42 44 3 arch/arm/mm/idmap.c:12 (set (reg/v:SI 134 [ addr ])
        (ior:SI (reg:SI 148)
            (reg/v:SI 137 [ prot ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 44 43 45 3 arch/arm/mm/idmap.c:13 (set (mem:SI (reg/v/f:SI 133 [ pgd.404 ]) [0 S4 A32])
        (reg/v:SI 134 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 3 arch/arm/mm/idmap.c:15 (set (reg:SI 150)
        (plus:SI (reg/v:SI 134 [ addr ])
            (const_int 1048576 [0x100000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 134 [ addr ])
        (nil)))

(insn 46 45 47 3 arch/arm/mm/idmap.c:15 (set (mem:SI (plus:SI (reg/v/f:SI 133 [ pgd.404 ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 47 46 48 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:479 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 133 [ pgd.404 ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7192104)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 48 47 49 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:487 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7193128)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 49 48 50 3 arch/arm/mm/idmap.c:43 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ next ])
            (reg/v:SI 141 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 3 arch/arm/mm/idmap.c:43 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1400 [0x578])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 153
;; rd  out 	(32)
0, 3, 5, 7, 8, 10, 11, 25, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152


;; Succ edge  4 [86.0%]  (fallthru)
;; Succ edge  5 [14.0%]  (loop_exit)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 137 141 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; lr  def 	 133 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 137 141 153
;; live  gen 	 133 140
;; live  kill	
;; rd  in  	(32)
0, 3, 5, 7, 8, 10, 11, 25, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;; rd  gen 	(2)
131, 139
;; rd  kill	(4)
131, 132, 139, 140

;; Pred edge  3 [86.0%]  (fallthru)
(note 51 50 52 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 4 arch/arm/mm/idmap.c:43 (set (reg/v/f:SI 133 [ pgd.404 ])
        (plus:SI (reg/v/f:SI 133 [ pgd.404 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 53 52 62 4 arch/arm/mm/idmap.c:43 (set (reg/v:SI 140 [ addr ])
        (reg/v:SI 136 [ next ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ next ])
        (nil)))
;; End of basic block 4 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 140 141 153
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 140 141 153
;; rd  out 	(30)
0, 3, 5, 7, 8, 10, 11, 25, 28, 29, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152


;; Succ edge  3 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(32)
0, 3, 5, 7, 8, 10, 11, 25, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [14.0%]  (loop_exit)
(code_label 62 53 65 5 15 "" [1 uses])

(note 65 62 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(32)
0, 3, 5, 7, 8, 10, 11, 25, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function setup_mm_for_reboot (setup_mm_for_reboot)[0:1186]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



setup_mm_for_reboot

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,6u} r12={2d} r13={1d,8u,1d} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={5d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 187{144d,42u,1e} in 23{22 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,5] 25[31,1] 26[32,1] 27[33,1] 28[34,1] 29[35,1] 30[36,1] 31[37,1] 32[38,1] 33[39,1] 34[40,1] 35[41,1] 36[42,1] 37[43,1] 38[44,1] 39[45,1] 40[46,1] 41[47,1] 42[48,1] 43[49,1] 44[50,1] 45[51,1] 46[52,1] 47[53,1] 48[54,1] 49[55,1] 50[56,1] 51[57,1] 52[58,1] 53[59,1] 54[60,1] 55[61,1] 56[62,1] 57[63,1] 58[64,1] 59[65,1] 60[66,1] 61[67,1] 62[68,1] 63[69,1] 64[70,1] 65[71,1] 66[72,1] 67[73,1] 68[74,1] 69[75,1] 70[76,1] 71[77,1] 72[78,1] 73[79,1] 74[80,1] 75[81,1] 76[82,1] 77[83,1] 78[84,1] 79[85,1] 80[86,1] 81[87,1] 82[88,1] 83[89,1] 84[90,1] 85[91,1] 86[92,1] 87[93,1] 88[94,1] 89[95,1] 90[96,1] 91[97,1] 92[98,1] 93[99,1] 94[100,1] 95[101,1] 96[102,1] 97[103,1] 98[104,1] 99[105,1] 100[106,1] 101[107,1] 102[108,1] 103[109,1] 104[110,1] 105[111,1] 106[112,1] 107[113,1] 108[114,1] 109[115,1] 110[116,1] 111[117,1] 112[118,1] 113[119,1] 114[120,1] 115[121,1] 116[122,1] 117[123,1] 118[124,1] 119[125,1] 120[126,1] 121[127,1] 122[128,1] 123[129,1] 124[130,1] 125[131,1] 126[132,1] 127[133,1] 133[134,1] 136[135,1] 137[136,1] 138[137,1] 139[138,1] 140[139,1] 141[140,1] 142[141,1] 143[142,1] 144[143,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 136 137 138 139 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 136 137 138 139 140 141
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 31, 32
;; rd  gen 	(8)
29, 134, 135, 136, 137, 138, 139, 140
;; rd  kill	(14)
15, 16, 26, 27, 28, 29, 30, 134, 135, 136, 137, 138, 139, 140

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 arch/arm/mm/idmap.c:88 (set (reg:SI 137)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 9 2 arch/arm/mm/idmap.c:88 (set (reg:SI 136)
        (and:SI (reg:SI 137)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 9 8 10 2 arch/arm/mm/idmap.c:88 (set (reg/f:SI 138 [ <variable>.task ])
        (mem/s/f/j:SI (plus:SI (reg:SI 136)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(insn 10 9 11 2 arch/arm/mm/idmap.c:88 (set (reg/f:SI 139 [ <variable>.active_mm ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 138 [ <variable>.task ])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138 [ <variable>.task ])
        (nil)))

(insn 11 10 12 2 arch/arm/mm/idmap.c:88 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 139 [ <variable>.active_mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139 [ <variable>.active_mm ])
        (nil)))

(insn 12 11 13 2 arch/arm/mm/idmap.c:88 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/idmap.c:88 (set (reg:SI 2 r2)
        (const_int -1090519040 [0xffffffffbf000000])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 15 2 arch/arm/mm/idmap.c:88 (parallel [
            (call (mem:SI (symbol_ref:SI ("identity_mapping_add") [flags 0x3] <function_decl 0x10d1c400 identity_mapping_add>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 15 14 16 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/f:SI 140)
        (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x112f45a0 cpu_tlb>)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:324 (set (reg/v:SI 133 [ __tlb_flag ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 140)
                (const_int 8 [0x8])) [0 cpu_tlb.tlb_flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_tlb") [flags 0xc0] <var_decl 0x112f45a0 cpu_tlb>)
                        (const_int 8 [0x8]))) [0 cpu_tlb.tlb_flags+0 S4 A32])
            (nil))))

(insn 17 16 18 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:327 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7172648)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 18 17 19 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:SI 141)
        (and:SI (reg/v:SI 133 [ __tlb_flag ])
            (const_int 4096 [0x1000]))) 67 {*arm_andsi3_insn} (nil))

(insn 19 18 20 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(jump_insn 20 19 21 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:331 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(17)
2, 5, 8, 10, 11, 13, 14, 29, 31, 32, 134, 135, 136, 137, 138, 139, 140


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 142
;; live  kill	 24 [cc]
;; rd  in  	(17)
2, 5, 8, 10, 11, 13, 14, 29, 31, 32, 134, 135, 136, 137, 138, 139, 140
;; rd  gen 	(1)
141
;; rd  kill	(6)
26, 27, 28, 29, 30, 141

;; Pred edge  2 [50.0%]  (fallthru)
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (set (reg:SI 142)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:332 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c7, 0") ("") 0 [
                    (reg:SI 142)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7173288)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(17)
2, 5, 8, 10, 11, 13, 14, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 24 [cc] 143
;; live  kill	
;; rd  in  	(18)
2, 5, 8, 10, 11, 13, 14, 29, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141
;; rd  gen 	(2)
27, 142
;; rd  kill	(6)
26, 27, 28, 29, 30, 142

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 24 23 25 4 17 "" [1 uses])

(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:SI 143)
        (and:SI (reg/v:SI 133 [ __tlb_flag ])
            (const_int 1048576 [0x100000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ __tlb_flag ])
        (nil)))

(insn 27 26 28 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(jump_insn 28 27 29 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
2, 5, 8, 10, 11, 13, 14, 27, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142


;; Succ edge  5 [61.0%]  (fallthru)
;; Succ edge  6 [39.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 144
;; live  kill	 24 [cc]
;; rd  in  	(19)
2, 5, 8, 10, 11, 13, 14, 27, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142
;; rd  gen 	(1)
143
;; rd  kill	(6)
26, 27, 28, 29, 30, 143

;; Pred edge  4 [61.0%]  (fallthru)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (set (reg:SI 144)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:338 (parallel [
            (asm_operands/v ("mcr p15, 0, %0, c8, c3, 0") ("") 0 [
                    (reg:SI 144)
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 7174056)
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_UNUSED (reg:QI 24 cc)
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
2, 5, 8, 10, 11, 13, 14, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(20)
2, 5, 8, 10, 11, 13, 14, 27, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [39.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 32 31 33 6 18 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:341 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 7174440)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 35 34 0 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:342 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 7174568)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
2, 5, 8, 10, 11, 13, 14, 27, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
