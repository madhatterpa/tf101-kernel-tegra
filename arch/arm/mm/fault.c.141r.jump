
;; Function do_bad (do_bad)[0:1296]

Deleted 3 trivially dead insns

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 12 2 arch/arm/mm/fault.c:489 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 18 2 arch/arm/mm/fault.c:489 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 18 12 0 2 arch/arm/mm/fault.c:489 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function __do_user_fault (__do_user_fault)[0:1289]

Deleted 1 trivially dead insns

3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/mm/fault.c:173 (set (reg/v/f:SI 134 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 135 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 136 [ fsr ])
        (reg:SI 2 r2 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 137 [ sig ])
        (reg:SI 3 r3 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 138 [ code ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 code+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 code+0 S4 A32])
        (nil)))

(note 8 6 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/mm/fault.c:185 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 784 [0x310])) [0 <variable>.thread.address+0 S4 A64])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:186 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:187 (set (reg:SI 140)
        (const_int 14 [0xe])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:187 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/mm/fault.c:188 (set (reg:SI 133 [ sig.322 ])
        (reg/v:SI 137 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/mm/fault.c:188 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 si.si_signo+0 S4 A64])
        (reg:SI 133 [ sig.322 ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/fault.c:189 (set (reg:SI 141)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/mm/fault.c:189 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 si.si_errno+0 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/mm/fault.c:190 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 si.si_code+0 S4 A64])
        (reg/v:SI 138 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 2 arch/arm/mm/fault.c:191 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 si._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 arch/arm/mm/fault.c:192 (set (reg:SI 142)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 22 21 23 2 arch/arm/mm/fault.c:192 (set (reg:SI 0 r0)
        (reg:SI 133 [ sig.322 ])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 2 arch/arm/mm/fault.c:192 (set (reg:SI 1 r1)
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 2 arch/arm/mm/fault.c:192 (set (reg:SI 2 r2)
        (reg/v/f:SI 134 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 0 2 arch/arm/mm/fault.c:192 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x11156f80 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function show_pte (show_pte)[0:1287]


10 basic blocks, 13 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [15.0%]  (fallthru) 5 [85.0%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 1500, maybe hot.
Predecessors:  2 [15.0%]  (fallthru)
Successors:  5 [100.0%]  (fallthru)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [85.0%]  4 [100.0%]  (fallthru)
Successors:  9 [39.0%]  6 [61.0%]  (fallthru)

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  5 [61.0%]  (fallthru)
Successors:  7 [0.0%]  (fallthru) 8 [100.0%] 

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2.
Predecessors:  6 [0.0%]  (fallthru)
Successors:  9 [100.0%]  (fallthru)

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 6098, maybe hot.
Predecessors:  6 [100.0%] 
Successors:  9 [28.0%]  (fallthru) 10 [72.0%] 

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  10 [100.0%]  (fallthru) 8 [28.0%]  (fallthru) 5 [39.0%]  7 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)

Basic block 10 , prev 9, next 1, loop_depth 0, count 0, freq 4390, maybe hot.
Predecessors:  8 [72.0%] 
Successors:  9 [100.0%]  (fallthru)

Basic block 1 , prev 10, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  9 [100.0%]  (ab,sibcall)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/mm/fault.c:71 (set (reg/v/f:SI 137 [ mm ])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:71 (set (reg/v:SI 138 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/mm/fault.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 137 [ mm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/mm/fault.c:74 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 11)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 2 -> ( 3 4)

;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [15.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/mm/fault.c:75 (set (reg/v/f:SI 137 [ mm ])
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; Pred edge  2 [85.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 11 10 12 4 6 "" [1 uses])

(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 4 arch/arm/mm/fault.c:77 (set (reg:SI 139)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114bfdb0>)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 4 arch/arm/mm/fault.c:77 (set (reg:SI 0 r0)
        (reg:SI 139)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 4 arch/arm/mm/fault.c:77 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 4 arch/arm/mm/fault.c:77 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 17 16 18 4 arch/arm/mm/fault.c:78 (set (reg:SI 140)
        (lshiftrt:SI (reg/v:SI 138 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 18 17 19 4 arch/arm/mm/fault.c:78 (set (reg:SI 141)
        (ashift:SI (reg:SI 140)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 19 18 20 4 arch/arm/mm/fault.c:78 (set (reg:SI 142)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 arch/arm/mm/fault.c:78 (set (reg/v/f:SI 135 [ pgd ])
        (plus:SI (reg:SI 142)
            (reg:SI 141))) 4 {*arm_addsi3} (nil))

(insn 21 20 22 4 arch/arm/mm/fault.c:79 (set (reg:SI 143)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x114b7420>)) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 4 arch/arm/mm/fault.c:79 (set (reg:SI 145)
        (mem/s/j:SI (reg/v/f:SI 135 [ pgd ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 arch/arm/mm/fault.c:79 (set (reg:DI 144)
        (zero_extend:DI (reg:SI 145))) 138 {*arm_zero_extendsidi2} (nil))

(insn 24 23 25 4 arch/arm/mm/fault.c:79 (set (reg:SI 0 r0)
        (reg:SI 143)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 arch/arm/mm/fault.c:79 (set (reg:SI 1 r1)
        (reg/v:SI 138 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/mm/fault.c:79 (set (reg:DI 2 r2)
        (reg:DI 144)) 163 {*arm_movdi} (nil))

(call_insn 27 26 28 4 arch/arm/mm/fault.c:79 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 28 27 29 4 arch/arm/mm/fault.c:111 (set (reg:SI 136 [ D.24402 ])
        (mem:SI (reg/v/f:SI 135 [ pgd ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/mm/fault.c:111 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.24402 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 4 arch/arm/mm/fault.c:111 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 8 5)

;; Succ edge  8 [39.0%] 
;; Succ edge  5 [61.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [61.0%]  (fallthru)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 5 arch/arm/mm/fault.c:114 (set (reg:SI 146)
        (and:SI (reg:SI 136 [ D.24402 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/fault.c:114 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 34 33 35 5 arch/arm/mm/fault.c:114 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [0.0%]  (fallthru)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 6 arch/arm/mm/fault.c:115 (set (reg:SI 147)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x114e0740>)) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 6 arch/arm/mm/fault.c:115 (set (reg:SI 0 r0)
        (reg:SI 147)) 167 {*arm_movsi_insn} (nil))

(call_insn 38 37 41 6 arch/arm/mm/fault.c:115 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [100.0%] 
(code_label 41 38 42 7 8 "" [1 uses])

(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 7 include/linux/mm.h:692 (set (reg:SI 148)
        (lshiftrt:SI (reg:SI 136 [ D.24402 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 44 43 45 7 include/linux/mm.h:692 (set (reg/f:SI 150)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 7 include/linux/mm.h:692 (set (reg/f:SI 149)
        (mem/f/c/i:SI (reg/f:SI 150) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 7 include/linux/mm.h:692 (set (reg:SI 152)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 148)
                    (const_int 32 [0x20]))
                (reg/f:SI 149)) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 7 include/linux/mm.h:692 (set (reg:SI 151)
        (lshiftrt:SI (reg:SI 152)
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 48 47 49 7 include/linux/mm.h:692 (set (reg:SI 154)
        (const_int 768 [0x300])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 include/linux/mm.h:692 (set (reg:SI 153)
        (mult:SI (reg:SI 154)
            (reg:SI 151))) 32 {*arm_mulsi3_v6} (nil))

(insn 50 49 51 7 include/linux/mm.h:692 (set (reg:SI 155)
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 7 include/linux/mm.h:692 (set (reg/f:SI 133 [ D.24788 ])
        (plus:SI (reg:SI 153)
            (reg:SI 155))) 4 {*arm_addsi3} (nil))

(insn 52 51 53 7 include/linux/mmzone.h:741 (set (reg:SI 157)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 133 [ D.24788 ])
                (const_int 748 [0x2ec])) [0 <variable>.zone_pgdat+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 7 include/linux/mmzone.h:741 (set (reg:SI 156)
        (minus:SI (reg/f:SI 133 [ D.24788 ])
            (reg:SI 157))) 28 {*arm_subsi3_insn} (nil))

(insn 54 53 55 7 include/linux/mmzone.h:741 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156)
            (const_int 768 [0x300]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 55 54 56 7 include/linux/mmzone.h:741 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 [28.0%]  (fallthru)
;; Succ edge  9 [72.0%] 

;; Start of basic block ( 9 7 4 6) -> 8
;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  7 [28.0%]  (fallthru)
;; Pred edge  4 [39.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 56 55 57 8 7 "" [1 uses])

(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 8 arch/arm/mm/fault.c:130 (set (reg:SI 158)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114e09e0>)) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 8 arch/arm/mm/fault.c:130 (set (reg:SI 0 r0)
        (reg:SI 158)) 167 {*arm_movsi_insn} (nil))

(call_insn/j 60 59 62 8 arch/arm/mm/fault.c:130 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 8 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 7) -> 9
;; Pred edge  7 [72.0%] 
(code_label 62 60 63 9 9 "" [1 uses])

(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 9 arch/arm/mm/fault.c:123 (set (reg:SI 160)
        (and:SI (reg:SI 136 [ D.24402 ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 65 64 66 9 arch/arm/mm/fault.c:123 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 136 [ D.24402 ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 66 65 67 9 arch/arm/mm/fault.c:123 (set (reg:SI 161)
        (plus:SI (reg:SI 159)
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))

(insn 67 66 68 9 arch/arm/mm/fault.c:123 (set (reg:SI 162)
        (lshiftrt:SI (reg/v:SI 138 [ addr ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 68 67 69 9 arch/arm/mm/fault.c:123 (set (reg:SI 164)
        (ashift:SI (reg:SI 162)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 69 68 70 9 arch/arm/mm/fault.c:123 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 164)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 162)
            (const_int 511 [0x1ff]))
        (nil)))

(insn 70 69 71 9 arch/arm/mm/fault.c:123 (set (reg:SI 165)
        (ashift:SI (reg:SI 163)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 71 70 72 9 arch/arm/mm/fault.c:123 (set (reg/v/f:SI 134 [ pte ])
        (plus:SI (reg:SI 161)
            (reg:SI 165))) 4 {*arm_addsi3} (nil))

(insn 72 71 73 9 arch/arm/mm/fault.c:124 (set (reg:SI 166)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114e1ab0>)) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 9 arch/arm/mm/fault.c:124 (set (reg:SI 168)
        (mem:SI (reg/v/f:SI 134 [ pte ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 9 arch/arm/mm/fault.c:124 (set (reg:DI 167)
        (zero_extend:DI (reg:SI 168))) 138 {*arm_zero_extendsidi2} (nil))

(insn 75 74 76 9 arch/arm/mm/fault.c:124 (set (reg:SI 0 r0)
        (reg:SI 166)) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 9 arch/arm/mm/fault.c:124 (set (reg:DI 2 r2)
        (reg:DI 167)) 163 {*arm_movdi} (nil))

(call_insn 77 76 78 9 arch/arm/mm/fault.c:124 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 78 77 79 9 arch/arm/mm/fault.c:125 (set (reg:SI 169)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114e1c60>)) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 9 arch/arm/mm/fault.c:125 (set (reg:SI 171)
        (mem:SI (plus:SI (reg/v/f:SI 134 [ pte ])
                (const_int 2048 [0x800])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 80 79 81 9 arch/arm/mm/fault.c:125 (set (reg:DI 170)
        (zero_extend:DI (reg:SI 171))) 138 {*arm_zero_extendsidi2} (nil))

(insn 81 80 82 9 arch/arm/mm/fault.c:125 (set (reg:SI 0 r0)
        (reg:SI 169)) 167 {*arm_movsi_insn} (nil))

(insn 82 81 83 9 arch/arm/mm/fault.c:125 (set (reg:DI 2 r2)
        (reg:DI 170)) 163 {*arm_movdi} (nil))

(call_insn 83 82 0 9 arch/arm/mm/fault.c:125 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)


;; Function __do_kernel_fault (__do_kernel_fault)[0:1288]


8 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  10 [100.0%]  4 [0.0%]  (fallthru)

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 4.
Predecessors:  2 [0.0%]  (fallthru)
Successors:  6 [50.0%]  5 [50.0%]  (fallthru)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 2.
Predecessors:  4 [50.0%]  (fallthru)
Successors:  7 [100.0%]  (fallthru)

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 2.
Predecessors:  4 [50.0%] 
Successors:  7 [100.0%]  (fallthru)

Basic block 7 , prev 6, next 10, loop_depth 0, count 0, freq 4.
Predecessors:  6 [100.0%]  (fallthru) 5 [100.0%]  (fallthru)
Successors: 

Basic block 10 , prev 7, next 1, loop_depth 0, count 0, freq 9996, maybe hot.
Predecessors:  2 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 10, loop_depth 0, count 0, freq 9996, maybe hot.
Predecessors:  10 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/fault.c:143 (set (reg/v/f:SI 135 [ mm ])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:143 (set (reg/v:SI 136 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:143 (set (reg/v:SI 137 [ fsr ])
        (reg:SI 2 r2 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/fault.c:143 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 3 r3 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/fault.c:147 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 11 2 arch/arm/mm/fault.c:147 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fixup_exception") [flags 0x41] <function_decl 0x11013a80 fixup_exception>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/mm/fault.c:147 (set (reg:SI 134 [ D.24430 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:147 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24430 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 arch/arm/mm/fault.c:147 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 7 3)

;; Succ edge  7 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [0.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 arch/arm/mm/fault.c:153 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 3 arch/arm/mm/fault.c:153 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10a82a00 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 17 16 18 3 arch/arm/mm/fault.c:154 (set (reg:SI 139)
        (const_int 4095 [0xfff])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 arch/arm/mm/fault.c:154 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ addr ])
            (reg:SI 139))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 3 arch/arm/mm/fault.c:154 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 5 4)

;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [50.0%]  (fallthru)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 24 4 arch/arm/mm/fault.c:154 discrim 2 (set (reg/f:SI 133 [ iftmp.320 ])
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114ed540>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [50.0%] 
(code_label 24 21 25 5 16 "" [1 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 arch/arm/mm/fault.c:154 discrim 1 (set (reg/f:SI 133 [ iftmp.320 ])
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x114c3f80>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 27 26 28 6 17 "" [0 uses])

(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 6 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 140)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10b2ecc0>)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 6 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 0 r0)
        (reg:SI 140)) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 6 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 1 r1)
        (reg/f:SI 133 [ iftmp.320 ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 34 6 arch/arm/mm/fault.c:154 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 34 33 35 6 arch/arm/mm/fault.c:159 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 6 arch/arm/mm/fault.c:159 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 35 37 6 arch/arm/mm/fault.c:159 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_pte") [flags 0x3] <function_decl 0x512d9600 show_pte>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 36 38 6 arch/arm/mm/fault.c:160 (set (reg:SI 141)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x114ebb40>)) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 6 arch/arm/mm/fault.c:160 (set (reg:SI 0 r0)
        (reg:SI 141)) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 6 arch/arm/mm/fault.c:160 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 6 arch/arm/mm/fault.c:160 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 42 6 arch/arm/mm/fault.c:160 (parallel [
            (call (mem:SI (symbol_ref:SI ("die") [flags 0x41] <function_decl 0x512d9300 die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 42 41 43 6 arch/arm/mm/fault.c:161 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 6 arch/arm/mm/fault.c:161 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10a82a00 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 44 43 45 6 arch/arm/mm/fault.c:162 (set (reg:SI 0 r0)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 52 6 arch/arm/mm/fault.c:162 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_exit") [flags 0x41] <function_decl 0x10a67900 do_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ()


;; Start of basic block ( 2) -> 7
;; Pred edge  2 [100.0%] 
(code_label 52 45 55 7 18 "" [1 uses])

(note 55 52 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function do_page_fault (do_page_fault)[0:1293]

Deleted 1 trivially dead insns

50 basic blocks, 75 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [50.0%]  (fallthru) 5 [50.0%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  2 [50.0%]  (fallthru)
Successors:  5 [100.0%]  (fallthru)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 2 [50.0%] 
Successors:  49 [50.0%]  6 [50.0%]  (fallthru)

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 5000, maybe hot.
Predecessors:  5 [50.0%]  (fallthru)
Successors:  7 [50.0%]  (fallthru) 10 [50.0%] 

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  6 [50.0%]  (fallthru)
Successors:  8 [50.0%]  (fallthru) 9 [50.0%] 

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 1250, maybe hot.
Predecessors:  7 [50.0%]  (fallthru)
Successors:  49 [15.0%]  9 [85.0%]  (fallthru)

Basic block 9 , prev 8, next 10, loop_depth 0, count 0, freq 2312, maybe hot.
Predecessors:  7 [50.0%]  8 [85.0%]  (fallthru)
Successors:  12 [100.0%]  (fallthru)

Basic block 10 , prev 9, next 11, loop_depth 0, count 0, freq 2500, maybe hot.
Predecessors:  6 [50.0%] 
Successors:  11 [29.0%]  (fallthru) 12 [71.0%] 

Basic block 11 , prev 10, next 12, loop_depth 0, count 0, freq 725, maybe hot.
Predecessors:  10 [29.0%]  (fallthru)
Successors:  49 [15.0%]  12 [85.0%]  (fallthru)

Basic block 12 , prev 11, next 13, loop_depth 0, count 0, freq 4704, maybe hot.
Predecessors:  10 [71.0%]  9 [100.0%]  (fallthru) 11 [85.0%]  (fallthru)
Successors:  27 [0.0%]  13 [100.0%]  (fallthru)

Basic block 13 , prev 12, next 14, loop_depth 0, count 0, freq 4702, maybe hot.
Predecessors:  12 [100.0%]  (fallthru)
Successors:  25 [0.0%]  14 [100.0%]  (fallthru)

Basic block 14 , prev 13, next 15, loop_depth 0, count 0, freq 4700, maybe hot.
Predecessors:  13 [100.0%]  (fallthru) 26 [50.0%] 
Successors:  15 [50.0%]  (fallthru) 16 [50.0%] 

Basic block 15 , prev 14, next 16, loop_depth 0, count 0, freq 2350, maybe hot.
Predecessors:  14 [50.0%]  (fallthru)
Successors:  17 [100.0%]  (fallthru)

Basic block 16 , prev 15, next 17, loop_depth 0, count 0, freq 2350, maybe hot.
Predecessors:  14 [50.0%] 
Successors:  17 [100.0%]  (fallthru)

Basic block 17 , prev 16, next 18, loop_depth 0, count 0, freq 4700, maybe hot.
Predecessors:  16 [100.0%]  (fallthru) 15 [100.0%]  (fallthru)
Successors:  18 [27.0%]  (fallthru) 19 [73.0%] 

Basic block 18 , prev 17, next 19, loop_depth 0, count 0, freq 1269, maybe hot.
Predecessors:  17 [27.0%]  (fallthru)
Successors:  19 [100.0%]  (fallthru)

Basic block 19 , prev 18, next 20, loop_depth 0, count 0, freq 4700, maybe hot.
Predecessors:  17 [73.0%]  18 [100.0%]  (fallthru)
Successors:  20 [71.0%]  (fallthru) 21 [29.0%] 

Basic block 20 , prev 19, next 21, loop_depth 0, count 0, freq 3337, maybe hot.
Predecessors:  19 [71.0%]  (fallthru)
Successors:  28 [100.0%]  (fallthru)

Basic block 21 , prev 20, next 22, loop_depth 0, count 0, freq 1363, maybe hot.
Predecessors:  19 [29.0%] 
Successors:  28 [0.0%]  22 [100.0%]  (fallthru)

Basic block 22 , prev 21, next 23, loop_depth 0, count 0, freq 1363, maybe hot.
Predecessors:  21 [100.0%]  (fallthru)
Successors:  23 [50.0%]  (fallthru) 24 [50.0%] 

Basic block 23 , prev 22, next 24, loop_depth 0, count 0, freq 681, maybe hot.
Predecessors:  22 [50.0%]  (fallthru)
Successors:  28 [100.0%]  (fallthru)

Basic block 24 , prev 23, next 25, loop_depth 0, count 0, freq 681, maybe hot.
Predecessors:  22 [50.0%] 
Successors:  28 [100.0%]  (fallthru)

Basic block 25 , prev 24, next 26, loop_depth 0, count 0, freq 2.
Predecessors:  13 [0.0%] 
Successors:  26 [29.0%]  (fallthru) 27 [71.0%] 

Basic block 26 , prev 25, next 27, loop_depth 0, count 0, freq 1.
Predecessors:  25 [29.0%]  (fallthru)
Successors:  14 [50.0%]  27 [50.0%]  (fallthru)

Basic block 27 , prev 26, next 28, loop_depth 0, count 0, freq 4.
Predecessors:  25 [71.0%]  26 [50.0%]  (fallthru) 12 [0.0%] 
Successors:  28 [100.0%]  (fallthru)

Basic block 28 , prev 27, next 29, loop_depth 0, count 0, freq 4704, maybe hot.
Predecessors:  27 [100.0%]  (fallthru) 21 [0.0%]  23 [100.0%]  (fallthru) 24 [100.0%]  (fallthru) 20 [100.0%]  (fallthru)
Successors:  29 [0.0%]  (fallthru) 33 [100.0%] 

Basic block 29 , prev 28, next 30, loop_depth 0, count 0, freq 2.
Predecessors:  28 [0.0%]  (fallthru)
Successors:  31 [6.7%]  30 [93.3%]  (fallthru)

Basic block 30 , prev 29, next 31, loop_depth 0, count 0, freq 2.
Predecessors:  29 [93.3%]  (fallthru)
Successors:  32 [100.0%]  (fallthru)

Basic block 31 , prev 30, next 32, loop_depth 0, count 0, freq 158, maybe hot.
Predecessors:  29 [6.7%] 
Successors:  32 [100.0%]  (fallthru)
Invalid sum of incoming frequencies 0, should be 158

Basic block 32 , prev 31, next 33, loop_depth 0, count 0, freq 2352, maybe hot.
Predecessors:  30 [100.0%]  (fallthru) 31 [100.0%]  (fallthru)
Successors:  33 [100.0%]  (fallthru)
Invalid sum of incoming frequencies 160, should be 2352

Basic block 33 , prev 32, next 34, loop_depth 0, count 0, freq 4704, maybe hot.
Predecessors:  32 [100.0%]  (fallthru) 28 [100.0%] 
Successors:  34 [50.0%]  (fallthru) 39 [50.0%] 
Invalid sum of incoming frequencies 7054, should be 4704

Basic block 34 , prev 33, next 35, loop_depth 0, count 0, freq 2352, maybe hot.
Predecessors:  33 [50.0%]  (fallthru)
Successors:  35 [0.0%]  (fallthru) 39 [100.0%] 

Basic block 35 , prev 34, next 36, loop_depth 0, count 0, freq 1.
Predecessors:  34 [0.0%]  (fallthru)
Successors:  37 [6.7%]  36 [93.3%]  (fallthru)

Basic block 36 , prev 35, next 37, loop_depth 0, count 0, freq 1.
Predecessors:  35 [93.3%]  (fallthru)
Successors:  38 [100.0%]  (fallthru)

Basic block 37 , prev 36, next 38, loop_depth 0, count 0, freq 79, maybe hot.
Predecessors:  35 [6.7%] 
Successors:  38 [100.0%]  (fallthru)

Basic block 38 , prev 37, next 39, loop_depth 0, count 0, freq 1176, maybe hot.
Predecessors:  36 [100.0%]  (fallthru) 37 [100.0%]  (fallthru)
Successors:  39 [100.0%]  (fallthru)
Invalid sum of incoming frequencies 80, should be 1176

Basic block 39 , prev 38, next 40, loop_depth 0, count 0, freq 4704, maybe hot.
Predecessors:  34 [100.0%]  33 [50.0%]  38 [100.0%]  (fallthru)
Successors:  50 [100.0%]  40 [0.0%]  (fallthru)
Invalid sum of incoming frequencies 5879, should be 4704

Basic block 40 , prev 39, next 41, loop_depth 0, count 0, freq 2.
Predecessors:  39 [0.0%]  (fallthru)
Successors:  41 [20.7%]  (fallthru) 42 [79.3%] 

Basic block 41 , prev 40, next 42, loop_depth 0, count 0, freq 0.
Predecessors:  40 [20.7%]  (fallthru)
Successors:  50 [100.0%]  (fallthru)

Basic block 42 , prev 41, next 43, loop_depth 0, count 0, freq 1.
Predecessors:  40 [79.3%] 
Successors:  49 [50.0%]  43 [50.0%]  (fallthru)

Basic block 43 , prev 42, next 44, loop_depth 0, count 0, freq 1.
Predecessors:  42 [50.0%]  (fallthru)
Successors:  44 [39.0%]  (fallthru) 45 [61.0%] 

Basic block 44 , prev 43, next 45, loop_depth 0, count 0, freq 0.
Predecessors:  43 [39.0%]  (fallthru)
Successors:  48 [100.0%]  (fallthru)

Basic block 45 , prev 44, next 46, loop_depth 0, count 0, freq 0.
Predecessors:  43 [61.0%] 
Successors:  47 [28.0%]  46 [72.0%]  (fallthru)

Basic block 46 , prev 45, next 47, loop_depth 0, count 0, freq 0.
Predecessors:  45 [72.0%]  (fallthru)
Successors:  48 [100.0%]  (fallthru)

Basic block 47 , prev 46, next 48, loop_depth 0, count 0, freq 0.
Predecessors:  45 [28.0%] 
Successors:  48 [100.0%]  (fallthru)

Basic block 48 , prev 47, next 49, loop_depth 0, count 0, freq 1.
Predecessors:  44 [100.0%]  (fallthru) 46 [100.0%]  (fallthru) 47 [100.0%]  (fallthru)
Successors:  50 [100.0%]  (fallthru)

Basic block 49 , prev 48, next 50, loop_depth 0, count 0, freq 5297, maybe hot.
Predecessors:  5 [50.0%]  8 [15.0%]  11 [15.0%]  42 [50.0%] 
Successors:  50 [100.0%]  (fallthru)

Basic block 50 , prev 49, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  49 [100.0%]  (fallthru) 39 [100.0%]  41 [100.0%]  (fallthru) 48 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 50, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  50 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:277 (set (reg/v:SI 156 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:277 (set (reg/v:SI 157 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:277 (set (reg/v/f:SI 158 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 144 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 160)
        (and:SI (reg:SI 144 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 144 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 149 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 159)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:286 (set (reg/v/f:SI 148 [ mm ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:289 (set (reg:SI 162)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:289 (set (reg:SI 161)
        (and:SI (reg:SI 162)
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 15 14 16 2 arch/arm/mm/fault.c:289 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 2 arch/arm/mm/fault.c:289 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)

;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [50.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104506)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 19 18 20 4 22 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 143 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 164)
        (and:SI (reg:SI 143 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 23 22 24 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163)
        (and:SI (reg:SI 164)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 143 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 24 23 25 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 166)
        (mem/s/j:SI (plus:SI (reg:SI 163)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 165)
        (and:SI (reg:SI 166)
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 26 25 27 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 27 26 28 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 168)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 28 27 29 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:QI 167)
        (subreg:QI (reg:SI 168) 0)) 178 {*arm_movqi_insn} (nil))

(insn 29 28 30 4 arch/arm/mm/fault.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ mm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 30 29 31 4 arch/arm/mm/fault.c:296 (set (reg:SI 170)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 31 30 32 4 arch/arm/mm/fault.c:296 (set (reg:QI 169)
        (subreg:QI (reg:SI 170) 0)) 178 {*arm_movqi_insn} (nil))

(insn 32 31 33 4 arch/arm/mm/fault.c:296 (set (reg:SI 171)
        (ior:SI (subreg:SI (reg:QI 167) 0)
            (subreg:SI (reg:QI 169) 0))) 89 {*arm_iorsi3} (nil))

(insn 33 32 34 4 arch/arm/mm/fault.c:296 (set (reg:QI 172)
        (subreg:QI (reg:SI 171) 0)) 178 {*arm_movqi_insn} (nil))

(insn 34 33 35 4 arch/arm/mm/fault.c:296 (set (reg:SI 173)
        (zero_extend:SI (reg:QI 172))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 35 34 36 4 arch/arm/mm/fault.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 36 35 37 4 arch/arm/mm/fault.c:296 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 48 5)

;; Succ edge  48 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [50.0%]  (fallthru)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 arch/arm/mm/fault.c:304 (set (reg/f:SI 154 [ D.24547 ])
        (plus:SI (reg/v/f:SI 148 [ mm ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 39 38 40 5 arch/arm/mm/fault.c:304 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 40 39 41 5 arch/arm/mm/fault.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("down_read_trylock") [flags 0x41] <function_decl 0x10c30c80 down_read_trylock>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 41 40 42 5 arch/arm/mm/fault.c:304 (set (reg:SI 153 [ D.24548 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 5 arch/arm/mm/fault.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.24548 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 43 42 44 5 arch/arm/mm/fault.c:304 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 9)

;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [50.0%]  (fallthru)
(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 6 arch/arm/mm/fault.c:305 (set (reg:SI 175)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 6 arch/arm/mm/fault.c:305 (set (reg:SI 174)
        (and:SI (reg:SI 175)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 47 46 48 6 arch/arm/mm/fault.c:305 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 48 47 49 6 arch/arm/mm/fault.c:305 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [50.0%]  (fallthru)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 51 50 52 7 arch/arm/mm/fault.c:305 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("search_exception_tables") [flags 0x41] <function_decl 0x10e04f80 search_exception_tables>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 52 51 53 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg/f:SI 152 [ D.24555 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 152 [ D.24555 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 55 7 arch/arm/mm/fault.c:305 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 7 -> ( 48 8)

;; Succ edge  48 [15.0%] 
;; Succ edge  8 [85.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6 [50.0%] 
;; Pred edge  7 [85.0%]  (fallthru)
(code_label 55 54 56 8 25 "" [1 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 arch/arm/mm/fault.c:307 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 61 8 arch/arm/mm/fault.c:307 (parallel [
            (call (mem:SI (symbol_ref:SI ("down_read") [flags 0x41] <function_decl 0x10c30c00 down_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 8 -> ( 11)

;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 9
;; Pred edge  5 [50.0%] 
(code_label 61 58 62 9 24 "" [1 uses])

(note 62 61 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 9 arch/arm/mm/fault.c:316 (set (reg:SI 177)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 9 arch/arm/mm/fault.c:316 (set (reg:SI 176)
        (and:SI (reg:SI 177)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 65 64 66 9 arch/arm/mm/fault.c:316 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 66 65 67 9 arch/arm/mm/fault.c:316 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 [29.0%]  (fallthru)
;; Succ edge  11 [71.0%] 

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [29.0%]  (fallthru)
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 10 arch/arm/mm/fault.c:317 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 69 68 70 10 arch/arm/mm/fault.c:317 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("search_exception_tables") [flags 0x41] <function_decl 0x10e04f80 search_exception_tables>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 70 69 71 10 arch/arm/mm/fault.c:317 (set (reg/f:SI 151 [ D.24560 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 10 arch/arm/mm/fault.c:316 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 151 [ D.24560 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 10 arch/arm/mm/fault.c:316 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 10 -> ( 48 11)

;; Succ edge  48 [15.0%] 
;; Succ edge  11 [85.0%]  (fallthru)

;; Start of basic block ( 9 8 10) -> 11
;; Pred edge  9 [71.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  10 [85.0%]  (fallthru)
(code_label 73 72 74 11 26 "" [1 uses])

(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 11 arch/arm/mm/fault.c:238 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 11 arch/arm/mm/fault.c:238 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 77 76 78 11 arch/arm/mm/fault.c:238 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("find_vma") [flags 0x41] <function_decl 0x10fe6c80 find_vma>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 78 77 79 11 arch/arm/mm/fault.c:238 (set (reg/v/f:SI 136 [ vma ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 11 arch/arm/mm/fault.c:240 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 136 [ vma ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 80 79 81 11 arch/arm/mm/fault.c:240 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 11 -> ( 26 12)

;; Succ edge  26 [0.0%] 
;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; Pred edge  11 [100.0%]  (fallthru)
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 12 arch/arm/mm/fault.c:242 (set (reg:SI 178)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 12 arch/arm/mm/fault.c:242 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178)
            (reg/v:SI 156 [ addr ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 84 83 155 12 arch/arm/mm/fault.c:242 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 12 -> ( 24 13)

;; Succ edge  24 [0.0%] 
;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 25) -> 13
;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  25 [50.0%] 
(code_label 155 84 85 13 35 "" [1 uses])

(note 85 155 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 13 arch/arm/mm/fault.c:223 (set (reg:SI 138 [ D.24984 ])
        (and:SI (reg/v:SI 157 [ fsr ])
            (const_int 2048 [0x800]))) 67 {*arm_andsi3_insn} (nil))

(insn 87 86 88 13 arch/arm/mm/fault.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.24984 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 89 13 arch/arm/mm/fault.c:223 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 13 -> ( 14 15)

;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; Pred edge  13 [50.0%]  (fallthru)
(note 89 88 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 93 14 arch/arm/mm/fault.c:224 (set (reg/v:SI 137 [ mask ])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 16)

;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 15
;; Pred edge  13 [50.0%] 
(code_label 93 90 94 15 29 "" [1 uses])

(note 94 93 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 15 arch/arm/mm/fault.c:221 (set (reg/v:SI 137 [ mask ])
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 14) -> 16
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 96 95 97 16 30 "" [0 uses])

(note 97 96 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 16 arch/arm/mm/fault.c:225 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 157 [ fsr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 100 16 arch/arm/mm/fault.c:225 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
        (nil)))
;; End of basic block 16 -> ( 17 18)

;; Succ edge  17 [27.0%]  (fallthru)
;; Succ edge  18 [73.0%] 

;; Start of basic block ( 16) -> 17
;; Pred edge  16 [27.0%]  (fallthru)
(note 100 99 101 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 17 arch/arm/mm/fault.c:226 (set (reg/v:SI 137 [ mask ])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 18)

;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; Pred edge  16 [73.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 102 101 103 18 31 "" [1 uses])

(note 103 102 104 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 18 arch/arm/mm/fault.c:228 (set (reg:SI 180)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 18 arch/arm/mm/fault.c:228 (set (reg:SI 179)
        (and:SI (reg/v:SI 137 [ mask ])
            (reg:SI 180))) 67 {*arm_andsi3_insn} (nil))

(insn 106 105 107 18 arch/arm/mm/fault.c:228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 107 106 108 18 arch/arm/mm/fault.c:228 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 18 -> ( 19 20)

;; Succ edge  19 [71.0%]  (fallthru)
;; Succ edge  20 [29.0%] 

;; Start of basic block ( 18) -> 19
;; Pred edge  18 [71.0%]  (fallthru)
(note 108 107 109 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 112 19 arch/arm/mm/fault.c:251 (set (reg/v:SI 147 [ fault ])
        (const_int 131072 [0x20000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 27)

;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 20
;; Pred edge  18 [29.0%] 
(code_label 112 109 113 20 32 "" [1 uses])

(note 113 112 114 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 20 arch/arm/mm/fault.c:259 (set (reg:SI 182)
        (and:SI (reg/v:SI 156 [ addr ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 115 114 116 20 arch/arm/mm/fault.c:259 (set (reg:SI 181)
        (and:SI (reg:SI 182)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 156 [ addr ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 116 115 117 20 arch/arm/mm/fault.c:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.24984 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 117 116 118 20 arch/arm/mm/fault.c:259 (set (reg:SI 184)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 118 117 119 20 arch/arm/mm/fault.c:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 119 118 120 20 arch/arm/mm/fault.c:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 120 119 121 20 arch/arm/mm/fault.c:259 (set (reg:SI 2 r2)
        (reg:SI 181)) 167 {*arm_movsi_insn} (nil))

(insn 121 120 122 20 arch/arm/mm/fault.c:259 (set (reg:SI 3 r3)
        (reg:SI 184)) 167 {*arm_movsi_insn} (nil))

(call_insn 122 121 123 20 arch/arm/mm/fault.c:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("handle_mm_fault") [flags 0x41] <function_decl 0x10fbfc80 handle_mm_fault>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 123 122 124 20 arch/arm/mm/fault.c:259 (set (reg/v:SI 147 [ fault ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 124 123 125 20 arch/arm/mm/fault.c:260 (set (reg:SI 185)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 51 [0x33]))) 67 {*arm_andsi3_insn} (nil))

(insn 125 124 126 20 arch/arm/mm/fault.c:260 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 126 125 127 20 arch/arm/mm/fault.c:260 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 161)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 20 -> ( 27 21)

;; Succ edge  27 [0.0%] 
;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; Pred edge  20 [100.0%]  (fallthru)
(note 127 126 128 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 21 arch/arm/mm/fault.c:262 (set (reg:SI 186)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 129 128 130 21 arch/arm/mm/fault.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 130 129 131 21 arch/arm/mm/fault.c:262 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 21 -> ( 22 23)

;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21) -> 22
;; Pred edge  21 [50.0%]  (fallthru)
(note 131 130 132 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 132 131 133 22 arch/arm/mm/fault.c:263 (set (reg:SI 187)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 696 [0x2b8])) [0 <variable>.maj_flt+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 133 132 134 22 arch/arm/mm/fault.c:263 (set (reg:SI 188)
        (plus:SI (reg:SI 187)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 134 133 137 22 arch/arm/mm/fault.c:263 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 696 [0x2b8])) [0 <variable>.maj_flt+0 S4 A64])
        (reg:SI 188)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 27)

;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 23
;; Pred edge  21 [50.0%] 
(code_label 137 134 138 23 34 "" [1 uses])

(note 138 137 139 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 23 arch/arm/mm/fault.c:265 (set (reg:SI 189)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 692 [0x2b4])) [0 <variable>.min_flt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 140 139 141 23 arch/arm/mm/fault.c:265 (set (reg:SI 190)
        (plus:SI (reg:SI 189)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 141 140 144 23 arch/arm/mm/fault.c:265 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 692 [0x2b4])) [0 <variable>.min_flt+0 S4 A32])
        (reg:SI 190)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 27)

;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 24
;; Pred edge  12 [0.0%] 
(code_label 144 141 145 24 28 ("check_stack") [1 uses])

(note 145 144 146 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 24 arch/arm/mm/fault.c:269 (set (reg:SI 192)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 24 arch/arm/mm/fault.c:269 (set (reg:SI 191)
        (and:SI (reg:SI 192)
            (const_int 256 [0x100]))) 67 {*arm_andsi3_insn} (nil))

(insn 148 147 149 24 arch/arm/mm/fault.c:269 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 191)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 149 148 150 24 arch/arm/mm/fault.c:269 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 24 -> ( 25 26)

;; Succ edge  25 [29.0%]  (fallthru)
;; Succ edge  26 [71.0%] 

;; Start of basic block ( 24) -> 25
;; Pred edge  24 [29.0%]  (fallthru)
(note 150 149 151 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 152 25 arch/arm/mm/fault.c:269 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 152 151 153 25 arch/arm/mm/fault.c:269 discrim 1 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 153 152 154 25 arch/arm/mm/fault.c:269 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("expand_stack") [flags 0x41] <function_decl 0x10fe6b80 expand_stack>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 154 153 156 25 arch/arm/mm/fault.c:269 discrim 1 (set (reg:SI 135 [ D.24988 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 156 154 157 25 arch/arm/mm/fault.c:269 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.24988 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 157 156 158 25 arch/arm/mm/fault.c:269 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 155)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 25 -> ( 13 26)

;; Succ edge  13 [50.0%] 
;; Succ edge  26 [50.0%]  (fallthru)

;; Start of basic block ( 24 25 11) -> 26
;; Pred edge  24 [71.0%] 
;; Pred edge  25 [50.0%]  (fallthru)
;; Pred edge  11 [0.0%] 
(code_label 158 157 159 26 27 "" [2 uses])

(note 159 158 160 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 26 arch/arm/mm/fault.c:239 (set (reg/v:SI 147 [ fault ])
        (const_int 65536 [0x10000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 26 -> ( 27)

;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 26 20 22 23 19) -> 27
;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  20 [0.0%] 
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 161 160 162 27 33 "" [1 uses])

(note 162 161 163 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 164 27 arch/arm/mm/fault.c:323 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 164 163 165 27 arch/arm/mm/fault.c:323 (parallel [
            (call (mem:SI (symbol_ref:SI ("up_read") [flags 0x41] <function_decl 0x10c30e00 up_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 165 164 166 27 arch/arm/mm/fault.c:325 (set (reg:DI 150 [ D.24563 ])
        (zero_extend:DI (reg/v:SI 156 [ addr ]))) 138 {*arm_zero_extendsidi2} (nil))

(insn 166 165 167 27 include/linux/jump_label.h:67 (set (reg/f:SI 142 [ D.24830 ])
        (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                (const_int 8 [0x8])))) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 27 include/linux/jump_label.h:67 (set (reg:SI 141 [ D.24831 ])
        (mem/v:SI (reg/f:SI 142 [ D.24830 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 168 167 169 27 include/linux/jump_label.h:67 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.24831 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 169 168 170 27 include/linux/jump_label.h:67 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 27 -> ( 28 32)

;; Succ edge  28 [0.0%]  (fallthru)
;; Succ edge  32 [100.0%] 

;; Start of basic block ( 27) -> 28
;; Pred edge  27 [0.0%]  (fallthru)
(note 170 169 171 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 171 170 172 28 include/linux/perf_event.h:1054 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 158 [ regs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 172 171 173 28 include/linux/perf_event.h:1054 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 177)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
        (nil)))
;; End of basic block 28 -> ( 30 29)

;; Succ edge  30 [6.7%] 
;; Succ edge  29 [93.3%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; Pred edge  28 [93.3%]  (fallthru)
(note 173 172 174 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 177 29 include/linux/perf_event.h:1054 (set (reg/v/f:SI 134 [ regs.462 ])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 29 -> ( 31)

;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 28) -> 30
;; Pred edge  28 [6.7%] 
(code_label 177 174 178 30 37 "" [1 uses])

(note 178 177 179 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 30 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 193)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 180 179 181 30 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 193)) 167 {*arm_movsi_insn} (nil))

(insn 181 180 182 30 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 182 181 183 30 include/linux/perf_event.h:1043 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 183 182 184 30 include/linux/perf_event.h:1056 (set (reg/v/f:SI 134 [ regs.462 ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 30 -> ( 31)

;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 29 30) -> 31
;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%]  (fallthru)
(code_label 184 183 185 31 38 "" [0 uses])

(note 185 184 186 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 186 185 187 31 include/linux/perf_event.h:1058 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 134 [ regs.462 ])) 167 {*arm_movsi_insn} (nil))

(insn 187 186 188 31 include/linux/perf_event.h:1058 (set (mem:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S8 A64])
        (reg:DI 150 [ D.24563 ])) 163 {*arm_movdi} (nil))

(insn 188 187 189 31 include/linux/perf_event.h:1058 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 31 include/linux/perf_event.h:1058 (set (reg:DI 2 r2)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(call_insn 190 189 191 31 include/linux/perf_event.h:1058 (parallel [
            (call (mem:SI (symbol_ref:SI ("__perf_sw_event") [flags 0x41] <function_decl 0x11436b00 __perf_sw_event>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 31 -> ( 32)

;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31 27) -> 32
;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  27 [100.0%] 
(code_label 191 190 192 32 36 "" [1 uses])

(note 192 191 193 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 32 arch/arm/mm/fault.c:326 (set (reg:SI 195)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 194 193 195 32 arch/arm/mm/fault.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 195)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 195 194 196 32 arch/arm/mm/fault.c:326 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 222)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 32 -> ( 33 38)

;; Succ edge  33 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 32) -> 33
;; Pred edge  32 [50.0%]  (fallthru)
(note 196 195 197 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 197 196 198 33 include/linux/jump_label.h:67 (set (reg/f:SI 140 [ D.24847 ])
        (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                (const_int 24 [0x18])))) 167 {*arm_movsi_insn} (nil))

(insn 198 197 199 33 include/linux/jump_label.h:67 (set (reg:SI 139 [ D.24848 ])
        (mem/v:SI (reg/f:SI 140 [ D.24847 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 199 198 200 33 include/linux/jump_label.h:67 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.24848 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 200 199 201 33 include/linux/jump_label.h:67 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 222)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 33 -> ( 34 38)

;; Succ edge  34 [0.0%]  (fallthru)
;; Succ edge  38 [100.0%] 

;; Start of basic block ( 33) -> 34
;; Pred edge  33 [0.0%]  (fallthru)
(note 201 200 202 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 202 201 203 34 include/linux/perf_event.h:1054 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 158 [ regs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 203 202 204 34 include/linux/perf_event.h:1054 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
        (nil)))
;; End of basic block 34 -> ( 36 35)

;; Succ edge  36 [6.7%] 
;; Succ edge  35 [93.3%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; Pred edge  34 [93.3%]  (fallthru)
(note 204 203 205 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 205 204 208 35 include/linux/perf_event.h:1054 (set (reg/v/f:SI 133 [ regs.463 ])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 35 -> ( 37)

;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 34) -> 36
;; Pred edge  34 [6.7%] 
(code_label 208 205 209 36 40 "" [1 uses])

(note 209 208 210 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 36 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 196)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 211 210 212 36 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 196)) 167 {*arm_movsi_insn} (nil))

(insn 212 211 213 36 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 213 212 214 36 include/linux/perf_event.h:1043 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 214 213 215 36 include/linux/perf_event.h:1056 (set (reg/v/f:SI 133 [ regs.463 ])
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 36 -> ( 37)

;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 35 36) -> 37
;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  36 [100.0%]  (fallthru)
(code_label 215 214 216 37 41 "" [0 uses])

(note 216 215 217 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 217 216 218 37 include/linux/perf_event.h:1058 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 133 [ regs.463 ])) 167 {*arm_movsi_insn} (nil))

(insn 218 217 219 37 include/linux/perf_event.h:1058 (set (mem:DI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S8 A64])
        (reg:DI 150 [ D.24563 ])) 163 {*arm_movdi} (nil))

(insn 219 218 220 37 include/linux/perf_event.h:1058 (set (reg:SI 0 r0)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 220 219 221 37 include/linux/perf_event.h:1058 (set (reg:DI 2 r2)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(call_insn 221 220 222 37 include/linux/perf_event.h:1058 (parallel [
            (call (mem:SI (symbol_ref:SI ("__perf_sw_event") [flags 0x41] <function_decl 0x11436b00 __perf_sw_event>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 37 -> ( 38)

;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 33 32 37) -> 38
;; Pred edge  33 [100.0%] 
;; Pred edge  32 [50.0%] 
;; Pred edge  37 [100.0%]  (fallthru)
(code_label 222 221 223 38 39 "" [2 uses])

(note 223 222 224 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 224 223 225 38 arch/arm/mm/fault.c:334 (set (reg:SI 198)
        (const_int 196659 [0x30033])) 167 {*arm_movsi_insn} (nil))

(insn 225 224 226 38 arch/arm/mm/fault.c:334 (set (reg:SI 197)
        (and:SI (reg/v:SI 147 [ fault ])
            (reg:SI 198))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 147 [ fault ])
            (const_int 196659 [0x30033]))
        (nil)))

(insn 226 225 227 38 arch/arm/mm/fault.c:334 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 197)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 227 226 228 38 arch/arm/mm/fault.c:334 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 282)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 38 -> ( 49 39)

;; Succ edge  49 [100.0%] 
;; Succ edge  39 [0.0%]  (fallthru)

;; Start of basic block ( 38) -> 39
;; Pred edge  38 [0.0%]  (fallthru)
(note 228 227 229 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 230 39 arch/arm/mm/fault.c:337 (set (reg:SI 199)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 230 229 231 39 arch/arm/mm/fault.c:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 199)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 231 230 232 39 arch/arm/mm/fault.c:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
        (nil)))
;; End of basic block 39 -> ( 40 41)

;; Succ edge  40 [20.7%]  (fallthru)
;; Succ edge  41 [79.3%] 

;; Start of basic block ( 39) -> 40
;; Pred edge  39 [20.7%]  (fallthru)
(note 232 231 233 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(call_insn 233 232 236 40 arch/arm/mm/fault.c:343 (parallel [
            (call (mem:SI (symbol_ref:SI ("pagefault_out_of_memory") [flags 0x41] <function_decl 0x10fb4d80 pagefault_out_of_memory>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 40 -> ( 49)

;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 39) -> 41
;; Pred edge  39 [79.3%] 
(code_label 236 233 237 41 43 "" [1 uses])

(note 237 236 238 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 41 arch/arm/mm/fault.c:351 (set (reg:SI 201)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 239 238 240 41 arch/arm/mm/fault.c:351 (set (reg:SI 200)
        (and:SI (reg:SI 201)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 240 239 241 41 arch/arm/mm/fault.c:351 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 200)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 241 240 242 41 arch/arm/mm/fault.c:351 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 41 -> ( 48 42)

;; Succ edge  48 [50.0%] 
;; Succ edge  42 [50.0%]  (fallthru)

;; Start of basic block ( 41) -> 42
;; Pred edge  41 [50.0%]  (fallthru)
(note 242 241 243 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 244 42 arch/arm/mm/fault.c:354 (set (reg:SI 202)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 244 243 245 42 arch/arm/mm/fault.c:354 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 202)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 245 244 246 42 arch/arm/mm/fault.c:354 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 251)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 42 -> ( 43 44)

;; Succ edge  43 [39.0%]  (fallthru)
;; Succ edge  44 [61.0%] 

;; Start of basic block ( 42) -> 43
;; Pred edge  42 [39.0%]  (fallthru)
(note 246 245 247 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 247 246 248 43 arch/arm/mm/fault.c:360 (set (reg/v:SI 145 [ code ])
        (const_int 196610 [0x30002])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 251 43 arch/arm/mm/fault.c:359 (set (reg/v:SI 146 [ sig ])
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 43 -> ( 47)

;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 42) -> 44
;; Pred edge  42 [61.0%] 
(code_label 251 248 252 44 44 "" [1 uses])

(note 252 251 253 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 254 44 arch/arm/mm/fault.c:367 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ fault ])
            (const_int 131072 [0x20000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 254 253 255 44 arch/arm/mm/fault.c:367 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 260)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 44 -> ( 46 45)

;; Succ edge  46 [28.0%] 
;; Succ edge  45 [72.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; Pred edge  44 [72.0%]  (fallthru)
(note 255 254 256 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 256 255 257 45 arch/arm/mm/fault.c:367 discrim 2 (set (reg/v:SI 145 [ code ])
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 257 256 260 45 arch/arm/mm/fault.c:366 (set (reg/v:SI 146 [ sig ])
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 45 -> ( 47)

;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 44) -> 46
;; Pred edge  44 [28.0%] 
(code_label 260 257 261 46 46 "" [1 uses])

(note 261 260 262 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 262 261 263 46 arch/arm/mm/fault.c:367 discrim 1 (set (reg/v:SI 145 [ code ])
        (const_int 196610 [0x30002])) 167 {*arm_movsi_insn} (nil))

(insn 263 262 264 46 arch/arm/mm/fault.c:366 (set (reg/v:SI 146 [ sig ])
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 46 -> ( 47)

;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 43 45 46) -> 47
;; Pred edge  43 [100.0%]  (fallthru)
;; Pred edge  45 [100.0%]  (fallthru)
;; Pred edge  46 [100.0%]  (fallthru)
(code_label 264 263 265 47 45 "" [0 uses])

(note 265 264 266 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 266 265 267 47 arch/arm/mm/fault.c:371 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 145 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 267 266 268 47 arch/arm/mm/fault.c:371 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 268 267 269 47 arch/arm/mm/fault.c:371 (set (reg:SI 0 r0)
        (reg/v/f:SI 149 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(insn 269 268 270 47 arch/arm/mm/fault.c:371 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 270 269 271 47 arch/arm/mm/fault.c:371 (set (reg:SI 2 r2)
        (reg/v:SI 157 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 271 270 272 47 arch/arm/mm/fault.c:371 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ sig ])) 167 {*arm_movsi_insn} (nil))

(call_insn 272 271 275 47 arch/arm/mm/fault.c:371 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_user_fault") [flags 0x3] <function_decl 0x11459d80 __do_user_fault>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 47 -> ( 49)

;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 4 7 10 41) -> 48
;; Pred edge  4 [50.0%] 
;; Pred edge  7 [15.0%] 
;; Pred edge  10 [15.0%] 
;; Pred edge  41 [50.0%] 
(code_label 275 272 276 48 23 ("no_context") [4 uses])

(note 276 275 277 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 277 276 278 48 arch/arm/mm/fault.c:375 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 278 277 279 48 arch/arm/mm/fault.c:375 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 279 278 280 48 arch/arm/mm/fault.c:375 (set (reg:SI 2 r2)
        (reg/v:SI 157 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 280 279 281 48 arch/arm/mm/fault.c:375 (set (reg:SI 3 r3)
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 281 280 282 48 arch/arm/mm/fault.c:375 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_kernel_fault") [flags 0x3] <function_decl 0x11459c80 __do_kernel_fault>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 48 -> ( 49)

;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 48 38 40 47) -> 49
;; Pred edge  48 [100.0%]  (fallthru)
;; Pred edge  38 [100.0%] 
;; Pred edge  40 [100.0%]  (fallthru)
;; Pred edge  47 [100.0%]  (fallthru)
(code_label 282 281 283 49 42 "" [1 uses])

(note 283 282 284 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 284 283 288 49 arch/arm/mm/fault.c:377 (set (reg:SI 155 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 288 284 294 49 arch/arm/mm/fault.c:377 (set (reg/i:SI 0 r0)
        (reg:SI 155 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 294 288 0 49 arch/arm/mm/fault.c:377 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 49 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function do_bad_area (do_bad_area)[0:1290]


5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [39.0%]  (fallthru) 5 [61.0%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 3900, maybe hot.
Predecessors:  2 [39.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 6100, maybe hot.
Predecessors:  2 [61.0%] 
Successors:  EXIT [100.0%]  (ab,sibcall)

Basic block 1 , prev 5, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  5 [100.0%]  (ab,sibcall) 4 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:196 (set (reg/v:SI 136 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:196 (set (reg/v:SI 137 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:196 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.83 ])
        (reg/v:SI 13 sp [ sp ])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 140)
        (and:SI (reg:SI 133 [ sp.83 ])
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 139)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 133 [ sp.83 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 135 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 139)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:198 (set (reg/v/f:SI 134 [ mm ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ tsk ])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:204 (set (reg:SI 142)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:204 (set (reg:SI 141)
        (and:SI (reg:SI 142)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 15 14 16 2 arch/arm/mm/fault.c:204 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 2 arch/arm/mm/fault.c:204 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)

;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [39.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 arch/arm/mm/fault.c:205 (set (reg:SI 143)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 arch/arm/mm/fault.c:205 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 143)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 3 arch/arm/mm/fault.c:205 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 arch/arm/mm/fault.c:205 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 3 arch/arm/mm/fault.c:205 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 arch/arm/mm/fault.c:205 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 arch/arm/mm/fault.c:205 (set (reg:SI 3 r3)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 28 3 arch/arm/mm/fault.c:205 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_user_fault") [flags 0x3] <function_decl 0x11459d80 __do_user_fault>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; Pred edge  2 [61.0%] 
(code_label 28 25 29 4 51 "" [1 uses])

(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 4 arch/arm/mm/fault.c:207 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 4 arch/arm/mm/fault.c:207 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 4 arch/arm/mm/fault.c:207 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 4 arch/arm/mm/fault.c:207 (set (reg:SI 3 r3)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 34 33 0 4 arch/arm/mm/fault.c:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_kernel_fault") [flags 0x3] <function_decl 0x11459c80 __do_kernel_fault>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 4 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)


;; Function do_translation_fault (do_translation_fault)[0:1294]


9 basic blocks, 11 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [20.7%]  (fallthru) 5 [79.3%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 2071, maybe hot.
Predecessors:  2 [20.7%]  (fallthru)
Successors:  EXIT [100.0%]  (ab,sibcall)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  2 [79.3%] 
Successors:  8 [29.0%]  6 [71.0%]  (fallthru)

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 5630, maybe hot.
Predecessors:  5 [71.0%]  (fallthru)
Successors:  8 [61.0%]  7 [39.0%]  (fallthru)

Basic block 7 , prev 6, next 8, loop_depth 0, count 0, freq 2196, maybe hot.
Predecessors:  6 [39.0%]  (fallthru)
Successors:  9 [100.0%]  (fallthru)

Basic block 8 , prev 7, next 9, loop_depth 0, count 0, freq 5733, maybe hot.
Predecessors:  5 [29.0%]  6 [61.0%] 
Successors:  9 [100.0%]  (fallthru)

Basic block 9 , prev 8, next 1, loop_depth 0, count 0, freq 7929, maybe hot.
Predecessors:  8 [100.0%]  (fallthru) 7 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 9, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (ab,sibcall) 9 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:407 (set (reg/v:SI 139 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:407 (set (reg/v:SI 140 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:407 (set (reg/v/f:SI 141 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:413 (set (reg:SI 142)
        (const_int -1090519041 [0xffffffffbeffffff])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:413 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ addr ])
            (reg:SI 142))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/mm/fault.c:413 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
        (nil)))
;; End of basic block 2 -> ( 3 4)

;; Succ edge  3 [20.7%]  (fallthru)
;; Succ edge  4 [79.3%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [20.7%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/mm/fault.c:414 (set (reg:SI 0 r0)
        (reg/v:SI 139 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/mm/fault.c:414 (set (reg:SI 1 r1)
        (reg/v:SI 140 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/mm/fault.c:414 (set (reg:SI 2 r2)
        (reg/v/f:SI 141 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 15 14 18 3 arch/arm/mm/fault.c:414 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_page_fault") [flags 0x3] <function_decl 0x1147d180 do_page_fault>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2) -> 4
;; Pred edge  2 [79.3%] 
(code_label 18 15 19 4 57 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/fault.c:416 (set (reg:SI 144)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 arch/arm/mm/fault.c:416 (set (reg:SI 143)
        (and:SI (reg:SI 144)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 22 21 23 4 arch/arm/mm/fault.c:416 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 4 arch/arm/mm/fault.c:416 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 4 -> ( 7 5)

;; Succ edge  7 [29.0%] 
;; Succ edge  5 [71.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [71.0%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/mm/fault.c:424 (parallel [
            (set (reg/v:SI 133 [ pg ])
                (asm_operands:SI ("mrc	p15, 0, %0, c2, c0, 0") ("=r") 0 []
                     [] 8342805))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 26 25 27 5 arch/arm/mm/fault.c:424 (set (reg:SI 145)
        (lshiftrt:SI (reg/v:SI 139 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 28 5 arch/arm/mm/fault.c:424 (set (reg:SI 136 [ D.24612 ])
        (ashift:SI (reg:SI 145)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 5 arch/arm/mm/fault.c:441 (set (reg/f:SI 146)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/mm/fault.c:441 (set (reg:SI 147)
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 146)
                (const_int 36 [0x24])) [0 init_mm.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 arch/arm/mm/fault.c:441 (set (reg/v/f:SI 134 [ pmd_k ])
        (plus:SI (reg:SI 147)
            (reg:SI 136 [ D.24612 ]))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 5 arch/arm/mm/fault.c:451 (set (reg:SI 148)
        (lshiftrt:SI (reg/v:SI 139 [ addr ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 32 31 33 5 arch/arm/mm/fault.c:451 (set (reg:SI 149)
        (and:SI (reg:SI 148)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/fault.c:451 (set (reg:SI 150)
        (mem:SI (plus:SI (mult:SI (reg:SI 149)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 134 [ pmd_k ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 arch/arm/mm/fault.c:451 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 36 5 arch/arm/mm/fault.c:451 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 5 -> ( 7 6)

;; Succ edge  7 [61.0%] 
;; Succ edge  6 [39.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [39.0%]  (fallthru)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 arch/arm/mm/fault.c:440 (set (reg:SI 152)
        (and:SI (reg/v:SI 133 [ pg ])
            (const_int -16321 [0xffffffffffffc03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 38 37 39 6 arch/arm/mm/fault.c:440 (set (reg:SI 151)
        (and:SI (reg:SI 152)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 133 [ pg ])
            (const_int -16384 [0xffffffffffffc000]))
        (nil)))

(insn 39 38 40 6 arch/arm/mm/fault.c:440 (set (reg:SI 153)
        (plus:SI (reg:SI 151)
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))

(insn 40 39 41 6 arch/arm/mm/fault.c:440 (set (reg/v/f:SI 135 [ pmd ])
        (plus:SI (reg:SI 153)
            (reg:SI 136 [ D.24612 ]))) 4 {*arm_addsi3} (nil))

(insn 41 40 42 6 arch/arm/mm/fault.c:455 (set (reg:SI 154)
        (mem:SI (reg/v/f:SI 134 [ pmd_k ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 6 arch/arm/mm/fault.c:455 (set (mem:SI (reg/v/f:SI 135 [ pmd ]) [0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 6 arch/arm/mm/fault.c:455 (set (reg:SI 155)
        (mem:SI (plus:SI (reg/v/f:SI 134 [ pmd_k ])
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 6 arch/arm/mm/fault.c:455 (set (mem:SI (plus:SI (reg/v/f:SI 135 [ pmd ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 155)) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:479 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 135 [ pmd ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8282573)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 46 45 47 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:487 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8283597)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 47 46 50 6 arch/arm/mm/fault.c:456 (set (reg:SI 137 [ D.24606 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 7
;; Pred edge  4 [29.0%] 
;; Pred edge  5 [61.0%] 
(code_label 50 47 51 7 58 ("bad_area") [2 uses])

(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 7 arch/arm/mm/fault.c:459 (set (reg:SI 0 r0)
        (reg/v:SI 139 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 7 arch/arm/mm/fault.c:459 (set (reg:SI 1 r1)
        (reg/v:SI 140 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 7 arch/arm/mm/fault.c:459 (set (reg:SI 2 r2)
        (reg/v/f:SI 141 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 55 54 56 7 arch/arm/mm/fault.c:459 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_bad_area") [flags 0x3] <function_decl 0x11459880 do_bad_area>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 56 55 57 7 arch/arm/mm/fault.c:460 (set (reg:SI 137 [ D.24606 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 57 56 58 8 59 "" [0 uses])

(note 58 57 59 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 63 8 arch/arm/mm/fault.c:461 (set (reg:SI 138 [ <result> ])
        (reg:SI 137 [ D.24606 ])) 167 {*arm_movsi_insn} (nil))

(insn 63 59 69 8 arch/arm/mm/fault.c:461 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 69 63 0 8 arch/arm/mm/fault.c:461 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function do_sect_fault (do_sect_fault)[0:1295]


3 basic blocks, 2 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  2 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:477 (set (reg/v:SI 134 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:477 (set (reg/v:SI 135 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:477 (set (reg/v/f:SI 136 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:478 (set (reg:SI 0 r0)
        (reg/v:SI 134 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:478 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/fault.c:478 (set (reg:SI 2 r2)
        (reg/v/f:SI 136 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 11 10 12 2 arch/arm/mm/fault.c:478 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_bad_area") [flags 0x3] <function_decl 0x11459880 do_bad_area>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 16 2 arch/arm/mm/fault.c:480 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 12 22 2 arch/arm/mm/fault.c:480 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 22 16 0 2 arch/arm/mm/fault.c:480 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function do_PrefetchAbort (do_PrefetchAbort)[0:1300]


5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  7 [100.0%]  4 [0.0%]  (fallthru)

Basic block 4 , prev 2, next 7, loop_depth 0, count 0, freq 4.
Predecessors:  2 [0.0%]  (fallthru)
Successors:  7 [100.0%]  (fallthru)

Basic block 7 , prev 4, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 2 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:626 (set (reg/v:SI 135 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:626 (set (reg/v:SI 136 [ ifsr ])
        (reg:SI 1 r1 [ ifsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:626 (set (reg/v/f:SI 137 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:627 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:627 (set (reg:SI 139)
        (and:SI (reg/v:SI 136 [ ifsr ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/fault.c:627 (set (reg:SI 140)
        (lshiftrt:SI (reg:SI 139)
            (const_int 6 [0x6]))) 117 {*arm_shiftsi3} (nil))

(insn 11 10 12 2 arch/arm/mm/fault.c:627 (set (reg:SI 141)
        (and:SI (reg/v:SI 136 [ ifsr ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:627 (set (reg:SI 142)
        (ior:SI (reg:SI 140)
            (reg:SI 141))) 89 {*arm_iorsi3} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:627 (set (reg:SI 143)
        (ashift:SI (reg:SI 142)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:627 (set (reg/v/f:SI 133 [ inf ])
        (plus:SI (reg/f:SI 138)
            (reg:SI 143))) 4 {*arm_addsi3} (nil))

(insn 15 14 16 2 arch/arm/mm/fault.c:630 (set (reg:SI 144)
        (ior:SI (reg/v:SI 136 [ ifsr ])
            (const_int -2147483648 [0xffffffff80000000]))) 89 {*arm_iorsi3} (nil))

(insn 16 15 17 2 arch/arm/mm/fault.c:630 (set (reg/f:SI 145)
        (mem/s/f/j:SI (reg/v/f:SI 133 [ inf ]) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/fault.c:630 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/mm/fault.c:630 (set (reg:SI 1 r1)
        (reg:SI 144)) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/mm/fault.c:630 (set (reg:SI 2 r2)
        (reg/v/f:SI 137 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 20 19 21 2 arch/arm/mm/fault.c:630 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 145) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 21 20 22 2 arch/arm/mm/fault.c:630 (set (reg:SI 134 [ D.24714 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 2 arch/arm/mm/fault.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24714 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 2 arch/arm/mm/fault.c:630 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 4 3)

;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [0.0%]  (fallthru)
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 3 arch/arm/mm/fault.c:633 (set (reg:SI 146)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x114abbe0>)) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 3 arch/arm/mm/fault.c:633 (set (reg:SI 0 r0)
        (reg:SI 146)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 3 arch/arm/mm/fault.c:633 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 12 [0xc])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 arch/arm/mm/fault.c:633 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ ifsr ])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 arch/arm/mm/fault.c:633 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 30 29 31 3 arch/arm/mm/fault.c:633 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 31 30 32 3 arch/arm/mm/fault.c:636 (set (reg:SI 147)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 3 arch/arm/mm/fault.c:636 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 147)) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 3 arch/arm/mm/fault.c:637 (set (reg:SI 148)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 3 arch/arm/mm/fault.c:637 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 148)) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 3 arch/arm/mm/fault.c:638 (set (reg:SI 149)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 8 [0x8])) [0 <variable>.code+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 3 arch/arm/mm/fault.c:638 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 149)) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 3 arch/arm/mm/fault.c:639 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 3 arch/arm/mm/fault.c:640 (set (reg:SI 150)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 3 arch/arm/mm/fault.c:640 (set (reg:SI 151)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 40 39 41 3 arch/arm/mm/fault.c:640 (set (reg:SI 152)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 3 arch/arm/mm/fault.c:640 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 152)) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 3 arch/arm/mm/fault.c:640 (set (reg:SI 0 r0)
        (reg:SI 150)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 3 arch/arm/mm/fault.c:640 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 3 arch/arm/mm/fault.c:640 (set (reg:SI 2 r2)
        (reg:SI 151)) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 3 arch/arm/mm/fault.c:640 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ ifsr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 46 45 52 3 arch/arm/mm/fault.c:640 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x41] <function_decl 0x512d9380 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 52 46 55 4 67 "" [1 uses])

(note 55 52 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function do_DataAbort (do_DataAbort)[0:1298]


5 basic blocks, 5 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  7 [100.0%]  4 [0.0%]  (fallthru)

Basic block 4 , prev 2, next 7, loop_depth 0, count 0, freq 4.
Predecessors:  2 [0.0%]  (fallthru)
Successors:  7 [100.0%]  (fallthru)

Basic block 7 , prev 4, next 1, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  4 [100.0%]  (fallthru) 2 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, maybe hot.
Predecessors:  7 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:558 (set (reg/v:SI 135 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:558 (set (reg/v:SI 136 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:558 (set (reg/v/f:SI 137 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:559 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:559 (set (reg:SI 139)
        (plus:SI (reg/f:SI 138)
            (const_int 512 [0x200]))) 4 {*arm_addsi3} (nil))

(insn 10 9 11 2 arch/arm/mm/fault.c:559 (set (reg:SI 140)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/fault.c:559 (set (reg:SI 141)
        (lshiftrt:SI (reg:SI 140)
            (const_int 6 [0x6]))) 117 {*arm_shiftsi3} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:559 (set (reg:SI 142)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:559 (set (reg:SI 143)
        (ior:SI (reg:SI 141)
            (reg:SI 142))) 89 {*arm_iorsi3} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:559 (set (reg:SI 144)
        (ashift:SI (reg:SI 143)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 15 14 16 2 arch/arm/mm/fault.c:559 (set (reg/v/f:SI 133 [ inf ])
        (plus:SI (reg:SI 139)
            (reg:SI 144))) 4 {*arm_addsi3} (nil))

(insn 16 15 17 2 arch/arm/mm/fault.c:562 (set (reg:SI 145)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/fault.c:562 (set (reg/f:SI 146)
        (mem/s/f/j:SI (reg/v/f:SI 133 [ inf ]) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/mm/fault.c:562 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/mm/fault.c:562 (set (reg:SI 1 r1)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 2 arch/arm/mm/fault.c:562 (set (reg:SI 2 r2)
        (reg/v/f:SI 137 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 21 20 22 2 arch/arm/mm/fault.c:562 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 146) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 22 21 23 2 arch/arm/mm/fault.c:562 (set (reg:SI 134 [ D.24678 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 2 arch/arm/mm/fault.c:562 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24678 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 2 arch/arm/mm/fault.c:562 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 4 3)

;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [0.0%]  (fallthru)
(note 25 24 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 3 arch/arm/mm/fault.c:565 (set (reg:SI 147)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114abc30>)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 3 arch/arm/mm/fault.c:565 (set (reg:SI 0 r0)
        (reg:SI 147)) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 arch/arm/mm/fault.c:565 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 12 [0xc])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 arch/arm/mm/fault.c:565 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 3 arch/arm/mm/fault.c:565 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 32 3 arch/arm/mm/fault.c:565 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 32 31 33 3 arch/arm/mm/fault.c:568 (set (reg:SI 148)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 3 arch/arm/mm/fault.c:568 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 148)) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 3 arch/arm/mm/fault.c:569 (set (reg:SI 149)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 3 arch/arm/mm/fault.c:569 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 3 arch/arm/mm/fault.c:570 (set (reg:SI 150)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 8 [0x8])) [0 <variable>.code+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 3 arch/arm/mm/fault.c:570 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 150)) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 3 arch/arm/mm/fault.c:571 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 3 arch/arm/mm/fault.c:572 (set (reg:SI 151)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 3 arch/arm/mm/fault.c:572 (set (reg:SI 152)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 41 40 42 3 arch/arm/mm/fault.c:572 (set (reg:SI 153)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 3 arch/arm/mm/fault.c:572 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 153)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 3 arch/arm/mm/fault.c:572 (set (reg:SI 0 r0)
        (reg:SI 151)) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 3 arch/arm/mm/fault.c:572 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 3 arch/arm/mm/fault.c:572 (set (reg:SI 2 r2)
        (reg:SI 152)) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 3 arch/arm/mm/fault.c:572 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 53 3 arch/arm/mm/fault.c:572 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x41] <function_decl 0x512d9380 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 53 47 56 4 72 "" [1 uses])

(note 56 53 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function hook_ifault_code (hook_ifault_code)[0:1299] (unlikely executed)


5 basic blocks, 4 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [0.0%]  (fallthru) 5 [100.0%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  2 [0.0%]  (fallthru)
Successors: 

Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  2 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 5, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  5 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 133 [ nr ])
        (reg:SI 0 r0 [ nr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:614 (set (reg/v/f:SI 134 [ fn ])
        (reg:SI 1 r1 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 135 [ sig ])
        (reg:SI 2 r2 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 136 [ code ])
        (reg:SI 3 r3 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/fault.c:614 (set (reg/v/f:SI 137 [ name ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/fault.c:615 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ nr ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/fault.c:615 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)

;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 arch/arm/mm/fault.c:616 (set (reg:SI 138)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/mm/fault.c:616 (set (reg:SI 0 r0)
        (reg:SI 138)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/mm/fault.c:616 (set (reg:SI 1 r1)
        (const_int 616 [0x268])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 18 3 arch/arm/mm/fault.c:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()


;; Start of basic block ( 2) -> 4
;; Pred edge  2 [100.0%] 
(code_label 18 16 19 4 76 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/fault.c:618 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 arch/arm/mm/fault.c:618 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 133 [ nr ])
                    (const_int 16 [0x10]))
                (reg/f:SI 139)) [0 <variable>.fn+0 S4 A32])
        (reg/v/f:SI 134 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 4 arch/arm/mm/fault.c:619 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 arch/arm/mm/fault.c:619 (set (reg:SI 141)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 4 arch/arm/mm/fault.c:619 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 26 4 arch/arm/mm/fault.c:619 (set (reg:SI 143)
        (plus:SI (reg/f:SI 140)
            (reg:SI 142))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 4 arch/arm/mm/fault.c:619 (set (reg/f:SI 144)
        (plus:SI (reg:SI 143)
            (reg:SI 141))) 4 {*arm_addsi3} (nil))

(insn 27 26 28 4 arch/arm/mm/fault.c:619 (set (mem/s/j:SI (reg/f:SI 144) [0 <variable>.sig+0 S4 A32])
        (reg/v:SI 135 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 4 arch/arm/mm/fault.c:620 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/mm/fault.c:620 (set (reg:SI 146)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 30 29 31 4 arch/arm/mm/fault.c:620 (set (reg:SI 147)
        (plus:SI (reg:SI 146)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 4 arch/arm/mm/fault.c:620 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 147)
                    (const_int 8 [0x8]))
                (reg/f:SI 145)) [0 <variable>.code+0 S4 A32])
        (reg/v:SI 136 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 4 arch/arm/mm/fault.c:621 (set (reg/f:SI 148)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 4 arch/arm/mm/fault.c:621 (set (reg:SI 149)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 34 33 35 4 arch/arm/mm/fault.c:621 (set (reg:SI 150)
        (plus:SI (reg:SI 149)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 35 34 36 4 arch/arm/mm/fault.c:621 (set (reg:SI 151)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 4 arch/arm/mm/fault.c:621 (set (reg:SI 152)
        (ashift:SI (reg:SI 150)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 37 36 38 4 arch/arm/mm/fault.c:621 (set (reg:SI 153)
        (plus:SI (reg/f:SI 148)
            (reg:SI 152))) 4 {*arm_addsi3} (nil))

(insn 38 37 39 4 arch/arm/mm/fault.c:621 (set (reg/f:SI 154)
        (plus:SI (reg:SI 153)
            (reg:SI 151))) 4 {*arm_addsi3} (nil))

(insn 39 38 0 4 arch/arm/mm/fault.c:621 (set (mem/s/f/j:SI (reg/f:SI 154) [0 <variable>.name+0 S4 A32])
        (reg/v/f:SI 137 [ name ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function hook_fault_code (hook_fault_code)[0:1297] (unlikely executed)


5 basic blocks, 4 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [0.0%]  (fallthru) 5 [100.0%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  2 [0.0%]  (fallthru)
Successors: 

Basic block 5 , prev 4, next 1, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  2 [100.0%] 
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 5, loop_depth 0, count 0, freq 9996, probably never executed.
Predecessors:  5 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 133 [ nr ])
        (reg:SI 0 r0 [ nr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:543 (set (reg/v/f:SI 134 [ fn ])
        (reg:SI 1 r1 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 135 [ sig ])
        (reg:SI 2 r2 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 136 [ code ])
        (reg:SI 3 r3 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/fault.c:543 (set (reg/v/f:SI 137 [ name ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/fault.c:544 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ nr ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/fault.c:544 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)

;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 arch/arm/mm/fault.c:545 (set (reg:SI 138)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/mm/fault.c:545 (set (reg:SI 139)
        (const_int 545 [0x221])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/mm/fault.c:545 (set (reg:SI 0 r0)
        (reg:SI 138)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 arch/arm/mm/fault.c:545 (set (reg:SI 1 r1)
        (reg:SI 139)) 167 {*arm_movsi_insn} (nil))

(call_insn 17 16 19 3 arch/arm/mm/fault.c:545 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()


;; Start of basic block ( 2) -> 4
;; Pred edge  2 [100.0%] 
(code_label 19 17 20 4 81 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 arch/arm/mm/fault.c:547 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 4 arch/arm/mm/fault.c:547 (set (reg:SI 141)
        (const_int 512 [0x200])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 arch/arm/mm/fault.c:547 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 25 4 arch/arm/mm/fault.c:547 (set (reg:SI 143)
        (plus:SI (reg/f:SI 140)
            (reg:SI 142))) 4 {*arm_addsi3} (nil))

(insn 25 24 26 4 arch/arm/mm/fault.c:547 (set (reg/f:SI 144)
        (plus:SI (reg:SI 143)
            (reg:SI 141))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 4 arch/arm/mm/fault.c:547 (set (mem/s/f/j:SI (reg/f:SI 144) [0 <variable>.fn+0 S4 A32])
        (reg/v/f:SI 134 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 4 arch/arm/mm/fault.c:548 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 4 arch/arm/mm/fault.c:548 (set (reg:SI 146)
        (const_int 516 [0x204])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/mm/fault.c:548 (set (reg:SI 147)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 30 29 31 4 arch/arm/mm/fault.c:548 (set (reg:SI 148)
        (plus:SI (reg/f:SI 145)
            (reg:SI 147))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 4 arch/arm/mm/fault.c:548 (set (reg/f:SI 149)
        (plus:SI (reg:SI 148)
            (reg:SI 146))) 4 {*arm_addsi3} (nil))

(insn 32 31 33 4 arch/arm/mm/fault.c:548 (set (mem/s/j:SI (reg/f:SI 149) [0 <variable>.sig+0 S4 A32])
        (reg/v:SI 135 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 4 arch/arm/mm/fault.c:549 (set (reg/f:SI 150)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 4 arch/arm/mm/fault.c:549 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 35 34 36 4 arch/arm/mm/fault.c:549 (set (reg:SI 152)
        (plus:SI (reg:SI 151)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 36 35 37 4 arch/arm/mm/fault.c:549 (set (reg:SI 153)
        (const_int 512 [0x200])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 4 arch/arm/mm/fault.c:549 (set (reg:SI 154)
        (ashift:SI (reg:SI 152)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 38 37 39 4 arch/arm/mm/fault.c:549 (set (reg:SI 155)
        (plus:SI (reg/f:SI 150)
            (reg:SI 154))) 4 {*arm_addsi3} (nil))

(insn 39 38 40 4 arch/arm/mm/fault.c:549 (set (reg/f:SI 156)
        (plus:SI (reg:SI 155)
            (reg:SI 153))) 4 {*arm_addsi3} (nil))

(insn 40 39 41 4 arch/arm/mm/fault.c:549 (set (mem/s/j:SI (reg/f:SI 156) [0 <variable>.code+0 S4 A32])
        (reg/v:SI 136 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 4 arch/arm/mm/fault.c:550 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 4 arch/arm/mm/fault.c:550 (set (reg:SI 158)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 43 42 44 4 arch/arm/mm/fault.c:550 (set (reg:SI 159)
        (plus:SI (reg:SI 158)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 44 43 45 4 arch/arm/mm/fault.c:550 (set (reg:SI 160)
        (const_int 516 [0x204])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 4 arch/arm/mm/fault.c:550 (set (reg:SI 161)
        (ashift:SI (reg:SI 159)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 46 45 47 4 arch/arm/mm/fault.c:550 (set (reg:SI 162)
        (plus:SI (reg/f:SI 157)
            (reg:SI 161))) 4 {*arm_addsi3} (nil))

(insn 47 46 48 4 arch/arm/mm/fault.c:550 (set (reg/f:SI 163)
        (plus:SI (reg:SI 162)
            (reg:SI 160))) 4 {*arm_addsi3} (nil))

(insn 48 47 0 4 arch/arm/mm/fault.c:550 (set (mem/s/f/j:SI (reg/f:SI 163) [0 <variable>.name+0 S4 A32])
        (reg/v/f:SI 137 [ name ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function exceptions_init (exceptions_init)[0:1301] (unlikely executed)


7 basic blocks, 8 edges.

Basic block 0 , next 2, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors: 
Successors:  2 [100.0%]  (fallthru)

Basic block 2 , prev 0, next 4, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  ENTRY [100.0%]  (fallthru)
Successors:  4 [0.0%]  (fallthru) 5 [100.0%] 

Basic block 4 , prev 2, next 5, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  2 [0.0%]  (fallthru)
Successors:  5 [100.0%]  (fallthru)

Basic block 5 , prev 4, next 6, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  2 [100.0%]  4 [100.0%]  (fallthru)
Successors:  6 [0.0%]  (fallthru) 7 [100.0%] 

Basic block 6 , prev 5, next 7, loop_depth 0, count 0, freq 4, probably never executed.
Predecessors:  5 [0.0%]  (fallthru)
Successors:  7 [100.0%]  (fallthru)

Basic block 7 , prev 6, next 1, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  5 [100.0%]  6 [100.0%]  (fallthru)
Successors:  EXIT [100.0%]  (fallthru)

Basic block 1 , prev 7, loop_depth 0, count 0, freq 10000, probably never executed.
Predecessors:  7 [100.0%]  (fallthru)
Successors: 



try_optimize_cfg iteration 1

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 6 2 arch/arm/mm/fault.c:645 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 6 5 7 2 arch/arm/mm/fault.c:645 (set (reg:SI 134 [ D.24724 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/fault.c:645 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24724 ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/mm/fault.c:645 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)

;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/mm/fault.c:646 (set (reg:SI 136)
        (symbol_ref:SI ("do_translation_fault") [flags 0x3] <function_decl 0x1147d280 do_translation_fault>)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 3 arch/arm/mm/fault.c:646 (set (reg:SI 137)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 3 arch/arm/mm/fault.c:646 (set (reg/f:SI 138)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x1154a280>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/mm/fault.c:646 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/mm/fault.c:646 (set (reg:SI 0 r0)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/mm/fault.c:646 (set (reg:SI 1 r1)
        (reg:SI 136)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 arch/arm/mm/fault.c:646 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/mm/fault.c:646 (set (reg:SI 3 r3)
        (reg:SI 137)) 167 {*arm_movsi_insn} (nil))

(call_insn 18 17 19 3 arch/arm/mm/fault.c:646 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)

;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 19 18 20 4 86 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 21 20 22 4 arch/arm/mm/fault.c:650 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 22 21 23 4 arch/arm/mm/fault.c:650 (set (reg:SI 133 [ D.24727 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 arch/arm/mm/fault.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.24727 ])
            (const_int 8 [0x8]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 arch/arm/mm/fault.c:650 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [0.0%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 arch/arm/mm/fault.c:655 (set (reg:SI 139)
        (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 arch/arm/mm/fault.c:655 (set (reg:SI 140)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 arch/arm/mm/fault.c:655 (set (reg/f:SI 141)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/mm/fault.c:655 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 arch/arm/mm/fault.c:655 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/mm/fault.c:655 (set (reg:SI 1 r1)
        (reg:SI 139)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 5 arch/arm/mm/fault.c:655 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/fault.c:655 (set (reg:SI 3 r3)
        (reg:SI 140)) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 35 5 arch/arm/mm/fault.c:655 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 35 34 36 5 arch/arm/mm/fault.c:657 (set (reg:SI 142)
        (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 5 arch/arm/mm/fault.c:657 (set (reg:SI 143)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 5 arch/arm/mm/fault.c:657 (set (reg/f:SI 144)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 5 arch/arm/mm/fault.c:657 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 144)) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 5 arch/arm/mm/fault.c:657 (set (reg:SI 0 r0)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 arch/arm/mm/fault.c:657 (set (reg:SI 1 r1)
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 5 arch/arm/mm/fault.c:657 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 5 arch/arm/mm/fault.c:657 (set (reg:SI 3 r3)
        (reg:SI 143)) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 5 arch/arm/mm/fault.c:657 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 44 43 45 6 87 "" [1 uses])

(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 50 6 arch/arm/mm/fault.c:662 (set (reg:SI 135 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 50 46 56 6 arch/arm/mm/fault.c:662 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ <result> ])) 167 {*arm_movsi_insn} (nil))

(insn 56 50 0 6 arch/arm/mm/fault.c:662 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

