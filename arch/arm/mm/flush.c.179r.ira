
;; Function flush_cache_mm (flush_cache_mm)[0:1226]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


flush_cache_mm

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 10{7d,3u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 13 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 13 3 14 NOTE_INSN_DELETED)

(note 14 13 0 NOTE_INSN_DELETED)


;; Function flush_cache_range (flush_cache_range)[0:1227]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS

  a0(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 15(l0): point = 1
   Insn 13(l0): point = 3
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 8(l0): point = 10
 a0(r138): [2..3]
 a1(r137): [9..10]
Compressing live ranges: from 13 to 4 - 30%
Ranges after the compression:
 a0(r138): [0..1]
 a1(r137): [2..3]
+++Allocating 0 bytes for conflict table (uncompressed size 16)
;; a0(r138,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=5, points=4
    allocnos=2, copies=0, conflicts=0, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r138 1r137
    modified regnos: 137 138
    border:
    Pressure: GENERAL_REGS=2
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a1(r137,l0)
      Pushing a0(r138,l0)
      Popping a0(r138,l0)  -- assign reg 3
      Popping a1(r137,l0)  -- assign reg 3
Disposition:
    1:r137 l0     3    0:r138 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=8, live_throughout: 13, 14, dead_or_set: 0, 137
insn=10, live_throughout: 13, 14, dead_or_set: 137
insn=11, live_throughout: 13, 14, dead_or_set: 
insn=13, live_throughout: 13, dead_or_set: 138
insn=15, live_throughout: 13, dead_or_set: 14, 138
insn=21, live_throughout: 13, 14, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 13 (nil))
changing reg in insn 8
changing reg in insn 10
changing reg in insn 13
changing reg in insn 15


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 15.
deleting insn with uid = 15.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


flush_cache_range

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={4d,2u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 137{127d,10u,0e} in 5{4 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 5 2 NOTE_INSN_DELETED)

(note 5 2 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 8 2 NOTE_INSN_DELETED)

(insn 8 9 10 2 arch/arm/mm/flush.c:86 (set (reg:SI 3 r3 [orig:137 <variable>.vm_flags ] [137])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ vma ])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 8 11 2 arch/arm/mm/flush.c:86 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:137 <variable>.vm_flags ] [137])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/flush.c:86 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 12 11 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 12 13 3 NOTE_INSN_DELETED)

(insn 13 14 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:204 (set (reg/f:SI 3 r3 [138])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
        (nil)))

(call_insn 15 13 21 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:204 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 3 r3 [138]) [0 cpu_cache.flush_icache_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [61.0%] 
(code_label 21 15 24 4 5 "" [1 uses])

(note 24 21 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 44 24 45 NOTE_INSN_DELETED)

(note 45 44 0 NOTE_INSN_DELETED)


;; Function flush_pfn_alias (flush_pfn_alias)[0:1224]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 44.
verify found no changes in insn with uid = 44.
deleting insn with uid = 20.
scanning new insn with uid = 45.
verify found no changes in insn with uid = 45.
deleting insn with uid = 9.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a2 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r154: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 33(l0): point = 0
   Insn 32(l0): point = 2
   Insn 31(l0): point = 4
   Insn 30(l0): point = 6
   Insn 29(l0): point = 8
   Insn 28(l0): point = 10
   Insn 25(l0): point = 12
   Insn 14(l0): point = 14
   Insn 42(l0): point = 16
   Insn 26(l0): point = 18
   Insn 41(l0): point = 20
   Insn 24(l0): point = 22
   Insn 22(l0): point = 24
   Insn 11(l0): point = 26
   Insn 21(l0): point = 28
   Insn 44(l0): point = 30
   Insn 10(l0): point = 32
   Insn 45(l0): point = 34
   Insn 27(l0): point = 36
   Insn 17(l0): point = 38
   Insn 8(l0): point = 40
   Insn 7(l0): point = 42
 a0(r133): [1..40]
 a1(r153): [1..4]
 a2(r154): [1..2]
 a3(r142): [13..14]
 a4(r144): [13..38]
 a5(r139): [15..20]
 a6(r152): [19..22]
 a7(r140): [21..26]
 a8(r149): [23..24]
 a9(r150): [25..28]
 a10(r137): [27..32]
 a11(r148): [29..30]
 a12(r138): [33..34]
 a13(r136): [41..42]
Compressing live ranges: from 45 to 25 - 55%
Ranges after the compression:
 a0(r133): [0..22]
 a1(r153): [0..2]
 a2(r154): [0..1]
 a3(r142): [3..4]
 a4(r144): [3..21]
 a5(r139): [5..7]
 a6(r152): [6..9]
 a7(r140): [8..13]
 a8(r149): [10..11]
 a9(r150): [12..15]
 a10(r137): [14..18]
 a11(r148): [16..17]
 a12(r138): [19..20]
 a13(r136): [23..24]
+++Allocating 104 bytes for conflict table (uncompressed size 112)
;; a0(r133,l0) conflicts: a2(r154,l0) a1(r153,l0) a3(r142,l0) a4(r144,l0) a5(r139,l0) a6(r152,l0) a7(r140,l0) a8(r149,l0) a9(r150,l0) a10(r137,l0) a11(r148,l0) a12(r138,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r153,l0) conflicts: a2(r154,l0) a0(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r154,l0) conflicts: a1(r153,l0) a0(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r142,l0) conflicts: a0(r133,l0) a4(r144,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a4(r144,l0) conflicts: a0(r133,l0) a3(r142,l0) a5(r139,l0) a6(r152,l0) a7(r140,l0) a8(r149,l0) a9(r150,l0) a10(r137,l0) a11(r148,l0) a12(r138,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a5(r139,l0) conflicts: a0(r133,l0) a4(r144,l0) a6(r152,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a6(r152,l0) conflicts: a0(r133,l0) a4(r144,l0) a5(r139,l0) a7(r140,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a7(r140,l0) conflicts: a0(r133,l0) a4(r144,l0) a6(r152,l0) a8(r149,l0) a9(r150,l0)
;;     total conflict hard regs: 0 2
;;     conflict hard regs: 0 2
;; a8(r149,l0) conflicts: a0(r133,l0) a4(r144,l0) a7(r140,l0)
;;     total conflict hard regs: 0 2
;;     conflict hard regs: 0 2
;; a9(r150,l0) conflicts: a0(r133,l0) a4(r144,l0) a7(r140,l0) a10(r137,l0)
;;     total conflict hard regs: 0 2
;;     conflict hard regs: 0 2
;; a10(r137,l0) conflicts: a0(r133,l0) a4(r144,l0) a9(r150,l0) a11(r148,l0)
;;     total conflict hard regs: 0 2
;;     conflict hard regs: 0 2
;; a11(r148,l0) conflicts: a0(r133,l0) a4(r144,l0) a10(r137,l0)
;;     total conflict hard regs: 0 2
;;     conflict hard regs: 0 2
;; a12(r138,l0) conflicts: a0(r133,l0) a4(r144,l0)
;;     total conflict hard regs: 0 2
;;     conflict hard regs: 0 2
;; a13(r136,l0) conflicts:
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

  cp0:a0(r133)<->a13(r136)@125:shuffle
  cp1:a8(r149)<->a9(r150)@125:shuffle
  cp2:a6(r152)<->a8(r149)@125:shuffle
  cp3:a5(r139)<->a7(r140)@125:shuffle
  cp4:a3(r142)<->a5(r139)@125:shuffle
  regions=1, blocks=3, points=25
    allocnos=14, copies=5, conflicts=0, ranges=14

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r133 1r153 2r154 3r142 4r144 5r139 6r152 7r140 8r149 9r150 10r137 11r148 12r138 13r136
    modified regnos: 133 136 137 138 139 140 142 144 148 149 150 152 153 154
    border:
    Pressure: GENERAL_REGS=6
    Reg 133 of GENERAL_REGS has 4 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 2 regs less
    Reg 144 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 2 regs less
    Reg 149 of GENERAL_REGS has 2 regs less
    Reg 150 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
    Reg 148 of GENERAL_REGS has 2 regs less
    Reg 138 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a13(r136,l0)
      Pushing a6(r152,l0)
      Pushing a2(r154,l0)
      Pushing a1(r153,l0)
      Pushing a12(r138,l0)
      Pushing a11(r148,l0)
      Pushing a10(r137,l0)
      Pushing a9(r150,l0)
      Pushing a8(r149,l0)
      Pushing a7(r140,l0)
      Pushing a3(r142,l0)
      Pushing a5(r139,l0)
      Pushing a4(r144,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 4
      Popping a4(r144,l0)  -- assign reg 3
      Popping a5(r139,l0)  -- assign reg 12
      Popping a3(r142,l0)  -- assign reg 0
      Popping a7(r140,l0)  -- assign reg 12
      Popping a8(r149,l0)  -- assign reg 1
      Popping a9(r150,l0)  -- assign reg 1
      Popping a10(r137,l0)  -- assign reg 12
      Popping a11(r148,l0)  -- assign reg 1
      Popping a12(r138,l0)  -- assign reg 1
      Popping a1(r153,l0)  -- assign reg 3
      Popping a2(r154,l0)  -- assign reg 2
      Popping a6(r152,l0)  -- assign reg 1
      Popping a13(r136,l0)  -- assign reg 1
Disposition:
    0:r133 l0     4   13:r136 l0     1   10:r137 l0    12   12:r138 l0     1
    5:r139 l0    12    7:r140 l0    12    3:r142 l0     0    4:r144 l0     3
   11:r148 l0     1    8:r149 l0     1    9:r150 l0     1    6:r152 l0     1
    1:r153 l0     3    2:r154 l0     2
New iteration of spill/restore move
+++Costs: overall -4500, reg -4500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 0, 13, dead_or_set: 1, 136
insn=8, live_throughout: 0, 13, dead_or_set: 133, 136
insn=17, live_throughout: 0, 13, 133, dead_or_set: 144
insn=27, live_throughout: 0, 13, 133, 144, dead_or_set: 2
insn=45, live_throughout: 0, 2, 13, 133, 144, dead_or_set: 138
insn=10, live_throughout: 0, 2, 13, 133, 144, dead_or_set: 137, 138
insn=44, live_throughout: 0, 2, 13, 133, 137, 144, dead_or_set: 148
insn=21, live_throughout: 0, 2, 13, 133, 137, 144, dead_or_set: 148, 150
insn=11, live_throughout: 0, 2, 13, 133, 144, 150, dead_or_set: 137, 140
insn=22, live_throughout: 0, 2, 13, 133, 140, 144, dead_or_set: 149, 150
insn=24, live_throughout: 2, 13, 133, 140, 144, dead_or_set: 0, 149, 152
insn=41, live_throughout: 2, 13, 133, 144, 152, dead_or_set: 139, 140
insn=26, live_throughout: 2, 13, 133, 139, 144, dead_or_set: 1, 152
insn=42, live_throughout: 1, 2, 13, 133, 144, dead_or_set: 139
insn=14, live_throughout: 1, 2, 13, 133, 144, dead_or_set: 139, 142
insn=25, live_throughout: 1, 2, 13, 133, dead_or_set: 0, 142, 144
insn=28, live_throughout: 13, 133, dead_or_set: 0, 1, 2, 14
insn=29, live_throughout: 13, 133, dead_or_set: 0
insn=30, live_throughout: 13, 133, dead_or_set: 0, 14
insn=31, live_throughout: 13, 14, 133, dead_or_set: 153
insn=32, live_throughout: 13, 14, 133, 153, dead_or_set: 154
insn=33, live_throughout: 13, 14, dead_or_set: 133, 153, 154
init_insns for 138: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 44 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 32 (nil))
changing reg in insn 8
changing reg in insn 17
changing reg in insn 33
changing reg in insn 31
changing reg in insn 29
changing reg in insn 7
changing reg in insn 8
changing reg in insn 10
changing reg in insn 11
changing reg in insn 45
changing reg in insn 10
changing reg in insn 42
changing reg in insn 41
changing reg in insn 42
changing reg in insn 14
changing reg in insn 11
changing reg in insn 41
changing reg in insn 14
changing reg in insn 25
changing reg in insn 17
changing reg in insn 25
changing reg in insn 44
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 21
changing reg in insn 22
changing reg in insn 24
changing reg in insn 26
changing reg in insn 31
changing reg in insn 33
changing reg in insn 32
changing reg in insn 33
deleting insn with uid = 26.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 30.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


flush_pfn_alias

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,4u} r1={9d,7u} r2={5d,2u} r3={5d,2u} r4={1d,4u} r12={7d,4u} r13={1d,4u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 288{260d,28u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 5 3 2 NOTE_INSN_DELETED)

(note 3 2 4 2 NOTE_INSN_DELETED)

(note 4 3 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 4 15 2 NOTE_INSN_DELETED)

(note 15 12 16 2 NOTE_INSN_DELETED)

(note 16 15 18 2 NOTE_INSN_DELETED)

(note 18 16 19 2 NOTE_INSN_DELETED)

(note 19 18 23 2 NOTE_INSN_DELETED)

(note 23 19 7 2 NOTE_INSN_DELETED)

(insn 7 23 8 2 arch/arm/mm/flush.c:30 (set (reg:SI 1 r1 [136])
        (and:SI (reg:SI 1 r1 [ vaddr ])
            (const_int 12288 [0x3000]))) 67 {*arm_andsi3_insn} (nil))

(insn 8 7 17 2 arch/arm/mm/flush.c:30 (set (reg/v:SI 4 r4 [orig:133 to ] [133])
        (plus:SI (reg:SI 1 r1 [136])
            (const_int -49152 [0xffffffffffff4000]))) 4 {*arm_addsi3} (nil))

(insn 17 8 27 2 arch/arm/mm/flush.c:33 (set (reg:SI 3 r3 [144])
        (zero_extract:SI (reg/v:SI 4 r4 [orig:133 to ] [133])
            (const_int 9 [0x9])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 27 17 45 2 arch/arm/mm/flush.c:33 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 45 27 10 2 arch/arm/mm/flush.c:33 (set (reg/f:SI 1 r1 [138])
        (symbol_ref:SI ("top_pmd") [flags 0xc0] <var_decl 0x113ab5a0 top_pmd>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("top_pmd") [flags 0xc0] <var_decl 0x113ab5a0 top_pmd>)
        (nil)))

(insn 10 45 44 2 arch/arm/mm/flush.c:33 (set (reg/f:SI 12 ip [orig:137 top_pmd ] [137])
        (mem/f/c/i:SI (reg/f:SI 1 r1 [138]) [0 top_pmd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 44 10 21 2 arch/arm/mm/flush.c:33 (set (reg/f:SI 1 r1 [148])
        (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e730c0 pgprot_kernel>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e730c0 pgprot_kernel>)
        (nil)))

(insn 21 44 11 2 arch/arm/mm/flush.c:33 (set (reg:SI 1 r1 [orig:150 pgprot_kernel ] [150])
        (mem/c/i:SI (reg/f:SI 1 r1 [148]) [0 pgprot_kernel+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 21 22 2 arch/arm/mm/flush.c:33 (set (reg:SI 12 ip [140])
        (mem:SI (reg/f:SI 12 ip [orig:137 top_pmd ] [137]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 11 24 2 arch/arm/mm/flush.c:33 (set (reg:SI 1 r1 [149])
        (ior:SI (reg:SI 1 r1 [orig:150 pgprot_kernel ] [150])
            (const_int 512 [0x200]))) 89 {*arm_iorsi3} (nil))

(insn 24 22 41 2 arch/arm/mm/flush.c:33 (set (reg:SI 1 r1 [152])
        (ior:SI (ashift:SI (reg:SI 0 r0 [ pfn ])
                (const_int 12 [0xc]))
            (reg:SI 1 r1 [149]))) 270 {*arith_shiftsi} (nil))

(insn 41 24 42 2 arch/arm/mm/flush.c:33 (set (reg:SI 12 ip [139])
        (and:SI (reg:SI 12 ip [140])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 42 41 14 2 arch/arm/mm/flush.c:33 (set (reg:SI 12 ip [139])
        (and:SI (reg:SI 12 ip [139])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 42 25 2 arch/arm/mm/flush.c:33 (set (reg:SI 0 r0 [142])
        (plus:SI (reg:SI 12 ip [139])
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))

(insn 25 14 28 2 arch/arm/mm/flush.c:33 (set (reg:SI 0 r0)
        (plus:SI (mult:SI (reg:SI 3 r3 [144])
                (const_int 4 [0x4]))
            (reg:SI 0 r0 [142]))) 270 {*arith_shiftsi} (nil))

(call_insn 28 25 29 2 arch/arm/mm/flush.c:33 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_set_pte_ext") [flags 0x41] <function_decl 0x10e63d00 cpu_v7_set_pte_ext>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 29 28 30 2 arch/arm/mm/flush.c:34 (set (reg:SI 0 r0)
        (reg/v:SI 4 r4 [orig:133 to ] [133])) 167 {*arm_movsi_insn} (nil))

(call_insn 30 29 31 2 arch/arm/mm/flush.c:34 (parallel [
            (call (mem:SI (symbol_ref:SI ("flush_tlb_kernel_page") [flags 0x41] <function_decl 0x113b4100 flush_tlb_kernel_page>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 31 30 32 2 arch/arm/mm/flush.c:36 (set (reg:SI 3 r3 [153])
        (plus:SI (reg/v:SI 4 r4 [orig:133 to ] [133])
            (const_int 4064 [0xfe0]))) 4 {*arm_addsi3} (nil))

(insn 32 31 33 2 arch/arm/mm/flush.c:36 (set (reg:SI 2 r2 [154])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 33 32 43 2 arch/arm/mm/flush.c:36 (parallel [
            (asm_operands/v ("mcrr	p15, 0, %1, %0, c14
	mcr	p15, 0, %2, c7, c10, 4") ("") 0 [
                    (reg/v:SI 4 r4 [orig:133 to ] [133])
                    (reg:SI 3 r3 [153])
                    (reg:SI 2 r2 [154])
                ]
                 [
                    (asm_input:SI ("r") 0)
                    (asm_input:SI ("r") 0)
                    (asm_input:SI ("r") 0)
                ] 7719917)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 43 33 46 NOTE_INSN_DELETED)

(note 46 43 0 NOTE_INSN_DELETED)


;; Function flush_cache_page (flush_cache_page)[0:1228]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS

  a0(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 21(l0): point = 1
   Insn 19(l0): point = 3
   Insn 17(l0): point = 6
   Insn 16(l0): point = 8
   Insn 14(l0): point = 10
   Insn 13(l0): point = 12
   Insn 11(l0): point = 15
   Insn 10(l0): point = 17
   Insn 8(l0): point = 19
 a0(r141): [2..3]
 a1(r140): [9..10]
 a2(r138): [11..12]
 a3(r137): [18..19]
Compressing live ranges: from 22 to 8 - 36%
Ranges after the compression:
 a0(r141): [0..1]
 a1(r140): [2..3]
 a2(r138): [4..5]
 a3(r137): [6..7]
+++Allocating 0 bytes for conflict table (uncompressed size 32)
;; a0(r141,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r140,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r138,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r137,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=6, points=8
    allocnos=4, copies=0, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r141 1r140 2r138 3r137
    modified regnos: 137 138 140 141
    border:
    Pressure: GENERAL_REGS=2
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a3(r137,l0)
      Pushing a2(r138,l0)
      Pushing a1(r140,l0)
      Pushing a0(r141,l0)
      Popping a0(r141,l0)  -- assign reg 3
      Popping a1(r140,l0)  -- assign reg 3
      Popping a2(r138,l0)  -- assign reg 3
      Popping a3(r137,l0)  -- assign reg 3
Disposition:
    3:r137 l0     3    2:r138 l0     3    1:r140 l0     3    0:r141 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=8, live_throughout: 13, 14, dead_or_set: 0, 137
insn=10, live_throughout: 13, 14, dead_or_set: 137
insn=11, live_throughout: 13, 14, dead_or_set: 
insn=13, live_throughout: 13, 14, dead_or_set: 138
insn=14, live_throughout: 13, 14, dead_or_set: 138, 140
insn=16, live_throughout: 13, 14, dead_or_set: 140
insn=17, live_throughout: 13, 14, dead_or_set: 
insn=19, live_throughout: 13, dead_or_set: 141
insn=21, live_throughout: 13, dead_or_set: 14, 141
insn=27, live_throughout: 13, 14, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 19 (nil))
changing reg in insn 8
changing reg in insn 10
changing reg in insn 13
changing reg in insn 14
changing reg in insn 14
changing reg in insn 16
changing reg in insn 19
changing reg in insn 21


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
rescanning insn with uid = 21.
deleting insn with uid = 21.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


flush_cache_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={6d,4u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 144{130d,14u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 6 5 2 NOTE_INSN_DELETED)

(note 5 2 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 8 2 NOTE_INSN_DELETED)

(insn 8 9 10 2 arch/arm/mm/flush.c:102 (set (reg:SI 3 r3 [orig:137 <variable>.vm_flags ] [137])
        (mem/s/j:SI (plus:SI (reg:SI 0 r0 [ vma ])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 10 8 11 2 arch/arm/mm/flush.c:102 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:137 <variable>.vm_flags ] [137])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/flush.c:102 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  5 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 12 11 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 15 12 13 3 NOTE_INSN_DELETED)

(insn 13 15 14 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 3 r3 [138])
        (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>)
        (nil)))

(insn 14 13 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 3 r3 [orig:140 cacheid ] [140])
        (mem/c/i:SI (reg/f:SI 3 r3 [138]) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>) [0 cacheid+0 S4 A32])
        (nil)))

(insn 16 14 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:140 cacheid ] [140])
                (const_int 1 [0x1])
                (const_int 3 [0x3]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  4 [39.0%]  (fallthru)
;; Succ edge  5 [61.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [39.0%]  (fallthru)
(note 18 17 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 20 18 19 4 NOTE_INSN_DELETED)

(insn 19 20 21 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:204 (set (reg/f:SI 3 r3 [141])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
        (nil)))

(call_insn 21 19 27 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:204 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 3 r3 [141]) [0 cpu_cache.flush_icache_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
;; Pred edge  3 [61.0%] 
(code_label 27 21 30 5 15 "" [2 uses])

(note 30 27 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 31 30 32 NOTE_INSN_DELETED)

(note 32 31 0 NOTE_INSN_DELETED)


;; Function __flush_anon_page (__flush_anon_page)[0:1236]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 42.
verify found no changes in insn with uid = 42.
deleting insn with uid = 14.
scanning new insn with uid = 43.
verify found no changes in insn with uid = 43.
deleting insn with uid = 8.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

Pass 0 for finding allocno costs

    a1 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r146: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 31(l0): point = 1
   Insn 30(l0): point = 3
   Insn 27(l0): point = 5
   Insn 25(l0): point = 7
   Insn 26(l0): point = 9
   Insn 23(l0): point = 11
   Insn 20(l0): point = 13
   Insn 18(l0): point = 15
   Insn 16(l0): point = 17
   Insn 15(l0): point = 19
   Insn 42(l0): point = 21
   Insn 21(l0): point = 23
   Insn 19(l0): point = 25
   Insn 12(l0): point = 28
   Insn 11(l0): point = 30
   Insn 9(l0): point = 32
   Insn 43(l0): point = 34
   Insn 4(l0): point = 36
   Insn 3(l0): point = 38
 a0(r134): [2..7]
 a1(r146): [8..23]
 a2(r136): [10..38]
 a3(r142): [16..17]
 a4(r143): [18..19]
 a5(r141): [20..21]
 a6(r137): [26..36]
 a7(r140): [31..32]
 a8(r138): [33..34]
Compressing live ranges: from 41 to 18 - 43%
Ranges after the compression:
 a0(r134): [0..1]
 a1(r146): [2..10]
 a2(r136): [3..17]
 a3(r142): [4..5]
 a4(r143): [6..7]
 a5(r141): [8..9]
 a6(r137): [11..16]
 a7(r140): [12..13]
 a8(r138): [14..15]
+++Allocating 64 bytes for conflict table (uncompressed size 72)
;; a0(r134,l0) conflicts:
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r146,l0) conflicts: a2(r136,l0) a3(r142,l0) a4(r143,l0) a5(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r136,l0) conflicts: a1(r146,l0) a3(r142,l0) a4(r143,l0) a5(r141,l0) a6(r137,l0) a7(r140,l0) a8(r138,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a3(r142,l0) conflicts: a1(r146,l0) a2(r136,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a4(r143,l0) conflicts: a1(r146,l0) a2(r136,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a5(r141,l0) conflicts: a1(r146,l0) a2(r136,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a6(r137,l0) conflicts: a2(r136,l0) a7(r140,l0) a8(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r140,l0) conflicts: a2(r136,l0) a6(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r138,l0) conflicts: a2(r136,l0) a6(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a3(r142)<->a4(r143)@125:shuffle
  regions=1, blocks=5, points=18
    allocnos=9, copies=1, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r134 1r146 2r136 3r142 4r143 5r141 6r137 7r140 8r138
    modified regnos: 134 136 137 138 140 141 142 143 146
    border:
    Pressure: GENERAL_REGS=5
    Reg 134 of GENERAL_REGS has 3 regs less
    Reg 146 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 4 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
      Pushing a8(r138,l0)
      Pushing a7(r140,l0)
      Pushing a6(r137,l0)
      Pushing a5(r141,l0)
      Pushing a4(r143,l0)
      Pushing a3(r142,l0)
      Pushing a0(r134,l0)
      Pushing a1(r146,l0)
      Pushing a2(r136,l0)
      Popping a2(r136,l0)  -- assign reg 4
      Popping a1(r146,l0)  -- assign reg 5
      Popping a0(r134,l0)  -- assign reg 4
      Popping a3(r142,l0)  -- assign reg 0
      Popping a4(r143,l0)  -- assign reg 0
      Popping a5(r141,l0)  -- assign reg 3
      Popping a6(r137,l0)  -- assign reg 2
      Popping a7(r140,l0)  -- assign reg 3
      Popping a8(r138,l0)  -- assign reg 3
Disposition:
    0:r134 l0     4    2:r136 l0     4    6:r137 l0     2    8:r138 l0     3
    7:r140 l0     3    5:r141 l0     3    3:r142 l0     0    4:r143 l0     0
    1:r146 l0     5
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 2, 13, 14, dead_or_set: 1, 136
insn=4, live_throughout: 13, 14, 136, dead_or_set: 2, 137
insn=43, live_throughout: 13, 14, 136, 137, dead_or_set: 138
insn=9, live_throughout: 13, 14, 136, 137, dead_or_set: 138, 140
insn=11, live_throughout: 13, 14, 136, 137, dead_or_set: 140
insn=12, live_throughout: 13, 14, 136, 137, dead_or_set: 
insn=19, live_throughout: 13, 136, dead_or_set: 1, 137
insn=21, live_throughout: 1, 13, 136, dead_or_set: 146
insn=42, live_throughout: 1, 13, 136, 146, dead_or_set: 141
insn=15, live_throughout: 1, 13, 136, 146, dead_or_set: 141, 143
insn=16, live_throughout: 1, 13, 136, 146, dead_or_set: 142, 143
insn=18, live_throughout: 1, 13, 136, 146, dead_or_set: 0, 142
insn=20, live_throughout: 13, 136, 146, dead_or_set: 0, 1, 14
insn=23, live_throughout: 13, 136, 146, dead_or_set: 14
insn=26, live_throughout: 13, 146, dead_or_set: 0, 136
insn=25, live_throughout: 0, 13, dead_or_set: 134, 146
insn=27, live_throughout: 13, 134, dead_or_set: 0, 14
insn=30, live_throughout: 0, 13, 134, dead_or_set: 1
insn=31, live_throughout: 13, dead_or_set: 0, 1, 14, 134
insn=37, live_throughout: 13, 14, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 43 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 42 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 21 (nil))
changing reg in insn 25
changing reg in insn 31
changing reg in insn 3
changing reg in insn 26
changing reg in insn 16
changing reg in insn 4
changing reg in insn 19
changing reg in insn 43
changing reg in insn 9
changing reg in insn 9
changing reg in insn 11
changing reg in insn 42
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 15
changing reg in insn 16
changing reg in insn 21
changing reg in insn 23
changing reg in insn 25
deleting insn with uid = 4.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 20.
rescanning insn with uid = 23.
deleting insn with uid = 23.
verify found no changes in insn with uid = 27.
rescanning insn with uid = 31.
deleting insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


__flush_anon_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,5u} r1={7d,3u} r2={5d,1u} r3={8d,3u} r4={2d,3u} r5={1d,2u} r12={5d} r13={1d,8u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={5d,1u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 515{488d,27u,0e} in 18{14 regular + 4 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 5 3 2 NOTE_INSN_DELETED)

(insn 3 10 43 2 arch/arm/mm/flush.c:318 (set (reg/v/f:SI 4 r4 [orig:136 page ] [136])
        (reg:SI 1 r1 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 43 3 9 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 3 r3 [138])
        (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>)
        (nil)))

(insn 9 43 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 3 r3 [orig:140 cacheid ] [140])
        (mem/c/i:SI (reg/f:SI 3 r3 [138]) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>) [0 cacheid+0 S4 A32])
        (nil)))

(insn 11 9 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:140 cacheid ] [140])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 12 11 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp]
;; lr  use 	 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  2 [61.0%]  (fallthru)
(note 13 12 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 17 13 22 3 NOTE_INSN_DELETED)

(note 22 17 19 3 NOTE_INSN_DELETED)

(insn 19 22 21 3 arch/arm/mm/flush.c:336 (set (reg:SI 1 r1)
        (reg/v:SI 2 r2 [orig:137 vmaddr ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 21 19 42 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:204 (set (reg/f:SI 5 r5 [146])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
        (nil)))

(insn 42 21 15 3 arch/arm/mm/flush.c:336 (set (reg/f:SI 3 r3 [141])
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)
        (nil)))

(insn 15 42 16 3 arch/arm/mm/flush.c:336 (set (reg/f:SI 0 r0 [orig:143 mem_map ] [143])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [141]) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 16 15 18 3 arch/arm/mm/flush.c:336 (set (reg:SI 0 r0 [142])
        (minus:SI (reg/v/f:SI 4 r4 [orig:136 page ] [136])
            (reg/f:SI 0 r0 [orig:143 mem_map ] [143]))) 28 {*arm_subsi3_insn} (nil))

(insn 18 16 20 3 arch/arm/mm/flush.c:336 (set (reg:SI 0 r0)
        (ashiftrt:SI (reg:SI 0 r0 [142])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(call_insn 20 18 23 3 arch/arm/mm/flush.c:336 (parallel [
            (call (mem:SI (symbol_ref:SI ("flush_pfn_alias") [flags 0x3] <function_decl 0x113b4680 flush_pfn_alias>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 23 20 26 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:204 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 5 r5 [146]) [0 cpu_cache.flush_icache_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))

(insn 26 23 25 3 arch/arm/mm/flush.c:345 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:136 page ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 25 26 27 3 arch/arm/mm/flush.c:345 (set (reg/f:SI 4 r4 [orig:134 D.23187 ] [134])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 5 r5 [146])
                (const_int 24 [0x18])) [0 cpu_cache.flush_kern_dcache_area+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
                    (const_int 24 [0x18]))) [0 cpu_cache.flush_kern_dcache_area+0 S4 A32])
        (nil)))

(call_insn 27 25 30 3 arch/arm/mm/flush.c:345 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("page_address") [flags 0x41] <function_decl 0x10f7b880 page_address>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 27 31 3 arch/arm/mm/flush.c:345 (set (reg:SI 1 r1)
        (const_int 4096 [0x1000])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 37 3 arch/arm/mm/flush.c:345 (parallel [
            (call (mem:SI (reg/f:SI 4 r4 [orig:134 D.23187 ] [134]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 37 31 40 4 20 "" [1 uses])

(note 40 37 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 41 40 44 NOTE_INSN_DELETED)

(note 44 41 0 NOTE_INSN_DELETED)


;; Function __flush_dcache_page (__flush_dcache_page)[0:1232]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 75.
verify found no changes in insn with uid = 75.
deleting insn with uid = 57.
scanning new insn with uid = 76.
verify found no changes in insn with uid = 76.
deleting insn with uid = 43.
scanning new insn with uid = 77.
verify found no changes in insn with uid = 77.
deleting insn with uid = 24.
scanning new insn with uid = 78.
verify found no changes in insn with uid = 78.
deleting insn with uid = 11.
scanning new insn with uid = 79.
verify found no changes in insn with uid = 79.
deleting insn with uid = 9.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 12 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)

Pass 0 for finding allocno costs

    a1 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a11(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r154: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a11(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 64(l0): point = 1
   Insn 63(l0): point = 3
   Insn 60(l0): point = 5
   Insn 58(l0): point = 7
   Insn 75(l0): point = 9
   Insn 59(l0): point = 11
   Insn 49(l0): point = 14
   Insn 48(l0): point = 16
   Insn 47(l0): point = 18
   Insn 76(l0): point = 20
   Insn 46(l0): point = 22
   Insn 42(l0): point = 24
   Insn 41(l0): point = 26
   Insn 40(l0): point = 28
   Insn 38(l0): point = 31
   Insn 37(l0): point = 33
   Insn 35(l0): point = 35
   Insn 34(l0): point = 37
   Insn 30(l0): point = 40
   Insn 29(l0): point = 42
   Insn 28(l0): point = 44
   Insn 77(l0): point = 46
   Insn 27(l0): point = 48
   Insn 22(l0): point = 51
   Insn 21(l0): point = 53
   Insn 19(l0): point = 55
   Insn 18(l0): point = 57
   Insn 16(l0): point = 60
   Insn 15(l0): point = 62
   Insn 14(l0): point = 64
   Insn 13(l0): point = 66
   Insn 12(l0): point = 68
   Insn 79(l0): point = 70
   Insn 78(l0): point = 72
   Insn 8(l0): point = 74
   Insn 7(l0): point = 76
   Insn 3(l0): point = 78
 a0(r137): [2..7]
 a1(r154): [8..9]
 a2(r139): [43..78] [29..39] [12..13]
 a3(r133): [17..24]
 a4(r152): [19..20]
 a5(r151): [34..35]
 a6(r149): [36..37]
 a7(r147): [45..46]
 a8(r145): [63..64]
 a9(r146): [65..66]
 a10(r134): [65..68]
 a11(r144): [69..72]
 a12(r140): [69..74]
 a13(r143): [69..70]
 a14(r141): [75..76]
Compressing live ranges: from 81 to 31 - 38%
Ranges after the compression:
 a0(r137): [0..1]
 a1(r154): [2..3]
 a2(r139): [16..30] [10..15] [4..5]
 a3(r133): [6..9]
 a4(r152): [7..8]
 a5(r151): [11..12]
 a6(r149): [13..14]
 a7(r147): [17..18]
 a8(r145): [19..20]
 a9(r146): [21..22]
 a10(r134): [21..23]
 a11(r144): [24..26]
 a12(r140): [24..27]
 a13(r143): [24..25]
 a14(r141): [28..29]
+++Allocating 104 bytes for conflict table (uncompressed size 120)
;; a0(r137,l0) conflicts:
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r154,l0) conflicts:
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a2(r139,l0) conflicts: a5(r151,l0) a6(r149,l0) a7(r147,l0) a8(r145,l0) a9(r146,l0) a10(r134,l0) a13(r143,l0) a11(r144,l0) a12(r140,l0) a14(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r133,l0) conflicts: a4(r152,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a4(r152,l0) conflicts: a3(r133,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r151,l0) conflicts: a2(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r149,l0) conflicts: a2(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r147,l0) conflicts: a2(r139,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a8(r145,l0) conflicts: a2(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r146,l0) conflicts: a2(r139,l0) a10(r134,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a10(r134,l0) conflicts: a2(r139,l0) a9(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r144,l0) conflicts: a2(r139,l0) a13(r143,l0) a12(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a12(r140,l0) conflicts: a2(r139,l0) a13(r143,l0) a11(r144,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a13(r143,l0) conflicts: a2(r139,l0) a11(r144,l0) a12(r140,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a14(r141,l0) conflicts: a2(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a12(r140)<->a14(r141)@125:shuffle
  cp1:a10(r134)<->a12(r140)@125:shuffle
  cp2:a10(r134)<->a13(r143)@125:shuffle
  cp3:a10(r134)<->a11(r144)@125:shuffle
  cp4:a8(r145)<->a10(r134)@125:shuffle
  cp5:a8(r145)<->a9(r146)@125:shuffle
  regions=1, blocks=9, points=31
    allocnos=15, copies=6, conflicts=7, ranges=17

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r137 1r154 2r139 3r133 4r152 5r151 6r149 7r147 8r145 9r146 10r134 11r144 12r140 13r143 14r141
    modified regnos: 133 134 137 139 140 141 143 144 145 146 147 149 151 152 154
    border:
    Pressure: GENERAL_REGS=5
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 133 of GENERAL_REGS has 3 regs less
    Reg 152 of GENERAL_REGS has 3 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 3 regs less
      Pushing a14(r141,l0)
      Pushing a13(r143,l0)
      Pushing a12(r140,l0)
      Pushing a11(r144,l0)
      Pushing a9(r146,l0)
      Pushing a8(r145,l0)
      Pushing a10(r134,l0)
      Pushing a6(r149,l0)
      Pushing a5(r151,l0)
      Pushing a1(r154,l0)
      Pushing a7(r147,l0)
      Pushing a4(r152,l0)
      Pushing a3(r133,l0)
      Pushing a0(r137,l0)
      Pushing a2(r139,l0)
      Popping a2(r139,l0)  -- assign reg 4
      Popping a0(r137,l0)  -- assign reg 4
      Popping a3(r133,l0)  -- assign reg 4
      Popping a4(r152,l0)  -- assign reg 3
      Popping a7(r147,l0)  -- assign reg 3
      Popping a1(r154,l0)  -- assign reg 3
      Popping a5(r151,l0)  -- assign reg 3
      Popping a6(r149,l0)  -- assign reg 3
      Popping a10(r134,l0)  -- assign reg 3
      Popping a8(r145,l0)  -- assign reg 3
      Popping a9(r146,l0)  -- assign reg 2
      Popping a11(r144,l0)  -- assign reg 2
      Popping a12(r140,l0)  -- assign reg 3
      Popping a13(r143,l0)  -- assign reg 1
      Popping a14(r141,l0)  -- assign reg 3
Disposition:
    3:r133 l0     4   10:r134 l0     3    0:r137 l0     4    2:r139 l0     4
   12:r140 l0     3   14:r141 l0     3   13:r143 l0     1   11:r144 l0     2
    8:r145 l0     3    9:r146 l0     2    7:r147 l0     3    6:r149 l0     3
    5:r151 l0     3    4:r152 l0     3    1:r154 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=3, live_throughout: 13, dead_or_set: 1, 139
insn=7, live_throughout: 13, 139, dead_or_set: 141
insn=8, live_throughout: 13, 139, dead_or_set: 140, 141
insn=78, live_throughout: 13, 139, 140, dead_or_set: 144
insn=79, live_throughout: 13, 139, 140, 144, dead_or_set: 143
insn=12, live_throughout: 13, 139, dead_or_set: 134, 140, 143, 144
insn=13, live_throughout: 13, 134, 139, dead_or_set: 146
insn=14, live_throughout: 13, 139, dead_or_set: 134, 145, 146
insn=15, live_throughout: 13, 139, dead_or_set: 145
insn=16, live_throughout: 13, 139, dead_or_set: 
insn=18, live_throughout: 13, 139, dead_or_set: 0
insn=19, live_throughout: 13, 139, dead_or_set: 0, 14
insn=21, live_throughout: 0, 13, 14, 139, dead_or_set: 
insn=22, live_throughout: 0, 13, 14, 139, dead_or_set: 
insn=27, live_throughout: 0, 13, 139, dead_or_set: 1
insn=77, live_throughout: 0, 1, 13, 139, dead_or_set: 147
insn=28, live_throughout: 13, 139, dead_or_set: 0, 1, 14, 147
insn=29, live_throughout: 13, 14, dead_or_set: 0, 139
insn=30, live_throughout: 13, 14, dead_or_set: 0
insn=32, live_throughout: 13, 14, 139, dead_or_set: 
insn=34, live_throughout: 13, 14, 139, dead_or_set: 149
insn=35, live_throughout: 13, 14, 139, dead_or_set: 149, 151
insn=37, live_throughout: 13, 14, 139, dead_or_set: 151
insn=38, live_throughout: 13, 14, 139, dead_or_set: 
insn=40, live_throughout: 13, dead_or_set: 0, 139
insn=41, live_throughout: 13, dead_or_set: 0, 14
insn=42, live_throughout: 0, 13, dead_or_set: 133
insn=46, live_throughout: 0, 13, 133, dead_or_set: 1
insn=76, live_throughout: 0, 1, 13, 133, dead_or_set: 152
insn=47, live_throughout: 13, 133, dead_or_set: 0, 1, 14, 152
insn=48, live_throughout: 13, 14, dead_or_set: 0, 133
insn=49, live_throughout: 13, 14, dead_or_set: 0
insn=55, live_throughout: 13, 139, dead_or_set: 
insn=59, live_throughout: 13, dead_or_set: 0, 139
insn=75, live_throughout: 0, 13, dead_or_set: 154
insn=58, live_throughout: 0, 13, dead_or_set: 137, 154
insn=60, live_throughout: 13, 137, dead_or_set: 0, 14
insn=63, live_throughout: 0, 13, 137, dead_or_set: 1
insn=64, live_throughout: 13, dead_or_set: 0, 1, 14, 137
insn=70, live_throughout: 13, 14, dead_or_set: 
init_insns for 141: (insn_list:REG_DEP_TRUE 7 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 79 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 78 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 147: (insn_list:REG_DEP_TRUE 77 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 76 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 75 (nil))
changing reg in insn 42
changing reg in insn 48
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 13
changing reg in insn 58
changing reg in insn 64
changing reg in insn 3
changing reg in insn 59
changing reg in insn 40
changing reg in insn 29
changing reg in insn 18
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 12
changing reg in insn 7
changing reg in insn 8
changing reg in insn 79
changing reg in insn 12
changing reg in insn 78
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 13
changing reg in insn 14
changing reg in insn 77
changing reg in insn 28
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 37
changing reg in insn 76
changing reg in insn 47
changing reg in insn 75
changing reg in insn 58


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 19.
rescanning insn with uid = 28.
deleting insn with uid = 28.
verify found no changes in insn with uid = 30.
verify found no changes in insn with uid = 41.
rescanning insn with uid = 47.
deleting insn with uid = 47.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 60.
rescanning insn with uid = 64.
deleting insn with uid = 64.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 12 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


__flush_dcache_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={14d,10u} r1={13d,5u} r2={11d,2u} r3={18d,10u,1d} r4={3d,7u,1d} r12={9d} r13={1d,16u} r14={7d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={11d,3u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} 
;;    total ref usage 1023{967d,54u,2e} in 37{29 regular + 8 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 1 [r1] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 10 2 NOTE_INSN_FUNCTION_BEG)

(note 10 4 3 2 NOTE_INSN_DELETED)

(insn 3 10 7 2 arch/arm/mm/flush.c:169 (set (reg/v/f:SI 4 r4 [orig:139 page ] [139])
        (reg:SI 1 r1 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 7 3 8 2 include/linux/mm.h:692 (set (reg:SI 3 r3 [orig:141 <variable>.flags ] [141])
        (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:139 page ] [139]) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 4 r4 [orig:139 page ] [139]) [0 <variable>.flags+0 S4 A32])
        (nil)))

(insn 8 7 78 2 include/linux/mm.h:692 (set (reg:SI 3 r3 [140])
        (lshiftrt:SI (reg:SI 3 r3 [orig:141 <variable>.flags ] [141])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 78 8 79 2 include/linux/mm.h:692 (set (reg/f:SI 2 r2 [144])
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)
        (nil)))

(insn 79 78 12 2 include/linux/mm.h:692 (set (reg:SI 1 r1 [143])
        (const_int 768 [0x300])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 768 [0x300])
        (nil)))

(insn 12 79 13 2 include/linux/mm.h:692 (set (reg/f:SI 3 r3 [orig:134 D.23552 ] [134])
        (plus:SI (mult:SI (reg:SI 1 r1 [143])
                (reg:SI 3 r3 [140]))
            (reg/f:SI 2 r2 [144]))) 40 {*mulsi3addsi_v6} (nil))

(insn 13 12 14 2 include/linux/mmzone.h:741 (set (reg/f:SI 2 r2 [orig:146 <variable>.zone_pgdat ] [146])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:134 D.23552 ] [134])
                (const_int 748 [0x2ec])) [0 <variable>.zone_pgdat+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/f:SI 3 r3 [orig:134 D.23552 ] [134])
                (const_int 748 [0x2ec])) [0 <variable>.zone_pgdat+0 S4 A32])
        (nil)))

(insn 14 13 15 2 include/linux/mmzone.h:741 (set (reg:SI 3 r3 [145])
        (minus:SI (reg/f:SI 3 r3 [orig:134 D.23552 ] [134])
            (reg/f:SI 2 r2 [orig:146 <variable>.zone_pgdat ] [146]))) 28 {*arm_subsi3_insn} (nil))

(insn 15 14 16 2 include/linux/mmzone.h:741 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [145])
            (const_int 768 [0x300]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 2 include/linux/mmzone.h:741 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 2 -> ( 3 7)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  7 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [28.0%]  (fallthru)
(note 17 16 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 20 17 18 3 NOTE_INSN_DELETED)

(insn 18 20 19 3 arch/arm/mm/flush.c:178 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:139 page ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 18 21 3 arch/arm/mm/flush.c:178 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmap_high_get") [flags 0x41] <function_decl 0x111a2a00 kmap_high_get>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 21 19 22 3 arch/arm/mm/flush.c:179 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 23 3 arch/arm/mm/flush.c:179 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  5 [30.2%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [69.8%]  (fallthru)
(note 23 22 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 25 23 27 4 NOTE_INSN_DELETED)

(insn 27 25 77 4 arch/arm/mm/flush.c:180 (set (reg:SI 1 r1)
        (const_int 4096 [0x1000])) 167 {*arm_movsi_insn} (nil))

(insn 77 27 28 4 arch/arm/mm/flush.c:180 (set (reg/f:SI 3 r3 [147])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
        (nil)))

(call_insn 28 77 29 4 arch/arm/mm/flush.c:180 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [147])
                            (const_int 24 [0x18])) [0 cpu_cache.flush_kern_dcache_area+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 30 4 arch/arm/mm/flush.c:181 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:139 page ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 30 29 31 4 arch/arm/mm/flush.c:181 (parallel [
            (call (mem:SI (symbol_ref:SI ("kunmap_high") [flags 0x41] <function_decl 0x111a2980 kunmap_high>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 4 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 31 30 32)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  3 [30.2%] 
(code_label 32 31 33 5 25 "" [1 uses])

(note 33 32 36 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 36 33 34 5 NOTE_INSN_DELETED)

(insn 34 36 35 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 3 r3 [149])
        (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>)
        (nil)))

(insn 35 34 37 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 3 r3 [orig:151 cacheid ] [151])
        (mem/c/i:SI (reg/f:SI 3 r3 [149]) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>) [0 cacheid+0 S4 A32])
        (nil)))

(insn 37 35 38 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:151 cacheid ] [151])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 38 37 39 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 39 38 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 44 39 40 6 NOTE_INSN_DELETED)

(insn 40 44 41 6 arch/arm/mm/flush.c:184 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:139 page ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 42 6 arch/arm/mm/flush.c:184 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__kmap_atomic") [flags 0x41] <function_decl 0x111a2b80 __kmap_atomic>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 42 41 46 6 arch/arm/mm/flush.c:184 (set (reg/v/f:SI 4 r4 [orig:133 addr.488 ] [133])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 46 42 76 6 arch/arm/mm/flush.c:185 (set (reg:SI 1 r1)
        (const_int 4096 [0x1000])) 167 {*arm_movsi_insn} (nil))

(insn 76 46 47 6 arch/arm/mm/flush.c:185 (set (reg/f:SI 3 r3 [152])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
        (nil)))

(call_insn 47 76 48 6 arch/arm/mm/flush.c:185 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [152])
                            (const_int 24 [0x18])) [0 cpu_cache.flush_kern_dcache_area+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 48 47 49 6 arch/arm/mm/flush.c:186 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:133 addr.488 ] [133])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 49 48 50 6 arch/arm/mm/flush.c:186 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__kunmap_atomic") [flags 0x41] <function_decl 0x111a2c00 __kunmap_atomic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 50 49 55)

;; Start of basic block ( 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  2 [72.0%] 
(code_label 55 50 56 7 24 "" [1 uses])

(note 56 55 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 59 56 75 7 arch/arm/mm/flush.c:176 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:139 page ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 75 59 58 7 arch/arm/mm/flush.c:176 (set (reg/f:SI 3 r3 [154])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
        (nil)))

(insn 58 75 60 7 arch/arm/mm/flush.c:176 (set (reg/f:SI 4 r4 [orig:137 D.23053 ] [137])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 3 r3 [154])
                (const_int 24 [0x18])) [0 cpu_cache.flush_kern_dcache_area+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
                    (const_int 24 [0x18]))) [0 cpu_cache.flush_kern_dcache_area+0 S4 A32])
        (nil)))

(call_insn 60 58 63 7 arch/arm/mm/flush.c:176 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("page_address") [flags 0x41] <function_decl 0x10f7b880 page_address>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 63 60 64 7 arch/arm/mm/flush.c:176 (set (reg:SI 1 r1)
        (const_int 4096 [0x1000])) 167 {*arm_movsi_insn} (nil))

(call_insn 64 63 70 7 arch/arm/mm/flush.c:176 (parallel [
            (call (mem:SI (reg/f:SI 4 r4 [orig:137 D.23053 ] [137]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  5 [71.0%] 
(code_label 70 64 73 8 27 "" [1 uses])

(note 73 70 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 8 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 74 73 80 NOTE_INSN_DELETED)

(note 80 74 0 NOTE_INSN_DELETED)


;; Function flush_dcache_page (flush_dcache_page)[0:1235]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 84.
verify found no changes in insn with uid = 84.
deleting insn with uid = 6.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 24 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 28 (  1.9)

Pass 0 for finding allocno costs

    a1 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a1(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:110000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 71(l0): point = 1
   Insn 69(l0): point = 3
   Insn 70(l0): point = 5
   Insn 61(l0): point = 8
   Insn 59(l0): point = 10
   Insn 60(l0): point = 12
   Insn 56(l0): point = 15
   Insn 54(l0): point = 17
   Insn 52(l0): point = 20
   Insn 51(l0): point = 22
   Insn 50(l0): point = 24
   Insn 49(l0): point = 26
   Insn 48(l0): point = 28
   Insn 45(l0): point = 31
   Insn 44(l0): point = 33
   Insn 42(l0): point = 35
   Insn 43(l0): point = 37
   Insn 40(l0): point = 40
   Insn 39(l0): point = 42
   Insn 38(l0): point = 44
   Insn 36(l0): point = 47
   Insn 35(l0): point = 49
   Insn 80(l0): point = 52
   Insn 30(l0): point = 54
   Insn 28(l0): point = 57
   Insn 27(l0): point = 59
   Insn 22(l0): point = 62
   Insn 21(l0): point = 64
   Insn 20(l0): point = 66
   Insn 16(l0): point = 69
   Insn 15(l0): point = 71
   Insn 11(l0): point = 73
   Insn 13(l0): point = 75
   Insn 9(l0): point = 78
   Insn 8(l0): point = 80
   Insn 7(l0): point = 82
   Insn 84(l0): point = 84
   Insn 2(l0): point = 86
 a0(r136): [69..86] [13..61] [6..7]
 a1(r146): [16..17]
 a2(r135): [69..73] [57..61] [23..54]
 a3(r144): [34..35]
 a4(r145): [34..37]
 a5(r143): [43..44]
 a6(r139): [69..71] [55..61]
 a7(r133): [72..75]
 a8(r138): [81..82]
 a9(r137): [83..84]
Compressing live ranges: from 89 to 25 - 28%
Ranges after the compression:
 a0(r136): [15..24] [2..14] [0..1]
 a1(r146): [3..4]
 a2(r135): [15..18] [13..14] [5..11]
 a3(r144): [6..7]
 a4(r145): [6..8]
 a5(r143): [9..10]
 a6(r139): [15..16] [12..14]
 a7(r133): [17..19]
 a8(r138): [20..21]
 a9(r137): [22..23]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r136,l0) conflicts: a1(r146,l0) a2(r135,l0) a3(r144,l0) a4(r145,l0) a5(r143,l0) a6(r139,l0) a7(r133,l0) a8(r138,l0) a9(r137,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r146,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r135,l0) conflicts: a0(r136,l0) a3(r144,l0) a4(r145,l0) a5(r143,l0) a6(r139,l0) a7(r133,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r144,l0) conflicts: a0(r136,l0) a2(r135,l0) a4(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r145,l0) conflicts: a0(r136,l0) a2(r135,l0) a3(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r143,l0) conflicts: a0(r136,l0) a2(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r139,l0) conflicts: a0(r136,l0) a2(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r133,l0) conflicts: a0(r136,l0) a2(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r138,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r137,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a6(r139)<->a7(r133)@125:shuffle
  regions=1, blocks=15, points=25
    allocnos=10, copies=1, conflicts=3, ranges=15

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r136 1r146 2r135 3r144 4r145 5r143 6r139 7r133 8r138 9r137
    modified regnos: 133 135 136 137 138 139 143 144 145 146
    border:
    Pressure: GENERAL_REGS=5
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a9(r137,l0)
      Pushing a8(r138,l0)
      Pushing a6(r139,l0)
      Pushing a5(r143,l0)
      Pushing a4(r145,l0)
      Pushing a3(r144,l0)
      Pushing a1(r146,l0)
      Pushing a7(r133,l0)
      Pushing a0(r136,l0)
      Pushing a2(r135,l0)
      Popping a2(r135,l0)  -- assign reg 4
      Popping a0(r136,l0)  -- assign reg 5
      Popping a7(r133,l0)  -- assign reg 3
      Popping a1(r146,l0)  -- assign reg 3
      Popping a3(r144,l0)  -- assign reg 3
      Popping a4(r145,l0)  -- assign reg 2
      Popping a5(r143,l0)  -- assign reg 3
      Popping a6(r139,l0)  -- assign reg 3
      Popping a8(r138,l0)  -- assign reg 3
      Popping a9(r137,l0)  -- assign reg 3
Disposition:
    7:r133 l0     3    2:r135 l0     4    0:r136 l0     5    9:r137 l0     3
    8:r138 l0     3    6:r139 l0     3    5:r143 l0     3    3:r144 l0     3
    4:r145 l0     2    1:r146 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 136
insn=84, live_throughout: 13, 14, 136, dead_or_set: 137
insn=7, live_throughout: 13, 14, 136, dead_or_set: 137, 138
insn=8, live_throughout: 13, 14, 136, dead_or_set: 138
insn=9, live_throughout: 13, 14, 136, dead_or_set: 
insn=13, live_throughout: 13, 14, 136, dead_or_set: 133
insn=11, live_throughout: 13, 14, 133, 136, dead_or_set: 135
insn=15, live_throughout: 13, 14, 135, 136, dead_or_set: 133, 139
insn=16, live_throughout: 13, 14, 135, 136, 139, dead_or_set: 
insn=20, live_throughout: 13, dead_or_set: 0
insn=21, live_throughout: 0, 13, dead_or_set: 1
insn=22, live_throughout: 13, dead_or_set: 0, 1, 14
insn=24, live_throughout: 13, 14, 135, 136, 139, dead_or_set: 
insn=27, live_throughout: 13, 14, 135, 136, 139, dead_or_set: 
insn=28, live_throughout: 13, 14, 135, 136, 139, dead_or_set: 
insn=30, live_throughout: 13, 136, dead_or_set: 135, 139
insn=80, live_throughout: 13, 135, 136, dead_or_set: 
insn=33, live_throughout: 13, 14, 135, 136, dead_or_set: 
insn=35, live_throughout: 13, 14, 135, 136, dead_or_set: 
insn=36, live_throughout: 13, 14, 135, 136, dead_or_set: 
insn=38, live_throughout: 13, 14, 135, 136, dead_or_set: 143
insn=39, live_throughout: 13, 14, 135, 136, dead_or_set: 143
insn=40, live_throughout: 13, 14, 135, 136, dead_or_set: 
insn=43, live_throughout: 13, 14, 135, 136, dead_or_set: 145
insn=42, live_throughout: 13, 14, 135, 136, 145, dead_or_set: 144
insn=44, live_throughout: 13, 14, 135, 136, dead_or_set: 144, 145
insn=45, live_throughout: 13, 14, 135, 136, dead_or_set: 
insn=46, live_throughout: 13, 135, 136, dead_or_set: 
insn=48, live_throughout: 13, 135, 136, dead_or_set: 0
insn=49, live_throughout: 0, 13, 135, 136, dead_or_set: 1
insn=50, live_throughout: 13, 135, 136, dead_or_set: 0, 1, 14
insn=51, live_throughout: 13, 14, 136, dead_or_set: 135
insn=52, live_throughout: 13, 14, 136, dead_or_set: 
insn=54, live_throughout: 13, 136, dead_or_set: 146
insn=56, live_throughout: 13, 136, dead_or_set: 14, 146
insn=57, live_throughout: 13, 14, 136, dead_or_set: 
insn=60, live_throughout: 13, 14, dead_or_set: 1, 136
insn=59, live_throughout: 1, 13, 14, dead_or_set: 0
insn=61, live_throughout: 13, 14, dead_or_set: 0, 1
insn=67, live_throughout: 13, 14, 136, dead_or_set: 
insn=70, live_throughout: 13, 14, dead_or_set: 1, 136
insn=69, live_throughout: 1, 13, 14, dead_or_set: 0
insn=71, live_throughout: 13, 14, dead_or_set: 0, 1
insn=76, live_throughout: 13, 14, dead_or_set: 
init_insns for 137: (insn_list:REG_DEP_TRUE 84 (nil))
init_insns for 143: (insn_list:REG_DEP_TRUE 38 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 43 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 54 (nil))
changing reg in insn 13
changing reg in insn 15
changing reg in insn 15
changing reg in insn 30
changing reg in insn 11
changing reg in insn 27
changing reg in insn 51
changing reg in insn 48
changing reg in insn 43
changing reg in insn 42
changing reg in insn 38
changing reg in insn 35
changing reg in insn 43
changing reg in insn 38
changing reg in insn 2
changing reg in insn 60
changing reg in insn 70
changing reg in insn 13
changing reg in insn 49
changing reg in insn 11
changing reg in insn 8
changing reg in insn 84
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 15
changing reg in insn 30
changing reg in insn 38
changing reg in insn 39
changing reg in insn 42
changing reg in insn 44
changing reg in insn 43
changing reg in insn 44
changing reg in insn 54
changing reg in insn 56


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 50.
rescanning insn with uid = 56.
deleting insn with uid = 56.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 71.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 24 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 15 n_edges 20 count 28 (  1.9)


flush_dcache_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,5u} r1={10d,4u} r2={7d,1u} r3={13d,8u} r4={2d,7u,2d} r5={1d,6u} r12={6d} r13={1d,19u} r14={4d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={12d,7u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} 
;;    total ref usage 676{616d,58u,2e} in 38{33 regular + 5 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 84 2 arch/arm/mm/flush.c:282 (set (reg/v/f:SI 5 r5 [orig:136 page ] [136])
        (reg:SI 0 r0 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 84 2 7 2 arch/arm/mm/flush.c:289 (set (reg/f:SI 3 r3 [137])
        (symbol_ref:SI ("empty_zero_page") [flags 0xc0] <var_decl 0x10e73ea0 empty_zero_page>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("empty_zero_page") [flags 0xc0] <var_decl 0x10e73ea0 empty_zero_page>)
        (nil)))

(insn 7 84 8 2 arch/arm/mm/flush.c:289 (set (reg/f:SI 3 r3 [orig:138 empty_zero_page ] [138])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [137]) [0 empty_zero_page+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("empty_zero_page") [flags 0xc0] <var_decl 0x10e73ea0 empty_zero_page>) [0 empty_zero_page+0 S4 A32])
        (nil)))

(insn 8 7 9 2 arch/arm/mm/flush.c:289 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:136 page ] [136])
            (reg/f:SI 3 r3 [orig:138 empty_zero_page ] [138]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/mm/flush.c:289 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil)))
;; End of basic block 2 -> ( 14 3)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  14 [10.1%] 
;; Succ edge  3 [89.9%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  2 [89.9%]  (fallthru)
(note 10 9 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 10 13 3 NOTE_INSN_DELETED)

(insn 13 14 11 3 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:133 D.23585 ] [133])
        (mem/v:SI (reg/v/f:SI 5 r5 [orig:136 page ] [136]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 13 15 3 include/linux/mm.h:788 (set (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:136 page ] [136])
                (const_int 4 [0x4])) [0 <variable>.mapping+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 11 16 3 include/linux/mm.h:790 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 3 r3 [orig:133 D.23585 ] [133])
                        (const_int 128 [0x80]))
                    (const_int 0 [0x0])))
            (set (reg:SI 3 r3 [139])
                (and:SI (reg:SI 3 r3 [orig:133 D.23585 ] [133])
                    (const_int 128 [0x80])))
        ]) 69 {*andsi3_compare0} (nil))

(jump_insn 16 15 17 3 include/linux/mm.h:790 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru)
(note 17 16 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 17 21 4 include/linux/mm.h:790 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11457720>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11457720>)
        (nil)))

(insn 21 20 22 4 include/linux/mm.h:790 discrim 1 (set (reg:SI 1 r1)
        (const_int 790 [0x316])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 790 [0x316])
        (nil)))

(call_insn 22 21 23 4 include/linux/mm.h:790 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 23 22 24)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 24 23 25 5 32 "" [1 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 26 25 27 5 NOTE_INSN_DELETED)

(insn 27 26 28 5 include/linux/mm.h:793 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 28 27 29 5 include/linux/mm.h:793 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 5 [r5] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 3 [r3] 5 [r5] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  5 [50.0%]  (fallthru)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 80 6 include/linux/mm.h:794 (set (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])
        (reg:SI 3 r3 [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 80 30 81 6 (set (pc)
        (label_ref 46)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 10)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 81 80 33)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [50.0%] 
(code_label 33 81 34 7 33 "" [1 uses])

(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 7 arch/arm/mm/flush.c:294 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 36 35 37 7 arch/arm/mm/flush.c:294 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 0 [0x0])
        (nil)))
;; End of basic block 7 -> ( 8 10)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)
;; Succ edge  10

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 8 include/linux/prio_tree.h:86 (set (reg/f:SI 3 r3 [orig:143 <variable>.i_mmap.prio_tree_node ] [143])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])
                (const_int 28 [0x1c])) [0 <variable>.i_mmap.prio_tree_node+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])
                (const_int 28 [0x1c])) [0 <variable>.i_mmap.prio_tree_node+0 S4 A32])
        (nil)))

(insn 39 38 40 8 include/linux/prio_tree.h:86 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:143 <variable>.i_mmap.prio_tree_node ] [143])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 41 8 include/linux/prio_tree.h:86 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  10 [85.0%] 
;; Succ edge  9 [15.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [15.0%]  (fallthru)
(note 41 40 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 41 42 9 include/linux/fs.h:711 (set (reg/f:SI 2 r2 [orig:145 <variable>.i_mmap_nonlinear.next ] [145])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])
                (const_int 36 [0x24])) [0 <variable>.i_mmap_nonlinear.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])
                (const_int 36 [0x24])) [0 <variable>.i_mmap_nonlinear.next+0 S4 A32])
        (nil)))

(insn 42 43 44 9 include/linux/fs.h:711 (set (reg/f:SI 3 r3 [144])
        (plus:SI (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])
            (const_int 36 [0x24]))) 4 {*arm_addsi3} (nil))

(insn 44 42 45 9 include/linux/fs.h:711 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 2 r2 [orig:145 <variable>.i_mmap_nonlinear.next ] [145])
            (reg/f:SI 3 r3 [144]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 45 44 46 9 include/linux/fs.h:711 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 9 -> ( 10 13)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]


;; Succ edge  10 [85.0%]  (fallthru)
;; Succ edge  13 [15.0%] 

;; Start of basic block ( 7 9 8 6) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  7
;; Pred edge  9 [85.0%]  (fallthru)
;; Pred edge  8 [85.0%] 
;; Pred edge  6 [100.0%] 
(code_label 46 45 47 10 34 "" [3 uses])

(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 10 arch/arm/mm/flush.c:298 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 10 arch/arm/mm/flush.c:298 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:136 page ] [136])) 167 {*arm_movsi_insn} (nil))

(call_insn 50 49 51 10 arch/arm/mm/flush.c:298 (parallel [
            (call (mem:SI (symbol_ref:SI ("__flush_dcache_page") [flags 0x3] <function_decl 0x113b4500 __flush_dcache_page>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 51 50 52 10 arch/arm/mm/flush.c:301 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 4 r4 [orig:135 mapping ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 53 10 arch/arm/mm/flush.c:301 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 10 -> ( 11 12)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  11 [69.8%]  (fallthru)
;; Succ edge  12 [30.2%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  10 [69.8%]  (fallthru)
(note 53 52 55 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 55 53 54 11 NOTE_INSN_DELETED)

(insn 54 55 56 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:204 (set (reg/f:SI 3 r3 [146])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
        (nil)))

(call_insn 56 54 57 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:204 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 3 r3 [146]) [0 cpu_cache.flush_icache_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [30.2%] 
(code_label 57 56 58 12 36 "" [1 uses])

(note 58 57 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 60 58 59 12 arch/arm/mm/flush.c:303 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:136 page ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 59 60 61 12 arch/arm/mm/flush.c:303 (set (reg:SI 0 r0)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 61 59 62 12 arch/arm/mm/flush.c:303 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109c0500 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 12 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 62 61 67)

;; Start of basic block ( 9) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  9 [15.0%] 
(code_label 67 62 68 13 35 "" [1 uses])

(note 68 67 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 70 68 69 13 arch/arm/mm/flush.c:296 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:136 page ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 69 70 71 13 arch/arm/mm/flush.c:296 (set (reg:SI 0 r0)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 71 69 72 13 arch/arm/mm/flush.c:296 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x109c0580 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 13 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 72 71 76)

;; Start of basic block ( 2) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [10.1%] 
(code_label 76 72 79 14 37 "" [1 uses])

(note 79 76 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 14 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 83 79 85 NOTE_INSN_DELETED)

(note 85 83 0 NOTE_INSN_DELETED)


;; Function __sync_icache_dcache (__sync_icache_dcache)[0:1234]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 67.
verify found no changes in insn with uid = 67.
deleting insn with uid = 30.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 16 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 16 count 20 (  1.8)

Pass 0 for finding allocno costs

    a0 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000


Pass 1 for finding allocno costs

    r149: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000

   Insn 52(l0): point = 1
   Insn 50(l0): point = 3
   Insn 48(l0): point = 6
   Insn 47(l0): point = 8
   Insn 43(l0): point = 11
   Insn 42(l0): point = 13
   Insn 39(l0): point = 16
   Insn 38(l0): point = 18
   Insn 36(l0): point = 20
   Insn 35(l0): point = 22
   Insn 33(l0): point = 24
   Insn 32(l0): point = 26
   Insn 67(l0): point = 28
   Insn 34(l0): point = 30
   Insn 28(l0): point = 33
   Insn 27(l0): point = 35
   Insn 25(l0): point = 37
   Insn 24(l0): point = 39
   Insn 23(l0): point = 41
   Insn 20(l0): point = 44
   Insn 19(l0): point = 46
   Insn 16(l0): point = 49
   Insn 15(l0): point = 51
   Insn 13(l0): point = 53
   Insn 12(l0): point = 55
   Insn 10(l0): point = 58
   Insn 9(l0): point = 60
   Insn 6(l0): point = 62
   Insn 64(l0): point = 64
   Insn 63(l0): point = 66
   Insn 2(l0): point = 68
 a0(r149): [2..3]
 a1(r137): [9..68]
 a2(r133): [14..24]
 a3(r147): [25..26]
 a4(r134): [25..41]
 a5(r145): [27..28]
 a6(r143): [52..53]
 a7(r141): [54..55]
 a8(r139): [61..62]
 a9(r138): [61..66]
Compressing live ranges: from 71 to 18 - 25%
Ranges after the compression:
 a0(r149): [0..1]
 a1(r137): [2..17]
 a2(r133): [3..4]
 a3(r147): [5..6]
 a4(r134): [5..9]
 a5(r145): [7..8]
 a6(r143): [10..11]
 a7(r141): [12..13]
 a8(r139): [14..15]
 a9(r138): [14..16]
+++Allocating 72 bytes for conflict table (uncompressed size 80)
;; a0(r149,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a2(r133,l0) a3(r147,l0) a4(r134,l0) a5(r145,l0) a6(r143,l0) a7(r141,l0) a8(r139,l0) a9(r138,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r133,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r147,l0) conflicts: a1(r137,l0) a4(r134,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a4(r134,l0) conflicts: a1(r137,l0) a3(r147,l0) a5(r145,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a5(r145,l0) conflicts: a1(r137,l0) a4(r134,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a6(r143,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r141,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r139,l0) conflicts: a1(r137,l0) a9(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r138,l0) conflicts: a1(r137,l0) a8(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r133)<->a3(r147)@125:shuffle
  cp1:a2(r133)<->a4(r134)@125:shuffle
  regions=1, blocks=11, points=18
    allocnos=10, copies=2, conflicts=3, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 10 9 8 7 6 5 4 3 2
    all: 0r149 1r137 2r133 3r147 4r134 5r145 6r143 7r141 8r139 9r138
    modified regnos: 133 134 137 138 139 141 143 145 147 149
    border:
    Pressure: GENERAL_REGS=5
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 133 of GENERAL_REGS has 3 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
      Pushing a8(r139,l0)
      Pushing a7(r141,l0)
      Pushing a6(r143,l0)
      Pushing a5(r145,l0)
      Pushing a3(r147,l0)
      Pushing a0(r149,l0)
      Pushing a9(r138,l0)
      Pushing a4(r134,l0)
      Pushing a2(r133,l0)
      Pushing a1(r137,l0)
      Popping a1(r137,l0)  -- assign reg 4
      Popping a2(r133,l0)  -- assign reg 5
      Popping a4(r134,l0)  -- assign reg 5
      Popping a9(r138,l0)  -- assign reg 3
      Popping a0(r149,l0)  -- assign reg 3
      Popping a3(r147,l0)  -- assign reg 3
      Popping a5(r145,l0)  -- assign reg 3
      Popping a6(r143,l0)  -- assign reg 3
      Popping a7(r141,l0)  -- assign reg 3
      Popping a8(r139,l0)  -- assign reg 2
Disposition:
    2:r133 l0     5    4:r134 l0     5    1:r137 l0     4    9:r138 l0     3
    8:r139 l0     2    7:r141 l0     3    6:r143 l0     3    5:r145 l0     3
    3:r147 l0     3    0:r149 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 137
insn=63, live_throughout: 13, 14, 137, dead_or_set: 138
insn=64, live_throughout: 13, 14, 137, dead_or_set: 138
insn=6, live_throughout: 13, 14, 137, 138, dead_or_set: 139
insn=9, live_throughout: 13, 14, 137, dead_or_set: 138, 139
insn=10, live_throughout: 13, 14, 137, dead_or_set: 
insn=12, live_throughout: 13, 14, 137, dead_or_set: 141
insn=13, live_throughout: 13, 14, 137, dead_or_set: 141, 143
insn=15, live_throughout: 13, 14, 137, dead_or_set: 143
insn=16, live_throughout: 13, 14, 137, dead_or_set: 
insn=19, live_throughout: 13, 14, 137, dead_or_set: 
insn=20, live_throughout: 13, 14, 137, dead_or_set: 
insn=21, live_throughout: 13, 137, dead_or_set: 
insn=23, live_throughout: 13, 137, dead_or_set: 134
insn=24, live_throughout: 13, 134, 137, dead_or_set: 0
insn=25, live_throughout: 13, 134, 137, dead_or_set: 0, 14
insn=27, live_throughout: 13, 14, 134, 137, dead_or_set: 0
insn=28, live_throughout: 13, 14, 134, 137, dead_or_set: 
insn=34, live_throughout: 13, 134, 137, dead_or_set: 0
insn=67, live_throughout: 0, 13, 134, 137, dead_or_set: 145
insn=32, live_throughout: 0, 13, 134, 137, dead_or_set: 145, 147
insn=33, live_throughout: 0, 13, 137, dead_or_set: 133, 134, 147
insn=35, live_throughout: 0, 13, 133, 137, dead_or_set: 1
insn=36, live_throughout: 13, 133, 137, dead_or_set: 0, 1, 14
insn=38, live_throughout: 0, 13, 14, 133, 137, dead_or_set: 
insn=39, live_throughout: 0, 13, 14, 133, 137, dead_or_set: 
insn=42, live_throughout: 0, 13, 137, dead_or_set: 1, 133
insn=43, live_throughout: 13, 137, dead_or_set: 0, 1, 14
insn=44, live_throughout: 13, 14, 137, dead_or_set: 
insn=47, live_throughout: 13, 14, dead_or_set: 137
insn=48, live_throughout: 13, 14, dead_or_set: 
insn=50, live_throughout: 13, dead_or_set: 149
insn=52, live_throughout: 13, dead_or_set: 14, 149
insn=58, live_throughout: 13, 14, dead_or_set: 
init_insns for 139: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 141: (insn_list:REG_DEP_TRUE 12 (nil))
init_insns for 145: (insn_list:REG_DEP_TRUE 67 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 50 (nil))
changing reg in insn 33
changing reg in insn 42
changing reg in insn 35
changing reg in insn 23
changing reg in insn 33
changing reg in insn 24
changing reg in insn 2
changing reg in insn 64
changing reg in insn 47
changing reg in insn 19
changing reg in insn 23
changing reg in insn 64
changing reg in insn 63
changing reg in insn 64
changing reg in insn 9
changing reg in insn 9
changing reg in insn 6
changing reg in insn 9
changing reg in insn 12
changing reg in insn 13
changing reg in insn 13
changing reg in insn 15
changing reg in insn 67
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 50
changing reg in insn 52


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 43.
rescanning insn with uid = 52.
deleting insn with uid = 52.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 16 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 16 count 20 (  1.8)


__sync_icache_dcache

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,6u} r1={7d,2u} r2={6d,1u} r3={12d,7u,1d} r4={1d,4u} r5={2d,4u} r12={5d} r13={1d,14u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={10d,6u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 542{496d,45u,1e} in 31{27 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 63 2 arch/arm/mm/flush.c:234 (set (reg/v:SI 4 r4 [orig:137 pteval ] [137])
        (reg:SI 0 r0 [ pteval ])) 167 {*arm_movsi_insn} (nil))

(insn 63 2 64 2 arch/arm/mm/flush.c:239 (set (reg:SI 3 r3 [138])
        (const_int 257 [0x101])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 257 [0x101])
        (nil)))

(insn 64 63 6 2 arch/arm/mm/flush.c:239 (set (reg:SI 3 r3 [138])
        (and:SI (reg/v:SI 4 r4 [orig:137 pteval ] [137])
            (reg:SI 3 r3 [138]))) 67 {*arm_andsi3_insn} (nil))

(insn 6 64 9 2 arch/arm/mm/flush.c:239 (set (reg:SI 2 r2 [139])
        (const_int 257 [0x101])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 257 [0x101])
        (nil)))

(insn 9 6 10 2 arch/arm/mm/flush.c:239 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [138])
            (reg:SI 2 r2 [139]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 3 r3 [138])
            (const_int 257 [0x101]))
        (nil)))

(jump_insn 10 9 11 2 arch/arm/mm/flush.c:239 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 2 -> ( 10 3)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  10 [62.2%] 
;; Succ edge  3 [37.8%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [37.8%]  (fallthru)
(note 11 10 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 11 12 3 NOTE_INSN_DELETED)

(insn 12 14 13 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 3 r3 [141])
        (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>)
        (nil)))

(insn 13 12 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 3 r3 [orig:143 cacheid ] [143])
        (mem/c/i:SI (reg/f:SI 3 r3 [141]) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>) [0 cacheid+0 S4 A32])
        (nil)))

(insn 15 13 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:143 cacheid ] [143])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [71.0%]  (fallthru)
;; Succ edge  5 [29.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [71.0%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 18 17 19 4 NOTE_INSN_DELETED)

(insn 19 18 20 4 arch/arm/mm/flush.c:241 discrim 1 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:137 pteval ] [137])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 20 19 21 4 arch/arm/mm/flush.c:241 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 10 5)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  10 [39.0%] 
;; Succ edge  5 [61.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [29.0%] 
;; Pred edge  4 [61.0%]  (fallthru)
(code_label 21 20 22 5 42 "" [1 uses])

(note 22 21 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 26 22 23 5 NOTE_INSN_DELETED)

(insn 23 26 24 5 arch/arm/mm/flush.c:244 (set (reg/v:SI 5 r5 [orig:134 pfn ] [134])
        (lshiftrt:SI (reg/v:SI 4 r4 [orig:137 pteval ] [137])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 25 5 arch/arm/mm/flush.c:245 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:134 pfn ] [134])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 27 5 arch/arm/mm/flush.c:245 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pfn_valid") [flags 0x41] <function_decl 0x10c01c80 pfn_valid>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 27 25 28 5 arch/arm/mm/flush.c:245 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 28 27 29 5 arch/arm/mm/flush.c:245 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 5 -> ( 10 6)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  10 [39.0%] 
;; Succ edge  6 [61.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [61.0%]  (fallthru)
(note 29 28 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 31 29 37 6 NOTE_INSN_DELETED)

(note 37 31 34 6 NOTE_INSN_DELETED)

(insn 34 37 67 6 arch/arm/mm/flush.c:254 (set (reg:SI 0 r0)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(insn 67 34 32 6 arch/arm/mm/flush.c:248 (set (reg/f:SI 3 r3 [145])
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)
        (nil)))

(insn 32 67 33 6 arch/arm/mm/flush.c:248 (set (reg/f:SI 3 r3 [orig:147 mem_map ] [147])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [145]) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 33 32 35 6 arch/arm/mm/flush.c:248 (set (reg/v/f:SI 5 r5 [orig:133 page ] [133])
        (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:134 pfn ] [134])
                (const_int 32 [0x20]))
            (reg/f:SI 3 r3 [orig:147 mem_map ] [147]))) 270 {*arith_shiftsi} (nil))

(insn 35 33 36 6 arch/arm/mm/flush.c:254 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:133 page ] [133])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 35 38 6 arch/arm/mm/flush.c:254 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_test_and_set_bit") [flags 0x41] <function_decl 0x109c0680 _test_and_set_bit>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 38 36 39 6 arch/arm/mm/flush.c:254 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 39 38 40 6 arch/arm/mm/flush.c:254 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  7 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 0 [r0] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  6 [29.0%]  (fallthru)
(note 40 39 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 42 40 43 7 arch/arm/mm/flush.c:255 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:133 page ] [133])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 7 arch/arm/mm/flush.c:255 (parallel [
            (call (mem:SI (symbol_ref:SI ("__flush_dcache_page") [flags 0x3] <function_decl 0x113b4500 __flush_dcache_page>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [71.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 44 43 45 8 43 "" [1 uses])

(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 46 45 47 8 NOTE_INSN_DELETED)

(insn 47 46 48 8 arch/arm/mm/flush.c:257 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:137 pteval ] [137])
                (const_int 1 [0x1])
                (const_int 9 [0x9]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 48 47 49 8 arch/arm/mm/flush.c:257 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  9 [39.0%]  (fallthru)
;; Succ edge  10 [61.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  8 [39.0%]  (fallthru)
(note 49 48 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 51 49 50 9 NOTE_INSN_DELETED)

(insn 50 51 52 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:204 (set (reg/f:SI 3 r3 [149])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
        (nil)))

(call_insn 52 50 58 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:204 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (reg/f:SI 3 r3 [149]) [0 cpu_cache.flush_icache_all+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 2 4 5 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  2 [62.2%] 
;; Pred edge  4 [39.0%] 
;; Pred edge  5 [39.0%] 
;; Pred edge  8 [61.0%] 
(code_label 58 52 61 10 44 "" [4 uses])

(note 61 58 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 66 61 68 NOTE_INSN_DELETED)

(note 68 66 0 NOTE_INSN_DELETED)


;; Function copy_to_user_page (copy_to_user_page)[0:1231]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 127.
verify found no changes in insn with uid = 127.
deleting insn with uid = 49.
scanning new insn with uid = 128.
verify found no changes in insn with uid = 128.
deleting insn with uid = 52.
scanning new insn with uid = 129.
verify found no changes in insn with uid = 129.
deleting insn with uid = 40.
scanning new insn with uid = 130.
verify found no changes in insn with uid = 130.
deleting insn with uid = 26.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 13 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)

Pass 0 for finding allocno costs

    a4 (r197,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r173,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a2(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a18(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r143,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a33(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r197: preferred GENERAL_REGS, alternative NO_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r137,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a2(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a5(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a6(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a8(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a18(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r143,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a33(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 104(l0): point = 1
   Insn 102(l0): point = 4
   Insn 101(l0): point = 6
   Insn 99(l0): point = 8
   Insn 95(l0): point = 10
   Insn 94(l0): point = 12
   Insn 93(l0): point = 14
   Insn 92(l0): point = 16
   Insn 121(l0): point = 18
   Insn 120(l0): point = 20
   Insn 88(l0): point = 22
   Insn 85(l0): point = 25
   Insn 84(l0): point = 27
   Insn 83(l0): point = 29
   Insn 118(l0): point = 32
   Insn 74(l0): point = 34
   Insn 73(l0): point = 36
   Insn 72(l0): point = 38
   Insn 68(l0): point = 40
   Insn 67(l0): point = 42
   Insn 66(l0): point = 44
   Insn 64(l0): point = 46
   Insn 63(l0): point = 48
   Insn 62(l0): point = 50
   Insn 61(l0): point = 52
   Insn 58(l0): point = 54
   Insn 59(l0): point = 56
   Insn 45(l0): point = 58
   Insn 123(l0): point = 60
   Insn 55(l0): point = 62
   Insn 122(l0): point = 64
   Insn 51(l0): point = 66
   Insn 54(l0): point = 68
   Insn 42(l0): point = 70
   Insn 50(l0): point = 72
   Insn 127(l0): point = 74
   Insn 53(l0): point = 76
   Insn 128(l0): point = 78
   Insn 41(l0): point = 80
   Insn 129(l0): point = 82
   Insn 60(l0): point = 84
   Insn 46(l0): point = 86
   Insn 39(l0): point = 88
   Insn 35(l0): point = 91
   Insn 116(l0): point = 93
   Insn 34(l0): point = 95
   Insn 31(l0): point = 98
   Insn 27(l0): point = 100
   Insn 130(l0): point = 102
   Insn 30(l0): point = 104
   Insn 28(l0): point = 106
   Insn 24(l0): point = 108
   Insn 23(l0): point = 110
   Insn 21(l0): point = 112
   Insn 22(l0): point = 114
   Insn 17(l0): point = 116
   Insn 7(l0): point = 118
   Insn 16(l0): point = 120
   Insn 15(l0): point = 122
   Insn 6(l0): point = 124
   Insn 14(l0): point = 126
   Insn 5(l0): point = 128
   Insn 4(l0): point = 130
   Insn 3(l0): point = 132
   Insn 125(l0): point = 134
   Insn 2(l0): point = 136
   Insn 124(l0): point = 138
 a0(r134): [7..8]
 a1(r137): [9..20]
 a2(r194): [13..14]
 a3(r193): [15..16]
 a4(r197): [35..93] [26..31]
 a5(r149): [37..118] [28..31]
 a6(r147): [91..128] [30..31]
 a7(r140): [39..44]
 a8(r184): [45..46]
 a9(r141): [45..88]
 a10(r182): [47..48]
 a11(r183): [49..50]
 a12(r146): [51..130]
 a13(r168): [55..58]
 a14(r169): [55..86]
 a15(r173): [57..66]
 a16(r179): [57..62]
 a17(r165): [59..64]
 a18(r176): [63..68]
 a19(r166): [65..70]
 a20(r174): [67..72]
 a21(r177): [69..76]
 a22(r145): [69..132]
 a23(r163): [71..80]
 a24(r172): [73..74]
 a25(r175): [77..78]
 a26(r164): [81..82]
 a27(r139): [96..100]
 a28(r157): [101..102]
 a29(r159): [105..106]
 a30(r144): [107..136]
 a31(r148): [115..124]
 a32(r143): [121..138]
 a33(r152): [121..122]
 a34(r151): [123..126]
Compressing live ranges: from 141 to 69 - 48%
Ranges after the compression:
 a0(r134): [0..1]
 a1(r137): [2..7]
 a2(r194): [3..4]
 a3(r193): [5..6]
 a4(r197): [12..49] [8..11]
 a5(r149): [13..58] [9..11]
 a6(r147): [48..64] [10..11]
 a7(r140): [14..15]
 a8(r184): [16..17]
 a9(r141): [16..47]
 a10(r182): [18..19]
 a11(r183): [20..21]
 a12(r146): [22..65]
 a13(r168): [23..25]
 a14(r169): [23..46]
 a15(r173): [24..31]
 a16(r179): [24..27]
 a17(r165): [26..29]
 a18(r176): [28..33]
 a19(r166): [30..35]
 a20(r174): [32..37]
 a21(r177): [34..40]
 a22(r145): [34..66]
 a23(r163): [36..43]
 a24(r172): [38..39]
 a25(r175): [41..42]
 a26(r164): [44..45]
 a27(r139): [50..51]
 a28(r157): [52..53]
 a29(r159): [54..55]
 a30(r144): [56..67]
 a31(r148): [57..62]
 a32(r143): [59..68]
 a33(r152): [59..60]
 a34(r151): [61..63]
+++Allocating 272 bytes for conflict table (uncompressed size 280)
;; a0(r134,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a2(r194,l0) a3(r193,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r194,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r193,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r197,l0) conflicts: a5(r149,l0) a6(r147,l0) a7(r140,l0) a8(r184,l0) a9(r141,l0) a10(r182,l0) a11(r183,l0) a12(r146,l0) a13(r168,l0) a14(r169,l0) a16(r179,l0) a15(r173,l0) a17(r165,l0) a18(r176,l0) a19(r166,l0) a20(r174,l0) a21(r177,l0) a22(r145,l0) a23(r163,l0) a24(r172,l0) a25(r175,l0) a26(r164,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a5(r149,l0) conflicts: a4(r197,l0) a6(r147,l0) a7(r140,l0) a8(r184,l0) a9(r141,l0) a10(r182,l0) a11(r183,l0) a12(r146,l0) a13(r168,l0) a14(r169,l0) a16(r179,l0) a15(r173,l0) a17(r165,l0) a18(r176,l0) a19(r166,l0) a20(r174,l0) a21(r177,l0) a22(r145,l0) a23(r163,l0) a24(r172,l0) a25(r175,l0) a26(r164,l0) a27(r139,l0) a28(r157,l0) a29(r159,l0) a30(r144,l0) a31(r148,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a6(r147,l0) conflicts: a4(r197,l0) a5(r149,l0) a12(r146,l0) a22(r145,l0) a27(r139,l0) a28(r157,l0) a29(r159,l0) a30(r144,l0) a31(r148,l0) a33(r152,l0) a32(r143,l0) a34(r151,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a7(r140,l0) conflicts: a4(r197,l0) a5(r149,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a8(r184,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a9(r141,l0) conflicts: a4(r197,l0) a5(r149,l0) a8(r184,l0) a10(r182,l0) a11(r183,l0) a12(r146,l0) a13(r168,l0) a14(r169,l0) a16(r179,l0) a15(r173,l0) a17(r165,l0) a18(r176,l0) a19(r166,l0) a20(r174,l0) a21(r177,l0) a22(r145,l0) a23(r163,l0) a24(r172,l0) a25(r175,l0) a26(r164,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a10(r182,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a11(r183,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a12(r146,l0) conflicts: a4(r197,l0) a5(r149,l0) a6(r147,l0) a9(r141,l0) a13(r168,l0) a14(r169,l0) a16(r179,l0) a15(r173,l0) a17(r165,l0) a18(r176,l0) a19(r166,l0) a20(r174,l0) a21(r177,l0) a22(r145,l0) a23(r163,l0) a24(r172,l0) a25(r175,l0) a26(r164,l0) a27(r139,l0) a28(r157,l0) a29(r159,l0) a30(r144,l0) a31(r148,l0) a33(r152,l0) a32(r143,l0) a34(r151,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a13(r168,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a16(r179,l0) a15(r173,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a14(r169,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a13(r168,l0) a16(r179,l0) a15(r173,l0) a17(r165,l0) a18(r176,l0) a19(r166,l0) a20(r174,l0) a21(r177,l0) a22(r145,l0) a23(r163,l0) a24(r172,l0) a25(r175,l0) a26(r164,l0)
;;     total conflict hard regs: 1 2
;;     conflict hard regs: 1 2
;; a15(r173,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a13(r168,l0) a14(r169,l0) a16(r179,l0) a17(r165,l0) a18(r176,l0) a19(r166,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a16(r179,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a13(r168,l0) a14(r169,l0) a15(r173,l0) a17(r165,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a17(r165,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a16(r179,l0) a15(r173,l0) a18(r176,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a18(r176,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a15(r173,l0) a17(r165,l0) a19(r166,l0) a20(r174,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a19(r166,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a15(r173,l0) a18(r176,l0) a20(r174,l0) a21(r177,l0) a22(r145,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a20(r174,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a18(r176,l0) a19(r166,l0) a21(r177,l0) a22(r145,l0) a23(r163,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a21(r177,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a19(r166,l0) a20(r174,l0) a22(r145,l0) a23(r163,l0) a24(r172,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a22(r145,l0) conflicts: a4(r197,l0) a5(r149,l0) a6(r147,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a19(r166,l0) a20(r174,l0) a21(r177,l0) a23(r163,l0) a24(r172,l0) a25(r175,l0) a26(r164,l0) a27(r139,l0) a28(r157,l0) a29(r159,l0) a30(r144,l0) a31(r148,l0) a33(r152,l0) a32(r143,l0) a34(r151,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a23(r163,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a20(r174,l0) a21(r177,l0) a22(r145,l0) a24(r172,l0) a25(r175,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a24(r172,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a21(r177,l0) a22(r145,l0) a23(r163,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a25(r175,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a22(r145,l0) a23(r163,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a26(r164,l0) conflicts: a4(r197,l0) a5(r149,l0) a9(r141,l0) a12(r146,l0) a14(r169,l0) a22(r145,l0)
;;     total conflict hard regs: 2
;;     conflict hard regs: 2
;; a27(r139,l0) conflicts: a5(r149,l0) a6(r147,l0) a12(r146,l0) a22(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a28(r157,l0) conflicts: a5(r149,l0) a6(r147,l0) a12(r146,l0) a22(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a29(r159,l0) conflicts: a5(r149,l0) a6(r147,l0) a12(r146,l0) a22(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a30(r144,l0) conflicts: a5(r149,l0) a6(r147,l0) a12(r146,l0) a22(r145,l0) a31(r148,l0) a33(r152,l0) a32(r143,l0) a34(r151,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a31(r148,l0) conflicts: a5(r149,l0) a6(r147,l0) a12(r146,l0) a22(r145,l0) a30(r144,l0) a33(r152,l0) a32(r143,l0) a34(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a32(r143,l0) conflicts: a6(r147,l0) a12(r146,l0) a22(r145,l0) a30(r144,l0) a31(r148,l0) a33(r152,l0) a34(r151,l0)
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a33(r152,l0) conflicts: a6(r147,l0) a12(r146,l0) a22(r145,l0) a30(r144,l0) a31(r148,l0) a32(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a34(r151,l0) conflicts: a6(r147,l0) a12(r146,l0) a22(r145,l0) a30(r144,l0) a31(r148,l0) a32(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a2(r194)<->a3(r193)@125:shuffle
  cp1:a18(r176)<->a22(r145)@125:shuffle
  cp2:a18(r176)<->a21(r177)@125:shuffle
  cp3:a15(r173)<->a20(r174)@125:shuffle
  cp4:a17(r165)<->a19(r166)@125:shuffle
  cp5:a16(r179)<->a18(r176)@125:shuffle
  cp6:a13(r168)<->a17(r165)@125:shuffle
  cp7:a11(r183)<->a12(r146)@125:shuffle
  cp8:a10(r182)<->a11(r183)@125:shuffle
  cp9:a8(r184)<->a10(r182)@125:shuffle
  cp10:a7(r140)<->a8(r184)@125:shuffle
  cp11:a7(r140)<->a9(r141)@125:shuffle
  cp12:a33(r152)<->a34(r151)@125:shuffle
  regions=1, blocks=9, points=69
    allocnos=35, copies=13, conflicts=2, ranges=38

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 8 7 6 5 4 3 2
    all: 0r134 1r137 2r194 3r193 4r197 5r149 6r147 7r140 8r184 9r141 10r182 11r183 12r146 13r168 14r169 15r173 16r179 17r165 18r176 19r166 20r174 21r177 22r145 23r163 24r172 25r175 26r164 27r139 28r157 29r159 30r144 31r148 32r143 33r152 34r151
    modified regnos: 134 137 139 140 141 143 144 145 146 147 148 149 151 152 157 159 163 164 165 166 168 169 172 173 174 175 176 177 179 182 183 184 193 194 197
    border:
    Pressure: GENERAL_REGS=10
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 194 of GENERAL_REGS has 1 regs less
    Reg 193 of GENERAL_REGS has 1 regs less
    Reg 197 of GENERAL_REGS has 4 regs less
    Reg 149 of GENERAL_REGS has 4 regs less
    Reg 147 of GENERAL_REGS has 4 regs less
    Reg 140 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 4 regs less
    Reg 146 of GENERAL_REGS has 5 regs less
    Reg 168 of GENERAL_REGS has 2 regs less
    Reg 169 of GENERAL_REGS has 2 regs less
    Reg 173 of GENERAL_REGS has 1 regs less
    Reg 179 of GENERAL_REGS has 1 regs less
    Reg 165 of GENERAL_REGS has 1 regs less
    Reg 176 of GENERAL_REGS has 1 regs less
    Reg 166 of GENERAL_REGS has 1 regs less
    Reg 174 of GENERAL_REGS has 1 regs less
    Reg 177 of GENERAL_REGS has 1 regs less
    Reg 145 of GENERAL_REGS has 5 regs less
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 172 of GENERAL_REGS has 1 regs less
    Reg 175 of GENERAL_REGS has 1 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 159 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 5 regs less
    Reg 143 of GENERAL_REGS has 4 regs less
      Pushing a34(r151,l0)
      Pushing a33(r152,l0)
      Pushing a31(r148,l0)
      Pushing a11(r183,l0)
      Pushing a10(r182,l0)
      Pushing a8(r184,l0)
      Pushing a29(r159,l0)
      Pushing a28(r157,l0)
      Pushing a27(r139,l0)
      Pushing a26(r164,l0)
      Pushing a25(r175,l0)
      Pushing a24(r172,l0)
      Pushing a23(r163,l0)
      Pushing a21(r177,l0)
      Pushing a20(r174,l0)
      Pushing a19(r166,l0)
      Pushing a18(r176,l0)
      Pushing a16(r179,l0)
      Pushing a15(r173,l0)
      Pushing a3(r193,l0)
      Pushing a2(r194,l0)
      Pushing a0(r134,l0)
      Pushing a17(r165,l0)
      Pushing a1(r137,l0)
      Pushing a14(r169,l0)
      Pushing a13(r168,l0)
      Pushing a7(r140,l0)
      Pushing a9(r141,l0)
      Pushing a4(r197,l0)
      Pushing a6(r147,l0)
      Pushing a5(r149,l0)
      Pushing a32(r143,l0)
      Pushing a30(r144,l0)
      Pushing a22(r145,l0)
      Pushing a12(r146,l0)
      Popping a12(r146,l0)  -- assign reg 4
      Popping a22(r145,l0)  -- assign reg 5
      Popping a30(r144,l0)  -- assign reg 6
      Popping a32(r143,l0)  -- assign reg 12
      Popping a5(r149,l0)  -- assign reg 7
      Popping a6(r147,l0)  -- assign reg 8
      Popping a4(r197,l0)  -- assign reg 6
      Popping a9(r141,l0)  -- assign reg 8
      Popping a7(r140,l0)  -- assign reg 8
      Popping a13(r168,l0)  -- assign reg 3
      Popping a14(r169,l0)  -- assign reg 0
      Popping a1(r137,l0)  -- assign reg 3
      Popping a17(r165,l0)  -- assign reg 3
      Popping a0(r134,l0)  -- assign reg 3
      Popping a2(r194,l0)  -- assign reg 2
      Popping a3(r193,l0)  -- assign reg 2
      Popping a15(r173,l0)  -- assign reg 12
      Popping a16(r179,l0)  -- assign reg 1
      Popping a18(r176,l0)  -- assign reg 5
      Popping a19(r166,l0)  -- assign reg 3
      Popping a20(r174,l0)  -- assign reg 12
      Popping a21(r177,l0)  -- assign reg 1
      Popping a23(r163,l0)  -- assign reg 3
      Popping a24(r172,l0)  -- assign reg 12
      Popping a25(r175,l0)  -- assign reg 1
      Popping a26(r164,l0)  -- assign reg 3
      Popping a27(r139,l0)  -- assign reg 3
      Popping a28(r157,l0)  -- assign reg 3
      Popping a29(r159,l0)  -- assign reg 3
      Popping a8(r184,l0)  -- assign reg 4
      Popping a10(r182,l0)  -- assign reg 4
      Popping a11(r183,l0)  -- assign reg 4
      Popping a31(r148,l0)  -- assign reg 1
      Popping a33(r152,l0)  -- assign reg 3
      Popping a34(r151,l0)  -- assign reg 3
Disposition:
    0:r134 l0     3    1:r137 l0     3   27:r139 l0     3    7:r140 l0     8
    9:r141 l0     8   32:r143 l0    12   30:r144 l0     6   22:r145 l0     5
   12:r146 l0     4    6:r147 l0     8   31:r148 l0     1    5:r149 l0     7
   34:r151 l0     3   33:r152 l0     3   28:r157 l0     3   29:r159 l0     3
   23:r163 l0     3   26:r164 l0     3   17:r165 l0     3   19:r166 l0     3
   13:r168 l0     3   14:r169 l0     0   24:r172 l0    12   15:r173 l0    12
   20:r174 l0    12   25:r175 l0     1   18:r176 l0     5   21:r177 l0     1
   16:r179 l0     1   10:r182 l0     4   11:r183 l0     4    8:r184 l0     4
    3:r193 l0     2    2:r194 l0     2    4:r197 l0     6
New iteration of spill/restore move
+++Costs: overall -500, reg -500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=124, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 143
insn=2, live_throughout: 1, 2, 3, 13, 143, dead_or_set: 0, 144
insn=125, live_throughout: 1, 2, 3, 13, 144, dead_or_set: 143
insn=3, live_throughout: 2, 3, 13, 143, 144, dead_or_set: 1, 145
insn=4, live_throughout: 3, 13, 143, 144, 145, dead_or_set: 2, 146
insn=5, live_throughout: 13, 143, 144, 145, 146, dead_or_set: 3, 147
insn=14, live_throughout: 13, 143, 144, 145, 146, 147, dead_or_set: 151
insn=6, live_throughout: 13, 143, 144, 145, 146, 147, 151, dead_or_set: 148
insn=15, live_throughout: 13, 143, 144, 145, 146, 147, 148, dead_or_set: 151, 152
insn=16, live_throughout: 13, 144, 145, 146, 147, 148, dead_or_set: 143, 152
insn=7, live_throughout: 13, 144, 145, 146, 147, 148, dead_or_set: 149
insn=17, live_throughout: 13, 144, 145, 146, 147, 148, 149, dead_or_set: 
insn=22, live_throughout: 13, 144, 145, 146, 147, 149, dead_or_set: 1, 148
insn=21, live_throughout: 1, 13, 144, 145, 146, 147, 149, dead_or_set: 0
insn=23, live_throughout: 0, 1, 13, 144, 145, 146, 147, 149, dead_or_set: 2
insn=24, live_throughout: 13, 144, 145, 146, 147, 149, dead_or_set: 0, 1, 2, 14
insn=28, live_throughout: 13, 14, 145, 146, 147, 149, dead_or_set: 144, 159
insn=30, live_throughout: 13, 14, 145, 146, 147, 149, dead_or_set: 159
insn=130, live_throughout: 13, 14, 24, 145, 146, 147, 149, dead_or_set: 157
insn=27, live_throughout: 13, 14, 24, 145, 146, 147, 149, dead_or_set: 139, 157
insn=31, live_throughout: 13, 14, 139, 145, 146, 147, 149, dead_or_set: 
insn=34, live_throughout: 13, 145, 146, 147, 149, dead_or_set: 139
insn=116, live_throughout: 13, 24, 145, 146, 147, 149, dead_or_set: 197
insn=35, live_throughout: 13, 145, 146, 147, 149, 197, dead_or_set: 
insn=39, live_throughout: 13, 145, 146, 149, 197, dead_or_set: 141
insn=46, live_throughout: 13, 141, 145, 146, 149, 197, dead_or_set: 169
insn=60, live_throughout: 13, 141, 145, 146, 149, 169, 197, dead_or_set: 2
insn=129, live_throughout: 2, 13, 141, 145, 146, 149, 169, 197, dead_or_set: 164
insn=41, live_throughout: 2, 13, 141, 145, 146, 149, 169, 197, dead_or_set: 163, 164
insn=128, live_throughout: 2, 13, 141, 145, 146, 149, 163, 169, 197, dead_or_set: 175
insn=53, live_throughout: 2, 13, 141, 145, 146, 149, 163, 169, 197, dead_or_set: 175, 177
insn=127, live_throughout: 2, 13, 141, 145, 146, 149, 163, 169, 177, 197, dead_or_set: 172
insn=50, live_throughout: 2, 13, 141, 145, 146, 149, 163, 169, 177, 197, dead_or_set: 172, 174
insn=42, live_throughout: 2, 13, 141, 145, 146, 149, 169, 174, 177, 197, dead_or_set: 163, 166
insn=54, live_throughout: 2, 13, 141, 146, 149, 166, 169, 174, 197, dead_or_set: 145, 176, 177
insn=51, live_throughout: 2, 13, 141, 146, 149, 166, 169, 176, 197, dead_or_set: 173, 174
insn=122, live_throughout: 2, 13, 141, 146, 149, 169, 173, 176, 197, dead_or_set: 165, 166
insn=55, live_throughout: 2, 13, 141, 146, 149, 165, 169, 173, 197, dead_or_set: 176, 179
insn=123, live_throughout: 2, 13, 141, 146, 149, 169, 173, 179, 197, dead_or_set: 165
insn=45, live_throughout: 2, 13, 141, 146, 149, 169, 173, 179, 197, dead_or_set: 165, 168
insn=59, live_throughout: 2, 13, 141, 146, 149, 168, 169, 197, dead_or_set: 1, 173, 179
insn=58, live_throughout: 1, 2, 13, 141, 146, 149, 197, dead_or_set: 0, 168, 169
insn=61, live_throughout: 13, 141, 146, 149, 197, dead_or_set: 0, 1, 2, 14
insn=62, live_throughout: 13, 141, 149, 197, dead_or_set: 146, 183
insn=63, live_throughout: 13, 141, 149, 197, dead_or_set: 182, 183
insn=64, live_throughout: 13, 141, 149, 197, dead_or_set: 182, 184
insn=66, live_throughout: 13, 149, 197, dead_or_set: 140, 141, 184
insn=67, live_throughout: 13, 140, 149, 197, dead_or_set: 0
insn=68, live_throughout: 13, 140, 149, 197, dead_or_set: 0, 14
insn=72, live_throughout: 13, 149, 197, dead_or_set: 0, 140
insn=73, live_throughout: 0, 13, 197, dead_or_set: 1, 149
insn=74, live_throughout: 13, dead_or_set: 0, 1, 14, 197
insn=118, live_throughout: 13, 14, dead_or_set: 
insn=77, live_throughout: 13, 147, 149, 197, dead_or_set: 
insn=83, live_throughout: 13, 149, 197, dead_or_set: 0, 147
insn=84, live_throughout: 0, 13, 197, dead_or_set: 1, 149
insn=85, live_throughout: 13, dead_or_set: 0, 1, 14, 197
insn=86, live_throughout: 13, 14, dead_or_set: 
insn=88, live_throughout: 13, 14, dead_or_set: 
insn=120, live_throughout: 13, 14, dead_or_set: 137
insn=121, live_throughout: 13, 14, dead_or_set: 137
insn=92, live_throughout: 13, 14, 137, dead_or_set: 193
insn=93, live_throughout: 13, 14, 137, dead_or_set: 193, 194
insn=94, live_throughout: 13, 14, 137, dead_or_set: 194
insn=95, live_throughout: 13, 14, 137, dead_or_set: 
insn=99, live_throughout: 13, 14, dead_or_set: 134, 137
insn=101, live_throughout: 13, 14, dead_or_set: 134
insn=102, live_throughout: 13, 14, dead_or_set: 
insn=104, live_throughout: 13, 14, dead_or_set: 
insn=111, live_throughout: 13, 14, dead_or_set: 
init_insns for 151: (insn_list:REG_DEP_TRUE 14 (nil))
init_insns for 152: (insn_list:REG_DEP_TRUE 16 (nil))
init_insns for 157: (insn_list:REG_DEP_TRUE 130 (nil))
init_insns for 164: (insn_list:REG_DEP_TRUE 129 (nil))
init_insns for 172: (insn_list:REG_DEP_TRUE 127 (nil))
init_insns for 175: (insn_list:REG_DEP_TRUE 128 (nil))
init_insns for 193: (insn_list:REG_DEP_TRUE 92 (nil))
init_insns for 194: (insn_list:REG_DEP_TRUE 94 (nil))
init_insns for 197: (insn_list:REG_DEP_TRUE 116 (nil))
changing reg in insn 99
changing reg in insn 101
changing reg in insn 121
changing reg in insn 120
changing reg in insn 121
changing reg in insn 99
changing reg in insn 94
changing reg in insn 92
changing reg in insn 93
changing reg in insn 92
changing reg in insn 27
changing reg in insn 34
changing reg in insn 66
changing reg in insn 72
changing reg in insn 67
changing reg in insn 39
changing reg in insn 66
changing reg in insn 46
changing reg in insn 125
changing reg in insn 124
changing reg in insn 125
changing reg in insn 16
changing reg in insn 14
changing reg in insn 15
changing reg in insn 14
changing reg in insn 2
changing reg in insn 28
changing reg in insn 3
changing reg in insn 54
changing reg in insn 4
changing reg in insn 39
changing reg in insn 62
changing reg in insn 63
changing reg in insn 5
changing reg in insn 83
changing reg in insn 21
changing reg in insn 6
changing reg in insn 22
changing reg in insn 7
changing reg in insn 84
changing reg in insn 73
changing reg in insn 23
changing reg in insn 14
changing reg in insn 15
changing reg in insn 15
changing reg in insn 16
changing reg in insn 130
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 41
changing reg in insn 42
changing reg in insn 129
changing reg in insn 41
changing reg in insn 123
changing reg in insn 122
changing reg in insn 123
changing reg in insn 45
changing reg in insn 42
changing reg in insn 122
changing reg in insn 45
changing reg in insn 58
changing reg in insn 46
changing reg in insn 58
changing reg in insn 127
changing reg in insn 50
changing reg in insn 51
changing reg in insn 59
changing reg in insn 50
changing reg in insn 51
changing reg in insn 128
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 55
changing reg in insn 53
changing reg in insn 54
changing reg in insn 55
changing reg in insn 59
changing reg in insn 63
changing reg in insn 64
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 66
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 94
changing reg in insn 116
changing reg in insn 85
changing reg in insn 74
Spilling for insn 124.
Using reg 14 for reload 0
Spilling for insn 16.
Spilling for insn 120.
Using reg 2 for reload 0
Spilling for insn 94.

Reloads for insn # 124
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 14 lr)

Reloads for insn # 16
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 12 ip [orig:143 D.23671 ] [143])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 12 ip [orig:143 D.23671 ] [143])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 120
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 94
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.23751 ] [137])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.23751 ] [137])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
deleting insn with uid = 22.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 68.
rescanning insn with uid = 74.
deleting insn with uid = 74.
rescanning insn with uid = 85.
deleting insn with uid = 85.
verify found no changes in insn with uid = 104.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 13 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)


copy_to_user_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,9u} r1={14d,8u} r2={12d,6u} r3={21d,17u,2d} r4={4d,5u,1d} r5={2d,2u,1d} r6={2d,3u} r7={1d,3u} r8={3d,6u} r12={12d,6u,2d} r13={1d,18u} r14={7d,2u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={9d,3u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 855{761d,88u,6e} in 68{62 regular + 6 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 1 8 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 8 9 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 8 29 2 NOTE_INSN_DELETED)

(note 29 12 132 2 NOTE_INSN_DELETED)

(insn 132 29 124 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 14 lr)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 124 132 2 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 12 ip [orig:143 D.23671 ] [143])
        (and:SI (reg:SI 14 lr)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 2 124 125 2 arch/arm/mm/flush.c:157 (set (reg/v/f:SI 6 r6 [orig:144 vma ] [144])
        (reg:SI 0 r0 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 125 2 3 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 12 ip [orig:143 D.23671 ] [143])
        (and:SI (reg/f:SI 12 ip [orig:143 D.23671 ] [143])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 3 125 4 2 arch/arm/mm/flush.c:157 (set (reg/v/f:SI 5 r5 [orig:145 page ] [145])
        (reg:SI 1 r1 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/flush.c:157 (set (reg/v:SI 4 r4 [orig:146 uaddr ] [146])
        (reg:SI 2 r2 [ uaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 14 2 arch/arm/mm/flush.c:157 (set (reg/v/f:SI 8 r8 [orig:147 dst ] [147])
        (reg:SI 3 r3 [ dst ])) 167 {*arm_movsi_insn} (nil))

(insn 14 5 6 2 arch/arm/mm/flush.c:159 (set (reg:SI 3 r3 [orig:151 <variable>.preempt_count ] [151])
        (mem/s/j:SI (plus:SI (reg/f:SI 12 ip [orig:143 D.23671 ] [143])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 12 ip [orig:143 D.23671 ] [143])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 6 14 15 2 arch/arm/mm/flush.c:157 (set (reg/v/f:SI 1 r1 [orig:148 src ] [148])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 src+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 6 16 2 arch/arm/mm/flush.c:159 (set (reg:SI 3 r3 [152])
        (plus:SI (reg:SI 3 r3 [orig:151 <variable>.preempt_count ] [151])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 12 ip [orig:143 D.23671 ] [143])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 16 15 7 2 arch/arm/mm/flush.c:159 (set (mem/s/j:SI (plus:SI (reg/f:SI 12 ip [orig:143 D.23671 ] [143])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 3 r3 [152])) 167 {*arm_movsi_insn} (nil))

(insn 7 16 17 2 arch/arm/mm/flush.c:157 (set (reg/v:SI 7 r7 [orig:149 len ] [149])
        (mem/c/i:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 len+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 17 7 21 2 arch/arm/mm/flush.c:159 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 7735661)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 21 17 23 2 arch/arm/mm/flush.c:161 (set (reg:SI 0 r0)
        (reg/v/f:SI 8 r8 [orig:147 dst ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 23 21 24 2 arch/arm/mm/flush.c:161 (set (reg:SI 2 r2)
        (reg/v:SI 7 r7 [orig:149 len ] [149])) 167 {*arm_movsi_insn} (nil))

(call_insn 24 23 28 2 arch/arm/mm/flush.c:161 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x113faf00 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 28 24 30 2 arch/arm/mm/flush.c:135 (set (reg:SI 3 r3 [orig:159 <variable>.vm_flags ] [159])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:144 vma ] [144])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 28 130 2 arch/arm/mm/flush.c:135 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:159 <variable>.vm_flags ] [159])
                (const_int 1 [0x1])
                (const_int 2 [0x2]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 130 30 27 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 3 r3 [157])
        (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>)
        (nil)))

(insn 27 130 31 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 3 r3 [orig:139 cacheid.266 ] [139])
        (mem/c/i:SI (reg/f:SI 3 r3 [157]) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x1117bc00 cacheid>) [0 cacheid+0 S4 A32])
        (nil)))

(jump_insn 31 27 32 2 arch/arm/mm/flush.c:135 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 6 [r6] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 32 31 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 33 32 34 3 NOTE_INSN_DELETED)

(insn 34 33 116 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:139 cacheid.266 ] [139])
                (const_int 1 [0x1])
                (const_int 4 [0x4]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 116 34 35 3 (set (reg/f:SI 6 r6 [197])
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x111944e0 cpu_cache>)
        (nil)))

(jump_insn 35 116 36 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 77)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  5 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 8 [r8] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%]  (fallthru)
(note 36 35 37 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 37 36 43 4 NOTE_INSN_DELETED)

(note 43 37 47 4 NOTE_INSN_DELETED)

(note 47 43 48 4 NOTE_INSN_DELETED)

(note 48 47 56 4 NOTE_INSN_DELETED)

(note 56 48 57 4 NOTE_INSN_DELETED)

(note 57 56 65 4 NOTE_INSN_DELETED)

(note 65 57 70 4 NOTE_INSN_DELETED)

(note 70 65 71 4 NOTE_INSN_DELETED)

(note 71 70 39 4 NOTE_INSN_DELETED)

(insn 39 71 46 4 arch/arm/mm/flush.c:45 (set (reg/v:SI 8 r8 [orig:141 colour ] [141])
        (zero_extract:SI (reg/v:SI 4 r4 [orig:146 uaddr ] [146])
            (const_int 2 [0x2])
            (const_int 12 [0xc]))) 124 {extzv_t2} (nil))

(insn 46 39 60 4 arch/arm/mm/flush.c:49 (set (reg:SI 0 r0 [169])
        (plus:SI (reg/v:SI 8 r8 [orig:141 colour ] [141])
            (const_int 500 [0x1f4]))) 4 {*arm_addsi3} (nil))

(insn 60 46 129 4 arch/arm/mm/flush.c:49 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 129 60 41 4 arch/arm/mm/flush.c:49 (set (reg/f:SI 3 r3 [164])
        (symbol_ref:SI ("top_pmd") [flags 0xc0] <var_decl 0x113ab5a0 top_pmd>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("top_pmd") [flags 0xc0] <var_decl 0x113ab5a0 top_pmd>)
        (nil)))

(insn 41 129 128 4 arch/arm/mm/flush.c:49 (set (reg/f:SI 3 r3 [orig:163 top_pmd ] [163])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [164]) [0 top_pmd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("top_pmd") [flags 0xc0] <var_decl 0x113ab5a0 top_pmd>) [0 top_pmd+0 S4 A32])
        (nil)))

(insn 128 41 53 4 arch/arm/mm/flush.c:49 (set (reg/f:SI 1 r1 [175])
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)
        (nil)))

(insn 53 128 127 4 arch/arm/mm/flush.c:49 (set (reg/f:SI 1 r1 [orig:177 mem_map ] [177])
        (mem/f/c/i:SI (reg/f:SI 1 r1 [175]) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 127 53 50 4 arch/arm/mm/flush.c:49 (set (reg/f:SI 12 ip [172])
        (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e730c0 pgprot_kernel>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e730c0 pgprot_kernel>)
        (nil)))

(insn 50 127 42 4 arch/arm/mm/flush.c:49 (set (reg:SI 12 ip [orig:174 pgprot_kernel ] [174])
        (mem/c/i:SI (reg/f:SI 12 ip [172]) [0 pgprot_kernel+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e730c0 pgprot_kernel>) [0 pgprot_kernel+0 S4 A32])
        (nil)))

(insn 42 50 54 4 arch/arm/mm/flush.c:49 (set (reg:SI 3 r3 [166])
        (mem:SI (reg/f:SI 3 r3 [orig:163 top_pmd ] [163]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 42 51 4 arch/arm/mm/flush.c:49 (set (reg:SI 5 r5 [176])
        (minus:SI (reg/v/f:SI 5 r5 [orig:145 page ] [145])
            (reg/f:SI 1 r1 [orig:177 mem_map ] [177]))) 28 {*arm_subsi3_insn} (nil))

(insn 51 54 122 4 arch/arm/mm/flush.c:49 (set (reg:SI 12 ip [173])
        (ior:SI (reg:SI 12 ip [orig:174 pgprot_kernel ] [174])
            (const_int 512 [0x200]))) 89 {*arm_iorsi3} (nil))

(insn 122 51 55 4 arch/arm/mm/flush.c:49 (set (reg:SI 3 r3 [165])
        (and:SI (reg:SI 3 r3 [166])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 55 122 123 4 arch/arm/mm/flush.c:49 (set (reg:SI 1 r1 [179])
        (ashiftrt:SI (reg:SI 5 r5 [176])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 5 r5 [176])
            (const_int 32 [0x20]))
        (nil)))

(insn 123 55 45 4 arch/arm/mm/flush.c:49 (set (reg:SI 3 r3 [165])
        (and:SI (reg:SI 3 r3 [165])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 45 123 59 4 arch/arm/mm/flush.c:49 (set (reg:SI 3 r3 [168])
        (plus:SI (reg:SI 3 r3 [165])
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))

(insn 59 45 58 4 arch/arm/mm/flush.c:49 (set (reg:SI 1 r1)
        (ior:SI (ashift:SI (reg:SI 1 r1 [179])
                (const_int 12 [0xc]))
            (reg:SI 12 ip [173]))) 270 {*arith_shiftsi} (nil))

(insn 58 59 61 4 arch/arm/mm/flush.c:49 (set (reg:SI 0 r0)
        (plus:SI (mult:SI (reg:SI 0 r0 [169])
                (const_int 4 [0x4]))
            (reg:SI 3 r3 [168]))) 270 {*arith_shiftsi} (nil))

(call_insn 61 58 62 4 arch/arm/mm/flush.c:49 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_set_pte_ext") [flags 0x41] <function_decl 0x10e63d00 cpu_v7_set_pte_ext>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 62 61 63 4 arch/arm/mm/flush.c:50 (set (reg:SI 4 r4 [183])
        (ashift:SI (reg/v:SI 4 r4 [orig:146 uaddr ] [146])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 63 62 64 4 arch/arm/mm/flush.c:50 (set (reg:SI 4 r4 [182])
        (lshiftrt:SI (reg:SI 4 r4 [183])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/v:SI 4 r4 [orig:146 uaddr ] [146])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 64 63 66 4 arch/arm/mm/flush.c:50 (set (reg:SI 4 r4 [184])
        (plus:SI (reg:SI 4 r4 [182])
            (const_int -49152 [0xffffffffffff4000]))) 4 {*arm_addsi3} (nil))

(insn 66 64 67 4 arch/arm/mm/flush.c:50 (set (reg/v:SI 8 r8 [orig:140 to ] [140])
        (plus:SI (mult:SI (reg/v:SI 8 r8 [orig:141 colour ] [141])
                (const_int 4096 [0x1000]))
            (reg:SI 4 r4 [184]))) 270 {*arith_shiftsi} (nil))

(insn 67 66 68 4 arch/arm/mm/flush.c:51 (set (reg:SI 0 r0)
        (reg/v:SI 8 r8 [orig:140 to ] [140])) 167 {*arm_movsi_insn} (nil))

(call_insn 68 67 72 4 arch/arm/mm/flush.c:51 (parallel [
            (call (mem:SI (symbol_ref:SI ("flush_tlb_kernel_page") [flags 0x41] <function_decl 0x113b4100 flush_tlb_kernel_page>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 72 68 73 4 arch/arm/mm/flush.c:52 (set (reg:SI 0 r0)
        (reg/v:SI 8 r8 [orig:140 to ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 73 72 74 4 arch/arm/mm/flush.c:52 (set (reg:SI 1 r1)
        (plus:SI (reg:SI 0 r0)
            (reg/v:SI 7 r7 [orig:149 len ] [149]))) 4 {*arm_addsi3} (nil))

(call_insn 74 73 118 4 arch/arm/mm/flush.c:52 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 6 r6 [197])
                            (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 118 74 119 4 (set (pc)
        (label_ref 86)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 119 118 77)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  3 [50.0%] 
(code_label 77 119 78 5 49 "" [1 uses])

(note 78 77 81 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 81 78 82 5 NOTE_INSN_DELETED)

(note 82 81 83 5 NOTE_INSN_DELETED)

(insn 83 82 84 5 arch/arm/mm/flush.c:140 (set (reg:SI 0 r0)
        (reg/v/f:SI 8 r8 [orig:147 dst ] [147])) 167 {*arm_movsi_insn} (nil))

(insn 84 83 85 5 arch/arm/mm/flush.c:140 (set (reg:SI 1 r1)
        (plus:SI (reg:SI 0 r0)
            (reg/v:SI 7 r7 [orig:149 len ] [149]))) 4 {*arm_addsi3} (nil))

(call_insn 85 84 86 5 arch/arm/mm/flush.c:140 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 6 r6 [197])
                            (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 2 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 86 85 87 6 48 "" [2 uses])

(note 87 86 90 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 90 87 100 6 NOTE_INSN_DELETED)

(note 100 90 88 6 NOTE_INSN_DELETED)

(insn 88 100 133 6 arch/arm/mm/flush.c:164 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 7736301)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 133 88 120 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 120 133 121 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:137 D.23751 ] [137])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 121 120 92 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:137 D.23751 ] [137])
        (and:SI (reg/f:SI 3 r3 [orig:137 D.23751 ] [137])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 92 121 93 6 arch/arm/mm/flush.c:164 (set (reg:SI 2 r2 [orig:193 <variable>.preempt_count ] [193])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.23751 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.23751 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 93 92 94 6 arch/arm/mm/flush.c:164 (set (reg:SI 2 r2 [194])
        (plus:SI (reg:SI 2 r2 [orig:193 <variable>.preempt_count ] [193])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.23751 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 94 93 95 6 arch/arm/mm/flush.c:164 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:137 D.23751 ] [137])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [194])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 99 6 arch/arm/mm/flush.c:164 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 7736301)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 99 95 101 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:134 D.23769 ] [134])
        (mem/v:SI (reg/f:SI 3 r3 [orig:137 D.23751 ] [137]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 101 99 102 6 arch/arm/mm/flush.c:164 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:134 D.23769 ] [134])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 102 101 103 6 arch/arm/mm/flush.c:164 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  8 [100.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [0.0%]  (fallthru)
(note 103 102 104 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 104 103 105 7 arch/arm/mm/flush.c:164 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10aa7a00 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 105 104 111)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%] 
(code_label 111 105 114 8 51 "" [1 uses])

(note 114 111 126 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 8 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 126 114 131 NOTE_INSN_DELETED)

(note 131 126 0 NOTE_INSN_DELETED)

