
;; Function parse_tag_initrd2 (parse_tag_initrd2)[0:1345] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 22 -- before reload
;;   ======================================================

;;	  0-->     2 r134=r0                           :cortex_a8_default
;;	  0-->     6 r135=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  1-->    16 r0=0x0                            :cortex_a8_default
;;	  2-->     7 r136=[r134+0x8]                   :cortex_a8_load_store_1
;;	  5-->     8 [r135]=r136                       :cortex_a8_load_store_1
;;	  6-->    10 r138=[r134+0xc]                   :cortex_a8_load_store_1
;;	  9-->    11 [r135+0x4]=r138                   :cortex_a8_load_store_1
;;	  9-->    22 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 9
;;   new head = 2
;;   new tail = 22


;; Procedure interblock/speculative motions == 0/0 




parse_tag_initrd2

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r138={1d,1u} 
;;    total ref usage 32{15d,17u,0e} in 8{8 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 134 135 136 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 135 136 138
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 3 2 2 NOTE_INSN_DELETED)

(insn 2 12 6 2 arch/arm/mm/init.c:68 (set (reg/v/f:SI 134 [ tag ])
        (reg:SI 0 r0 [ tag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tag ])
        (nil)))

(insn 6 2 16 2 arch/arm/mm/init.c:69 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 16 6 7 2 arch/arm/mm/init.c:72 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 7 16 8 2 arch/arm/mm/init.c:69 (set (reg:SI 136 [ <variable>.u.initrd.start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 8 [0x8])) [0 <variable>.u.initrd.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 10 2 arch/arm/mm/init.c:69 (set (mem/c/i:SI (reg/f:SI 135) [0 phys_initrd_start+0 S4 A32])
        (reg:SI 136 [ <variable>.u.initrd.start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ <variable>.u.initrd.start ])
        (nil)))

(insn 10 8 11 2 arch/arm/mm/init.c:70 (set (reg:SI 138 [ <variable>.u.initrd.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 12 [0xc])) [0 <variable>.u.initrd.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ tag ])
        (nil)))

(insn 11 10 22 2 arch/arm/mm/init.c:70 (set (mem/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])
        (reg:SI 138 [ <variable>.u.initrd.size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ <variable>.u.initrd.size ])
        (expr_list:REG_DEAD (reg/f:SI 135)
            (nil))))

(insn 22 11 26 2 arch/arm/mm/init.c:72 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 26 22 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function meminfo_cmp (meminfo_cmp)[0:1352] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 7 to 13 -- before reload
;;   ======================================================

;;	  0-->     9 r141=[r1]                         :cortex_a8_load_store_1
;;	  1-->     7 r139=[r0]                         :cortex_a8_load_store_1
;;	  3-->    10 r140=r141 0>>0xc                  :cortex_a8_default
;;	  4-->    11 r133=r139 0>>0xc-r140             :cortex_a8_default
;;	  5-->    12 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	  7-->    13 pc={(cc>=0x0)?L18:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 7
;;   new tail = 13

;;   ======================================================
;;   -- basic block 3 from 15 to 58 -- before reload
;;   ======================================================

;;	  0-->    15 r134=0xffffffffffffffff           :cortex_a8_default
;;	  0-->    58 pc=L23                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 15
;;   new tail = 58

;;   ======================================================
;;   -- basic block 4 from 21 to 21 -- before reload
;;   ======================================================

;;	  0-->    21 r134=cc>0x0                       :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 21
;;   new tail = 21

;;   ======================================================
;;   -- basic block 5 from 29 to 35 -- before reload
;;   ======================================================

;;	  0-->    29 r0=r134                           :cortex_a8_default
;;	  0-->    35 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 29
;;   new tail = 35


;; Procedure interblock/speculative motions == 0/0 




meminfo_cmp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,2u} r25={1d,5u} r26={1d,4u} r133={1d,1u} r134={2d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 49{18d,31u,0e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 139 140 141
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 139 140 141
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 5 3 2 NOTE_INSN_DELETED)

(note 3 2 4 2 NOTE_INSN_DELETED)

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 9 2 NOTE_INSN_DELETED)

(insn 9 8 7 2 arch/arm/mm/init.c:324 (set (reg:SI 141 [ <variable>.start ])
        (mem/s/j:SI (reg:SI 1 r1 [ _b ]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ _b ])
        (nil)))

(insn 7 9 10 2 arch/arm/mm/init.c:324 (set (reg:SI 139 [ <variable>.start ])
        (mem/s/j:SI (reg:SI 0 r0 [ _a ]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ _a ])
        (nil)))

(insn 10 7 11 2 arch/arm/mm/init.c:324 (set (reg:SI 140)
        (lshiftrt:SI (reg:SI 141 [ <variable>.start ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 141 [ <variable>.start ])
        (nil)))

(insn 11 10 12 2 arch/arm/mm/init.c:324 (set (reg/v:SI 133 [ cmp ])
        (minus:SI (lshiftrt:SI (reg:SI 139 [ <variable>.start ])
                (const_int 12 [0xc]))
            (reg:SI 140))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg:SI 139 [ <variable>.start ])
            (nil))))

(insn 12 11 13 2 arch/arm/mm/init.c:325 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ cmp ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ cmp ])
        (nil)))

(jump_insn 13 12 14 2 arch/arm/mm/init.c:325 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8088 [0x1f98])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp]


;; Succ edge  4 [80.9%] 
;; Succ edge  3 [19.1%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  2 [19.1%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 58 3 arch/arm/mm/init.c:325 discrim 2 (set (reg:SI 134 [ D.25161 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 58 15 59 3 (set (pc)
        (label_ref 23)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  5 [100.0%] 

(barrier 59 58 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  2 [80.9%] 
(code_label 18 59 19 4 6 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 19 23 4 arch/arm/mm/init.c:325 discrim 1 (set (reg:SI 134 [ D.25161 ])
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 23 21 24 5 7 "" [1 uses])

(note 24 23 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 29 24 35 5 arch/arm/mm/init.c:326 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.25161 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.25161 ])
        (nil)))

(insn 35 29 60 5 arch/arm/mm/init.c:326 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 60 35 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function keepinitrd_setup (keepinitrd_setup)[0:1363] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 6 to 19 -- before reload
;;   ======================================================

;;	  0-->     6 r135=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  0-->     7 r136=0x1                          :cortex_a8_default
;;	  1-->    13 r0=r136                           :cortex_a8_default
;;	  3-->     8 [r135]=r136                       :cortex_a8_load_store_1
;;	  3-->    19 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 3
;;   new head = 6
;;   new tail = 19


;; Procedure interblock/speculative motions == 0/0 




keepinitrd_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,2u} 
;;    total ref usage 26{13d,13u,0e} in 5{5 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/mm/init.c:766 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 13 2 arch/arm/mm/init.c:766 (set (reg:SI 136)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 13 7 8 2 arch/arm/mm/init.c:768 (set (reg/i:SI 0 r0)
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 8 13 19 2 arch/arm/mm/init.c:766 (set (mem/c/i:SI (reg/f:SI 135) [0 keep_initrd+0 S4 A32])
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 19 8 23 2 arch/arm/mm/init.c:768 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function early_initrd (early_initrd)[0:1343] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 8 to 14 -- before reload
;;   ======================================================

;;	  0-->     8 r1=sfp-0x4                        :cortex_a8_default
;;	  1-->     9 r0=call [`memparse']              :cortex_a8_issue_branch
;;	  1-->    43 r148=r0                           :cortex_a8_default
;;	  2-->    11 r134=[sfp-0x4]                    :cortex_a8_load_store_1
;;	  5-->    12 r139=zxn([r134])                  :cortex_a8_load_store_1
;;	  7-->    13 cc=cmp(r139,0x2c)                 :cortex_a8_default
;;	  9-->    14 pc={(cc!=0x0)?L27:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 8
;;   new tail = 14

;;   ======================================================
;;   -- basic block 3 from 17 to 26 -- before reload
;;   ======================================================

;;	  0-->    17 r0=r134+0x1                       :cortex_a8_default
;;	  0-->    18 r1=0x0                            :cortex_a8_default
;;	  1-->    19 r0=call [`memparse']              :cortex_a8_issue_branch
;;	  1-->    21 r141=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  4-->    23 [r141]=r148                       :cortex_a8_load_store_1
;;	 33-->    26 [r141+0x4]=r0                     :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 33
;;   new head = 17
;;   new tail = 26

;;   ======================================================
;;   -- basic block 4 from 33 to 39 -- before reload
;;   ======================================================

;;	  0-->    33 r0=0x0                            :cortex_a8_default
;;	  0-->    39 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 0
;;   new head = 33
;;   new tail = 39


;; Procedure interblock/speculative motions == 0/0 




early_initrd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={5d,2u} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,6u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,6u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,2u} r139={1d,1u} r141={1d,2u} r148={1d,1u} 
;;    total ref usage 288{253d,35u,0e} in 15{13 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 139 148
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 139 148
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 8 2 NOTE_INSN_DELETED)

(insn 8 6 9 2 arch/arm/mm/init.c:45 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(call_insn 9 8 43 2 arch/arm/mm/init.c:45 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a58100 memparse>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 43 9 11 2 arch/arm/mm/init.c:45 (set (reg:SI 148 [ D.24930 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 11 43 12 2 arch/arm/mm/init.c:46 (set (reg/f:SI 134 [ endp.338 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 endp+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/init.c:46 (set (reg:SI 139)
        (zero_extend:SI (mem:QI (reg/f:SI 134 [ endp.338 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 13 12 14 2 arch/arm/mm/init.c:46 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 44 [0x2c]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(jump_insn 14 13 15 2 arch/arm/mm/init.c:46 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8010 [0x1f4a])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148


;; Succ edge  3 [19.9%]  (fallthru)
;; Succ edge  4 [80.1%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; live  gen 	 0 [r0] 1 [r1] 141
;; live  kill	 14 [lr]

;; Pred edge  2 [19.9%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 16 15 45 3 NOTE_INSN_DELETED)

(note 45 16 17 3 NOTE_INSN_DELETED)

(insn 17 45 18 3 arch/arm/mm/init.c:47 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 134 [ endp.338 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 134 [ endp.338 ])
        (nil)))

(insn 18 17 19 3 arch/arm/mm/init.c:47 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 18 21 3 arch/arm/mm/init.c:47 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a58100 memparse>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 21 19 23 3 arch/arm/mm/init.c:49 (set (reg/f:SI 141)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 23 21 26 3 arch/arm/mm/init.c:49 (set (mem/c/i:SI (reg/f:SI 141) [0 phys_initrd_start+0 S4 A32])
        (reg:SI 148 [ D.24930 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ D.24930 ])
        (nil)))

(insn 26 23 27 3 arch/arm/mm/init.c:50 (set (mem/c/i:SI (plus:SI (reg/f:SI 141)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 141)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [80.1%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 27 26 28 4 15 "" [1 uses])

(note 28 27 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 33 28 39 4 arch/arm/mm/init.c:53 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 39 33 47 4 arch/arm/mm/init.c:53 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 47 39 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_tag_initrd (parse_tag_initrd)[0:1344] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 26 -- before reload
;;   ======================================================

;;	  0-->     2 r134=r0                           :cortex_a8_default
;;	  0-->     7 r0=`*.LC0'                        :cortex_a8_load_store_1
;;	  1-->     8 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->     9 r136=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  2-->    10 r137=[r134+0x8]                   :cortex_a8_load_store_1
;;	  2-->    20 r0=0x0                            :cortex_a8_default
;;	  4-->    11 r138=r137+0x40000000              :cortex_a8_default
;;	  4-->    12 [r136]=r138                       :cortex_a8_load_store_1
;;	  5-->    14 r140=[r134+0xc]                   :cortex_a8_load_store_1
;;	  8-->    15 [r136+0x4]=r140                   :cortex_a8_load_store_1
;;	  8-->    26 use r0                            :nothing
;;	Ready list (final):  
;;   total time = 8
;;   new head = 2
;;   new tail = 26


;; Procedure interblock/speculative motions == 0/0 




parse_tag_initrd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r134={1d,2u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r140={1d,1u} 
;;    total ref usage 154{134d,20u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 137 138 140
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 134 136 137 138 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 16 2 NOTE_INSN_DELETED)

(note 16 6 2 2 NOTE_INSN_DELETED)

(insn 2 16 7 2 arch/arm/mm/init.c:57 (set (reg/v/f:SI 134 [ tag ])
        (reg:SI 0 r0 [ tag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tag ])
        (nil)))

(insn 7 2 8 2 arch/arm/mm/init.c:58 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10ee9180>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10ee9180>)
        (nil)))

(call_insn 8 7 9 2 arch/arm/mm/init.c:58 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 10 2 arch/arm/mm/init.c:60 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 20 2 arch/arm/mm/init.c:60 (set (reg:SI 137 [ <variable>.u.initrd.start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 8 [0x8])) [0 <variable>.u.initrd.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 10 11 2 arch/arm/mm/init.c:63 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 11 20 12 2 arch/arm/mm/init.c:60 (set (reg:SI 138)
        (plus:SI (reg:SI 137 [ <variable>.u.initrd.start ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 137 [ <variable>.u.initrd.start ])
        (nil)))

(insn 12 11 14 2 arch/arm/mm/init.c:60 (set (mem/c/i:SI (reg/f:SI 136) [0 phys_initrd_start+0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 14 12 15 2 arch/arm/mm/init.c:61 (set (reg:SI 140 [ <variable>.u.initrd.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 12 [0xc])) [0 <variable>.u.initrd.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ tag ])
        (nil)))

(insn 15 14 26 2 arch/arm/mm/init.c:61 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])
        (reg:SI 140 [ <variable>.u.initrd.size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ <variable>.u.initrd.size ])
        (expr_list:REG_DEAD (reg/f:SI 136)
            (nil))))

(insn 26 15 30 2 arch/arm/mm/init.c:63 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 30 26 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function free_initrd_mem (free_initrd_mem)[0:1362]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 26 (    2)


free_initrd_mem

Dataflow summary:
def_info->table_size = 404, use_info->table_size = 109
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={7d,4u} r2={5d,1u} r3={4d} r11={1d,12u} r12={4d} r13={1d,15u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={7d,4u} r25={1d,12u} r26={1d,11u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r164={2d,2u} r165={2d,3u} r166={2d,2u} r167={1d,2u} r168={1d,3u} r169={1d,4u} r170={2d,2u} r171={1d,2u} r172={1d,1u} r173={1d,3u} r174={1d,2u,1d} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={2d,2u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r198={1d,1u} 
;;    total ref usage 512{404d,107u,1e} in 55{52 regular + 3 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d13(1){ }d18(2){ }d22(3){ }d23(11){ }d27(12){ }d28(13){ }d32(14){ }d67(25){ }d68(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 0 )->[2]->( 3 12 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 173 174 175 176
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 173 174 175 176
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174
;; lr  def 	 164 170 177 178 179 198
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; live  gen 	 164 170 177 178 179 198
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198

( 5 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 198
;; lr  def 	 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  gen 	 170
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198

( 4 3 )->[5]->( 4 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  gen 	 24 [cc] 164
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198

( 5 )->[6]->( 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174
;; lr  def 	 165 166 167 169 171 172 182 183 184 185 194 196
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; live  gen 	 165 166 167 169 171 172 182 183 184 185 194 196
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196

( 8 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 194 196
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 165 166 168 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  gen 	 0 [r0] 1 [r1] 165 166 168 187
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196

( 7 6 )->[8]->( 7 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 171
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196

( 8 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172

( 9 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 167 169 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 167 169 172
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 169 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 169 172

( 9 10 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 169 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 169 172
;; lr  def 	 191 192 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 169 172
;; live  gen 	 191 192 193
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 11 2 )->[12]->( 1 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]

( 12 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u105(11){ }u106(13){ }u107(14){ }u108(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 41 to worklist
  Adding insn 123 to worklist
  Adding insn 53 to worklist
  Adding insn 60 to worklist
  Adding insn 125 to worklist
  Adding insn 85 to worklist
  Adding insn 82 to worklist
  Adding insn 80 to worklist
  Adding insn 92 to worklist
  Adding insn 95 to worklist
  Adding insn 102 to worklist
  Adding insn 108 to worklist
Finished finding needed instructions:
processing block 4 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
  Adding insn 54 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 121 to worklist
  Adding insn 83 to worklist
  Adding insn 79 to worklist
  Adding insn 119 to worklist
  Adding insn 77 to worklist
  Adding insn 76 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
processing block 11 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 107 to worklist
  Adding insn 106 to worklist
  Adding insn 105 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 169 172
  Adding insn 101 to worklist
  Adding insn 100 to worklist
  Adding insn 99 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172
  Adding insn 94 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
  Adding insn 91 to worklist
processing block 6 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
  Adding insn 81 to worklist
  Adding insn 75 to worklist
  Adding insn 71 to worklist
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
  Adding insn 62 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
  Adding insn 59 to worklist
  Adding insn 57 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
  Adding insn 52 to worklist
  Adding insn 48 to worklist
  Adding insn 47 to worklist
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
  Adding insn 40 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 34 to worklist
  Adding insn 33 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 16 count 26 (    2)
;;   ======================================================
;;   -- basic block 5 from 57 to 60 -- before reload
;;   ======================================================

;;	  0-->    59 cc=cmp(r170,0x0)                  :cortex_a8_default
changing bb of uid 54
  from 4 to 5
;;	  0-->    54 r170=r170-0x4                     :cortex_a8_default
;;	  1-->    57 r164=r164+0x4                     :cortex_a8_default
;;	  2-->    60 pc={(cc!=0x0)?L58:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 57
;;   new tail = 60

;;   ======================================================
;;   -- basic block 4 from 53 to 53 -- before reload
;;   ======================================================

;;	  0-->    53 [r164-0x4]=r198                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 53
;;   new tail = 53

;;   ======================================================
;;   -- basic block 8 from 91 to 92 -- before reload
;;   ======================================================

changing bb of uid 119
  from 7 to 8
;;	  0-->   119 r0=0xa                            :cortex_a8_default
;;	  0-->    91 cc=cmp(r165,r171)                 :cortex_a8_default
;;	  2-->    92 pc={(ltu(cc,0x0))?L90:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 91
;;   new tail = 92

;;   ======================================================
;;   -- basic block 7 from 76 to 87 -- before reload
;;   ======================================================

;;	  0-->    76 r187=[r194]                       :cortex_a8_load_store_1
;;	  0-->    86 r165=r165+0x1                     :cortex_a8_default
;;	  2-->    77 r168=r187+r166                    :cortex_a8_default
;;	  2-->    87 r166=r166+0x20                    :cortex_a8_default
;;	  3-->    79 r1=r168                           :cortex_a8_default
;;	  4-->    80 call [`_clear_bit']               :cortex_a8_issue_branch
;;	  4-->    82 [r168+0x10]=r196                  :cortex_a8_load_store_1
;;	  5-->    83 r0=r168                           :cortex_a8_default
;;	  5-->   121 r1=0x0                            :cortex_a8_default
;;	  6-->    85 call [`__free_pages']             :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 76
;;   new tail = 87

;;   ======================================================
;;   -- basic block 2 from 33 to 41 -- before reload
;;   ======================================================

;;	  0-->    38 r175=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  0-->    33 r173=r0                           :cortex_a8_default
;;	  1-->    34 r174=r1                           :cortex_a8_default
;;	  3-->    39 r176=[r175]                       :cortex_a8_load_store_1
;;	  5-->    40 cc=cmp(r176,0x0)                  :cortex_a8_default
;;	  7-->    41 pc={(cc!=0x0)?L114:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 33
;;   new tail = 41

;;   ======================================================
;;   -- basic block 3 from 43 to 123 -- before reload
;;   ======================================================

;;	  0-->    43 r178=r174+0xff0                   :cortex_a8_default
;;	  0-->    48 r164=r173                         :cortex_a8_default
;;	  1-->    44 r177=r178+0xf                     :cortex_a8_default
;;	  1-->    52 r198=0xffffffffe7fddef0           :cortex_a8_load_store_1
;;	  2-->   127 r179=r177&0xfffffffffffff00f      :cortex_a8_default
;;	  3-->   128 r179=r179&0xfffffffffffffff0      :cortex_a8_default
;;	  4-->    47 r170=r179-r173                    :cortex_a8_default
;;	  4-->   123 pc=L55                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 43
;;   new tail = 123

;;   ======================================================
;;   -- basic block 6 from 62 to 125 -- before reload
;;   ======================================================

;;	  0-->    64 r183=r173+0x40000000              :cortex_a8_default
;;	  0-->    66 r184=r174+0x40000000              :cortex_a8_default
;;	  1-->    62 r182=`totalram_pages'             :cortex_a8_load_store_1
;;	  1-->    81 r196=0x1                          :cortex_a8_default
;;	  2-->    65 r169=r183 0>>0xc                  :cortex_a8_default
;;	  2-->    67 r171=r184 0>>0xc                  :cortex_a8_default
;;	  3-->    68 r185=r171-r169                    :cortex_a8_default
;;	  3-->    71 r165=r169                         :cortex_a8_default
;;	  4-->    63 r172=[r182]                       :cortex_a8_load_store_1
;;	  4-->    70 r166=r169<<0x5                    :cortex_a8_default
;;	  5-->    69 r167=r185<<0x2                    :cortex_a8_default
;;	  5-->    75 r194=`mem_map'                    :cortex_a8_load_store_1
;;	  6-->   125 pc=L88                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 62
;;   new tail = 125

;;   ======================================================
;;   -- basic block 9 from 94 to 95 -- before reload
;;   ======================================================

;;	  0-->    94 cc=cmp(r167,0x0)                  :cortex_a8_default
;;	  2-->    95 pc={(cc==0x0)?L103:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 94
;;   new tail = 95

;;   ======================================================
;;   -- basic block 10 from 99 to 102 -- before reload
;;   ======================================================

;;	  0-->   101 r2=r167                           :cortex_a8_default
;;	  0-->    99 r0=`*.LC1'                        :cortex_a8_load_store_1
;;	  1-->   100 r1=`*.LC2'                        :cortex_a8_load_store_1
;;	  2-->   102 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 99
;;   new tail = 102

;;   ======================================================
;;   -- basic block 11 from 105 to 108 -- before reload
;;   ======================================================

;;	  0-->   105 r191=`totalram_pages'             :cortex_a8_load_store_1
;;	  0-->   106 r192=r172-r169                    :cortex_a8_default
;;	  1-->   107 r193=r192+r165                    :cortex_a8_default
;;	  3-->   108 [r191]=r193                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 105
;;   new tail = 108


;; Procedure interblock/speculative motions == 2/2 




free_initrd_mem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={7d,4u} r2={5d,1u} r3={4d} r11={1d,12u} r12={4d} r13={1d,15u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={7d,4u} r25={1d,12u} r26={1d,11u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r164={2d,2u} r165={2d,3u} r166={2d,2u} r167={1d,2u} r168={1d,3u} r169={1d,4u} r170={2d,2u} r171={1d,2u} r172={1d,1u} r173={1d,3u} r174={1d,2u,1d} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={2d,2u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r198={1d,1u} 
;;    total ref usage 512{404d,107u,1e} in 55{52 regular + 3 call} insns.
(note 32 0 36 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 173 174 175 176
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 173 174 175 176
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 36 32 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 35 36 38 2 NOTE_INSN_FUNCTION_BEG)

(insn 38 35 33 2 arch/arm/mm/init.c:756 (set (reg/f:SI 175)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 33 38 34 2 arch/arm/mm/init.c:755 (set (reg/v:SI 173 [ start ])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ start ])
        (nil)))

(insn 34 33 39 2 arch/arm/mm/init.c:755 (set (reg/v:SI 174 [ end ])
        (reg:SI 1 r1 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ end ])
        (nil)))

(insn 39 34 40 2 arch/arm/mm/init.c:756 (set (reg:SI 176 [ keep_initrd ])
        (mem/c/i:SI (reg/f:SI 175) [0 keep_initrd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 175)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 keep_initrd+0 S4 A32])
            (nil))))

(insn 40 39 41 2 arch/arm/mm/init.c:756 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ keep_initrd ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176 [ keep_initrd ])
        (nil)))

(jump_insn 41 40 42 2 arch/arm/mm/init.c:756 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174
;; lr  def 	 164 170 177 178 179 198
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; live  gen 	 164 170 177 178 179 198
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 42 41 45 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 45 42 43 3 NOTE_INSN_DELETED)

(insn 43 45 48 3 arch/arm/mm/init.c:757 (set (reg:SI 178)
        (plus:SI (reg/v:SI 174 [ end ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 48 43 44 3 arch/arm/mm/init.c:757 (set (reg/v:SI 164 [ start.582 ])
        (reg/v:SI 173 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 44 48 52 3 arch/arm/mm/init.c:757 (set (reg:SI 177)
        (plus:SI (reg:SI 178)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_EQUAL (plus:SI (reg/v:SI 174 [ end ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 52 44 127 3 arch/arm/mm/init.c:445 (set (reg:SI 198)
        (const_int -402792720 [0xffffffffe7fddef0])) 167 {*arm_movsi_insn} (nil))

(insn 127 52 128 3 arch/arm/mm/init.c:757 (set (reg:SI 179)
        (and:SI (reg:SI 177)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(insn 128 127 47 3 arch/arm/mm/init.c:757 (set (reg:SI 179)
        (and:SI (reg:SI 179)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 47 128 123 3 arch/arm/mm/init.c:757 (set (reg/v:SI 170 [ count ])
        (minus:SI (reg:SI 179)
            (reg/v:SI 173 [ start ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(jump_insn 123 47 124 3 (set (pc)
        (label_ref 55)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198


;; Succ edge  5 [100.0%] 

(barrier 124 123 58)

;; Start of basic block ( 5) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 198
;; lr  def 	 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  gen 	 170
;; live  kill	

;; Pred edge  5 [91.0%] 
(code_label 58 124 51 4 26 "" [1 uses])

(note 51 58 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 55 4 arch/arm/mm/init.c:445 (set (mem:SI (plus:SI (reg/v:SI 164 [ start.582 ])
                (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])
        (reg:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -402792720 [0xffffffffe7fddef0])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198


;; Succ edge  5 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  gen 	 24 [cc] 164
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru,dfs_back)
;; Pred edge  3 [100.0%] 
(code_label 55 53 56 5 25 "" [1 uses])

(note 56 55 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 59 56 54 5 arch/arm/mm/init.c:444 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 54 59 57 5 arch/arm/mm/init.c:444 discrim 2 (set (reg/v:SI 170 [ count ])
        (plus:SI (reg/v:SI 170 [ count ])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 57 54 60 5 arch/arm/mm/init.c:444 discrim 2 (set (reg/v:SI 164 [ start.582 ])
        (plus:SI (reg/v:SI 164 [ start.582 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(jump_insn 60 57 61 5 arch/arm/mm/init.c:444 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198


;; Succ edge  4 [91.0%] 
;; Succ edge  6 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174
;; lr  def 	 165 166 167 169 171 172 182 183 184 185 194 196
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; live  gen 	 165 166 167 169 171 172 182 183 184 185 194 196
;; live  kill	

;; Pred edge  5 [9.0%]  (fallthru,loop_exit)
(note 61 60 64 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 64 61 66 6 arch/arm/mm/init.c:758 (set (reg:SI 183)
        (plus:SI (reg/v:SI 173 [ start ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 173 [ start ])
        (nil)))

(insn 66 64 62 6 arch/arm/mm/init.c:758 (set (reg:SI 184)
        (plus:SI (reg/v:SI 174 [ end ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 174 [ end ])
        (nil)))

(insn 62 66 81 6 arch/arm/mm/init.c:758 (set (reg/f:SI 182)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 81 62 65 6 include/linux/mm.h:417 (set (reg:SI 196)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 65 81 67 6 arch/arm/mm/init.c:758 (set (reg/v:SI 169 [ pfn ])
        (lshiftrt:SI (reg:SI 183)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 67 65 68 6 arch/arm/mm/init.c:758 (set (reg:SI 171 [ D.25487 ])
        (lshiftrt:SI (reg:SI 184)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 68 67 71 6 arch/arm/mm/init.c:421 (set (reg:SI 185)
        (minus:SI (reg:SI 171 [ D.25487 ])
            (reg/v:SI 169 [ pfn ]))) 28 {*arm_subsi3_insn} (nil))

(insn 71 68 63 6 arch/arm/mm/init.c:421 (set (reg/v:SI 165 [ pfn.581 ])
        (reg/v:SI 169 [ pfn ])) 167 {*arm_movsi_insn} (nil))

(insn 63 71 70 6 arch/arm/mm/init.c:758 (set (reg:SI 172 [ totalram_pages.414 ])
        (mem/c/i:SI (reg/f:SI 182) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>) [0 totalram_pages+0 S4 A32])
            (nil))))

(insn 70 63 69 6 arch/arm/mm/init.c:421 (set (reg:SI 166 [ ivtmp.563 ])
        (ashift:SI (reg/v:SI 169 [ pfn ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 69 70 75 6 arch/arm/mm/init.c:421 (set (reg/v:SI 167 [ size ])
        (ashift:SI (reg:SI 185)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(insn 75 69 125 6 arch/arm/mm/init.c:424 (set (reg/f:SI 194)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 125 75 126 6 (set (pc)
        (label_ref 88)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196


;; Succ edge  8 [100.0%] 

(barrier 126 125 90)

;; Start of basic block ( 8) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 194 196
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 165 166 168 187
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  gen 	 0 [r0] 1 [r1] 165 166 168 187
;; live  kill	 14 [lr]

;; Pred edge  8 [91.0%] 
(code_label 90 126 74 7 28 "" [1 uses])

(note 74 90 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 76 74 86 7 arch/arm/mm/init.c:424 (set (reg/f:SI 187 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 194) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 86 76 77 7 arch/arm/mm/init.c:423 discrim 2 (set (reg/v:SI 165 [ pfn.581 ])
        (plus:SI (reg/v:SI 165 [ pfn.581 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 77 86 87 7 arch/arm/mm/init.c:424 (set (reg/v/f:SI 168 [ page ])
        (plus:SI (reg/f:SI 187 [ mem_map ])
            (reg:SI 166 [ ivtmp.563 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 187 [ mem_map ])
        (nil)))

(insn 87 77 79 7 arch/arm/mm/init.c:423 discrim 2 (set (reg:SI 166 [ ivtmp.563 ])
        (plus:SI (reg:SI 166 [ ivtmp.563 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 79 87 80 7 include/linux/page-flags.h:207 (set (reg:SI 1 r1)
        (reg/v/f:SI 168 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 80 79 82 7 include/linux/page-flags.h:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 82 80 83 7 include/linux/mm.h:417 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 168 [ page ])
                (const_int 16 [0x10])) [0 <variable>.D.8033.D.8032.D.8031._count.counter+0 S4 A32])
        (reg:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 83 82 121 7 arch/arm/mm/init.c:427 (set (reg:SI 0 r0)
        (reg/v/f:SI 168 [ page ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 168 [ page ])
        (nil)))

(insn 121 83 85 7 arch/arm/mm/init.c:427 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 85 121 88 7 arch/arm/mm/init.c:427 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196


;; Succ edge  8 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 171
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru,dfs_back)
;; Pred edge  6 [100.0%] 
(code_label 88 85 89 8 27 "" [1 uses])

(note 89 88 119 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 119 89 91 8 include/linux/page-flags.h:207 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 91 119 92 8 arch/arm/mm/init.c:423 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 165 [ pfn.581 ])
            (reg:SI 171 [ D.25487 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 93 8 arch/arm/mm/init.c:423 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 8 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196


;; Succ edge  7 [91.0%] 
;; Succ edge  9 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [9.0%]  (fallthru,loop_exit)
(note 93 92 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 9 arch/arm/mm/init.c:431 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 167 [ size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 95 94 96 9 arch/arm/mm/init.c:431 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 167 169 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 167 169 172
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  9 [0.0%]  (fallthru)
(note 96 95 101 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 101 96 99 10 arch/arm/mm/init.c:432 (set (reg:SI 2 r2)
        (reg/v:SI 167 [ size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 167 [ size ])
        (nil)))

(insn 99 101 100 10 arch/arm/mm/init.c:432 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1161a480>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1161a480>)
        (nil)))

(insn 100 99 102 10 arch/arm/mm/init.c:432 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11686560>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11686560>)
        (nil)))

(call_insn 102 100 103 10 arch/arm/mm/init.c:432 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 169 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 169 172


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 169 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 169 172
;; lr  def 	 191 192 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 169 172
;; live  gen 	 191 192 193
;; live  kill	

;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 103 102 104 11 29 "" [1 uses])

(note 104 103 105 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 11 arch/arm/mm/init.c:758 (set (reg/f:SI 191)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 11 arch/arm/mm/init.c:758 (set (reg:SI 192)
        (minus:SI (reg:SI 172 [ totalram_pages.414 ])
            (reg/v:SI 169 [ pfn ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 172 [ totalram_pages.414 ])
        (expr_list:REG_DEAD (reg/v:SI 169 [ pfn ])
            (nil))))

(insn 107 106 108 11 arch/arm/mm/init.c:758 (set (reg:SI 193)
        (plus:SI (reg:SI 192)
            (reg/v:SI 165 [ pfn.581 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_DEAD (reg/v:SI 165 [ pfn.581 ])
            (nil))))

(insn 108 107 114 11 arch/arm/mm/init.c:758 (set (mem/c/i:SI (reg/f:SI 191) [0 totalram_pages+0 S4 A32])
        (reg:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_DEAD (reg/f:SI 191)
            (nil))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 2) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 114 108 117 12 30 "" [1 uses])

(note 117 114 130 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 12 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 130 117 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function free_initmem (free_initmem)[0:1361]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 4 from 20 to 21 -- before reload
;;   ======================================================

;;	  0-->    20 cc=cmp(r141,r134)                 :cortex_a8_default
;;	  2-->    21 pc={(cc!=0x0)?L19:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 20
;;   new tail = 21

;;   ======================================================
;;   -- basic block 3 from 15 to 16 -- before reload
;;   ======================================================

;;	  0-->    15 [r134+r163]=r164                  :cortex_a8_load_store_1
;;	  0-->    16 r134=r134+0x4                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 15
;;   new tail = 16

;;   ======================================================
;;   -- basic block 7 from 52 to 53 -- before reload
;;   ======================================================

changing bb of uid 78
  from 6 to 7
;;	  0-->    78 r0=0xa                            :cortex_a8_default
;;	  0-->    52 cc=cmp(r133,r139)                 :cortex_a8_default
;;	  2-->    53 pc={(ltu(cc,0x0))?L51:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 52
;;   new tail = 53

;;   ======================================================
;;   -- basic block 6 from 37 to 48 -- before reload
;;   ======================================================

;;	  0-->    37 r152=[r159]                       :cortex_a8_load_store_1
;;	  0-->    47 r133=r133+0x1                     :cortex_a8_default
;;	  2-->    38 r137=r152+r135                    :cortex_a8_default
;;	  2-->    48 r135=r135+0x20                    :cortex_a8_default
;;	  3-->    40 r1=r137                           :cortex_a8_default
;;	  4-->    41 call [`_clear_bit']               :cortex_a8_issue_branch
;;	  4-->    43 [r137+0x10]=r161                  :cortex_a8_load_store_1
;;	  5-->    44 r0=r137                           :cortex_a8_default
;;	  5-->    80 r1=0x0                            :cortex_a8_default
;;	  6-->    46 call [`__free_pages']             :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 37
;;   new tail = 48

;;   ======================================================
;;   -- basic block 2 from 5 to 83 -- before reload
;;   ======================================================

;;	  0-->     6 r143=`__init_begin'               :cortex_a8_load_store_1
;;	  0-->     8 r134=0x0                          :cortex_a8_default
;;	  1-->     5 r142=`__init_end'                 :cortex_a8_load_store_1
;;	  2-->    12 r163=r143                         :cortex_a8_default
;;	  2-->    14 r164=0xffffffffe7fddef0           :cortex_a8_load_store_1
;;	  3-->     7 r141=r142-r143                    :cortex_a8_default
;;	  3-->    83 pc=L17                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 5
;;   new tail = 83

;;   ======================================================
;;   -- basic block 5 from 23 to 85 -- before reload
;;   ======================================================

;;	  0-->    25 r148=const(`__init_begin'+0x400000:cortex_a8_load_store_1
;;	  0-->    42 r161=0x1                          :cortex_a8_default
;;	  1-->    27 r149=const(`__init_end'+0x40000000:cortex_a8_load_store_1
;;	  2-->    23 r147=`totalram_pages'             :cortex_a8_load_store_1
;;	  3-->    26 r138=r148 0>>0xc                  :cortex_a8_default
;;	  3-->    36 r159=`mem_map'                    :cortex_a8_load_store_1
;;	  4-->    28 r139=r149 0>>0xc                  :cortex_a8_default
;;	  4-->    32 r133=r138                         :cortex_a8_default
;;	  5-->    29 r150=r139-r138                    :cortex_a8_default
;;	  5-->    24 r140=[r147]                       :cortex_a8_load_store_1
;;	  6-->    31 r135=r138<<0x5                    :cortex_a8_default
;;	  7-->    30 r136=r150<<0x2                    :cortex_a8_default
;;	  7-->    85 pc=L49                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 7
;;   new head = 23
;;   new tail = 85

;;   ======================================================
;;   -- basic block 8 from 55 to 56 -- before reload
;;   ======================================================

;;	  0-->    55 cc=cmp(r136,0x0)                  :cortex_a8_default
;;	  2-->    56 pc={(cc==0x0)?L64:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 55
;;   new tail = 56

;;   ======================================================
;;   -- basic block 9 from 60 to 63 -- before reload
;;   ======================================================

;;	  0-->    62 r2=r136                           :cortex_a8_default
;;	  0-->    60 r0=`*.LC1'                        :cortex_a8_load_store_1
;;	  1-->    61 r1=`*.LC3'                        :cortex_a8_load_store_1
;;	  2-->    63 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 60
;;   new tail = 63

;;   ======================================================
;;   -- basic block 10 from 66 to 69 -- before reload
;;   ======================================================

;;	  0-->    66 r156=`totalram_pages'             :cortex_a8_load_store_1
;;	  0-->    67 r157=r140-r138                    :cortex_a8_default
;;	  1-->    68 r158=r157+r133                    :cortex_a8_default
;;	  3-->    69 [r156]=r158                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 66
;;   new tail = 69


;; Procedure interblock/speculative motions == 1/1 




free_initmem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,3u} r1={7d,3u} r2={5d,1u} r3={4d} r11={1d,10u} r12={4d} r13={1d,13u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r25={1d,10u} r26={1d,9u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={2d,3u} r134={2d,3u} r135={2d,2u} r136={1d,2u} r137={1d,3u} r138={1d,4u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r163={1d,1u} r164={1d,1u} 
;;    total ref usage 486{397d,89u,0e} in 47{44 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 141 142 143 163 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 141 142 143 163 164
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 2 8 2 arch/arm/mm/init.c:743 (set (reg/f:SI 143)
        (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)) 167 {*arm_movsi_insn} (nil))

(insn 8 6 5 2 arch/arm/mm/init.c:743 (set (reg:SI 134 [ ivtmp.624 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 5 8 12 2 arch/arm/mm/init.c:743 (set (reg/f:SI 142)
        (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)) 167 {*arm_movsi_insn} (nil))

(insn 12 5 14 2 arch/arm/mm/init.c:445 (set (reg/f:SI 163)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_EQUAL (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
            (nil))))

(insn 14 12 7 2 arch/arm/mm/init.c:445 (set (reg:SI 164)
        (const_int -402792720 [0xffffffffe7fddef0])) 167 {*arm_movsi_insn} (nil))

(insn 7 14 83 2 arch/arm/mm/init.c:743 (set (reg:SI 141 [ D.25457 ])
        (minus:SI (reg/f:SI 142)
            (reg/f:SI 143))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
                (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>))
            (nil))))

(jump_insn 83 7 84 2 (set (pc)
        (label_ref 17)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164


;; Succ edge  4 [100.0%] 

(barrier 84 83 19)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163 164
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; live  gen 	 134
;; live  kill	

;; Pred edge  4 [91.0%] 
(code_label 19 84 11 3 35 "" [1 uses])

(note 11 19 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 11 16 3 arch/arm/mm/init.c:445 (set (mem:SI (plus:SI (reg:SI 134 [ ivtmp.624 ])
                (reg/f:SI 163)) [0 S4 A32])
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -402792720 [0xffffffffe7fddef0])
        (nil)))

(insn 16 15 17 3 arch/arm/mm/init.c:445 (set (reg:SI 134 [ ivtmp.624 ])
        (plus:SI (reg:SI 134 [ ivtmp.624 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 17 16 18 4 34 "" [1 uses])

(note 18 17 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 18 21 4 arch/arm/mm/init.c:732 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.25457 ])
            (reg:SI 134 [ ivtmp.624 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 4 arch/arm/mm/init.c:732 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 135 136 138 139 140 147 148 149 150 159 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 135 136 138 139 140 147 148 149 150 159 161
;; live  kill	

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 22 21 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 22 42 5 arch/arm/mm/init.c:745 (set (reg/f:SI 148)
        (const:SI (plus:SI (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (nil))

(insn 42 25 27 5 include/linux/mm.h:417 (set (reg:SI 161)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 27 42 23 5 arch/arm/mm/init.c:745 (set (reg/f:SI 149)
        (const:SI (plus:SI (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (nil))

(insn 23 27 26 5 arch/arm/mm/init.c:745 (set (reg/f:SI 147)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 26 23 36 5 arch/arm/mm/init.c:745 (set (reg/v:SI 138 [ pfn ])
        (lshiftrt:SI (reg/f:SI 148)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_EQUAL (lshiftrt:SI (const:SI (plus:SI (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
                        (const_int 1073741824 [0x40000000])))
                (const_int 12 [0xc]))
            (nil))))

(insn 36 26 28 5 arch/arm/mm/init.c:424 (set (reg/f:SI 159)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 28 36 32 5 arch/arm/mm/init.c:745 (set (reg:SI 139 [ D.25467 ])
        (lshiftrt:SI (reg/f:SI 149)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (lshiftrt:SI (const:SI (plus:SI (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
                        (const_int 1073741824 [0x40000000])))
                (const_int 12 [0xc]))
            (nil))))

(insn 32 28 29 5 arch/arm/mm/init.c:421 (set (reg/v:SI 133 [ pfn.633 ])
        (reg/v:SI 138 [ pfn ])) 167 {*arm_movsi_insn} (nil))

(insn 29 32 24 5 arch/arm/mm/init.c:421 (set (reg:SI 150)
        (minus:SI (reg:SI 139 [ D.25467 ])
            (reg/v:SI 138 [ pfn ]))) 28 {*arm_subsi3_insn} (nil))

(insn 24 29 31 5 arch/arm/mm/init.c:745 (set (reg:SI 140 [ totalram_pages.408 ])
        (mem/c/i:SI (reg/f:SI 147) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>) [0 totalram_pages+0 S4 A32])
            (nil))))

(insn 31 24 30 5 arch/arm/mm/init.c:421 (set (reg:SI 135 [ ivtmp.616 ])
        (ashift:SI (reg/v:SI 138 [ pfn ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 30 31 85 5 arch/arm/mm/init.c:421 (set (reg/v:SI 136 [ size ])
        (ashift:SI (reg:SI 150)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(jump_insn 85 30 86 5 (set (pc)
        (label_ref 49)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161


;; Succ edge  7 [100.0%] 

(barrier 86 85 51)

;; Start of basic block ( 7) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 159 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 137 152
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; live  gen 	 0 [r0] 1 [r1] 133 135 137 152
;; live  kill	 14 [lr]

;; Pred edge  7 [91.0%] 
(code_label 51 86 35 6 37 "" [1 uses])

(note 35 51 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 35 47 6 arch/arm/mm/init.c:424 (set (reg/f:SI 152 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 159) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 47 37 38 6 arch/arm/mm/init.c:423 discrim 2 (set (reg/v:SI 133 [ pfn.633 ])
        (plus:SI (reg/v:SI 133 [ pfn.633 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 38 47 48 6 arch/arm/mm/init.c:424 (set (reg/v/f:SI 137 [ page ])
        (plus:SI (reg/f:SI 152 [ mem_map ])
            (reg:SI 135 [ ivtmp.616 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 152 [ mem_map ])
        (nil)))

(insn 48 38 40 6 arch/arm/mm/init.c:423 discrim 2 (set (reg:SI 135 [ ivtmp.616 ])
        (plus:SI (reg:SI 135 [ ivtmp.616 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 40 48 41 6 include/linux/page-flags.h:207 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 43 6 include/linux/page-flags.h:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 43 41 44 6 include/linux/mm.h:417 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ page ])
                (const_int 16 [0x10])) [0 <variable>.D.8033.D.8032.D.8031._count.counter+0 S4 A32])
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 44 43 80 6 arch/arm/mm/init.c:427 (set (reg:SI 0 r0)
        (reg/v/f:SI 137 [ page ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ page ])
        (nil)))

(insn 80 44 46 6 arch/arm/mm/init.c:427 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 46 80 49 6 arch/arm/mm/init.c:427 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161


;; Succ edge  7 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru,dfs_back)
;; Pred edge  5 [100.0%] 
(code_label 49 46 50 7 36 "" [1 uses])

(note 50 49 78 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 78 50 52 7 include/linux/page-flags.h:207 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 52 78 53 7 arch/arm/mm/init.c:423 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ pfn.633 ])
            (reg:SI 139 [ D.25467 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 53 52 54 7 arch/arm/mm/init.c:423 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 7 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161


;; Succ edge  6 [91.0%] 
;; Succ edge  8 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138 140
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [9.0%]  (fallthru,loop_exit)
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 8 arch/arm/mm/init.c:431 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 57 8 arch/arm/mm/init.c:431 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138 140


;; Succ edge  9 [100.0%]  (fallthru)
;; Succ edge  10 [0.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  8 [100.0%]  (fallthru)
(note 57 56 62 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 62 57 60 9 arch/arm/mm/init.c:432 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ size ])
        (nil)))

(insn 60 62 61 9 arch/arm/mm/init.c:432 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1161a480>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1161a480>)
        (nil)))

(insn 61 60 63 9 arch/arm/mm/init.c:432 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1169b720>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1169b720>)
        (nil)))

(call_insn 63 61 64 9 arch/arm/mm/init.c:432 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 140


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 140
;; lr  def 	 156 157 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 140
;; live  gen 	 156 157 158
;; live  kill	

;; Pred edge  8 [0.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 64 63 65 10 38 "" [1 uses])

(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 10 arch/arm/mm/init.c:745 (set (reg/f:SI 156)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 10 arch/arm/mm/init.c:745 (set (reg:SI 157)
        (minus:SI (reg:SI 140 [ totalram_pages.408 ])
            (reg/v:SI 138 [ pfn ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 140 [ totalram_pages.408 ])
        (expr_list:REG_DEAD (reg/v:SI 138 [ pfn ])
            (nil))))

(insn 68 67 69 10 arch/arm/mm/init.c:745 (set (reg:SI 158)
        (plus:SI (reg:SI 157)
            (reg/v:SI 133 [ pfn.633 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg/v:SI 133 [ pfn.633 ])
            (nil))))

(insn 69 68 88 10 arch/arm/mm/init.c:745 (set (mem/c/i:SI (reg/f:SI 156) [0 totalram_pages+0 S4 A32])
        (reg:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg/f:SI 156)
            (nil))))
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 88 69 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function mem_init (mem_init)[0:1360] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 44 n_edges 61 count 120 (  2.7)


mem_init

Dataflow summary:
def_info->table_size = 1577, use_info->table_size = 601
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={22d,12u} r1={21d,9u} r2={14d,2u} r3={14d,2u} r11={1d,43u} r12={12d} r13={1d,85u} r14={12d,1u} r15={11d} r16={11d} r17={11d} r18={11d} r19={11d} r20={11d} r21={11d} r22={11d} r23={11d} r24={37d,18u} r25={1d,43u} r26={1d,42u} r27={11d} r28={11d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={11d} r38={11d} r39={11d} r40={11d} r41={11d} r42={11d} r43={11d} r44={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} r81={11d} r82={11d} r83={11d} r84={11d} r85={11d} r86={11d} r87={11d} r88={11d} r89={11d} r90={11d} r91={11d} r92={11d} r93={11d} r94={11d} r95={11d} r96={11d} r97={11d} r98={11d} r99={11d} r100={11d} r101={11d} r102={11d} r103={11d} r104={11d} r105={11d} r106={11d} r107={11d} r108={11d} r109={11d} r110={11d} r111={11d} r112={11d} r113={11d} r114={11d} r115={11d} r116={11d} r117={11d} r118={11d} r119={11d} r120={11d} r121={11d} r122={11d} r123={11d} r124={11d} r125={11d} r126={11d} r127={11d} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,2u} r141={2d,1u} r142={1d,1u} r144={2d,3u} r145={3d,11u} r146={1d,2u} r147={1d,1u} r148={1d,7u} r149={1d,1u} r150={1d,2u} r151={1d,3u} r152={2d,4u,1d} r153={2d,2u} r154={2d,2u} r155={1d,2u} r156={2d,5u,1d} r157={2d,4u} r158={1d,1u} r159={1d,1u} r160={1d,2u,1d} r162={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r167={2d,4u} r168={2d,4u} r169={1d,2u} r170={1d,2u,1d} r171={1d,2u} r172={1d,3u} r173={1d,3u} r174={1d,1u,1d} r175={3d,4u} r176={2d,2u} r177={2d,3u} r178={2d,3u} r179={1d,2u} r180={1d,2u} r181={1d,1u} r182={2d,6u} r183={2d,2u} r184={2d,2u} r185={2d,2u} r186={2d,3u} r187={1d,3u} r188={1d,1u} r189={1d,2u} r190={1d,2u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r200={1d,1u} r201={1d,1u} r211={1d,1u,1d} r212={1d,1u} r213={1d,1u} r216={1d,1u} r217={1d,1u} r220={1d,1u} r223={1d,1u,1d} r224={1d,1u} r225={1d,1u} r228={1d,1u} r229={1d,2u} r231={1d,1u} r232={1d,1u} r233={1d,2u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r239={1d,1u,1d} r240={1d,1u} r241={1d,1u} r242={1d,1u} r245={1d,1u} r248={1d,1u} r249={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r258={1d,1u} r261={1d,1u} r262={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,2u} r270={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r276={1d,1u} r279={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r288={1d,2u} r289={1d,1u} r290={1d,2u} r291={1d,1u} r292={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r299={1d,1u} r300={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r312={1d,1u} r314={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,2u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,2u} r335={1d,1u} r336={1d,1u} r337={1d,2u} r339={1d,1u} r340={1d,1u} r343={1d,2u} r344={1d,1u} r345={1d,3u,1d} r346={1d,1u} r349={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,2u} r354={1d,1u} r355={1d,3u,1d} r356={1d,1u} r359={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,2u} r364={1d,1u} r365={1d,3u,1d} r366={1d,1u} r369={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,2u} r374={1d,1u} r375={1d,3u,1d} r376={1d,1u} r379={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,2u} r385={1d,2u} r387={2d,2u} r404={1d,5u} r405={1d,4u} r406={1d,2u} r407={1d,2u} r413={1d,2u} r414={1d,1u} r415={1d,1u} 
;;    total ref usage 2099{1545d,542u,12e} in 317{306 regular + 11 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d21(0){ }d42(1){ }d56(2){ }d70(3){ }d71(11){ }d83(12){ }d84(13){ }d96(14){ }d235(25){ }d236(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 0 )->[2]->( 7 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152 175 176 193 194 196 197 413 414 415
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152 175 176 193 194 196 197 413 414 415
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415

( 7 )->[3]->( 4 6 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 414
;; lr  def 	 24 [cc] 150 151 174 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  gen 	 24 [cc] 150 151 174 200 201
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415

( 3 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 175 415
;; lr  def 	 24 [cc] 177 178 179 211 212 213 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415
;; live  gen 	 24 [cc] 177 178 179 211 212 213 216 217
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415

( 3 4 5 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176
;; lr  def 	 152 175 176 220 223 224 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415
;; live  gen 	 152 175 176 220 223 224 225
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415

( 6 2 )->[7]->( 3 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 413
;; lr  def 	 24 [cc] 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  gen 	 24 [cc] 228
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415

( 7 )->[8]->( 27 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167 169 192 229 231 232 233 404 405 406 407
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 167 169 192 229 231 232 233 404 405 406 407
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407

( 27 )->[9]->( 26 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169
;; lr  def 	 24 [cc] 148 170 234 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  gen 	 24 [cc] 148 170 234 235
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407

( 9 )->[10]->( 20 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 170 404
;; lr  def 	 24 [cc] 145 149 168 236 237
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407
;; live  gen 	 145 149 168 236 237
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407

( 20 )->[11]->( 19 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 168
;; lr  def 	 24 [cc] 146 171 239 240 241 242
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  gen 	 24 [cc] 146 171 239 240 241 242
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407

( 11 )->[12]->( 13 17 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 171
;; lr  def 	 24 [cc] 138 139 140 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407
;; live  gen 	 24 [cc] 138 139 140 147
;; live  kill	 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407

( 12 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 405
;; lr  def 	 144 153 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407
;; live  gen 	 144 153 166
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407

( 15 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 153 406 407
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 153 172 245
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  gen 	 0 [r0] 1 [r1] 144 153 172 245
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407

( 14 13 )->[15]->( 14 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407

( 15 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 148 166 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 166 405
;; lr  def 	 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 148 166 167 168 169 404 405 406 407
;; live  gen 	 248 249
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407

( 12 16 )->[17]->( 26 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407

( 17 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  gen 	 145
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407

( 11 18 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u217(11){ }u218(13){ }u219(25){ }u220(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168
;; lr  def 	 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  gen 	 168
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407

( 19 10 )->[20]->( 11 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u222(11){ }u223(13){ }u224(25){ }u225(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168 404
;; lr  def 	 24 [cc] 253 254 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  gen 	 24 [cc] 253 254 255
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407

( 20 )->[21]->( 22 26 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 169 404 405 406 407
;; live  gen 	 24 [cc] 137
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407

( 21 )->[22]->( 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 405
;; lr  def 	 142 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407
;; live  gen 	 142 154
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407

( 24 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u248(11){ }u249(13){ }u250(25){ }u251(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 406 407
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 154 173 258
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  gen 	 0 [r0] 1 [r1] 145 154 173 258
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407

( 23 22 )->[24]->( 23 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407

( 24 )->[25]->( 26 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u274(11){ }u275(13){ }u276(25){ }u277(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 148 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 148 405
;; lr  def 	 261 262
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 148 167 169 404 405 406 407
;; live  gen 	 261 262
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407

( 9 21 25 17 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u284(11){ }u285(13){ }u286(25){ }u287(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  gen 	 167
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407

( 26 8 )->[27]->( 9 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u289(11){ }u290(13){ }u291(25){ }u292(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 404
;; lr  def 	 24 [cc] 266 267 268
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  gen 	 24 [cc] 266 267 268
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407

( 27 )->[28]->( 39 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u301(11){ }u302(13){ }u303(25){ }u304(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156 183 184 185 188 189 269 270 272 273 274 276 387
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 156 183 184 185 188 189 269 270 272 273 274 276 387
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387

( 39 )->[29]->( 30 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u317(11){ }u318(13){ }u319(25){ }u320(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 189 387
;; lr  def 	 155 181 182 190 279 281 282 283
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  gen 	 155 181 182 190 279 281 282 283
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387

( 29 37 )->[30]->( 31 32 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u336(11){ }u337(13){ }u338(25){ }u339(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 24 [cc] 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 165
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387

( 30 )->[31]->( 37 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u344(11){ }u345(13){ }u346(25){ }u347(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 185
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387

( 30 )->[32]->( 34 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u349(11){ }u350(13){ }u351(25){ }u352(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 162
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387

( 32 )->[33]->( 35 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u357(11){ }u358(13){ }u359(25){ }u360(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387

( 32 )->[34]->( 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u362(11){ }u363(13){ }u364(25){ }u365(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 141
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387

( 34 33 )->[35]->( 36 37 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u367(11){ }u368(13){ }u369(25){ }u370(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 163
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387

( 35 )->[36]->( 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u375(11){ }u376(13){ }u377(25){ }u378(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 184
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387

( 36 35 31 )->[37]->( 30 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u380(11){ }u381(13){ }u382(25){ }u383(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 182
;; lr  def 	 24 [cc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 182
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387

( 37 )->[38]->( 39 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183
;; lr  def 	 156 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  gen 	 156 183
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387

( 38 28 )->[39]->( 29 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u394(11){ }u395(13){ }u396(25){ }u397(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 188
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  gen 	 24 [cc]
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387

( 39 )->[40]->( 42 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u401(11){ }u402(13){ }u403(25){ }u404(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157 288 289 290 384 385
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185
;; live  gen 	 0 [r0] 157 288 289 290 384 385
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385

( 42 )->[41]->( 42 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u412(11){ }u413(13){ }u414(25){ }u415(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 385
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160 180 291 292 294 295 296 299 300
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  gen 	 0 [r0] 1 [r1] 160 180 291 292 294 295 296 299 300
;; live  kill	 14 [lr]
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385

( 41 40 )->[42]->( 41 43 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u437(11){ }u438(13){ }u439(25){ }u440(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 384
;; lr  def 	 24 [cc] 136 157 306 307 308 383
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  gen 	 24 [cc] 136 157 306 307 308 383
;; live  kill	
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 383 384 385
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 383 384 385

( 42 )->[43]->( 1 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u451(11){ }u452(13){ }u453(25){ }u454(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185 383
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185 383
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 158 159 186 187 312 314 318 319 320 321 322 325 326 327 328 329 330 331 332 333 334 335 336 337 339 340 343 344 345 346 349 351 352 353 354 355 356 359 361 362 363 364 365 366 369 371 372 373 374 375 376 379 381 382
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185 383
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 158 159 186 187 312 314 318 319 320 321 322 325 326 327 328 329 330 331 332 333 334 335 336 337 339 340 343 344 345 346 349 351 352 353 354 355 356 359 361 362 363 364 365 366 369 371 372 373 374 375 376 379 381 382
;; live  kill	 14 [lr] 24 [cc]
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]

( 43 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u596(11){ }u597(13){ }u598(14){ }u599(25){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 525 to worklist
  Adding insn 13 to worklist
  Adding insn 37 to worklist
  Adding insn 53 to worklist
  Adding insn 58 to worklist
  Adding insn 77 to worklist
  Adding insn 527 to worklist
  Adding insn 85 to worklist
  Adding insn 81 to worklist
  Adding insn 98 to worklist
  Adding insn 529 to worklist
  Adding insn 116 to worklist
  Adding insn 123 to worklist
  Adding insn 531 to worklist
  Adding insn 142 to worklist
  Adding insn 139 to worklist
  Adding insn 137 to worklist
  Adding insn 149 to worklist
  Adding insn 154 to worklist
  Adding insn 158 to worklist
  Adding insn 174 to worklist
  Adding insn 179 to worklist
  Adding insn 533 to worklist
  Adding insn 197 to worklist
  Adding insn 194 to worklist
  Adding insn 192 to worklist
  Adding insn 204 to worklist
  Adding insn 209 to worklist
  Adding insn 223 to worklist
  Adding insn 535 to worklist
  Adding insn 231 to worklist
  Adding insn 260 to worklist
  Adding insn 257 to worklist
  Adding insn 537 to worklist
  Adding insn 270 to worklist
  Adding insn 267 to worklist
  Adding insn 539 to worklist
  Adding insn 283 to worklist
  Adding insn 281 to worklist
  Adding insn 291 to worklist
  Adding insn 299 to worklist
  Adding insn 541 to worklist
  Adding insn 306 to worklist
  Adding insn 303 to worklist
  Adding insn 329 to worklist
  Adding insn 324 to worklist
  Adding insn 342 to worklist
  Adding insn 469 to worklist
  Adding insn 464 to worklist
  Adding insn 454 to worklist
  Adding insn 452 to worklist
  Adding insn 450 to worklist
  Adding insn 440 to worklist
  Adding insn 438 to worklist
  Adding insn 436 to worklist
  Adding insn 426 to worklist
  Adding insn 424 to worklist
  Adding insn 422 to worklist
  Adding insn 412 to worklist
  Adding insn 410 to worklist
  Adding insn 408 to worklist
  Adding insn 406 to worklist
  Adding insn 404 to worklist
  Adding insn 402 to worklist
  Adding insn 400 to worklist
  Adding insn 398 to worklist
  Adding insn 396 to worklist
  Adding insn 393 to worklist
  Adding insn 392 to worklist
  Adding insn 390 to worklist
  Adding insn 387 to worklist
  Adding insn 385 to worklist
  Adding insn 384 to worklist
  Adding insn 382 to worklist
  Adding insn 380 to worklist
  Adding insn 378 to worklist
  Adding insn 376 to worklist
  Adding insn 374 to worklist
  Adding insn 366 to worklist
  Adding insn 361 to worklist
  Adding insn 352 to worklist
  Adding insn 350 to worklist
Finished finding needed instructions:
processing block 6 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
  Adding insn 70 to worklist
  Adding insn 69 to worklist
  Adding insn 552 to worklist
  Adding insn 551 to worklist
  Adding insn 66 to worklist
  Adding insn 65 to worklist
  Adding insn 64 to worklist
  Adding insn 63 to worklist
processing block 5 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415
  Adding insn 57 to worklist
  Adding insn 56 to worklist
processing block 4 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415
  Adding insn 52 to worklist
  Adding insn 556 to worklist
  Adding insn 555 to worklist
  Adding insn 49 to worklist
  Adding insn 48 to worklist
  Adding insn 554 to worklist
  Adding insn 553 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 42 to worklist
  Adding insn 40 to worklist
processing block 3 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415
  Adding insn 36 to worklist
  Adding insn 26 to worklist
  Adding insn 25 to worklist
  Adding insn 24 to worklist
  Adding insn 23 to worklist
  Adding insn 22 to worklist
processing block 26 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
  Adding insn 212 to worklist
processing block 19 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
  Adding insn 163 to worklist
processing block 14 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
  Adding insn 144 to worklist
  Adding insn 143 to worklist
  Adding insn 493 to worklist
  Adding insn 140 to worklist
  Adding insn 136 to worklist
  Adding insn 491 to worklist
  Adding insn 134 to worklist
  Adding insn 133 to worklist
processing block 18 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
  Adding insn 160 to worklist
processing block 17 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
  Adding insn 157 to worklist
processing block 16 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
  Adding insn 153 to worklist
  Adding insn 152 to worklist
processing block 15 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
  Adding insn 148 to worklist
processing block 13 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
  Adding insn 128 to worklist
  Adding insn 127 to worklist
  Adding insn 126 to worklist
processing block 12 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407
  Adding insn 122 to worklist
  Adding insn 121 to worklist
  Adding insn 120 to worklist
  Adding insn 119 to worklist
  Adding insn 118 to worklist
processing block 11 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407
  Adding insn 115 to worklist
  Adding insn 114 to worklist
  Adding insn 113 to worklist
  Adding insn 112 to worklist
  Adding insn 111 to worklist
  Adding insn 110 to worklist
  Adding insn 109 to worklist
processing block 23 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
  Adding insn 199 to worklist
  Adding insn 198 to worklist
  Adding insn 489 to worklist
  Adding insn 195 to worklist
  Adding insn 191 to worklist
  Adding insn 487 to worklist
  Adding insn 189 to worklist
  Adding insn 188 to worklist
processing block 25 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
  Adding insn 208 to worklist
  Adding insn 207 to worklist
processing block 24 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
  Adding insn 203 to worklist
processing block 22 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
  Adding insn 183 to worklist
  Adding insn 182 to worklist
processing block 21 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407
  Adding insn 178 to worklist
  Adding insn 176 to worklist
processing block 20 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
  Adding insn 173 to worklist
  Adding insn 172 to worklist
  Adding insn 171 to worklist
  Adding insn 169 to worklist
processing block 10 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
  Adding insn 105 to worklist
  Adding insn 103 to worklist
  Adding insn 102 to worklist
  Adding insn 101 to worklist
  Adding insn 100 to worklist
processing block 9 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407
  Adding insn 97 to worklist
  Adding insn 96 to worklist
  Adding insn 95 to worklist
  Adding insn 94 to worklist
  Adding insn 93 to worklist
processing block 38 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
  Adding insn 294 to worklist
  Adding insn 293 to worklist
processing block 37 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
  Adding insn 290 to worklist
  Adding insn 288 to worklist
processing block 31 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
  Adding insn 262 to worklist
processing block 36 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
  Adding insn 285 to worklist
processing block 35 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
  Adding insn 282 to worklist
processing block 34 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
  Adding insn 277 to worklist
processing block 33 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
  Adding insn 272 to worklist
processing block 32 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
  Adding insn 269 to worklist
processing block 30 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
  Adding insn 259 to worklist
processing block 29 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
  Adding insn 254 to worklist
  Adding insn 252 to worklist
  Adding insn 251 to worklist
  Adding insn 250 to worklist
  Adding insn 249 to worklist
  Adding insn 247 to worklist
  Adding insn 246 to worklist
  Adding insn 245 to worklist
processing block 41 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
  Adding insn 328 to worklist
  Adding insn 484 to worklist
  Adding insn 323 to worklist
  Adding insn 322 to worklist
  Adding insn 319 to worklist
  Adding insn 318 to worklist
  Adding insn 317 to worklist
  Adding insn 316 to worklist
  Adding insn 314 to worklist
  Adding insn 313 to worklist
  Adding insn 312 to worklist
processing block 43 lr out =  11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
  Adding insn 468 to worklist
  Adding insn 467 to worklist
  Adding insn 466 to worklist
  Adding insn 465 to worklist
  Adding insn 463 to worklist
  Adding insn 462 to worklist
  Adding insn 459 to worklist
  Adding insn 457 to worklist
  Adding insn 455 to worklist
  Adding insn 453 to worklist
  Adding insn 451 to worklist
  Adding insn 449 to worklist
  Adding insn 448 to worklist
  Adding insn 445 to worklist
  Adding insn 443 to worklist
  Adding insn 441 to worklist
  Adding insn 439 to worklist
  Adding insn 437 to worklist
  Adding insn 435 to worklist
  Adding insn 434 to worklist
  Adding insn 431 to worklist
  Adding insn 429 to worklist
  Adding insn 427 to worklist
  Adding insn 425 to worklist
  Adding insn 423 to worklist
  Adding insn 421 to worklist
  Adding insn 420 to worklist
  Adding insn 417 to worklist
  Adding insn 415 to worklist
  Adding insn 413 to worklist
  Adding insn 411 to worklist
  Adding insn 409 to worklist
  Adding insn 403 to worklist
  Adding insn 401 to worklist
  Adding insn 397 to worklist
  Adding insn 395 to worklist
  Adding insn 394 to worklist
  Adding insn 391 to worklist
  Adding insn 389 to worklist
  Adding insn 388 to worklist
  Adding insn 386 to worklist
  Adding insn 383 to worklist
  Adding insn 381 to worklist
  Adding insn 379 to worklist
  Adding insn 377 to worklist
  Adding insn 375 to worklist
  Adding insn 373 to worklist
  Adding insn 544 to worklist
  Adding insn 543 to worklist
  Adding insn 369 to worklist
  Adding insn 368 to worklist
  Adding insn 367 to worklist
  Adding insn 365 to worklist
  Adding insn 364 to worklist
  Adding insn 363 to worklist
  Adding insn 362 to worklist
  Adding insn 360 to worklist
  Adding insn 359 to worklist
  Adding insn 358 to worklist
  Adding insn 354 to worklist
  Adding insn 351 to worklist
  Adding insn 349 to worklist
  Adding insn 348 to worklist
  Adding insn 346 to worklist
processing block 42 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 383 384 385
  Adding insn 483 to worklist
  Adding insn 341 to worklist
  Adding insn 340 to worklist
  Adding insn 339 to worklist
  Adding insn 337 to worklist
  Adding insn 333 to worklist
  Adding insn 332 to worklist
processing block 40 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
  Adding insn 478 to worklist
  Adding insn 335 to worklist
  Adding insn 308 to worklist
  Adding insn 307 to worklist
  Adding insn 305 to worklist
  Adding insn 304 to worklist
  Adding insn 302 to worklist
processing block 39 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
  Adding insn 298 to worklist
processing block 28 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
  Adding insn 239 to worklist
  Adding insn 238 to worklist
  Adding insn 237 to worklist
  Adding insn 236 to worklist
  Adding insn 235 to worklist
  Adding insn 234 to worklist
  Adding insn 233 to worklist
  Adding insn 524 to worklist
  Adding insn 230 to worklist
  Adding insn 229 to worklist
  Adding insn 228 to worklist
  Adding insn 226 to worklist
  Adding insn 225 to worklist
processing block 27 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
  Adding insn 222 to worklist
  Adding insn 221 to worklist
  Adding insn 220 to worklist
  Adding insn 218 to worklist
processing block 8 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
  Adding insn 138 to worklist
  Adding insn 132 to worklist
  Adding insn 125 to worklist
  Adding insn 216 to worklist
  Adding insn 89 to worklist
  Adding insn 88 to worklist
  Adding insn 87 to worklist
  Adding insn 86 to worklist
  Adding insn 84 to worklist
  Adding insn 80 to worklist
  Adding insn 79 to worklist
processing block 7 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
  Adding insn 76 to worklist
  Adding insn 75 to worklist
processing block 2 lr out =  11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
  Adding insn 39 to worklist
  Adding insn 21 to worklist
  Adding insn 74 to worklist
  Adding insn 16 to worklist
  Adding insn 15 to worklist
  Adding insn 14 to worklist
  Adding insn 12 to worklist
  Adding insn 10 to worklist
  Adding insn 9 to worklist
  Adding insn 8 to worklist
df_worklist_dataflow_doublequeue:n_basic_blocks 44 n_edges 61 count 139 (  3.2)
;;   ======================================================
;;   -- basic block 7 from 75 to 77 -- before reload
;;   ======================================================

changing bb of uid 22
  from 3 to 7
;;	  0-->    22 r151=r414+r152                    :cortex_a8_default
;;	  0-->    75 r228=[r413+0x4]                   :cortex_a8_load_store_1
changing bb of uid 70
  from 6 to 7
;;	  1-->    70 r152=r152+0xc                     :cortex_a8_default
;;	  2-->    76 cc=cmp(r176,r228)                 :cortex_a8_default
changing bb of uid 69
  from 6 to 7
;;	  2-->    69 r176=r176+0x1                     :cortex_a8_default
;;	  4-->    77 pc={(ltu(cc,0x0))?L73:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 75
;;   new tail = 77

;;   ======================================================
;;   -- basic block 3 from 23 to 37 -- before reload
;;   ======================================================

;;	  0-->    23 r200=[r151+0x4]                   :cortex_a8_load_store_1
;;	  3-->    24 r174=r200 0>>0xc                  :cortex_a8_default
;;	  4-->    25 r201=r174&0xfffffffffffffc03      :cortex_a8_default
;;	  5-->    26 r150=r201&0xfffffffffffffffc      :cortex_a8_default
;;	  6-->    36 cc=cmp(ltu(r175,r150)&r175!=0x0,0x:cortex_a8_default
;;	  8-->    37 pc={(cc==0x0)?L59:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 23
;;   new tail = 37

;;   ======================================================
;;   -- basic block 4 from 40 to 53 -- before reload
;;   ======================================================

;;	  0-->    40 r179=[r415]                       :cortex_a8_load_store_1
;;	  2-->    42 r211=r175*0x20+r179               :cortex_a8_default
;;	  2-->    48 r216=r150*0x20+r179               :cortex_a8_default
;;	  3-->    43 r213=r211+0xff0                   :cortex_a8_default
;;	  3-->    49 r217=r216+0x40000000              :cortex_a8_default
;;	  4-->    44 r212=r213+0x4000000f              :cortex_a8_default
;;	  4-->   555 r177=r217&0xfffffffffffff00f      :cortex_a8_default
;;	  5-->   553 r178=r212&0xfffffffffffff00f      :cortex_a8_default
;;	  5-->   556 r177=r177&0xfffffffffffffff0      :cortex_a8_default
;;	  6-->   554 r178=r178&0xfffffffffffffff0      :cortex_a8_default
;;	  7-->    52 cc=cmp(r178,r177)                 :cortex_a8_default
;;	  9-->    53 pc={(geu(cc,0x0))?L59:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 40
;;   new tail = 53

;;   ======================================================
;;   -- basic block 5 from 56 to 58 -- before reload
;;   ======================================================

;;	  0-->    56 r0=r178                           :cortex_a8_default
;;	  1-->    57 r1=r177-r0                        :cortex_a8_default
;;	  2-->    58 call [`free_bootmem']             :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 56
;;   new tail = 58

;;   ======================================================
;;   -- basic block 6 from 63 to 552 -- before reload
;;   ======================================================

;;	  0-->    63 {r220=[r151+0x8]+[r151+0x4];clobbe:cortex_a8_load_store_1
;;	  3-->    64 r223=r220 0>>0xc                  :cortex_a8_default
;;	  4-->    65 r225=r223+0x3fc                   :cortex_a8_default
;;	  5-->    66 r224=r225+0x3                     :cortex_a8_default
;;	  6-->   551 r175=r224&0xfffffffffffffc03      :cortex_a8_default
;;	  7-->   552 r175=r175&0xfffffffffffffffc      :cortex_a8_default
;;	Ready list (final):  
;;   total time = 7
;;   new head = 63
;;   new tail = 552

;;   ======================================================
;;   -- basic block 15 from 148 to 149 -- before reload
;;   ======================================================

changing bb of uid 491
  from 14 to 15
;;	  0-->   491 r0=0xa                            :cortex_a8_default
;;	  0-->   148 cc=cmp(r144,r140)                 :cortex_a8_default
;;	  2-->   149 pc={(ltu(cc,0x0))?L147:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 148
;;   new tail = 149

;;   ======================================================
;;   -- basic block 14 from 133 to 144 -- before reload
;;   ======================================================

;;	  0-->   133 r245=[r406]                       :cortex_a8_load_store_1
;;	  0-->   143 r144=r144+0x1                     :cortex_a8_default
;;	  2-->   134 r172=r245+r153                    :cortex_a8_default
;;	  2-->   144 r153=r153+0x20                    :cortex_a8_default
;;	  3-->   136 r1=r172                           :cortex_a8_default
;;	  4-->   137 call [`_clear_bit']               :cortex_a8_issue_branch
;;	  4-->   139 [r172+0x10]=r407                  :cortex_a8_load_store_1
;;	  5-->   140 r0=r172                           :cortex_a8_default
;;	  5-->   493 r1=0x0                            :cortex_a8_default
;;	  6-->   142 call [`__free_pages']             :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 133
;;   new tail = 144

;;   ======================================================
;;   -- basic block 24 from 203 to 204 -- before reload
;;   ======================================================

changing bb of uid 487
  from 23 to 24
;;	  0-->   487 r0=0xa                            :cortex_a8_default
;;	  0-->   203 cc=cmp(r145,r148)                 :cortex_a8_default
changing bb of uid 198
  from 23 to 24
;;	  1-->   198 r145=r145+0x1                     :cortex_a8_default
;;	  2-->   204 pc={(ltu(cc,0x0))?L202:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 203
;;   new tail = 204

;;   ======================================================
;;   -- basic block 23 from 188 to 199 -- before reload
;;   ======================================================

;;	  0-->   188 r258=[r406]                       :cortex_a8_load_store_1
;;	  2-->   189 r173=r258+r154                    :cortex_a8_default
;;	  2-->   199 r154=r154+0x20                    :cortex_a8_default
;;	  3-->   191 r1=r173                           :cortex_a8_default
;;	  4-->   192 call [`_clear_bit']               :cortex_a8_issue_branch
;;	  4-->   194 [r173+0x10]=r407                  :cortex_a8_load_store_1
;;	  5-->   195 r0=r173                           :cortex_a8_default
;;	  5-->   489 r1=0x0                            :cortex_a8_default
;;	  6-->   197 call [`__free_pages']             :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 188
;;   new tail = 199

;;   ======================================================
;;   -- basic block 30 from 257 to 260 -- before reload
;;   ======================================================

;;	  0-->   257 r165=[r182]                       :cortex_a8_load_store_1
changing bb of uid 272
  from 33 to 30
;;	  0-->   272 r141=r182                         :cortex_a8_default
;;	  2-->   259 cc=cmp(zxt(r165,0x1,0xa),0x0)     :cortex_a8_default
;;	  4-->   260 pc={(cc==0x0)?L265:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 257
;;   new tail = 260

;;   ======================================================
;;   -- basic block 32 from 267 to 270 -- before reload
;;   ======================================================

;;	  0-->   267 r162=[r182]                       :cortex_a8_load_store_1
;;	  2-->   269 cc=cmp(zxt(r162,0x1,0xf),0x0)     :cortex_a8_default
;;	  4-->   270 pc={(cc!=0x0)?L275:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 267
;;   new tail = 270

;;   ======================================================
;;   -- basic block 33 from 539 to 539 -- before reload
;;   ======================================================

;;	  0-->   539 pc=L278                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 539
;;   new tail = 539

;;   ======================================================
;;   -- basic block 34 from 277 to 277 -- before reload
;;   ======================================================

;;	  0-->   277 r141=[r182+0x1c]                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 277
;;   new tail = 277

;;   ======================================================
;;   -- basic block 31 from 262 to 537 -- before reload
;;   ======================================================

;;	  0-->   262 r185=r185+0x1                     :cortex_a8_default
;;	  0-->   537 pc=L286                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 262
;;   new tail = 537

;;   ======================================================
;;   -- basic block 35 from 281 to 283 -- before reload
;;   ======================================================

;;	  2-->   281 r163=[r141+0x10]                  :cortex_a8_load_store_1
;;	  4-->   282 cc=cmp(r163,0x0)                  :cortex_a8_default
;;	  6-->   283 pc={(cc!=0x0)?L286:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 281
;;   new tail = 283

;;   ======================================================
;;   -- basic block 36 from 285 to 285 -- before reload
;;   ======================================================

;;	  0-->   285 r184=r184+0x1                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 285
;;   new tail = 285

;;   ======================================================
;;   -- basic block 37 from 288 to 291 -- before reload
;;   ======================================================

;;	  0-->   288 r182=r182+0x20                    :cortex_a8_default
;;	  1-->   290 cc=cmp(r182,r181)                 :cortex_a8_default
;;	  3-->   291 pc={(ltu(cc,0x0))?L289:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 288
;;   new tail = 291

;;   ======================================================
;;   -- basic block 42 from 332 to 342 -- before reload
;;   ======================================================

;;	  0-->   337 r306=[r384+0x8]                   :cortex_a8_load_store_1
;;	  0-->   332 r136=r157                         :cortex_a8_default
;;	  1-->   339 r308=[r384+0x10]                  :cortex_a8_load_store_1
;;	  1-->   333 r157=r157+0x8                     :cortex_a8_default
;;	  2-->   483 r383=`num_physpages'              :cortex_a8_load_store_1
;;	  3-->   340 r307=r306*0x8+r308                :cortex_a8_default
;;	  4-->   341 cc=cmp(r136,r307)                 :cortex_a8_default
;;	  6-->   342 pc={(ltu(cc,0x0))?L334:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 332
;;   new tail = 342

;;   ======================================================
;;   -- basic block 41 from 312 to 329 -- before reload
;;   ======================================================

;;	  0-->   312 r160=[r157-0x8]                   :cortex_a8_load_store_1
;;	  1-->   313 r292=[r157-0x4]                   :cortex_a8_load_store_1
;;	  2-->   316 r295=r160+0xff0                   :cortex_a8_default
;;	  2-->   322 r299=[r385]                       :cortex_a8_load_store_1
;;	  3-->   317 r294=r295+0xf                     :cortex_a8_default
;;	  3-->   314 r291=r160+r292                    :cortex_a8_default
;;	  4-->   484 r0=`*.LC5'                        :cortex_a8_load_store_1
;;	  5-->   318 r296=r294 0>>0xc                  :cortex_a8_default
;;	  6-->   319 r180=r291 0>>0xc-r296             :cortex_a8_default
;;	  7-->   323 r300=r180+r299                    :cortex_a8_default
;;	  7-->   324 [r385]=r300                       :cortex_a8_load_store_1
;;	  8-->   328 r1=r180 0>>0x8                    :cortex_a8_default
;;	  9-->   329 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 312
;;   new tail = 329

;;   ======================================================
;;   -- basic block 2 from 8 to 525 -- before reload
;;   ======================================================

;;	  0-->     9 r194=`max_pfn'                    :cortex_a8_load_store_1
;;	  0-->    14 r152=0x0                          :cortex_a8_default
;;	  1-->     8 r193=`max_mapnr'                  :cortex_a8_load_store_1
;;	  1-->    15 r176=r152                         :cortex_a8_default
;;	  2-->    74 r413=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  2-->    16 r175=r152                         :cortex_a8_default
;;	  3-->    10 r196=[r194]                       :cortex_a8_load_store_1
;;	  4-->    21 r414=r413+0x4                     :cortex_a8_default
;;	  4-->    39 r415=`mem_map'                    :cortex_a8_load_store_1
;;	  5-->    12 r197=sxt(r196,0x1b,0x0)           :cortex_a8_default
;;	  5-->    13 [r193]=r197                       :cortex_a8_load_store_1
;;	  6-->   525 pc=L71                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 8
;;   new tail = 525

;;   ======================================================
;;   -- basic block 8 from 79 to 527 -- before reload
;;   ======================================================

;;	  0-->    79 r229=`totalram_pages'             :cortex_a8_load_store_1
;;	  0-->   138 r407=0x1                          :cortex_a8_default
;;	  1-->   125 r405=`totalhigh_pages'            :cortex_a8_load_store_1
;;	  2-->   132 r406=`mem_map'                    :cortex_a8_load_store_1
;;	  3-->    80 r192=[r229]                       :cortex_a8_load_store_1
;;	  3-->    81 r0=call [`free_all_bootmem']      :cortex_a8_issue_branch
;;	  4-->    88 r233=`memblock'                   :cortex_a8_load_store_1
;;	  5-->    86 r232=`max_low_pfn'                :cortex_a8_load_store_1
;;	  6-->   216 r404=r233                         :cortex_a8_default
;;	  7-->    89 r167=[r233+0x10]                  :cortex_a8_load_store_1
;;	  8-->    87 r169=[r232]                       :cortex_a8_load_store_1
;;	 35-->    84 r231=r0+r192                      :cortex_a8_default
;;	 35-->    85 [r229]=r231                       :cortex_a8_load_store_1
;;	 36-->   527 pc=L213                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 36
;;   new head = 79
;;   new tail = 527

;;   ======================================================
;;   -- basic block 9 from 93 to 98 -- before reload
;;   ======================================================

;;	  0-->    93 r170=[r167]                       :cortex_a8_load_store_1
;;	  1-->    94 r235=[r167+0x4]                   :cortex_a8_load_store_1
;;	  3-->    95 r234=r170+r235                    :cortex_a8_default
;;	  5-->    96 r148=r234 0>>0xc                  :cortex_a8_default
;;	  6-->    97 cc=cmp(r148,r169)                 :cortex_a8_default
;;	  8-->    98 pc={(leu(cc,0x0))?L210:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 93
;;   new tail = 98

;;   ======================================================
;;   -- basic block 10 from 100 to 529 -- before reload
;;   ======================================================

;;	  0-->   100 r237=r170+0xff0                   :cortex_a8_default
;;	  0-->   105 r168=[r404+0x1c]                  :cortex_a8_load_store_1
;;	  1-->   101 r236=r237+0xf                     :cortex_a8_default
;;	  3-->   102 r149=r236 0>>0xc                  :cortex_a8_default
;;	  4-->   103 {r145=umax(r149,r169);clobber cc;}:cortex_a8_default
;;	  4-->   529 pc=L164                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 4
;;   new head = 100
;;   new tail = 529

;;   ======================================================
;;   -- basic block 11 from 109 to 116 -- before reload
;;   ======================================================

;;	  0-->   109 r171=[r168]                       :cortex_a8_load_store_1
;;	  1-->   110 r240=[r168+0x4]                   :cortex_a8_load_store_1
;;	  3-->   111 r239=r171+r240                    :cortex_a8_default
;;	  4-->   112 r242=r239+0xff0                   :cortex_a8_default
;;	  5-->   113 r241=r242+0xf                     :cortex_a8_default
;;	  7-->   114 r146=r241 0>>0xc                  :cortex_a8_default
;;	  8-->   115 cc=cmp(r146,r145)                 :cortex_a8_default
;;	 10-->   116 pc={(ltu(cc,0x0))?L161:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 109
;;   new tail = 116

;;   ======================================================
;;   -- basic block 12 from 118 to 123 -- before reload
;;   ======================================================

;;	  0-->   118 r147=r171 0>>0xc                  :cortex_a8_default
;;	  0-->   121 {r139=umin(r146,r148);clobber cc;}:cortex_a8_default
;;	  1-->   119 {r138=umax(r145,r147);clobber cc;}:cortex_a8_default
;;	  2-->   120 {r140=umin(r138,r148);clobber cc;}:cortex_a8_default
;;	  3-->   122 cc=cmp(r140,r145)                 :cortex_a8_default
;;	  5-->   123 pc={(cc==0x0)?L155:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 5
;;   new head = 118
;;   new tail = 123

;;   ======================================================
;;   -- basic block 13 from 126 to 531 -- before reload
;;   ======================================================

;;	  0-->   126 r166=[r405]                       :cortex_a8_load_store_1
;;	  0-->   127 r153=r145<<0x5                    :cortex_a8_default
;;	  1-->   128 r144=r145                         :cortex_a8_default
;;	  1-->   531 pc=L145                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 126
;;   new tail = 531

;;   ======================================================
;;   -- basic block 16 from 152 to 154 -- before reload
;;   ======================================================

;;	  0-->   152 r248=r166-r145                    :cortex_a8_default
;;	  1-->   153 r249=r248+r144                    :cortex_a8_default
;;	  1-->   154 [r405]=r249                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 152
;;   new tail = 154

;;   ======================================================
;;   -- basic block 17 from 157 to 158 -- before reload
;;   ======================================================

;;	  0-->   157 cc=cmp(r139,r148)                 :cortex_a8_default
;;	  2-->   158 pc={(cc==0x0)?L210:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 157
;;   new tail = 158

;;   ======================================================
;;   -- basic block 18 from 160 to 160 -- before reload
;;   ======================================================

;;	  0-->   160 r145=r139                         :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 160
;;   new tail = 160

;;   ======================================================
;;   -- basic block 19 from 163 to 163 -- before reload
;;   ======================================================

;;	  0-->   163 r168=r168+0x8                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 163
;;   new tail = 163

;;   ======================================================
;;   -- basic block 20 from 169 to 174 -- before reload
;;   ======================================================

;;	  0-->   169 r253=[r404+0x14]                  :cortex_a8_load_store_1
;;	  1-->   171 r255=[r404+0x1c]                  :cortex_a8_load_store_1
;;	  3-->   172 r254=r253*0x8+r255                :cortex_a8_default
;;	  4-->   173 cc=cmp(r168,r254)                 :cortex_a8_default
;;	  6-->   174 pc={(ltu(cc,0x0))?L166:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 169
;;   new tail = 174

;;   ======================================================
;;   -- basic block 21 from 176 to 179 -- before reload
;;   ======================================================

;;	  0-->   178 cc=cmp(r145,r148)                 :cortex_a8_default
;;	  0-->   176 r137=r145                         :cortex_a8_default
;;	  2-->   179 pc={(geu(cc,0x0))?L210:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 176
;;   new tail = 179

;;   ======================================================
;;   -- basic block 22 from 182 to 533 -- before reload
;;   ======================================================

;;	  0-->   182 r142=[r405]                       :cortex_a8_load_store_1
;;	  0-->   183 r154=r145<<0x5                    :cortex_a8_default
;;	  1-->   533 pc=L200                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 1
;;   new head = 182
;;   new tail = 533

;;   ======================================================
;;   -- basic block 25 from 207 to 209 -- before reload
;;   ======================================================

;;	  0-->   207 r261=r148+r142                    :cortex_a8_default
;;	  1-->   208 r262=r261-r137                    :cortex_a8_default
;;	  1-->   209 [r405]=r262                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 1
;;   new head = 207
;;   new tail = 209

;;   ======================================================
;;   -- basic block 26 from 212 to 212 -- before reload
;;   ======================================================

;;	  0-->   212 r167=r167+0x8                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 212
;;   new tail = 212

;;   ======================================================
;;   -- basic block 27 from 218 to 223 -- before reload
;;   ======================================================

;;	  0-->   218 r266=[r404+0x8]                   :cortex_a8_load_store_1
;;	  1-->   220 r268=[r404+0x10]                  :cortex_a8_load_store_1
;;	  3-->   221 r267=r266*0x8+r268                :cortex_a8_default
;;	  4-->   222 cc=cmp(r167,r267)                 :cortex_a8_default
;;	  6-->   223 pc={(ltu(cc,0x0))?L215:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 218
;;   new tail = 223

;;   ======================================================
;;   -- basic block 28 from 225 to 535 -- before reload
;;   ======================================================

;;	  0-->   225 r269=`totalram_pages'             :cortex_a8_load_store_1
;;	  0-->   236 r156=0x0                          :cortex_a8_default
;;	  1-->   226 r270=`totalhigh_pages'            :cortex_a8_load_store_1
;;	  1-->   237 r183=r156                         :cortex_a8_default
;;	  2-->   524 r387=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  2-->   238 r184=r156                         :cortex_a8_default
;;	  3-->   234 r276=`mem_map'                    :cortex_a8_load_store_1
;;	  3-->   239 r185=r156                         :cortex_a8_default
;;	  4-->   228 r272=[r270]                       :cortex_a8_load_store_1
;;	  5-->   229 r273=[r269]                       :cortex_a8_load_store_1
;;	  6-->   235 r189=[r276]                       :cortex_a8_load_store_1
;;	  7-->   230 r274=r272+r273                    :cortex_a8_default
;;	  7-->   231 [r269]=r274                       :cortex_a8_load_store_1
;;	  8-->   233 r188=[++r387]                     :cortex_a8_load_store_1
;;	  8-->   535 pc=L295                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 8
;;   new head = 225
;;   new tail = 535

;;   ======================================================
;;   -- basic block 29 from 245 to 254 -- before reload
;;   ======================================================

;;	  0-->   245 r155=r387+r156                    :cortex_a8_default
;;	  2-->   250 r282=[r155+0x8]                   :cortex_a8_load_store_1
;;	  3-->   246 r190=[r155+0x4]                   :cortex_a8_load_store_1
;;	  5-->   251 r281=r190+r282                    :cortex_a8_default
;;	  6-->   247 r279=r190 0>>0xc                  :cortex_a8_default
;;	  7-->   252 r283=r281 0>>0xc                  :cortex_a8_default
;;	  8-->   249 r182=r279*0x20+r189               :cortex_a8_default
;;	  9-->   254 r181=r283*0x20+r189               :cortex_a8_default
;;	Ready list (final):  
;;   total time = 9
;;   new head = 245
;;   new tail = 254

;;   ======================================================
;;   -- basic block 38 from 293 to 294 -- before reload
;;   ======================================================

;;	  0-->   293 r183=r183+0x1                     :cortex_a8_default
;;	  0-->   294 r156=r156+0xc                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 293
;;   new tail = 294

;;   ======================================================
;;   -- basic block 39 from 298 to 299 -- before reload
;;   ======================================================

;;	  0-->   298 cc=cmp(r183,r188)                 :cortex_a8_default
;;	  2-->   299 pc={(cc<0x0)?L297:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 298
;;   new tail = 299

;;   ======================================================
;;   -- basic block 40 from 302 to 541 -- before reload
;;   ======================================================

;;	  0-->   302 r0=`*.LC4'                        :cortex_a8_load_store_1
;;	  1-->   303 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->   304 r288=`num_physpages'              :cortex_a8_load_store_1
;;	  2-->   307 r290=`memblock'                   :cortex_a8_load_store_1
;;	  2-->   305 r289=0x0                          :cortex_a8_default
;;	  3-->   478 r385=r288                         :cortex_a8_default
;;	  4-->   306 [r288]=r289                       :cortex_a8_load_store_1
;;	  4-->   335 r384=r290                         :cortex_a8_default
;;	  5-->   308 r157=[r290+0x10]                  :cortex_a8_load_store_1
;;	  5-->   541 pc=L330                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 5
;;   new head = 302
;;   new tail = 541

;;   ======================================================
;;   -- basic block 43 from 346 to 469 -- before reload
;;   ======================================================

;;	  0-->   346 r312=[r383]                       :cortex_a8_load_store_1
;;	  1-->   348 r0=`*.LC6'                        :cortex_a8_load_store_1
;;	  3-->   349 r1=r312 0>>0x8                    :cortex_a8_default
;;	  4-->   350 r0=call [`printk']                :cortex_a8_issue_branch
;;	  4-->   351 r159=`vm_stat'                    :cortex_a8_load_store_1
;;	  5-->   358 r318=`totalhigh_pages'            :cortex_a8_load_store_1
;;	  5-->   364 r2=r184<<0x2                      :cortex_a8_default
;;	  6-->   365 r3=r185<<0x2                      :cortex_a8_default
;;	  6-->   362 r0=`*.LC7'                        :cortex_a8_load_store_1
;;	  7-->   352 r158=[r159]                       :cortex_a8_load_store_1
;;	  8-->   359 r320=[r318]                       :cortex_a8_load_store_1
;;	  9-->   354 r314=smax(r158,0x0)               :cortex_a8_default
;;	 11-->   363 r1=r314<<0x2                      :cortex_a8_default
;;	 11-->   360 r319=r320<<0x2                    :cortex_a8_default
;;	 12-->   361 [sp]=r319                         :cortex_a8_load_store_1
;;	 12-->   366 r0=call [`printk']                :cortex_a8_issue_branch
;;	 13-->   367 r321=`high_memory'                :cortex_a8_load_store_1
;;	 13-->   468 r3=0x4                            :cortex_a8_default
;;	 14-->   409 r343=`_text'                      :cortex_a8_load_store_1
;;	 14-->   383 r330=0xe                          :cortex_a8_default
;;	 15-->   423 r353=`__init_begin'               :cortex_a8_load_store_1
;;	 15-->   391 r334=0xffffffffc0000000           :cortex_a8_default
;;	 16-->   368 r187=[r321]                       :cortex_a8_load_store_1
;;	 16-->   377 r327=0x380                        :cortex_a8_default
;;	 17-->   437 r363=`_sdata'                     :cortex_a8_load_store_1
;;	 17-->   379 r328=0xffffffffff000000           :cortex_a8_default
;;	 18-->   369 r322=r187+0x800000                :cortex_a8_default
;;	 18-->   451 r373=`__bss_start'                :cortex_a8_load_store_1
;;	 19-->   413 r346=const(`_etext'+0x3ff)        :cortex_a8_load_store_1
;;	 19-->   394 r335=r187+0x40000000              :cortex_a8_default
;;	 20-->   427 r356=const(`__init_end'+0x3ff)    :cortex_a8_load_store_1
;;	 20-->   543 r186=r322 0>>0x17                 :cortex_a8_default
;;	 21-->   441 r366=const(`_edata'+0x3ff)        :cortex_a8_load_store_1
;;	 21-->   415 r345=r346-r343                    :cortex_a8_default
;;	 22-->   455 r376=const(`__bss_stop'+0x3ff)    :cortex_a8_load_store_1
;;	 22-->   429 r355=r356-r353                    :cortex_a8_default
;;	 23-->   443 r365=r366-r363                    :cortex_a8_default
;;	 23-->   544 r186=r186<<0x17                   :cortex_a8_default
;;	 24-->   457 r375=r376-r373                    :cortex_a8_default
;;	 24-->   397 r337=0xffffffffbfe00000           :cortex_a8_load_store_1
;;	 25-->   373 r325=0xfffffffffff00000           :cortex_a8_load_store_1
;;	 25-->   417 r351=r345+0x3fc                   :cortex_a8_default
;;	 26-->   375 r326=0xfffffffffffe0000           :cortex_a8_load_store_1
;;	 26-->   431 r361=r355+0x3fc                   :cortex_a8_default
;;	 27-->   381 r329=0xffffffffffe00000           :cortex_a8_load_store_1
;;	 27-->   445 r371=r365+0x3fc                   :cortex_a8_default
;;	 28-->   411 r344=`_etext'                     :cortex_a8_load_store_1
;;	 28-->   459 r381=r375+0x3fc                   :cortex_a8_default
;;	 29-->   425 r354=`__init_end'                 :cortex_a8_load_store_1
;;	 29-->   420 {r349={(r345>=0x0)?r345:r351+0x3};:cortex_a8_default
;;	 30-->   439 r364=`_edata'                     :cortex_a8_load_store_1
;;	 30-->   434 {r359={(r355>=0x0)?r355:r361+0x3};:cortex_a8_default
;;	 31-->   453 r374=`__bss_stop'                 :cortex_a8_load_store_1
;;	 31-->   448 {r369={(r365>=0x0)?r365:r371+0x3};:cortex_a8_default
;;	 32-->   462 {r379={(r375>=0x0)?r375:r381+0x3};:cortex_a8_default
;;	 32-->   388 r332=0xfffffffff8000000-r186      :cortex_a8_default
;;	 33-->   465 r0=`*.LC8'                        :cortex_a8_load_store_1
;;	 33-->   395 r336=r335 0>>0x14                 :cortex_a8_default
;;	 34-->   466 r1=0xffffffffffff0000             :cortex_a8_load_store_1
;;	 34-->   389 r333=r332 0>>0x14                 :cortex_a8_default
;;	 35-->   467 r2=0xffffffffffff1000             :cortex_a8_load_store_1
;;	 35-->   421 r352=r349>>0xa                    :cortex_a8_default
;;	 36-->   374 [sp]=r325                         :cortex_a8_load_store_1
;;	 36-->   435 r362=r359>>0xa                    :cortex_a8_default
;;	 37-->   376 [sp+0x4]=r326                     :cortex_a8_load_store_1
;;	 37-->   449 r372=r369>>0xa                    :cortex_a8_default
;;	 38-->   378 [sp+0x8]=r327                     :cortex_a8_load_store_1
;;	 38-->   463 r382=r379>>0xa                    :cortex_a8_default
;;	 39-->   380 [sp+0xc]=r328                     :cortex_a8_load_store_1
;;	 39-->   386 r331=0xfffffffff8000000           :cortex_a8_default
;;	 40-->   382 [sp+0x10]=r329                    :cortex_a8_load_store_1
;;	 40-->   401 r339=0x2                          :cortex_a8_default
;;	 41-->   387 [sp+0x1c]=r331                    :cortex_a8_load_store_1
;;	 41-->   403 r340=0xffffffffbf000000           :cortex_a8_default
;;	 42-->   390 [sp+0x20]=r333                    :cortex_a8_load_store_1
;;	 43-->   396 [sp+0x2c]=r336                    :cortex_a8_load_store_1
;;	 44-->   400 [sp+0x34]=r334                    :cortex_a8_load_store_1
;;	 45-->   402 [sp+0x38]=r339                    :cortex_a8_load_store_1
;;	 46-->   404 [sp+0x3c]=r340                    :cortex_a8_load_store_1
;;	 47-->   406 [sp+0x40]=r337                    :cortex_a8_load_store_1
;;	 48-->   408 [sp+0x44]=r330                    :cortex_a8_load_store_1
;;	 49-->   412 [sp+0x4c]=r344                    :cortex_a8_load_store_1
;;	 50-->   422 [sp+0x50]=r352                    :cortex_a8_load_store_1
;;	 51-->   426 [sp+0x58]=r354                    :cortex_a8_load_store_1
;;	 52-->   436 [sp+0x5c]=r362                    :cortex_a8_load_store_1
;;	 53-->   440 [sp+0x64]=r364                    :cortex_a8_load_store_1
;;	 54-->   450 [sp+0x68]=r372                    :cortex_a8_load_store_1
;;	 55-->   454 [sp+0x70]=r374                    :cortex_a8_load_store_1
;;	 56-->   464 [sp+0x74]=r382                    :cortex_a8_load_store_1
;;	 57-->   384 [sp+0x14]=r330                    :cortex_a8_load_store_1
;;	 58-->   385 [sp+0x18]=r186                    :cortex_a8_load_store_1
;;	 59-->   392 [sp+0x24]=r334                    :cortex_a8_load_store_1
;;	 60-->   393 [sp+0x28]=r187                    :cortex_a8_load_store_1
;;	 61-->   398 [sp+0x30]=r337                    :cortex_a8_load_store_1
;;	 62-->   410 [sp+0x48]=r343                    :cortex_a8_load_store_1
;;	 63-->   424 [sp+0x54]=r353                    :cortex_a8_load_store_1
;;	 64-->   438 [sp+0x60]=r363                    :cortex_a8_load_store_1
;;	 65-->   452 [sp+0x6c]=r373                    :cortex_a8_load_store_1
;;	 65-->   469 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 65
;;   new head = 346
;;   new tail = 469


;; Procedure interblock/speculative motions == 7/7 




mem_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={22d,12u} r1={21d,9u} r2={14d,2u} r3={14d,2u} r11={1d,43u} r12={12d} r13={1d,85u} r14={12d,1u} r15={11d} r16={11d} r17={11d} r18={11d} r19={11d} r20={11d} r21={11d} r22={11d} r23={11d} r24={37d,18u} r25={1d,43u} r26={1d,42u} r27={11d} r28={11d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={11d} r38={11d} r39={11d} r40={11d} r41={11d} r42={11d} r43={11d} r44={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} r81={11d} r82={11d} r83={11d} r84={11d} r85={11d} r86={11d} r87={11d} r88={11d} r89={11d} r90={11d} r91={11d} r92={11d} r93={11d} r94={11d} r95={11d} r96={11d} r97={11d} r98={11d} r99={11d} r100={11d} r101={11d} r102={11d} r103={11d} r104={11d} r105={11d} r106={11d} r107={11d} r108={11d} r109={11d} r110={11d} r111={11d} r112={11d} r113={11d} r114={11d} r115={11d} r116={11d} r117={11d} r118={11d} r119={11d} r120={11d} r121={11d} r122={11d} r123={11d} r124={11d} r125={11d} r126={11d} r127={11d} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,2u} r141={2d,1u} r142={1d,1u} r144={2d,3u} r145={3d,11u} r146={1d,2u} r147={1d,1u} r148={1d,7u} r149={1d,1u} r150={1d,2u} r151={1d,3u} r152={2d,4u,1d} r153={2d,2u} r154={2d,2u} r155={1d,2u} r156={2d,5u,1d} r157={2d,4u} r158={1d,1u} r159={1d,1u} r160={1d,2u,1d} r162={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r167={2d,4u} r168={2d,4u} r169={1d,2u} r170={1d,2u,1d} r171={1d,2u} r172={1d,3u} r173={1d,3u} r174={1d,1u,1d} r175={3d,4u} r176={2d,2u} r177={2d,3u} r178={2d,3u} r179={1d,2u} r180={1d,2u} r181={1d,1u} r182={2d,6u} r183={2d,2u} r184={2d,2u} r185={2d,2u} r186={2d,3u} r187={1d,3u} r188={1d,1u} r189={1d,2u} r190={1d,2u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r200={1d,1u} r201={1d,1u} r211={1d,1u,1d} r212={1d,1u} r213={1d,1u} r216={1d,1u} r217={1d,1u} r220={1d,1u} r223={1d,1u,1d} r224={1d,1u} r225={1d,1u} r228={1d,1u} r229={1d,2u} r231={1d,1u} r232={1d,1u} r233={1d,2u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r239={1d,1u,1d} r240={1d,1u} r241={1d,1u} r242={1d,1u} r245={1d,1u} r248={1d,1u} r249={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r258={1d,1u} r261={1d,1u} r262={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,2u} r270={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r276={1d,1u} r279={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r288={1d,2u} r289={1d,1u} r290={1d,2u} r291={1d,1u} r292={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r299={1d,1u} r300={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r312={1d,1u} r314={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,2u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,2u} r335={1d,1u} r336={1d,1u} r337={1d,2u} r339={1d,1u} r340={1d,1u} r343={1d,2u} r344={1d,1u} r345={1d,3u,1d} r346={1d,1u} r349={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,2u} r354={1d,1u} r355={1d,3u,1d} r356={1d,1u} r359={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,2u} r364={1d,1u} r365={1d,3u,1d} r366={1d,1u} r369={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,2u} r374={1d,1u} r375={1d,3u,1d} r376={1d,1u} r379={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,2u} r385={1d,2u} r387={2d,2u} r404={1d,5u} r405={1d,4u} r406={1d,2u} r407={1d,2u} r413={1d,2u} r414={1d,1u} r415={1d,1u} 
;;    total ref usage 2099{1545d,542u,12e} in 317{306 regular + 11 call} insns.
(note 4 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152 175 176 193 194 196 197 413 414 415
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152 175 176 193 194 196 197 413 414 415
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 4 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 5 9 2 NOTE_INSN_DELETED)

(insn 9 11 14 2 arch/arm/mm/init.c:595 (set (reg/f:SI 194)
        (symbol_ref:SI ("max_pfn") [flags 0xc0] <var_decl 0x1108fae0 max_pfn>)) 167 {*arm_movsi_insn} (nil))

(insn 14 9 8 2 arch/arm/mm/init.c:595 (set (reg:SI 152 [ ivtmp.752 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 14 15 2 arch/arm/mm/init.c:595 (set (reg/f:SI 193)
        (symbol_ref:SI ("max_mapnr") [flags 0xc0] <var_decl 0x110aed20 max_mapnr>)) 167 {*arm_movsi_insn} (nil))

(insn 15 8 74 2 arch/arm/mm/init.c:487 (set (reg/v:SI 176 [ i ])
        (reg:SI 152 [ ivtmp.752 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 74 15 16 2 arch/arm/mm/init.c:487 discrim 1 (set (reg/f:SI 413)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 16 74 10 2 arch/arm/mm/init.c:480 (set (reg/v:SI 175 [ prev_bank_end ])
        (reg:SI 152 [ ivtmp.752 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 10 16 21 2 arch/arm/mm/init.c:595 (set (reg:SI 196 [ max_pfn ])
        (mem/c/i:SI (reg/f:SI 194) [0 max_pfn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 194)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("max_pfn") [flags 0xc0] <var_decl 0x1108fae0 max_pfn>) [0 max_pfn+0 S4 A32])
            (nil))))

(insn 21 10 39 2 arch/arm/mm/init.c:584 (set (reg/f:SI 414)
        (plus:SI (reg/f:SI 413)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 39 21 12 2 arch/arm/mm/init.c:457 (set (reg/f:SI 415)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 12 39 13 2 arch/arm/mm/init.c:595 (set (reg:SI 197)
        (sign_extract:SI (reg:SI 196 [ max_pfn ])
            (const_int 27 [0x1b])
            (const_int 0 [0x0]))) 123 {extv} (expr_list:REG_DEAD (reg:SI 196 [ max_pfn ])
        (nil)))

(insn 13 12 525 2 arch/arm/mm/init.c:595 (set (mem/c/i:SI (reg/f:SI 193) [0 max_mapnr+0 S4 A32])
        (reg:SI 197)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_DEAD (reg/f:SI 193)
            (nil))))

(jump_insn 525 13 526 2 (set (pc)
        (label_ref 71)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415


;; Succ edge  7 [100.0%] 

(barrier 526 525 73)

;; Start of basic block ( 7) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 414
;; lr  def 	 24 [cc] 150 151 174 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 175 176 413 414 415
;; live  gen 	 24 [cc] 150 151 174 200 201
;; live  kill	

;; Pred edge  7 [88.9%] 
(code_label 73 526 19 3 45 "" [1 uses])

(note 19 73 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 27 19 28 3 NOTE_INSN_DELETED)

(note 28 27 30 3 NOTE_INSN_DELETED)

(note 30 28 31 3 NOTE_INSN_DELETED)

(note 31 30 33 3 NOTE_INSN_DELETED)

(note 33 31 34 3 NOTE_INSN_DELETED)

(note 34 33 35 3 NOTE_INSN_DELETED)

(note 35 34 23 3 NOTE_INSN_DELETED)

(insn 23 35 24 3 arch/arm/mm/init.c:490 (set (reg:SI 200 [ <variable>.start ])
        (mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.26350 ])
                (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 arch/arm/mm/init.c:490 (set (reg/v:SI 174 [ bank_start ])
        (lshiftrt:SI (reg:SI 200 [ <variable>.start ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 200 [ <variable>.start ])
        (nil)))

(insn 25 24 26 3 arch/arm/mm/init.c:505 (set (reg:SI 201)
        (and:SI (reg/v:SI 174 [ bank_start ])
            (const_int -1021 [0xfffffffffffffc03]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 174 [ bank_start ])
        (nil)))

(insn 26 25 36 3 arch/arm/mm/init.c:505 (set (reg/v:SI 150 [ bank_start.756 ])
        (and:SI (reg:SI 201)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 201)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 174 [ bank_start ])
                (const_int -1024 [0xfffffffffffffc00]))
            (nil))))

(insn 36 26 37 3 arch/arm/mm/init.c:511 (set (reg:CC_DLTU 24 cc)
        (compare:CC_DLTU (and:SI (ltu:SI (reg/v:SI 175 [ prev_bank_end ])
                    (reg/v:SI 150 [ bank_start.756 ]))
                (ne:SI (reg/v:SI 175 [ prev_bank_end ])
                    (const_int 0 [0x0])))
            (const_int 0 [0x0]))) 284 {*cmp_and} (nil))

(jump_insn 37 36 38 3 arch/arm/mm/init.c:511 (set (pc)
        (if_then_else (eq (reg:CC_DLTU 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DLTU 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 175 415
;; lr  def 	 24 [cc] 177 178 179 211 212 213 216 217
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415
;; live  gen 	 24 [cc] 177 178 179 211 212 213 216 217
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 38 37 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 41 38 45 4 NOTE_INSN_DELETED)

(note 45 41 47 4 NOTE_INSN_DELETED)

(note 47 45 50 4 NOTE_INSN_DELETED)

(note 50 47 40 4 NOTE_INSN_DELETED)

(insn 40 50 42 4 arch/arm/mm/init.c:457 (set (reg/f:SI 179 [ mem_map.375 ])
        (mem/f/c/i:SI (reg/f:SI 415) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 42 40 48 4 arch/arm/mm/init.c:464 (set (reg:SI 211)
        (plus:SI (mult:SI (reg/v:SI 175 [ prev_bank_end ])
                (const_int 32 [0x20]))
            (reg/f:SI 179 [ mem_map.375 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/v:SI 175 [ prev_bank_end ])
        (nil)))

(insn 48 42 43 4 arch/arm/mm/init.c:465 (set (reg:SI 216)
        (plus:SI (mult:SI (reg/v:SI 150 [ bank_start.756 ])
                (const_int 32 [0x20]))
            (reg/f:SI 179 [ mem_map.375 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 179 [ mem_map.375 ])
        (expr_list:REG_DEAD (reg/v:SI 150 [ bank_start.756 ])
            (nil))))

(insn 43 48 49 4 arch/arm/mm/init.c:464 (set (reg:SI 213)
        (plus:SI (reg:SI 211)
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 211)
        (nil)))

(insn 49 43 44 4 arch/arm/mm/init.c:465 (set (reg:SI 217)
        (plus:SI (reg:SI 216)
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 216)
        (nil)))

(insn 44 49 555 4 arch/arm/mm/init.c:464 (set (reg:SI 212)
        (plus:SI (reg:SI 213)
            (const_int 1073741839 [0x4000000f]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 211)
                (const_int 1073745919 [0x40000fff]))
            (nil))))

(insn 555 44 553 4 arch/arm/mm/init.c:465 (set (reg/v:SI 177 [ pgend ])
        (and:SI (reg:SI 217)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 217)
        (nil)))

(insn 553 555 556 4 arch/arm/mm/init.c:464 (set (reg/v:SI 178 [ pg ])
        (and:SI (reg:SI 212)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 556 553 554 4 arch/arm/mm/init.c:465 (set (reg/v:SI 177 [ pgend ])
        (and:SI (reg/v:SI 177 [ pgend ])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 554 556 52 4 arch/arm/mm/init.c:464 (set (reg/v:SI 178 [ pg ])
        (and:SI (reg/v:SI 178 [ pg ])
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (nil))

(insn 52 554 53 4 arch/arm/mm/init.c:471 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 178 [ pg ])
            (reg/v:SI 177 [ pgend ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 53 52 54 4 arch/arm/mm/init.c:471 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415


;; Succ edge  5 [29.0%]  (fallthru)
;; Succ edge  6 [71.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [29.0%]  (fallthru)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 55 54 56 5 NOTE_INSN_DELETED)

(insn 56 55 57 5 arch/arm/mm/init.c:472 (set (reg:SI 0 r0)
        (reg/v:SI 178 [ pg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 178 [ pg ])
        (nil)))

(insn 57 56 58 5 arch/arm/mm/init.c:472 (set (reg:SI 1 r1)
        (minus:SI (reg/v:SI 177 [ pgend ])
            (reg:SI 0 r0))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 177 [ pgend ])
        (nil)))

(call_insn 58 57 59 5 arch/arm/mm/init.c:472 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_bootmem") [flags 0x41] <function_decl 0x11095600 free_bootmem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176
;; lr  def 	 152 175 176 220 223 224 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415
;; live  gen 	 152 175 176 220 223 224 225
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [71.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 59 58 60 6 44 "" [2 uses])

(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 61 60 62 6 NOTE_INSN_DELETED)

(note 62 61 67 6 NOTE_INSN_DELETED)

(note 67 62 63 6 NOTE_INSN_DELETED)

(insn 63 67 64 6 arch/arm/mm/init.c:519 (parallel [
            (set (reg:SI 220)
                (plus:SI (mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.26350 ])
                            (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])
                    (mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.26350 ])
                            (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])))
            (clobber (scratch:SI))
        ]) 321 {*arith_adjacentmem} (expr_list:REG_DEAD (reg/f:SI 151 [ D.26350 ])
        (nil)))

(insn 64 63 65 6 arch/arm/mm/init.c:519 (set (reg:SI 223)
        (lshiftrt:SI (reg:SI 220)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 220)
        (nil)))

(insn 65 64 66 6 arch/arm/mm/init.c:519 (set (reg:SI 225)
        (plus:SI (reg:SI 223)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 223)
        (nil)))

(insn 66 65 551 6 arch/arm/mm/init.c:519 (set (reg:SI 224)
        (plus:SI (reg:SI 225)
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 225)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 223)
                (const_int 1023 [0x3ff]))
            (nil))))

(insn 551 66 552 6 arch/arm/mm/init.c:519 (set (reg/v:SI 175 [ prev_bank_end ])
        (and:SI (reg:SI 224)
            (const_int -1021 [0xfffffffffffffc03]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 224)
        (nil)))

(insn 552 551 71 6 arch/arm/mm/init.c:519 (set (reg/v:SI 175 [ prev_bank_end ])
        (and:SI (reg/v:SI 175 [ prev_bank_end ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415


;; Succ edge  7 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 6 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 413
;; lr  def 	 24 [cc] 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  gen 	 24 [cc] 228
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 71 552 72 7 43 "" [1 uses])

(note 72 71 22 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 22 72 75 7 arch/arm/mm/init.c:584 (set (reg/f:SI 151 [ D.26350 ])
        (plus:SI (reg/f:SI 414)
            (reg:SI 152 [ ivtmp.752 ]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 152 [ ivtmp.752 ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))))
        (nil)))

(insn 75 22 70 7 arch/arm/mm/init.c:487 discrim 1 (set (reg:SI 228 [ meminfo.nr_banks ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 413)
                (const_int 4 [0x4])) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))) [0 meminfo.nr_banks+0 S4 A32])
        (nil)))

(insn 70 75 76 7 arch/arm/mm/init.c:487 (set (reg:SI 152 [ ivtmp.752 ])
        (plus:SI (reg:SI 152 [ ivtmp.752 ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 76 70 69 7 arch/arm/mm/init.c:487 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 176 [ i ])
            (reg:SI 228 [ meminfo.nr_banks ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 228 [ meminfo.nr_banks ])
        (nil)))

(insn 69 76 77 7 arch/arm/mm/init.c:487 (set (reg/v:SI 176 [ i ])
        (plus:SI (reg/v:SI 176 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 77 69 78 7 arch/arm/mm/init.c:487 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8889 [0x22b9])
            (nil))))
;; End of basic block 7 -> ( 3 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415


;; Succ edge  3 [88.9%] 
;; Succ edge  8 [11.1%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167 169 192 229 231 232 233 404 405 406 407
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 167 169 192 229 231 232 233 404 405 406 407
;; live  kill	 14 [lr]

;; Pred edge  7 [11.1%]  (fallthru,loop_exit)
(note 78 77 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 82 78 79 8 NOTE_INSN_DELETED)

(insn 79 82 138 8 arch/arm/mm/init.c:600 (set (reg/f:SI 229)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 138 79 125 8 include/linux/mm.h:417 (set (reg:SI 407)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 125 138 132 8 arch/arm/mm/init.c:564 (set (reg/f:SI 405)
        (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 132 125 80 8 arch/arm/mm/init.c:424 (set (reg/f:SI 406)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 80 132 81 8 arch/arm/mm/init.c:600 (set (reg:SI 192 [ totalram_pages.389 ])
        (mem/c/i:SI (reg/f:SI 229) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>) [0 totalram_pages+0 S4 A32])
        (nil)))

(call_insn 81 80 88 8 arch/arm/mm/init.c:600 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("free_all_bootmem") [flags 0x41] <function_decl 0x11095500 free_all_bootmem>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 88 81 86 8 arch/arm/mm/init.c:536 (set (reg/f:SI 233)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 86 88 216 8 arch/arm/mm/init.c:532 (set (reg/f:SI 232)
        (symbol_ref:SI ("max_low_pfn") [flags 0xc0] <var_decl 0x1108fa20 max_low_pfn>)) 167 {*arm_movsi_insn} (nil))

(insn 216 86 89 8 arch/arm/mm/init.c:536 discrim 1 (set (reg/f:SI 404)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 233)
        (expr_list:REG_EQUAL (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
            (nil))))

(insn 89 216 87 8 arch/arm/mm/init.c:536 (set (reg/v/f:SI 167 [ mem ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 233)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 87 89 84 8 arch/arm/mm/init.c:532 (set (reg/v:SI 169 [ start ])
        (mem/c/i:SI (reg/f:SI 232) [0 max_low_pfn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 232)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("max_low_pfn") [flags 0xc0] <var_decl 0x1108fa20 max_low_pfn>) [0 max_low_pfn+0 S4 A32])
            (nil))))

(insn 84 87 85 8 arch/arm/mm/init.c:600 (set (reg:SI 231)
        (plus:SI (reg:SI 0 r0)
            (reg:SI 192 [ totalram_pages.389 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 192 [ totalram_pages.389 ])
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil))))

(insn 85 84 527 8 arch/arm/mm/init.c:600 (set (mem/c/i:SI (reg/f:SI 229) [0 totalram_pages+0 S4 A32])
        (reg:SI 231)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_DEAD (reg/f:SI 229)
            (nil))))

(jump_insn 527 85 528 8 (set (pc)
        (label_ref 213)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407


;; Succ edge  27 [100.0%] 

(barrier 528 527 215)

;; Start of basic block ( 27) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169
;; lr  def 	 24 [cc] 148 170 234 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  gen 	 24 [cc] 148 170 234 235
;; live  kill	

;; Pred edge  27 [91.0%] 
(code_label 215 528 92 9 56 "" [1 uses])

(note 92 215 93 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 9 include/linux/memblock.h:120 (set (reg:SI 170 [ D.25753 ])
        (mem/s/j:SI (reg/v/f:SI 167 [ mem ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 94 93 95 9 include/linux/memblock.h:129 (set (reg:SI 235 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 167 [ mem ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 9 include/linux/memblock.h:129 (set (reg:SI 234)
        (plus:SI (reg:SI 170 [ D.25753 ])
            (reg:SI 235 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 235 [ <variable>.size ])
        (nil)))

(insn 96 95 97 9 include/linux/memblock.h:129 (set (reg/v:SI 148 [ start.759 ])
        (lshiftrt:SI (reg:SI 234)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 234)
        (nil)))

(insn 97 96 98 9 arch/arm/mm/init.c:541 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ start.759 ])
            (reg/v:SI 169 [ start ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 98 97 99 9 arch/arm/mm/init.c:541 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 26 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407


;; Succ edge  26 [50.0%] 
;; Succ edge  10 [50.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u122(11){ }u123(13){ }u124(25){ }u125(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 170 404
;; lr  def 	 24 [cc] 145 149 168 236 237
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407
;; live  gen 	 145 149 168 236 237
;; live  kill	 24 [cc]

;; Pred edge  9 [50.0%]  (fallthru)
(note 99 98 100 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 105 10 include/linux/memblock.h:120 (set (reg:SI 237)
        (plus:SI (reg:SI 170 [ D.25753 ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 170 [ D.25753 ])
        (nil)))

(insn 105 100 101 10 arch/arm/mm/init.c:549 (set (reg/v/f:SI 168 [ res ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 404)
                (const_int 28 [0x1c])) [0 memblock.reserved.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 28 [0x1c]))) [0 memblock.reserved.regions+0 S4 A32])
        (nil)))

(insn 101 105 102 10 include/linux/memblock.h:120 (set (reg:SI 236)
        (plus:SI (reg:SI 237)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 237)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 170 [ D.25753 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 102 101 103 10 include/linux/memblock.h:120 (set (reg/v:SI 149 [ start.758 ])
        (lshiftrt:SI (reg:SI 236)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 236)
        (nil)))

(insn 103 102 529 10 include/linux/memblock.h:120 (parallel [
            (set (reg/v:SI 145 [ start.762 ])
                (umax:SI (reg/v:SI 149 [ start.758 ])
                    (reg/v:SI 169 [ start ])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (expr_list:REG_DEAD (reg/v:SI 149 [ start.758 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(jump_insn 529 103 530 10 (set (pc)
        (label_ref 164)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407


;; Succ edge  20 [100.0%] 

(barrier 530 529 166)

;; Start of basic block ( 20) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 168
;; lr  def 	 24 [cc] 146 171 239 240 241 242
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  gen 	 24 [cc] 146 171 239 240 241 242
;; live  kill	

;; Pred edge  20 [95.5%] 
(code_label 166 530 108 11 53 "" [1 uses])

(note 108 166 109 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 11 include/linux/memblock.h:138 (set (reg:SI 171 [ D.25749 ])
        (mem/s/j:SI (reg/v/f:SI 168 [ res ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 110 109 111 11 include/linux/memblock.h:147 (set (reg:SI 240 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 168 [ res ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 112 11 include/linux/memblock.h:147 (set (reg:SI 239)
        (plus:SI (reg:SI 171 [ D.25749 ])
            (reg:SI 240 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 240 [ <variable>.size ])
        (nil)))

(insn 112 111 113 11 include/linux/memblock.h:147 (set (reg:SI 242)
        (plus:SI (reg:SI 239)
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 239)
        (nil)))

(insn 113 112 114 11 include/linux/memblock.h:147 (set (reg:SI 241)
        (plus:SI (reg:SI 242)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 242)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 239)
                (const_int 4095 [0xfff]))
            (nil))))

(insn 114 113 115 11 include/linux/memblock.h:147 (set (reg/v:SI 146 [ start.761 ])
        (lshiftrt:SI (reg:SI 241)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 241)
        (nil)))

(insn 115 114 116 11 arch/arm/mm/init.c:555 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ start.761 ])
            (reg/v:SI 145 [ start.762 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 116 115 117 11 arch/arm/mm/init.c:555 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 161)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 19 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407


;; Succ edge  19 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 171
;; lr  def 	 24 [cc] 138 139 140 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407
;; live  gen 	 24 [cc] 138 139 140 147
;; live  kill	 24 [cc]

;; Pred edge  11 [50.0%]  (fallthru)
(note 117 116 118 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 121 12 include/linux/memblock.h:138 (set (reg/v:SI 147 [ start.760 ])
        (lshiftrt:SI (reg:SI 171 [ D.25749 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 171 [ D.25749 ])
        (nil)))

(insn 121 118 119 12 include/linux/memblock.h:138 (parallel [
            (set (reg/v:SI 139 [ start.769 ])
                (umin:SI (reg/v:SI 146 [ start.761 ])
                    (reg/v:SI 148 [ start.759 ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 146 [ start.761 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 119 121 120 12 include/linux/memblock.h:138 (parallel [
            (set (reg/v:SI 138 [ start.770 ])
                (umax:SI (reg/v:SI 145 [ start.762 ])
                    (reg/v:SI 147 [ start.760 ])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (expr_list:REG_DEAD (reg/v:SI 147 [ start.760 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 120 119 122 12 include/linux/memblock.h:138 (parallel [
            (set (reg/v:SI 140 [ start.768 ])
                (umin:SI (reg/v:SI 138 [ start.770 ])
                    (reg/v:SI 148 [ start.759 ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ start.770 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 122 120 123 12 arch/arm/mm/init.c:563 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ start.768 ])
            (reg/v:SI 145 [ start.762 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 123 122 124 12 arch/arm/mm/init.c:563 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 155)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 12 -> ( 13 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407


;; Succ edge  13 [72.0%]  (fallthru)
;; Succ edge  17 [28.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 405
;; lr  def 	 144 153 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407
;; live  gen 	 144 153 166
;; live  kill	

;; Pred edge  12 [72.0%]  (fallthru)
(note 124 123 126 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 126 124 127 13 arch/arm/mm/init.c:564 (set (reg:SI 166 [ totalhigh_pages.382 ])
        (mem/c/i:SI (reg/f:SI 405) [0 totalhigh_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>) [0 totalhigh_pages+0 S4 A32])
        (nil)))

(insn 127 126 128 13 arch/arm/mm/init.c:564 (set (reg:SI 153 [ ivtmp.734 ])
        (ashift:SI (reg/v:SI 145 [ start.762 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 128 127 531 13 arch/arm/mm/init.c:564 (set (reg/v:SI 144 [ start.763 ])
        (reg/v:SI 145 [ start.762 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 531 128 532 13 (set (pc)
        (label_ref 145)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407


;; Succ edge  15 [100.0%] 

(barrier 532 531 147)

;; Start of basic block ( 15) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 153 406 407
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 153 172 245
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  gen 	 0 [r0] 1 [r1] 144 153 172 245
;; live  kill	 14 [lr]

;; Pred edge  15 [91.0%] 
(code_label 147 532 131 14 52 "" [1 uses])

(note 131 147 133 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 133 131 143 14 arch/arm/mm/init.c:424 (set (reg/f:SI 245 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 406) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 143 133 134 14 arch/arm/mm/init.c:423 discrim 2 (set (reg/v:SI 144 [ start.763 ])
        (plus:SI (reg/v:SI 144 [ start.763 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 134 143 144 14 arch/arm/mm/init.c:424 (set (reg/v/f:SI 172 [ page ])
        (plus:SI (reg/f:SI 245 [ mem_map ])
            (reg:SI 153 [ ivtmp.734 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 245 [ mem_map ])
        (nil)))

(insn 144 134 136 14 arch/arm/mm/init.c:423 discrim 2 (set (reg:SI 153 [ ivtmp.734 ])
        (plus:SI (reg:SI 153 [ ivtmp.734 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 136 144 137 14 include/linux/page-flags.h:207 (set (reg:SI 1 r1)
        (reg/v/f:SI 172 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 137 136 139 14 include/linux/page-flags.h:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 139 137 140 14 include/linux/mm.h:417 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 172 [ page ])
                (const_int 16 [0x10])) [0 <variable>.D.8033.D.8032.D.8031._count.counter+0 S4 A32])
        (reg:SI 407)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 140 139 493 14 arch/arm/mm/init.c:427 (set (reg:SI 0 r0)
        (reg/v/f:SI 172 [ page ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 172 [ page ])
        (nil)))

(insn 493 140 142 14 arch/arm/mm/init.c:427 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 142 493 145 14 arch/arm/mm/init.c:427 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  13 [100.0%] 
(code_label 145 142 146 15 51 "" [1 uses])

(note 146 145 491 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 491 146 148 15 include/linux/page-flags.h:207 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 148 491 149 15 arch/arm/mm/init.c:423 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ start.763 ])
            (reg/v:SI 140 [ start.768 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 149 148 150 15 arch/arm/mm/init.c:423 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 147)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 15 -> ( 14 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407


;; Succ edge  14 [91.0%] 
;; Succ edge  16 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u195(11){ }u196(13){ }u197(25){ }u198(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 148 166 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 166 405
;; lr  def 	 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 148 166 167 168 169 404 405 406 407
;; live  gen 	 248 249
;; live  kill	

;; Pred edge  15 [9.0%]  (fallthru,loop_exit)
(note 150 149 152 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 152 150 153 16 arch/arm/mm/init.c:564 (set (reg:SI 248)
        (minus:SI (reg:SI 166 [ totalhigh_pages.382 ])
            (reg/v:SI 145 [ start.762 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 166 [ totalhigh_pages.382 ])
        (expr_list:REG_DEAD (reg/v:SI 145 [ start.762 ])
            (nil))))

(insn 153 152 154 16 arch/arm/mm/init.c:564 (set (reg:SI 249)
        (plus:SI (reg:SI 248)
            (reg/v:SI 144 [ start.763 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 248)
        (expr_list:REG_DEAD (reg/v:SI 144 [ start.763 ])
            (nil))))

(insn 154 153 155 16 arch/arm/mm/init.c:564 (set (mem/c/i:SI (reg/f:SI 405) [0 totalhigh_pages+0 S4 A32])
        (reg:SI 249)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 249)
        (nil)))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 12 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u205(11){ }u206(13){ }u207(25){ }u208(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  12 [28.0%] 
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 155 154 156 17 50 "" [1 uses])

(note 156 155 157 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 157 156 158 17 arch/arm/mm/init.c:567 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ start.769 ])
            (reg/v:SI 148 [ start.759 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 158 157 159 17 arch/arm/mm/init.c:567 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 17 -> ( 26 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407


;; Succ edge  26 [4.5%]  (loop_exit)
;; Succ edge  18 [95.5%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  gen 	 145
;; live  kill	

;; Pred edge  17 [95.5%]  (fallthru)
(note 159 158 160 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 18 arch/arm/mm/init.c:567 (set (reg/v:SI 145 [ start.762 ])
        (reg/v:SI 139 [ start.769 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ start.769 ])
        (nil)))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 11 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u217(11){ }u218(13){ }u219(25){ }u220(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168
;; lr  def 	 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  gen 	 168
;; live  kill	

;; Pred edge  11 [50.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 161 160 162 19 49 "" [1 uses])

(note 162 161 163 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 164 19 arch/arm/mm/init.c:549 (set (reg/v/f:SI 168 [ res ])
        (plus:SI (reg/v/f:SI 168 [ res ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407


;; Succ edge  20 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 19 10) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u222(11){ }u223(13){ }u224(25){ }u225(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168 404
;; lr  def 	 24 [cc] 253 254 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  gen 	 24 [cc] 253 254 255
;; live  kill	

;; Pred edge  19 [100.0%]  (fallthru,dfs_back)
;; Pred edge  10 [100.0%] 
(code_label 164 163 165 20 48 "" [1 uses])

(note 165 164 170 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 170 165 169 20 NOTE_INSN_DELETED)

(insn 169 170 171 20 arch/arm/mm/init.c:549 discrim 1 (set (reg:SI 253 [ memblock.reserved.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 404)
                (const_int 20 [0x14])) [0 memblock.reserved.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 20 [0x14]))) [0 memblock.reserved.cnt+0 S4 A32])
        (nil)))

(insn 171 169 172 20 arch/arm/mm/init.c:549 discrim 1 (set (reg/f:SI 255 [ memblock.reserved.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 404)
                (const_int 28 [0x1c])) [0 memblock.reserved.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 28 [0x1c]))) [0 memblock.reserved.regions+0 S4 A32])
        (nil)))

(insn 172 171 173 20 arch/arm/mm/init.c:549 discrim 1 (set (reg:SI 254)
        (plus:SI (mult:SI (reg:SI 253 [ memblock.reserved.cnt ])
                (const_int 8 [0x8]))
            (reg/f:SI 255 [ memblock.reserved.regions ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 255 [ memblock.reserved.regions ])
        (expr_list:REG_DEAD (reg:SI 253 [ memblock.reserved.cnt ])
            (nil))))

(insn 173 172 174 20 arch/arm/mm/init.c:549 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 168 [ res ])
            (reg:SI 254))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 254)
        (nil)))

(jump_insn 174 173 175 20 arch/arm/mm/init.c:549 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 166)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 20 -> ( 11 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407


;; Succ edge  11 [95.5%] 
;; Succ edge  21 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 169 404 405 406 407
;; live  gen 	 24 [cc] 137
;; live  kill	

;; Pred edge  20 [4.5%]  (fallthru,loop_exit)
(note 175 174 178 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 178 175 176 21 arch/arm/mm/init.c:572 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ start.762 ])
            (reg/v:SI 148 [ start.759 ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 176 178 179 21 arch/arm/mm/init.c:549 discrim 1 (set (reg/v:SI 137 [ start.772 ])
        (reg/v:SI 145 [ start.762 ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 179 176 180 21 arch/arm/mm/init.c:572 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2628 [0xa44])
            (nil))))
;; End of basic block 21 -> ( 22 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407


;; Succ edge  22 [73.7%]  (fallthru)
;; Succ edge  26 [26.3%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 405
;; lr  def 	 142 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407
;; live  gen 	 142 154
;; live  kill	

;; Pred edge  21 [73.7%]  (fallthru)
(note 180 179 182 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 182 180 183 22 arch/arm/mm/init.c:573 (set (reg:SI 142 [ totalhigh_pages.765 ])
        (mem/c/i:SI (reg/f:SI 405) [0 totalhigh_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>) [0 totalhigh_pages+0 S4 A32])
        (nil)))

(insn 183 182 533 22 arch/arm/mm/init.c:573 (set (reg:SI 154 [ ivtmp.722 ])
        (ashift:SI (reg/v:SI 145 [ start.762 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(jump_insn 533 183 534 22 (set (pc)
        (label_ref 200)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407


;; Succ edge  24 [100.0%] 

(barrier 534 533 202)

;; Start of basic block ( 24) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u248(11){ }u249(13){ }u250(25){ }u251(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 406 407
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 154 173 258
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  gen 	 0 [r0] 1 [r1] 145 154 173 258
;; live  kill	 14 [lr]

;; Pred edge  24 [91.0%] 
(code_label 202 534 186 23 55 "" [1 uses])

(note 186 202 188 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 188 186 189 23 arch/arm/mm/init.c:424 (set (reg/f:SI 258 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 406) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 189 188 199 23 arch/arm/mm/init.c:424 (set (reg/v/f:SI 173 [ page ])
        (plus:SI (reg/f:SI 258 [ mem_map ])
            (reg:SI 154 [ ivtmp.722 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 258 [ mem_map ])
        (nil)))

(insn 199 189 191 23 arch/arm/mm/init.c:423 discrim 2 (set (reg:SI 154 [ ivtmp.722 ])
        (plus:SI (reg:SI 154 [ ivtmp.722 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 191 199 192 23 include/linux/page-flags.h:207 (set (reg:SI 1 r1)
        (reg/v/f:SI 173 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 192 191 194 23 include/linux/page-flags.h:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 194 192 195 23 include/linux/mm.h:417 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 173 [ page ])
                (const_int 16 [0x10])) [0 <variable>.D.8033.D.8032.D.8031._count.counter+0 S4 A32])
        (reg:SI 407)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 195 194 489 23 arch/arm/mm/init.c:427 (set (reg:SI 0 r0)
        (reg/v/f:SI 173 [ page ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 173 [ page ])
        (nil)))

(insn 489 195 197 23 arch/arm/mm/init.c:427 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 197 489 200 23 arch/arm/mm/init.c:427 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407


;; Succ edge  24 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u267(11){ }u268(13){ }u269(25){ }u270(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru,dfs_back)
;; Pred edge  22 [100.0%] 
(code_label 200 197 201 24 54 "" [1 uses])

(note 201 200 487 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 487 201 203 24 include/linux/page-flags.h:207 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 203 487 198 24 arch/arm/mm/init.c:423 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ start.762 ])
            (reg/v:SI 148 [ start.759 ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 198 203 204 24 arch/arm/mm/init.c:423 discrim 2 (set (reg/v:SI 145 [ start.762 ])
        (plus:SI (reg/v:SI 145 [ start.762 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 204 198 205 24 arch/arm/mm/init.c:423 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 202)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 24 -> ( 23 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407


;; Succ edge  23 [91.0%] 
;; Succ edge  25 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u274(11){ }u275(13){ }u276(25){ }u277(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 148 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 148 405
;; lr  def 	 261 262
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 148 167 169 404 405 406 407
;; live  gen 	 261 262
;; live  kill	

;; Pred edge  24 [9.0%]  (fallthru,loop_exit)
(note 205 204 207 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 207 205 208 25 arch/arm/mm/init.c:573 (set (reg:SI 261)
        (plus:SI (reg/v:SI 148 [ start.759 ])
            (reg:SI 142 [ totalhigh_pages.765 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 148 [ start.759 ])
        (expr_list:REG_DEAD (reg:SI 142 [ totalhigh_pages.765 ])
            (nil))))

(insn 208 207 209 25 arch/arm/mm/init.c:573 (set (reg:SI 262)
        (minus:SI (reg:SI 261)
            (reg/v:SI 137 [ start.772 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 261)
        (expr_list:REG_DEAD (reg/v:SI 137 [ start.772 ])
            (nil))))

(insn 209 208 210 25 arch/arm/mm/init.c:573 (set (mem/c/i:SI (reg/f:SI 405) [0 totalhigh_pages+0 S4 A32])
        (reg:SI 262)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 262)
        (nil)))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 9 21 25 17) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u284(11){ }u285(13){ }u286(25){ }u287(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  gen 	 167
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  21 [26.3%] 
;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  17 [4.5%]  (loop_exit)
(code_label 210 209 211 26 47 "" [3 uses])

(note 211 210 212 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 212 211 213 26 arch/arm/mm/init.c:536 (set (reg/v/f:SI 167 [ mem ])
        (plus:SI (reg/v/f:SI 167 [ mem ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407


;; Succ edge  27 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 26 8) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u289(11){ }u290(13){ }u291(25){ }u292(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 404
;; lr  def 	 24 [cc] 266 267 268
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  gen 	 24 [cc] 266 267 268
;; live  kill	

;; Pred edge  26 [100.0%]  (fallthru,dfs_back)
;; Pred edge  8 [100.0%] 
(code_label 213 212 214 27 46 "" [1 uses])

(note 214 213 219 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 219 214 218 27 NOTE_INSN_DELETED)

(insn 218 219 220 27 arch/arm/mm/init.c:536 discrim 1 (set (reg:SI 266 [ memblock.memory.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 404)
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 8 [0x8]))) [0 memblock.memory.cnt+0 S4 A32])
        (nil)))

(insn 220 218 221 27 arch/arm/mm/init.c:536 discrim 1 (set (reg/f:SI 268 [ memblock.memory.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 404)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 221 220 222 27 arch/arm/mm/init.c:536 discrim 1 (set (reg:SI 267)
        (plus:SI (mult:SI (reg:SI 266 [ memblock.memory.cnt ])
                (const_int 8 [0x8]))
            (reg/f:SI 268 [ memblock.memory.regions ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 268 [ memblock.memory.regions ])
        (expr_list:REG_DEAD (reg:SI 266 [ memblock.memory.cnt ])
            (nil))))

(insn 222 221 223 27 arch/arm/mm/init.c:536 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 167 [ mem ])
            (reg:SI 267))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 267)
        (nil)))

(jump_insn 223 222 224 27 arch/arm/mm/init.c:536 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 215)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 27 -> ( 9 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407


;; Succ edge  9 [91.0%] 
;; Succ edge  28 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u301(11){ }u302(13){ }u303(25){ }u304(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156 183 184 185 188 189 269 270 272 273 274 276 387
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 156 183 184 185 188 189 269 270 272 273 274 276 387
;; live  kill	

;; Pred edge  27 [9.0%]  (fallthru,loop_exit)
(note 224 223 232 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(note 232 224 225 28 NOTE_INSN_DELETED)

(insn 225 232 236 28 arch/arm/mm/init.c:575 (set (reg/f:SI 269)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 236 225 226 28 arch/arm/mm/init.c:620 (set (reg:SI 156 [ ivtmp.710 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 226 236 237 28 arch/arm/mm/init.c:575 (set (reg/f:SI 270)
        (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 237 226 524 28 arch/arm/mm/init.c:612 (set (reg/v:SI 183 [ i ])
        (reg:SI 156 [ ivtmp.710 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 524 237 238 28 arch/arm/mm/init.c:612 discrim 1 (set (reg/f:SI 387)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 238 524 234 28 arch/arm/mm/init.c:610 (set (reg/v:SI 184 [ free_pages ])
        (reg:SI 156 [ ivtmp.710 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 234 238 239 28 arch/arm/mm/init.c:620 (set (reg/f:SI 276)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 239 234 228 28 arch/arm/mm/init.c:610 (set (reg/v:SI 185 [ reserved_pages ])
        (reg:SI 156 [ ivtmp.710 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 228 239 229 28 arch/arm/mm/init.c:575 (set (reg:SI 272 [ totalhigh_pages ])
        (mem/c/i:SI (reg/f:SI 270) [0 totalhigh_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 270)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>) [0 totalhigh_pages+0 S4 A32])
            (nil))))

(insn 229 228 235 28 arch/arm/mm/init.c:575 (set (reg:SI 273 [ totalram_pages ])
        (mem/c/i:SI (reg/f:SI 269) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>) [0 totalram_pages+0 S4 A32])
        (nil)))

(insn 235 229 230 28 arch/arm/mm/init.c:620 (set (reg/f:SI 189 [ mem_map.392 ])
        (mem/f/c/i:SI (reg/f:SI 276) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 276)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
            (nil))))

(insn 230 235 231 28 arch/arm/mm/init.c:575 (set (reg:SI 274)
        (plus:SI (reg:SI 272 [ totalhigh_pages ])
            (reg:SI 273 [ totalram_pages ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 273 [ totalram_pages ])
        (expr_list:REG_DEAD (reg:SI 272 [ totalhigh_pages ])
            (nil))))

(insn 231 230 233 28 arch/arm/mm/init.c:575 (set (mem/c/i:SI (reg/f:SI 269) [0 totalram_pages+0 S4 A32])
        (reg:SI 274)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 274)
        (expr_list:REG_DEAD (reg/f:SI 269)
            (nil))))

(insn 233 231 535 28 arch/arm/mm/init.c:612 discrim 1 (set (reg:SI 188 [ D.25389 ])
        (mem/s/j/c:SI (pre_inc:SI (reg/f:SI 387)) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 387)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 4 [0x4]))) [0 meminfo.nr_banks+0 S4 A32])
            (nil))))

(jump_insn 535 233 536 28 arch/arm/mm/init.c:612 (set (pc)
        (label_ref 295)) 242 {*arm_jump} (nil))
;; End of basic block 28 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387


;; Succ edge  39 [100.0%] 

(barrier 536 535 297)

;; Start of basic block ( 39) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u317(11){ }u318(13){ }u319(25){ }u320(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 189 387
;; lr  def 	 155 181 182 190 279 281 282 283
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  gen 	 155 181 182 190 279 281 282 283
;; live  kill	

;; Pred edge  39 [91.0%] 
(code_label 297 536 242 29 63 "" [1 uses])

(note 242 297 248 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 248 242 253 29 NOTE_INSN_DELETED)

(note 253 248 245 29 NOTE_INSN_DELETED)

(insn 245 253 250 29 arch/arm/mm/init.c:584 (set (reg/f:SI 155 [ D.26304 ])
        (plus:SI (reg/f:SI 387)
            (reg:SI 156 [ ivtmp.710 ]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 156 [ ivtmp.710 ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))))
        (nil)))

(insn 250 245 246 29 arch/arm/mm/init.c:621 (set (reg:SI 282 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 155 [ D.26304 ])
                (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 155 [ D.26304 ])
        (nil)))

(insn 246 250 251 29 arch/arm/mm/init.c:617 (set (reg:SI 190 [ D.25376 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 155 [ D.26304 ])
                (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 251 246 247 29 arch/arm/mm/init.c:621 (set (reg:SI 281)
        (plus:SI (reg:SI 190 [ D.25376 ])
            (reg:SI 282 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 282 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 190 [ D.25376 ])
            (nil))))

(insn 247 251 252 29 arch/arm/mm/init.c:620 (set (reg:SI 279)
        (lshiftrt:SI (reg:SI 190 [ D.25376 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 252 247 249 29 arch/arm/mm/init.c:621 (set (reg:SI 283)
        (lshiftrt:SI (reg:SI 281)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 281)
        (nil)))

(insn 249 252 254 29 arch/arm/mm/init.c:620 (set (reg/v/f:SI 182 [ page ])
        (plus:SI (mult:SI (reg:SI 279)
                (const_int 32 [0x20]))
            (reg/f:SI 189 [ mem_map.392 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 279)
        (nil)))

(insn 254 249 289 29 arch/arm/mm/init.c:621 (set (reg/v/f:SI 181 [ end ])
        (plus:SI (mult:SI (reg:SI 283)
                (const_int 32 [0x20]))
            (reg/f:SI 189 [ mem_map.392 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 283)
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 29 37) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u336(11){ }u337(13){ }u338(25){ }u339(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 24 [cc] 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 165
;; live  kill	

;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  37 [86.0%]  (dfs_back)
(code_label 289 254 255 30 62 "" [1 uses])

(note 255 289 258 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(note 258 255 257 30 NOTE_INSN_DELETED)

(insn 257 258 272 30 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 165 [ D.25775 ])
        (mem/v:SI (reg/v/f:SI 182 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 272 257 259 30 include/linux/mm.h:356 (set (reg/v/f:SI 141 [ page.767 ])
        (reg/v/f:SI 182 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 259 272 260 30 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 165 [ D.25775 ])
                (const_int 1 [0x1])
                (const_int 10 [0xa]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 165 [ D.25775 ])
        (nil)))

(jump_insn 260 259 261 30 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 265)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 31 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  31 [50.0%]  (fallthru)
;; Succ edge  32 [50.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u344(11){ }u345(13){ }u346(25){ }u347(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 185
;; live  kill	

;; Pred edge  30 [50.0%]  (fallthru)
(note 261 260 262 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 262 261 537 31 arch/arm/mm/init.c:625 (set (reg/v:SI 185 [ reserved_pages ])
        (plus:SI (reg/v:SI 185 [ reserved_pages ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 537 262 538 31 (set (pc)
        (label_ref 286)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  37 [100.0%] 

(barrier 538 537 265)

;; Start of basic block ( 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u349(11){ }u350(13){ }u351(25){ }u352(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 24 [cc] 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 162
;; live  kill	

;; Pred edge  30 [50.0%] 
(code_label 265 538 266 32 58 "" [1 uses])

(note 266 265 268 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(note 268 266 267 32 NOTE_INSN_DELETED)

(insn 267 268 269 32 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 162 [ D.25790 ])
        (mem/v:SI (reg/v/f:SI 182 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 269 267 270 32 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 162 [ D.25790 ])
                (const_int 1 [0x1])
                (const_int 15 [0xf]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 162 [ D.25790 ])
        (nil)))

(jump_insn 270 269 271 32 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 32 -> ( 34 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  34 [0.0%] 
;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u357(11){ }u358(13){ }u359(25){ }u360(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  gen 	 141
;; live  kill	

;; Pred edge  32 [100.0%]  (fallthru)
(note 271 270 539 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(jump_insn 539 271 540 33 (set (pc)
        (label_ref 278)) 242 {*arm_jump} (nil))
;; End of basic block 33 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387


;; Succ edge  35 [100.0%] 

(barrier 540 539 275)

;; Start of basic block ( 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u362(11){ }u363(13){ }u364(25){ }u365(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 141
;; live  kill	

;; Pred edge  32 [0.0%] 
(code_label 275 540 276 34 60 "" [1 uses])

(note 276 275 277 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 277 276 278 34 include/linux/mm.h:355 (set (reg/v/f:SI 141 [ page.767 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 182 [ page ])
                (const_int 28 [0x1c])) [0 <variable>.D.8040.first_page+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 34 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 34 33) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u367(11){ }u368(13){ }u369(25){ }u370(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 163
;; live  kill	

;; Pred edge  34 [100.0%]  (fallthru)
;; Pred edge  33 [100.0%] 
(code_label 278 277 279 35 61 "" [1 uses])

(note 279 278 281 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 281 279 282 35 include/linux/mm.h:376 (set (reg:SI 163 [ D.25786 ])
        (mem/v:SI (plus:SI (reg/v/f:SI 141 [ page.767 ])
                (const_int 16 [0x10])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 141 [ page.767 ])
        (nil)))

(insn 282 281 283 35 arch/arm/mm/init.c:626 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ D.25786 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163 [ D.25786 ])
        (nil)))

(jump_insn 283 282 284 35 arch/arm/mm/init.c:626 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 286)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 35 -> ( 36 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  36 [50.0%]  (fallthru)
;; Succ edge  37 [50.0%] 

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u375(11){ }u376(13){ }u377(25){ }u378(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 184
;; live  kill	

;; Pred edge  35 [50.0%]  (fallthru)
(note 284 283 285 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 285 284 286 36 arch/arm/mm/init.c:627 (set (reg/v:SI 184 [ free_pages ])
        (plus:SI (reg/v:SI 184 [ free_pages ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 36 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 36 35 31) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u380(11){ }u381(13){ }u382(25){ }u383(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 182
;; lr  def 	 24 [cc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 182
;; live  kill	

;; Pred edge  36 [100.0%]  (fallthru)
;; Pred edge  35 [50.0%] 
;; Pred edge  31 [100.0%] 
(code_label 286 285 287 37 59 "" [2 uses])

(note 287 286 288 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 288 287 290 37 arch/arm/mm/init.c:628 (set (reg/v/f:SI 182 [ page ])
        (plus:SI (reg/v/f:SI 182 [ page ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 290 288 291 37 arch/arm/mm/init.c:629 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 182 [ page ])
            (reg/v/f:SI 181 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 291 290 292 37 arch/arm/mm/init.c:629 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 289)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 37 -> ( 30 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  30 [86.0%]  (dfs_back)
;; Succ edge  38 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u388(11){ }u389(13){ }u390(25){ }u391(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183
;; lr  def 	 156 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  gen 	 156 183
;; live  kill	

;; Pred edge  37 [14.0%]  (fallthru,loop_exit)
(note 292 291 293 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 293 292 294 38 arch/arm/mm/init.c:612 (set (reg/v:SI 183 [ i ])
        (plus:SI (reg/v:SI 183 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 294 293 295 38 arch/arm/mm/init.c:612 (set (reg:SI 156 [ ivtmp.710 ])
        (plus:SI (reg:SI 156 [ ivtmp.710 ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))
;; End of basic block 38 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387


;; Succ edge  39 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 38 28) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u394(11){ }u395(13){ }u396(25){ }u397(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 188
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  38 [100.0%]  (fallthru,dfs_back)
;; Pred edge  28 [100.0%] 
(code_label 295 294 296 39 57 "" [1 uses])

(note 296 295 298 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 298 296 299 39 arch/arm/mm/init.c:612 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 183 [ i ])
            (reg:SI 188 [ D.25389 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 299 298 300 39 arch/arm/mm/init.c:612 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 297)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 39 -> ( 29 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387


;; Succ edge  29 [91.0%] 
;; Succ edge  40 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u401(11){ }u402(13){ }u403(25){ }u404(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157 288 289 290 384 385
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185
;; live  gen 	 0 [r0] 157 288 289 290 384 385
;; live  kill	 14 [lr]

;; Pred edge  39 [9.0%]  (fallthru,loop_exit)
(note 300 299 302 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 302 300 303 40 arch/arm/mm/init.c:636 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x116e6fc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x116e6fc0>)
        (nil)))

(call_insn 303 302 304 40 arch/arm/mm/init.c:636 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 304 303 307 40 arch/arm/mm/init.c:637 (set (reg/f:SI 288)
        (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>)) 167 {*arm_movsi_insn} (nil))

(insn 307 304 305 40 arch/arm/mm/init.c:637 (set (reg/f:SI 290)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 305 307 478 40 arch/arm/mm/init.c:637 (set (reg:SI 289)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 478 305 306 40 (set (reg/f:SI 385)
        (reg/f:SI 288)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 288)
        (expr_list:REG_EQUAL (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>)
            (nil))))

(insn 306 478 335 40 arch/arm/mm/init.c:637 (set (mem/c/i:SI (reg/f:SI 288) [0 num_physpages+0 S4 A32])
        (reg:SI 289)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 289)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 335 306 308 40 arch/arm/mm/init.c:638 discrim 1 (set (reg/f:SI 384)
        (reg/f:SI 290)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 290)
        (expr_list:REG_EQUAL (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
            (nil))))

(insn 308 335 541 40 arch/arm/mm/init.c:637 (set (reg:SI 157 [ ivtmp.692 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 290)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(jump_insn 541 308 542 40 arch/arm/mm/init.c:638 (set (pc)
        (label_ref 330)) 242 {*arm_jump} (nil))
;; End of basic block 40 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385


;; Succ edge  42 [100.0%] 

(barrier 542 541 334)

;; Start of basic block ( 42) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u412(11){ }u413(13){ }u414(25){ }u415(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 385
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160 180 291 292 294 295 296 299 300
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  gen 	 0 [r0] 1 [r1] 160 180 291 292 294 295 296 299 300
;; live  kill	 14 [lr]

;; Pred edge  42 [0.0%] 
(code_label 334 542 311 41 65 "" [1 uses])

(note 311 334 315 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(note 315 311 326 41 NOTE_INSN_DELETED)

(note 326 315 312 41 NOTE_INSN_DELETED)

(insn 312 326 313 41 include/linux/memblock.h:129 (set (reg:SI 160 [ D.25802 ])
        (mem/s/j:SI (plus:SI (reg:SI 157 [ ivtmp.692 ])
                (const_int -8 [0xfffffffffffffff8])) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 313 312 316 41 arch/arm/mm/init.c:640 (set (reg:SI 292 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg:SI 157 [ ivtmp.692 ])
                (const_int -4 [0xfffffffffffffffc])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 316 313 322 41 arch/arm/mm/init.c:640 (set (reg:SI 295)
        (plus:SI (reg:SI 160 [ D.25802 ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 160 [ D.25802 ])
        (nil)))

(insn 322 316 317 41 arch/arm/mm/init.c:641 (set (reg:SI 299 [ num_physpages ])
        (mem/c/i:SI (reg/f:SI 385) [0 num_physpages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>) [0 num_physpages+0 S4 A32])
        (nil)))

(insn 317 322 314 41 arch/arm/mm/init.c:640 (set (reg:SI 294)
        (plus:SI (reg:SI 295)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 295)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 160 [ D.25802 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 314 317 484 41 arch/arm/mm/init.c:640 (set (reg:SI 291)
        (plus:SI (reg:SI 160 [ D.25802 ])
            (reg:SI 292 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 292 [ <variable>.size ])
        (nil)))

(insn 484 314 318 41 arch/arm/mm/init.c:642 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x116e5440>)) 167 {*arm_movsi_insn} (nil))

(insn 318 484 319 41 arch/arm/mm/init.c:640 (set (reg:SI 296)
        (lshiftrt:SI (reg:SI 294)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 294)
        (nil)))

(insn 319 318 323 41 arch/arm/mm/init.c:640 (set (reg/v:SI 180 [ pages ])
        (minus:SI (lshiftrt:SI (reg:SI 291)
                (const_int 12 [0xc]))
            (reg:SI 296))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 296)
        (expr_list:REG_DEAD (reg:SI 291)
            (nil))))

(insn 323 319 324 41 arch/arm/mm/init.c:641 (set (reg:SI 300)
        (plus:SI (reg/v:SI 180 [ pages ])
            (reg:SI 299 [ num_physpages ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 299 [ num_physpages ])
        (nil)))

(insn 324 323 328 41 arch/arm/mm/init.c:641 (set (mem/c/i:SI (reg/f:SI 385) [0 num_physpages+0 S4 A32])
        (reg:SI 300)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 300)
        (nil)))

(insn 328 324 329 41 arch/arm/mm/init.c:642 (set (reg:SI 1 r1)
        (lshiftrt:SI (reg/v:SI 180 [ pages ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 180 [ pages ])
        (nil)))

(call_insn 329 328 330 41 arch/arm/mm/init.c:642 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 41 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385


;; Succ edge  42 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 41 40) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u437(11){ }u438(13){ }u439(25){ }u440(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 384
;; lr  def 	 24 [cc] 136 157 306 307 308 383
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  gen 	 24 [cc] 136 157 306 307 308 383
;; live  kill	

;; Pred edge  41 [100.0%]  (fallthru,dfs_back)
;; Pred edge  40 [100.0%] 
(code_label 330 329 331 42 64 "" [1 uses])

(note 331 330 338 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(note 338 331 337 42 NOTE_INSN_DELETED)

(insn 337 338 332 42 arch/arm/mm/init.c:638 discrim 1 (set (reg:SI 306 [ memblock.memory.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 384)
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 8 [0x8]))) [0 memblock.memory.cnt+0 S4 A32])
        (nil)))

(insn 332 337 339 42 arch/arm/mm/init.c:642 (set (reg/v/f:SI 136 [ reg.773 ])
        (reg:SI 157 [ ivtmp.692 ])) 167 {*arm_movsi_insn} (nil))

(insn 339 332 333 42 arch/arm/mm/init.c:638 discrim 1 (set (reg/f:SI 308 [ memblock.memory.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 384)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 333 339 483 42 arch/arm/mm/init.c:642 (set (reg:SI 157 [ ivtmp.692 ])
        (plus:SI (reg:SI 157 [ ivtmp.692 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 483 333 340 42 (set (reg/f:SI 383)
        (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>)) 167 {*arm_movsi_insn} (nil))

(insn 340 483 341 42 arch/arm/mm/init.c:638 discrim 1 (set (reg:SI 307)
        (plus:SI (mult:SI (reg:SI 306 [ memblock.memory.cnt ])
                (const_int 8 [0x8]))
            (reg/f:SI 308 [ memblock.memory.regions ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 308 [ memblock.memory.regions ])
        (expr_list:REG_DEAD (reg:SI 306 [ memblock.memory.cnt ])
            (nil))))

(insn 341 340 342 42 arch/arm/mm/init.c:638 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 136 [ reg.773 ])
            (reg:SI 307))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 307)
        (expr_list:REG_DEAD (reg/v/f:SI 136 [ reg.773 ])
            (nil))))

(jump_insn 342 341 343 42 arch/arm/mm/init.c:638 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 334)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 42 -> ( 41 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 383 384 385
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 383 384 385


;; Succ edge  41 [0.0%] 
;; Succ edge  43 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u451(11){ }u452(13){ }u453(25){ }u454(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185 383
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185 383
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 158 159 186 187 312 314 318 319 320 321 322 325 326 327 328 329 330 331 332 333 334 335 336 337 339 340 343 344 345 346 349 351 352 353 354 355 356 359 361 362 363 364 365 366 369 371 372 373 374 375 376 379 381 382
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185 383
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 158 159 186 187 312 314 318 319 320 321 322 325 326 327 328 329 330 331 332 333 334 335 336 337 339 340 343 344 345 346 349 351 352 353 354 355 356 359 361 362 363 364 365 366 369 371 372 373 374 375 376 379 381 382
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  42 [100.0%]  (fallthru,loop_exit)
(note 343 342 347 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(note 347 343 355 43 NOTE_INSN_DELETED)

(note 355 347 356 43 NOTE_INSN_DELETED)

(note 356 355 357 43 NOTE_INSN_DELETED)

(note 357 356 370 43 NOTE_INSN_DELETED)

(note 370 357 418 43 NOTE_INSN_DELETED)

(note 418 370 419 43 NOTE_INSN_DELETED)

(note 419 418 432 43 NOTE_INSN_DELETED)

(note 432 419 433 43 NOTE_INSN_DELETED)

(note 433 432 446 43 NOTE_INSN_DELETED)

(note 446 433 447 43 NOTE_INSN_DELETED)

(note 447 446 460 43 NOTE_INSN_DELETED)

(note 460 447 461 43 NOTE_INSN_DELETED)

(note 461 460 346 43 NOTE_INSN_DELETED)

(insn 346 461 348 43 arch/arm/mm/init.c:644 (set (reg:SI 312 [ num_physpages ])
        (mem/c/i:SI (reg/f:SI 383) [0 num_physpages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 383)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>) [0 num_physpages+0 S4 A32])
            (nil))))

(insn 348 346 349 43 arch/arm/mm/init.c:644 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x116e82a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x116e82a0>)
        (nil)))

(insn 349 348 350 43 arch/arm/mm/init.c:644 (set (reg:SI 1 r1)
        (lshiftrt:SI (reg:SI 312 [ num_physpages ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 312 [ num_physpages ])
        (nil)))

(call_insn 350 349 351 43 arch/arm/mm/init.c:644 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 351 350 358 43 include/asm-generic/atomic-long.h:148 (set (reg/f:SI 159 [ D.25815 ])
        (symbol_ref:SI ("vm_stat") [flags 0xc0] <var_decl 0x1119ef00 vm_stat>)) 167 {*arm_movsi_insn} (nil))

(insn 358 351 364 43 arch/arm/mm/init.c:646 (set (reg/f:SI 318)
        (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 364 358 365 43 arch/arm/mm/init.c:646 (set (reg:SI 2 r2)
        (ashift:SI (reg/v:SI 184 [ free_pages ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 184 [ free_pages ])
        (nil)))

(insn 365 364 362 43 arch/arm/mm/init.c:646 (set (reg:SI 3 r3)
        (ashift:SI (reg/v:SI 185 [ reserved_pages ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 185 [ reserved_pages ])
        (nil)))

(insn 362 365 352 43 arch/arm/mm/init.c:646 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x110f07e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x110f07e0>)
        (nil)))

(insn 352 362 359 43 include/asm-generic/atomic-long.h:148 (set (reg/v:SI 158 [ x ])
        (mem/v:SI (reg/f:SI 159 [ D.25815 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 159 [ D.25815 ])
        (expr_list:REG_EQUAL (mem/v:SI (symbol_ref:SI ("vm_stat") [flags 0xc0] <var_decl 0x1119ef00 vm_stat>) [0 S4 A32])
            (nil))))

(insn 359 352 354 43 arch/arm/mm/init.c:646 (set (reg:SI 320 [ totalhigh_pages ])
        (mem/c/i:SI (reg/f:SI 318) [0 totalhigh_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 318)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>) [0 totalhigh_pages+0 S4 A32])
            (nil))))

(insn 354 359 363 43 arch/arm/mm/init.c:646 (set (reg:SI 314)
        (smax:SI (reg/v:SI 158 [ x ])
            (const_int 0 [0x0]))) 101 {*smax_0} (expr_list:REG_DEAD (reg/v:SI 158 [ x ])
        (nil)))

(insn 363 354 360 43 arch/arm/mm/init.c:646 (set (reg:SI 1 r1)
        (ashift:SI (reg:SI 314)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 314)
        (nil)))

(insn 360 363 361 43 arch/arm/mm/init.c:646 (set (reg:SI 319)
        (ashift:SI (reg:SI 320 [ totalhigh_pages ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 320 [ totalhigh_pages ])
        (nil)))

(insn 361 360 366 43 arch/arm/mm/init.c:646 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 319)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 319)
        (nil)))

(call_insn 366 361 367 43 arch/arm/mm/init.c:646 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 367 366 468 43 arch/arm/mm/init.c:687 (set (reg/f:SI 321)
        (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x110aee40 high_memory>)) 167 {*arm_movsi_insn} (nil))

(insn 468 367 409 43 arch/arm/mm/init.c:656 (set (reg:SI 3 r3)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 409 468 383 43 arch/arm/mm/init.c:656 (set (reg/f:SI 343)
        (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f96c0 _text>)) 167 {*arm_movsi_insn} (nil))

(insn 383 409 423 43 arch/arm/mm/init.c:656 (set (reg:SI 330)
        (const_int 14 [0xe])) 167 {*arm_movsi_insn} (nil))

(insn 423 383 391 43 arch/arm/mm/init.c:656 (set (reg/f:SI 353)
        (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)) 167 {*arm_movsi_insn} (nil))

(insn 391 423 368 43 arch/arm/mm/init.c:656 (set (reg:SI 334)
        (const_int -1073741824 [0xffffffffc0000000])) 167 {*arm_movsi_insn} (nil))

(insn 368 391 377 43 arch/arm/mm/init.c:687 (set (reg:SI 187 [ high_memory.397 ])
        (mem/f/c/i:SI (reg/f:SI 321) [0 high_memory+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 321)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x110aee40 high_memory>) [0 high_memory+0 S4 A32])
            (nil))))

(insn 377 368 437 43 arch/arm/mm/init.c:656 (set (reg:SI 327)
        (const_int 896 [0x380])) 167 {*arm_movsi_insn} (nil))

(insn 437 377 379 43 arch/arm/mm/init.c:656 (set (reg/f:SI 363)
        (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x11478000 _sdata>)) 167 {*arm_movsi_insn} (nil))

(insn 379 437 369 43 arch/arm/mm/init.c:656 (set (reg:SI 328)
        (const_int -16777216 [0xffffffffff000000])) 167 {*arm_movsi_insn} (nil))

(insn 369 379 451 43 arch/arm/mm/init.c:687 (set (reg:SI 322)
        (plus:SI (reg:SI 187 [ high_memory.397 ])
            (const_int 8388608 [0x800000]))) 4 {*arm_addsi3} (nil))

(insn 451 369 413 43 arch/arm/mm/init.c:656 (set (reg/f:SI 373)
        (symbol_ref:SI ("__bss_start") [flags 0xc0] <var_decl 0x114780c0 __bss_start>)) 167 {*arm_movsi_insn} (nil))

(insn 413 451 394 43 arch/arm/mm/init.c:656 (set (reg/f:SI 346)
        (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f9780 _etext>)
                (const_int 1023 [0x3ff])))) 167 {*arm_movsi_insn} (nil))

(insn 394 413 427 43 arch/arm/mm/init.c:656 (set (reg:SI 335)
        (plus:SI (reg:SI 187 [ high_memory.397 ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 187 [ high_memory.397 ])
        (nil)))

(insn 427 394 543 43 arch/arm/mm/init.c:656 (set (reg/f:SI 356)
        (const:SI (plus:SI (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
                (const_int 1023 [0x3ff])))) 167 {*arm_movsi_insn} (nil))

(insn 543 427 441 43 arch/arm/mm/init.c:687 (set (reg:SI 186 [ D.25409 ])
        (lshiftrt:SI (reg:SI 322)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 322)
        (nil)))

(insn 441 543 415 43 arch/arm/mm/init.c:656 (set (reg/f:SI 366)
        (const:SI (plus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x11478060 _edata>)
                (const_int 1023 [0x3ff])))) 167 {*arm_movsi_insn} (nil))

(insn 415 441 455 43 arch/arm/mm/init.c:656 (set (reg:SI 345)
        (minus:SI (reg/f:SI 346)
            (reg/f:SI 343))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 346)
        (expr_list:REG_DEAD (reg/f:SI 343)
            (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f9780 _etext>)
                    (const:SI (plus:SI (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f96c0 _text>)
                            (const_int -1023 [0xfffffffffffffc01]))))
                (nil)))))

(insn 455 415 429 43 arch/arm/mm/init.c:656 (set (reg/f:SI 376)
        (const:SI (plus:SI (symbol_ref:SI ("__bss_stop") [flags 0xc0] <var_decl 0x11478120 __bss_stop>)
                (const_int 1023 [0x3ff])))) 167 {*arm_movsi_insn} (nil))

(insn 429 455 443 43 arch/arm/mm/init.c:656 (set (reg:SI 355)
        (minus:SI (reg/f:SI 356)
            (reg/f:SI 353))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 356)
        (expr_list:REG_DEAD (reg/f:SI 353)
            (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
                    (const:SI (plus:SI (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
                            (const_int -1023 [0xfffffffffffffc01]))))
                (nil)))))

(insn 443 429 544 43 arch/arm/mm/init.c:656 (set (reg:SI 365)
        (minus:SI (reg/f:SI 366)
            (reg/f:SI 363))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 366)
        (expr_list:REG_DEAD (reg/f:SI 363)
            (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x11478060 _edata>)
                    (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x11478000 _sdata>)
                            (const_int -1023 [0xfffffffffffffc01]))))
                (nil)))))

(insn 544 443 457 43 arch/arm/mm/init.c:687 (set (reg:SI 186 [ D.25409 ])
        (ashift:SI (reg:SI 186 [ D.25409 ])
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 457 544 397 43 arch/arm/mm/init.c:656 (set (reg:SI 375)
        (minus:SI (reg/f:SI 376)
            (reg/f:SI 373))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 376)
        (expr_list:REG_DEAD (reg/f:SI 373)
            (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("__bss_stop") [flags 0xc0] <var_decl 0x11478120 __bss_stop>)
                    (const:SI (plus:SI (symbol_ref:SI ("__bss_start") [flags 0xc0] <var_decl 0x114780c0 __bss_start>)
                            (const_int -1023 [0xfffffffffffffc01]))))
                (nil)))))

(insn 397 457 373 43 arch/arm/mm/init.c:656 (set (reg:SI 337)
        (const_int -1075838976 [0xffffffffbfe00000])) 167 {*arm_movsi_insn} (nil))

(insn 373 397 417 43 arch/arm/mm/init.c:656 (set (reg:SI 325)
        (const_int -1048576 [0xfffffffffff00000])) 167 {*arm_movsi_insn} (nil))

(insn 417 373 375 43 arch/arm/mm/init.c:656 (set (reg:SI 351)
        (plus:SI (reg:SI 345)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 375 417 431 43 arch/arm/mm/init.c:656 (set (reg:SI 326)
        (const_int -131072 [0xfffffffffffe0000])) 167 {*arm_movsi_insn} (nil))

(insn 431 375 381 43 arch/arm/mm/init.c:656 (set (reg:SI 361)
        (plus:SI (reg:SI 355)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 381 431 445 43 arch/arm/mm/init.c:656 (set (reg:SI 329)
        (const_int -2097152 [0xffffffffffe00000])) 167 {*arm_movsi_insn} (nil))

(insn 445 381 411 43 arch/arm/mm/init.c:656 (set (reg:SI 371)
        (plus:SI (reg:SI 365)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 411 445 459 43 arch/arm/mm/init.c:656 (set (reg/f:SI 344)
        (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f9780 _etext>)) 167 {*arm_movsi_insn} (nil))

(insn 459 411 425 43 arch/arm/mm/init.c:656 (set (reg:SI 381)
        (plus:SI (reg:SI 375)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 425 459 420 43 arch/arm/mm/init.c:656 (set (reg/f:SI 354)
        (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)) 167 {*arm_movsi_insn} (nil))

(insn 420 425 439 43 arch/arm/mm/init.c:656 (parallel [
            (set (reg:SI 349)
                (if_then_else:SI (ge (reg:SI 345)
                        (const_int 0 [0x0]))
                    (reg:SI 345)
                    (plus:SI (reg:SI 351)
                        (const_int 3 [0x3]))))
            (clobber (reg:CC 24 cc))
        ]) 295 {*ifcompare_move_plus} (expr_list:REG_DEAD (reg:SI 351)
        (expr_list:REG_DEAD (reg:SI 345)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 439 420 434 43 arch/arm/mm/init.c:656 (set (reg/f:SI 364)
        (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x11478060 _edata>)) 167 {*arm_movsi_insn} (nil))

(insn 434 439 453 43 arch/arm/mm/init.c:656 (parallel [
            (set (reg:SI 359)
                (if_then_else:SI (ge (reg:SI 355)
                        (const_int 0 [0x0]))
                    (reg:SI 355)
                    (plus:SI (reg:SI 361)
                        (const_int 3 [0x3]))))
            (clobber (reg:CC 24 cc))
        ]) 295 {*ifcompare_move_plus} (expr_list:REG_DEAD (reg:SI 361)
        (expr_list:REG_DEAD (reg:SI 355)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 453 434 448 43 arch/arm/mm/init.c:656 (set (reg/f:SI 374)
        (symbol_ref:SI ("__bss_stop") [flags 0xc0] <var_decl 0x11478120 __bss_stop>)) 167 {*arm_movsi_insn} (nil))

(insn 448 453 462 43 arch/arm/mm/init.c:656 (parallel [
            (set (reg:SI 369)
                (if_then_else:SI (ge (reg:SI 365)
                        (const_int 0 [0x0]))
                    (reg:SI 365)
                    (plus:SI (reg:SI 371)
                        (const_int 3 [0x3]))))
            (clobber (reg:CC 24 cc))
        ]) 295 {*ifcompare_move_plus} (expr_list:REG_DEAD (reg:SI 371)
        (expr_list:REG_DEAD (reg:SI 365)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 462 448 388 43 arch/arm/mm/init.c:656 (parallel [
            (set (reg:SI 379)
                (if_then_else:SI (ge (reg:SI 375)
                        (const_int 0 [0x0]))
                    (reg:SI 375)
                    (plus:SI (reg:SI 381)
                        (const_int 3 [0x3]))))
            (clobber (reg:CC 24 cc))
        ]) 295 {*ifcompare_move_plus} (expr_list:REG_DEAD (reg:SI 381)
        (expr_list:REG_DEAD (reg:SI 375)
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 388 462 465 43 arch/arm/mm/init.c:656 (set (reg:SI 332)
        (minus:SI (const_int -134217728 [0xfffffffff8000000])
            (reg:SI 186 [ D.25409 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 186 [ D.25409 ])
        (nil)))

(insn 465 388 395 43 arch/arm/mm/init.c:656 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x1161bc00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x1161bc00>)
        (nil)))

(insn 395 465 466 43 arch/arm/mm/init.c:656 (set (reg:SI 336)
        (lshiftrt:SI (reg:SI 335)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 335)
        (nil)))

(insn 466 395 389 43 arch/arm/mm/init.c:656 (set (reg:SI 1 r1)
        (const_int -65536 [0xffffffffffff0000])) 167 {*arm_movsi_insn} (nil))

(insn 389 466 467 43 arch/arm/mm/init.c:656 (set (reg:SI 333)
        (lshiftrt:SI (reg:SI 332)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 332)
        (nil)))

(insn 467 389 421 43 arch/arm/mm/init.c:656 (set (reg:SI 2 r2)
        (const_int -61440 [0xffffffffffff1000])) 167 {*arm_movsi_insn} (nil))

(insn 421 467 374 43 arch/arm/mm/init.c:656 (set (reg:SI 352)
        (ashiftrt:SI (reg:SI 349)
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 349)
        (expr_list:REG_EQUAL (div:SI (reg:SI 345)
                (const_int 1024 [0x400]))
            (nil))))

(insn 374 421 435 43 arch/arm/mm/init.c:656 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 325)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 325)
        (expr_list:REG_EQUAL (const_int -1048576 [0xfffffffffff00000])
            (nil))))

(insn 435 374 376 43 arch/arm/mm/init.c:656 (set (reg:SI 362)
        (ashiftrt:SI (reg:SI 359)
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 359)
        (expr_list:REG_EQUAL (div:SI (reg:SI 355)
                (const_int 1024 [0x400]))
            (nil))))

(insn 376 435 449 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 326)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 326)
        (expr_list:REG_EQUAL (const_int -131072 [0xfffffffffffe0000])
            (nil))))

(insn 449 376 378 43 arch/arm/mm/init.c:656 (set (reg:SI 372)
        (ashiftrt:SI (reg:SI 369)
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 369)
        (expr_list:REG_EQUAL (div:SI (reg:SI 365)
                (const_int 1024 [0x400]))
            (nil))))

(insn 378 449 463 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 327)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 327)
        (expr_list:REG_EQUAL (const_int 896 [0x380])
            (nil))))

(insn 463 378 380 43 arch/arm/mm/init.c:656 (set (reg:SI 382)
        (ashiftrt:SI (reg:SI 379)
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 379)
        (expr_list:REG_EQUAL (div:SI (reg:SI 375)
                (const_int 1024 [0x400]))
            (nil))))

(insn 380 463 386 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 328)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 328)
        (expr_list:REG_EQUAL (const_int -16777216 [0xffffffffff000000])
            (nil))))

(insn 386 380 382 43 arch/arm/mm/init.c:656 (set (reg:SI 331)
        (const_int -134217728 [0xfffffffff8000000])) 167 {*arm_movsi_insn} (nil))

(insn 382 386 401 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 329)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 329)
        (expr_list:REG_EQUAL (const_int -2097152 [0xffffffffffe00000])
            (nil))))

(insn 401 382 387 43 arch/arm/mm/init.c:656 (set (reg:SI 339)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 387 401 403 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 S4 A32])
        (reg:SI 331)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 331)
        (expr_list:REG_EQUAL (const_int -134217728 [0xfffffffff8000000])
            (nil))))

(insn 403 387 390 43 arch/arm/mm/init.c:656 (set (reg:SI 340)
        (const_int -1090519040 [0xffffffffbf000000])) 167 {*arm_movsi_insn} (nil))

(insn 390 403 396 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 S4 A32])
        (reg:SI 333)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 333)
        (nil)))

(insn 396 390 400 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 S4 A32])
        (reg:SI 336)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 336)
        (nil)))

(insn 400 396 402 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 52 [0x34])) [0 S4 A32])
        (reg:SI 334)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 334)
        (expr_list:REG_EQUAL (const_int -1073741824 [0xffffffffc0000000])
            (nil))))

(insn 402 400 404 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 S4 A32])
        (reg:SI 339)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 339)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn 404 402 406 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 S4 A32])
        (reg:SI 340)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 340)
        (expr_list:REG_EQUAL (const_int -1090519040 [0xffffffffbf000000])
            (nil))))

(insn 406 404 408 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 S4 A32])
        (reg:SI 337)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 337)
        (expr_list:REG_EQUAL (const_int -1075838976 [0xffffffffbfe00000])
            (nil))))

(insn 408 406 412 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 S4 A32])
        (reg:SI 330)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 330)
        (expr_list:REG_EQUAL (const_int 14 [0xe])
            (nil))))

(insn 412 408 422 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 76 [0x4c])) [0 S4 A32])
        (reg/f:SI 344)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 344)
        (expr_list:REG_EQUAL (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f9780 _etext>)
            (nil))))

(insn 422 412 426 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 S4 A32])
        (reg:SI 352)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 352)
        (nil)))

(insn 426 422 436 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 88 [0x58])) [0 S4 A32])
        (reg/f:SI 354)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 354)
        (expr_list:REG_EQUAL (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
            (nil))))

(insn 436 426 440 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 92 [0x5c])) [0 S4 A32])
        (reg:SI 362)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 362)
        (nil)))

(insn 440 436 450 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 100 [0x64])) [0 S4 A32])
        (reg/f:SI 364)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 364)
        (expr_list:REG_EQUAL (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x11478060 _edata>)
            (nil))))

(insn 450 440 454 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 S4 A32])
        (reg:SI 372)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 372)
        (nil)))

(insn 454 450 464 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 S4 A32])
        (reg/f:SI 374)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 374)
        (expr_list:REG_EQUAL (symbol_ref:SI ("__bss_stop") [flags 0xc0] <var_decl 0x11478120 __bss_stop>)
            (nil))))

(insn 464 454 384 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 116 [0x74])) [0 S4 A32])
        (reg:SI 382)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 382)
        (nil)))

(insn 384 464 385 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg:SI 330)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 14 [0xe])
        (nil)))

(insn 385 384 392 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg:SI 186 [ D.25409 ])) 167 {*arm_movsi_insn} (nil))

(insn 392 385 393 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 S4 A32])
        (reg:SI 334)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1073741824 [0xffffffffc0000000])
        (nil)))

(insn 393 392 398 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 S4 A32])
        (reg:SI 187 [ high_memory.397 ])) 167 {*arm_movsi_insn} (nil))

(insn 398 393 410 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 S4 A32])
        (reg:SI 337)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1075838976 [0xffffffffbfe00000])
        (nil)))

(insn 410 398 424 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 S4 A32])
        (reg/f:SI 343)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f96c0 _text>)
        (nil)))

(insn 424 410 438 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 84 [0x54])) [0 S4 A32])
        (reg/f:SI 353)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
        (nil)))

(insn 438 424 452 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 S4 A32])
        (reg/f:SI 363)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x11478000 _sdata>)
        (nil)))

(insn 452 438 469 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 108 [0x6c])) [0 S4 A32])
        (reg/f:SI 373)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__bss_start") [flags 0xc0] <var_decl 0x114780c0 __bss_start>)
        (nil)))

(call_insn 469 452 557 43 arch/arm/mm/init.c:656 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 120 [0x78])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 43 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 557 469 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function bootmem_init (bootmem_init)[0:1354] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 6 from 36 to 37 -- before reload
;;   ======================================================

;;	  0-->    36 cc=cmp(r157,r156)                 :cortex_a8_default
changing bb of uid 31
  from 5 to 6
;;	  0-->    31 r157=r157+0x1                     :cortex_a8_default
;;	  2-->    37 pc={(cc<0x0)?L35:pc}              :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 36
;;   new tail = 37

;;   ======================================================
;;   -- basic block 3 from 17 to 26 -- before reload
;;   ======================================================

;;	  0-->    17 r155=[r140-0x8]                   :cortex_a8_load_store_1
;;	  1-->    19 r165=[r140-0x4]                   :cortex_a8_load_store_1
;;	  2-->    24 r166=[r140]                       :cortex_a8_load_store_1
changing bb of uid 32
  from 5 to 3
;;	  2-->    32 r140=r140+0xc                     :cortex_a8_default
;;	  3-->    20 r164=r155+r165                    :cortex_a8_default
;;	  3-->    18 r139=r155 0>>0xc                  :cortex_a8_default
;;	  4-->    22 {r160=umin(r160,r139);clobber cc;}:cortex_a8_default
;;	  5-->    21 r158=r164 0>>0xc                  :cortex_a8_default
;;	  6-->    23 {r136=umax(r136,r158);clobber cc;}:cortex_a8_default
;;	  6-->    25 cc=cmp(r166,0x0)                  :cortex_a8_default
;;	  8-->    26 pc={(cc!=0x0)?L29:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 8
;;   new head = 17
;;   new tail = 26

;;   ======================================================
;;   -- basic block 4 from 28 to 28 -- before reload
;;   ======================================================

;;	  0-->    28 {r135=umax(r135,r158);clobber cc;}:cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 28
;;   new tail = 28

;;   ======================================================
;;   -- basic block 10 from 85 to 90 -- before reload
;;   ======================================================

;;	  0-->    85 r181=[r228+0x8]                   :cortex_a8_load_store_1
;;	  1-->    87 r183=[r228+0x10]                  :cortex_a8_load_store_1
;;	  3-->    88 r182=r181*0x8+r183                :cortex_a8_default
;;	  4-->    89 cc=cmp(r148,r182)                 :cortex_a8_default
;;	  6-->    90 pc={(ltu(cc,0x0))?L82:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 85
;;   new tail = 90

;;   ======================================================
;;   -- basic block 8 from 62 to 71 -- before reload
;;   ======================================================

;;	  0-->    62 r153=[r148]                       :cortex_a8_load_store_1
;;	  1-->    66 r174=[r148+0x4]                   :cortex_a8_load_store_1
changing bb of uid 79
  from 9 to 8
;;	  1-->    79 r148=r148+0x8                     :cortex_a8_default
;;	  2-->    63 r172=r153+0xff0                   :cortex_a8_default
;;	  3-->    67 r173=r153+r174                    :cortex_a8_default
;;	  3-->    64 r171=r172+0xf                     :cortex_a8_default
;;	  5-->    68 r159=r173 0>>0xc                  :cortex_a8_default
;;	  5-->    65 r151=r171 0>>0xc                  :cortex_a8_default
;;	  6-->    69 {r134=umin(r135,r159);clobber cc;}:cortex_a8_default
changing bb of uid 74
  from 9 to 8
;;	  7-->    74 r176=r134-r151                    :cortex_a8_default
changing bb of uid 76
  from 9 to 8
;;	  7-->    76 r0=r151<<0xc                      :cortex_a8_default
;;	  8-->    70 cc=cmp(r151,r134)                 :cortex_a8_default
changing bb of uid 77
  from 9 to 8
;;	  9-->    77 r1=r176<<0xc                      :cortex_a8_default
;;	 10-->    71 pc={(geu(cc,0x0))?L91:pc}         :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 10
;;   new head = 62
;;   new tail = 71

;;   ======================================================
;;   -- basic block 9 from 78 to 78 -- before reload
;;   ======================================================

;;	  0-->    78 call [`free_bootmem']             :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 78
;;   new tail = 78

;;   ======================================================
;;   -- basic block 14 from 122 to 127 -- before reload
;;   ======================================================

changing bb of uid 208
  from 13 to 14
;;	  0-->   208 r2=0x0                            :cortex_a8_default
;;	  0-->   122 r195=[r226+0x14]                  :cortex_a8_load_store_1
;;	  1-->   124 r197=[r226+0x1c]                  :cortex_a8_load_store_1
;;	  3-->   125 r196=r195*0x8+r197                :cortex_a8_default
;;	  4-->   126 cc=cmp(r138,r196)                 :cortex_a8_default
;;	  6-->   127 pc={(ltu(cc,0x0))?L119:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 6
;;   new head = 122
;;   new tail = 127

;;   ======================================================
;;   -- basic block 12 from 98 to 107 -- before reload
;;   ======================================================

;;	  0-->    98 r154=[r138]                       :cortex_a8_load_store_1
;;	  1-->   100 r186=[r138+0x4]                   :cortex_a8_load_store_1
changing bb of uid 116
  from 13 to 12
;;	  1-->   116 r138=r138+0x8                     :cortex_a8_default
;;	  3-->   101 r185=r154+r186                    :cortex_a8_default
;;	  3-->    99 r152=r154 0>>0xc                  :cortex_a8_default
;;	  4-->   102 r188=r185+0xff0                   :cortex_a8_default
changing bb of uid 112
  from 13 to 12
;;	  5-->   112 r0=r152<<0xc                      :cortex_a8_default
;;	  5-->   103 r187=r188+0xf                     :cortex_a8_default
;;	  7-->   104 r137=r187 0>>0xc                  :cortex_a8_default
;;	  8-->   105 {r133=umin(r135,r137);clobber cc;}:cortex_a8_default
changing bb of uid 110
  from 13 to 12
;;	  9-->   110 r190=r133-r152                    :cortex_a8_default
;;	  9-->   106 cc=cmp(r152,r133)                 :cortex_a8_default
changing bb of uid 113
  from 13 to 12
;;	 11-->   113 r1=r190<<0xc                      :cortex_a8_default
;;	 11-->   107 pc={(geu(cc,0x0))?L128:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 11
;;   new head = 98
;;   new tail = 107

;;   ======================================================
;;   -- basic block 13 from 115 to 115 -- before reload
;;   ======================================================

;;	  0-->   115 r0=call [`reserve_bootmem']       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 115
;;   new tail = 115

;;   ======================================================
;;   -- basic block 21 from 183 to 184 -- before reload
;;   ======================================================

;;	  0-->   183 cc=cmp(r142,r141)                 :cortex_a8_default
;;	  2-->   184 pc={(ltu(cc,0x0))?L182:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 183
;;   new tail = 184

;;   ======================================================
;;   -- basic block 16 from 152 to 160 -- before reload
;;   ======================================================

;;	  0-->   152 r145=[r142]                       :cortex_a8_load_store_1
;;	  1-->   156 r211=[r142+0x4]                   :cortex_a8_load_store_1
changing bb of uid 179
  from 20 to 16
;;	  1-->   179 r142=r142+0x8                     :cortex_a8_default
;;	  2-->   153 r209=r145+0xff0                   :cortex_a8_default
;;	  3-->   154 r208=r209+0xf                     :cortex_a8_default
;;	  3-->   157 r210=r145+r211                    :cortex_a8_default
;;	  5-->   155 r143=r208 0>>0xc                  :cortex_a8_default
;;	  5-->   158 r144=r210 0>>0xc                  :cortex_a8_default
;;	  6-->   159 cc=cmp(r143,r135)                 :cortex_a8_default
;;	  8-->   160 pc={(geu(cc,0x0))?L167:pc}        :cortex_a8_branch
;;	Ready list (final):    164/b2
;;   total time = 8
;;   new head = 152
;;   new tail = 160

;;   ======================================================
;;   -- basic block 17 from 162 to 166 -- before reload
;;   ======================================================

;;	  0-->   162 r213=[sfp-0x18]                   :cortex_a8_load_store_1
;;	  0-->   164 {r214=umin(r135,r144);clobber cc;}:cortex_a8_default
;;	  2-->   163 r212=r143+r213                    :cortex_a8_default
;;	  3-->   165 r215=r212-r214                    :cortex_a8_default
;;	  3-->   166 [sfp-0x18]=r215                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 162
;;   new tail = 166

;;   ======================================================
;;   -- basic block 18 from 169 to 170 -- before reload
;;   ======================================================

;;	  0-->   169 cc=cmp(r144,r135)                 :cortex_a8_default
;;	  2-->   170 pc={(leu(cc,0x0))?L177:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 169
;;   new tail = 170

;;   ======================================================
;;   -- basic block 19 from 172 to 176 -- before reload
;;   ======================================================

;;	  0-->   172 r217=[sfp-0x14]                   :cortex_a8_load_store_1
;;	  2-->   173 r216=r217-r144                    :cortex_a8_default
;;	  3-->   175 {r219=umax(r135,r143)+r216;clobber:cortex_a8_default
;;	  3-->   176 [sfp-0x14]=r219                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 3
;;   new head = 172
;;   new tail = 176

;;   ======================================================
;;   -- basic block 2 from 5 to 212 -- before reload
;;   ======================================================

;;	  0-->     5 r161=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  0-->    10 r136=0x0                          :cortex_a8_default
;;	  1-->    11 r135=r136                         :cortex_a8_default
;;	  1-->    12 r160=0xffffffffffffffff           :cortex_a8_default
;;	  2-->     9 r140=r161+0x10                    :cortex_a8_default
;;	  2-->    13 r157=r136                         :cortex_a8_default
;;	  3-->     6 r156=[r161+0x4]                   :cortex_a8_load_store_1
;;	  3-->   212 pc=L33                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 5
;;   new tail = 212

;;   ======================================================
;;   -- basic block 7 from 39 to 214 -- before reload
;;   ======================================================

;;	  0-->    39 r146=r135-r160                    :cortex_a8_default
;;	  0-->    43 r147=r135<<0xc                    :cortex_a8_default
;;	  1-->    40 r0=r146                           :cortex_a8_default
;;	  2-->    41 r0=call [`bootmem_bootmap_pages'] :cortex_a8_issue_branch
;;	  2-->    46 r1=0x20                           :cortex_a8_default
;;	  3-->    47 r2=r147                           :cortex_a8_default
;;	 34-->    45 r0=r0<<0xc                        :cortex_a8_default
;;	 35-->    48 r0=call [`memblock_alloc_base']   :cortex_a8_issue_branch
;;	 35-->    54 r2=r160                           :cortex_a8_default
;;	 36-->    55 r3=r135                           :cortex_a8_default
;;	 67-->    51 r169=r0 0>>0xc                    :cortex_a8_default
;;	 67-->    52 r0=`contig_page_data'             :cortex_a8_load_store_1
;;	 68-->    53 r1=r169                           :cortex_a8_default
;;	 69-->    56 r0=call [`init_bootmem_node']     :cortex_a8_issue_branch
;;	 69-->    57 r170=`memblock'                   :cortex_a8_load_store_1
;;	 71-->    83 r228=r170                         :cortex_a8_default
;;	 72-->    58 r148=[r170+0x10]                  :cortex_a8_load_store_1
;;	 72-->   214 pc=L80                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 72
;;   new head = 39
;;   new tail = 214

;;   ======================================================
;;   -- basic block 11 from 93 to 216 -- before reload
;;   ======================================================

;;	  0-->    93 r184=`memblock'                   :cortex_a8_load_store_1
;;	  2-->   120 r226=r184                         :cortex_a8_default
;;	  3-->    94 r138=[r184+0x1c]                  :cortex_a8_load_store_1
;;	  3-->   216 pc=L117                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 93
;;   new tail = 216

;;   ======================================================
;;   -- basic block 15 from 130 to 218 -- before reload
;;   ======================================================

;;	  0-->   130 r198=sfp-0xc                      :cortex_a8_default
;;	  0-->   132 r1=0xc                            :cortex_a8_default
;;	  1-->   131 r0=r198                           :cortex_a8_default
;;	  2-->   133 call [`__memzero']                :cortex_a8_issue_branch
;;	  2-->   143 r204=`memblock'                   :cortex_a8_load_store_1
;;	  3-->   134 [sfp-0xc]=r146                    :cortex_a8_load_store_1
;;	  3-->   135 r199=r136-r135                    :cortex_a8_default
;;	  4-->   136 [sfp-0x8]=r199                    :cortex_a8_load_store_1
;;	  4-->   137 r200=sfp-0x18                     :cortex_a8_default
;;	  5-->   141 {r0=[r198];r1=[r198+0x4];r2=[r198+:cortex_a8_load_store_2
;;	  6-->   146 r207=[r204+0x8]                   :cortex_a8_load_store_1
;;	  7-->   144 r142=[r204+0x10]                  :cortex_a8_load_store_1
;;	  9-->   148 r141=r207*0x8+r142                :cortex_a8_default
;;	 10-->   142 {[r200]=r0;[r200+0x4]=r1;[r200+0x8:cortex_a8_load_store_2
;;	 11-->   218 pc=L180                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 11
;;   new head = 130
;;   new tail = 218

;;   ======================================================
;;   -- basic block 22 from 188 to 199 -- before reload
;;   ======================================================

;;	  0-->   190 r2=r160                           :cortex_a8_default
;;	  0-->   188 r0=0x0                            :cortex_a8_default
;;	  1-->   189 r1=sfp-0xc                        :cortex_a8_default
;;	  1-->   191 r3=sfp-0x18                       :cortex_a8_default
;;	  2-->   192 call [`free_area_init_node']      :cortex_a8_issue_branch
;;	  2-->   193 r222=`high_memory'                :cortex_a8_load_store_1
;;	  3-->   196 r224=`max_low_pfn'                :cortex_a8_load_store_1
;;	  3-->   194 r223=r147-0x40000000              :cortex_a8_default
;;	  4-->   198 r225=`max_pfn'                    :cortex_a8_load_store_1
;;	  5-->   195 [r222]=r223                       :cortex_a8_load_store_1
;;	  6-->   197 [r224]=r135                       :cortex_a8_load_store_1
;;	  7-->   199 [r225]=r136                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 7
;;   new head = 188
;;   new tail = 199


;; Procedure interblock/speculative motions == 12/10 




bootmem_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,10u} r1={15d,7u} r2={13d,5u} r3={10d,2u} r11={1d,22u} r12={8d} r13={1d,29u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={23d,9u} r25={1d,32u,1d} r26={1d,21u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,2u} r134={1d,2u} r135={2d,12u} r136={2d,5u} r137={1d,1u} r138={2d,4u} r139={1d,1u} r140={2d,4u} r141={1d,1u} r142={2d,5u} r143={1d,3u} r144={1d,3u} r145={1d,2u,1d} r146={1d,2u} r147={1d,2u} r148={2d,4u} r151={1d,3u} r152={1d,3u} r153={1d,2u,1d} r154={1d,2u} r155={1d,2u} r156={1d,1u} r157={2d,2u} r158={1d,2u} r159={1d,1u} r160={2d,4u} r161={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r169={1d,1u} r170={1d,2u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,2u} r185={1d,1u,1d} r186={1d,1u} r187={1d,1u} r188={1d,1u} r190={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,4u} r199={1d,1u} r200={1d,3u} r204={1d,2u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r219={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,2u} r228={1d,2u} 
;;    total ref usage 1219{946d,269u,4e} in 136{129 regular + 7 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136 140 156 157 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135 136 140 156 157 160 161
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 10 2 arch/arm/mm/init.c:144 discrim 1 (set (reg/f:SI 161)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 10 5 11 2 arch/arm/mm/init.c:142 (set (reg/v:SI 136 [ max_high.851 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/init.c:142 (set (reg/v:SI 135 [ max_low.852 ])
        (reg/v:SI 136 [ max_high.851 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 12 11 9 2 arch/arm/mm/init.c:141 (set (reg/v:SI 160 [ min ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 9 12 13 2 arch/arm/mm/init.c:144 discrim 1 (set (reg:SI 140 [ ivtmp.847 ])
        (plus:SI (reg/f:SI 161)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 13 9 6 2 arch/arm/mm/init.c:144 (set (reg/v:SI 157 [ i ])
        (reg/v:SI 136 [ max_high.851 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 6 13 212 2 arch/arm/mm/init.c:144 discrim 1 (set (reg:SI 156 [ D.25862 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 4 [0x4])) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))) [0 meminfo.nr_banks+0 S4 A32])
        (nil)))

(jump_insn 212 6 213 2 (set (pc)
        (label_ref 33)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160


;; Succ edge  6 [100.0%] 

(barrier 213 212 35)

;; Start of basic block ( 6) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140 160
;; lr  def 	 24 [cc] 136 139 155 158 160 164 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  gen 	 24 [cc] 136 139 155 158 160 164 165 166
;; live  kill	 24 [cc]

;; Pred edge  6 [91.0%] 
(code_label 35 213 16 3 74 "" [1 uses])

(note 16 35 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 19 3 arch/arm/mm/init.c:148 (set (reg:SI 155 [ D.25868 ])
        (mem/s/j:SI (plus:SI (reg:SI 140 [ ivtmp.847 ])
                (const_int -8 [0xfffffffffffffff8])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 17 24 3 arch/arm/mm/init.c:149 (set (reg:SI 165 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg:SI 140 [ ivtmp.847 ])
                (const_int -4 [0xfffffffffffffffc])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 19 32 3 arch/arm/mm/init.c:155 (set (reg:SI 166 [ <variable>.highmem ])
        (mem/s/j:SI (reg:SI 140 [ ivtmp.847 ]) [0 <variable>.highmem+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 32 24 20 3 arch/arm/mm/init.c:144 (set (reg:SI 140 [ ivtmp.847 ])
        (plus:SI (reg:SI 140 [ ivtmp.847 ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 20 32 18 3 arch/arm/mm/init.c:149 (set (reg:SI 164)
        (plus:SI (reg:SI 155 [ D.25868 ])
            (reg:SI 165 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 165 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 155 [ D.25868 ])
            (nil))))

(insn 18 20 22 3 arch/arm/mm/init.c:148 (set (reg/v:SI 139 [ min.848 ])
        (lshiftrt:SI (reg:SI 155 [ D.25868 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 22 18 21 3 arch/arm/mm/init.c:149 (parallel [
            (set (reg/v:SI 160 [ min ])
                (umin:SI (reg/v:SI 160 [ min ])
                    (reg/v:SI 139 [ min.848 ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ min.848 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 21 22 23 3 arch/arm/mm/init.c:149 (set (reg/v:SI 158 [ max_high ])
        (lshiftrt:SI (reg:SI 164)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 23 21 25 3 arch/arm/mm/init.c:149 (parallel [
            (set (reg/v:SI 136 [ max_high.851 ])
                (umax:SI (reg/v:SI 136 [ max_high.851 ])
                    (reg/v:SI 158 [ max_high ])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 25 23 26 3 arch/arm/mm/init.c:155 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 166 [ <variable>.highmem ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 166 [ <variable>.highmem ])
        (nil)))

(jump_insn 26 25 27 3 arch/arm/mm/init.c:155 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 158 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 158 160


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 158 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 158 160
;; live  gen 	 135
;; live  kill	 24 [cc]

;; Pred edge  3 [50.0%]  (fallthru)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 arch/arm/mm/init.c:155 (parallel [
            (set (reg/v:SI 135 [ max_low.852 ])
                (umax:SI (reg/v:SI 135 [ max_low.852 ])
                    (reg/v:SI 158 [ max_high ])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (expr_list:REG_DEAD (reg/v:SI 158 [ max_high ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; lr  def 	 140 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  gen 	 140 157
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 29 28 30 5 73 "" [1 uses])

(note 30 29 33 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160


;; Succ edge  6 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 5 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 33 30 34 6 72 "" [1 uses])

(note 34 33 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 36 34 31 6 arch/arm/mm/init.c:144 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 157 [ i ])
            (reg:SI 156 [ D.25862 ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 31 36 37 6 arch/arm/mm/init.c:144 (set (reg/v:SI 157 [ i ])
        (plus:SI (reg/v:SI 157 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 37 31 38 6 arch/arm/mm/init.c:144 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 6 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160


;; Succ edge  3 [91.0%] 
;; Succ edge  7 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 148 169 170 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 160
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 146 147 148 169 170 228
;; live  kill	 14 [lr]

;; Pred edge  6 [9.0%]  (fallthru,loop_exit)
(note 38 37 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 42 38 44 7 NOTE_INSN_DELETED)

(note 44 42 49 7 NOTE_INSN_DELETED)

(note 49 44 39 7 NOTE_INSN_DELETED)

(insn 39 49 43 7 arch/arm/mm/init.c:174 (set (reg:SI 146 [ D.25910 ])
        (minus:SI (reg/v:SI 135 [ max_low.852 ])
            (reg/v:SI 160 [ min ]))) 28 {*arm_subsi3_insn} (nil))

(insn 43 39 40 7 arch/arm/mm/init.c:175 (set (reg:SI 147 [ D.25908 ])
        (ashift:SI (reg/v:SI 135 [ max_low.852 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 40 43 41 7 arch/arm/mm/init.c:174 (set (reg:SI 0 r0)
        (reg:SI 146 [ D.25910 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 46 7 arch/arm/mm/init.c:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("bootmem_bootmap_pages") [flags 0x41] <function_decl 0x11095280 bootmem_bootmap_pages>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 46 41 47 7 arch/arm/mm/init.c:175 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 45 7 arch/arm/mm/init.c:175 (set (reg:SI 2 r2)
        (reg:SI 147 [ D.25908 ])) 167 {*arm_movsi_insn} (nil))

(insn 45 47 48 7 arch/arm/mm/init.c:175 (set (reg:SI 0 r0)
        (ashift:SI (reg:SI 0 r0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(call_insn 48 45 54 7 arch/arm/mm/init.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_alloc_base") [flags 0x41] <function_decl 0x113f7900 memblock_alloc_base>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 54 48 55 7 arch/arm/mm/init.c:184 (set (reg:SI 2 r2)
        (reg/v:SI 160 [ min ])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 51 7 arch/arm/mm/init.c:184 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ max_low.852 ])) 167 {*arm_movsi_insn} (nil))

(insn 51 55 52 7 arch/arm/mm/init.c:184 (set (reg:SI 169)
        (lshiftrt:SI (reg:SI 0 r0)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 52 51 53 7 arch/arm/mm/init.c:184 (set (reg:SI 0 r0)
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c25120 contig_page_data>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c25120 contig_page_data>)
        (nil)))

(insn 53 52 56 7 arch/arm/mm/init.c:184 (set (reg:SI 1 r1)
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(call_insn 56 53 57 7 arch/arm/mm/init.c:184 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("init_bootmem_node") [flags 0x41] <function_decl 0x11095300 init_bootmem_node>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 57 56 83 7 arch/arm/mm/init.c:187 (set (reg/f:SI 170)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 83 57 58 7 arch/arm/mm/init.c:187 discrim 1 (set (reg/f:SI 228)
        (reg/f:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 170)
        (expr_list:REG_EQUAL (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
            (nil))))

(insn 58 83 214 7 arch/arm/mm/init.c:187 (set (reg/v/f:SI 148 [ reg ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 170)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(jump_insn 214 58 215 7 (set (pc)
        (label_ref 80)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228


;; Succ edge  10 [100.0%] 

(barrier 215 214 82)

;; Start of basic block ( 10) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 148
;; lr  def 	 24 [cc] 134 151 153 159 171 172 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; live  gen 	 24 [cc] 134 151 153 159 171 172 173 174
;; live  kill	 24 [cc]

;; Pred edge  10 [95.5%] 
(code_label 82 215 61 8 77 "" [1 uses])

(note 61 82 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 66 8 include/linux/memblock.h:120 (set (reg:SI 153 [ D.25891 ])
        (mem/s/j:SI (reg/v/f:SI 148 [ reg ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 62 79 8 include/linux/memblock.h:129 (set (reg:SI 174 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ reg ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 79 66 63 8 arch/arm/mm/init.c:187 (set (reg/v/f:SI 148 [ reg ])
        (plus:SI (reg/v/f:SI 148 [ reg ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 63 79 67 8 include/linux/memblock.h:120 (set (reg:SI 172)
        (plus:SI (reg:SI 153 [ D.25891 ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 67 63 64 8 include/linux/memblock.h:129 (set (reg:SI 173)
        (plus:SI (reg:SI 153 [ D.25891 ])
            (reg:SI 174 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 174 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 153 [ D.25891 ])
            (nil))))

(insn 64 67 68 8 include/linux/memblock.h:120 (set (reg:SI 171)
        (plus:SI (reg:SI 172)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 153 [ D.25891 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 68 64 65 8 include/linux/memblock.h:129 (set (reg/v:SI 159 [ max_low ])
        (lshiftrt:SI (reg:SI 173)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 65 68 69 8 include/linux/memblock.h:120 (set (reg/v:SI 151 [ start ])
        (lshiftrt:SI (reg:SI 171)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 69 65 74 8 include/linux/memblock.h:129 (parallel [
            (set (reg/v:SI 134 [ max_low.853 ])
                (umin:SI (reg/v:SI 135 [ max_low.852 ])
                    (reg/v:SI 159 [ max_low ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 159 [ max_low ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 74 69 76 8 arch/arm/mm/init.c:196 (set (reg:SI 176)
        (minus:SI (reg/v:SI 134 [ max_low.853 ])
            (reg/v:SI 151 [ start ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ max_low.853 ])
        (nil)))

(insn 76 74 70 8 arch/arm/mm/init.c:196 (set (reg:SI 0 r0)
        (ashift:SI (reg/v:SI 151 [ start ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 151 [ start ])
        (nil)))

(insn 70 76 77 8 arch/arm/mm/init.c:193 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 151 [ start ])
            (reg/v:SI 134 [ max_low.853 ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 77 70 71 8 arch/arm/mm/init.c:196 (set (reg:SI 1 r1)
        (ashift:SI (reg:SI 176)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(jump_insn 71 77 72 8 arch/arm/mm/init.c:193 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 8 -> ( 11 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 146 147 148 151 160 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 146 147 148 151 160 228


;; Succ edge  11 [4.5%]  (loop_exit)
;; Succ edge  9 [95.5%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 146 147 148 151 160 228
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 176
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 146 147 148 151 160 176 228
;; live  gen 	 0 [r0] 1 [r1] 148 176
;; live  kill	 14 [lr]

;; Pred edge  8 [95.5%]  (fallthru)
(note 72 71 73 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 73 72 75 9 NOTE_INSN_DELETED)

(note 75 73 78 9 NOTE_INSN_DELETED)

(call_insn 78 75 80 9 arch/arm/mm/init.c:196 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_bootmem") [flags 0x41] <function_decl 0x11095600 free_bootmem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228


;; Succ edge  10 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 9 7) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 228
;; lr  def 	 24 [cc] 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; live  gen 	 24 [cc] 181 182 183
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru,dfs_back)
;; Pred edge  7 [100.0%] 
(code_label 80 78 81 10 75 "" [1 uses])

(note 81 80 86 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 86 81 85 10 NOTE_INSN_DELETED)

(insn 85 86 87 10 arch/arm/mm/init.c:187 discrim 1 (set (reg:SI 181 [ memblock.memory.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 228)
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 8 [0x8]))) [0 memblock.memory.cnt+0 S4 A32])
        (nil)))

(insn 87 85 88 10 arch/arm/mm/init.c:187 discrim 1 (set (reg/f:SI 183 [ memblock.memory.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 228)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 88 87 89 10 arch/arm/mm/init.c:187 discrim 1 (set (reg:SI 182)
        (plus:SI (mult:SI (reg:SI 181 [ memblock.memory.cnt ])
                (const_int 8 [0x8]))
            (reg/f:SI 183 [ memblock.memory.regions ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 183 [ memblock.memory.regions ])
        (expr_list:REG_DEAD (reg:SI 181 [ memblock.memory.cnt ])
            (nil))))

(insn 89 88 90 10 arch/arm/mm/init.c:187 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ reg ])
            (reg:SI 182))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(jump_insn 90 89 91 10 arch/arm/mm/init.c:187 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 10 -> ( 8 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228


;; Succ edge  8 [95.5%] 
;; Succ edge  11 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 8 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 184 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 160
;; live  gen 	 138 184 226
;; live  kill	

;; Pred edge  8 [4.5%]  (loop_exit)
;; Pred edge  10 [4.5%]  (fallthru,loop_exit)
(code_label 91 90 92 11 76 "" [1 uses])

(note 92 91 93 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 120 11 arch/arm/mm/init.c:200 (set (reg/f:SI 184)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 120 93 94 11 arch/arm/mm/init.c:200 discrim 1 (set (reg/f:SI 226)
        (reg/f:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 184)
        (expr_list:REG_EQUAL (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
            (nil))))

(insn 94 120 216 11 arch/arm/mm/init.c:200 (set (reg/v/f:SI 138 [ reg.849 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 184)
                (const_int 28 [0x1c])) [0 memblock.reserved.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 28 [0x1c]))) [0 memblock.reserved.regions+0 S4 A32])
        (nil)))

(jump_insn 216 94 217 11 (set (pc)
        (label_ref 117)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226


;; Succ edge  14 [100.0%] 

(barrier 217 216 119)

;; Start of basic block ( 14) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 24 [cc] 133 137 152 154 185 186 187 188
;; live  in  	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; live  gen 	 24 [cc] 133 137 152 154 185 186 187 188
;; live  kill	 24 [cc]

;; Pred edge  14 [95.5%] 
(code_label 119 217 97 12 80 "" [1 uses])

(note 97 119 98 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 100 12 include/linux/memblock.h:138 (set (reg:SI 154 [ D.25887 ])
        (mem/s/j:SI (reg/v/f:SI 138 [ reg.849 ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 100 98 116 12 include/linux/memblock.h:147 (set (reg:SI 186 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ reg.849 ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 116 100 101 12 arch/arm/mm/init.c:200 (set (reg/v/f:SI 138 [ reg.849 ])
        (plus:SI (reg/v/f:SI 138 [ reg.849 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 101 116 99 12 include/linux/memblock.h:147 (set (reg:SI 185)
        (plus:SI (reg:SI 154 [ D.25887 ])
            (reg:SI 186 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 186 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 154 [ D.25887 ])
            (nil))))

(insn 99 101 102 12 include/linux/memblock.h:138 (set (reg/v:SI 152 [ start ])
        (lshiftrt:SI (reg:SI 154 [ D.25887 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 102 99 112 12 include/linux/memblock.h:147 (set (reg:SI 188)
        (plus:SI (reg:SI 185)
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(insn 112 102 103 12 arch/arm/mm/init.c:209 (set (reg:SI 0 r0)
        (ashift:SI (reg/v:SI 152 [ start ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 152 [ start ])
        (nil)))

(insn 103 112 104 12 include/linux/memblock.h:147 (set (reg:SI 187)
        (plus:SI (reg:SI 188)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 188)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 185)
                (const_int 4095 [0xfff]))
            (nil))))

(insn 104 103 105 12 include/linux/memblock.h:147 (set (reg/v:SI 137 [ max_low.850 ])
        (lshiftrt:SI (reg:SI 187)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(insn 105 104 110 12 include/linux/memblock.h:147 (parallel [
            (set (reg/v:SI 133 [ max_low.854 ])
                (umin:SI (reg/v:SI 135 [ max_low.852 ])
                    (reg/v:SI 137 [ max_low.850 ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ max_low.850 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 110 105 106 12 arch/arm/mm/init.c:209 (set (reg:SI 190)
        (minus:SI (reg/v:SI 133 [ max_low.854 ])
            (reg/v:SI 152 [ start ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ max_low.854 ])
        (nil)))

(insn 106 110 113 12 arch/arm/mm/init.c:206 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 152 [ start ])
            (reg/v:SI 133 [ max_low.854 ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 113 106 107 12 arch/arm/mm/init.c:209 (set (reg:SI 1 r1)
        (ashift:SI (reg:SI 190)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))

(jump_insn 107 113 108 12 arch/arm/mm/init.c:206 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 12 -> ( 15 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 146 147 152 160 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 146 147 152 160 226


;; Succ edge  15 [4.5%]  (loop_exit)
;; Succ edge  13 [95.5%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 146 147 152 160 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 190
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 146 147 152 160 190 226
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 138 190
;; live  kill	 14 [lr]

;; Pred edge  12 [95.5%]  (fallthru)
(note 108 107 109 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 109 108 111 13 NOTE_INSN_DELETED)

(note 111 109 115 13 NOTE_INSN_DELETED)

(call_insn 115 111 117 13 arch/arm/mm/init.c:209 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("reserve_bootmem") [flags 0x41] <function_decl 0x11095700 reserve_bootmem>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226


;; Succ edge  14 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 13 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u157(11){ }u158(13){ }u159(25){ }u160(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 226
;; lr  def 	 24 [cc] 195 196 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; live  gen 	 24 [cc] 195 196 197
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru,dfs_back)
;; Pred edge  11 [100.0%] 
(code_label 117 115 118 14 78 "" [1 uses])

(note 118 117 123 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 123 118 208 14 NOTE_INSN_DELETED)

(insn 208 123 122 14 arch/arm/mm/init.c:209 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 122 208 124 14 arch/arm/mm/init.c:200 discrim 1 (set (reg:SI 195 [ memblock.reserved.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 226)
                (const_int 20 [0x14])) [0 memblock.reserved.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 20 [0x14]))) [0 memblock.reserved.cnt+0 S4 A32])
        (nil)))

(insn 124 122 125 14 arch/arm/mm/init.c:200 discrim 1 (set (reg/f:SI 197 [ memblock.reserved.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 226)
                (const_int 28 [0x1c])) [0 memblock.reserved.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 28 [0x1c]))) [0 memblock.reserved.regions+0 S4 A32])
        (nil)))

(insn 125 124 126 14 arch/arm/mm/init.c:200 discrim 1 (set (reg:SI 196)
        (plus:SI (mult:SI (reg:SI 195 [ memblock.reserved.cnt ])
                (const_int 8 [0x8]))
            (reg/f:SI 197 [ memblock.reserved.regions ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg/f:SI 197 [ memblock.reserved.regions ])
        (expr_list:REG_DEAD (reg:SI 195 [ memblock.reserved.cnt ])
            (nil))))

(insn 126 125 127 14 arch/arm/mm/init.c:200 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 138 [ reg.849 ])
            (reg:SI 196))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 127 126 128 14 arch/arm/mm/init.c:200 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 119)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 14 -> ( 12 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226


;; Succ edge  12 [95.5%] 
;; Succ edge  15 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 14 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142 198 199 200 204 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 160
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 141 142 198 199 200 204 207
;; live  kill	 14 [lr]

;; Pred edge  14 [4.5%]  (fallthru,loop_exit)
;; Pred edge  12 [4.5%]  (loop_exit)
(code_label 128 127 129 15 79 "" [1 uses])

(note 129 128 147 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(note 147 129 130 15 NOTE_INSN_DELETED)

(insn 130 147 132 15 arch/arm/mm/init.c:249 discrim 1 (set (reg/f:SI 198)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 132 130 131 15 arch/arm/mm/init.c:249 discrim 1 (set (reg:SI 1 r1)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(insn 131 132 133 15 arch/arm/mm/init.c:249 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(call_insn 133 131 143 15 arch/arm/mm/init.c:249 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10b7d080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 143 133 134 15 arch/arm/mm/init.c:266 (set (reg/f:SI 204)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 134 143 135 15 arch/arm/mm/init.c:256 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 zone_size+0 S4 A32])
        (reg:SI 146 [ D.25910 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.25910 ])
        (nil)))

(insn 135 134 136 15 arch/arm/mm/init.c:258 (set (reg:SI 199)
        (minus:SI (reg/v:SI 136 [ max_high.851 ])
            (reg/v:SI 135 [ max_low.852 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 136 135 137 15 arch/arm/mm/init.c:258 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 zone_size+4 S4 A32])
        (reg:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(insn 137 136 141 15 arch/arm/mm/init.c:265 (set (reg/f:SI 200)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 141 137 146 15 arch/arm/mm/init.c:265 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/c:SI (reg/f:SI 198) [0 zone_size+0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s/c:SI (plus:SI (reg/f:SI 198)
                        (const_int 4 [0x4])) [0 zone_size+4 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s/c:SI (plus:SI (reg/f:SI 198)
                        (const_int 8 [0x8])) [0 zone_size+8 S4 A32]))
        ]) 189 {*ldmsi3} (expr_list:REG_DEAD (reg/f:SI 198)
        (nil)))

(insn 146 141 144 15 arch/arm/mm/init.c:266 discrim 1 (set (reg:SI 207 [ memblock.memory.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 204)
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 204)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                        (const_int 8 [0x8]))) [0 memblock.memory.cnt+0 S4 A32])
            (nil))))

(insn 144 146 148 15 arch/arm/mm/init.c:266 (set (reg/v/f:SI 142 [ reg ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 204)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 148 144 142 15 arch/arm/mm/init.c:266 discrim 1 (set (reg/f:SI 141 [ D.25929 ])
        (plus:SI (mult:SI (reg:SI 207 [ memblock.memory.cnt ])
                (const_int 8 [0x8]))
            (reg/v/f:SI 142 [ reg ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 207 [ memblock.memory.cnt ])
        (nil)))

(insn 142 148 218 15 arch/arm/mm/init.c:265 (parallel [
            (set (mem/s/c:SI (reg/f:SI 200) [0 zhole_size+0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg/f:SI 200)
                        (const_int 4 [0x4])) [0 zhole_size+4 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s/c:SI (plus:SI (reg/f:SI 200)
                        (const_int 8 [0x8])) [0 zhole_size+8 S4 A64])
                (reg:SI 2 r2))
        ]) 196 {*stmsi3} (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(jump_insn 218 142 219 15 (set (pc)
        (label_ref 180)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160


;; Succ edge  21 [100.0%] 

(barrier 219 218 182)

;; Start of basic block ( 21) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u200(11){ }u201(13){ }u202(25){ }u203(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142
;; lr  def 	 24 [cc] 143 144 145 208 209 210 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  gen 	 24 [cc] 143 144 145 208 209 210 211
;; live  kill	

;; Pred edge  21 [91.0%] 
(code_label 182 219 151 16 84 "" [1 uses])

(note 151 182 152 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 152 151 156 16 include/linux/memblock.h:120 (set (reg:SI 145 [ D.25927 ])
        (mem/s/j:SI (reg/v/f:SI 142 [ reg ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 156 152 179 16 include/linux/memblock.h:129 (set (reg:SI 211 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ reg ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 179 156 153 16 arch/arm/mm/init.c:266 (set (reg/v/f:SI 142 [ reg ])
        (plus:SI (reg/v/f:SI 142 [ reg ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 153 179 154 16 include/linux/memblock.h:120 (set (reg:SI 209)
        (plus:SI (reg:SI 145 [ D.25927 ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 154 153 157 16 include/linux/memblock.h:120 (set (reg:SI 208)
        (plus:SI (reg:SI 209)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 145 [ D.25927 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 157 154 155 16 include/linux/memblock.h:129 (set (reg:SI 210)
        (plus:SI (reg:SI 145 [ D.25927 ])
            (reg:SI 211 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 211 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 145 [ D.25927 ])
            (nil))))

(insn 155 157 158 16 include/linux/memblock.h:120 (set (reg/v:SI 143 [ start ])
        (lshiftrt:SI (reg:SI 208)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 158 155 159 16 include/linux/memblock.h:129 (set (reg/v:SI 144 [ end ])
        (lshiftrt:SI (reg:SI 210)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 159 158 160 16 arch/arm/mm/init.c:270 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ start ])
            (reg/v:SI 135 [ max_low.852 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 160 159 161 16 arch/arm/mm/init.c:270 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 167)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u216(11){ }u217(13){ }u218(25){ }u219(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144
;; lr  def 	 24 [cc] 212 213 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  gen 	 212 213 214 215
;; live  kill	 24 [cc]

;; Pred edge  16 [50.0%]  (fallthru)
(note 161 160 162 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 162 161 164 17 arch/arm/mm/init.c:272 (set (reg:SI 213 [ zhole_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 zhole_size+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 164 162 163 17 arch/arm/mm/init.c:272 (parallel [
            (set (reg:SI 214)
                (umin:SI (reg/v:SI 135 [ max_low.852 ])
                    (reg/v:SI 144 [ end ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 163 164 165 17 arch/arm/mm/init.c:272 (set (reg:SI 212)
        (plus:SI (reg/v:SI 143 [ start ])
            (reg:SI 213 [ zhole_size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 213 [ zhole_size ])
        (nil)))

(insn 165 163 166 17 arch/arm/mm/init.c:272 (set (reg:SI 215)
        (minus:SI (reg:SI 212)
            (reg:SI 214))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 214)
        (expr_list:REG_DEAD (reg:SI 212)
            (nil))))

(insn 166 165 167 17 arch/arm/mm/init.c:272 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 zhole_size+0 S4 A64])
        (reg:SI 215)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 215)
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 167 166 168 18 82 "" [1 uses])

(note 168 167 169 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 170 18 arch/arm/mm/init.c:275 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ end ])
            (reg/v:SI 135 [ max_low.852 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 170 169 171 18 arch/arm/mm/init.c:275 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 177)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144
;; lr  def 	 24 [cc] 216 217 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  gen 	 216 217 219
;; live  kill	 24 [cc]

;; Pred edge  18 [50.0%]  (fallthru)
(note 171 170 174 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 174 171 172 19 NOTE_INSN_DELETED)

(insn 172 174 173 19 arch/arm/mm/init.c:277 (set (reg:SI 217 [ zhole_size+4 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 zhole_size+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 175 19 arch/arm/mm/init.c:277 (set (reg:SI 216)
        (minus:SI (reg:SI 217 [ zhole_size+4 ])
            (reg/v:SI 144 [ end ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 217 [ zhole_size+4 ])
        (expr_list:REG_DEAD (reg/v:SI 144 [ end ])
            (nil))))

(insn 175 173 176 19 arch/arm/mm/init.c:277 (parallel [
            (set (reg:SI 219)
                (plus:SI (umax:SI (reg/v:SI 135 [ max_low.852 ])
                        (reg/v:SI 143 [ start ]))
                    (reg:SI 216)))
            (clobber (reg:CC 24 cc))
        ]) 109 {*minmax_arithsi} (expr_list:REG_DEAD (reg:SI 216)
        (expr_list:REG_DEAD (reg/v:SI 143 [ start ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (nil)))))

(insn 176 175 177 19 arch/arm/mm/init.c:277 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 zhole_size+4 S4 A32])
        (reg:SI 219)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 219)
        (nil)))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 18 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  gen 	 142
;; live  kill	

;; Pred edge  18 [50.0%] 
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 177 176 178 20 83 "" [1 uses])

(note 178 177 180 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160


;; Succ edge  21 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 20 15) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u254(11){ }u255(13){ }u256(25){ }u257(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [100.0%]  (fallthru,dfs_back)
;; Pred edge  15 [100.0%] 
(code_label 180 178 181 21 81 "" [1 uses])

(note 181 180 183 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 183 181 184 21 arch/arm/mm/init.c:266 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 142 [ reg ])
            (reg/f:SI 141 [ D.25929 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 184 183 185 21 arch/arm/mm/init.c:266 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 182)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 21 -> ( 16 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160


;; Succ edge  16 [91.0%] 
;; Succ edge  22 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u261(11){ }u262(13){ }u263(25){ }u264(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 147 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 222 223 224 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 147 160
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 222 223 224 225
;; live  kill	 14 [lr]

;; Pred edge  21 [9.0%]  (fallthru,loop_exit)
(note 185 184 186 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 186 185 187 22 NOTE_INSN_DELETED)

(note 187 186 190 22 NOTE_INSN_DELETED)

(insn 190 187 188 22 arch/arm/mm/init.c:295 (set (reg:SI 2 r2)
        (reg/v:SI 160 [ min ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 160 [ min ])
        (nil)))

(insn 188 190 189 22 arch/arm/mm/init.c:295 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 191 22 arch/arm/mm/init.c:295 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 191 189 192 22 arch/arm/mm/init.c:295 (set (reg:SI 3 r3)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(call_insn 192 191 193 22 arch/arm/mm/init.c:295 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_area_init_node") [flags 0x41] <function_decl 0x111d5700 free_area_init_node>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 193 192 196 22 arch/arm/mm/init.c:405 (set (reg/f:SI 222)
        (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x110aee40 high_memory>)) 167 {*arm_movsi_insn} (nil))

(insn 196 193 194 22 arch/arm/mm/init.c:415 (set (reg/f:SI 224)
        (symbol_ref:SI ("max_low_pfn") [flags 0xc0] <var_decl 0x1108fa20 max_low_pfn>)) 167 {*arm_movsi_insn} (nil))

(insn 194 196 198 22 arch/arm/mm/init.c:405 (set (reg:SI 223)
        (plus:SI (reg:SI 147 [ D.25908 ])
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 147 [ D.25908 ])
        (nil)))

(insn 198 194 195 22 arch/arm/mm/init.c:416 (set (reg/f:SI 225)
        (symbol_ref:SI ("max_pfn") [flags 0xc0] <var_decl 0x1108fae0 max_pfn>)) 167 {*arm_movsi_insn} (nil))

(insn 195 198 197 22 arch/arm/mm/init.c:405 (set (mem/f/c/i:SI (reg/f:SI 222) [0 high_memory+0 S4 A32])
        (reg:SI 223)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 223)
        (expr_list:REG_DEAD (reg/f:SI 222)
            (nil))))

(insn 197 195 199 22 arch/arm/mm/init.c:415 (set (mem/c/i:SI (reg/f:SI 224) [0 max_low_pfn+0 S4 A32])
        (reg/v:SI 135 [ max_low.852 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 224)
        (expr_list:REG_DEAD (reg/v:SI 135 [ max_low.852 ])
            (nil))))

(insn 199 197 220 22 arch/arm/mm/init.c:416 (set (mem/c/i:SI (reg/f:SI 225) [0 max_pfn+0 S4 A32])
        (reg/v:SI 136 [ max_high.851 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 225)
        (expr_list:REG_DEAD (reg/v:SI 136 [ max_high.851 ])
            (nil))))
;; End of basic block 22 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 220 199 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_memblock_init (arm_memblock_init)[0:1353] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 4 from 34 to 36 -- before reload
;;   ======================================================

changing bb of uid 25
  from 3 to 4
;;	  0-->    25 r135=r143+r136                    :cortex_a8_default
;;	  0-->    34 r151=[r143]                       :cortex_a8_load_store_1
changing bb of uid 30
  from 3 to 4
;;	  1-->    30 r136=r136+0xc                     :cortex_a8_default
;;	  2-->    35 cc=cmp(r137,r151)                 :cortex_a8_default
changing bb of uid 29
  from 3 to 4
;;	  2-->    29 r137=r137+0x1                     :cortex_a8_default
;;	  4-->    36 pc={(cc<0x0)?L33:pc}              :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 34
;;   new tail = 36

;;   ======================================================
;;   -- basic block 3 from 26 to 28 -- before reload
;;   ======================================================

;;	  0-->    27 r1=[r135+0x8]                     :cortex_a8_load_store_1
;;	  1-->    26 r0=[r135+0x4]                     :cortex_a8_load_store_1
;;	  2-->    28 r0=call [`memblock_add']          :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 26
;;   new tail = 28

;;   ======================================================
;;   -- basic block 2 from 2 to 140 -- before reload
;;   ======================================================

;;	  0-->     7 r145=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  0-->    12 r150=0x0                          :cortex_a8_default
;;	  1-->     2 r143=r0                           :cortex_a8_default
;;	  1-->     3 r144=r1                           :cortex_a8_default
;;	  2-->    20 r136=r150                         :cortex_a8_default
;;	  2-->    14 r0=r145+0x8                       :cortex_a8_default
;;	  3-->    15 r1=[r145+0x4]                     :cortex_a8_load_store_1
;;	  3-->    16 r2=0xc                            :cortex_a8_default
;;	  4-->    17 r3=`meminfo_cmp'                  :cortex_a8_load_store_1
;;	  4-->    21 r137=r136                         :cortex_a8_default
;;	  5-->    13 [sp]=r150                         :cortex_a8_load_store_1
;;	  5-->    18 call [`sort']                     :cortex_a8_issue_branch
;;	  6-->    19 call [`memblock_init']            :cortex_a8_issue_branch
;;	  6-->   140 pc=L31                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 6
;;   new head = 2
;;   new tail = 140

;;   ======================================================
;;   -- basic block 5 from 39 to 48 -- before reload
;;   ======================================================

;;	  0-->    40 r155=`_stext'                     :cortex_a8_load_store_1
;;	  1-->    39 r154=`_end'                       :cortex_a8_load_store_1
;;	  2-->    45 r156=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  2-->    42 r0=r155+0x40000000                :cortex_a8_default
;;	  3-->    43 r1=r154-r155                      :cortex_a8_default
;;	  4-->    44 r0=call [`memblock_reserve']      :cortex_a8_issue_branch
;;	  5-->    46 r142=[r156+0x4]                   :cortex_a8_load_store_1
;;	  7-->    47 cc=cmp(r142,0x0)                  :cortex_a8_default
;;	  9-->    48 pc={(cc==0x0)?L71:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 9
;;   new head = 39
;;   new tail = 48

;;   ======================================================
;;   -- basic block 6 from 51 to 56 -- before reload
;;   ======================================================

;;	  0-->    52 r1=r142                           :cortex_a8_default
;;	  0-->    51 r0=[r156]                         :cortex_a8_load_store_1
;;	  1-->    53 r0=call [`memblock_is_region_memor:cortex_a8_issue_branch
;;	 33-->    55 {cc=cmp(r0,0x0);r141=r0;}         :cortex_a8_default
;;	 35-->    56 pc={(cc!=0x0)?L71:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 51
;;   new tail = 56

;;   ======================================================
;;   -- basic block 7 from 61 to 70 -- before reload
;;   ======================================================

;;	  0-->    61 r0=`*.LC9'                        :cortex_a8_load_store_1
;;	  1-->    62 r1=[r156]                         :cortex_a8_load_store_1
;;	  2-->    63 r2=[r156+0x4]                     :cortex_a8_load_store_1
;;	  3-->    64 r0=call [`printk']                :cortex_a8_issue_branch
;;	  3-->    70 [r156]=r141                       :cortex_a8_load_store_1
;;	  4-->    67 [r156+0x4]=r141                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 4
;;   new head = 61
;;   new tail = 70

;;   ======================================================
;;   -- basic block 8 from 73 to 76 -- before reload
;;   ======================================================

;;	  0-->    73 r165=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->    74 r134=[r165+0x4]                   :cortex_a8_load_store_1
;;	  5-->    75 cc=cmp(r134,0x0)                  :cortex_a8_default
;;	  7-->    76 pc={(cc==0x0)?L99:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 73
;;   new tail = 76

;;   ======================================================
;;   -- basic block 9 from 79 to 84 -- before reload
;;   ======================================================

;;	  0-->    80 r1=r134                           :cortex_a8_default
;;	  0-->    79 r0=[r165]                         :cortex_a8_load_store_1
;;	  1-->    81 r0=call [`memblock_is_region_reser:cortex_a8_issue_branch
;;	 33-->    83 cc=cmp(r0,0x0)                    :cortex_a8_default
;;	 35-->    84 pc={(cc==0x0)?L99:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 35
;;   new head = 79
;;   new tail = 84

;;   ======================================================
;;   -- basic block 10 from 89 to 98 -- before reload
;;   ======================================================

;;	  0-->    89 r0=`*.LC10'                       :cortex_a8_load_store_1
;;	  1-->    90 r1=[r165]                         :cortex_a8_load_store_1
;;	  2-->    91 r2=[r165+0x4]                     :cortex_a8_load_store_1
;;	  3-->    92 r0=call [`printk']                :cortex_a8_issue_branch
;;	  3-->    94 r171=0x0                          :cortex_a8_default
;;	  4-->    98 [r165]=r171                       :cortex_a8_load_store_1
;;	  5-->    95 [r165+0x4]=r171                   :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 5
;;   new head = 89
;;   new tail = 98

;;   ======================================================
;;   -- basic block 11 from 101 to 104 -- before reload
;;   ======================================================

;;	  0-->   101 r174=`*.LANCHOR0'                 :cortex_a8_load_store_1
;;	  3-->   102 r133=[r174+0x4]                   :cortex_a8_load_store_1
;;	  5-->   103 cc=cmp(r133,0x0)                  :cortex_a8_default
;;	  7-->   104 pc={(cc==0x0)?L120:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 7
;;   new head = 101
;;   new tail = 104

;;   ======================================================
;;   -- basic block 12 from 107 to 119 -- before reload
;;   ======================================================

;;	  0-->   108 r1=r133                           :cortex_a8_default
;;	  0-->   107 r0=[r174]                         :cortex_a8_load_store_1
;;	  1-->   109 r0=call [`memblock_reserve']      :cortex_a8_issue_branch
;;	  1-->   111 r177=[r174]                       :cortex_a8_load_store_1
;;	  2-->   113 r178=`initrd_start'               :cortex_a8_load_store_1
;;	  3-->   115 r179=`initrd_end'                 :cortex_a8_load_store_1
;;	  3-->   112 r139=r177-0x40000000              :cortex_a8_default
;;	  4-->   117 r181=[r174+0x4]                   :cortex_a8_load_store_1
;;	  5-->   114 [r178]=r139                       :cortex_a8_load_store_1
;;	  6-->   118 r182=r139+r181                    :cortex_a8_default
;;	  6-->   119 [r179]=r182                       :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 6
;;   new head = 107
;;   new tail = 119

;;   ======================================================
;;   -- basic block 13 from 122 to 125 -- before reload
;;   ======================================================

;;	  0-->   122 call [`arm_mm_memblock_reserve']  :cortex_a8_issue_branch
;;	  0-->   123 r138=[r144+0x24]                  :cortex_a8_load_store_1
;;	  2-->   124 cc=cmp(r138,0x0)                  :cortex_a8_default
;;	  4-->   125 pc={(cc==0x0)?L128:pc}            :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 122
;;   new tail = 125

;;   ======================================================
;;   -- basic block 14 from 127 to 127 -- before reload
;;   ======================================================

;;	  0-->   127 call [r138]                       :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 0
;;   new head = 127
;;   new tail = 127

;;   ======================================================
;;   -- basic block 15 from 130 to 131 -- before reload
;;   ======================================================

;;	  0-->   130 call [`memblock_analyze']         :cortex_a8_issue_branch
;;	  1-->   131 call [`memblock_dump_all']        :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 130
;;   new tail = 131


;; Procedure interblock/speculative motions == 3/3 




arm_memblock_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={22d,12u} r1={22d,9u} r2={17d,3u} r3={15d,1u} r11={1d,15u} r12={14d} r13={1d,29u} r14={13d,1u} r15={13d} r16={13d} r17={13d} r18={13d} r19={13d} r20={13d} r21={13d} r22={13d} r23={13d} r24={20d,7u} r25={1d,15u} r26={1d,14u} r27={13d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={13d} r38={13d} r39={13d} r40={13d} r41={13d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} r81={13d} r82={13d} r83={13d} r84={13d} r85={13d} r86={13d} r87={13d} r88={13d} r89={13d} r90={13d} r91={13d} r92={13d} r93={13d} r94={13d} r95={13d} r96={13d} r97={13d} r98={13d} r99={13d} r100={13d} r101={13d} r102={13d} r103={13d} r104={13d} r105={13d} r106={13d} r107={13d} r108={13d} r109={13d} r110={13d} r111={13d} r112={13d} r113={13d} r114={13d} r115={13d} r116={13d} r117={13d} r118={13d} r119={13d} r120={13d} r121={13d} r122={13d} r123={13d} r124={13d} r125={13d} r126={13d} r127={13d} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={2d,3u} r137={2d,2u} r138={1d,2u} r139={1d,2u} r141={1d,2u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,2u} r150={1d,2u} r151={1d,1u} r154={1d,1u} r155={1d,2u} r156={1d,6u} r165={1d,6u} r171={1d,2u} r174={1d,4u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r181={1d,1u} r182={1d,1u} 
;;    total ref usage 1743{1584d,159u,0e} in 81{68 regular + 13 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 143 144 145 150
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 137 143 144 145 150
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 12 2 arch/arm/mm/init.c:332 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 7 2 2 arch/arm/mm/init.c:332 (set (reg:SI 150)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 2 12 3 2 arch/arm/mm/init.c:329 (set (reg/v/f:SI 143 [ mi ])
        (reg:SI 0 r0 [ mi ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mi ])
        (nil)))

(insn 3 2 20 2 arch/arm/mm/init.c:329 (set (reg/v/f:SI 144 [ mdesc ])
        (reg:SI 1 r1 [ mdesc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ mdesc ])
        (nil)))

(insn 20 3 14 2 arch/arm/mm/init.c:334 (set (reg:SI 136 [ ivtmp.885 ])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 14 20 15 2 arch/arm/mm/init.c:332 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 145)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 8 [0x8])))
        (nil)))

(insn 15 14 16 2 arch/arm/mm/init.c:332 (set (reg:SI 1 r1)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 145)
                (const_int 4 [0x4])) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 4 [0x4]))) [0 meminfo.nr_banks+0 S4 A32])
            (nil))))

(insn 16 15 17 2 arch/arm/mm/init.c:332 (set (reg:SI 2 r2)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 21 2 arch/arm/mm/init.c:332 (set (reg:SI 3 r3)
        (symbol_ref:SI ("meminfo_cmp") [flags 0x3] <function_decl 0x115b7c80 meminfo_cmp>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("meminfo_cmp") [flags 0x3] <function_decl 0x115b7c80 meminfo_cmp>)
        (nil)))

(insn 21 17 13 2 arch/arm/mm/init.c:335 (set (reg/v:SI 137 [ i ])
        (reg:SI 136 [ ivtmp.885 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 13 21 18 2 arch/arm/mm/init.c:332 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 18 13 19 2 arch/arm/mm/init.c:332 (parallel [
            (call (mem:SI (symbol_ref:SI ("sort") [flags 0x41] <function_decl 0x11402380 sort>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(call_insn 19 18 140 2 arch/arm/mm/init.c:334 (parallel [
            (call (mem:SI (symbol_ref:SI ("memblock_init") [flags 0x41] <function_decl 0x113f7480 memblock_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 140 19 141 2 arch/arm/mm/init.c:335 (set (pc)
        (label_ref 31)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144


;; Succ edge  4 [100.0%] 

(barrier 141 140 33)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 143 144
;; live  gen 	 0 [r0] 1 [r1] 135 136 137
;; live  kill	 14 [lr]

;; Pred edge  4 [88.9%] 
(code_label 33 141 24 3 90 "" [1 uses])

(note 24 33 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 27 24 26 3 arch/arm/mm/init.c:336 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26496 ])
                (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ D.26496 ])
        (nil)))

(insn 26 27 28 3 arch/arm/mm/init.c:336 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26496 ])
                (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 26 31 3 arch/arm/mm/init.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_add") [flags 0x41] <function_decl 0x113f7580 memblock_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 143
;; lr  def 	 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; live  gen 	 24 [cc] 151
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 31 28 32 4 89 "" [1 uses])

(note 32 31 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 25 32 34 4 arch/arm/mm/init.c:328 (set (reg/f:SI 135 [ D.26496 ])
        (plus:SI (reg/v/f:SI 143 [ mi ])
            (reg:SI 136 [ ivtmp.885 ]))) 4 {*arm_addsi3} (nil))

(insn 34 25 30 4 arch/arm/mm/init.c:335 (set (reg:SI 151 [ <variable>.nr_banks ])
        (mem/s/j:SI (reg/v/f:SI 143 [ mi ]) [0 <variable>.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 34 35 4 arch/arm/mm/init.c:335 discrim 2 (set (reg:SI 136 [ ivtmp.885 ])
        (plus:SI (reg:SI 136 [ ivtmp.885 ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 35 30 29 4 arch/arm/mm/init.c:335 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ i ])
            (reg:SI 151 [ <variable>.nr_banks ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.nr_banks ])
        (nil)))

(insn 29 35 36 4 arch/arm/mm/init.c:335 discrim 2 (set (reg/v:SI 137 [ i ])
        (plus:SI (reg/v:SI 137 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 36 29 37 4 arch/arm/mm/init.c:335 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8889 [0x22b9])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144


;; Succ edge  3 [88.9%] 
;; Succ edge  5 [11.1%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 154 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 142 154 155 156
;; live  kill	 14 [lr]

;; Pred edge  4 [11.1%]  (fallthru,loop_exit)
(note 37 36 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 41 37 40 5 NOTE_INSN_DELETED)

(insn 40 41 39 5 arch/arm/mm/init.c:342 (set (reg/f:SI 155)
        (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x113f9720 _stext>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x113f9720 _stext>)
        (nil)))

(insn 39 40 45 5 arch/arm/mm/init.c:342 (set (reg/f:SI 154)
        (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x11478300 _end>)) 167 {*arm_movsi_insn} (nil))

(insn 45 39 42 5 arch/arm/mm/init.c:345 (set (reg/f:SI 156)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 42 45 43 5 arch/arm/mm/init.c:342 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 155)
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x113f9720 _stext>)
                (const_int 1073741824 [0x40000000])))
        (nil)))

(insn 43 42 44 5 arch/arm/mm/init.c:342 (set (reg:SI 1 r1)
        (minus:SI (reg/f:SI 154)
            (reg/f:SI 155))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_DEAD (reg/f:SI 154)
            (nil))))

(call_insn 44 43 46 5 arch/arm/mm/init.c:342 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_reserve") [flags 0x41] <function_decl 0x113f7700 memblock_reserve>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 46 44 47 5 arch/arm/mm/init.c:345 (set (reg:SI 142 [ phys_initrd_size.365 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
        (nil)))

(insn 47 46 48 5 arch/arm/mm/init.c:345 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ phys_initrd_size.365 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 48 47 49 5 arch/arm/mm/init.c:345 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 156


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 156
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 141
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 49 48 54 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 54 49 52 6 NOTE_INSN_DELETED)

(insn 52 54 51 6 arch/arm/mm/init.c:346 (set (reg:SI 1 r1)
        (reg:SI 142 [ phys_initrd_size.365 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ phys_initrd_size.365 ])
        (nil)))

(insn 51 52 53 6 arch/arm/mm/init.c:346 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 156) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(call_insn 53 51 55 6 arch/arm/mm/init.c:346 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_is_region_memory") [flags 0x41] <function_decl 0x113f7c00 memblock_is_region_memory>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 55 53 56 6 arch/arm/mm/init.c:345 discrim 1 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 141 [ D.25190 ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 56 55 57 6 arch/arm/mm/init.c:345 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 156


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  8 [100.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 156
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  6 [0.0%]  (fallthru)
(note 57 56 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 61 57 62 7 arch/arm/mm/init.c:347 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11160a80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11160a80>)
        (nil)))

(insn 62 61 63 7 arch/arm/mm/init.c:347 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 156) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(insn 63 62 64 7 arch/arm/mm/init.c:347 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
        (nil)))

(call_insn 64 63 70 7 arch/arm/mm/init.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 70 64 67 7 arch/arm/mm/init.c:349 (set (mem/c/i:SI (reg/f:SI 156) [0 phys_initrd_start+0 S4 A32])
        (reg:SI 141 [ D.25190 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_DEAD (reg:SI 141 [ D.25190 ])
            (nil))))

(insn 67 70 71 7 arch/arm/mm/init.c:349 (set (mem/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])
        (reg:SI 141 [ D.25190 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 24 [cc] 134 165
;; live  kill	

;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 71 67 72 8 91 "" [2 uses])

(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 8 arch/arm/mm/init.c:351 (set (reg/f:SI 165)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 8 arch/arm/mm/init.c:351 (set (reg:SI 134 [ phys_initrd_size.892 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 165)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
        (nil)))

(insn 75 74 76 8 arch/arm/mm/init.c:351 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ phys_initrd_size.892 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 76 75 77 8 arch/arm/mm/init.c:351 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 165


;; Succ edge  9 [29.0%]  (fallthru)
;; Succ edge  11 [71.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 165
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 165
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  8 [29.0%]  (fallthru)
(note 77 76 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 82 77 80 9 NOTE_INSN_DELETED)

(insn 80 82 79 9 arch/arm/mm/init.c:352 (set (reg:SI 1 r1)
        (reg:SI 134 [ phys_initrd_size.892 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ phys_initrd_size.892 ])
        (nil)))

(insn 79 80 81 9 arch/arm/mm/init.c:352 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 165) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(call_insn 81 79 83 9 arch/arm/mm/init.c:352 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_is_region_reserved") [flags 0x41] <function_decl 0x113f7d00 memblock_is_region_reserved>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 83 81 84 9 arch/arm/mm/init.c:351 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 84 83 85 9 arch/arm/mm/init.c:351 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 165


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 165
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 171
;; live  kill	 14 [lr]

;; Pred edge  9 [0.0%]  (fallthru)
(note 85 84 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 89 85 90 10 arch/arm/mm/init.c:353 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1174ae00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1174ae00>)
        (nil)))

(insn 90 89 91 10 arch/arm/mm/init.c:353 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 165) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(insn 91 90 92 10 arch/arm/mm/init.c:353 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 165)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
        (nil)))

(call_insn 92 91 94 10 arch/arm/mm/init.c:353 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 94 92 98 10 arch/arm/mm/init.c:355 (set (reg:SI 171)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 98 94 95 10 arch/arm/mm/init.c:355 (set (mem/c/i:SI (reg/f:SI 165) [0 phys_initrd_start+0 S4 A32])
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg/f:SI 165)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 95 98 99 10 arch/arm/mm/init.c:355 (set (mem/c/i:SI (plus:SI (reg/f:SI 165)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 8 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 24 [cc] 133 174
;; live  kill	

;; Pred edge  8 [71.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 99 95 100 11 92 "" [2 uses])

(note 100 99 101 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 11 arch/arm/mm/init.c:357 (set (reg/f:SI 174)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 11 arch/arm/mm/init.c:357 (set (reg:SI 133 [ phys_initrd_size.896 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 174)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
        (nil)))

(insn 103 102 104 11 arch/arm/mm/init.c:357 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ phys_initrd_size.896 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 105 11 arch/arm/mm/init.c:357 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 174


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  13 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 174
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 177 178 179 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 174
;; live  gen 	 0 [r0] 1 [r1] 139 177 178 179 181 182
;; live  kill	 14 [lr]

;; Pred edge  11 [29.0%]  (fallthru)
(note 105 104 108 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 108 105 107 12 arch/arm/mm/init.c:358 (set (reg:SI 1 r1)
        (reg:SI 133 [ phys_initrd_size.896 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ phys_initrd_size.896 ])
        (nil)))

(insn 107 108 109 12 arch/arm/mm/init.c:358 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 174) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(call_insn 109 107 111 12 arch/arm/mm/init.c:358 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_reserve") [flags 0x41] <function_decl 0x113f7700 memblock_reserve>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 111 109 113 12 arch/arm/mm/init.c:361 (set (reg:SI 177 [ phys_initrd_start ])
        (mem/c/i:SI (reg/f:SI 174) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(insn 113 111 115 12 arch/arm/mm/init.c:361 (set (reg/f:SI 178)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x111e8b40 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 115 113 112 12 arch/arm/mm/init.c:362 (set (reg/f:SI 179)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x111e8ba0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 112 115 117 12 arch/arm/mm/init.c:361 (set (reg:SI 139 [ initrd_start.367 ])
        (plus:SI (reg:SI 177 [ phys_initrd_start ])
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 177 [ phys_initrd_start ])
        (nil)))

(insn 117 112 114 12 arch/arm/mm/init.c:362 (set (reg:SI 181 [ phys_initrd_size ])
        (mem/c/i:SI (plus:SI (reg/f:SI 174)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 174)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
            (nil))))

(insn 114 117 118 12 arch/arm/mm/init.c:361 (set (mem/c/i:SI (reg/f:SI 178) [0 initrd_start+0 S4 A32])
        (reg:SI 139 [ initrd_start.367 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 178)
        (nil)))

(insn 118 114 119 12 arch/arm/mm/init.c:362 (set (reg:SI 182)
        (plus:SI (reg:SI 139 [ initrd_start.367 ])
            (reg:SI 181 [ phys_initrd_size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 181 [ phys_initrd_size ])
        (expr_list:REG_DEAD (reg:SI 139 [ initrd_start.367 ])
            (nil))))

(insn 119 118 120 12 arch/arm/mm/init.c:362 (set (mem/c/i:SI (reg/f:SI 179) [0 initrd_end+0 S4 A32])
        (reg:SI 182)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_DEAD (reg/f:SI 179)
            (nil))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 24 [cc] 138
;; live  kill	 14 [lr]

;; Pred edge  11 [71.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 120 119 121 13 93 "" [1 uses])

(note 121 120 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(call_insn 122 121 123 13 arch/arm/mm/init.c:366 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_mm_memblock_reserve") [flags 0x41] <function_decl 0x115b7280 arm_mm_memblock_reserve>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 123 122 124 13 arch/arm/mm/init.c:370 (set (reg/f:SI 138 [ D.25203 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 144 [ mdesc ])
                (const_int 36 [0x24])) [0 <variable>.reserve+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ mdesc ])
        (nil)))

(insn 124 123 125 13 arch/arm/mm/init.c:370 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ D.25203 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 125 124 126 13 arch/arm/mm/init.c:370 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138


;; Succ edge  14 [78.3%]  (fallthru)
;; Succ edge  15 [21.6%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u145(11){ }u146(13){ }u147(25){ }u148(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  13 [78.3%]  (fallthru)
(note 126 125 127 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(call_insn 127 126 128 14 arch/arm/mm/init.c:371 (parallel [
            (call (mem:SI (reg/f:SI 138 [ D.25203 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 138 [ D.25203 ])
        (nil))
    (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  13 [21.6%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 128 127 129 15 94 "" [1 uses])

(note 129 128 130 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(call_insn 130 129 131 15 arch/arm/mm/init.c:373 (parallel [
            (call (mem:SI (symbol_ref:SI ("memblock_analyze") [flags 0x41] <function_decl 0x113f7500 memblock_analyze>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn/j 131 130 132 15 arch/arm/mm/init.c:374 (parallel [
            (call (mem:SI (symbol_ref:SI ("memblock_dump_all") [flags 0x41] <function_decl 0x113f7d80 memblock_dump_all>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 132 131 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function pfn_valid (pfn_valid)[0:1350]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 7 to 8 -- before reload
;;   ======================================================

;;	  0-->     7 r0=r0<<0xc                        :cortex_a8_default
;;	  1-->     8 r0=call [`memblock_is_memory']    :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 1
;;   new head = 7
;;   new tail = 8


;; Procedure interblock/speculative motions == 0/0 




pfn_valid

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 139{127d,12u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 3 7 2 NOTE_INSN_DELETED)

(insn 7 6 8 2 arch/arm/mm/init.c:301 (set (reg:SI 0 r0)
        (ashift:SI (reg:SI 0 r0 [ pfn ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(call_insn/j 8 7 9 2 arch/arm/mm/init.c:301 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_is_memory") [flags 0x41] <function_decl 0x113f7b80 memblock_is_memory>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 9 8 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_mem (show_mem)[0:1346]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;;   ======================================================
;;   -- basic block 2 from 2 to 151 -- before reload
;;   ======================================================

;;	  0-->     2 r157=r0                           :cortex_a8_default
;;	  0-->     7 r0=`*.LC11'                       :cortex_a8_load_store_1
;;	  1-->     8 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->     9 r0=r157                           :cortex_a8_default
;;	  2-->    10 call [`show_free_areas']          :cortex_a8_issue_branch
;;	  2-->   150 r180=`*.LANCHOR1'                 :cortex_a8_load_store_1
;;	  3-->    13 r160=`mem_map'                    :cortex_a8_load_store_1
;;	  3-->    15 r136=0x0                          :cortex_a8_default
;;	  4-->    16 r148=r136                         :cortex_a8_default
;;	  4-->    17 r149=r136                         :cortex_a8_default
;;	  5-->    12 r154=[++r180]                     :cortex_a8_load_store_1
;;	  5-->    18 r150=r136                         :cortex_a8_default
;;	  6-->    14 r155=[r160]                       :cortex_a8_load_store_1
;;	  6-->    19 r151=r136                         :cortex_a8_default
;;	  7-->    20 r152=r136                         :cortex_a8_default
;;	  7-->    21 r153=r136                         :cortex_a8_default
;;	  8-->   151 pc=L109                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 8
;;   new head = 2
;;   new tail = 151

;;   ======================================================
;;   -- basic block 3 from 27 to 36 -- before reload
;;   ======================================================

;;	  0-->    27 r135=r180+r136                    :cortex_a8_default
;;	  2-->    32 r166=[r135+0x8]                   :cortex_a8_load_store_1
;;	  3-->    28 r156=[r135+0x4]                   :cortex_a8_load_store_1
;;	  5-->    33 r165=r156+r166                    :cortex_a8_default
;;	  6-->    29 r163=r156 0>>0xc                  :cortex_a8_default
;;	  7-->    34 r167=r165 0>>0xc                  :cortex_a8_default
;;	  8-->    31 r147=r163*0x20+r155               :cortex_a8_default
;;	  9-->    36 r146=r167*0x20+r155               :cortex_a8_default
;;	Ready list (final):  
;;   total time = 9
;;   new head = 27
;;   new tail = 36

;;   ======================================================
;;   -- basic block 4 from 38 to 43 -- before reload
;;   ======================================================

;;	  0-->    40 r145=[r147]                       :cortex_a8_load_store_1
;;	  0-->    38 r152=r152+0x1                     :cortex_a8_default
;;	  2-->    42 cc=cmp(zxt(r145,0x1,0xa),0x0)     :cortex_a8_default
;;	  4-->    43 pc={(cc==0x0)?L48:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 38
;;   new tail = 43

;;   ======================================================
;;   -- basic block 5 from 45 to 153 -- before reload
;;   ======================================================

;;	  0-->    45 r151=r151+0x1                     :cortex_a8_default
;;	  0-->   153 pc=L100                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 45
;;   new tail = 153

;;   ======================================================
;;   -- basic block 6 from 50 to 53 -- before reload
;;   ======================================================

;;	  0-->    50 r143=[r147]                       :cortex_a8_load_store_1
;;	  2-->    52 cc=cmp(zxt(r143,0x1,0x7),0x0)     :cortex_a8_default
;;	  4-->    53 pc={(cc==0x0)?L58:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 50
;;   new tail = 53

;;   ======================================================
;;   -- basic block 7 from 55 to 155 -- before reload
;;   ======================================================

;;	  0-->    55 r149=r149+0x1                     :cortex_a8_default
;;	  0-->   155 pc=L100                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 55
;;   new tail = 155

;;   ======================================================
;;   -- basic block 8 from 60 to 63 -- before reload
;;   ======================================================

;;	  0-->    60 r141=[r147]                       :cortex_a8_load_store_1
;;	  2-->    62 cc=cmp(zxt(r141,0x1,0xf),0x0)     :cortex_a8_default
;;	  4-->    63 pc={(cc!=0x0)?L68:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 60
;;   new tail = 63

;;   ======================================================
;;   -- basic block 9 from 65 to 157 -- before reload
;;   ======================================================

;;	  0-->    65 r134=r147                         :cortex_a8_default
;;	  0-->   157 pc=L71                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 65
;;   new tail = 157

;;   ======================================================
;;   -- basic block 10 from 70 to 70 -- before reload
;;   ======================================================

;;	  0-->    70 r134=[r147+0x1c]                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 70
;;   new tail = 70

;;   ======================================================
;;   -- basic block 11 from 74 to 76 -- before reload
;;   ======================================================

;;	  0-->    74 r142=[r134+0x10]                  :cortex_a8_load_store_1
;;	  2-->    75 cc=cmp(r142,0x0)                  :cortex_a8_default
;;	  4-->    76 pc={(cc!=0x0)?L81:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 74
;;   new tail = 76

;;   ======================================================
;;   -- basic block 12 from 78 to 159 -- before reload
;;   ======================================================

;;	  0-->    78 r153=r153+0x1                     :cortex_a8_default
;;	  0-->   159 pc=L100                           :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 78
;;   new tail = 159

;;   ======================================================
;;   -- basic block 13 from 83 to 86 -- before reload
;;   ======================================================

;;	  0-->    83 r138=[r147]                       :cortex_a8_load_store_1
;;	  2-->    85 cc=cmp(zxt(r138,0x1,0xf),0x0)     :cortex_a8_default
;;	  4-->    86 pc={(cc!=0x0)?L91:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 4
;;   new head = 83
;;   new tail = 86

;;   ======================================================
;;   -- basic block 14 from 88 to 161 -- before reload
;;   ======================================================

;;	  0-->    88 r133=r147                         :cortex_a8_default
;;	  0-->   161 pc=L94                            :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 88
;;   new tail = 161

;;   ======================================================
;;   -- basic block 15 from 93 to 93 -- before reload
;;   ======================================================

;;	  0-->    93 r133=[r147+0x1c]                  :cortex_a8_load_store_1
;;	Ready list (final):  
;;   total time = 0
;;   new head = 93
;;   new tail = 93

;;   ======================================================
;;   -- basic block 16 from 97 to 99 -- before reload
;;   ======================================================

;;	  0-->    97 r139=[r133+0x10]                  :cortex_a8_load_store_1
;;	  2-->    98 r173=r139-0x1                     :cortex_a8_default
;;	  3-->    99 r150=r150+r173                    :cortex_a8_default
;;	Ready list (final):  
;;   total time = 3
;;   new head = 97
;;   new tail = 99

;;   ======================================================
;;   -- basic block 17 from 102 to 105 -- before reload
;;   ======================================================

;;	  0-->   102 r147=r147+0x20                    :cortex_a8_default
;;	  1-->   104 cc=cmp(r147,r146)                 :cortex_a8_default
;;	  3-->   105 pc={(ltu(cc,0x0))?L103:pc}        :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 3
;;   new head = 102
;;   new tail = 105

;;   ======================================================
;;   -- basic block 18 from 107 to 108 -- before reload
;;   ======================================================

;;	  0-->   107 r148=r148+0x1                     :cortex_a8_default
;;	  0-->   108 r136=r136+0xc                     :cortex_a8_default
;;	Ready list (final):  
;;   total time = 0
;;   new head = 107
;;   new tail = 108

;;   ======================================================
;;   -- basic block 19 from 112 to 113 -- before reload
;;   ======================================================

;;	  0-->   112 cc=cmp(r148,r154)                 :cortex_a8_default
;;	  2-->   113 pc={(cc<0x0)?L111:pc}             :cortex_a8_branch
;;	Ready list (final):  
;;   total time = 2
;;   new head = 112
;;   new tail = 113

;;   ======================================================
;;   -- basic block 20 from 116 to 138 -- before reload
;;   ======================================================

;;	  0-->   117 r1=r152                           :cortex_a8_default
;;	  0-->   116 r0=`*.LC12'                       :cortex_a8_load_store_1
;;	  1-->   118 r0=call [`printk']                :cortex_a8_issue_branch
;;	  1-->   121 r1=r153                           :cortex_a8_default
;;	  2-->   120 r0=`*.LC13'                       :cortex_a8_load_store_1
;;	  3-->   122 r0=call [`printk']                :cortex_a8_issue_branch
;;	  3-->   125 r1=r151                           :cortex_a8_default
;;	  4-->   124 r0=`*.LC14'                       :cortex_a8_load_store_1
;;	  5-->   126 r0=call [`printk']                :cortex_a8_issue_branch
;;	  5-->   129 r1=r149                           :cortex_a8_default
;;	  6-->   128 r0=`*.LC15'                       :cortex_a8_load_store_1
;;	  7-->   130 r0=call [`printk']                :cortex_a8_issue_branch
;;	  7-->   133 r1=r150                           :cortex_a8_default
;;	  8-->   132 r0=`*.LC16'                       :cortex_a8_load_store_1
;;	  9-->   134 r0=call [`printk']                :cortex_a8_issue_branch
;;	  9-->   136 r0=`*.LC17'                       :cortex_a8_load_store_1
;;	 10-->   137 r1=0x0                            :cortex_a8_default
;;	 11-->   138 r0=call [`printk']                :cortex_a8_issue_branch
;;	Ready list (final):  
;;   total time = 11
;;   new head = 116
;;   new tail = 138


;; Procedure interblock/speculative motions == 0/0 




show_mem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,9u} r1={15d,6u} r2={9d} r3={9d} r11={1d,20u} r12={9d} r13={1d,28u} r14={8d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={15d,7u} r25={1d,20u} r26={1d,19u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r133={2d,1u} r134={2d,1u} r135={1d,2u} r136={2d,8u,1d} r138={1d,1u} r139={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r145={1d,1u} r146={1d,1u} r147={2d,10u} r148={2d,2u} r149={2d,2u} r150={2d,2u} r151={2d,2u} r152={2d,2u} r153={2d,2u} r154={1d,1u} r155={1d,2u} r156={1d,2u} r157={1d,1u} r160={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r173={1d,1u} r180={2d,2u} 
;;    total ref usage 1172{1006d,165u,1e} in 81{73 regular + 8 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 148 149 150 151 152 153 154 155 157 160 180
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 136 148 149 150 151 152 153 154 155 157 160 180
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 11 2 NOTE_INSN_FUNCTION_BEG)

(note 11 3 2 2 NOTE_INSN_DELETED)

(insn 2 11 7 2 arch/arm/mm/init.c:92 (set (reg/v:SI 157 [ filter ])
        (reg:SI 0 r0 [ filter ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ filter ])
        (nil)))

(insn 7 2 8 2 arch/arm/mm/init.c:97 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x11768f30>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x11768f30>)
        (nil)))

(call_insn 8 7 9 2 arch/arm/mm/init.c:97 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 10 2 arch/arm/mm/init.c:98 (set (reg:SI 0 r0)
        (reg/v:SI 157 [ filter ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 157 [ filter ])
        (nil)))

(call_insn 10 9 150 2 arch/arm/mm/init.c:98 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_free_areas") [flags 0x41] <function_decl 0x111b4600 show_free_areas>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 150 10 13 2 arch/arm/mm/init.c:100 discrim 1 (set (reg/f:SI 180)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 13 150 15 2 arch/arm/mm/init.c:108 (set (reg/f:SI 160)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 15 13 16 2 arch/arm/mm/init.c:108 (set (reg:SI 136 [ ivtmp.959 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/mm/init.c:100 (set (reg/v:SI 148 [ i ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 17 16 12 2 arch/arm/mm/init.c:94 (set (reg/v:SI 149 [ slab ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 12 17 18 2 arch/arm/mm/init.c:100 discrim 1 (set (reg:SI 154 [ D.25004 ])
        (mem/s/j/c:SI (pre_inc:SI (reg/f:SI 180)) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 180)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 4 [0x4]))) [0 meminfo.nr_banks+0 S4 A32])
            (nil))))

(insn 18 12 14 2 arch/arm/mm/init.c:94 (set (reg/v:SI 150 [ shared ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 14 18 19 2 arch/arm/mm/init.c:108 (set (reg/f:SI 155 [ mem_map.344 ])
        (mem/f/c/i:SI (reg/f:SI 160) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 160)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
            (nil))))

(insn 19 14 20 2 arch/arm/mm/init.c:93 (set (reg/v:SI 151 [ reserved ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 20 19 21 2 arch/arm/mm/init.c:93 (set (reg/v:SI 152 [ total ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 21 20 151 2 arch/arm/mm/init.c:93 (set (reg/v:SI 153 [ free ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 151 21 152 2 arch/arm/mm/init.c:100 (set (pc)
        (label_ref 109)) 242 {*arm_jump} (nil))
;; End of basic block 2 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180


;; Succ edge  19 [100.0%] 

(barrier 152 151 111)

;; Start of basic block ( 19) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 155 180
;; lr  def 	 135 146 147 156 163 165 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  gen 	 135 146 147 156 163 165 166 167
;; live  kill	

;; Pred edge  19 [91.0%] 
(code_label 111 152 24 3 111 "" [1 uses])

(note 24 111 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 30 24 35 3 NOTE_INSN_DELETED)

(note 35 30 27 3 NOTE_INSN_DELETED)

(insn 27 35 32 3 arch/arm/mm/init.c:91 (set (reg/f:SI 135 [ D.26570 ])
        (plus:SI (reg/f:SI 180)
            (reg:SI 136 [ ivtmp.959 ]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 136 [ ivtmp.959 ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))))
        (nil)))

(insn 32 27 28 3 arch/arm/mm/init.c:109 (set (reg:SI 166 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26570 ])
                (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ D.26570 ])
        (nil)))

(insn 28 32 33 3 arch/arm/mm/init.c:105 (set (reg:SI 156 [ D.24980 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26570 ])
                (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 28 29 3 arch/arm/mm/init.c:109 (set (reg:SI 165)
        (plus:SI (reg:SI 156 [ D.24980 ])
            (reg:SI 166 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 166 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 156 [ D.24980 ])
            (nil))))

(insn 29 33 34 3 arch/arm/mm/init.c:108 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 156 [ D.24980 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 34 29 31 3 arch/arm/mm/init.c:109 (set (reg:SI 167)
        (lshiftrt:SI (reg:SI 165)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 31 34 36 3 arch/arm/mm/init.c:108 (set (reg/v/f:SI 147 [ page ])
        (plus:SI (mult:SI (reg:SI 163)
                (const_int 32 [0x20]))
            (reg/f:SI 155 [ mem_map.344 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 36 31 103 3 arch/arm/mm/init.c:109 (set (reg/v/f:SI 146 [ end ])
        (plus:SI (mult:SI (reg:SI 167)
                (const_int 32 [0x20]))
            (reg/f:SI 155 [ mem_map.344 ]))) 270 {*arith_shiftsi} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 17) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; lr  def 	 24 [cc] 145 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 145 152
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  17 [86.0%]  (dfs_back)
(code_label 103 36 37 4 110 "" [1 uses])

(note 37 103 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 41 37 40 4 NOTE_INSN_DELETED)

(insn 40 41 38 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 145 [ D.25946 ])
        (mem/v:SI (reg/v/f:SI 147 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 40 42 4 arch/arm/mm/init.c:112 (set (reg/v:SI 152 [ total ])
        (plus:SI (reg/v:SI 152 [ total ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 42 38 43 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 145 [ D.25946 ])
                (const_int 1 [0x1])
                (const_int 10 [0xa]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 145 [ D.25946 ])
        (nil)))

(jump_insn 43 42 44 4 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 151
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 153 5 arch/arm/mm/init.c:114 (set (reg/v:SI 151 [ reserved ])
        (plus:SI (reg/v:SI 151 [ reserved ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 153 45 154 5 (set (pc)
        (label_ref 100)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  17 [100.0%] 

(barrier 154 153 48)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 143
;; live  kill	

;; Pred edge  4 [50.0%] 
(code_label 48 154 49 6 102 "" [1 uses])

(note 49 48 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 51 49 50 6 NOTE_INSN_DELETED)

(insn 50 51 52 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 143 [ D.25959 ])
        (mem/v:SI (reg/v/f:SI 147 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 52 50 53 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 143 [ D.25959 ])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 143 [ D.25959 ])
        (nil)))

(jump_insn 53 52 54 6 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 149
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 155 7 arch/arm/mm/init.c:118 (set (reg/v:SI 149 [ slab ])
        (plus:SI (reg/v:SI 149 [ slab ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 155 55 156 7 (set (pc)
        (label_ref 100)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  17 [100.0%] 

(barrier 156 155 58)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 141
;; live  kill	

;; Pred edge  6 [50.0%] 
(code_label 58 156 59 8 104 "" [1 uses])

(note 59 58 61 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 61 59 60 8 NOTE_INSN_DELETED)

(insn 60 61 62 8 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 141 [ D.25974 ])
        (mem/v:SI (reg/v/f:SI 147 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 62 60 63 8 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 141 [ D.25974 ])
                (const_int 1 [0x1])
                (const_int 15 [0xf]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 141 [ D.25974 ])
        (nil)))

(jump_insn 63 62 64 8 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  10 [0.0%] 
;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 134
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 157 9 include/linux/mm.h:356 (set (reg/v/f:SI 134 [ page.962 ])
        (reg/v/f:SI 147 [ page ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 157 65 158 9 (set (pc)
        (label_ref 71)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  11 [100.0%] 

(barrier 158 157 68)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 134
;; live  kill	

;; Pred edge  8 [0.0%] 
(code_label 68 158 69 10 105 "" [1 uses])

(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 10 include/linux/mm.h:355 (set (reg/v/f:SI 134 [ page.962 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ page ])
                (const_int 28 [0x1c])) [0 <variable>.D.8040.first_page+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 10 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u83(11){ }u84(13){ }u85(25){ }u86(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 142
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 71 70 72 11 106 "" [1 uses])

(note 72 71 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 74 72 75 11 include/linux/mm.h:376 (set (reg:SI 142 [ D.25970 ])
        (mem/v:SI (plus:SI (reg/v/f:SI 134 [ page.962 ])
                (const_int 16 [0x10])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ page.962 ])
        (nil)))

(insn 75 74 76 11 arch/arm/mm/init.c:119 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.25970 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.25970 ])
        (nil)))

(jump_insn 76 75 77 11 arch/arm/mm/init.c:119 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u91(11){ }u92(13){ }u93(25){ }u94(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 153
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 159 12 arch/arm/mm/init.c:120 (set (reg/v:SI 153 [ free ])
        (plus:SI (reg/v:SI 153 [ free ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(jump_insn 159 78 160 12 (set (pc)
        (label_ref 100)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  17 [100.0%] 

(barrier 160 159 81)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 138
;; live  kill	

;; Pred edge  11 [50.0%] 
(code_label 81 160 82 13 107 "" [1 uses])

(note 82 81 84 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 84 82 83 13 NOTE_INSN_DELETED)

(insn 83 84 85 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 138 [ D.25991 ])
        (mem/v:SI (reg/v/f:SI 147 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 85 83 86 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 138 [ D.25991 ])
                (const_int 1 [0x1])
                (const_int 15 [0xf]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 138 [ D.25991 ])
        (nil)))

(jump_insn 86 85 87 13 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_NOOV 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  15 [0.0%] 
;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 133
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
(note 87 86 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 161 14 include/linux/mm.h:356 (set (reg/v/f:SI 133 [ page.963 ])
        (reg/v/f:SI 147 [ page ])) 167 {*arm_movsi_insn} (nil))

(jump_insn 161 88 162 14 (set (pc)
        (label_ref 94)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  16 [100.0%] 

(barrier 162 161 91)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 133
;; live  kill	

;; Pred edge  13 [0.0%] 
(code_label 91 162 92 15 108 "" [1 uses])

(note 92 91 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 15 include/linux/mm.h:355 (set (reg/v/f:SI 133 [ page.963 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ page ])
                (const_int 28 [0x1c])) [0 <variable>.D.8040.first_page+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150
;; lr  def 	 139 150 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 139 150 173
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%] 
(code_label 94 93 95 16 109 "" [1 uses])

(note 95 94 97 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 97 95 98 16 include/linux/mm.h:376 (set (reg:SI 139 [ D.25987 ])
        (mem/v:SI (plus:SI (reg/v/f:SI 133 [ page.963 ])
                (const_int 16 [0x10])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ page.963 ])
        (nil)))

(insn 98 97 99 16 arch/arm/mm/init.c:122 (set (reg:SI 173)
        (plus:SI (reg:SI 139 [ D.25987 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 139 [ D.25987 ])
        (nil)))

(insn 99 98 100 16 arch/arm/mm/init.c:122 (set (reg/v:SI 150 [ shared ])
        (plus:SI (reg/v:SI 150 [ shared ])
            (reg:SI 173))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 7 16 5 12) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 147
;; live  kill	

;; Pred edge  7 [100.0%] 
;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  12 [100.0%] 
(code_label 100 99 101 17 103 "" [3 uses])

(note 101 100 102 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 104 17 arch/arm/mm/init.c:123 (set (reg/v/f:SI 147 [ page ])
        (plus:SI (reg/v/f:SI 147 [ page ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 104 102 105 17 arch/arm/mm/init.c:124 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 147 [ page ])
            (reg/v/f:SI 146 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 105 104 106 17 arch/arm/mm/init.c:124 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 17 -> ( 4 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  4 [86.0%]  (dfs_back)
;; Succ edge  18 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148
;; lr  def 	 136 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  gen 	 136 148
;; live  kill	

;; Pred edge  17 [14.0%]  (fallthru,loop_exit)
(note 106 105 107 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 18 arch/arm/mm/init.c:100 (set (reg/v:SI 148 [ i ])
        (plus:SI (reg/v:SI 148 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 108 107 109 18 arch/arm/mm/init.c:100 (set (reg:SI 136 [ ivtmp.959 ])
        (plus:SI (reg:SI 136 [ ivtmp.959 ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180


;; Succ edge  19 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 18 2) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u137(11){ }u138(13){ }u139(25){ }u140(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 154
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  18 [100.0%]  (fallthru,dfs_back)
;; Pred edge  2 [100.0%] 
(code_label 109 108 110 19 101 "" [1 uses])

(note 110 109 112 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 112 110 113 19 arch/arm/mm/init.c:100 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ i ])
            (reg:SI 154 [ D.25004 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 113 112 114 19 arch/arm/mm/init.c:100 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 19 -> ( 3 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180


;; Succ edge  3 [91.0%] 
;; Succ edge  20 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  19 [9.0%]  (fallthru,loop_exit)
(note 114 113 117 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 117 114 116 20 arch/arm/mm/init.c:127 (set (reg:SI 1 r1)
        (reg/v:SI 152 [ total ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ total ])
        (nil)))

(insn 116 117 118 20 arch/arm/mm/init.c:127 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11769900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11769900>)
        (nil)))

(call_insn 118 116 121 20 arch/arm/mm/init.c:127 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 121 118 120 20 arch/arm/mm/init.c:128 (set (reg:SI 1 r1)
        (reg/v:SI 153 [ free ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 153 [ free ])
        (nil)))

(insn 120 121 122 20 arch/arm/mm/init.c:128 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11769b70>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11769b70>)
        (nil)))

(call_insn 122 120 125 20 arch/arm/mm/init.c:128 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 125 122 124 20 arch/arm/mm/init.c:129 (set (reg:SI 1 r1)
        (reg/v:SI 151 [ reserved ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ reserved ])
        (nil)))

(insn 124 125 126 20 arch/arm/mm/init.c:129 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11769ed0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11769ed0>)
        (nil)))

(call_insn 126 124 129 20 arch/arm/mm/init.c:129 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 129 126 128 20 arch/arm/mm/init.c:130 (set (reg:SI 1 r1)
        (reg/v:SI 149 [ slab ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ slab ])
        (nil)))

(insn 128 129 130 20 arch/arm/mm/init.c:130 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x11765930>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x11765930>)
        (nil)))

(call_insn 130 128 133 20 arch/arm/mm/init.c:130 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 133 130 132 20 arch/arm/mm/init.c:131 (set (reg:SI 1 r1)
        (reg/v:SI 150 [ shared ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 150 [ shared ])
        (nil)))

(insn 132 133 134 20 arch/arm/mm/init.c:131 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x1176c0c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x1176c0c0>)
        (nil)))

(call_insn 134 132 136 20 arch/arm/mm/init.c:131 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 136 134 137 20 arch/arm/mm/init.c:132 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x1176c1b0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x1176c1b0>)
        (nil)))

(insn 137 136 138 20 arch/arm/mm/init.c:132 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 138 137 139 20 arch/arm/mm/init.c:132 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 20 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 139 138 0)

starting the processing of deferred insns
ending the processing of deferred insns
