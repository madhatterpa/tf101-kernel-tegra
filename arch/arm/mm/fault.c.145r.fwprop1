
;; Function do_bad (do_bad)[0:1296]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 12, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 1 [0x1])
Changes to insn 12 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



do_bad

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(2)
0, 11
;; rd  kill	(3)
0, 1, 11

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 12 2 arch/arm/mm/fault.c:489 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 18 2 arch/arm/mm/fault.c:489 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 18 12 0 2 arch/arm/mm/fault.c:489 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function __do_user_fault (__do_user_fault)[0:1289]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 14, replacing
 (reg:SI 140)
 with (const_int 14 [0xe])
Changes to insn 14 not recognized
 Setting REG_EQUAL note

In insn 18, replacing
 (reg:SI 141)
 with (const_int 0 [0x0])
Changes to insn 18 not recognized
 Setting REG_EQUAL note


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 15.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



__do_user_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={3d,2u} r3={2d,1u} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,7u,1d} r26={1d,2u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d} r134={1d,4u} r135={1d,2u} r136={1d,1u} r137={1d,3u} r138={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 177{139d,36u,2e} in 19{18 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 138[135,1] 140[136,1] 141[137,1] 142[138,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136 137 138 140 141 142
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 10, 11, 13, 14, 16, 27, 28
;; rd  gen 	(10)
1, 130, 131, 132, 133, 134, 135, 136, 137, 138
;; rd  kill	(14)
0, 1, 2, 15, 16, 130, 131, 132, 133, 134, 135, 136, 137, 138

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 9 3 2 arch/arm/mm/fault.c:173 (set (reg/v/f:SI 134 [ tsk ])
        (reg:SI 0 r0 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 135 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 136 [ fsr ])
        (reg:SI 2 r2 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 137 [ sig ])
        (reg:SI 3 r3 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 8 2 arch/arm/mm/fault.c:173 (set (reg/v:SI 138 [ code ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 code+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 code+0 S4 A32])
        (nil)))

(note 8 6 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/mm/fault.c:185 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 784 [0x310])) [0 <variable>.thread.address+0 S4 A64])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:186 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 792 [0x318])) [0 <variable>.thread.error_code+0 S4 A64])
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:187 (set (reg:SI 140)
        (const_int 14 [0xe])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 16 2 arch/arm/mm/fault.c:187 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tsk ])
                (const_int 788 [0x314])) [0 <variable>.thread.trap_no+0 S4 A32])
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 14 [0xe])
        (nil)))

(insn 16 14 17 2 arch/arm/mm/fault.c:188 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 si.si_signo+0 S4 A64])
        (reg/v:SI 137 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/fault.c:189 (set (reg:SI 141)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/mm/fault.c:189 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 si.si_errno+0 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 19 18 20 2 arch/arm/mm/fault.c:190 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 si.si_code+0 S4 A64])
        (reg/v:SI 138 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 2 arch/arm/mm/fault.c:191 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 si._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 2 arch/arm/mm/fault.c:192 (set (reg/f:SI 142)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 22 21 23 2 arch/arm/mm/fault.c:192 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 2 arch/arm/mm/fault.c:192 (set (reg:SI 1 r1)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))
        (nil)))

(insn 24 23 25 2 arch/arm/mm/fault.c:192 (set (reg:SI 2 r2)
        (reg/v/f:SI 134 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 0 2 arch/arm/mm/fault.c:192 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("force_sig_info") [flags 0x41] <function_decl 0x11156f80 force_sig_info>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
1, 5, 8, 10, 11, 13, 14, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 15.
ending the processing of deferred insns

;; Function show_pte (show_pte)[0:1287]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 8 5 }
;; 5 succs { 6 7 }
;; 6 succs { 8 }
;; 7 succs { 8 9 }
;; 8 succs { 1 }
;; 9 succs { 8 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 16 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 13 count 18 (  1.8)

In insn 14, replacing
 (reg/f:SI 139)
 with (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114bfdb0>)
Changes to insn 14 not profitable

In insn 22, replacing
 (mem/s/j:SI (reg/v/f:SI 135 [ pgd ]) [0 S4 A32])
 with (mem/s/j:SI (plus:SI (reg/f:SI 142 [ <variable>.pgd ])
            (reg:SI 141)) [0 S4 A32])
Changed insn 22
deferring rescan insn with uid = 22.
deferring rescan insn with uid = 22.

In insn 24, replacing
 (reg/f:SI 143)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x114b7420>)
Changes to insn 24 not profitable

In insn 96, replacing
 (reg:SI 173 [+4 ])
 with (const_int 0 [0x0])
Changes to insn 96 not profitable

In insn 28, replacing
 (mem:SI (reg/v/f:SI 135 [ pgd ]) [0 S4 A32])
 with (mem:SI (plus:SI (reg/f:SI 142 [ <variable>.pgd ])
            (reg:SI 141)) [0 S4 A32])
Changed insn 28
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 28.

In insn 37, replacing
 (reg/f:SI 147)
 with (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x114e0740>)
Changes to insn 37 not profitable

In insn 49, replacing
 (mult:SI (reg:SI 154)
        (reg:SI 151))
 with (mult:SI (reg:SI 151)
        (const_int 768 [0x300]))
Changes to insn 49 not recognized
 Setting REG_EQUAL note

In insn 51, replacing
 (plus:SI (reg:SI 153)
        (reg/f:SI 155))
 with (plus:SI (reg:SI 153)
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>))
Changes to insn 51 not recognized
 Setting REG_EQUAL note

In insn 59, replacing
 (reg/f:SI 158)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114e09e0>)
Changes to insn 59 not profitable

In insn 73, replacing
 (mem:SI (reg/v/f:SI 134 [ pte ]) [0 S4 A32])
 with (mem:SI (plus:SI (reg:SI 161)
            (reg:SI 165)) [0 S4 A32])
Changed insn 73
deferring rescan insn with uid = 73.
deferring rescan insn with uid = 73.

In insn 75, replacing
 (reg/f:SI 166)
 with (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114e1ab0>)
Changes to insn 75 not profitable

In insn 81, replacing
 (reg/f:SI 169)
 with (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114e1c60>)
Changes to insn 81 not profitable

In insn 22, replacing
 (mem/s/j:SI (plus:SI (reg/f:SI 142 [ <variable>.pgd ])
            (reg:SI 141)) [0 S4 A32])
 with (mem/s/j:SI (plus:SI (mult:SI (reg:SI 140)
                (const_int 8 [0x8]))
            (reg/f:SI 142 [ <variable>.pgd ])) [0 S4 A32])
Changed insn 22
deferring rescan insn with uid = 22.
deferring rescan insn with uid = 22.

In insn 28, replacing
 (mem:SI (plus:SI (reg/f:SI 142 [ <variable>.pgd ])
            (reg:SI 141)) [0 S4 A32])
 with (mem:SI (plus:SI (mult:SI (reg:SI 140)
                (const_int 8 [0x8]))
            (reg/f:SI 142 [ <variable>.pgd ])) [0 S4 A32])
Changed insn 28
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 28.

In insn 73, replacing
 (mem:SI (plus:SI (reg:SI 161)
            (reg:SI 165)) [0 S4 A32])
 with (mem:SI (plus:SI (mult:SI (reg:SI 163)
                (const_int 4 [0x4]))
            (reg:SI 161)) [0 S4 A32])
Changed insn 73
deferring rescan insn with uid = 73.
deferring rescan insn with uid = 73.


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 102.
deferring deletion of insn with uid = 101.
deferring deletion of insn with uid = 98.
deferring deletion of insn with uid = 97.
deferring deletion of insn with uid = 93.
deferring deletion of insn with uid = 20.
deferring deletion of insn with uid = 18.
Deleted 7 trivially dead insns

Number of successful forward propagations: 6



show_pte

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={13d,7u} r1={9d,3u} r2={10d,3u} r3={10d,3u} r11={1d,9u} r12={7d} r13={1d,15u} r14={6d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={10d,4u} r25={1d,9u} r26={1d,8u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r133={1d,2u} r134={1d,1u} r135={1d} r136={1d,4u,1d} r137={2d,3u} r138={1d,3u} r139={1d,1u} r140={1d,3u} r141={1d,1u} r142={1d,3u} r143={1d,1u} r145={1d,2u} r146={1d,5u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,2u} r162={1d,1u,1d} r163={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r168={1d,2u} r169={1d,1u} r171={1d,2u} r172={1d} r173={1d,1u} r174={1d} r175={1d} r176={1d} r177={1d} 
;;    total ref usage 893{772d,119u,2e} in 64{58 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728
0[0,13] 1[13,9] 2[22,10] 3[32,10] 11[42,1] 12[43,7] 13[50,1] 14[51,6] 15[57,6] 16[63,6] 17[69,6] 18[75,6] 19[81,6] 20[87,6] 21[93,6] 22[99,6] 23[105,6] 24[111,10] 25[121,1] 26[122,1] 27[123,6] 28[129,6] 29[135,6] 30[141,6] 31[147,6] 32[153,6] 33[159,6] 34[165,6] 35[171,6] 36[177,6] 37[183,6] 38[189,6] 39[195,6] 40[201,6] 41[207,6] 42[213,6] 43[219,6] 44[225,6] 45[231,6] 46[237,6] 47[243,6] 48[249,6] 49[255,6] 50[261,6] 51[267,6] 52[273,6] 53[279,6] 54[285,6] 55[291,6] 56[297,6] 57[303,6] 58[309,6] 59[315,6] 60[321,6] 61[327,6] 62[333,6] 63[339,6] 64[345,6] 65[351,6] 66[357,6] 67[363,6] 68[369,6] 69[375,6] 70[381,6] 71[387,6] 72[393,6] 73[399,6] 74[405,6] 75[411,6] 76[417,6] 77[423,6] 78[429,6] 79[435,6] 80[441,6] 81[447,6] 82[453,6] 83[459,6] 84[465,6] 85[471,6] 86[477,6] 87[483,6] 88[489,6] 89[495,6] 90[501,6] 91[507,6] 92[513,6] 93[519,6] 94[525,6] 95[531,6] 96[537,6] 97[543,6] 98[549,6] 99[555,6] 100[561,6] 101[567,6] 102[573,6] 103[579,6] 104[585,6] 105[591,6] 106[597,6] 107[603,6] 108[609,6] 109[615,6] 110[621,6] 111[627,6] 112[633,6] 113[639,6] 114[645,6] 115[651,6] 116[657,6] 117[663,6] 118[669,6] 119[675,6] 120[681,6] 121[687,6] 122[693,6] 123[699,6] 124[705,6] 125[711,6] 126[717,6] 127[723,6] 133[729,1] 134[730,1] 135[731,1] 136[732,1] 137[733,2] 138[735,1] 139[736,1] 140[737,1] 141[738,1] 142[739,1] 143[740,1] 145[741,1] 146[742,1] 147[743,1] 148[744,1] 149[745,1] 150[746,1] 151[747,1] 152[748,1] 153[749,1] 154[750,1] 155[751,1] 156[752,1] 157[753,1] 158[754,1] 159[755,1] 160[756,1] 161[757,1] 162[758,1] 163[759,1] 164[760,1] 165[761,1] 166[762,1] 168[763,1] 169[764,1] 171[765,1] 172[766,1] 173[767,1] 174[768,1] 175[769,1] 176[770,1] 177[771,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138
;; live  kill	
;; rd  in  	(10)
12, 21, 31, 41, 42, 49, 50, 56, 121, 122
;; rd  gen 	(3)
120, 734, 735
;; rd  kill	(13)
111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 733, 734, 735

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/mm/fault.c:71 (set (reg/v/f:SI 137 [ mm ])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:71 (set (reg/v:SI 138 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/mm/fault.c:74 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 137 [ mm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/mm/fault.c:74 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 11)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
12, 21, 31, 41, 42, 49, 50, 56, 120, 121, 122, 734, 735


;; Succ edge  3 [15.0%]  (fallthru)
;; Succ edge  4 [85.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	 137
;; live  kill	
;; rd  in  	(13)
12, 21, 31, 41, 42, 49, 50, 56, 120, 121, 122, 734, 735
;; rd  gen 	(1)
733
;; rd  kill	(2)
733, 734

;; Pred edge  2 [15.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/mm/fault.c:75 (set (reg/v/f:SI 137 [ mm ])
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(13)
12, 21, 31, 41, 42, 49, 50, 56, 120, 121, 122, 733, 735


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 139 140 141 142 143 145 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 136 139 140 141 142 143 145 172 173
;; live  kill	 14 [lr]
;; rd  in  	(14)
12, 21, 31, 41, 42, 49, 50, 56, 120, 121, 122, 733, 734, 735
;; rd  gen 	(12)
8, 117, 731, 732, 736, 737, 738, 739, 740, 741, 766, 767
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 51, 52, 53, 54, 55, 56, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 731, 732, 736, 737, 738, 739, 740, 741, 766, 767

;; Pred edge  2 [85.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 11 10 12 4 6 "" [1 uses])

(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 4 arch/arm/mm/fault.c:77 (set (reg/f:SI 139)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114bfdb0>)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 4 arch/arm/mm/fault.c:77 (set (reg:SI 0 r0)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114bfdb0>)
        (nil)))

(insn 15 14 16 4 arch/arm/mm/fault.c:77 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 4 arch/arm/mm/fault.c:77 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 17 16 19 4 arch/arm/mm/fault.c:78 (set (reg:SI 140)
        (lshiftrt:SI (reg/v:SI 138 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 19 17 21 4 arch/arm/mm/fault.c:78 (set (reg/f:SI 142 [ <variable>.pgd ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 137 [ mm ])
                (const_int 36 [0x24])) [0 <variable>.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 19 22 4 arch/arm/mm/fault.c:79 (set (reg/f:SI 143)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x114b7420>)) 167 {*arm_movsi_insn} (nil))

(insn 22 21 94 4 arch/arm/mm/fault.c:79 (set (reg:SI 145)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 140)
                    (const_int 8 [0x8]))
                (reg/f:SI 142 [ <variable>.pgd ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 94 22 24 4 arch/arm/mm/fault.c:79 (set (reg:SI 173 [+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 24 94 25 4 arch/arm/mm/fault.c:79 (set (reg:SI 0 r0)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x114b7420>)
        (nil)))

(insn 25 24 95 4 arch/arm/mm/fault.c:79 (set (reg:SI 1 r1)
        (reg/v:SI 138 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 95 25 96 4 arch/arm/mm/fault.c:79 (set (reg:SI 2 r2)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(insn 96 95 27 4 arch/arm/mm/fault.c:79 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 173 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 27 96 28 4 arch/arm/mm/fault.c:79 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 28 27 29 4 arch/arm/mm/fault.c:111 (set (reg:SI 136 [ D.24402 ])
        (mem:SI (plus:SI (mult:SI (reg:SI 140)
                    (const_int 8 [0x8]))
                (reg/f:SI 142 [ <variable>.pgd ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/mm/fault.c:111 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.24402 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 4 arch/arm/mm/fault.c:111 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 4 -> ( 8 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; rd  out 	(23)
8, 21, 31, 41, 42, 49, 50, 117, 121, 122, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 766, 767


;; Succ edge  8 [39.0%] 
;; Succ edge  5 [61.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 24 [cc] 146
;; live  kill	
;; rd  in  	(23)
8, 21, 31, 41, 42, 49, 50, 117, 121, 122, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 766, 767
;; rd  gen 	(2)
116, 742
;; rd  kill	(11)
111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 742

;; Pred edge  4 [61.0%]  (fallthru)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 5 arch/arm/mm/fault.c:114 (set (reg:SI 146)
        (and:SI (reg:SI 136 [ D.24402 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/fault.c:114 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 146)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 34 33 35 5 arch/arm/mm/fault.c:114 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; rd  out 	(24)
8, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 766, 767


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 147
;; live  kill	 14 [lr]
;; rd  in  	(24)
8, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 766, 767
;; rd  gen 	(2)
6, 743
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 51, 52, 53, 54, 55, 56, 743

;; Pred edge  5 [0.0%]  (fallthru)
(note 35 34 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 6 arch/arm/mm/fault.c:115 (set (reg/f:SI 147)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x114e0740>)) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 6 arch/arm/mm/fault.c:115 (set (reg:SI 0 r0)
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x114e0740>)
        (nil)))

(call_insn 38 37 41 6 arch/arm/mm/fault.c:115 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(25)
6, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 766, 767


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 133 148 149 150 151 152 153 154 155 156 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; live  gen 	 24 [cc] 133 148 149 150 151 152 153 154 155 156 157
;; live  kill	
;; rd  in  	(24)
8, 21, 31, 41, 42, 49, 50, 116, 121, 122, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 766, 767
;; rd  gen 	(12)
114, 729, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753
;; rd  kill	(21)
111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 729, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753

;; Pred edge  5 [100.0%] 
(code_label 41 38 42 7 8 "" [1 uses])

(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 7 include/linux/mm.h:692 (set (reg:SI 148)
        (lshiftrt:SI (reg:SI 136 [ D.24402 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 44 43 45 7 include/linux/mm.h:692 (set (reg/f:SI 150)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 7 include/linux/mm.h:692 (set (reg/f:SI 149 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 150) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 7 include/linux/mm.h:692 (set (reg:SI 152 [ <variable>.flags ])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 148)
                    (const_int 32 [0x20]))
                (reg/f:SI 149 [ mem_map ])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 7 include/linux/mm.h:692 (set (reg:SI 151)
        (lshiftrt:SI (reg:SI 152 [ <variable>.flags ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 48 47 49 7 include/linux/mm.h:692 (set (reg:SI 154)
        (const_int 768 [0x300])) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 include/linux/mm.h:692 (set (reg:SI 153)
        (mult:SI (reg:SI 154)
            (reg:SI 151))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg:SI 151)
            (const_int 768 [0x300]))
        (nil)))

(insn 50 49 51 7 include/linux/mm.h:692 (set (reg/f:SI 155)
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 7 include/linux/mm.h:692 (set (reg/f:SI 133 [ D.24788 ])
        (plus:SI (reg:SI 153)
            (reg/f:SI 155))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 153)
            (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>))
        (nil)))

(insn 52 51 53 7 include/linux/mmzone.h:741 (set (reg/f:SI 157 [ <variable>.zone_pgdat ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 133 [ D.24788 ])
                (const_int 748 [0x2ec])) [0 <variable>.zone_pgdat+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 7 include/linux/mmzone.h:741 (set (reg:SI 156)
        (minus:SI (reg/f:SI 133 [ D.24788 ])
            (reg/f:SI 157 [ <variable>.zone_pgdat ]))) 28 {*arm_subsi3_insn} (nil))

(insn 54 53 55 7 include/linux/mmzone.h:741 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 156)
            (const_int 768 [0x300]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 55 54 56 7 include/linux/mmzone.h:741 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; rd  out 	(35)
8, 21, 31, 41, 42, 49, 50, 114, 121, 122, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 766, 767


;; Succ edge  8 [28.0%]  (fallthru)
;; Succ edge  9 [72.0%] 

;; Start of basic block ( 9 7 4 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 158
;; live  kill	
;; rd  in  	(56)
0, 6, 8, 21, 31, 41, 42, 49, 50, 114, 116, 117, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771
;; rd  gen 	(2)
4, 754
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 754

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  7 [28.0%]  (fallthru)
;; Pred edge  4 [39.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 56 55 57 8 7 "" [1 uses])

(note 57 56 58 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 8 arch/arm/mm/fault.c:130 (set (reg/f:SI 158)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114e09e0>)) 167 {*arm_movsi_insn} (nil))

(insn 59 58 60 8 arch/arm/mm/fault.c:130 (set (reg:SI 0 r0)
        (reg/f:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114e09e0>)
        (nil)))

(call_insn/j 60 59 62 8 arch/arm/mm/fault.c:130 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(55)
4, 21, 31, 41, 42, 49, 50, 114, 116, 117, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 159 160 161 162 163 164 165 166 168 169 171 174 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 146
;; live  gen 	 0 [r0] 2 [r2] 3 [r3] 134 159 160 161 162 163 164 165 166 168 169 171 174 175 176 177
;; live  kill	 14 [lr]
;; rd  in  	(35)
8, 21, 31, 41, 42, 49, 50, 114, 121, 122, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 766, 767
;; rd  gen 	(17)
0, 730, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771
;; rd  kill	(35)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 51, 52, 53, 54, 55, 56, 730, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771

;; Pred edge  7 [72.0%] 
(code_label 62 60 63 9 9 "" [1 uses])

(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 9 arch/arm/mm/fault.c:123 (set (reg:SI 160)
        (and:SI (reg:SI 136 [ D.24402 ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 65 64 66 9 arch/arm/mm/fault.c:123 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 136 [ D.24402 ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 66 65 67 9 arch/arm/mm/fault.c:123 (set (reg:SI 161)
        (plus:SI (reg:SI 159)
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))

(insn 67 66 68 9 arch/arm/mm/fault.c:123 (set (reg:SI 162)
        (lshiftrt:SI (reg/v:SI 138 [ addr ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 68 67 69 9 arch/arm/mm/fault.c:123 (set (reg:SI 164)
        (ashift:SI (reg:SI 162)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 69 68 70 9 arch/arm/mm/fault.c:123 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 164)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 162)
            (const_int 511 [0x1ff]))
        (nil)))

(insn 70 69 71 9 arch/arm/mm/fault.c:123 (set (reg:SI 165)
        (ashift:SI (reg:SI 163)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 71 70 72 9 arch/arm/mm/fault.c:123 (set (reg/v/f:SI 134 [ pte ])
        (plus:SI (reg:SI 161)
            (reg:SI 165))) 4 {*arm_addsi3} (nil))

(insn 72 71 73 9 arch/arm/mm/fault.c:124 (set (reg/f:SI 166)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114e1ab0>)) 167 {*arm_movsi_insn} (nil))

(insn 73 72 75 9 arch/arm/mm/fault.c:124 (set (reg:SI 168)
        (mem:SI (plus:SI (mult:SI (reg:SI 163)
                    (const_int 4 [0x4]))
                (reg:SI 161)) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 75 73 99 9 arch/arm/mm/fault.c:124 (set (reg:SI 0 r0)
        (reg/f:SI 166)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114e1ab0>)
        (nil)))

(insn 99 75 100 9 arch/arm/mm/fault.c:124 (set (reg:SI 2 r2)
        (reg:SI 168)) 167 {*arm_movsi_insn} (nil))

(insn 100 99 77 9 arch/arm/mm/fault.c:124 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 77 100 78 9 arch/arm/mm/fault.c:124 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 78 77 79 9 arch/arm/mm/fault.c:125 (set (reg/f:SI 169)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114e1c60>)) 167 {*arm_movsi_insn} (nil))

(insn 79 78 81 9 arch/arm/mm/fault.c:125 (set (reg:SI 171)
        (mem:SI (plus:SI (reg/v/f:SI 134 [ pte ])
                (const_int 2048 [0x800])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 81 79 103 9 arch/arm/mm/fault.c:125 (set (reg:SI 0 r0)
        (reg/f:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114e1c60>)
        (nil)))

(insn 103 81 104 9 arch/arm/mm/fault.c:125 (set (reg:SI 2 r2)
        (reg:SI 171)) 167 {*arm_movsi_insn} (nil))

(insn 104 103 83 9 arch/arm/mm/fault.c:125 (set (reg:SI 3 r3 [+4 ])
        (reg:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 83 104 0 9 arch/arm/mm/fault.c:125 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(51)
0, 21, 31, 41, 42, 49, 50, 114, 121, 122, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771


;; Succ edge  8 [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 18.
deleting insn with uid = 20.
deleting insn with uid = 93.
deleting insn with uid = 97.
deleting insn with uid = 98.
deleting insn with uid = 101.
deleting insn with uid = 102.
rescanning insn with uid = 22.
deleting insn with uid = 22.
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 73.
deleting insn with uid = 73.
ending the processing of deferred insns

;; Function __do_kernel_fault (__do_kernel_fault)[0:1288]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 7 3 }
;; 3 succs { 5 4 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 8 count 14 (  1.8)

In insn 18, replacing
 (compare:CC (reg/v:SI 136 [ addr ])
        (reg:SI 139))
 with (compare:CC (reg/v:SI 136 [ addr ])
        (const_int 4095 [0xfff]))
Changes to insn 18 not recognized
 Setting REG_EQUAL note

In insn 30, replacing
 (reg/f:SI 140)
 with (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10b2ecc0>)
Changes to insn 30 not profitable

In insn 38, replacing
 (reg/f:SI 141)
 with (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x114ebb40>)
Changes to insn 38 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



__do_kernel_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={15d,9u} r1={11d,4u} r2={10d,3u} r3={8d,1u} r11={1d,7u} r12={8d} r13={1d,14u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={9d,2u} r25={1d,7u} r26={1d,6u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={2d,1u} r134={1d,1u} r135={1d,1u} r136={1d,3u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 919{853d,66u,0e} in 33{26 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842
0[0,15] 1[15,11] 2[26,10] 3[36,8] 11[44,1] 12[45,8] 13[53,1] 14[54,8] 15[62,7] 16[69,7] 17[76,7] 18[83,7] 19[90,7] 20[97,7] 21[104,7] 22[111,7] 23[118,7] 24[125,9] 25[134,1] 26[135,1] 27[136,7] 28[143,7] 29[150,7] 30[157,7] 31[164,7] 32[171,7] 33[178,7] 34[185,7] 35[192,7] 36[199,7] 37[206,7] 38[213,7] 39[220,7] 40[227,7] 41[234,7] 42[241,7] 43[248,7] 44[255,7] 45[262,7] 46[269,7] 47[276,7] 48[283,7] 49[290,7] 50[297,7] 51[304,7] 52[311,7] 53[318,7] 54[325,7] 55[332,7] 56[339,7] 57[346,7] 58[353,7] 59[360,7] 60[367,7] 61[374,7] 62[381,7] 63[388,7] 64[395,7] 65[402,7] 66[409,7] 67[416,7] 68[423,7] 69[430,7] 70[437,7] 71[444,7] 72[451,7] 73[458,7] 74[465,7] 75[472,7] 76[479,7] 77[486,7] 78[493,7] 79[500,7] 80[507,7] 81[514,7] 82[521,7] 83[528,7] 84[535,7] 85[542,7] 86[549,7] 87[556,7] 88[563,7] 89[570,7] 90[577,7] 91[584,7] 92[591,7] 93[598,7] 94[605,7] 95[612,7] 96[619,7] 97[626,7] 98[633,7] 99[640,7] 100[647,7] 101[654,7] 102[661,7] 103[668,7] 104[675,7] 105[682,7] 106[689,7] 107[696,7] 108[703,7] 109[710,7] 110[717,7] 111[724,7] 112[731,7] 113[738,7] 114[745,7] 115[752,7] 116[759,7] 117[766,7] 118[773,7] 119[780,7] 120[787,7] 121[794,7] 122[801,7] 123[808,7] 124[815,7] 125[822,7] 126[829,7] 127[836,7] 133[843,2] 134[845,1] 135[846,1] 136[847,1] 137[848,1] 138[849,1] 139[850,1] 140[851,1] 141[852,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 136 137 138
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134 135 136 137 138
;; live  kill	 14 [lr]
;; rd  in  	(10)
14, 25, 35, 43, 44, 52, 53, 61, 134, 135
;; rd  gen 	(7)
12, 132, 845, 846, 847, 848, 849
;; rd  kill	(37)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 54, 55, 56, 57, 58, 59, 60, 61, 125, 126, 127, 128, 129, 130, 131, 132, 133, 845, 846, 847, 848, 849

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/fault.c:143 (set (reg/v/f:SI 135 [ mm ])
        (reg:SI 0 r0 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:143 (set (reg/v:SI 136 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:143 (set (reg/v:SI 137 [ fsr ])
        (reg:SI 2 r2 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/fault.c:143 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 3 r3 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/fault.c:147 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 10 9 11 2 arch/arm/mm/fault.c:147 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("fixup_exception") [flags 0x41] <function_decl 0x11013a80 fixup_exception>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/mm/fault.c:147 (set (reg:SI 134 [ D.24430 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:147 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24430 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 2 arch/arm/mm/fault.c:147 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; rd  out 	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 845, 846, 847, 848, 849


;; Succ edge  7 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; live  gen 	 0 [r0] 24 [cc] 139
;; live  kill	 14 [lr]
;; rd  in  	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 845, 846, 847, 848, 849
;; rd  gen 	(2)
130, 850
;; rd  kill	(18)
54, 55, 56, 57, 58, 59, 60, 61, 125, 126, 127, 128, 129, 130, 131, 132, 133, 850

;; Pred edge  2 [0.0%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 3 arch/arm/mm/fault.c:153 (set (reg:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 3 arch/arm/mm/fault.c:153 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10a82a00 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 17 16 18 3 arch/arm/mm/fault.c:154 (set (reg:SI 139)
        (const_int 4095 [0xfff])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 arch/arm/mm/fault.c:154 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ addr ])
            (reg:SI 139))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 136 [ addr ])
            (const_int 4095 [0xfff]))
        (nil)))

(jump_insn 19 18 20 3 arch/arm/mm/fault.c:154 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; rd  out 	(16)
12, 25, 35, 43, 44, 52, 53, 130, 134, 135, 845, 846, 847, 848, 849, 850


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
12, 25, 35, 43, 44, 52, 53, 130, 134, 135, 845, 846, 847, 848, 849, 850
;; rd  gen 	(1)
844
;; rd  kill	(2)
843, 844

;; Pred edge  3 [50.0%]  (fallthru)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 24 4 arch/arm/mm/fault.c:154 discrim 2 (set (reg/f:SI 133 [ iftmp.320 ])
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114ed540>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138
;; rd  out 	(17)
12, 25, 35, 43, 44, 52, 53, 130, 134, 135, 844, 845, 846, 847, 848, 849, 850


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
12, 25, 35, 43, 44, 52, 53, 130, 134, 135, 845, 846, 847, 848, 849, 850
;; rd  gen 	(1)
843
;; rd  kill	(2)
843, 844

;; Pred edge  3 [50.0%] 
(code_label 24 21 25 5 16 "" [1 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 arch/arm/mm/fault.c:154 discrim 1 (set (reg/f:SI 133 [ iftmp.320 ])
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x114c3f80>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138
;; rd  out 	(17)
12, 25, 35, 43, 44, 52, 53, 130, 134, 135, 843, 845, 846, 847, 848, 849, 850


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140 141
;; live  kill	 14 [lr]
;; rd  in  	(18)
12, 25, 35, 43, 44, 52, 53, 130, 134, 135, 843, 844, 845, 846, 847, 848, 849, 850
;; rd  gen 	(2)
851, 852
;; rd  kill	(10)
54, 55, 56, 57, 58, 59, 60, 61, 851, 852

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 27 26 28 6 17 "" [0 uses])

(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 6 arch/arm/mm/fault.c:154 discrim 3 (set (reg/f:SI 140)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10b2ecc0>)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 6 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 0 r0)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x10b2ecc0>)
        (nil)))

(insn 31 30 32 6 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 1 r1)
        (reg/f:SI 133 [ iftmp.320 ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 arch/arm/mm/fault.c:154 discrim 3 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 34 6 arch/arm/mm/fault.c:154 discrim 3 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 34 33 35 6 arch/arm/mm/fault.c:159 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 6 arch/arm/mm/fault.c:159 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 35 37 6 arch/arm/mm/fault.c:159 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_pte") [flags 0x3] <function_decl 0x512d9600 show_pte>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 36 38 6 arch/arm/mm/fault.c:160 (set (reg/f:SI 141)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x114ebb40>)) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 6 arch/arm/mm/fault.c:160 (set (reg:SI 0 r0)
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x114ebb40>)
        (nil)))

(insn 39 38 40 6 arch/arm/mm/fault.c:160 (set (reg:SI 1 r1)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 6 arch/arm/mm/fault.c:160 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 42 6 arch/arm/mm/fault.c:160 (parallel [
            (call (mem:SI (symbol_ref:SI ("die") [flags 0x41] <function_decl 0x512d9300 die>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 42 41 43 6 arch/arm/mm/fault.c:161 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 6 arch/arm/mm/fault.c:161 (parallel [
            (call (mem:SI (symbol_ref:SI ("bust_spinlocks") [flags 0x41] <function_decl 0x10a82a00 bust_spinlocks>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 44 43 45 6 arch/arm/mm/fault.c:162 (set (reg:SI 0 r0)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 52 6 arch/arm/mm/fault.c:162 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_exit") [flags 0x41] <function_decl 0x10a67900 do_exit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 6 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(20)
12, 25, 35, 43, 44, 52, 53, 130, 134, 135, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852



;; Start of basic block ( 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 845, 846, 847, 848, 849
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [100.0%] 
(code_label 52 45 55 7 18 "" [1 uses])

(note 55 52 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
12, 25, 35, 43, 44, 52, 53, 132, 134, 135, 845, 846, 847, 848, 849


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function do_page_fault (do_page_fault)[0:1293]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 48 5 }
;; 5 succs { 6 9 }
;; 6 succs { 7 8 }
;; 7 succs { 48 8 }
;; 8 succs { 11 }
;; 9 succs { 10 11 }
;; 10 succs { 48 11 }
;; 11 succs { 26 12 }
;; 12 succs { 24 13 }
;; 13 succs { 14 15 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 20 }
;; 19 succs { 27 }
;; 20 succs { 27 21 }
;; 21 succs { 22 23 }
;; 22 succs { 27 }
;; 23 succs { 27 }
;; 24 succs { 25 26 }
;; 25 succs { 13 26 }
;; 26 succs { 27 }
;; 27 succs { 28 32 }
;; 28 succs { 30 29 }
;; 29 succs { 31 }
;; 30 succs { 31 }
;; 31 succs { 32 }
;; 32 succs { 33 38 }
;; 33 succs { 34 38 }
;; 34 succs { 36 35 }
;; 35 succs { 37 }
;; 36 succs { 37 }
;; 37 succs { 38 }
;; 38 succs { 49 39 }
;; 39 succs { 40 41 }
;; 40 succs { 49 }
;; 41 succs { 48 42 }
;; 42 succs { 43 44 }
;; 43 succs { 47 }
;; 44 succs { 46 45 }
;; 45 succs { 47 }
;; 46 succs { 47 }
;; 47 succs { 49 }
;; 48 succs { 49 }
;; 49 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 50 n_edges 75 count 94 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 50 n_edges 75 count 98 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 50 n_edges 75 count 98 (    2)

In insn 32, replacing
 (subreg:SI (reg:QI 167) 0)
 with (reg:SI 168)
Changed insn 32
deferring rescan insn with uid = 32.

In insn 32, replacing
 (subreg:SI (reg:QI 169) 0)
 with (reg:SI 170)
Changed insn 32
deferring rescan insn with uid = 32.

In insn 301, replacing
 (reg:SI 204 [ D.24563 ])
 with (reg/v:SI 156 [ addr ])
Changed insn 301
deferring rescan insn with uid = 301.
deferring rescan insn with uid = 301.

In insn 302, replacing
 (reg:SI 205 [ D.24563+4 ])
 with (const_int 0 [0x0])
Changes to insn 302 not recognized
 Setting REG_EQUAL note

In insn 303, replacing
 (reg:SI 204 [ D.24563 ])
 with (reg/v:SI 156 [ addr ])
Changed insn 303
deferring rescan insn with uid = 303.
deferring rescan insn with uid = 303.

In insn 304, replacing
 (reg:SI 205 [ D.24563+4 ])
 with (const_int 0 [0x0])
Changes to insn 304 not recognized
 Setting REG_EQUAL note

In insn 225, replacing
 (and:SI (reg/v:SI 147 [ fault ])
        (reg:SI 198))
 with (and:SI (reg/v:SI 147 [ fault ])
        (const_int 196659 [0x30033]))
Changes to insn 225 not profitable

In insn 288, replacing
 (reg:SI 155 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 288 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 299.
deferring deletion of insn with uid = 151.
deferring deletion of insn with uid = 31.
deferring deletion of insn with uid = 28.
deferring deletion of insn with uid = 21.
deferring deletion of insn with uid = 8.
Deleted 6 trivially dead insns

Number of successful forward propagations: 4



do_page_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,24u} r1={23d,8u} r2={21d,6u} r3={21d,5u} r11={1d,49u} r12={16d} r13={1d,76u,2d} r14={16d,1u} r15={15d} r16={15d} r17={15d} r18={15d} r19={15d} r20={15d} r21={15d} r22={15d} r23={15d} r24={45d,29u} r25={1d,51u,4d} r26={1d,48u} r27={15d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={15d} r38={15d} r39={15d} r40={15d} r41={15d} r42={15d} r43={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r81={15d} r82={15d} r83={15d} r84={15d} r85={15d} r86={15d} r87={15d} r88={15d} r89={15d} r90={15d} r91={15d} r92={15d} r93={15d} r94={15d} r95={15d} r96={15d} r97={15d} r98={15d} r99={15d} r100={15d} r101={15d} r102={15d} r103={15d} r104={15d} r105={15d} r106={15d} r107={15d} r108={15d} r109={15d} r110={15d} r111={15d} r112={15d} r113={15d} r114={15d} r115={15d} r116={15d} r117={15d} r118={15d} r119={15d} r120={15d} r121={15d} r122={15d} r123={15d} r124={15d} r125={15d} r126={15d} r127={15d} r133={2d,1u} r134={2d,1u} r135={1d,1u} r136={1d,5u} r137={3d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d} r144={1d} r145={3d,1u} r146={3d,1u} r147={3d,7u,1d} r148={1d,5u} r149={1d,6u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,3u} r155={1d,1u} r156={1d,9u,1d} r157={1d,4u} r158={1d,12u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d} r168={1d,1u} r169={1d} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,2u} r195={1d,1u} r196={1d,2u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r204={1d} r205={1d,2u} 
;;    total ref usage 2322{1906d,408u,8e} in 185{170 regular + 15 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,31] 1[31,23] 2[54,21] 3[75,21] 11[96,1] 12[97,16] 13[113,1] 14[114,16] 15[130,15] 16[145,15] 17[160,15] 18[175,15] 19[190,15] 20[205,15] 21[220,15] 22[235,15] 23[250,15] 24[265,45] 25[310,1] 26[311,1] 27[312,15] 28[327,15] 29[342,15] 30[357,15] 31[372,15] 32[387,15] 33[402,15] 34[417,15] 35[432,15] 36[447,15] 37[462,15] 38[477,15] 39[492,15] 40[507,15] 41[522,15] 42[537,15] 43[552,15] 44[567,15] 45[582,15] 46[597,15] 47[612,15] 48[627,15] 49[642,15] 50[657,15] 51[672,15] 52[687,15] 53[702,15] 54[717,15] 55[732,15] 56[747,15] 57[762,15] 58[777,15] 59[792,15] 60[807,15] 61[822,15] 62[837,15] 63[852,15] 64[867,15] 65[882,15] 66[897,15] 67[912,15] 68[927,15] 69[942,15] 70[957,15] 71[972,15] 72[987,15] 73[1002,15] 74[1017,15] 75[1032,15] 76[1047,15] 77[1062,15] 78[1077,15] 79[1092,15] 80[1107,15] 81[1122,15] 82[1137,15] 83[1152,15] 84[1167,15] 85[1182,15] 86[1197,15] 87[1212,15] 88[1227,15] 89[1242,15] 90[1257,15] 91[1272,15] 92[1287,15] 93[1302,15] 94[1317,15] 95[1332,15] 96[1347,15] 97[1362,15] 98[1377,15] 99[1392,15] 100[1407,15] 101[1422,15] 102[1437,15] 103[1452,15] 104[1467,15] 105[1482,15] 106[1497,15] 107[1512,15] 108[1527,15] 109[1542,15] 110[1557,15] 111[1572,15] 112[1587,15] 113[1602,15] 114[1617,15] 115[1632,15] 116[1647,15] 117[1662,15] 118[1677,15] 119[1692,15] 120[1707,15] 121[1722,15] 122[1737,15] 123[1752,15] 124[1767,15] 125[1782,15] 126[1797,15] 127[1812,15] 133[1827,2] 134[1829,2] 135[1831,1] 136[1832,1] 137[1833,3] 138[1836,1] 139[1837,1] 140[1838,1] 141[1839,1] 142[1840,1] 143[1841,1] 144[1842,1] 145[1843,3] 146[1846,3] 147[1849,3] 148[1852,1] 149[1853,1] 151[1854,1] 152[1855,1] 153[1856,1] 154[1857,1] 155[1858,1] 156[1859,1] 157[1860,1] 158[1861,1] 159[1862,1] 160[1863,1] 161[1864,1] 162[1865,1] 163[1866,1] 164[1867,1] 165[1868,1] 166[1869,1] 167[1870,1] 168[1871,1] 169[1872,1] 170[1873,1] 171[1874,1] 172[1875,1] 173[1876,1] 174[1877,1] 175[1878,1] 176[1879,1] 177[1880,1] 178[1881,1] 179[1882,1] 180[1883,1] 181[1884,1] 182[1885,1] 184[1886,1] 185[1887,1] 186[1888,1] 187[1889,1] 188[1890,1] 189[1891,1] 190[1892,1] 191[1893,1] 192[1894,1] 193[1895,1] 195[1896,1] 196[1897,1] 197[1898,1] 198[1899,1] 199[1900,1] 200[1901,1] 201[1902,1] 202[1903,1] 204[1904,1] 205[1905,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 144 148 149 156 157 158 159 160 161 162
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 144 148 149 156 157 158 159 160 161 162
;; live  kill	
;; rd  in  	(10)
30, 53, 74, 95, 96, 112, 113, 129, 310, 311
;; rd  gen 	(11)
309, 1842, 1852, 1853, 1859, 1860, 1861, 1862, 1863, 1864, 1865
;; rd  kill	(10)
1842, 1852, 1853, 1859, 1860, 1861, 1862, 1863, 1864, 1865

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:277 (set (reg/v:SI 156 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:277 (set (reg/v:SI 157 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:277 (set (reg/v/f:SI 158 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 160)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 159)
        (and:SI (reg:SI 160)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 149 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 159)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:286 (set (reg/v/f:SI 148 [ mm ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 492 [0x1ec])) [0 <variable>.mm+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:289 (set (reg:SI 162 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:289 (set (reg:SI 161)
        (and:SI (reg:SI 162 [ <variable>.uregs+64 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 15 14 16 2 arch/arm/mm/fault.c:289 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 2 arch/arm/mm/fault.c:289 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; rd  out 	(21)
30, 53, 74, 95, 96, 112, 113, 129, 309, 310, 311, 1842, 1852, 1853, 1859, 1860, 1861, 1862, 1863, 1864, 1865


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	
;; live  kill	 24 [cc]
;; rd  in  	(21)
30, 53, 74, 95, 96, 112, 113, 129, 309, 310, 311, 1842, 1852, 1853, 1859, 1860, 1861, 1862, 1863, 1864, 1865
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [50.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 1104506)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; rd  out 	(20)
30, 53, 74, 95, 96, 112, 113, 129, 310, 311, 1842, 1852, 1853, 1859, 1860, 1861, 1862, 1863, 1864, 1865


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 143 163 164 165 166 167 168 169 170 171 172 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	 24 [cc] 143 163 164 165 166 167 168 169 170 171 172 173
;; live  kill	
;; rd  in  	(21)
30, 53, 74, 95, 96, 112, 113, 129, 309, 310, 311, 1842, 1852, 1853, 1859, 1860, 1861, 1862, 1863, 1864, 1865
;; rd  gen 	(13)
305, 1841, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876
;; rd  kill	(12)
1841, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [50.0%] 
(code_label 19 18 20 4 22 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 164)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 23 22 24 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 163)
        (and:SI (reg:SI 164)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 24 23 25 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 166 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg:SI 163)
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 165)
        (and:SI (reg:SI 166 [ <variable>.preempt_count ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 26 25 27 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 165)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 27 26 29 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 168)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 29 27 30 4 arch/arm/mm/fault.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ mm ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 30 29 32 4 arch/arm/mm/fault.c:296 (set (reg:SI 170)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 32 30 33 4 arch/arm/mm/fault.c:296 (set (reg:SI 171)
        (ior:SI (reg:SI 168)
            (reg:SI 170))) 89 {*arm_iorsi3} (nil))

(insn 33 32 34 4 arch/arm/mm/fault.c:296 (set (reg:QI 172)
        (subreg:QI (reg:SI 171) 0)) 178 {*arm_movqi_insn} (nil))

(insn 34 33 35 4 arch/arm/mm/fault.c:296 (set (reg:SI 173)
        (zero_extend:SI (reg:QI 172))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 35 34 36 4 arch/arm/mm/fault.c:296 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 173)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 36 35 37 4 arch/arm/mm/fault.c:296 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 48 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; rd  out 	(33)
30, 53, 74, 95, 96, 112, 113, 129, 305, 310, 311, 1841, 1842, 1852, 1853, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876


;; Succ edge  48 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 153 154
;; live  kill	 14 [lr]
;; rd  in  	(33)
30, 53, 74, 95, 96, 112, 113, 129, 305, 310, 311, 1841, 1842, 1852, 1853, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876
;; rd  gen 	(4)
28, 303, 1856, 1857
;; rd  kill	(49)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1856, 1857

;; Pred edge  4 [50.0%]  (fallthru)
(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 arch/arm/mm/fault.c:304 (set (reg/f:SI 154 [ D.24547 ])
        (plus:SI (reg/v/f:SI 148 [ mm ])
            (const_int 60 [0x3c]))) 4 {*arm_addsi3} (nil))

(insn 39 38 40 5 arch/arm/mm/fault.c:304 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 40 39 41 5 arch/arm/mm/fault.c:304 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("down_read_trylock") [flags 0x41] <function_decl 0x10c30c80 down_read_trylock>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 41 40 42 5 arch/arm/mm/fault.c:304 (set (reg:SI 153 [ D.24548 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 5 arch/arm/mm/fault.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 153 [ D.24548 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 43 42 44 5 arch/arm/mm/fault.c:304 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 5 -> ( 6 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(34)
28, 53, 74, 95, 96, 112, 113, 303, 310, 311, 1841, 1842, 1852, 1853, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876


;; Succ edge  6 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 174 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 24 [cc] 174 175
;; live  kill	
;; rd  in  	(34)
28, 53, 74, 95, 96, 112, 113, 303, 310, 311, 1841, 1842, 1852, 1853, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876
;; rd  gen 	(3)
302, 1877, 1878
;; rd  kill	(2)
1877, 1878

;; Pred edge  5 [50.0%]  (fallthru)
(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 6 arch/arm/mm/fault.c:305 (set (reg:SI 175 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 6 arch/arm/mm/fault.c:305 (set (reg:SI 174)
        (and:SI (reg:SI 175 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 47 46 48 6 arch/arm/mm/fault.c:305 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 48 47 49 6 arch/arm/mm/fault.c:305 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 55)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(36)
28, 53, 74, 95, 96, 112, 113, 302, 310, 311, 1841, 1842, 1852, 1853, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 152
;; live  kill	 14 [lr]
;; rd  in  	(36)
28, 53, 74, 95, 96, 112, 113, 302, 310, 311, 1841, 1842, 1852, 1853, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878
;; rd  gen 	(3)
26, 300, 1855
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1855

;; Pred edge  6 [50.0%]  (fallthru)
(note 49 48 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 51 50 52 7 arch/arm/mm/fault.c:305 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("search_exception_tables") [flags 0x41] <function_decl 0x10e04f80 search_exception_tables>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 52 51 53 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg/f:SI 152 [ D.24555 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 7 arch/arm/mm/fault.c:305 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 152 [ D.24555 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 55 7 arch/arm/mm/fault.c:305 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 7 -> ( 48 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(37)
26, 53, 74, 95, 96, 112, 113, 300, 310, 311, 1841, 1842, 1852, 1853, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878


;; Succ edge  48 [15.0%] 
;; Succ edge  8 [85.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(39)
26, 28, 53, 74, 95, 96, 112, 113, 300, 302, 310, 311, 1841, 1842, 1852, 1853, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878
;; rd  gen 	(0)

;; rd  kill	(16)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [85.0%]  (fallthru)
(code_label 55 54 56 8 25 "" [1 uses])

(note 56 55 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 8 arch/arm/mm/fault.c:307 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 61 8 arch/arm/mm/fault.c:307 (parallel [
            (call (mem:SI (symbol_ref:SI ("down_read") [flags 0x41] <function_decl 0x10c30c00 down_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 8 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(39)
26, 28, 53, 74, 95, 96, 112, 113, 300, 302, 310, 311, 1841, 1842, 1852, 1853, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 24 [cc] 176 177
;; live  kill	
;; rd  in  	(34)
28, 53, 74, 95, 96, 112, 113, 303, 310, 311, 1841, 1842, 1852, 1853, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876
;; rd  gen 	(3)
298, 1879, 1880
;; rd  kill	(2)
1879, 1880

;; Pred edge  5 [50.0%] 
(code_label 61 58 62 9 24 "" [1 uses])

(note 62 61 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 9 arch/arm/mm/fault.c:316 (set (reg:SI 177 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 9 arch/arm/mm/fault.c:316 (set (reg:SI 176)
        (and:SI (reg:SI 177 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 65 64 66 9 arch/arm/mm/fault.c:316 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 66 65 67 9 arch/arm/mm/fault.c:316 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(36)
28, 53, 74, 95, 96, 112, 113, 298, 310, 311, 1841, 1842, 1852, 1853, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1880


;; Succ edge  10 [29.0%]  (fallthru)
;; Succ edge  11 [71.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 151
;; live  kill	 14 [lr]
;; rd  in  	(36)
28, 53, 74, 95, 96, 112, 113, 298, 310, 311, 1841, 1842, 1852, 1853, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1880
;; rd  gen 	(3)
22, 296, 1854
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1854

;; Pred edge  9 [29.0%]  (fallthru)
(note 67 66 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 10 arch/arm/mm/fault.c:317 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 69 68 70 10 arch/arm/mm/fault.c:317 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("search_exception_tables") [flags 0x41] <function_decl 0x10e04f80 search_exception_tables>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 70 69 71 10 arch/arm/mm/fault.c:317 (set (reg/f:SI 151 [ D.24560 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 10 arch/arm/mm/fault.c:316 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 151 [ D.24560 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 10 arch/arm/mm/fault.c:316 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 10 -> ( 48 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; rd  out 	(37)
22, 53, 74, 95, 96, 112, 113, 296, 310, 311, 1841, 1842, 1852, 1853, 1854, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1880


;; Succ edge  48 [15.0%] 
;; Succ edge  11 [85.0%]  (fallthru)

;; Start of basic block ( 9 8 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(45)
22, 26, 28, 53, 74, 95, 96, 112, 113, 296, 298, 300, 302, 310, 311, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880
;; rd  gen 	(3)
20, 294, 1832
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1832

;; Pred edge  9 [71.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  10 [85.0%]  (fallthru)
(code_label 73 72 74 11 26 "" [1 uses])

(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 11 arch/arm/mm/fault.c:238 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 11 arch/arm/mm/fault.c:238 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 77 76 78 11 arch/arm/mm/fault.c:238 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("find_vma") [flags 0x41] <function_decl 0x10fe6c80 find_vma>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 78 77 79 11 arch/arm/mm/fault.c:238 (set (reg/v/f:SI 136 [ vma ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 11 arch/arm/mm/fault.c:240 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 136 [ vma ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 80 79 81 11 arch/arm/mm/fault.c:240 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 11 -> ( 26 12)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(41)
20, 53, 74, 95, 96, 112, 113, 294, 310, 311, 1832, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880


;; Succ edge  26 [0.0%] 
;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 156
;; lr  def 	 24 [cc] 178
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 178
;; live  kill	
;; rd  in  	(41)
20, 53, 74, 95, 96, 112, 113, 294, 310, 311, 1832, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880
;; rd  gen 	(2)
293, 1881
;; rd  kill	(1)
1881

;; Pred edge  11 [100.0%]  (fallthru)
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 12 arch/arm/mm/fault.c:242 (set (reg:SI 178 [ <variable>.vm_start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 12 arch/arm/mm/fault.c:242 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178 [ <variable>.vm_start ])
            (reg/v:SI 156 [ addr ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 84 83 155 12 arch/arm/mm/fault.c:242 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 144)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 12 -> ( 24 13)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(42)
20, 53, 74, 95, 96, 112, 113, 293, 310, 311, 1832, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881


;; Succ edge  24 [0.0%] 
;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 25) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u117(11){ }u118(13){ }u119(25){ }u120(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(47)
17, 20, 53, 74, 95, 96, 112, 113, 283, 293, 310, 311, 1831, 1832, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894
;; rd  gen 	(2)
292, 1836
;; rd  kill	(1)
1836

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  25 [50.0%] 
(code_label 155 84 85 13 35 "" [1 uses])

(note 85 155 86 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 86 85 87 13 arch/arm/mm/fault.c:223 (set (reg:SI 138 [ D.24984 ])
        (and:SI (reg/v:SI 157 [ fsr ])
            (const_int 2048 [0x800]))) 67 {*arm_andsi3_insn} (nil))

(insn 87 86 88 13 arch/arm/mm/fault.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.24984 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 88 87 89 13 arch/arm/mm/fault.c:223 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; rd  out 	(47)
17, 20, 53, 74, 95, 96, 112, 113, 292, 310, 311, 1831, 1832, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  15 [50.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  gen 	 137
;; live  kill	
;; rd  in  	(47)
17, 20, 53, 74, 95, 96, 112, 113, 292, 310, 311, 1831, 1832, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894
;; rd  gen 	(1)
1835
;; rd  kill	(3)
1833, 1834, 1835

;; Pred edge  13 [50.0%]  (fallthru)
(note 89 88 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 93 14 arch/arm/mm/fault.c:224 (set (reg/v:SI 137 [ mask ])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; rd  out 	(48)
17, 20, 53, 74, 95, 96, 112, 113, 292, 310, 311, 1831, 1832, 1835, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  gen 	 137
;; live  kill	
;; rd  in  	(47)
17, 20, 53, 74, 95, 96, 112, 113, 292, 310, 311, 1831, 1832, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894
;; rd  gen 	(1)
1834
;; rd  kill	(3)
1833, 1834, 1835

;; Pred edge  13 [50.0%] 
(code_label 93 90 94 15 29 "" [1 uses])

(note 94 93 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 15 arch/arm/mm/fault.c:221 (set (reg/v:SI 137 [ mask ])
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; rd  out 	(48)
17, 20, 53, 74, 95, 96, 112, 113, 292, 310, 311, 1831, 1832, 1834, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(49)
17, 20, 53, 74, 95, 96, 112, 113, 292, 310, 311, 1831, 1832, 1834, 1835, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894
;; rd  gen 	(1)
291
;; rd  kill	(0)


;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 96 95 97 16 30 "" [0 uses])

(note 97 96 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 16 arch/arm/mm/fault.c:225 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 157 [ fsr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 99 98 100 16 arch/arm/mm/fault.c:225 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 102)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7300 [0x1c84])
        (nil)))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; rd  out 	(49)
17, 20, 53, 74, 95, 96, 112, 113, 291, 310, 311, 1831, 1832, 1834, 1835, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894


;; Succ edge  17 [27.0%]  (fallthru)
;; Succ edge  18 [73.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  gen 	 137
;; live  kill	
;; rd  in  	(49)
17, 20, 53, 74, 95, 96, 112, 113, 291, 310, 311, 1831, 1832, 1834, 1835, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894
;; rd  gen 	(1)
1833
;; rd  kill	(3)
1833, 1834, 1835

;; Pred edge  16 [27.0%]  (fallthru)
(note 100 99 101 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 17 arch/arm/mm/fault.c:226 (set (reg/v:SI 137 [ mask ])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; rd  out 	(48)
17, 20, 53, 74, 95, 96, 112, 113, 291, 310, 311, 1831, 1832, 1833, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc] 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 148 149 154 156 157 158
;; live  gen 	 24 [cc] 179 180
;; live  kill	
;; rd  in  	(50)
17, 20, 53, 74, 95, 96, 112, 113, 291, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894
;; rd  gen 	(3)
290, 1882, 1883
;; rd  kill	(2)
1882, 1883

;; Pred edge  16 [73.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 102 101 103 18 31 "" [1 uses])

(note 103 102 104 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 18 arch/arm/mm/fault.c:228 (set (reg:SI 180 [ <variable>.vm_flags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 18 arch/arm/mm/fault.c:228 (set (reg:SI 179)
        (and:SI (reg/v:SI 137 [ mask ])
            (reg:SI 180 [ <variable>.vm_flags ]))) 67 {*arm_andsi3_insn} (nil))

(insn 106 105 107 18 arch/arm/mm/fault.c:228 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 179)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 107 106 108 18 arch/arm/mm/fault.c:228 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; rd  out 	(52)
17, 20, 53, 74, 95, 96, 112, 113, 290, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1893, 1894


;; Succ edge  19 [71.0%]  (fallthru)
;; Succ edge  20 [29.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 147
;; live  kill	
;; rd  in  	(52)
17, 20, 53, 74, 95, 96, 112, 113, 290, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1893, 1894
;; rd  gen 	(1)
1851
;; rd  kill	(3)
1849, 1850, 1851

;; Pred edge  18 [71.0%]  (fallthru)
(note 108 107 109 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 112 19 arch/arm/mm/fault.c:251 (set (reg/v:SI 147 [ fault ])
        (const_int 131072 [0x20000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(53)
17, 20, 53, 74, 95, 96, 112, 113, 290, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1893, 1894


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 181 182 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 147 181 182 184 185
;; live  kill	 14 [lr]
;; rd  in  	(52)
17, 20, 53, 74, 95, 96, 112, 113, 290, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1893, 1894
;; rd  gen 	(7)
18, 287, 1850, 1884, 1885, 1886, 1887
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1849, 1850, 1851, 1884, 1885, 1886, 1887

;; Pred edge  18 [29.0%] 
(code_label 112 109 113 20 32 "" [1 uses])

(note 113 112 114 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 20 arch/arm/mm/fault.c:259 (set (reg:SI 182)
        (and:SI (reg/v:SI 156 [ addr ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 115 114 116 20 arch/arm/mm/fault.c:259 (set (reg:SI 181)
        (and:SI (reg:SI 182)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 156 [ addr ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 116 115 117 20 arch/arm/mm/fault.c:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.24984 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 117 116 118 20 arch/arm/mm/fault.c:259 (set (reg:SI 184)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 118 117 119 20 arch/arm/mm/fault.c:259 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 119 118 120 20 arch/arm/mm/fault.c:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 120 119 121 20 arch/arm/mm/fault.c:259 (set (reg:SI 2 r2)
        (reg:SI 181)) 167 {*arm_movsi_insn} (nil))

(insn 121 120 122 20 arch/arm/mm/fault.c:259 (set (reg:SI 3 r3)
        (reg:SI 184)) 167 {*arm_movsi_insn} (nil))

(call_insn 122 121 123 20 arch/arm/mm/fault.c:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("handle_mm_fault") [flags 0x41] <function_decl 0x10fbfc80 handle_mm_fault>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 123 122 124 20 arch/arm/mm/fault.c:259 (set (reg/v:SI 147 [ fault ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 124 123 125 20 arch/arm/mm/fault.c:260 (set (reg:SI 185)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 51 [0x33]))) 67 {*arm_andsi3_insn} (nil))

(insn 125 124 126 20 arch/arm/mm/fault.c:260 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 126 125 127 20 arch/arm/mm/fault.c:260 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 161)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 20 -> ( 27 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(56)
18, 53, 74, 95, 96, 112, 113, 287, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1893, 1894


;; Succ edge  27 [0.0%] 
;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u177(11){ }u178(13){ }u179(25){ }u180(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 24 [cc] 186
;; live  kill	
;; rd  in  	(56)
18, 53, 74, 95, 96, 112, 113, 287, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1893, 1894
;; rd  gen 	(2)
286, 1888
;; rd  kill	(1)
1888

;; Pred edge  20 [100.0%]  (fallthru)
(note 127 126 128 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 21 arch/arm/mm/fault.c:262 (set (reg:SI 186)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 129 128 130 21 arch/arm/mm/fault.c:262 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 186)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 130 129 131 21 arch/arm/mm/fault.c:262 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(57)
18, 53, 74, 95, 96, 112, 113, 286, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1893, 1894


;; Succ edge  22 [50.0%]  (fallthru)
;; Succ edge  23 [50.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 187 188
;; live  kill	
;; rd  in  	(57)
18, 53, 74, 95, 96, 112, 113, 286, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1893, 1894
;; rd  gen 	(2)
1889, 1890
;; rd  kill	(2)
1889, 1890

;; Pred edge  21 [50.0%]  (fallthru)
(note 131 130 132 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 132 131 133 22 arch/arm/mm/fault.c:263 (set (reg:SI 187 [ <variable>.maj_flt ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 696 [0x2b8])) [0 <variable>.maj_flt+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 133 132 134 22 arch/arm/mm/fault.c:263 (set (reg:SI 188)
        (plus:SI (reg:SI 187 [ <variable>.maj_flt ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 134 133 137 22 arch/arm/mm/fault.c:263 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 696 [0x2b8])) [0 <variable>.maj_flt+0 S4 A64])
        (reg:SI 188)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 22 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(59)
18, 53, 74, 95, 96, 112, 113, 286, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1893, 1894


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u192(11){ }u193(13){ }u194(25){ }u195(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 189 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 189 190
;; live  kill	
;; rd  in  	(57)
18, 53, 74, 95, 96, 112, 113, 286, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1893, 1894
;; rd  gen 	(2)
1891, 1892
;; rd  kill	(2)
1891, 1892

;; Pred edge  21 [50.0%] 
(code_label 137 134 138 23 34 "" [1 uses])

(note 138 137 139 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 23 arch/arm/mm/fault.c:265 (set (reg:SI 189 [ <variable>.min_flt ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 692 [0x2b4])) [0 <variable>.min_flt+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 140 139 141 23 arch/arm/mm/fault.c:265 (set (reg:SI 190)
        (plus:SI (reg:SI 189 [ <variable>.min_flt ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 141 140 144 23 arch/arm/mm/fault.c:265 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 149 [ tsk ])
                (const_int 692 [0x2b4])) [0 <variable>.min_flt+0 S4 A32])
        (reg:SI 190)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(59)
18, 53, 74, 95, 96, 112, 113, 286, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1894


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 12) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u200(11){ }u201(13){ }u202(25){ }u203(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc] 191 192
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 24 [cc] 191 192
;; live  kill	
;; rd  in  	(42)
20, 53, 74, 95, 96, 112, 113, 293, 310, 311, 1832, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881
;; rd  gen 	(3)
285, 1893, 1894
;; rd  kill	(2)
1893, 1894

;; Pred edge  12 [0.0%] 
(code_label 144 141 145 24 28 ("check_stack") [1 uses])

(note 145 144 146 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 146 145 147 24 arch/arm/mm/fault.c:269 (set (reg:SI 192 [ <variable>.vm_flags ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 24 [0x18])) [0 <variable>.vm_flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 147 146 148 24 arch/arm/mm/fault.c:269 (set (reg:SI 191)
        (and:SI (reg:SI 192 [ <variable>.vm_flags ])
            (const_int 256 [0x100]))) 67 {*arm_andsi3_insn} (nil))

(insn 148 147 149 24 arch/arm/mm/fault.c:269 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 191)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 149 148 150 24 arch/arm/mm/fault.c:269 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 158)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(44)
20, 53, 74, 95, 96, 112, 113, 285, 310, 311, 1832, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894


;; Succ edge  25 [29.0%]  (fallthru)
;; Succ edge  26 [71.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 135
;; live  kill	 14 [lr]
;; rd  in  	(44)
20, 53, 74, 95, 96, 112, 113, 285, 310, 311, 1832, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894
;; rd  gen 	(3)
17, 283, 1831
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1831

;; Pred edge  24 [29.0%]  (fallthru)
(note 150 149 152 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 152 150 153 25 arch/arm/mm/fault.c:269 discrim 1 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 153 152 154 25 arch/arm/mm/fault.c:269 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("expand_stack") [flags 0x41] <function_decl 0x10fe6b80 expand_stack>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 154 153 156 25 arch/arm/mm/fault.c:269 discrim 1 (set (reg:SI 135 [ D.24988 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 156 154 157 25 arch/arm/mm/fault.c:269 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.24988 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 157 156 158 25 arch/arm/mm/fault.c:269 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 155)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 25 -> ( 13 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 154 156 157 158
;; rd  out 	(45)
17, 53, 74, 95, 96, 112, 113, 283, 310, 311, 1831, 1832, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894


;; Succ edge  13 [50.0%] 
;; Succ edge  26 [50.0%]  (fallthru)

;; Start of basic block ( 24 25 11) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 149 154 156 157 158
;; live  gen 	 147
;; live  kill	
;; rd  in  	(48)
17, 20, 53, 74, 95, 96, 112, 113, 283, 285, 294, 310, 311, 1831, 1832, 1841, 1842, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894
;; rd  gen 	(1)
1849
;; rd  kill	(3)
1849, 1850, 1851

;; Pred edge  24 [71.0%] 
;; Pred edge  25 [50.0%]  (fallthru)
;; Pred edge  11 [0.0%] 
(code_label 158 157 159 26 27 "" [2 uses])

(note 159 158 160 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 26 arch/arm/mm/fault.c:239 (set (reg/v:SI 147 [ fault ])
        (const_int 65536 [0x10000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; rd  out 	(49)
17, 20, 53, 74, 95, 96, 112, 113, 283, 285, 294, 310, 311, 1831, 1832, 1841, 1842, 1849, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1893, 1894


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 26 20 22 23 19) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 154 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142 204 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 154 156 157 158
;; live  gen 	 0 [r0] 24 [cc] 141 142 204 205
;; live  kill	 14 [lr]
;; rd  in  	(70)
17, 18, 20, 53, 74, 95, 96, 112, 113, 283, 285, 286, 287, 290, 294, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894
;; rd  gen 	(5)
281, 1839, 1840, 1904, 1905
;; rd  kill	(20)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1839, 1840, 1904, 1905

;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  20 [0.0%] 
;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 161 160 162 27 33 "" [1 uses])

(note 162 161 163 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 164 27 arch/arm/mm/fault.c:323 (set (reg:SI 0 r0)
        (reg/f:SI 154 [ D.24547 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 164 163 300 27 arch/arm/mm/fault.c:323 (parallel [
            (call (mem:SI (symbol_ref:SI ("up_read") [flags 0x41] <function_decl 0x10c30e00 up_read>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 300 164 166 27 arch/arm/mm/fault.c:325 (set (reg:SI 205 [ D.24563+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 166 300 167 27 include/linux/jump_label.h:67 (set (reg/f:SI 142 [ D.24830 ])
        (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                (const_int 8 [0x8])))) 167 {*arm_movsi_insn} (nil))

(insn 167 166 168 27 include/linux/jump_label.h:67 (set (reg:SI 141 [ D.24831 ])
        (mem/v:SI (reg/f:SI 142 [ D.24830 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 168 167 169 27 include/linux/jump_label.h:67 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.24831 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 169 168 170 27 include/linux/jump_label.h:67 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 191)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 27 -> ( 28 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; rd  out 	(69)
17, 18, 20, 53, 74, 95, 96, 112, 113, 281, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1904, 1905


;; Succ edge  28 [0.0%]  (fallthru)
;; Succ edge  32 [100.0%] 

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(69)
17, 18, 20, 53, 74, 95, 96, 112, 113, 281, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1904, 1905
;; rd  gen 	(1)
280
;; rd  kill	(0)


;; Pred edge  27 [0.0%]  (fallthru)
(note 170 169 171 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 171 170 172 28 include/linux/perf_event.h:1054 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 158 [ regs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 172 171 173 28 include/linux/perf_event.h:1054 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 177)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
        (nil)))
;; End of basic block 28 -> ( 30 29)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; rd  out 	(69)
17, 18, 20, 53, 74, 95, 96, 112, 113, 280, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1904, 1905


;; Succ edge  30 [6.7%] 
;; Succ edge  29 [93.3%]  (fallthru)

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  gen 	 134
;; live  kill	
;; rd  in  	(69)
17, 18, 20, 53, 74, 95, 96, 112, 113, 280, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1904, 1905
;; rd  gen 	(1)
1830
;; rd  kill	(2)
1829, 1830

;; Pred edge  28 [93.3%]  (fallthru)
(note 173 172 174 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 177 29 include/linux/perf_event.h:1054 (set (reg/v/f:SI 134 [ regs.462 ])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 29 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 204 205
;; rd  out 	(70)
17, 18, 20, 53, 74, 95, 96, 112, 113, 280, 310, 311, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1904, 1905


;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u246(11){ }u247(13){ }u248(25){ }u249(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  gen 	 0 [r0] 1 [r1] 134 193
;; live  kill	 14 [lr]
;; rd  in  	(69)
17, 18, 20, 53, 74, 95, 96, 112, 113, 280, 310, 311, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1904, 1905
;; rd  gen 	(2)
1829, 1895
;; rd  kill	(19)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1829, 1830, 1895

;; Pred edge  28 [6.7%] 
(code_label 177 174 178 30 37 "" [1 uses])

(note 178 177 179 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 30 include/linux/perf_event.h:1043 discrim 1 (set (reg/f:SI 193)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 180 179 181 30 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 181 180 182 30 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 182 181 183 30 include/linux/perf_event.h:1043 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 183 182 184 30 include/linux/perf_event.h:1056 (set (reg/v/f:SI 134 [ regs.462 ])
        (reg/f:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
;; End of basic block 30 -> ( 31)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 204 205
;; rd  out 	(71)
17, 18, 20, 53, 74, 95, 96, 112, 113, 280, 310, 311, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1904, 1905


;; Succ edge  31 [100.0%]  (fallthru)

;; Start of basic block ( 29 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u258(11){ }u259(13){ }u260(25){ }u261(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 204 205
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 147 148 149 156 157 158 204 205
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(72)
17, 18, 20, 53, 74, 95, 96, 112, 113, 280, 310, 311, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1904, 1905
;; rd  gen 	(0)

;; rd  kill	(16)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129

;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%]  (fallthru)
(code_label 184 183 185 31 38 "" [0 uses])

(note 185 184 186 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 186 185 301 31 include/linux/perf_event.h:1058 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 134 [ regs.462 ])) 167 {*arm_movsi_insn} (nil))

(insn 301 186 302 31 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A64])
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 302 301 188 31 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 205 [ D.24563+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 188 302 189 31 include/linux/perf_event.h:1058 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 31 include/linux/perf_event.h:1058 (set (reg:DI 2 r2)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(call_insn 190 189 191 31 include/linux/perf_event.h:1058 (parallel [
            (call (mem:SI (symbol_ref:SI ("__perf_sw_event") [flags 0x41] <function_decl 0x11436b00 __perf_sw_event>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 31 -> ( 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; rd  out 	(72)
17, 18, 20, 53, 74, 95, 96, 112, 113, 280, 310, 311, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1904, 1905


;; Succ edge  32 [100.0%]  (fallthru)

;; Start of basic block ( 31 27) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u272(11){ }u273(13){ }u274(25){ }u275(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  gen 	 24 [cc] 195
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 53, 74, 95, 96, 112, 113, 280, 281, 310, 311, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1904, 1905
;; rd  gen 	(2)
277, 1896
;; rd  kill	(1)
1896

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  27 [100.0%] 
(code_label 191 190 192 32 36 "" [1 uses])

(note 192 191 193 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 32 arch/arm/mm/fault.c:326 (set (reg:SI 195)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 4 [0x4]))) 67 {*arm_andsi3_insn} (nil))

(insn 194 193 195 32 arch/arm/mm/fault.c:326 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 195)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 195 194 196 32 arch/arm/mm/fault.c:326 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 222)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 32 -> ( 33 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; rd  out 	(73)
17, 18, 20, 53, 74, 95, 96, 112, 113, 277, 310, 311, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1904, 1905


;; Succ edge  33 [50.0%]  (fallthru)
;; Succ edge  38 [50.0%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u279(11){ }u280(13){ }u281(25){ }u282(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  gen 	 24 [cc] 139 140
;; live  kill	
;; rd  in  	(73)
17, 18, 20, 53, 74, 95, 96, 112, 113, 277, 310, 311, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1904, 1905
;; rd  gen 	(3)
276, 1837, 1838
;; rd  kill	(2)
1837, 1838

;; Pred edge  32 [50.0%]  (fallthru)
(note 196 195 197 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 197 196 198 33 include/linux/jump_label.h:67 (set (reg/f:SI 140 [ D.24847 ])
        (const:SI (plus:SI (symbol_ref:SI ("perf_swevent_enabled") [flags 0xc0] <var_decl 0x1143b180 perf_swevent_enabled>)
                (const_int 24 [0x18])))) 167 {*arm_movsi_insn} (nil))

(insn 198 197 199 33 include/linux/jump_label.h:67 (set (reg:SI 139 [ D.24848 ])
        (mem/v:SI (reg/f:SI 140 [ D.24847 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 199 198 200 33 include/linux/jump_label.h:67 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.24848 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 200 199 201 33 include/linux/jump_label.h:67 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 222)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 33 -> ( 34 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; rd  out 	(75)
17, 18, 20, 53, 74, 95, 96, 112, 113, 276, 310, 311, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1904, 1905


;; Succ edge  34 [0.0%]  (fallthru)
;; Succ edge  38 [100.0%] 

;; Start of basic block ( 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u286(11){ }u287(13){ }u288(25){ }u289(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(75)
17, 18, 20, 53, 74, 95, 96, 112, 113, 276, 310, 311, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1904, 1905
;; rd  gen 	(1)
275
;; rd  kill	(0)


;; Pred edge  33 [0.0%]  (fallthru)
(note 201 200 202 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 202 201 203 34 include/linux/perf_event.h:1054 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 158 [ regs ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 203 202 204 34 include/linux/perf_event.h:1054 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 208)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 672 [0x2a0])
        (nil)))
;; End of basic block 34 -> ( 36 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; rd  out 	(75)
17, 18, 20, 53, 74, 95, 96, 112, 113, 275, 310, 311, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1904, 1905


;; Succ edge  36 [6.7%] 
;; Succ edge  35 [93.3%]  (fallthru)

;; Start of basic block ( 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u292(11){ }u293(13){ }u294(25){ }u295(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  gen 	 133
;; live  kill	
;; rd  in  	(75)
17, 18, 20, 53, 74, 95, 96, 112, 113, 275, 310, 311, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1904, 1905
;; rd  gen 	(1)
1828
;; rd  kill	(2)
1827, 1828

;; Pred edge  34 [93.3%]  (fallthru)
(note 204 203 205 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 205 204 208 35 include/linux/perf_event.h:1054 (set (reg/v/f:SI 133 [ regs.463 ])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 35 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 204 205
;; rd  out 	(76)
17, 18, 20, 53, 74, 95, 96, 112, 113, 275, 310, 311, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1904, 1905


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 34) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u297(11){ }u298(13){ }u299(25){ }u300(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 196
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158 204 205
;; live  gen 	 0 [r0] 1 [r1] 133 196
;; live  kill	 14 [lr]
;; rd  in  	(75)
17, 18, 20, 53, 74, 95, 96, 112, 113, 275, 310, 311, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1904, 1905
;; rd  gen 	(2)
1827, 1897
;; rd  kill	(19)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1827, 1828, 1897

;; Pred edge  34 [6.7%] 
(code_label 208 205 209 36 40 "" [1 uses])

(note 209 208 210 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 210 209 211 36 include/linux/perf_event.h:1043 discrim 1 (set (reg/f:SI 196)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))) 4 {*arm_addsi3} (nil))

(insn 211 210 212 36 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))

(insn 212 211 213 36 include/linux/perf_event.h:1043 discrim 1 (set (reg:SI 1 r1)
        (const_int 72 [0x48])) 167 {*arm_movsi_insn} (nil))

(call_insn 213 212 214 36 include/linux/perf_event.h:1043 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 214 213 215 36 include/linux/perf_event.h:1056 (set (reg/v/f:SI 133 [ regs.463 ])
        (reg/f:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -72 [0xffffffffffffffb8]))
        (nil)))
;; End of basic block 36 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 204 205
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 204 205
;; rd  out 	(77)
17, 18, 20, 53, 74, 95, 96, 112, 113, 275, 310, 311, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1904, 1905


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 35 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u309(11){ }u310(13){ }u311(25){ }u312(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 204 205
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 204 205
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147 148 149 156 157 158 204 205
;; live  gen 	 0 [r0] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(78)
17, 18, 20, 53, 74, 95, 96, 112, 113, 275, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1904, 1905
;; rd  gen 	(0)

;; rd  kill	(16)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129

;; Pred edge  35 [100.0%]  (fallthru)
;; Pred edge  36 [100.0%]  (fallthru)
(code_label 215 214 216 37 41 "" [0 uses])

(note 216 215 217 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 217 216 303 37 include/linux/perf_event.h:1058 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v/f:SI 133 [ regs.463 ])) 167 {*arm_movsi_insn} (nil))

(insn 303 217 304 37 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A64])
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 304 303 219 37 include/linux/perf_event.h:1058 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 205 [ D.24563+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 219 304 220 37 include/linux/perf_event.h:1058 (set (reg:SI 0 r0)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 220 219 221 37 include/linux/perf_event.h:1058 (set (reg:DI 2 r2)
        (const_int 1 [0x1])) 163 {*arm_movdi} (nil))

(call_insn 221 220 222 37 include/linux/perf_event.h:1058 (parallel [
            (call (mem:SI (symbol_ref:SI ("__perf_sw_event") [flags 0x41] <function_decl 0x11436b00 __perf_sw_event>) [0 S4 A32])
                (const_int 16 [0x10]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(78)
17, 18, 20, 53, 74, 95, 96, 112, 113, 275, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1904, 1905


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 33 32 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u323(11){ }u324(13){ }u325(25){ }u326(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 197 198
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 197 198
;; live  kill	
;; rd  in  	(80)
17, 18, 20, 53, 74, 95, 96, 112, 113, 275, 276, 277, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1904, 1905
;; rd  gen 	(3)
272, 1898, 1899
;; rd  kill	(2)
1898, 1899

;; Pred edge  33 [100.0%] 
;; Pred edge  32 [50.0%] 
;; Pred edge  37 [100.0%]  (fallthru)
(code_label 222 221 223 38 39 "" [2 uses])

(note 223 222 224 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 224 223 225 38 arch/arm/mm/fault.c:334 (set (reg:SI 198)
        (const_int 196659 [0x30033])) 167 {*arm_movsi_insn} (nil))

(insn 225 224 226 38 arch/arm/mm/fault.c:334 (set (reg:SI 197)
        (and:SI (reg/v:SI 147 [ fault ])
            (reg:SI 198))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 147 [ fault ])
            (const_int 196659 [0x30033]))
        (nil)))

(insn 226 225 227 38 arch/arm/mm/fault.c:334 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 197)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 227 226 228 38 arch/arm/mm/fault.c:334 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 282)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 38 -> ( 49 39)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(80)
17, 18, 20, 53, 74, 95, 96, 112, 113, 272, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1904, 1905


;; Succ edge  49 [100.0%] 
;; Succ edge  39 [0.0%]  (fallthru)

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u332(11){ }u333(13){ }u334(25){ }u335(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 199
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 199
;; live  kill	
;; rd  in  	(80)
17, 18, 20, 53, 74, 95, 96, 112, 113, 272, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1904, 1905
;; rd  gen 	(2)
271, 1900
;; rd  kill	(1)
1900

;; Pred edge  38 [0.0%]  (fallthru)
(note 228 227 229 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 230 39 arch/arm/mm/fault.c:337 (set (reg:SI 199)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 230 229 231 39 arch/arm/mm/fault.c:337 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 199)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 231 230 232 39 arch/arm/mm/fault.c:337 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 236)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
        (nil)))
;; End of basic block 39 -> ( 40 41)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(81)
17, 18, 20, 53, 74, 95, 96, 112, 113, 271, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1905


;; Succ edge  40 [20.7%]  (fallthru)
;; Succ edge  41 [79.3%] 

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u339(11){ }u340(13){ }u341(25){ }u342(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(81)
17, 18, 20, 53, 74, 95, 96, 112, 113, 271, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1905
;; rd  gen 	(0)

;; rd  kill	(16)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129

;; Pred edge  39 [20.7%]  (fallthru)
(note 232 231 233 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(call_insn 233 232 236 40 arch/arm/mm/fault.c:343 (parallel [
            (call (mem:SI (symbol_ref:SI ("pagefault_out_of_memory") [flags 0x41] <function_decl 0x10fb4d80 pagefault_out_of_memory>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 40 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(81)
17, 18, 20, 53, 74, 95, 96, 112, 113, 271, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1905


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 39) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u344(11){ }u345(13){ }u346(25){ }u347(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc] 200 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  gen 	 24 [cc] 200 201
;; live  kill	
;; rd  in  	(81)
17, 18, 20, 53, 74, 95, 96, 112, 113, 271, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1905
;; rd  gen 	(3)
269, 1901, 1902
;; rd  kill	(2)
1901, 1902

;; Pred edge  39 [79.3%] 
(code_label 236 233 237 41 43 "" [1 uses])

(note 237 236 238 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 239 41 arch/arm/mm/fault.c:351 (set (reg:SI 201 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 158 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 239 238 240 41 arch/arm/mm/fault.c:351 (set (reg:SI 200)
        (and:SI (reg:SI 201 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 240 239 241 41 arch/arm/mm/fault.c:351 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 200)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 241 240 242 41 arch/arm/mm/fault.c:351 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 41 -> ( 48 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 148 149 156 157 158
;; rd  out 	(83)
17, 18, 20, 53, 74, 95, 96, 112, 113, 269, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905


;; Succ edge  48 [50.0%] 
;; Succ edge  42 [50.0%]  (fallthru)

;; Start of basic block ( 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u352(11){ }u353(13){ }u354(25){ }u355(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  gen 	 24 [cc] 202
;; live  kill	
;; rd  in  	(83)
17, 18, 20, 53, 74, 95, 96, 112, 113, 269, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905
;; rd  gen 	(2)
268, 1903
;; rd  kill	(1)
1903

;; Pred edge  41 [50.0%]  (fallthru)
(note 242 241 243 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 244 42 arch/arm/mm/fault.c:354 (set (reg:SI 202)
        (and:SI (reg/v:SI 147 [ fault ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 244 243 245 42 arch/arm/mm/fault.c:354 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 202)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 245 244 246 42 arch/arm/mm/fault.c:354 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 251)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 42 -> ( 43 44)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; rd  out 	(84)
17, 18, 20, 53, 74, 95, 96, 112, 113, 268, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905


;; Succ edge  43 [39.0%]  (fallthru)
;; Succ edge  44 [61.0%] 

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u359(11){ }u360(13){ }u361(25){ }u362(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; live  gen 	 145 146
;; live  kill	
;; rd  in  	(84)
17, 18, 20, 53, 74, 95, 96, 112, 113, 268, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905
;; rd  gen 	(2)
1845, 1848
;; rd  kill	(6)
1843, 1844, 1845, 1846, 1847, 1848

;; Pred edge  42 [39.0%]  (fallthru)
(note 246 245 247 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 247 246 248 43 arch/arm/mm/fault.c:360 (set (reg/v:SI 145 [ code ])
        (const_int 196610 [0x30002])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 251 43 arch/arm/mm/fault.c:359 (set (reg/v:SI 146 [ sig ])
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 43 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; rd  out 	(86)
17, 18, 20, 53, 74, 95, 96, 112, 113, 268, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1845, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 42) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u363(11){ }u364(13){ }u365(25){ }u366(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 149 156 157 158
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(84)
17, 18, 20, 53, 74, 95, 96, 112, 113, 268, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905
;; rd  gen 	(1)
267
;; rd  kill	(0)


;; Pred edge  42 [61.0%] 
(code_label 251 248 252 44 44 "" [1 uses])

(note 252 251 253 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 254 44 arch/arm/mm/fault.c:367 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ fault ])
            (const_int 131072 [0x20000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 254 253 255 44 arch/arm/mm/fault.c:367 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 260)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 44 -> ( 46 45)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; rd  out 	(84)
17, 18, 20, 53, 74, 95, 96, 112, 113, 267, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905


;; Succ edge  46 [28.0%] 
;; Succ edge  45 [72.0%]  (fallthru)

;; Start of basic block ( 44) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u369(11){ }u370(13){ }u371(25){ }u372(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; live  gen 	 145 146
;; live  kill	
;; rd  in  	(84)
17, 18, 20, 53, 74, 95, 96, 112, 113, 267, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905
;; rd  gen 	(2)
1844, 1847
;; rd  kill	(6)
1843, 1844, 1845, 1846, 1847, 1848

;; Pred edge  44 [72.0%]  (fallthru)
(note 255 254 256 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 256 255 257 45 arch/arm/mm/fault.c:367 discrim 2 (set (reg/v:SI 145 [ code ])
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 257 256 260 45 arch/arm/mm/fault.c:366 (set (reg/v:SI 146 [ sig ])
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 45 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; rd  out 	(86)
17, 18, 20, 53, 74, 95, 96, 112, 113, 267, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1844, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 44) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u373(11){ }u374(13){ }u375(25){ }u376(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 156 157 158
;; live  gen 	 145 146
;; live  kill	
;; rd  in  	(84)
17, 18, 20, 53, 74, 95, 96, 112, 113, 267, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905
;; rd  gen 	(2)
1843, 1846
;; rd  kill	(6)
1843, 1844, 1845, 1846, 1847, 1848

;; Pred edge  44 [28.0%] 
(code_label 260 257 261 46 46 "" [1 uses])

(note 261 260 262 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 262 261 263 46 arch/arm/mm/fault.c:367 discrim 1 (set (reg/v:SI 145 [ code ])
        (const_int 196610 [0x30002])) 167 {*arm_movsi_insn} (nil))

(insn 263 262 264 46 arch/arm/mm/fault.c:366 (set (reg/v:SI 146 [ sig ])
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 46 -> ( 47)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; rd  out 	(86)
17, 18, 20, 53, 74, 95, 96, 112, 113, 267, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1846, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905


;; Succ edge  47 [100.0%]  (fallthru)

;; Start of basic block ( 43 45 46) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u377(11){ }u378(13){ }u379(25){ }u380(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 149 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(91)
17, 18, 20, 53, 74, 95, 96, 112, 113, 267, 268, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905
;; rd  gen 	(0)

;; rd  kill	(16)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129

;; Pred edge  43 [100.0%]  (fallthru)
;; Pred edge  45 [100.0%]  (fallthru)
;; Pred edge  46 [100.0%]  (fallthru)
(code_label 264 263 265 47 45 "" [0 uses])

(note 265 264 266 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 266 265 267 47 arch/arm/mm/fault.c:371 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/v:SI 145 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 267 266 268 47 arch/arm/mm/fault.c:371 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 268 267 269 47 arch/arm/mm/fault.c:371 (set (reg:SI 0 r0)
        (reg/v/f:SI 149 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(insn 269 268 270 47 arch/arm/mm/fault.c:371 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 270 269 271 47 arch/arm/mm/fault.c:371 (set (reg:SI 2 r2)
        (reg/v:SI 157 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 271 270 272 47 arch/arm/mm/fault.c:371 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ sig ])) 167 {*arm_movsi_insn} (nil))

(call_insn 272 271 275 47 arch/arm/mm/fault.c:371 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_user_fault") [flags 0x3] <function_decl 0x11459d80 __do_user_fault>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 47 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(91)
17, 18, 20, 53, 74, 95, 96, 112, 113, 267, 268, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 4 7 10 41) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u394(11){ }u395(13){ }u396(25){ }u397(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 158
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(90)
17, 18, 20, 22, 26, 30, 53, 74, 95, 96, 112, 113, 129, 269, 296, 300, 305, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905
;; rd  gen 	(0)

;; rd  kill	(16)
114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129

;; Pred edge  4 [50.0%] 
;; Pred edge  7 [15.0%] 
;; Pred edge  10 [15.0%] 
;; Pred edge  41 [50.0%] 
(code_label 275 272 276 48 23 ("no_context") [4 uses])

(note 276 275 277 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 277 276 278 48 arch/arm/mm/fault.c:375 (set (reg:SI 0 r0)
        (reg/v/f:SI 148 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 278 277 279 48 arch/arm/mm/fault.c:375 (set (reg:SI 1 r1)
        (reg/v:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 279 278 280 48 arch/arm/mm/fault.c:375 (set (reg:SI 2 r2)
        (reg/v:SI 157 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 280 279 281 48 arch/arm/mm/fault.c:375 (set (reg:SI 3 r3)
        (reg/v/f:SI 158 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 281 280 282 48 arch/arm/mm/fault.c:375 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_kernel_fault") [flags 0x3] <function_decl 0x11459c80 __do_kernel_fault>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 48 -> ( 49)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(89)
17, 18, 20, 22, 26, 30, 53, 74, 95, 96, 112, 113, 269, 296, 300, 305, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905


;; Succ edge  49 [100.0%]  (fallthru)

;; Start of basic block ( 48 38 40 47) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u407(11){ }u408(13){ }u409(25){ }u410(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 155
;; live  kill	
;; rd  in  	(100)
17, 18, 20, 22, 26, 30, 53, 74, 95, 96, 112, 113, 267, 268, 269, 271, 272, 296, 300, 305, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905
;; rd  gen 	(2)
1, 1858
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1858

;; Pred edge  48 [100.0%]  (fallthru)
;; Pred edge  38 [100.0%] 
;; Pred edge  40 [100.0%]  (fallthru)
;; Pred edge  47 [100.0%]  (fallthru)
(code_label 282 281 283 49 42 "" [1 uses])

(note 283 282 284 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 284 283 288 49 arch/arm/mm/fault.c:377 (set (reg:SI 155 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 288 284 294 49 arch/arm/mm/fault.c:377 (set (reg/i:SI 0 r0)
        (reg:SI 155 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 294 288 0 49 arch/arm/mm/fault.c:377 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 49 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(96)
1, 53, 74, 95, 96, 112, 113, 267, 268, 269, 271, 272, 296, 300, 305, 310, 311, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 8.
deleting insn with uid = 21.
deleting insn with uid = 28.
deleting insn with uid = 31.
deleting insn with uid = 151.
deleting insn with uid = 299.
rescanning insn with uid = 32.
deleting insn with uid = 32.
verify found no changes in insn with uid = 301.
verify found no changes in insn with uid = 303.
ending the processing of deferred insns

;; Function do_bad_area (do_bad_area)[0:1290]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

In insn 19, replacing
 (reg:SI 143)
 with (const_int 196609 [0x30001])
Changes to insn 19 not recognized
 Setting REG_EQUAL note


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 8.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



do_bad_area

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,3u} r2={5d,3u} r3={5d,2u} r11={1d,4u} r12={3d} r13={1d,10u,1d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d} r134={1d,1u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r138={1d,3u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} 
;;    total ref usage 313{263d,49u,1e} in 24{22 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
0[0,5] 1[5,5] 2[10,5] 3[15,5] 11[20,1] 12[21,3] 13[24,1] 14[25,2] 15[27,2] 16[29,2] 17[31,2] 18[33,2] 19[35,2] 20[37,2] 21[39,2] 22[41,2] 23[43,2] 24[45,3] 25[48,1] 26[49,1] 27[50,2] 28[52,2] 29[54,2] 30[56,2] 31[58,2] 32[60,2] 33[62,2] 34[64,2] 35[66,2] 36[68,2] 37[70,2] 38[72,2] 39[74,2] 40[76,2] 41[78,2] 42[80,2] 43[82,2] 44[84,2] 45[86,2] 46[88,2] 47[90,2] 48[92,2] 49[94,2] 50[96,2] 51[98,2] 52[100,2] 53[102,2] 54[104,2] 55[106,2] 56[108,2] 57[110,2] 58[112,2] 59[114,2] 60[116,2] 61[118,2] 62[120,2] 63[122,2] 64[124,2] 65[126,2] 66[128,2] 67[130,2] 68[132,2] 69[134,2] 70[136,2] 71[138,2] 72[140,2] 73[142,2] 74[144,2] 75[146,2] 76[148,2] 77[150,2] 78[152,2] 79[154,2] 80[156,2] 81[158,2] 82[160,2] 83[162,2] 84[164,2] 85[166,2] 86[168,2] 87[170,2] 88[172,2] 89[174,2] 90[176,2] 91[178,2] 92[180,2] 93[182,2] 94[184,2] 95[186,2] 96[188,2] 97[190,2] 98[192,2] 99[194,2] 100[196,2] 101[198,2] 102[200,2] 103[202,2] 104[204,2] 105[206,2] 106[208,2] 107[210,2] 108[212,2] 109[214,2] 110[216,2] 111[218,2] 112[220,2] 113[222,2] 114[224,2] 115[226,2] 116[228,2] 117[230,2] 118[232,2] 119[234,2] 120[236,2] 121[238,2] 122[240,2] 123[242,2] 124[244,2] 125[246,2] 126[248,2] 127[250,2] 133[252,1] 134[253,1] 135[254,1] 136[255,1] 137[256,1] 138[257,1] 139[258,1] 140[259,1] 141[260,1] 142[261,1] 143[262,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137 138 139 140 141 142
;; live  kill	
;; rd  in  	(10)
4, 9, 14, 19, 20, 23, 24, 26, 48, 49
;; rd  gen 	(11)
47, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261
;; rd  kill	(13)
45, 46, 47, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:196 (set (reg/v:SI 136 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:196 (set (reg/v:SI 137 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:196 (set (reg/v/f:SI 138 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 140)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg:SI 139)
        (and:SI (reg:SI 140)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 11 10 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/current.h:10 (set (reg/v/f:SI 135 [ tsk ])
        (mem/s/f/j:SI (plus:SI (reg:SI 139)
                (const_int 12 [0xc])) [0 <variable>.task+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:198 (set (reg/v/f:SI 134 [ mm ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 135 [ tsk ])
                (const_int 496 [0x1f0])) [0 <variable>.active_mm+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:204 (set (reg:SI 142 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:204 (set (reg:SI 141)
        (and:SI (reg:SI 142 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 15 14 16 2 arch/arm/mm/fault.c:204 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 2 arch/arm/mm/fault.c:204 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 137 138
;; rd  out 	(21)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 143
;; live  kill	 14 [lr]
;; rd  in  	(21)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261
;; rd  gen 	(1)
262
;; rd  kill	(3)
25, 26, 262

;; Pred edge  2 [39.0%]  (fallthru)
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 3 arch/arm/mm/fault.c:205 (set (reg:SI 143)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 arch/arm/mm/fault.c:205 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(insn 20 19 21 3 arch/arm/mm/fault.c:205 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 arch/arm/mm/fault.c:205 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ tsk ])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 3 arch/arm/mm/fault.c:205 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 arch/arm/mm/fault.c:205 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 arch/arm/mm/fault.c:205 (set (reg:SI 3 r3)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 28 3 arch/arm/mm/fault.c:205 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_user_fault") [flags 0x3] <function_decl 0x11459d80 __do_user_fault>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
4, 9, 14, 19, 20, 23, 24, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 137 138
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	
;; rd  in  	(21)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [61.0%] 
(code_label 28 25 29 4 51 "" [1 uses])

(note 29 28 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 4 arch/arm/mm/fault.c:207 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ mm ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 4 arch/arm/mm/fault.c:207 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 4 arch/arm/mm/fault.c:207 (set (reg:SI 2 r2)
        (reg/v:SI 137 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 4 arch/arm/mm/fault.c:207 (set (reg:SI 3 r3)
        (reg/v/f:SI 138 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 34 33 0 4 arch/arm/mm/fault.c:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("__do_kernel_fault") [flags 0x3] <function_decl 0x11459c80 __do_kernel_fault>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(21)
4, 9, 14, 19, 20, 23, 24, 26, 47, 48, 49, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
deleting insn with uid = 8.
ending the processing of deferred insns

;; Function do_translation_fault (do_translation_fault)[0:1294]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 7 5 }
;; 5 succs { 7 6 }
;; 6 succs { 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 15 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 11 count 16 (  1.8)

In insn 9, replacing
 (compare:CC (reg/v:SI 139 [ addr ])
        (reg:SI 142))
 with (compare:CC (reg/v:SI 139 [ addr ])
        (const_int -1090519041 [0xffffffffbeffffff]))
Changes to insn 9 not recognized
 Setting REG_EQUAL note

In insn 41, replacing
 (mem:SI (reg/v/f:SI 134 [ pmd_k ]) [0 S4 A32])
 with (mem:SI (plus:SI (reg/f:SI 147 [ init_mm.pgd ])
            (reg:SI 136 [ D.24612 ])) [0 S4 A32])
Changed insn 41
deferring rescan insn with uid = 41.
deferring rescan insn with uid = 41.

In insn 42, replacing
 (mem:SI (reg/v/f:SI 135 [ pmd ]) [0 S4 A32])
 with (mem:SI (plus:SI (reg:SI 153)
            (reg:SI 136 [ D.24612 ])) [0 S4 A32])
Changed insn 42
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 42.

In insn 41, replacing
 (mem:SI (plus:SI (reg/f:SI 147 [ init_mm.pgd ])
            (reg:SI 136 [ D.24612 ])) [0 S4 A32])
 with (mem:SI (plus:SI (mult:SI (reg:SI 145)
                (const_int 8 [0x8]))
            (reg/f:SI 147 [ init_mm.pgd ])) [0 S4 A32])
Changed insn 41
deferring rescan insn with uid = 41.
deferring rescan insn with uid = 41.

In insn 42, replacing
 (mem:SI (plus:SI (reg:SI 153)
            (reg:SI 136 [ D.24612 ])) [0 S4 A32])
 with (mem:SI (plus:SI (mult:SI (reg:SI 145)
                (const_int 8 [0x8]))
            (reg:SI 153)) [0 S4 A32])
Changed insn 42
deferring rescan insn with uid = 42.
deferring rescan insn with uid = 42.


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 59.
deferring deletion of insn with uid = 14.
deferring deletion of insn with uid = 13.
deferring deletion of insn with uid = 12.
Deleted 4 trivially dead insns

Number of successful forward propagations: 4



do_translation_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={5d,4u} r2={5d,4u} r3={3d} r11={1d,8u} r12={3d} r13={1d,10u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={7d,3u} r25={1d,8u} r26={1d,7u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u,1d} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={2d,2u} r138={1d} r139={1d,4u} r140={1d,1u} r141={1d,2u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,3u} r146={1d,1u} r147={1d,2u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,2u} r154={1d,1u} r155={1d,1u} 
;;    total ref usage 365{279d,85u,1e} in 40{38 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254
0[0,6] 1[6,5] 2[11,5] 3[16,3] 11[19,1] 12[20,3] 13[23,1] 14[24,2] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,7] 25[51,1] 26[52,1] 27[53,2] 28[55,2] 29[57,2] 30[59,2] 31[61,2] 32[63,2] 33[65,2] 34[67,2] 35[69,2] 36[71,2] 37[73,2] 38[75,2] 39[77,2] 40[79,2] 41[81,2] 42[83,2] 43[85,2] 44[87,2] 45[89,2] 46[91,2] 47[93,2] 48[95,2] 49[97,2] 50[99,2] 51[101,2] 52[103,2] 53[105,2] 54[107,2] 55[109,2] 56[111,2] 57[113,2] 58[115,2] 59[117,2] 60[119,2] 61[121,2] 62[123,2] 63[125,2] 64[127,2] 65[129,2] 66[131,2] 67[133,2] 68[135,2] 69[137,2] 70[139,2] 71[141,2] 72[143,2] 73[145,2] 74[147,2] 75[149,2] 76[151,2] 77[153,2] 78[155,2] 79[157,2] 80[159,2] 81[161,2] 82[163,2] 83[165,2] 84[167,2] 85[169,2] 86[171,2] 87[173,2] 88[175,2] 89[177,2] 90[179,2] 91[181,2] 92[183,2] 93[185,2] 94[187,2] 95[189,2] 96[191,2] 97[193,2] 98[195,2] 99[197,2] 100[199,2] 101[201,2] 102[203,2] 103[205,2] 104[207,2] 105[209,2] 106[211,2] 107[213,2] 108[215,2] 109[217,2] 110[219,2] 111[221,2] 112[223,2] 113[225,2] 114[227,2] 115[229,2] 116[231,2] 117[233,2] 118[235,2] 119[237,2] 120[239,2] 121[241,2] 122[243,2] 123[245,2] 124[247,2] 125[249,2] 126[251,2] 127[253,2] 133[255,1] 134[256,1] 135[257,1] 136[258,1] 137[259,2] 138[261,1] 139[262,1] 140[263,1] 141[264,1] 142[265,1] 143[266,1] 144[267,1] 145[268,1] 146[269,1] 147[270,1] 148[271,1] 149[272,1] 150[273,1] 151[274,1] 152[275,1] 153[276,1] 154[277,1] 155[278,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 140 141 142
;; live  kill	
;; rd  in  	(10)
5, 10, 15, 18, 19, 22, 23, 25, 51, 52
;; rd  gen 	(5)
50, 262, 263, 264, 265
;; rd  kill	(11)
44, 45, 46, 47, 48, 49, 50, 262, 263, 264, 265

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:407 (set (reg/v:SI 139 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:407 (set (reg/v:SI 140 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:407 (set (reg/v/f:SI 141 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:413 (set (reg:SI 142)
        (const_int -1090519041 [0xffffffffbeffffff])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:413 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ addr ])
            (reg:SI 142))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 139 [ addr ])
            (const_int -1090519041 [0xffffffffbeffffff]))
        (nil)))

(jump_insn 10 9 11 2 arch/arm/mm/fault.c:413 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7929 [0x1ef9])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(15)
5, 10, 15, 18, 19, 22, 23, 25, 50, 51, 52, 262, 263, 264, 265


;; Succ edge  3 [20.7%]  (fallthru)
;; Succ edge  4 [79.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; rd  in  	(15)
5, 10, 15, 18, 19, 22, 23, 25, 50, 51, 52, 262, 263, 264, 265
;; rd  gen 	(1)
4
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  2 [20.7%]  (fallthru)
(note 11 10 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 15 11 18 3 arch/arm/mm/fault.c:414 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("do_page_fault") [flags 0x3] <function_decl 0x1147d180 do_page_fault>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 3 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(15)
4, 10, 15, 18, 19, 22, 23, 25, 50, 51, 52, 262, 263, 264, 265


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 143 144
;; live  kill	
;; rd  in  	(15)
5, 10, 15, 18, 19, 22, 23, 25, 50, 51, 52, 262, 263, 264, 265
;; rd  gen 	(3)
48, 266, 267
;; rd  kill	(9)
44, 45, 46, 47, 48, 49, 50, 266, 267

;; Pred edge  2 [79.3%] 
(code_label 18 15 19 4 57 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/fault.c:416 (set (reg:SI 144 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 4 arch/arm/mm/fault.c:416 (set (reg:SI 143)
        (and:SI (reg:SI 144 [ <variable>.uregs+64 ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 22 21 23 4 arch/arm/mm/fault.c:416 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 4 arch/arm/mm/fault.c:416 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 4 -> ( 7 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(17)
5, 10, 15, 18, 19, 22, 23, 25, 48, 51, 52, 262, 263, 264, 265, 266, 267


;; Succ edge  7 [29.0%] 
;; Succ edge  5 [71.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 133 134 136 145 146 147 148 149 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 133 134 136 145 146 147 148 149 150
;; live  kill	 24 [cc]
;; rd  in  	(17)
5, 10, 15, 18, 19, 22, 23, 25, 48, 51, 52, 262, 263, 264, 265, 266, 267
;; rd  gen 	(10)
46, 255, 256, 258, 268, 269, 270, 271, 272, 273
;; rd  kill	(16)
44, 45, 46, 47, 48, 49, 50, 255, 256, 258, 268, 269, 270, 271, 272, 273

;; Pred edge  4 [71.0%]  (fallthru)
(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/mm/fault.c:424 (parallel [
            (set (reg/v:SI 133 [ pg ])
                (asm_operands:SI ("mrc	p15, 0, %0, c2, c0, 0") ("=r") 0 []
                     [] 8342805))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 26 25 27 5 arch/arm/mm/fault.c:424 (set (reg:SI 145)
        (lshiftrt:SI (reg/v:SI 139 [ addr ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 28 5 arch/arm/mm/fault.c:424 (set (reg:SI 136 [ D.24612 ])
        (ashift:SI (reg:SI 145)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 28 27 29 5 arch/arm/mm/fault.c:441 (set (reg/f:SI 146)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x111538a0 init_mm>)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/mm/fault.c:441 (set (reg/f:SI 147 [ init_mm.pgd ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 146)
                (const_int 36 [0x24])) [0 init_mm.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 arch/arm/mm/fault.c:441 (set (reg/v/f:SI 134 [ pmd_k ])
        (plus:SI (reg/f:SI 147 [ init_mm.pgd ])
            (reg:SI 136 [ D.24612 ]))) 4 {*arm_addsi3} (nil))

(insn 31 30 32 5 arch/arm/mm/fault.c:451 (set (reg:SI 148)
        (lshiftrt:SI (reg/v:SI 139 [ addr ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 32 31 33 5 arch/arm/mm/fault.c:451 (set (reg:SI 149)
        (and:SI (reg:SI 148)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/fault.c:451 (set (reg:SI 150)
        (mem:SI (plus:SI (mult:SI (reg:SI 149)
                    (const_int 4 [0x4]))
                (reg/v/f:SI 134 [ pmd_k ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 arch/arm/mm/fault.c:451 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 36 5 arch/arm/mm/fault.c:451 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 139 140 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 139 140 141
;; rd  out 	(26)
5, 10, 15, 18, 19, 22, 23, 25, 46, 51, 52, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273


;; Succ edge  7 [61.0%] 
;; Succ edge  6 [39.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136
;; lr  def 	 24 [cc] 135 137 151 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136
;; live  gen 	 135 137 151 152 153 154 155
;; live  kill	 24 [cc]
;; rd  in  	(26)
5, 10, 15, 18, 19, 22, 23, 25, 46, 51, 52, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273
;; rd  gen 	(7)
257, 260, 274, 275, 276, 277, 278
;; rd  kill	(15)
44, 45, 46, 47, 48, 49, 50, 257, 259, 260, 274, 275, 276, 277, 278

;; Pred edge  5 [39.0%]  (fallthru)
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 6 arch/arm/mm/fault.c:440 (set (reg:SI 152)
        (and:SI (reg/v:SI 133 [ pg ])
            (const_int -16321 [0xffffffffffffc03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 38 37 39 6 arch/arm/mm/fault.c:440 (set (reg:SI 151)
        (and:SI (reg:SI 152)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg/v:SI 133 [ pg ])
            (const_int -16384 [0xffffffffffffc000]))
        (nil)))

(insn 39 38 40 6 arch/arm/mm/fault.c:440 (set (reg:SI 153)
        (plus:SI (reg:SI 151)
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))

(insn 40 39 41 6 arch/arm/mm/fault.c:440 (set (reg/v/f:SI 135 [ pmd ])
        (plus:SI (reg:SI 153)
            (reg:SI 136 [ D.24612 ]))) 4 {*arm_addsi3} (nil))

(insn 41 40 42 6 arch/arm/mm/fault.c:455 (set (reg:SI 154)
        (mem:SI (plus:SI (mult:SI (reg:SI 145)
                    (const_int 8 [0x8]))
                (reg/f:SI 147 [ init_mm.pgd ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 6 arch/arm/mm/fault.c:455 (set (mem:SI (plus:SI (mult:SI (reg:SI 145)
                    (const_int 8 [0x8]))
                (reg:SI 153)) [0 S4 A32])
        (reg:SI 154)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 6 arch/arm/mm/fault.c:455 (set (reg:SI 155)
        (mem:SI (plus:SI (reg/v/f:SI 134 [ pmd_k ])
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 6 arch/arm/mm/fault.c:455 (set (mem:SI (plus:SI (reg/v/f:SI 135 [ pmd ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 155)) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:479 (parallel [
            (asm_operands/v ("mcr	p15, 0, %0, c7, c10, 1	@ flush_pmd") ("") 0 [
                    (reg/v/f:SI 135 [ pmd ])
                ]
                 [
                    (asm_input:SI ("r") 0)
                ] 8282573)
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 46 45 47 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/tlbflush.h:487 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8283597)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 47 46 50 6 arch/arm/mm/fault.c:456 (set (reg:SI 137 [ D.24606 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(32)
5, 10, 15, 18, 19, 22, 23, 25, 51, 52, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 137
;; live  kill	 14 [lr]
;; rd  in  	(27)
5, 10, 15, 18, 19, 22, 23, 25, 46, 48, 51, 52, 255, 256, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273
;; rd  gen 	(1)
259
;; rd  kill	(4)
24, 25, 259, 260

;; Pred edge  4 [29.0%] 
;; Pred edge  5 [61.0%] 
(code_label 50 47 51 7 58 ("bad_area") [2 uses])

(note 51 50 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 7 arch/arm/mm/fault.c:459 (set (reg:SI 0 r0)
        (reg/v:SI 139 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 7 arch/arm/mm/fault.c:459 (set (reg:SI 1 r1)
        (reg/v:SI 140 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 7 arch/arm/mm/fault.c:459 (set (reg:SI 2 r2)
        (reg/v/f:SI 141 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 55 54 56 7 arch/arm/mm/fault.c:459 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_bad_area") [flags 0x3] <function_decl 0x11459880 do_bad_area>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 56 55 57 7 arch/arm/mm/fault.c:460 (set (reg:SI 137 [ D.24606 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; rd  out 	(27)
5, 10, 15, 18, 19, 22, 23, 46, 48, 51, 52, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0] 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0] 138
;; live  kill	
;; rd  in  	(35)
5, 10, 15, 18, 19, 22, 23, 25, 46, 48, 51, 52, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278
;; rd  gen 	(2)
0, 261
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 261

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 57 56 58 8 59 "" [0 uses])

(note 58 57 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 63 58 69 8 arch/arm/mm/fault.c:461 (set (reg/i:SI 0 r0)
        (reg:SI 137 [ D.24606 ])) 167 {*arm_movsi_insn} (nil))

(insn 69 63 0 8 arch/arm/mm/fault.c:461 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(36)
0, 10, 15, 18, 19, 22, 23, 25, 46, 48, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 12.
deleting insn with uid = 13.
deleting insn with uid = 14.
deleting insn with uid = 59.
rescanning insn with uid = 41.
deleting insn with uid = 41.
rescanning insn with uid = 42.
deleting insn with uid = 42.
ending the processing of deferred insns

;; Function do_sect_fault (do_sect_fault)[0:1295]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 16, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 16 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 10.
deferring deletion of insn with uid = 9.
deferring deletion of insn with uid = 8.
deferring deletion of insn with uid = 4.
deferring deletion of insn with uid = 3.
deferring deletion of insn with uid = 2.
Deleted 6 trivially dead insns

Number of successful forward propagations: 0



do_sect_fault

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr]
;;  ref usage 	r0={4d,5u} r1={3d,3u} r2={3d,3u} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d} r135={1d} r136={1d} 
;;    total ref usage 156{135d,21u,0e} in 4{3 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,1] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,1] 134[132,1] 135[133,1] 136[134,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 134 135 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 28, 29
;; rd  gen 	(5)
1, 131, 132, 133, 134
;; rd  kill	(10)
0, 1, 2, 3, 16, 17, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 11 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 11 5 12 2 arch/arm/mm/fault.c:478 (parallel [
            (call (mem:SI (symbol_ref:SI ("do_bad_area") [flags 0x3] <function_decl 0x11459880 do_bad_area>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 12 11 16 2 arch/arm/mm/fault.c:480 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 12 22 2 arch/arm/mm/fault.c:480 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 22 16 0 2 arch/arm/mm/fault.c:480 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(13)
1, 6, 9, 11, 12, 14, 15, 28, 29, 131, 132, 133, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 2.
deleting insn with uid = 3.
deleting insn with uid = 4.
deleting insn with uid = 8.
deleting insn with uid = 9.
deleting insn with uid = 10.
ending the processing of deferred insns

;; Function do_PrefetchAbort (do_PrefetchAbort)[0:1300]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

In insn 14, replacing
 (plus:SI (reg/f:SI 138)
        (reg:SI 143))
 with (plus:SI (reg:SI 143)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Changes to insn 14 not recognized
 Setting REG_EQUAL note

In insn 16, replacing
 (mem/s/f/j:SI (reg/v/f:SI 133 [ inf ]) [0 <variable>.fn+0 S4 A32])
 with (mem/s/f/j:SI (plus:SI (reg/f:SI 138)
            (reg:SI 143)) [0 <variable>.fn+0 S4 A32])
Changed insn 16
deferring rescan insn with uid = 16.
deferring rescan insn with uid = 16.

In insn 26, replacing
 (reg/f:SI 146)
 with (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x114abbe0>)
Changes to insn 26 not profitable

In insn 34, replacing
 (reg:SI 148)
 with (const_int 0 [0x0])
Changes to insn 34 not recognized
 Setting REG_EQUAL note

In insn 40, replacing
 (reg:SI 148)
 with (const_int 0 [0x0])
Changes to insn 40 not profitable

In insn 41, replacing
 (reg:SI 148)
 with (const_int 0 [0x0])
Changes to insn 41 not recognized
 Setting REG_EQUAL note

In insn 42, replacing
 (reg/f:SI 150)
 with (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)
Changes to insn 42 not profitable

In insn 16, replacing
 (mem/s/f/j:SI (plus:SI (reg/f:SI 138)
            (reg:SI 143)) [0 <variable>.fn+0 S4 A32])
 with (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 142)
                (const_int 16 [0x10]))
            (reg/f:SI 138)) [0 <variable>.fn+0 S4 A32])
Changed insn 16
deferring rescan insn with uid = 16.
deferring rescan insn with uid = 16.


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 40.
deferring deletion of insn with uid = 19.
deferring deletion of insn with uid = 17.
Deleted 3 trivially dead insns

Number of successful forward propagations: 2



do_PrefetchAbort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,6u} r1={7d,4u} r2={7d,5u} r3={6d,2u} r11={1d,4u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,9u,1d} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,3u} r134={1d,1u} r135={1d,2u} r136={1d,5u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,2u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,3u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d} 
;;    total ref usage 467{393d,73u,1e} in 38{35 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372
0[0,7] 1[7,7] 2[14,7] 3[21,6] 11[27,1] 12[28,4] 13[32,1] 14[33,4] 15[37,3] 16[40,3] 17[43,3] 18[46,3] 19[49,3] 20[52,3] 21[55,3] 22[58,3] 23[61,3] 24[64,4] 25[68,1] 26[69,1] 27[70,3] 28[73,3] 29[76,3] 30[79,3] 31[82,3] 32[85,3] 33[88,3] 34[91,3] 35[94,3] 36[97,3] 37[100,3] 38[103,3] 39[106,3] 40[109,3] 41[112,3] 42[115,3] 43[118,3] 44[121,3] 45[124,3] 46[127,3] 47[130,3] 48[133,3] 49[136,3] 50[139,3] 51[142,3] 52[145,3] 53[148,3] 54[151,3] 55[154,3] 56[157,3] 57[160,3] 58[163,3] 59[166,3] 60[169,3] 61[172,3] 62[175,3] 63[178,3] 64[181,3] 65[184,3] 66[187,3] 67[190,3] 68[193,3] 69[196,3] 70[199,3] 71[202,3] 72[205,3] 73[208,3] 74[211,3] 75[214,3] 76[217,3] 77[220,3] 78[223,3] 79[226,3] 80[229,3] 81[232,3] 82[235,3] 83[238,3] 84[241,3] 85[244,3] 86[247,3] 87[250,3] 88[253,3] 89[256,3] 90[259,3] 91[262,3] 92[265,3] 93[268,3] 94[271,3] 95[274,3] 96[277,3] 97[280,3] 98[283,3] 99[286,3] 100[289,3] 101[292,3] 102[295,3] 103[298,3] 104[301,3] 105[304,3] 106[307,3] 107[310,3] 108[313,3] 109[316,3] 110[319,3] 111[322,3] 112[325,3] 113[328,3] 114[331,3] 115[334,3] 116[337,3] 117[340,3] 118[343,3] 119[346,3] 120[349,3] 121[352,3] 122[355,3] 123[358,3] 124[361,3] 125[364,3] 126[367,3] 127[370,3] 133[373,1] 134[374,1] 135[375,1] 136[376,1] 137[377,1] 138[378,1] 139[379,1] 140[380,1] 141[381,1] 142[382,1] 143[383,1] 144[384,1] 145[385,1] 146[386,1] 147[387,1] 148[388,1] 149[389,1] 150[390,1] 151[391,1] 152[392,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 135 136 137 138 139 140 141 142 143 144 145
;; live  kill	 14 [lr]
;; rd  in  	(10)
6, 13, 20, 26, 27, 31, 32, 36, 68, 69
;; rd  gen 	(15)
5, 66, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 33, 34, 35, 36, 64, 65, 66, 67, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:626 (set (reg/v:SI 135 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:626 (set (reg/v:SI 136 [ ifsr ])
        (reg:SI 1 r1 [ ifsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:626 (set (reg/v/f:SI 137 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:627 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:627 (set (reg:SI 139)
        (and:SI (reg/v:SI 136 [ ifsr ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/fault.c:627 (set (reg:SI 140)
        (lshiftrt:SI (reg:SI 139)
            (const_int 6 [0x6]))) 117 {*arm_shiftsi3} (nil))

(insn 11 10 12 2 arch/arm/mm/fault.c:627 (set (reg:SI 141)
        (and:SI (reg/v:SI 136 [ ifsr ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:627 (set (reg:SI 142)
        (ior:SI (reg:SI 140)
            (reg:SI 141))) 89 {*arm_iorsi3} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:627 (set (reg:SI 143)
        (ashift:SI (reg:SI 142)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:627 (set (reg/v/f:SI 133 [ inf ])
        (plus:SI (reg/f:SI 138)
            (reg:SI 143))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 143)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
        (nil)))

(insn 15 14 16 2 arch/arm/mm/fault.c:630 (set (reg:SI 144)
        (ior:SI (reg/v:SI 136 [ ifsr ])
            (const_int -2147483648 [0xffffffff80000000]))) 89 {*arm_iorsi3} (nil))

(insn 16 15 18 2 arch/arm/mm/fault.c:630 (set (reg/f:SI 145 [ <variable>.fn ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 142)
                    (const_int 16 [0x10]))
                (reg/f:SI 138)) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 16 20 2 arch/arm/mm/fault.c:630 (set (reg:SI 1 r1)
        (reg:SI 144)) 167 {*arm_movsi_insn} (nil))

(call_insn 20 18 21 2 arch/arm/mm/fault.c:630 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 145 [ <variable>.fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 21 20 22 2 arch/arm/mm/fault.c:630 (set (reg:SI 134 [ D.24714 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 2 arch/arm/mm/fault.c:630 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24714 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 2 arch/arm/mm/fault.c:630 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; rd  out 	(23)
5, 13, 20, 26, 27, 31, 32, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 148 149 150 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 146 147 148 149 150 151 152
;; live  kill	 14 [lr]
;; rd  in  	(23)
5, 13, 20, 26, 27, 31, 32, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385
;; rd  gen 	(7)
386, 387, 388, 389, 390, 391, 392
;; rd  kill	(11)
33, 34, 35, 36, 386, 387, 388, 389, 390, 391, 392

;; Pred edge  2 [0.0%]  (fallthru)
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 3 arch/arm/mm/fault.c:633 (set (reg/f:SI 146)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x114abbe0>)) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 3 arch/arm/mm/fault.c:633 (set (reg:SI 0 r0)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x114abbe0>)
        (nil)))

(insn 27 26 28 3 arch/arm/mm/fault.c:633 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 12 [0xc])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 arch/arm/mm/fault.c:633 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ ifsr ])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 arch/arm/mm/fault.c:633 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 30 29 31 3 arch/arm/mm/fault.c:633 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 31 30 32 3 arch/arm/mm/fault.c:636 (set (reg:SI 147 [ <variable>.sig ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 3 arch/arm/mm/fault.c:636 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 147 [ <variable>.sig ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 3 arch/arm/mm/fault.c:637 (set (reg:SI 148)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 3 arch/arm/mm/fault.c:637 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 35 34 36 3 arch/arm/mm/fault.c:638 (set (reg:SI 149 [ <variable>.code ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 8 [0x8])) [0 <variable>.code+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 3 arch/arm/mm/fault.c:638 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 149 [ <variable>.code ])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 3 arch/arm/mm/fault.c:639 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 3 arch/arm/mm/fault.c:640 (set (reg/f:SI 150)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)) 167 {*arm_movsi_insn} (nil))

(insn 39 38 41 3 arch/arm/mm/fault.c:640 (set (reg/f:SI 151)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 41 39 42 3 arch/arm/mm/fault.c:640 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 42 41 43 3 arch/arm/mm/fault.c:640 (set (reg:SI 0 r0)
        (reg/f:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)
        (nil)))

(insn 43 42 44 3 arch/arm/mm/fault.c:640 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 3 arch/arm/mm/fault.c:640 (set (reg:SI 2 r2)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))
        (nil)))

(insn 45 44 46 3 arch/arm/mm/fault.c:640 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ ifsr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 46 45 52 3 arch/arm/mm/fault.c:640 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x41] <function_decl 0x512d9380 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
5, 13, 20, 26, 27, 31, 32, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
5, 13, 20, 26, 27, 31, 32, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 52 46 55 4 67 "" [1 uses])

(note 55 52 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
5, 13, 20, 26, 27, 31, 32, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 17.
deleting insn with uid = 19.
deleting insn with uid = 40.
rescanning insn with uid = 16.
deleting insn with uid = 16.
ending the processing of deferred insns

;; Function do_DataAbort (do_DataAbort)[0:1298]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 4 3 }
;; 3 succs { 4 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

In insn 9, replacing
 (plus:SI (reg/f:SI 138)
        (const_int 512 [0x200]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 512 [0x200])))
Changes to insn 9 not profitable

In insn 17, replacing
 (mem/s/f/j:SI (reg/v/f:SI 133 [ inf ]) [0 <variable>.fn+0 S4 A32])
 with (mem/s/f/j:SI (plus:SI (reg/f:SI 139)
            (reg:SI 144)) [0 <variable>.fn+0 S4 A32])
Changed insn 17
deferring rescan insn with uid = 17.
deferring rescan insn with uid = 17.

In insn 27, replacing
 (reg/f:SI 147)
 with (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114abc30>)
Changes to insn 27 not profitable

In insn 35, replacing
 (reg:SI 149)
 with (const_int 0 [0x0])
Changes to insn 35 not recognized
 Setting REG_EQUAL note

In insn 41, replacing
 (reg:SI 149)
 with (const_int 0 [0x0])
Changes to insn 41 not profitable

In insn 42, replacing
 (reg:SI 149)
 with (const_int 0 [0x0])
Changes to insn 42 not recognized
 Setting REG_EQUAL note

In insn 43, replacing
 (reg/f:SI 151)
 with (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)
Changes to insn 43 not profitable

In insn 17, replacing
 (mem/s/f/j:SI (plus:SI (reg/f:SI 139)
            (reg:SI 144)) [0 <variable>.fn+0 S4 A32])
 with (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 143)
                (const_int 16 [0x10]))
            (reg/f:SI 139)) [0 <variable>.fn+0 S4 A32])
Changed insn 17
deferring rescan insn with uid = 17.
deferring rescan insn with uid = 17.


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 41.
deferring deletion of insn with uid = 20.
deferring deletion of insn with uid = 18.
Deleted 3 trivially dead insns

Number of successful forward propagations: 2



do_DataAbort

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,6u} r1={7d,4u} r2={7d,5u} r3={6d,2u} r11={1d,4u} r12={4d} r13={1d,8u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,9u,1d} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,3u} r134={1d,1u} r135={1d,2u} r136={1d,5u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,3u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d} 
;;    total ref usage 469{394d,74u,1e} in 39{36 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372
0[0,7] 1[7,7] 2[14,7] 3[21,6] 11[27,1] 12[28,4] 13[32,1] 14[33,4] 15[37,3] 16[40,3] 17[43,3] 18[46,3] 19[49,3] 20[52,3] 21[55,3] 22[58,3] 23[61,3] 24[64,4] 25[68,1] 26[69,1] 27[70,3] 28[73,3] 29[76,3] 30[79,3] 31[82,3] 32[85,3] 33[88,3] 34[91,3] 35[94,3] 36[97,3] 37[100,3] 38[103,3] 39[106,3] 40[109,3] 41[112,3] 42[115,3] 43[118,3] 44[121,3] 45[124,3] 46[127,3] 47[130,3] 48[133,3] 49[136,3] 50[139,3] 51[142,3] 52[145,3] 53[148,3] 54[151,3] 55[154,3] 56[157,3] 57[160,3] 58[163,3] 59[166,3] 60[169,3] 61[172,3] 62[175,3] 63[178,3] 64[181,3] 65[184,3] 66[187,3] 67[190,3] 68[193,3] 69[196,3] 70[199,3] 71[202,3] 72[205,3] 73[208,3] 74[211,3] 75[214,3] 76[217,3] 77[220,3] 78[223,3] 79[226,3] 80[229,3] 81[232,3] 82[235,3] 83[238,3] 84[241,3] 85[244,3] 86[247,3] 87[250,3] 88[253,3] 89[256,3] 90[259,3] 91[262,3] 92[265,3] 93[268,3] 94[271,3] 95[274,3] 96[277,3] 97[280,3] 98[283,3] 99[286,3] 100[289,3] 101[292,3] 102[295,3] 103[298,3] 104[301,3] 105[304,3] 106[307,3] 107[310,3] 108[313,3] 109[316,3] 110[319,3] 111[322,3] 112[325,3] 113[328,3] 114[331,3] 115[334,3] 116[337,3] 117[340,3] 118[343,3] 119[346,3] 120[349,3] 121[352,3] 122[355,3] 123[358,3] 124[361,3] 125[364,3] 126[367,3] 127[370,3] 133[373,1] 134[374,1] 135[375,1] 136[376,1] 137[377,1] 138[378,1] 139[379,1] 140[380,1] 141[381,1] 142[382,1] 143[383,1] 144[384,1] 145[385,1] 146[386,1] 147[387,1] 148[388,1] 149[389,1] 150[390,1] 151[391,1] 152[392,1] 153[393,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140 141 142 143 144 145 146
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 135 136 137 138 139 140 141 142 143 144 145 146
;; live  kill	 14 [lr]
;; rd  in  	(10)
6, 13, 20, 26, 27, 31, 32, 36, 68, 69
;; rd  gen 	(16)
5, 66, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386
;; rd  kill	(29)
0, 1, 2, 3, 4, 5, 6, 33, 34, 35, 36, 64, 65, 66, 67, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/fault.c:558 (set (reg/v:SI 135 [ addr ])
        (reg:SI 0 r0 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:558 (set (reg/v:SI 136 [ fsr ])
        (reg:SI 1 r1 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:558 (set (reg/v/f:SI 137 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/fault.c:559 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/fault.c:559 (set (reg/f:SI 139)
        (plus:SI (reg/f:SI 138)
            (const_int 512 [0x200]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 512 [0x200])))
        (nil)))

(insn 10 9 11 2 arch/arm/mm/fault.c:559 (set (reg:SI 140)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/fault.c:559 (set (reg:SI 141)
        (lshiftrt:SI (reg:SI 140)
            (const_int 6 [0x6]))) 117 {*arm_shiftsi3} (nil))

(insn 12 11 13 2 arch/arm/mm/fault.c:559 (set (reg:SI 142)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/fault.c:559 (set (reg:SI 143)
        (ior:SI (reg:SI 141)
            (reg:SI 142))) 89 {*arm_iorsi3} (nil))

(insn 14 13 15 2 arch/arm/mm/fault.c:559 (set (reg:SI 144)
        (ashift:SI (reg:SI 143)
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 15 14 16 2 arch/arm/mm/fault.c:559 (set (reg/v/f:SI 133 [ inf ])
        (plus:SI (reg/f:SI 139)
            (reg:SI 144))) 4 {*arm_addsi3} (nil))

(insn 16 15 17 2 arch/arm/mm/fault.c:562 (set (reg:SI 145)
        (and:SI (reg/v:SI 136 [ fsr ])
            (const_int 2147483647 [0x7fffffff]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 19 2 arch/arm/mm/fault.c:562 (set (reg/f:SI 146 [ <variable>.fn ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 143)
                    (const_int 16 [0x10]))
                (reg/f:SI 139)) [0 <variable>.fn+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 17 21 2 arch/arm/mm/fault.c:562 (set (reg:SI 1 r1)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(call_insn 21 19 22 2 arch/arm/mm/fault.c:562 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 146 [ <variable>.fn ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 22 21 23 2 arch/arm/mm/fault.c:562 (set (reg:SI 134 [ D.24678 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 2 arch/arm/mm/fault.c:562 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24678 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 2 arch/arm/mm/fault.c:562 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; rd  out 	(24)
5, 13, 20, 26, 27, 31, 32, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386


;; Succ edge  4 [100.0%] 
;; Succ edge  3 [0.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148 149 150 151 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 147 148 149 150 151 152 153
;; live  kill	 14 [lr]
;; rd  in  	(24)
5, 13, 20, 26, 27, 31, 32, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386
;; rd  gen 	(7)
387, 388, 389, 390, 391, 392, 393
;; rd  kill	(11)
33, 34, 35, 36, 387, 388, 389, 390, 391, 392, 393

;; Pred edge  2 [0.0%]  (fallthru)
(note 25 24 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 3 arch/arm/mm/fault.c:565 (set (reg/f:SI 147)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114abc30>)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 3 arch/arm/mm/fault.c:565 (set (reg:SI 0 r0)
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114abc30>)
        (nil)))

(insn 28 27 29 3 arch/arm/mm/fault.c:565 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 12 [0xc])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 arch/arm/mm/fault.c:565 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 3 arch/arm/mm/fault.c:565 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 31 30 32 3 arch/arm/mm/fault.c:565 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 32 31 33 3 arch/arm/mm/fault.c:568 (set (reg:SI 148 [ <variable>.sig ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 3 arch/arm/mm/fault.c:568 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -128 [0xffffffffffffff80])) [0 info.si_signo+0 S4 A64])
        (reg:SI 148 [ <variable>.sig ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 3 arch/arm/mm/fault.c:569 (set (reg:SI 149)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 3 arch/arm/mm/fault.c:569 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -124 [0xffffffffffffff84])) [0 info.si_errno+0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 36 35 37 3 arch/arm/mm/fault.c:570 (set (reg:SI 150 [ <variable>.code ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ inf ])
                (const_int 8 [0x8])) [0 <variable>.code+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 3 arch/arm/mm/fault.c:570 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -120 [0xffffffffffffff88])) [0 info.si_code+0 S4 A64])
        (reg:SI 150 [ <variable>.code ])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 3 arch/arm/mm/fault.c:571 (set (mem/s/f/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -116 [0xffffffffffffff8c])) [0 info._sifields._sigfault._addr+0 S4 A32])
        (reg/v:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 3 arch/arm/mm/fault.c:572 (set (reg/f:SI 151)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 42 3 arch/arm/mm/fault.c:572 (set (reg/f:SI 152)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))) 4 {*arm_addsi3} (nil))

(insn 42 40 43 3 arch/arm/mm/fault.c:572 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 43 42 44 3 arch/arm/mm/fault.c:572 (set (reg:SI 0 r0)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x1152d7e0>)
        (nil)))

(insn 44 43 45 3 arch/arm/mm/fault.c:572 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 3 arch/arm/mm/fault.c:572 (set (reg:SI 2 r2)
        (reg/f:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -128 [0xffffffffffffff80]))
        (nil)))

(insn 46 45 47 3 arch/arm/mm/fault.c:572 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ fsr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 53 3 arch/arm/mm/fault.c:572 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_notify_die") [flags 0x41] <function_decl 0x512d9380 arm_notify_die>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(31)
5, 13, 20, 26, 27, 31, 32, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(31)
5, 13, 20, 26, 27, 31, 32, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [100.0%] 
(code_label 53 47 56 4 72 "" [1 uses])

(note 56 53 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(31)
5, 13, 20, 26, 27, 31, 32, 66, 68, 69, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 18.
deleting insn with uid = 20.
deleting insn with uid = 41.
rescanning insn with uid = 17.
deleting insn with uid = 17.
ending the processing of deferred insns

;; Function hook_ifault_code (hook_ifault_code)[0:1299] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 8 (  1.6)

In insn 14, replacing
 (reg/f:SI 138)
 with (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)
Changes to insn 14 not profitable

In insn 22, replacing
 (reg/f:SI 139)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 22 not profitable

In insn 25, replacing
 (plus:SI (reg/f:SI 139)
        (reg:SI 142))
 with (plus:SI (reg:SI 142)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Changes to insn 25 not recognized
 Setting REG_EQUAL note

In insn 27, replacing
 (mem/s/j:SI (reg/f:SI 144) [0 <variable>.sig+0 S4 A32])
 with (mem/s/j:SI (plus:SI (reg:SI 143)
            (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])
Changed insn 27
deferring rescan insn with uid = 27.
deferring rescan insn with uid = 27.

In insn 28, replacing
 (reg/f:SI 139)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 28 not profitable

In insn 32, replacing
 (reg/f:SI 139)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 32 not profitable

In insn 35, replacing
 (reg:SI 141)
 with (const_int 4 [0x4])
Changes to insn 35 not profitable

In insn 37, replacing
 (plus:SI (reg/f:SI 139)
        (reg:SI 152))
 with (plus:SI (reg:SI 152)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Changes to insn 37 not recognized
 Setting REG_EQUAL note

In insn 39, replacing
 (mem/s/f/j:SI (reg/f:SI 154) [0 <variable>.name+0 S4 A32])
 with (mem/s/f/j:SI (plus:SI (reg:SI 153)
            (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])
Changed insn 39
deferring rescan insn with uid = 39.
deferring rescan insn with uid = 39.


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 38.
deferring deletion of insn with uid = 35.
deferring deletion of insn with uid = 34.
deferring deletion of insn with uid = 33.
deferring deletion of insn with uid = 32.
deferring deletion of insn with uid = 28.
deferring deletion of insn with uid = 26.
deferring deletion of insn with uid = 23.
deferring deletion of insn with uid = 22.
Deleted 9 trivially dead insns

Number of successful forward propagations: 2



hook_ifault_code

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,4u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,4u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,7u} r140={1d} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d} r145={1d} r146={1d,2u} r147={1d,3u} r148={1d} r149={1d} r150={1d} r151={1d} r152={1d,1u} r153={1d,2u} r154={1d} 
;;    total ref usage 206{152d,53u,1e} in 22{21 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 138[135,1] 139[136,1] 140[137,1] 141[138,1] 142[139,1] 143[140,1] 144[141,1] 145[142,1] 146[143,1] 147[144,1] 148[145,1] 149[146,1] 150[147,1] 151[148,1] 152[149,1] 153[150,1] 154[151,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  gen 	(6)
26, 130, 131, 132, 133, 134
;; rd  kill	(7)
25, 26, 130, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 133 [ nr ])
        (reg:SI 0 r0 [ nr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:614 (set (reg/v/f:SI 134 [ fn ])
        (reg:SI 1 r1 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 135 [ sig ])
        (reg:SI 2 r2 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/fault.c:614 (set (reg/v:SI 136 [ code ])
        (reg:SI 3 r3 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/fault.c:614 (set (reg/v/f:SI 137 [ name ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/fault.c:615 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ nr ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/fault.c:615 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 138
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(1)
135
;; rd  kill	(3)
14, 15, 135

;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 arch/arm/mm/fault.c:616 (set (reg/f:SI 138)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/mm/fault.c:616 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)
        (nil)))

(insn 15 14 16 3 arch/arm/mm/fault.c:616 (set (reg:SI 1 r1)
        (const_int 616 [0x268])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 18 3 arch/arm/mm/fault.c:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134, 135



;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  def 	 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  gen 	 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154
;; live  kill	
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(16)
136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151
;; rd  kill	(16)
136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151

;; Pred edge  2 [100.0%] 
(code_label 18 16 19 4 76 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/fault.c:618 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 24 4 arch/arm/mm/fault.c:618 (set (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 133 [ nr ])
                    (const_int 16 [0x10]))
                (reg/f:SI 139)) [0 <variable>.fn+0 S4 A32])
        (reg/v/f:SI 134 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 24 21 25 4 arch/arm/mm/fault.c:619 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 27 4 arch/arm/mm/fault.c:619 (set (reg:SI 143)
        (plus:SI (reg/f:SI 139)
            (reg:SI 142))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 142)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
        (nil)))

(insn 27 25 29 4 arch/arm/mm/fault.c:619 (set (mem/s/j:SI (plus:SI (reg:SI 143)
                (const_int 4 [0x4])) [0 <variable>.sig+0 S4 A32])
        (reg/v:SI 135 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 29 27 30 4 arch/arm/mm/fault.c:620 (set (reg:SI 146)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 30 29 31 4 arch/arm/mm/fault.c:620 (set (reg:SI 147)
        (plus:SI (reg:SI 146)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 31 30 36 4 arch/arm/mm/fault.c:620 (set (mem/s/j:SI (plus:SI (mult:SI (reg:SI 147)
                    (const_int 8 [0x8]))
                (reg/f:SI 139)) [0 <variable>.code+0 S4 A32])
        (reg/v:SI 136 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 36 31 37 4 arch/arm/mm/fault.c:621 (set (reg:SI 152)
        (ashift:SI (reg:SI 147)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 37 36 39 4 arch/arm/mm/fault.c:621 (set (reg:SI 153)
        (plus:SI (reg/f:SI 139)
            (reg:SI 152))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 152)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
        (nil)))

(insn 39 37 0 4 arch/arm/mm/fault.c:621 (set (mem/s/f/j:SI (plus:SI (reg:SI 153)
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])
        (reg/v/f:SI 137 [ name ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(32)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 22.
deleting insn with uid = 23.
deleting insn with uid = 26.
deleting insn with uid = 28.
deleting insn with uid = 32.
deleting insn with uid = 33.
deleting insn with uid = 34.
deleting insn with uid = 35.
deleting insn with uid = 38.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 39.
ending the processing of deferred insns

;; Function hook_fault_code (hook_fault_code)[0:1297] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 4 count 8 (  1.6)

In insn 15, replacing
 (reg/f:SI 138)
 with (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)
Changes to insn 15 not profitable

In insn 16, replacing
 (reg:SI 139)
 with (const_int 545 [0x221])
Changes to insn 16 not profitable

In insn 24, replacing
 (plus:SI (reg/f:SI 140)
        (reg:SI 142))
 with (plus:SI (reg:SI 142)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Changes to insn 24 not recognized
 Setting REG_EQUAL note

In insn 26, replacing
 (mem/s/f/j:SI (reg/f:SI 144) [0 <variable>.fn+0 S4 A32])
 with (mem/s/f/j:SI (plus:SI (reg:SI 143)
            (const_int 512 [0x200])) [0 <variable>.fn+0 S4 A32])
Changed insn 26
deferring rescan insn with uid = 26.
deferring rescan insn with uid = 26.

In insn 27, replacing
 (reg/f:SI 140)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 27 not profitable

In insn 32, replacing
 (mem/s/j:SI (reg/f:SI 149) [0 <variable>.sig+0 S4 A32])
 with (mem/s/j:SI (plus:SI (reg:SI 143)
            (const_int 516 [0x204])) [0 <variable>.sig+0 S4 A32])
Changed insn 32
deferring rescan insn with uid = 32.
deferring rescan insn with uid = 32.

In insn 33, replacing
 (reg/f:SI 140)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 33 not profitable

In insn 36, replacing
 (reg:SI 141)
 with (const_int 512 [0x200])
Changes to insn 36 not profitable

In insn 38, replacing
 (plus:SI (reg/f:SI 140)
        (reg:SI 154))
 with (plus:SI (reg:SI 154)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Changes to insn 38 not recognized
 Setting REG_EQUAL note

In insn 40, replacing
 (mem/s/j:SI (reg/f:SI 156) [0 <variable>.code+0 S4 A32])
 with (mem/s/j:SI (plus:SI (reg:SI 155)
            (const_int 512 [0x200])) [0 <variable>.code+0 S4 A32])
Changed insn 40
deferring rescan insn with uid = 40.
deferring rescan insn with uid = 40.

In insn 41, replacing
 (reg/f:SI 140)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 41 not profitable

In insn 44, replacing
 (reg:SI 146)
 with (const_int 516 [0x204])
Changes to insn 44 not profitable

In insn 48, replacing
 (mem/s/f/j:SI (reg/f:SI 163) [0 <variable>.name+0 S4 A32])
 with (mem/s/f/j:SI (plus:SI (reg:SI 155)
            (const_int 516 [0x204])) [0 <variable>.name+0 S4 A32])
Changed insn 48
deferring rescan insn with uid = 48.
deferring rescan insn with uid = 48.


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 47.
deferring deletion of insn with uid = 46.
deferring deletion of insn with uid = 45.
deferring deletion of insn with uid = 44.
deferring deletion of insn with uid = 43.
deferring deletion of insn with uid = 42.
deferring deletion of insn with uid = 41.
deferring deletion of insn with uid = 39.
deferring deletion of insn with uid = 36.
deferring deletion of insn with uid = 33.
deferring deletion of insn with uid = 31.
deferring deletion of insn with uid = 30.
deferring deletion of insn with uid = 29.
deferring deletion of insn with uid = 28.
deferring deletion of insn with uid = 27.
deferring deletion of insn with uid = 25.
deferring deletion of insn with uid = 22.
Deleted 17 trivially dead insns

Number of successful forward propagations: 4



hook_fault_code

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d,1u} r3={2d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,4u,1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,3u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,5u} r141={1d,1u} r142={1d,2u} r143={1d,5u} r144={1d} r145={1d} r146={1d,1u} r147={1d} r148={1d} r149={1d} r150={1d} r151={1d,2u} r152={1d,2u} r153={1d} r154={1d,2u} r155={1d,5u} r156={1d} r157={1d} r158={1d} r159={1d} r160={1d} r161={1d} r162={1d} r163={1d} 
;;    total ref usage 221{161d,59u,1e} in 23{22 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 136[133,1] 137[134,1] 138[135,1] 139[136,1] 140[137,1] 141[138,1] 142[139,1] 143[140,1] 144[141,1] 145[142,1] 146[143,1] 147[144,1] 148[145,1] 149[146,1] 150[147,1] 151[148,1] 152[149,1] 153[150,1] 154[151,1] 155[152,1] 156[153,1] 157[154,1] 158[155,1] 159[156,1] 160[157,1] 161[158,1] 162[159,1] 163[160,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135 136 137
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 134 135 136 137
;; live  kill	
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  gen 	(6)
26, 130, 131, 132, 133, 134
;; rd  kill	(7)
25, 26, 130, 131, 132, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 133 [ nr ])
        (reg:SI 0 r0 [ nr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/fault.c:543 (set (reg/v/f:SI 134 [ fn ])
        (reg:SI 1 r1 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 135 [ sig ])
        (reg:SI 2 r2 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/fault.c:543 (set (reg/v:SI 136 [ code ])
        (reg:SI 3 r3 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/fault.c:543 (set (reg/v/f:SI 137 [ name ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 name+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/fault.c:544 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ nr ])
            (const_int 31 [0x1f]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 11 10 12 2 arch/arm/mm/fault.c:544 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; rd  out 	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 138 139
;; live  kill	 14 [lr]
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(2)
135, 136
;; rd  kill	(4)
14, 15, 135, 136

;; Pred edge  2 [0.0%]  (fallthru)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 arch/arm/mm/fault.c:545 (set (reg/f:SI 138)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/mm/fault.c:545 (set (reg:SI 139)
        (const_int 545 [0x221])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/mm/fault.c:545 (set (reg:SI 0 r0)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11536b70>)
        (nil)))

(insn 16 15 17 3 arch/arm/mm/fault.c:545 (set (reg:SI 1 r1)
        (reg:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 545 [0x221])
        (nil)))

(call_insn 17 16 19 3 arch/arm/mm/fault.c:545 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
2, 5, 7, 9, 10, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136



;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 136 137
;; lr  def 	 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 136 137
;; live  gen 	 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163
;; live  kill	
;; rd  in  	(16)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134
;; rd  gen 	(24)
137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160
;; rd  kill	(24)
137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160

;; Pred edge  2 [100.0%] 
(code_label 19 17 20 4 81 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 23 4 arch/arm/mm/fault.c:547 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 23 21 24 4 arch/arm/mm/fault.c:547 (set (reg:SI 142)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 4 [0x4]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 26 4 arch/arm/mm/fault.c:547 (set (reg:SI 143)
        (plus:SI (reg/f:SI 140)
            (reg:SI 142))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 142)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
        (nil)))

(insn 26 24 32 4 arch/arm/mm/fault.c:547 (set (mem/s/f/j:SI (plus:SI (reg:SI 143)
                (const_int 512 [0x200])) [0 <variable>.fn+0 S4 A32])
        (reg/v/f:SI 134 [ fn ])) 167 {*arm_movsi_insn} (nil))

(insn 32 26 34 4 arch/arm/mm/fault.c:548 (set (mem/s/j:SI (plus:SI (reg:SI 143)
                (const_int 516 [0x204])) [0 <variable>.sig+0 S4 A32])
        (reg/v:SI 135 [ sig ])) 167 {*arm_movsi_insn} (nil))

(insn 34 32 35 4 arch/arm/mm/fault.c:549 (set (reg:SI 151)
        (ashift:SI (reg/v:SI 133 [ nr ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 35 34 37 4 arch/arm/mm/fault.c:549 (set (reg:SI 152)
        (plus:SI (reg:SI 151)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 37 35 38 4 arch/arm/mm/fault.c:549 (set (reg:SI 154)
        (ashift:SI (reg:SI 152)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 38 37 40 4 arch/arm/mm/fault.c:549 (set (reg:SI 155)
        (plus:SI (reg/f:SI 140)
            (reg:SI 154))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 154)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
        (nil)))

(insn 40 38 48 4 arch/arm/mm/fault.c:549 (set (mem/s/j:SI (plus:SI (reg:SI 155)
                (const_int 512 [0x200])) [0 <variable>.code+0 S4 A32])
        (reg/v:SI 136 [ code ])) 167 {*arm_movsi_insn} (nil))

(insn 48 40 0 4 arch/arm/mm/fault.c:550 (set (mem/s/f/j:SI (plus:SI (reg:SI 155)
                (const_int 516 [0x204])) [0 <variable>.name+0 S4 A32])
        (reg/v/f:SI 137 [ name ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(40)
2, 5, 7, 9, 10, 12, 13, 15, 26, 27, 28, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 22.
deleting insn with uid = 25.
deleting insn with uid = 27.
deleting insn with uid = 28.
deleting insn with uid = 29.
deleting insn with uid = 30.
deleting insn with uid = 31.
deleting insn with uid = 33.
deleting insn with uid = 36.
deleting insn with uid = 39.
deleting insn with uid = 41.
deleting insn with uid = 42.
deleting insn with uid = 43.
deleting insn with uid = 44.
deleting insn with uid = 45.
deleting insn with uid = 46.
deleting insn with uid = 47.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 40.
verify found no changes in insn with uid = 48.
ending the processing of deferred insns

;; Function exceptions_init (exceptions_init)[0:1301] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 9 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)

In insn 13, replacing
 (reg/f:SI 138)
 with (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x1154a280>)
Changes to insn 13 not recognized
 Setting REG_EQUAL note

In insn 15, replacing
 (reg/f:SI 136)
 with (symbol_ref:SI ("do_translation_fault") [flags 0x3] <function_decl 0x1147d280 do_translation_fault>)
Changes to insn 15 not profitable

In insn 17, replacing
 (reg:SI 137)
 with (const_int 196609 [0x30001])
Changes to insn 17 not profitable

In insn 29, replacing
 (reg/f:SI 141)
 with (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)
Changes to insn 29 not recognized
 Setting REG_EQUAL note

In insn 31, replacing
 (reg/f:SI 139)
 with (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)
Changes to insn 31 not profitable

In insn 33, replacing
 (reg:SI 140)
 with (const_int 196609 [0x30001])
Changes to insn 33 not profitable

In insn 35, replacing
 (reg/f:SI 139)
 with (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)
Changes to insn 35 not profitable

In insn 36, replacing
 (reg:SI 140)
 with (const_int 196609 [0x30001])
Changes to insn 36 not profitable

In insn 37, replacing
 (reg/f:SI 141)
 with (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)
Changes to insn 37 not profitable

In insn 38, replacing
 (reg/f:SI 141)
 with (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)
Changes to insn 38 not recognized
 Setting REG_EQUAL note

In insn 40, replacing
 (reg/f:SI 139)
 with (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)
Changes to insn 40 not profitable

In insn 42, replacing
 (reg:SI 140)
 with (const_int 196609 [0x30001])
Changes to insn 42 not profitable

In insn 50, replacing
 (reg:SI 135 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 50 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 37.
deferring deletion of insn with uid = 36.
deferring deletion of insn with uid = 35.
Deleted 3 trivially dead insns

Number of successful forward propagations: 0



exceptions_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={9d,3u} r2={9d,3u} r3={9d,3u} r11={1d,6u} r12={6d} r13={1d,14u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={7d,2u} r25={1d,6u} r26={1d,5u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,3u} r140={1d,3u} r141={1d,3u} r142={1d} r143={1d} r144={1d} 
;;    total ref usage 687{622d,65u,0e} in 35{30 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609
0[0,10] 1[10,9] 2[19,9] 3[28,9] 11[37,1] 12[38,6] 13[44,1] 14[45,6] 15[51,5] 16[56,5] 17[61,5] 18[66,5] 19[71,5] 20[76,5] 21[81,5] 22[86,5] 23[91,5] 24[96,7] 25[103,1] 26[104,1] 27[105,5] 28[110,5] 29[115,5] 30[120,5] 31[125,5] 32[130,5] 33[135,5] 34[140,5] 35[145,5] 36[150,5] 37[155,5] 38[160,5] 39[165,5] 40[170,5] 41[175,5] 42[180,5] 43[185,5] 44[190,5] 45[195,5] 46[200,5] 47[205,5] 48[210,5] 49[215,5] 50[220,5] 51[225,5] 52[230,5] 53[235,5] 54[240,5] 55[245,5] 56[250,5] 57[255,5] 58[260,5] 59[265,5] 60[270,5] 61[275,5] 62[280,5] 63[285,5] 64[290,5] 65[295,5] 66[300,5] 67[305,5] 68[310,5] 69[315,5] 70[320,5] 71[325,5] 72[330,5] 73[335,5] 74[340,5] 75[345,5] 76[350,5] 77[355,5] 78[360,5] 79[365,5] 80[370,5] 81[375,5] 82[380,5] 83[385,5] 84[390,5] 85[395,5] 86[400,5] 87[405,5] 88[410,5] 89[415,5] 90[420,5] 91[425,5] 92[430,5] 93[435,5] 94[440,5] 95[445,5] 96[450,5] 97[455,5] 98[460,5] 99[465,5] 100[470,5] 101[475,5] 102[480,5] 103[485,5] 104[490,5] 105[495,5] 106[500,5] 107[505,5] 108[510,5] 109[515,5] 110[520,5] 111[525,5] 112[530,5] 113[535,5] 114[540,5] 115[545,5] 116[550,5] 117[555,5] 118[560,5] 119[565,5] 120[570,5] 121[575,5] 122[580,5] 123[585,5] 124[590,5] 125[595,5] 126[600,5] 127[605,5] 133[610,1] 134[611,1] 135[612,1] 136[613,1] 137[614,1] 138[615,1] 139[616,1] 140[617,1] 141[618,1] 142[619,1] 143[620,1] 144[621,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(10)
9, 18, 27, 36, 37, 43, 44, 50, 103, 104
;; rd  gen 	(3)
8, 101, 611
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 45, 46, 47, 48, 49, 50, 96, 97, 98, 99, 100, 101, 102, 611

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 6 2 arch/arm/mm/fault.c:645 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 6 5 7 2 arch/arm/mm/fault.c:645 (set (reg:SI 134 [ D.24724 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/fault.c:645 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24724 ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/mm/fault.c:645 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 137 138
;; live  kill	 14 [lr]
;; rd  in  	(11)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611
;; rd  gen 	(3)
613, 614, 615
;; rd  kill	(9)
45, 46, 47, 48, 49, 50, 613, 614, 615

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/mm/fault.c:646 (set (reg/f:SI 136)
        (symbol_ref:SI ("do_translation_fault") [flags 0x3] <function_decl 0x1147d280 do_translation_fault>)) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 3 arch/arm/mm/fault.c:646 (set (reg:SI 137)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 3 arch/arm/mm/fault.c:646 (set (reg/f:SI 138)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x1154a280>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/mm/fault.c:646 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x1154a280>)
        (nil)))

(insn 14 13 15 3 arch/arm/mm/fault.c:646 (set (reg:SI 0 r0)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/mm/fault.c:646 (set (reg:SI 1 r1)
        (reg/f:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_translation_fault") [flags 0x3] <function_decl 0x1147d280 do_translation_fault>)
        (nil)))

(insn 16 15 17 3 arch/arm/mm/fault.c:646 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/mm/fault.c:646 (set (reg:SI 3 r3)
        (reg:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(call_insn 18 17 19 3 arch/arm/mm/fault.c:646 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611, 613, 614, 615


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u21(11){ }u22(13){ }u23(25){ }u24(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133
;; live  kill	 14 [lr]
;; rd  in  	(14)
8, 18, 27, 36, 37, 43, 44, 101, 103, 104, 611, 613, 614, 615
;; rd  gen 	(3)
5, 98, 610
;; rd  kill	(24)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 45, 46, 47, 48, 49, 50, 96, 97, 98, 99, 100, 101, 102, 610

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 19 18 20 4 86 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 21 20 22 4 arch/arm/mm/fault.c:650 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpu_architecture") [flags 0x41] <function_decl 0x512d9700 cpu_architecture>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 22 21 23 4 arch/arm/mm/fault.c:650 (set (reg:SI 133 [ D.24727 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 arch/arm/mm/fault.c:650 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.24727 ])
            (const_int 8 [0x8]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 arch/arm/mm/fault.c:650 (set (pc)
        (if_then_else (le (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 613, 614, 615


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 140 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 139 140 141 142 143 144
;; live  kill	 14 [lr]
;; rd  in  	(15)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 613, 614, 615
;; rd  gen 	(6)
616, 617, 618, 619, 620, 621
;; rd  kill	(12)
45, 46, 47, 48, 49, 50, 616, 617, 618, 619, 620, 621

;; Pred edge  4 [0.0%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 arch/arm/mm/fault.c:655 (set (reg/f:SI 139)
        (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 arch/arm/mm/fault.c:655 (set (reg:SI 140)
        (const_int 196609 [0x30001])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 arch/arm/mm/fault.c:655 (set (reg/f:SI 141)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/mm/fault.c:655 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)
        (nil)))

(insn 30 29 31 5 arch/arm/mm/fault.c:655 (set (reg:SI 0 r0)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/mm/fault.c:655 (set (reg:SI 1 r1)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)
        (nil)))

(insn 32 31 33 5 arch/arm/mm/fault.c:655 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/fault.c:655 (set (reg:SI 3 r3)
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(call_insn 34 33 38 5 arch/arm/mm/fault.c:655 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 38 34 39 5 arch/arm/mm/fault.c:657 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x1154a2c0>)
        (nil)))

(insn 39 38 40 5 arch/arm/mm/fault.c:657 (set (reg:SI 0 r0)
        (const_int 6 [0x6])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 arch/arm/mm/fault.c:657 (set (reg:SI 1 r1)
        (reg/f:SI 139)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("do_bad") [flags 0x3] <function_decl 0x1147d480 do_bad>)
        (nil)))

(insn 41 40 42 5 arch/arm/mm/fault.c:657 (set (reg:SI 2 r2)
        (const_int 11 [0xb])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 5 arch/arm/mm/fault.c:657 (set (reg:SI 3 r3)
        (reg:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196609 [0x30001])
        (nil)))

(call_insn 43 42 44 5 arch/arm/mm/fault.c:657 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x3] <function_decl 0x512d9400 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135
;; live  kill	
;; rd  in  	(21)
5, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621
;; rd  gen 	(2)
0, 612
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 612

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 44 43 45 6 87 "" [1 uses])

(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 50 6 arch/arm/mm/fault.c:662 (set (reg:SI 135 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 50 46 56 6 arch/arm/mm/fault.c:662 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 56 50 0 6 arch/arm/mm/fault.c:662 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(22)
0, 18, 27, 36, 37, 43, 44, 98, 103, 104, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 35.
deleting insn with uid = 36.
deleting insn with uid = 37.
ending the processing of deferred insns
