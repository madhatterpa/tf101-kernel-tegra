
;; Function parse_tag_initrd2 (parse_tag_initrd2)[0:1345] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=7
  mem: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 8 [0x8]))
expanding: r134 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 0 r0 [ tag ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg:SI 0 r0 [ tag ])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
        (const_int 8 [0x8])) [0 <variable>.u.initrd.start+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=8
  mem: (reg/f:SI 135)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=0 offset=0 
 processing const base store gid=0[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=10
  mem: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 12 [0xc]))
expanding: r134 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 0 r0 [ tag ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg:SI 0 r0 [ tag ])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
        (const_int 12 [0xc])) [0 <variable>.u.initrd.size+0 S4 A32])
 processing cselib load against insn 8
removing from active insn=8 has store
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (plus:SI (reg/f:SI 135)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=0 offset=4 
 processing const base store gid=0[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


parse_tag_initrd2

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,2u} r135={1d,2u} r136={1d,1u} r138={1d,1u} 
;;    total ref usage 34{16d,18u,0e} in 9{9 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 134 135 136 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135 136 138
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/mm/init.c:68 (set (reg/v/f:SI 134 [ tag ])
        (reg:SI 0 r0 [ tag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tag ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/mm/init.c:69 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/init.c:69 (set (reg:SI 136 [ <variable>.u.initrd.start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 8 [0x8])) [0 <variable>.u.initrd.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 10 2 arch/arm/mm/init.c:69 (set (mem/c/i:SI (reg/f:SI 135) [0 phys_initrd_start+0 S4 A32])
        (reg:SI 136 [ <variable>.u.initrd.start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ <variable>.u.initrd.start ])
        (nil)))

(insn 10 8 11 2 arch/arm/mm/init.c:70 (set (reg:SI 138 [ <variable>.u.initrd.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 12 [0xc])) [0 <variable>.u.initrd.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ tag ])
        (nil)))

(insn 11 10 12 2 arch/arm/mm/init.c:70 (set (mem/c/i:SI (plus:SI (reg/f:SI 135)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])
        (reg:SI 138 [ <variable>.u.initrd.size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ <variable>.u.initrd.size ])
        (expr_list:REG_DEAD (reg/f:SI 135)
            (nil))))

(insn 12 11 16 2 arch/arm/mm/init.c:72 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 12 22 2 arch/arm/mm/init.c:72 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 22 16 0 2 arch/arm/mm/init.c:72 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function meminfo_cmp (meminfo_cmp)[0:1352] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=7
  mem: (reg/v/f:SI 136 [ _a ])

   after canon_rtx address: (reg/v/f:SI 136 [ _a ])
expanding: r136 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (reg:SI 0 r0 [ _a ])

   after canon_rtx address: (reg:SI 0 r0 [ _a ])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:SI (reg/v/f:SI 136 [ _a ]) [0 <variable>.start+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
  mem: (reg/v/f:SI 137 [ _b ])

   after canon_rtx address: (reg/v/f:SI 137 [ _b ])
expanding: r137 into: r1
expanding: r1 into: NULL

   after cselib_expand address: (reg:SI 1 r1 [ _b ])

   after canon_rtx address: (reg:SI 1 r1 [ _b ])
  varying cselib base=2 offset = 0
 processing cselib load mem:(mem/s/j:SI (reg/v/f:SI 137 [ _b ]) [0 <variable>.start+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = false
dse: local deletions = 0, global deletions = 0, spill deletions = 0


meminfo_cmp

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d} r3={1d} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={1d,2u} r25={1d,5u} r26={1d,4u} r133={1d,1u} r134={2d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} 
;;    total ref usage 55{21d,34u,0e} in 13{13 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 136 137 138 139 140 141
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 136 137 138 139 140 141
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/mm/init.c:322 (set (reg/v/f:SI 136 [ _a ])
        (reg:SI 0 r0 [ _a ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ _a ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/init.c:322 (set (reg/v/f:SI 137 [ _b ])
        (reg:SI 1 r1 [ _b ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ _b ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/mm/init.c:324 (set (reg:SI 139 [ <variable>.start ])
        (mem/s/j:SI (reg/v/f:SI 136 [ _a ]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ _a ])
        (nil)))

(insn 8 7 9 2 arch/arm/mm/init.c:324 (set (reg:SI 138)
        (lshiftrt:SI (reg:SI 139 [ <variable>.start ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 139 [ <variable>.start ])
        (nil)))

(insn 9 8 10 2 arch/arm/mm/init.c:324 (set (reg:SI 141 [ <variable>.start ])
        (mem/s/j:SI (reg/v/f:SI 137 [ _b ]) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ _b ])
        (nil)))

(insn 10 9 11 2 arch/arm/mm/init.c:324 (set (reg:SI 140)
        (lshiftrt:SI (reg:SI 141 [ <variable>.start ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 141 [ <variable>.start ])
        (nil)))

(insn 11 10 12 2 arch/arm/mm/init.c:324 (set (reg/v:SI 133 [ cmp ])
        (minus:SI (reg:SI 138)
            (reg:SI 140))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 140)
        (expr_list:REG_DEAD (reg:SI 138)
            (nil))))

(insn 12 11 13 2 arch/arm/mm/init.c:325 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ cmp ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ cmp ])
        (nil)))

(jump_insn 13 12 14 2 arch/arm/mm/init.c:325 (set (pc)
        (if_then_else (ge (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8088 [0x1f98])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp]


;; Succ edge  4 [80.9%] 
;; Succ edge  3 [19.1%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  2 [19.1%]  (fallthru)
(note 14 13 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 18 3 arch/arm/mm/init.c:325 discrim 2 (set (reg:SI 134 [ D.25161 ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	

;; Pred edge  2 [80.9%] 
(code_label 18 15 19 4 6 "" [1 uses])

(note 19 18 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 19 23 4 arch/arm/mm/init.c:325 discrim 1 (set (reg:SI 134 [ D.25161 ])
        (gt:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 23 21 24 5 7 "" [0 uses])

(note 24 23 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 29 24 35 5 arch/arm/mm/init.c:326 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.25161 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.25161 ])
        (nil)))

(insn 35 29 0 5 arch/arm/mm/init.c:326 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function keepinitrd_setup (keepinitrd_setup)[0:1363] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
  mem: (reg/f:SI 135)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
  gid=0 offset=0 
 processing const base store gid=0[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


keepinitrd_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,2u} 
;;    total ref usage 26{13d,13u,0e} in 5{5 regular + 0 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/mm/init.c:766 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/init.c:766 (set (reg:SI 136)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 13 2 arch/arm/mm/init.c:766 (set (mem/c/i:SI (reg/f:SI 135) [0 keep_initrd+0 S4 A32])
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 13 8 19 2 arch/arm/mm/init.c:768 (set (reg/i:SI 0 r0)
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 19 13 0 2 arch/arm/mm/init.c:768 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function early_initrd (early_initrd)[0:1343] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
  mem: (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a58100 memparse>)

   after canon_rtx address: (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a58100 memparse>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -4 [0xfffffffffffffffc]))
  gid=1 offset=-4 
 processing const load gid=1[-4..0)
mems_found = 0, cannot_delete = true

**scanning insn=12
  mem: (reg/f:SI 134 [ endp.338 ])

   after canon_rtx address: (reg/f:SI 134 [ endp.338 ])
expanding: r134 into: NULL

   after cselib_expand address: (reg/f:SI 134 [ endp.338 ])

   after canon_rtx address: (reg/f:SI 134 [ endp.338 ])
  varying cselib base=4 offset = 0
 processing cselib load mem:(mem:QI (reg/f:SI 134 [ endp.338 ]) [0 S1 A8])
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a58100 memparse>)

   after canon_rtx address: (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a58100 memparse>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=23
  mem: (reg/f:SI 141)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=2 offset=0 
 processing const base store gid=2[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=26
  mem: (plus:SI (reg/f:SI 141)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=2 offset=4 
 processing const base store gid=2[4..8)
expanding: r146 into: r0
expanding: r0 into: NULL
    trying store in insn=23 gid=2[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1 is frame related group 1(0+0): n  p 
group 2(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


early_initrd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,6u} r1={5d,2u} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,6u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,6u,1d} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,2u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,2u} r146={1d,1u} r148={1d,1u} 
;;    total ref usage 295{256d,38u,1e} in 18{16 regular + 2 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 138 139 148
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 138 139 148
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 8 2 arch/arm/mm/init.c:45 (set (reg/f:SI 138)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 8 6 9 2 arch/arm/mm/init.c:45 (set (reg:SI 1 r1)
        (reg/f:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))

(call_insn 9 8 43 2 arch/arm/mm/init.c:45 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a58100 memparse>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 43 9 11 2 arch/arm/mm/init.c:45 (set (reg:SI 148 [ D.24930 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 11 43 12 2 arch/arm/mm/init.c:46 (set (reg/f:SI 134 [ endp.338 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 endp+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/init.c:46 (set (reg:SI 139)
        (zero_extend:SI (mem:QI (reg/f:SI 134 [ endp.338 ]) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 13 12 14 2 arch/arm/mm/init.c:46 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 44 [0x2c]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(jump_insn 14 13 15 2 arch/arm/mm/init.c:46 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8010 [0x1f4a])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148


;; Succ edge  3 [19.9%]  (fallthru)
;; Succ edge  4 [80.1%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 141 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148
;; live  gen 	 0 [r0] 1 [r1] 140 141 146
;; live  kill	 14 [lr]

;; Pred edge  2 [19.9%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 arch/arm/mm/init.c:47 (set (reg/f:SI 140)
        (plus:SI (reg/f:SI 134 [ endp.338 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 134 [ endp.338 ])
        (nil)))

(insn 17 16 18 3 arch/arm/mm/init.c:47 (set (reg:SI 0 r0)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140)
        (nil)))

(insn 18 17 19 3 arch/arm/mm/init.c:47 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 18 45 3 arch/arm/mm/init.c:47 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memparse") [flags 0x41] <function_decl 0x10a58100 memparse>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 45 19 21 3 arch/arm/mm/init.c:47 (set (reg:SI 146 [ D.24936 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 21 45 23 3 arch/arm/mm/init.c:49 (set (reg/f:SI 141)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 23 21 26 3 arch/arm/mm/init.c:49 (set (mem/c/i:SI (reg/f:SI 141) [0 phys_initrd_start+0 S4 A32])
        (reg:SI 148 [ D.24930 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ D.24930 ])
        (nil)))

(insn 26 23 27 3 arch/arm/mm/init.c:50 (set (mem/c/i:SI (plus:SI (reg/f:SI 141)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])
        (reg:SI 146 [ D.24936 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.24936 ])
        (expr_list:REG_DEAD (reg/f:SI 141)
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [80.1%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 27 26 28 4 15 "" [1 uses])

(note 28 27 33 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 33 28 39 4 arch/arm/mm/init.c:53 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 39 33 0 4 arch/arm/mm/init.c:53 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function parse_tag_initrd (parse_tag_initrd)[0:1344] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 8 [0x8]))
expanding: r134 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
        (const_int 8 [0x8])) [0 <variable>.u.initrd.start+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
  mem: (reg/f:SI 136)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=1 offset=0 
 processing const base store gid=1[0..4)
expanding: r138 into: (plus:SI (value:SI)
    (const_int 1073741824 [0x40000000]))
expanding value SI into: r137
expanding: r137 into: NULL
mems_found = 1, cannot_delete = false

**scanning insn=14
  mem: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 12 [0xc]))
expanding: r134 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 134 [ tag ])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
        (const_int 12 [0xc])) [0 <variable>.u.initrd.size+0 S4 A32])
 processing cselib load against insn 12
removing from active insn=12 has store
mems_found = 0, cannot_delete = true

**scanning insn=15
  mem: (plus:SI (reg/f:SI 136)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=1 offset=4 
 processing const base store gid=1[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


parse_tag_initrd

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={4d,4u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,2u} r135={1d,1u} r136={1d,2u} r137={1d,1u} r138={1d,1u} r140={1d,1u} 
;;    total ref usage 158{136d,22u,0e} in 13{12 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 140
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135 136 137 138 140
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/mm/init.c:57 (set (reg/v/f:SI 134 [ tag ])
        (reg:SI 0 r0 [ tag ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ tag ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/mm/init.c:58 (set (reg/f:SI 135)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10ee9180>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/init.c:58 (set (reg:SI 0 r0)
        (reg/f:SI 135)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10ee9180>)
            (nil))))

(call_insn 8 7 9 2 arch/arm/mm/init.c:58 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 10 2 arch/arm/mm/init.c:60 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/init.c:60 (set (reg:SI 137 [ <variable>.u.initrd.start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 8 [0x8])) [0 <variable>.u.initrd.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/init.c:60 (set (reg:SI 138)
        (plus:SI (reg:SI 137 [ <variable>.u.initrd.start ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 137 [ <variable>.u.initrd.start ])
        (nil)))

(insn 12 11 14 2 arch/arm/mm/init.c:60 (set (mem/c/i:SI (reg/f:SI 136) [0 phys_initrd_start+0 S4 A32])
        (reg:SI 138)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 14 12 15 2 arch/arm/mm/init.c:61 (set (reg:SI 140 [ <variable>.u.initrd.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ tag ])
                (const_int 12 [0xc])) [0 <variable>.u.initrd.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 134 [ tag ])
        (nil)))

(insn 15 14 16 2 arch/arm/mm/init.c:61 (set (mem/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])
        (reg:SI 140 [ <variable>.u.initrd.size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ <variable>.u.initrd.size ])
        (expr_list:REG_DEAD (reg/f:SI 136)
            (nil))))

(insn 16 15 20 2 arch/arm/mm/init.c:63 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 20 16 26 2 arch/arm/mm/init.c:63 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 26 20 0 2 arch/arm/mm/init.c:63 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function free_initrd_mem (free_initrd_mem)[0:1362]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
  mem: (reg/f:SI 175)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
  mem: (plus:SI (reg/v:SI 164 [ start.582 ])
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:SI (reg/v:SI 164 [ start.582 ])
    (const_int -4 [0xfffffffffffffffc]))
expanding: r164 into: NULL

   after cselib_expand address: (plus:SI (reg/v:SI 164 [ start.582 ])
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:SI (reg/v:SI 164 [ start.582 ])
    (const_int -4 [0xfffffffffffffffc]))
  varying cselib base=1 offset = -4
 processing cselib store [-4..0)
mems_found = 1, cannot_delete = false

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=59
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
  mem: (reg/f:SI 182)

   after canon_rtx address: (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)
  gid=1 offset=0 
 processing const load gid=1[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=67
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=76
  mem: (reg/f:SI 194)

   after canon_rtx address: (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)
  gid=2 offset=0 
 processing const load gid=2[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=80
  mem: (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>)

   after canon_rtx address: (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=82
  mem: (plus:SI (reg/v/f:SI 168 [ page ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 168 [ page ])
    (const_int 16 [0x10]))
expanding: r168 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r187
expanding: r187 into: NULL
expanding value SI into: r166
expanding: r166 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/f:SI 187 [ mem_map ])
        (reg:SI 166 [ ivtmp.563 ]))
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (plus:SI (reg/f:SI 187 [ mem_map ])
        (reg:SI 166 [ ivtmp.563 ]))
    (const_int 16 [0x10]))
  varying cselib base=77 offset = 16
 processing cselib store [16..20)
mems_found = 1, cannot_delete = false

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=85
  mem: (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>)

   after canon_rtx address: (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>)
  gid=4 offset=0 
 processing const load gid=4[0..4)
removing from active insn=82 has store

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=92
mems_found = 0, cannot_delete = true

**scanning insn=94
mems_found = 0, cannot_delete = true

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=102
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=5 offset=0 
 processing const load gid=5[0..4)

**scanning insn=105
mems_found = 0, cannot_delete = true

**scanning insn=106
mems_found = 0, cannot_delete = true

**scanning insn=107
mems_found = 0, cannot_delete = true

**scanning insn=108
  mem: (reg/f:SI 191)

   after canon_rtx address: (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)
  gid=1 offset=0 
 processing const base store gid=1[0..4)
expanding: r193 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: (minus:SI (value:SI)
    (value:SI))
expanding value SI into: r172
(reg:SI 172 [ totalram_pages.414 ])
expanding value SI into: r169
(reg/v:SI 169 [ pfn ])
expanding value SI into: r165
expanding: r165 into: NULL
mems_found = 1, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


free_initrd_mem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={7d,4u} r2={5d,1u} r3={4d} r11={1d,12u} r12={4d} r13={1d,15u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={7d,4u} r25={1d,12u} r26={1d,11u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r164={2d,2u} r165={2d,3u} r166={2d,2u} r167={1d,2u} r168={1d,3u} r169={1d,4u} r170={2d,2u} r171={1d,2u} r172={1d,1u} r173={1d,3u} r174={1d,2u,1d} r175={1d,1u} r176={1d,1u} r177={1d,1u,1d} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r187={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r198={1d,1u} 
;;    total ref usage 513{404d,107u,2e} in 53{50 regular + 3 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 173 174 175 176
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 173 174 175 176
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 36 0 33 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 33 36 34 2 arch/arm/mm/init.c:755 (set (reg/v:SI 173 [ start ])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ start ])
        (nil)))

(insn 34 33 35 2 arch/arm/mm/init.c:755 (set (reg/v:SI 174 [ end ])
        (reg:SI 1 r1 [ end ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ end ])
        (nil)))

(note 35 34 38 2 NOTE_INSN_FUNCTION_BEG)

(insn 38 35 39 2 arch/arm/mm/init.c:756 (set (reg/f:SI 175)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 2 arch/arm/mm/init.c:756 (set (reg:SI 176 [ keep_initrd ])
        (mem/c/i:SI (reg/f:SI 175) [0 keep_initrd+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 175)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 keep_initrd+0 S4 A32])
            (nil))))

(insn 40 39 41 2 arch/arm/mm/init.c:756 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 176 [ keep_initrd ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 176 [ keep_initrd ])
        (nil)))

(jump_insn 41 40 42 2 arch/arm/mm/init.c:756 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  12 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174
;; lr  def 	 164 170 177 178 179 180 198
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; live  gen 	 164 170 177 178 179 180 198
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 42 41 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 3 arch/arm/mm/init.c:757 (set (reg:SI 178)
        (plus:SI (reg/v:SI 174 [ end ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 44 43 45 3 arch/arm/mm/init.c:757 (set (reg:SI 177)
        (plus:SI (reg:SI 178)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_EQUAL (plus:SI (reg/v:SI 174 [ end ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 45 44 46 3 arch/arm/mm/init.c:757 (set (reg:SI 180)
        (and:SI (reg:SI 177)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(insn 46 45 47 3 arch/arm/mm/init.c:757 (set (reg:SI 179)
        (and:SI (reg:SI 180)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_EQUAL (and:SI (reg:SI 177)
                (const_int -4096 [0xfffffffffffff000]))
            (nil))))

(insn 47 46 48 3 arch/arm/mm/init.c:757 (set (reg/v:SI 170 [ count ])
        (minus:SI (reg:SI 179)
            (reg/v:SI 173 [ start ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn 48 47 52 3 arch/arm/mm/init.c:757 (set (reg/v:SI 164 [ start.582 ])
        (reg/v:SI 173 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 52 48 58 3 arch/arm/mm/init.c:445 (set (reg:SI 198)
        (const_int -402792720 [0xffffffffe7fddef0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170 198
;; lr  def 	 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  gen 	 170
;; live  kill	

;; Pred edge  5 [91.0%] 
(code_label 58 52 51 4 26 "" [1 uses])

(note 51 58 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 53 51 54 4 arch/arm/mm/init.c:445 (set (mem:SI (plus:SI (reg/v:SI 164 [ start.582 ])
                (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])
        (reg:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -402792720 [0xffffffffe7fddef0])
        (nil)))

(insn 54 53 55 4 arch/arm/mm/init.c:444 discrim 2 (set (reg/v:SI 170 [ count ])
        (plus:SI (reg/v:SI 170 [ count ])
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198


;; Succ edge  5 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 164 170
;; lr  def 	 24 [cc] 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  gen 	 24 [cc] 164
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru,dfs_back)
(code_label 55 54 56 5 25 "" [0 uses])

(note 56 55 57 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 59 5 arch/arm/mm/init.c:444 discrim 2 (set (reg/v:SI 164 [ start.582 ])
        (plus:SI (reg/v:SI 164 [ start.582 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 59 57 60 5 arch/arm/mm/init.c:444 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 170 [ count ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 60 59 61 5 arch/arm/mm/init.c:444 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 5 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 164 170 173 174 198


;; Succ edge  4 [91.0%] 
;; Succ edge  6 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 173 174
;; lr  def 	 165 166 167 169 171 172 182 183 184 185 194 196
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 173 174
;; live  gen 	 165 166 167 169 171 172 182 183 184 185 194 196
;; live  kill	

;; Pred edge  5 [9.0%]  (fallthru,loop_exit)
(note 61 60 62 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 6 arch/arm/mm/init.c:758 (set (reg/f:SI 182)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 6 arch/arm/mm/init.c:758 (set (reg:SI 172 [ totalram_pages.414 ])
        (mem/c/i:SI (reg/f:SI 182) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>) [0 totalram_pages+0 S4 A32])
            (nil))))

(insn 64 63 65 6 arch/arm/mm/init.c:758 (set (reg:SI 183)
        (plus:SI (reg/v:SI 173 [ start ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 173 [ start ])
        (nil)))

(insn 65 64 66 6 arch/arm/mm/init.c:758 (set (reg/v:SI 169 [ pfn ])
        (lshiftrt:SI (reg:SI 183)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 66 65 67 6 arch/arm/mm/init.c:758 (set (reg:SI 184)
        (plus:SI (reg/v:SI 174 [ end ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 174 [ end ])
        (nil)))

(insn 67 66 68 6 arch/arm/mm/init.c:758 (set (reg:SI 171 [ D.25487 ])
        (lshiftrt:SI (reg:SI 184)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 68 67 69 6 arch/arm/mm/init.c:421 (set (reg:SI 185)
        (minus:SI (reg:SI 171 [ D.25487 ])
            (reg/v:SI 169 [ pfn ]))) 28 {*arm_subsi3_insn} (nil))

(insn 69 68 70 6 arch/arm/mm/init.c:421 (set (reg/v:SI 167 [ size ])
        (ashift:SI (reg:SI 185)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(insn 70 69 71 6 arch/arm/mm/init.c:421 (set (reg:SI 166 [ ivtmp.563 ])
        (ashift:SI (reg/v:SI 169 [ pfn ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 71 70 75 6 arch/arm/mm/init.c:421 (set (reg/v:SI 165 [ pfn.581 ])
        (reg/v:SI 169 [ pfn ])) 167 {*arm_movsi_insn} (nil))

(insn 75 71 81 6 arch/arm/mm/init.c:424 (set (reg/f:SI 194)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 81 75 90 6 include/linux/mm.h:417 (set (reg:SI 196)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u50(11){ }u51(13){ }u52(25){ }u53(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 194 196
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 165 166 168 187
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  gen 	 0 [r0] 1 [r1] 165 166 168 187
;; live  kill	 14 [lr]

;; Pred edge  8 [91.0%] 
(code_label 90 81 74 7 28 "" [1 uses])

(note 74 90 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 76 74 77 7 arch/arm/mm/init.c:424 (set (reg/f:SI 187 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 194) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 77 76 119 7 arch/arm/mm/init.c:424 (set (reg/v/f:SI 168 [ page ])
        (plus:SI (reg/f:SI 187 [ mem_map ])
            (reg:SI 166 [ ivtmp.563 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 187 [ mem_map ])
        (nil)))

(insn 119 77 79 7 include/linux/page-flags.h:207 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 79 119 80 7 include/linux/page-flags.h:207 (set (reg:SI 1 r1)
        (reg/v/f:SI 168 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 80 79 82 7 include/linux/page-flags.h:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 82 80 83 7 include/linux/mm.h:417 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 168 [ page ])
                (const_int 16 [0x10])) [0 <variable>.D.8033.D.8032.D.8031._count.counter+0 S4 A32])
        (reg:SI 196)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 83 82 121 7 arch/arm/mm/init.c:427 (set (reg:SI 0 r0)
        (reg/v/f:SI 168 [ page ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 168 [ page ])
        (nil)))

(insn 121 83 85 7 arch/arm/mm/init.c:427 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 85 121 86 7 arch/arm/mm/init.c:427 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 86 85 87 7 arch/arm/mm/init.c:423 discrim 2 (set (reg/v:SI 165 [ pfn.581 ])
        (plus:SI (reg/v:SI 165 [ pfn.581 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 87 86 88 7 arch/arm/mm/init.c:423 discrim 2 (set (reg:SI 166 [ ivtmp.563 ])
        (plus:SI (reg:SI 166 [ ivtmp.563 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196


;; Succ edge  8 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 171
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru,dfs_back)
(code_label 88 87 89 8 27 "" [0 uses])

(note 89 88 91 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 91 89 92 8 arch/arm/mm/init.c:423 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 165 [ pfn.581 ])
            (reg:SI 171 [ D.25487 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 93 8 arch/arm/mm/init.c:423 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 90)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 8 -> ( 7 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 166 167 169 171 172 194 196


;; Succ edge  7 [91.0%] 
;; Succ edge  9 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [9.0%]  (fallthru,loop_exit)
(note 93 92 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 95 9 arch/arm/mm/init.c:431 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 167 [ size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 95 94 96 9 arch/arm/mm/init.c:431 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 167 169 172


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 167 169 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 167 169 172
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  9 [0.0%]  (fallthru)
(note 96 95 99 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 99 96 100 10 arch/arm/mm/init.c:432 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1161a480>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1161a480>)
        (nil)))

(insn 100 99 101 10 arch/arm/mm/init.c:432 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11686560>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11686560>)
        (nil)))

(insn 101 100 102 10 arch/arm/mm/init.c:432 (set (reg:SI 2 r2)
        (reg/v:SI 167 [ size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 167 [ size ])
        (nil)))

(call_insn 102 101 103 10 arch/arm/mm/init.c:432 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 169 172
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 169 172


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 169 172
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165 169 172
;; lr  def 	 191 192 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 165 169 172
;; live  gen 	 191 192 193
;; live  kill	

;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 103 102 104 11 29 "" [1 uses])

(note 104 103 105 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 11 arch/arm/mm/init.c:758 (set (reg/f:SI 191)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 11 arch/arm/mm/init.c:758 (set (reg:SI 192)
        (minus:SI (reg:SI 172 [ totalram_pages.414 ])
            (reg/v:SI 169 [ pfn ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 172 [ totalram_pages.414 ])
        (expr_list:REG_DEAD (reg/v:SI 169 [ pfn ])
            (nil))))

(insn 107 106 108 11 arch/arm/mm/init.c:758 (set (reg:SI 193)
        (plus:SI (reg:SI 192)
            (reg/v:SI 165 [ pfn.581 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 192)
        (expr_list:REG_DEAD (reg/v:SI 165 [ pfn.581 ])
            (nil))))

(insn 108 107 114 11 arch/arm/mm/init.c:758 (set (mem/c/i:SI (reg/f:SI 191) [0 totalram_pages+0 S4 A32])
        (reg:SI 193)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_DEAD (reg/f:SI 191)
            (nil))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 2) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u103(11){ }u104(13){ }u105(25){ }u106(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  2 [39.0%] 
(code_label 114 108 117 12 30 "" [1 uses])

(note 117 114 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 12 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function free_initmem (free_initmem)[0:1361]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 22 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 13 count 22 (    2)

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=15
  mem: (reg/f:SI 144)

   after canon_rtx address: (reg/f:SI 144)
expanding: r144 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r134
expanding: r134 into: NULL
expanding value SI into: r163
expanding: r163 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 163)
    (reg:SI 134 [ ivtmp.624 ]))

   after canon_rtx address: (plus:SI (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
    (reg:SI 134 [ ivtmp.624 ]))
  varying cselib base=-530087452 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
  mem: (reg/f:SI 147)

   after canon_rtx address: (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=37
  mem: (reg/f:SI 159)

   after canon_rtx address: (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)
  gid=1 offset=0 
 processing const load gid=1[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
  mem: (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>)

   after canon_rtx address: (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=43
  mem: (plus:SI (reg/v/f:SI 137 [ page ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 137 [ page ])
    (const_int 16 [0x10]))
expanding: r137 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r152
expanding: r152 into: NULL
expanding value SI into: r135
expanding: r135 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/f:SI 152 [ mem_map ])
        (reg:SI 135 [ ivtmp.616 ]))
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (plus:SI (reg/f:SI 152 [ mem_map ])
        (reg:SI 135 [ ivtmp.616 ]))
    (const_int 16 [0x10]))
  varying cselib base=77 offset = 16
 processing cselib store [16..20)
mems_found = 1, cannot_delete = false

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=46
  mem: (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>)

   after canon_rtx address: (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>)
  gid=3 offset=0 
 processing const load gid=3[0..4)
removing from active insn=43 has store

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=60
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=4 offset=0 
 processing const load gid=4[0..4)

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=67
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
  mem: (reg/f:SI 156)

   after canon_rtx address: (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)
  gid=0 offset=0 
 processing const base store gid=0[0..4)
expanding: r158 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: (minus:SI (value:SI)
    (value:SI))
expanding value SI into: r140
(reg:SI 140 [ totalram_pages.408 ])
expanding value SI into: r138
(reg/v:SI 138 [ pfn ])
expanding value SI into: r133
expanding: r133 into: NULL
mems_found = 1, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


free_initmem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,3u} r1={7d,3u} r2={5d,1u} r3={4d} r11={1d,10u} r12={4d} r13={1d,13u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r25={1d,10u} r26={1d,9u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={2d,3u} r134={2d,3u,1d} r135={2d,2u} r136={1d,2u} r137={1d,3u} r138={1d,4u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,2u} r144={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r152={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,1u} r163={1d,1u} r164={1d,1u} 
;;    total ref usage 489{398d,90u,1e} in 46{43 regular + 3 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 141 142 143 163 164
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 141 142 143 163 164
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/mm/init.c:743 (set (reg/f:SI 142)
        (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/init.c:743 (set (reg/f:SI 143)
        (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/init.c:743 (set (reg:SI 141 [ D.25457 ])
        (minus:SI (reg/f:SI 142)
            (reg/f:SI 143))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
                (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>))
            (nil))))

(insn 8 7 12 2 arch/arm/mm/init.c:743 (set (reg:SI 134 [ ivtmp.624 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 14 2 arch/arm/mm/init.c:445 (set (reg/f:SI 163)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 143)
        (expr_list:REG_EQUAL (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
            (nil))))

(insn 14 12 19 2 arch/arm/mm/init.c:445 (set (reg:SI 164)
        (const_int -402792720 [0xffffffffe7fddef0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u6(11){ }u7(13){ }u8(25){ }u9(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 163 164
;; lr  def 	 134 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; live  gen 	 134 144
;; live  kill	

;; Pred edge  4 [91.0%] 
(code_label 19 14 11 3 35 "" [1 uses])

(note 11 19 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 15 3 arch/arm/mm/init.c:445 (set (reg/f:SI 144)
        (plus:SI (reg:SI 134 [ ivtmp.624 ])
            (reg/f:SI 163))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 134 [ ivtmp.624 ])
            (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>))
        (nil)))

(insn 15 13 16 3 arch/arm/mm/init.c:445 (set (mem:SI (reg/f:SI 144) [0 S4 A32])
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 144)
        (expr_list:REG_EQUAL (const_int -402792720 [0xffffffffe7fddef0])
            (nil))))

(insn 16 15 17 3 arch/arm/mm/init.c:445 (set (reg:SI 134 [ ivtmp.624 ])
        (plus:SI (reg:SI 134 [ ivtmp.624 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
(code_label 17 16 18 4 34 "" [0 uses])

(note 18 17 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 18 21 4 arch/arm/mm/init.c:732 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.25457 ])
            (reg:SI 134 [ ivtmp.624 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 4 arch/arm/mm/init.c:732 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141 163 164


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 135 136 138 139 140 147 148 149 150 159 161
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 135 136 138 139 140 147 148 149 150 159 161
;; live  kill	

;; Pred edge  4 [9.0%]  (fallthru,loop_exit)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 arch/arm/mm/init.c:745 (set (reg/f:SI 147)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 5 arch/arm/mm/init.c:745 (set (reg:SI 140 [ totalram_pages.408 ])
        (mem/c/i:SI (reg/f:SI 147) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>) [0 totalram_pages+0 S4 A32])
            (nil))))

(insn 25 24 26 5 arch/arm/mm/init.c:745 (set (reg/f:SI 148)
        (const:SI (plus:SI (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 arch/arm/mm/init.c:745 (set (reg/v:SI 138 [ pfn ])
        (lshiftrt:SI (reg/f:SI 148)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/f:SI 148)
        (expr_list:REG_EQUAL (lshiftrt:SI (const:SI (plus:SI (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
                        (const_int 1073741824 [0x40000000])))
                (const_int 12 [0xc]))
            (nil))))

(insn 27 26 28 5 arch/arm/mm/init.c:745 (set (reg/f:SI 149)
        (const:SI (plus:SI (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
                (const_int 1073741824 [0x40000000])))) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 5 arch/arm/mm/init.c:745 (set (reg:SI 139 [ D.25467 ])
        (lshiftrt:SI (reg/f:SI 149)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/f:SI 149)
        (expr_list:REG_EQUAL (lshiftrt:SI (const:SI (plus:SI (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
                        (const_int 1073741824 [0x40000000])))
                (const_int 12 [0xc]))
            (nil))))

(insn 29 28 30 5 arch/arm/mm/init.c:421 (set (reg:SI 150)
        (minus:SI (reg:SI 139 [ D.25467 ])
            (reg/v:SI 138 [ pfn ]))) 28 {*arm_subsi3_insn} (nil))

(insn 30 29 31 5 arch/arm/mm/init.c:421 (set (reg/v:SI 136 [ size ])
        (ashift:SI (reg:SI 150)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 31 30 32 5 arch/arm/mm/init.c:421 (set (reg:SI 135 [ ivtmp.616 ])
        (ashift:SI (reg/v:SI 138 [ pfn ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 32 31 36 5 arch/arm/mm/init.c:421 (set (reg/v:SI 133 [ pfn.633 ])
        (reg/v:SI 138 [ pfn ])) 167 {*arm_movsi_insn} (nil))

(insn 36 32 42 5 arch/arm/mm/init.c:424 (set (reg/f:SI 159)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 42 36 51 5 include/linux/mm.h:417 (set (reg:SI 161)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 159 161
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 135 137 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; live  gen 	 0 [r0] 1 [r1] 133 135 137 152
;; live  kill	 14 [lr]

;; Pred edge  7 [91.0%] 
(code_label 51 42 35 6 37 "" [1 uses])

(note 35 51 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 35 38 6 arch/arm/mm/init.c:424 (set (reg/f:SI 152 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 159) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 38 37 78 6 arch/arm/mm/init.c:424 (set (reg/v/f:SI 137 [ page ])
        (plus:SI (reg/f:SI 152 [ mem_map ])
            (reg:SI 135 [ ivtmp.616 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 152 [ mem_map ])
        (nil)))

(insn 78 38 40 6 include/linux/page-flags.h:207 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 40 78 41 6 include/linux/page-flags.h:207 (set (reg:SI 1 r1)
        (reg/v/f:SI 137 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 43 6 include/linux/page-flags.h:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 43 41 44 6 include/linux/mm.h:417 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ page ])
                (const_int 16 [0x10])) [0 <variable>.D.8033.D.8032.D.8031._count.counter+0 S4 A32])
        (reg:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 44 43 80 6 arch/arm/mm/init.c:427 (set (reg:SI 0 r0)
        (reg/v/f:SI 137 [ page ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ page ])
        (nil)))

(insn 80 44 46 6 arch/arm/mm/init.c:427 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 46 80 47 6 arch/arm/mm/init.c:427 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 47 46 48 6 arch/arm/mm/init.c:423 discrim 2 (set (reg/v:SI 133 [ pfn.633 ])
        (plus:SI (reg/v:SI 133 [ pfn.633 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 48 47 49 6 arch/arm/mm/init.c:423 discrim 2 (set (reg:SI 135 [ ivtmp.616 ])
        (plus:SI (reg:SI 135 [ ivtmp.616 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161


;; Succ edge  7 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru,dfs_back)
(code_label 49 48 50 7 36 "" [0 uses])

(note 50 49 52 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 52 50 53 7 arch/arm/mm/init.c:423 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ pfn.633 ])
            (reg:SI 139 [ D.25467 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 53 52 54 7 arch/arm/mm/init.c:423 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 7 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 136 138 139 140 159 161


;; Succ edge  6 [91.0%] 
;; Succ edge  8 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138 140
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [9.0%]  (fallthru,loop_exit)
(note 54 53 55 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 8 arch/arm/mm/init.c:431 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 57 8 arch/arm/mm/init.c:431 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 64)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136 138 140


;; Succ edge  9 [100.0%]  (fallthru)
;; Succ edge  10 [0.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 138 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  8 [100.0%]  (fallthru)
(note 57 56 60 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 60 57 61 9 arch/arm/mm/init.c:432 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1161a480>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1161a480>)
        (nil)))

(insn 61 60 62 9 arch/arm/mm/init.c:432 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1169b720>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x1169b720>)
        (nil)))

(insn 62 61 63 9 arch/arm/mm/init.c:432 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ size ])
        (nil)))

(call_insn 63 62 64 9 arch/arm/mm/init.c:432 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 140


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 140
;; lr  def 	 156 157 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 140
;; live  gen 	 156 157 158
;; live  kill	

;; Pred edge  8 [0.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 64 63 65 10 38 "" [1 uses])

(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 10 arch/arm/mm/init.c:745 (set (reg/f:SI 156)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 10 arch/arm/mm/init.c:745 (set (reg:SI 157)
        (minus:SI (reg:SI 140 [ totalram_pages.408 ])
            (reg/v:SI 138 [ pfn ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 140 [ totalram_pages.408 ])
        (expr_list:REG_DEAD (reg/v:SI 138 [ pfn ])
            (nil))))

(insn 68 67 69 10 arch/arm/mm/init.c:745 (set (reg:SI 158)
        (plus:SI (reg:SI 157)
            (reg/v:SI 133 [ pfn.633 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg/v:SI 133 [ pfn.633 ])
            (nil))))

(insn 69 68 0 10 arch/arm/mm/init.c:745 (set (mem/c/i:SI (reg/f:SI 156) [0 totalram_pages+0 S4 A32])
        (reg:SI 158)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg/f:SI 156)
            (nil))))
;; End of basic block 10 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function mem_init (mem_init)[0:1360] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 44 n_edges 61 count 120 (  2.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 44 n_edges 61 count 139 (  3.2)

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (reg/f:SI 194)

   after canon_rtx address: (symbol_ref:SI ("max_pfn") [flags 0xc0] <var_decl 0x1108fae0 max_pfn>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (reg/f:SI 193)

   after canon_rtx address: (symbol_ref:SI ("max_mapnr") [flags 0xc0] <var_decl 0x110aed20 max_mapnr>)
  gid=1 offset=0 
 processing const base store gid=1[0..4)
expanding: r197 into: (ashiftrt:SI (value:SI)
    (const_int 5 [0x5]))
expanding value SI into: (ashift:SI (value:SI)
    (const_int 5 [0x5]))
expanding value SI into: r196
(reg:SI 196 [ max_pfn ])
mems_found = 1, cannot_delete = false

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=23
  mem: (plus:SI (reg/f:SI 151 [ D.26350 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 151 [ D.26350 ])
    (const_int 4 [0x4]))
expanding: r151 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r414
expanding: r414 into: NULL
expanding value SI into: r152
expanding: r152 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/f:SI 414)
        (reg:SI 152 [ ivtmp.752 ]))
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 8 [0x8])))
    (reg:SI 152 [ ivtmp.752 ]))
  varying cselib base=1018533827 offset = 0
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.26350 ])
        (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=40
  mem: (reg/f:SI 415)

   after canon_rtx address: (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)
  gid=2 offset=0 
 processing const load gid=2[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=50
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
  mem: (symbol_ref:SI ("free_bootmem") [flags 0x41] <function_decl 0x11095600 free_bootmem>)

   after canon_rtx address: (symbol_ref:SI ("free_bootmem") [flags 0x41] <function_decl 0x11095600 free_bootmem>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=61
  mem: (plus:SI (reg/f:SI 151 [ D.26350 ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 151 [ D.26350 ])
    (const_int 8 [0x8]))
expanding: r151 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 151 [ D.26350 ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 151 [ D.26350 ])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.26350 ])
        (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=62
  mem: (plus:SI (reg/f:SI 151 [ D.26350 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 151 [ D.26350 ])
    (const_int 4 [0x4]))
expanding: r151 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 151 [ D.26350 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 151 [ D.26350 ])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.26350 ])
        (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=66
mems_found = 0, cannot_delete = true

**scanning insn=67
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=75
  mem: (plus:SI (reg/f:SI 413)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (const_int 4 [0x4])))
  gid=4 offset=4 
 processing const load gid=4[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=80
  mem: (reg/f:SI 229)

   after canon_rtx address: (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)
  gid=5 offset=0 
 processing const load gid=5[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=81
  mem: (symbol_ref:SI ("free_all_bootmem") [flags 0x41] <function_decl 0x11095500 free_all_bootmem>)

   after canon_rtx address: (symbol_ref:SI ("free_all_bootmem") [flags 0x41] <function_decl 0x11095500 free_all_bootmem>)
  gid=6 offset=0 
 processing const load gid=6[0..4)

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=85
  mem: (reg/f:SI 229)

   after canon_rtx address: (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)
  gid=5 offset=0 
 processing const base store gid=5[0..4)
expanding: r231 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r0
expanding: r0 into: r191
expanding: r191 into: NULL
expanding value SI into: r192
expanding: r192 into: NULL
mems_found = 1, cannot_delete = false

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
  mem: (reg/f:SI 232)

   after canon_rtx address: (symbol_ref:SI ("max_low_pfn") [flags 0xc0] <var_decl 0x1108fa20 max_low_pfn>)
  gid=7 offset=0 
 processing const load gid=7[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=89
  mem: (plus:SI (reg/f:SI 233)
    (const_int 16 [0x10]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 16 [0x10])))
  gid=8 offset=16 
 processing const load gid=8[16..20)
mems_found = 0, cannot_delete = true

**scanning insn=216
mems_found = 0, cannot_delete = true

**scanning insn=125
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=93
  mem: (reg/v/f:SI 167 [ mem ])

   after canon_rtx address: (reg/v/f:SI 167 [ mem ])
expanding: r167 into: NULL

   after cselib_expand address: (reg/v/f:SI 167 [ mem ])

   after canon_rtx address: (reg/v/f:SI 167 [ mem ])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:SI (reg/v/f:SI 167 [ mem ]) [0 <variable>.base+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=94
  mem: (plus:SI (reg/v/f:SI 167 [ mem ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 167 [ mem ])
    (const_int 4 [0x4]))
expanding: r167 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 167 [ mem ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 167 [ mem ])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 167 [ mem ])
        (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=95
mems_found = 0, cannot_delete = true

**scanning insn=96
mems_found = 0, cannot_delete = true

**scanning insn=97
mems_found = 0, cannot_delete = true

**scanning insn=98
mems_found = 0, cannot_delete = true

**scanning insn=100
mems_found = 0, cannot_delete = true

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=105
  mem: (plus:SI (reg/f:SI 404)
    (const_int 28 [0x1c]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 28 [0x1c])))
  gid=8 offset=28 
 processing const load gid=8[28..32)
mems_found = 0, cannot_delete = true

**scanning insn=109
  mem: (reg/v/f:SI 168 [ res ])

   after canon_rtx address: (reg/v/f:SI 168 [ res ])
expanding: r168 into: NULL

   after cselib_expand address: (reg/v/f:SI 168 [ res ])

   after canon_rtx address: (reg/v/f:SI 168 [ res ])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:SI (reg/v/f:SI 168 [ res ]) [0 <variable>.base+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=110
  mem: (plus:SI (reg/v/f:SI 168 [ res ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 168 [ res ])
    (const_int 4 [0x4]))
expanding: r168 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 168 [ res ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 168 [ res ])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 168 [ res ])
        (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=119
mems_found = 0, cannot_delete = true

**scanning insn=120
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=122
mems_found = 0, cannot_delete = true

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=126
  mem: (reg/f:SI 405)

   after canon_rtx address: (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)
  gid=9 offset=0 
 processing const load gid=9[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=133
  mem: (reg/f:SI 406)

   after canon_rtx address: (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)
  gid=2 offset=0 
 processing const load gid=2[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=491
mems_found = 0, cannot_delete = true

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=137
  mem: (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>)

   after canon_rtx address: (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>)
  gid=10 offset=0 
 processing const load gid=10[0..4)

**scanning insn=139
  mem: (plus:SI (reg/v/f:SI 172 [ page ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 172 [ page ])
    (const_int 16 [0x10]))
expanding: r172 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r245
expanding: r245 into: NULL
expanding value SI into: r153
expanding: r153 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/f:SI 245 [ mem_map ])
        (reg:SI 153 [ ivtmp.734 ]))
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (plus:SI (reg/f:SI 245 [ mem_map ])
        (reg:SI 153 [ ivtmp.734 ]))
    (const_int 16 [0x10]))
  varying cselib base=77 offset = 16
 processing cselib store [16..20)
mems_found = 1, cannot_delete = false

**scanning insn=140
mems_found = 0, cannot_delete = true

**scanning insn=493
mems_found = 0, cannot_delete = true

**scanning insn=142
  mem: (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>)

   after canon_rtx address: (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>)
  gid=11 offset=0 
 processing const load gid=11[0..4)
removing from active insn=139 has store

**scanning insn=143
mems_found = 0, cannot_delete = true

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=148
mems_found = 0, cannot_delete = true

**scanning insn=149
mems_found = 0, cannot_delete = true

**scanning insn=152
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=154
  mem: (reg/f:SI 405)

   after canon_rtx address: (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)
  gid=9 offset=0 
 processing const base store gid=9[0..4)
expanding: r249 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: (minus:SI (value:SI)
    (value:SI))
expanding value SI into: r166
(reg:SI 166 [ totalhigh_pages.382 ])
expanding value SI into: r145
(reg/v:SI 145 [ start.762 ])
expanding value SI into: r144
expanding: r144 into: NULL
mems_found = 1, cannot_delete = false

**scanning insn=157
mems_found = 0, cannot_delete = true

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=169
  mem: (plus:SI (reg/f:SI 404)
    (const_int 20 [0x14]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 20 [0x14])))
  gid=8 offset=20 
 processing const load gid=8[20..24)
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=171
  mem: (plus:SI (reg/f:SI 404)
    (const_int 28 [0x1c]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 28 [0x1c])))
  gid=8 offset=28 
 processing const load gid=8[28..32)
mems_found = 0, cannot_delete = true

**scanning insn=172
mems_found = 0, cannot_delete = true

**scanning insn=173
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=182
  mem: (reg/f:SI 405)

   after canon_rtx address: (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)
  gid=9 offset=0 
 processing const load gid=9[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=188
  mem: (reg/f:SI 406)

   after canon_rtx address: (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)
  gid=2 offset=0 
 processing const load gid=2[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=487
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=192
  mem: (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>)

   after canon_rtx address: (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>)
  gid=10 offset=0 
 processing const load gid=10[0..4)

**scanning insn=194
  mem: (plus:SI (reg/v/f:SI 173 [ page ])
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 173 [ page ])
    (const_int 16 [0x10]))
expanding: r173 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r258
expanding: r258 into: NULL
expanding value SI into: r154
expanding: r154 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/f:SI 258 [ mem_map ])
        (reg:SI 154 [ ivtmp.722 ]))
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (plus:SI (reg/f:SI 258 [ mem_map ])
        (reg:SI 154 [ ivtmp.722 ]))
    (const_int 16 [0x10]))
  varying cselib base=77 offset = 16
 processing cselib store [16..20)
mems_found = 1, cannot_delete = false

**scanning insn=195
mems_found = 0, cannot_delete = true

**scanning insn=489
mems_found = 0, cannot_delete = true

**scanning insn=197
  mem: (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>)

   after canon_rtx address: (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>)
  gid=11 offset=0 
 processing const load gid=11[0..4)
removing from active insn=194 has store

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=199
mems_found = 0, cannot_delete = true

**scanning insn=203
mems_found = 0, cannot_delete = true

**scanning insn=204
mems_found = 0, cannot_delete = true

**scanning insn=207
mems_found = 0, cannot_delete = true

**scanning insn=208
mems_found = 0, cannot_delete = true

**scanning insn=209
  mem: (reg/f:SI 405)

   after canon_rtx address: (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)
  gid=9 offset=0 
 processing const base store gid=9[0..4)
expanding: r262 into: (minus:SI (value:SI)
    (value:SI))
expanding value SI into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r148
(reg/v:SI 148 [ start.759 ])
expanding value SI into: r142
(reg:SI 142 [ totalhigh_pages.765 ])
expanding value SI into: r137
expanding: r137 into: NULL
mems_found = 1, cannot_delete = false

**scanning insn=212
mems_found = 0, cannot_delete = true

**scanning insn=218
  mem: (plus:SI (reg/f:SI 404)
    (const_int 8 [0x8]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 8 [0x8])))
  gid=8 offset=8 
 processing const load gid=8[8..12)
mems_found = 0, cannot_delete = true

**scanning insn=219
mems_found = 0, cannot_delete = true

**scanning insn=220
  mem: (plus:SI (reg/f:SI 404)
    (const_int 16 [0x10]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 16 [0x10])))
  gid=8 offset=16 
 processing const load gid=8[16..20)
mems_found = 0, cannot_delete = true

**scanning insn=221
mems_found = 0, cannot_delete = true

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=223
mems_found = 0, cannot_delete = true

**scanning insn=225
mems_found = 0, cannot_delete = true

**scanning insn=226
mems_found = 0, cannot_delete = true

**scanning insn=228
  mem: (reg/f:SI 270)

   after canon_rtx address: (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)
  gid=9 offset=0 
 processing const load gid=9[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=229
  mem: (reg/f:SI 269)

   after canon_rtx address: (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)
  gid=5 offset=0 
 processing const load gid=5[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=230
mems_found = 0, cannot_delete = true

**scanning insn=231
  mem: (reg/f:SI 269)

   after canon_rtx address: (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)
  gid=5 offset=0 
 processing const base store gid=5[0..4)
expanding: r274 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r272
expanding: r272 into: NULL
expanding value SI into: r273
expanding: r273 into: NULL
mems_found = 1, cannot_delete = false

**scanning insn=232
mems_found = 0, cannot_delete = true

**scanning insn=233
  mem: (plus:SI (reg/f:SI 275)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (const_int 4 [0x4])))
  gid=4 offset=4 
 processing const load gid=4[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=234
mems_found = 0, cannot_delete = true

**scanning insn=235
  mem: (reg/f:SI 276)

   after canon_rtx address: (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)
  gid=2 offset=0 
 processing const load gid=2[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=236
mems_found = 0, cannot_delete = true

**scanning insn=237
mems_found = 0, cannot_delete = true

**scanning insn=238
mems_found = 0, cannot_delete = true

**scanning insn=239
mems_found = 0, cannot_delete = true

**scanning insn=244
mems_found = 0, cannot_delete = true

**scanning insn=245
mems_found = 0, cannot_delete = true

**scanning insn=246
  mem: (plus:SI (reg/f:SI 155 [ D.26304 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 155 [ D.26304 ])
    (const_int 4 [0x4]))
expanding: r155 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r387
expanding: r387 into: NULL
expanding value SI into: r156
expanding: r156 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/f:SI 387)
        (reg:SI 156 [ ivtmp.710 ]))
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 8 [0x8])))
    (reg:SI 156 [ ivtmp.710 ]))
  varying cselib base=1018533827 offset = 0
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 155 [ D.26304 ])
        (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=248
mems_found = 0, cannot_delete = true

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=250
  mem: (plus:SI (reg/f:SI 155 [ D.26304 ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 155 [ D.26304 ])
    (const_int 8 [0x8]))
expanding: r155 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r387
expanding: r387 into: NULL
expanding value SI into: r156
expanding: r156 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/f:SI 387)
        (reg:SI 156 [ ivtmp.710 ]))
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 12 [0xc])))
    (reg:SI 156 [ ivtmp.710 ]))
  varying cselib base=1018533831 offset = 0
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 155 [ D.26304 ])
        (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=251
mems_found = 0, cannot_delete = true

**scanning insn=252
mems_found = 0, cannot_delete = true

**scanning insn=253
mems_found = 0, cannot_delete = true

**scanning insn=254
mems_found = 0, cannot_delete = true

**scanning insn=257
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=258
mems_found = 0, cannot_delete = true

**scanning insn=259
mems_found = 0, cannot_delete = true

**scanning insn=260
mems_found = 0, cannot_delete = true

**scanning insn=262
mems_found = 0, cannot_delete = true

**scanning insn=267
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=268
mems_found = 0, cannot_delete = true

**scanning insn=269
mems_found = 0, cannot_delete = true

**scanning insn=270
mems_found = 0, cannot_delete = true

**scanning insn=272
mems_found = 0, cannot_delete = true

**scanning insn=277
  mem: (plus:SI (reg/v/f:SI 182 [ page ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 182 [ page ])
    (const_int 28 [0x1c]))
expanding: r182 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 182 [ page ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 182 [ page ])
    (const_int 28 [0x1c]))
  varying cselib base=1 offset = 28
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (reg/v/f:SI 182 [ page ])
        (const_int 28 [0x1c])) [0 <variable>.D.8040.first_page+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=280
mems_found = 0, cannot_delete = true

**scanning insn=281
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=282
mems_found = 0, cannot_delete = true

**scanning insn=283
mems_found = 0, cannot_delete = true

**scanning insn=285
mems_found = 0, cannot_delete = true

**scanning insn=288
mems_found = 0, cannot_delete = true

**scanning insn=290
mems_found = 0, cannot_delete = true

**scanning insn=291
mems_found = 0, cannot_delete = true

**scanning insn=293
mems_found = 0, cannot_delete = true

**scanning insn=294
mems_found = 0, cannot_delete = true

**scanning insn=298
mems_found = 0, cannot_delete = true

**scanning insn=299
mems_found = 0, cannot_delete = true

**scanning insn=302
mems_found = 0, cannot_delete = true

**scanning insn=303
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=12 offset=0 
 processing const load gid=12[0..4)

**scanning insn=304
mems_found = 0, cannot_delete = true

**scanning insn=305
mems_found = 0, cannot_delete = true

**scanning insn=306
  mem: (reg/f:SI 288)

   after canon_rtx address: (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>)
  gid=13 offset=0 
 processing const base store gid=13[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=307
mems_found = 0, cannot_delete = true

**scanning insn=308
  mem: (plus:SI (reg/f:SI 290)
    (const_int 16 [0x10]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 16 [0x10])))
  gid=8 offset=16 
 processing const load gid=8[16..20)
mems_found = 0, cannot_delete = true

**scanning insn=335
mems_found = 0, cannot_delete = true

**scanning insn=478
mems_found = 0, cannot_delete = true

**scanning insn=312
  mem: (plus:SI (reg:SI 157 [ ivtmp.692 ])
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:SI (reg:SI 157 [ ivtmp.692 ])
    (const_int -8 [0xfffffffffffffff8]))
expanding: r157 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 157 [ ivtmp.692 ])
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:SI (reg:SI 157 [ ivtmp.692 ])
    (const_int -8 [0xfffffffffffffff8]))
  varying cselib base=1 offset = -8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg:SI 157 [ ivtmp.692 ])
        (const_int -8 [0xfffffffffffffff8])) [0 <variable>.base+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=313
  mem: (plus:SI (reg:SI 157 [ ivtmp.692 ])
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:SI (reg:SI 157 [ ivtmp.692 ])
    (const_int -4 [0xfffffffffffffffc]))
expanding: r157 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 157 [ ivtmp.692 ])
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:SI (reg:SI 157 [ ivtmp.692 ])
    (const_int -4 [0xfffffffffffffffc]))
  varying cselib base=1 offset = -4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg:SI 157 [ ivtmp.692 ])
        (const_int -4 [0xfffffffffffffffc])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=314
mems_found = 0, cannot_delete = true

**scanning insn=315
mems_found = 0, cannot_delete = true

**scanning insn=316
mems_found = 0, cannot_delete = true

**scanning insn=317
mems_found = 0, cannot_delete = true

**scanning insn=318
mems_found = 0, cannot_delete = true

**scanning insn=319
mems_found = 0, cannot_delete = true

**scanning insn=322
  mem: (reg/f:SI 385)

   after canon_rtx address: (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>)
  gid=13 offset=0 
 processing const load gid=13[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=323
mems_found = 0, cannot_delete = true

**scanning insn=324
  mem: (reg/f:SI 385)

   after canon_rtx address: (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>)
  gid=13 offset=0 
 processing const base store gid=13[0..4)
expanding: r300 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: (minus:SI (value:SI)
    (value:SI))
expanding value SI into: (lshiftrt:SI (value:SI)
    (const_int 12 [0xc]))
r293
(reg:SI 293)
expanding value SI into: (lshiftrt:SI (value:SI)
    (const_int 12 [0xc]))
r296
(reg:SI 296)
expanding value SI into: r299
expanding: r299 into: NULL
mems_found = 1, cannot_delete = false

**scanning insn=326
mems_found = 0, cannot_delete = true

**scanning insn=484
mems_found = 0, cannot_delete = true

**scanning insn=328
mems_found = 0, cannot_delete = true

**scanning insn=329
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=12 offset=0 
 processing const load gid=12[0..4)

**scanning insn=332
mems_found = 0, cannot_delete = true

**scanning insn=333
mems_found = 0, cannot_delete = true

**scanning insn=337
  mem: (plus:SI (reg/f:SI 384)
    (const_int 8 [0x8]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 8 [0x8])))
  gid=8 offset=8 
 processing const load gid=8[8..12)
mems_found = 0, cannot_delete = true

**scanning insn=338
mems_found = 0, cannot_delete = true

**scanning insn=339
  mem: (plus:SI (reg/f:SI 384)
    (const_int 16 [0x10]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 16 [0x10])))
  gid=8 offset=16 
 processing const load gid=8[16..20)
mems_found = 0, cannot_delete = true

**scanning insn=340
mems_found = 0, cannot_delete = true

**scanning insn=341
mems_found = 0, cannot_delete = true

**scanning insn=483
mems_found = 0, cannot_delete = true

**scanning insn=342
mems_found = 0, cannot_delete = true

**scanning insn=346
  mem: (reg/f:SI 383)

   after canon_rtx address: (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>)
  gid=13 offset=0 
 processing const load gid=13[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=347
mems_found = 0, cannot_delete = true

**scanning insn=348
mems_found = 0, cannot_delete = true

**scanning insn=349
mems_found = 0, cannot_delete = true

**scanning insn=350
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=12 offset=0 
 processing const load gid=12[0..4)

**scanning insn=351
mems_found = 0, cannot_delete = true

**scanning insn=352
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=354
mems_found = 0, cannot_delete = true

**scanning insn=355
mems_found = 0, cannot_delete = true

**scanning insn=356
mems_found = 0, cannot_delete = true

**scanning insn=357
mems_found = 0, cannot_delete = true

**scanning insn=358
mems_found = 0, cannot_delete = true

**scanning insn=359
  mem: (reg/f:SI 318)

   after canon_rtx address: (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)
  gid=9 offset=0 
 processing const load gid=9[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=360
mems_found = 0, cannot_delete = true

**scanning insn=361
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=7 offset = 0
 processing cselib store [0..4)
expanding: r319 into: (ashift:SI (value:SI)
    (const_int 2 [0x2]))
expanding value SI into: r320
expanding: r320 into: NULL
mems_found = 1, cannot_delete = false

**scanning insn=362
mems_found = 0, cannot_delete = true

**scanning insn=363
mems_found = 0, cannot_delete = true

**scanning insn=364
mems_found = 0, cannot_delete = true

**scanning insn=365
mems_found = 0, cannot_delete = true

**scanning insn=366
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=12 offset=0 
 processing const load gid=12[0..4)

**scanning insn=367
mems_found = 0, cannot_delete = true

**scanning insn=368
  mem: (reg/f:SI 321)

   after canon_rtx address: (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x110aee40 high_memory>)
  gid=14 offset=0 
 processing const load gid=14[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=369
mems_found = 0, cannot_delete = true

**scanning insn=370
mems_found = 0, cannot_delete = true

**scanning insn=371
mems_found = 0, cannot_delete = true

**scanning insn=373
mems_found = 0, cannot_delete = true

**scanning insn=374
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=9 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=375
mems_found = 0, cannot_delete = true

**scanning insn=376
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 4 [0x4]))
  varying cselib base=9 offset = 4
 processing cselib store [4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=377
mems_found = 0, cannot_delete = true

**scanning insn=378
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 8 [0x8]))
  varying cselib base=9 offset = 8
 processing cselib store [8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=379
mems_found = 0, cannot_delete = true

**scanning insn=380
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 12 [0xc]))
  varying cselib base=9 offset = 12
 processing cselib store [12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=381
mems_found = 0, cannot_delete = true

**scanning insn=382
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 16 [0x10]))
  varying cselib base=9 offset = 16
 processing cselib store [16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=383
mems_found = 0, cannot_delete = true

**scanning insn=384
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 20 [0x14]))
  varying cselib base=9 offset = 20
 processing cselib store [20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=385
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 24 [0x18]))
  varying cselib base=9 offset = 24
 processing cselib store [24..28)
expanding: r186 into: (ashift:SI (value:SI)
    (const_int 23 [0x17]))
expanding value SI into: (lshiftrt:SI (value:SI)
    (const_int 23 [0x17]))
expanding value SI into: (plus:SI (value:SI)
    (const_int 8388608 [0x800000]))
r322
(reg:SI 322)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=386
mems_found = 0, cannot_delete = true

**scanning insn=387
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 28 [0x1c]))
  varying cselib base=9 offset = 28
 processing cselib store [28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=388
mems_found = 0, cannot_delete = true

**scanning insn=389
mems_found = 0, cannot_delete = true

**scanning insn=390
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 32 [0x20]))
  varying cselib base=9 offset = 32
 processing cselib store [32..36)
expanding: r333 into: (lshiftrt:SI (value:SI)
    (const_int 20 [0x14]))
expanding value SI into: (minus:SI (const_int -134217728 [0xfffffffff8000000])
    (value:SI))
expanding value SI into: (ashift:SI (value:SI)
    (const_int 23 [0x17]))
r186
(reg:SI 186 [ D.25409 ])
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=391
mems_found = 0, cannot_delete = true

**scanning insn=392
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 36 [0x24]))
  varying cselib base=9 offset = 36
 processing cselib store [36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=393
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 40 [0x28]))
  varying cselib base=9 offset = 40
 processing cselib store [40..44)
expanding: r187 into: NULL
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=394
mems_found = 0, cannot_delete = true

**scanning insn=395
mems_found = 0, cannot_delete = true

**scanning insn=396
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 44 [0x2c]))
  varying cselib base=9 offset = 44
 processing cselib store [44..48)
expanding: r336 into: (lshiftrt:SI (value:SI)
    (const_int 20 [0x14]))
expanding value SI into: (plus:SI (value:SI)
    (const_int 1073741824 [0x40000000]))
expanding value SI into: r187
(reg:SI 187 [ high_memory.397 ])
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=397
mems_found = 0, cannot_delete = true

**scanning insn=398
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 48 [0x30]))
  varying cselib base=9 offset = 48
 processing cselib store [48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=400
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 52 [0x34]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 52 [0x34]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 52 [0x34]))
  varying cselib base=9 offset = 52
 processing cselib store [52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=401
mems_found = 0, cannot_delete = true

**scanning insn=402
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 56 [0x38]))
  varying cselib base=9 offset = 56
 processing cselib store [56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=403
mems_found = 0, cannot_delete = true

**scanning insn=404
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 60 [0x3c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 60 [0x3c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 60 [0x3c]))
  varying cselib base=9 offset = 60
 processing cselib store [60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=406
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 64 [0x40]))
  varying cselib base=9 offset = 64
 processing cselib store [64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=408
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 68 [0x44]))
  varying cselib base=9 offset = 68
 processing cselib store [68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=409
mems_found = 0, cannot_delete = true

**scanning insn=410
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 72 [0x48]))
  varying cselib base=9 offset = 72
 processing cselib store [72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=411
mems_found = 0, cannot_delete = true

**scanning insn=412
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 76 [0x4c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 76 [0x4c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 76 [0x4c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 76 [0x4c]))
  varying cselib base=9 offset = 76
 processing cselib store [76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=413
mems_found = 0, cannot_delete = true

**scanning insn=415
mems_found = 0, cannot_delete = true

**scanning insn=417
mems_found = 0, cannot_delete = true

**scanning insn=418
mems_found = 0, cannot_delete = true

**scanning insn=419
mems_found = 0, cannot_delete = true

**scanning insn=420
mems_found = 0, cannot_delete = true

**scanning insn=421
mems_found = 0, cannot_delete = true

**scanning insn=422
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 80 [0x50]))
  varying cselib base=9 offset = 80
 processing cselib store [80..84)
expanding: r352 into: (ashiftrt:SI (value:SI)
    (const_int 10 [0xa]))
expanding value SI into: (if_then_else:SI (lt (value:CC)
        (const_int 0 [0x0]))
    (value:SI)
    (value:SI))
r349
expanding: r349 into: (if_then_else:SI (lt (value:CC)
        (const_int 0 [0x0]))
    (value:SI)
    (value:SI))
NULL
    trying store in insn=412 gid=-1[76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=423
mems_found = 0, cannot_delete = true

**scanning insn=424
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 84 [0x54]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 84 [0x54]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 84 [0x54]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 84 [0x54]))
  varying cselib base=9 offset = 84
 processing cselib store [84..88)
    trying store in insn=422 gid=-1[80..84)
    trying store in insn=412 gid=-1[76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=425
mems_found = 0, cannot_delete = true

**scanning insn=426
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 88 [0x58]))
  varying cselib base=9 offset = 88
 processing cselib store [88..92)
    trying store in insn=424 gid=-1[84..88)
    trying store in insn=422 gid=-1[80..84)
    trying store in insn=412 gid=-1[76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=427
mems_found = 0, cannot_delete = true

**scanning insn=429
mems_found = 0, cannot_delete = true

**scanning insn=431
mems_found = 0, cannot_delete = true

**scanning insn=432
mems_found = 0, cannot_delete = true

**scanning insn=433
mems_found = 0, cannot_delete = true

**scanning insn=434
mems_found = 0, cannot_delete = true

**scanning insn=435
mems_found = 0, cannot_delete = true

**scanning insn=436
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 92 [0x5c]))
  varying cselib base=9 offset = 92
 processing cselib store [92..96)
expanding: r362 into: (ashiftrt:SI (value:SI)
    (const_int 10 [0xa]))
expanding value SI into: (if_then_else:SI (lt (value:CC)
        (const_int 0 [0x0]))
    (value:SI)
    (value:SI))
r359
expanding: r359 into: (if_then_else:SI (lt (value:CC)
        (const_int 0 [0x0]))
    (value:SI)
    (value:SI))
NULL
    trying store in insn=426 gid=-1[88..92)
    trying store in insn=424 gid=-1[84..88)
    trying store in insn=422 gid=-1[80..84)
    trying store in insn=412 gid=-1[76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=437
mems_found = 0, cannot_delete = true

**scanning insn=438
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 96 [0x60]))
  varying cselib base=9 offset = 96
 processing cselib store [96..100)
    trying store in insn=436 gid=-1[92..96)
    trying store in insn=426 gid=-1[88..92)
    trying store in insn=424 gid=-1[84..88)
    trying store in insn=422 gid=-1[80..84)
    trying store in insn=412 gid=-1[76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=439
mems_found = 0, cannot_delete = true

**scanning insn=440
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 100 [0x64]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 100 [0x64]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 100 [0x64]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 100 [0x64]))
  varying cselib base=9 offset = 100
 processing cselib store [100..104)
    trying store in insn=438 gid=-1[96..100)
    trying store in insn=436 gid=-1[92..96)
    trying store in insn=426 gid=-1[88..92)
    trying store in insn=424 gid=-1[84..88)
    trying store in insn=422 gid=-1[80..84)
    trying store in insn=412 gid=-1[76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=441
mems_found = 0, cannot_delete = true

**scanning insn=443
mems_found = 0, cannot_delete = true

**scanning insn=445
mems_found = 0, cannot_delete = true

**scanning insn=446
mems_found = 0, cannot_delete = true

**scanning insn=447
mems_found = 0, cannot_delete = true

**scanning insn=448
mems_found = 0, cannot_delete = true

**scanning insn=449
mems_found = 0, cannot_delete = true

**scanning insn=450
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 104 [0x68]))
  varying cselib base=9 offset = 104
 processing cselib store [104..108)
expanding: r372 into: (ashiftrt:SI (value:SI)
    (const_int 10 [0xa]))
expanding value SI into: (if_then_else:SI (lt (value:CC)
        (const_int 0 [0x0]))
    (value:SI)
    (value:SI))
r369
expanding: r369 into: (if_then_else:SI (lt (value:CC)
        (const_int 0 [0x0]))
    (value:SI)
    (value:SI))
NULL
    trying store in insn=440 gid=-1[100..104)
    trying store in insn=438 gid=-1[96..100)
    trying store in insn=436 gid=-1[92..96)
    trying store in insn=426 gid=-1[88..92)
    trying store in insn=424 gid=-1[84..88)
    trying store in insn=422 gid=-1[80..84)
    trying store in insn=412 gid=-1[76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=451
mems_found = 0, cannot_delete = true

**scanning insn=452
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 108 [0x6c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 108 [0x6c]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 108 [0x6c]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 108 [0x6c]))
  varying cselib base=9 offset = 108
 processing cselib store [108..112)
    trying store in insn=450 gid=-1[104..108)
    trying store in insn=440 gid=-1[100..104)
    trying store in insn=438 gid=-1[96..100)
    trying store in insn=436 gid=-1[92..96)
    trying store in insn=426 gid=-1[88..92)
    trying store in insn=424 gid=-1[84..88)
    trying store in insn=422 gid=-1[80..84)
    trying store in insn=412 gid=-1[76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=453
mems_found = 0, cannot_delete = true

**scanning insn=454
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 112 [0x70]))
  varying cselib base=9 offset = 112
 processing cselib store [112..116)
    trying store in insn=452 gid=-1[108..112)
    trying store in insn=450 gid=-1[104..108)
    trying store in insn=440 gid=-1[100..104)
    trying store in insn=438 gid=-1[96..100)
    trying store in insn=436 gid=-1[92..96)
    trying store in insn=426 gid=-1[88..92)
    trying store in insn=424 gid=-1[84..88)
    trying store in insn=422 gid=-1[80..84)
    trying store in insn=412 gid=-1[76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=455
mems_found = 0, cannot_delete = true

**scanning insn=457
mems_found = 0, cannot_delete = true

**scanning insn=459
mems_found = 0, cannot_delete = true

**scanning insn=460
mems_found = 0, cannot_delete = true

**scanning insn=461
mems_found = 0, cannot_delete = true

**scanning insn=462
mems_found = 0, cannot_delete = true

**scanning insn=463
mems_found = 0, cannot_delete = true

**scanning insn=464
  mem: (plus:SI (reg/f:SI 13 sp)
    (const_int 116 [0x74]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 116 [0x74]))

   after cselib_expand address: (plus:SI (reg/f:SI 13 sp)
    (const_int 116 [0x74]))

   after canon_rtx address: (plus:SI (reg/f:SI 13 sp)
    (const_int 116 [0x74]))
  varying cselib base=9 offset = 116
 processing cselib store [116..120)
expanding: r382 into: (ashiftrt:SI (value:SI)
    (const_int 10 [0xa]))
expanding value SI into: (if_then_else:SI (lt (value:CC)
        (const_int 0 [0x0]))
    (value:SI)
    (value:SI))
r379
expanding: r379 into: (if_then_else:SI (lt (value:CC)
        (const_int 0 [0x0]))
    (value:SI)
    (value:SI))
NULL
    trying store in insn=454 gid=-1[112..116)
    trying store in insn=452 gid=-1[108..112)
    trying store in insn=450 gid=-1[104..108)
    trying store in insn=440 gid=-1[100..104)
    trying store in insn=438 gid=-1[96..100)
    trying store in insn=436 gid=-1[92..96)
    trying store in insn=426 gid=-1[88..92)
    trying store in insn=424 gid=-1[84..88)
    trying store in insn=422 gid=-1[80..84)
    trying store in insn=412 gid=-1[76..80)
    trying store in insn=410 gid=-1[72..76)
    trying store in insn=408 gid=-1[68..72)
    trying store in insn=406 gid=-1[64..68)
    trying store in insn=404 gid=-1[60..64)
    trying store in insn=402 gid=-1[56..60)
    trying store in insn=400 gid=-1[52..56)
    trying store in insn=398 gid=-1[48..52)
    trying store in insn=396 gid=-1[44..48)
    trying store in insn=393 gid=-1[40..44)
    trying store in insn=392 gid=-1[36..40)
    trying store in insn=390 gid=-1[32..36)
    trying store in insn=387 gid=-1[28..32)
    trying store in insn=385 gid=-1[24..28)
    trying store in insn=384 gid=-1[20..24)
    trying store in insn=382 gid=-1[16..20)
    trying store in insn=380 gid=-1[12..16)
    trying store in insn=378 gid=-1[8..12)
    trying store in insn=376 gid=-1[4..8)
    trying store in insn=374 gid=-1[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=465
mems_found = 0, cannot_delete = true

**scanning insn=466
mems_found = 0, cannot_delete = true

**scanning insn=467
mems_found = 0, cannot_delete = true

**scanning insn=468
mems_found = 0, cannot_delete = true

**scanning insn=469
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=12 offset=0 
 processing const load gid=12[0..4)
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+4): n  p 0, 1, 2, 3
group 6(0+0): n  p 
group 7(0+0): n  p 
group 8(0+0): n  p 
group 9(0+4): n  p 0, 1, 2, 3
group 10(0+0): n  p 
group 11(0+0): n  p 
group 12(0+0): n  p 
group 13(0+4): n  p 0, 1, 2, 3
group 14(0+0): n  p 
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
doing global processing
df_worklist_dataflow_doublequeue:n_basic_blocks 44 n_edges 61 count 99 (  2.2)


*** Global dataflow info after analysis.

( )->[0]->( 2 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 0 )->[2]->( 7 )
  in:   
  gen:  
  kill: 
  out:  

( 7 )->[3]->( 4 6 )
  in:   
  gen:  
  kill: 
  out:  

( 3 )->[4]->( 5 6 )
  in:   
  gen:  
  kill: 
  out:  

( 4 )->[5]->( 6 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 3 4 5 )->[6]->( 7 )
  in:   
  gen:  
  kill: 
  out:  

( 2 6 )->[7]->( 3 8 )
  in:   
  gen:  
  kill: 
  out:  

( 7 )->[8]->( 27 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 27 )->[9]->( 26 10 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
  out:  

( 9 )->[10]->( 20 )
  in:   
  gen:  
  kill: 
  out:  

( 20 )->[11]->( 19 12 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
  out:  

( 11 )->[12]->( 13 17 )
  in:   
  gen:  
  kill: 
  out:  

( 12 )->[13]->( 15 )
  in:   
  gen:  
  kill: 5, 6, 7, 8
  out:  

( 15 )->[14]->( 15 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 13 14 )->[15]->( 14 16 )
  in:   
  gen:  
  kill: 
  out:  

( 15 )->[16]->( 17 )
  in:   5, 6, 7, 8
  gen:  5, 6, 7, 8
  kill: 
  out:  

( 12 16 )->[17]->( 26 18 )
  in:   
  gen:  
  kill: 
  out:  

( 17 )->[18]->( 19 )
  in:   
  gen:  
  kill: 
  out:  

( 11 18 )->[19]->( 20 )
  in:   
  gen:  
  kill: 
  out:  

( 10 19 )->[20]->( 11 21 )
  in:   
  gen:  
  kill: 
  out:  

( 20 )->[21]->( 22 26 )
  in:   
  gen:  
  kill: 
  out:  

( 21 )->[22]->( 24 )
  in:   
  gen:  
  kill: 5, 6, 7, 8
  out:  

( 24 )->[23]->( 24 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 22 23 )->[24]->( 23 25 )
  in:   
  gen:  
  kill: 
  out:  

( 24 )->[25]->( 26 )
  in:   5, 6, 7, 8
  gen:  5, 6, 7, 8
  kill: 
  out:  

( 9 21 25 17 )->[26]->( 27 )
  in:   
  gen:  
  kill: 
  out:  

( 8 26 )->[27]->( 9 28 )
  in:   
  gen:  
  kill: 
  out:  

( 27 )->[28]->( 39 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8
  out:  

( 39 )->[29]->( 30 )
  in:   
  gen:  
  kill: 
  out:  

( 29 37 )->[30]->( 31 32 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 30 )->[31]->( 37 )
  in:   
  gen:  
  kill: 
  out:  

( 30 )->[32]->( 34 33 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 32 )->[33]->( 35 )
  in:   
  gen:  
  kill: 
  out:  

( 32 )->[34]->( 35 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
  out:  

( 33 34 )->[35]->( 36 37 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 35 )->[36]->( 37 )
  in:   
  gen:  
  kill: 
  out:  

( 31 35 36 )->[37]->( 30 38 )
  in:   
  gen:  
  kill: 
  out:  

( 37 )->[38]->( 39 )
  in:   
  gen:  
  kill: 
  out:  

( 28 38 )->[39]->( 29 40 )
  in:   
  gen:  
  kill: 
  out:  

( 39 )->[40]->( 42 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 42 )->[41]->( 42 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 40 41 )->[42]->( 41 43 )
  in:   
  gen:  
  kill: 
  out:  

( 42 )->[43]->( 1 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 43 )->[1]->( )
  in:   
  gen:  
  kill: *MISSING*
  out:  *MISSING*

starting to process insn 39
  v:  
starting to process insn 21
  v:  
starting to process insn 74
  v:  
starting to process insn 16
  v:  
starting to process insn 15
  v:  
starting to process insn 14
  v:  
starting to process insn 13
  v:  
starting to process insn 12
  v:  
starting to process insn 11
  v:  
starting to process insn 10
  v:  
regular read
starting to process insn 9
  v:  
starting to process insn 8
  v:  
starting to process insn 37
  v:  
starting to process insn 36
  v:  
starting to process insn 35
  v:  
starting to process insn 34
  v:  
starting to process insn 33
  v:  
starting to process insn 31
  v:  
starting to process insn 30
  v:  
starting to process insn 28
  v:  
starting to process insn 27
  v:  
starting to process insn 26
  v:  
starting to process insn 25
  v:  
starting to process insn 24
  v:  
starting to process insn 23
  v:  
regular read
starting to process insn 22
  v:  
starting to process insn 53
  v:  
starting to process insn 52
  v:  
starting to process insn 51
  v:  
starting to process insn 50
  v:  
starting to process insn 49
  v:  
starting to process insn 48
  v:  
starting to process insn 47
  v:  
starting to process insn 46
  v:  
starting to process insn 45
  v:  
starting to process insn 44
  v:  
starting to process insn 43
  v:  
starting to process insn 42
  v:  
starting to process insn 41
  v:  
starting to process insn 40
  v:  
regular read
starting to process insn 58
  v:  
wild read
starting to process insn 57
  v:  
starting to process insn 56
  v:  
starting to process insn 55
  v:  
starting to process insn 70
  v:  
starting to process insn 69
  v:  
starting to process insn 68
  v:  
starting to process insn 67
  v:  
starting to process insn 66
  v:  
starting to process insn 65
  v:  
starting to process insn 64
  v:  
starting to process insn 63
  v:  
starting to process insn 62
  v:  
regular read
starting to process insn 61
  v:  
regular read
starting to process insn 77
  v:  
starting to process insn 76
  v:  
starting to process insn 75
  v:  
regular read
starting to process insn 138
  v:  
starting to process insn 132
  v:  
starting to process insn 125
  v:  
starting to process insn 216
  v:  
starting to process insn 89
  v:  
regular read
starting to process insn 88
  v:  
starting to process insn 87
  v:  
regular read
starting to process insn 86
  v:  
starting to process insn 85
  v:  
starting to process insn 84
  v:  1, 2, 3, 4
starting to process insn 82
  v:  1, 2, 3, 4
starting to process insn 81
  v:  1, 2, 3, 4
wild read
starting to process insn 80
  v:  
regular read
starting to process insn 79
  v:  
starting to process insn 98
  v:  
starting to process insn 97
  v:  
starting to process insn 96
  v:  
starting to process insn 95
  v:  
starting to process insn 94
  v:  
regular read
starting to process insn 93
  v:  
regular read
starting to process insn 105
  v:  
regular read
starting to process insn 103
  v:  
starting to process insn 102
  v:  
starting to process insn 101
  v:  
starting to process insn 100
  v:  
starting to process insn 116
  v:  
starting to process insn 115
  v:  
starting to process insn 114
  v:  
starting to process insn 113
  v:  
starting to process insn 112
  v:  
starting to process insn 111
  v:  
starting to process insn 110
  v:  
regular read
starting to process insn 109
  v:  
regular read
starting to process insn 123
  v:  
starting to process insn 122
  v:  
starting to process insn 121
  v:  
starting to process insn 120
  v:  
starting to process insn 119
  v:  
starting to process insn 118
  v:  
starting to process insn 128
  v:  
starting to process insn 127
  v:  
starting to process insn 126
  v:  
regular read
starting to process insn 144
  v:  
starting to process insn 143
  v:  
starting to process insn 142
  v:  
wild read
starting to process insn 493
  v:  
starting to process insn 140
  v:  
starting to process insn 139
  v:  
starting to process insn 137
  v:  
wild read
starting to process insn 136
  v:  
starting to process insn 491
  v:  
starting to process insn 134
  v:  
starting to process insn 133
  v:  
regular read
starting to process insn 149
  v:  
starting to process insn 148
  v:  
starting to process insn 154
  v:  
starting to process insn 153
  v:  5, 6, 7, 8
starting to process insn 152
  v:  5, 6, 7, 8
starting to process insn 158
  v:  
starting to process insn 157
  v:  
starting to process insn 160
  v:  
starting to process insn 163
  v:  
starting to process insn 174
  v:  
starting to process insn 173
  v:  
starting to process insn 172
  v:  
starting to process insn 171
  v:  
regular read
starting to process insn 170
  v:  
starting to process insn 169
  v:  
regular read
starting to process insn 179
  v:  
starting to process insn 178
  v:  
starting to process insn 176
  v:  
starting to process insn 183
  v:  
starting to process insn 182
  v:  
regular read
starting to process insn 199
  v:  
starting to process insn 198
  v:  
starting to process insn 197
  v:  
wild read
starting to process insn 489
  v:  
starting to process insn 195
  v:  
starting to process insn 194
  v:  
starting to process insn 192
  v:  
wild read
starting to process insn 191
  v:  
starting to process insn 487
  v:  
starting to process insn 189
  v:  
starting to process insn 188
  v:  
regular read
starting to process insn 204
  v:  
starting to process insn 203
  v:  
starting to process insn 209
  v:  
starting to process insn 208
  v:  5, 6, 7, 8
starting to process insn 207
  v:  5, 6, 7, 8
starting to process insn 212
  v:  
starting to process insn 223
  v:  
starting to process insn 222
  v:  
starting to process insn 221
  v:  
starting to process insn 220
  v:  
regular read
starting to process insn 219
  v:  
starting to process insn 218
  v:  
regular read
starting to process insn 244
  v:  
starting to process insn 239
  v:  
starting to process insn 238
  v:  
starting to process insn 237
  v:  
starting to process insn 236
  v:  
starting to process insn 235
  v:  
regular read
starting to process insn 234
  v:  
starting to process insn 233
  v:  
regular read
starting to process insn 232
  v:  
starting to process insn 231
  v:  
starting to process insn 230
  v:  1, 2, 3, 4
starting to process insn 229
  v:  1, 2, 3, 4
regular read
starting to process insn 228
  v:  
regular read
starting to process insn 226
  v:  
starting to process insn 225
  v:  
starting to process insn 254
  v:  
starting to process insn 253
  v:  
starting to process insn 252
  v:  
starting to process insn 251
  v:  
starting to process insn 250
  v:  
regular read
starting to process insn 249
  v:  
starting to process insn 248
  v:  
starting to process insn 247
  v:  
starting to process insn 246
  v:  
regular read
starting to process insn 245
  v:  
starting to process insn 260
  v:  
starting to process insn 259
  v:  
starting to process insn 258
  v:  
starting to process insn 257
  v:  
wild read
starting to process insn 262
  v:  
starting to process insn 270
  v:  
starting to process insn 269
  v:  
starting to process insn 268
  v:  
starting to process insn 267
  v:  
wild read
starting to process insn 272
  v:  
starting to process insn 277
  v:  
regular read
starting to process insn 283
  v:  
starting to process insn 282
  v:  
starting to process insn 281
  v:  
wild read
starting to process insn 280
  v:  
starting to process insn 285
  v:  
starting to process insn 291
  v:  
starting to process insn 290
  v:  
starting to process insn 288
  v:  
starting to process insn 294
  v:  
starting to process insn 293
  v:  
starting to process insn 299
  v:  
starting to process insn 298
  v:  
starting to process insn 478
  v:  
starting to process insn 335
  v:  
starting to process insn 308
  v:  
regular read
starting to process insn 307
  v:  
starting to process insn 306
  v:  
starting to process insn 305
  v:  9, 10, 11, 12
starting to process insn 304
  v:  9, 10, 11, 12
starting to process insn 303
  v:  9, 10, 11, 12
wild read
starting to process insn 302
  v:  
starting to process insn 329
  v:  
wild read
starting to process insn 328
  v:  
starting to process insn 484
  v:  
starting to process insn 326
  v:  
starting to process insn 324
  v:  
starting to process insn 323
  v:  9, 10, 11, 12
starting to process insn 322
  v:  9, 10, 11, 12
regular read
starting to process insn 319
  v:  
starting to process insn 318
  v:  
starting to process insn 317
  v:  
starting to process insn 316
  v:  
starting to process insn 315
  v:  
starting to process insn 314
  v:  
starting to process insn 313
  v:  
regular read
starting to process insn 312
  v:  
regular read
starting to process insn 342
  v:  
starting to process insn 483
  v:  
starting to process insn 341
  v:  
starting to process insn 340
  v:  
starting to process insn 339
  v:  
regular read
starting to process insn 338
  v:  
starting to process insn 337
  v:  
regular read
starting to process insn 333
  v:  
starting to process insn 332
  v:  
starting to process insn 469
  v:  
wild read
starting to process insn 468
  v:  
starting to process insn 467
  v:  
starting to process insn 466
  v:  
starting to process insn 465
  v:  
starting to process insn 464
  v:  
starting to process insn 463
  v:  
starting to process insn 462
  v:  
starting to process insn 461
  v:  
starting to process insn 460
  v:  
starting to process insn 459
  v:  
starting to process insn 457
  v:  
starting to process insn 455
  v:  
starting to process insn 454
  v:  
starting to process insn 453
  v:  
starting to process insn 452
  v:  
starting to process insn 451
  v:  
starting to process insn 450
  v:  
starting to process insn 449
  v:  
starting to process insn 448
  v:  
starting to process insn 447
  v:  
starting to process insn 446
  v:  
starting to process insn 445
  v:  
starting to process insn 443
  v:  
starting to process insn 441
  v:  
starting to process insn 440
  v:  
starting to process insn 439
  v:  
starting to process insn 438
  v:  
starting to process insn 437
  v:  
starting to process insn 436
  v:  
starting to process insn 435
  v:  
starting to process insn 434
  v:  
starting to process insn 433
  v:  
starting to process insn 432
  v:  
starting to process insn 431
  v:  
starting to process insn 429
  v:  
starting to process insn 427
  v:  
starting to process insn 426
  v:  
starting to process insn 425
  v:  
starting to process insn 424
  v:  
starting to process insn 423
  v:  
starting to process insn 422
  v:  
starting to process insn 421
  v:  
starting to process insn 420
  v:  
starting to process insn 419
  v:  
starting to process insn 418
  v:  
starting to process insn 417
  v:  
starting to process insn 415
  v:  
starting to process insn 413
  v:  
starting to process insn 412
  v:  
starting to process insn 411
  v:  
starting to process insn 410
  v:  
starting to process insn 409
  v:  
starting to process insn 408
  v:  
starting to process insn 406
  v:  
starting to process insn 404
  v:  
starting to process insn 403
  v:  
starting to process insn 402
  v:  
starting to process insn 401
  v:  
starting to process insn 400
  v:  
starting to process insn 398
  v:  
starting to process insn 397
  v:  
starting to process insn 396
  v:  
starting to process insn 395
  v:  
starting to process insn 394
  v:  
starting to process insn 393
  v:  
starting to process insn 392
  v:  
starting to process insn 391
  v:  
starting to process insn 390
  v:  
starting to process insn 389
  v:  
starting to process insn 388
  v:  
starting to process insn 387
  v:  
starting to process insn 386
  v:  
starting to process insn 385
  v:  
starting to process insn 384
  v:  
starting to process insn 383
  v:  
starting to process insn 382
  v:  
starting to process insn 381
  v:  
starting to process insn 380
  v:  
starting to process insn 379
  v:  
starting to process insn 378
  v:  
starting to process insn 377
  v:  
starting to process insn 376
  v:  
starting to process insn 375
  v:  
starting to process insn 374
  v:  
starting to process insn 373
  v:  
starting to process insn 371
  v:  
starting to process insn 370
  v:  
starting to process insn 369
  v:  
starting to process insn 368
  v:  
regular read
starting to process insn 367
  v:  
starting to process insn 366
  v:  
wild read
starting to process insn 365
  v:  
starting to process insn 364
  v:  
starting to process insn 363
  v:  
starting to process insn 362
  v:  
starting to process insn 361
  v:  
starting to process insn 360
  v:  
starting to process insn 359
  v:  
regular read
starting to process insn 358
  v:  
starting to process insn 357
  v:  
starting to process insn 356
  v:  
starting to process insn 355
  v:  
starting to process insn 354
  v:  
starting to process insn 352
  v:  
wild read
starting to process insn 351
  v:  
starting to process insn 350
  v:  
wild read
starting to process insn 349
  v:  
starting to process insn 348
  v:  
starting to process insn 347
  v:  
starting to process insn 346
  v:  
regular read
dse: local deletions = 0, global deletions = 0, spill deletions = 0


mem_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={22d,11u} r1={21d,9u} r2={14d,2u} r3={14d,2u} r11={1d,43u} r12={12d} r13={1d,85u} r14={12d,1u} r15={11d} r16={11d} r17={11d} r18={11d} r19={11d} r20={11d} r21={11d} r22={11d} r23={11d} r24={39d,24u} r25={1d,43u} r26={1d,42u} r27={11d} r28={11d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={11d} r38={11d} r39={11d} r40={11d} r41={11d} r42={11d} r43={11d} r44={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} r81={11d} r82={11d} r83={11d} r84={11d} r85={11d} r86={11d} r87={11d} r88={11d} r89={11d} r90={11d} r91={11d} r92={11d} r93={11d} r94={11d} r95={11d} r96={11d} r97={11d} r98={11d} r99={11d} r100={11d} r101={11d} r102={11d} r103={11d} r104={11d} r105={11d} r106={11d} r107={11d} r108={11d} r109={11d} r110={11d} r111={11d} r112={11d} r113={11d} r114={11d} r115={11d} r116={11d} r117={11d} r118={11d} r119={11d} r120={11d} r121={11d} r122={11d} r123={11d} r124={11d} r125={11d} r126={11d} r127={11d} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r140={1d,2u} r141={2d,1u} r142={1d,1u} r144={2d,3u} r145={3d,11u} r146={1d,2u} r147={1d,1u} r148={1d,7u} r149={1d,1u} r150={1d,2u} r151={1d,3u} r152={2d,4u,1d} r153={2d,2u} r154={2d,2u} r155={1d,2u} r156={2d,5u,1d} r157={2d,4u} r158={1d,1u} r159={1d,1u} r160={1d,2u,1d} r161={1d,1u} r162={1d,1u} r163={1d,1u} r165={1d,1u} r166={1d,1u} r167={2d,4u} r168={2d,4u} r169={1d,2u} r170={1d,2u,1d} r171={1d,2u} r172={1d,3u} r173={1d,3u} r174={1d,1u,1d} r175={2d,3u} r176={2d,2u} r177={1d,2u} r178={1d,3u} r179={1d,2u} r180={1d,2u} r181={1d,1u} r182={2d,6u} r183={2d,2u} r184={2d,2u} r185={2d,2u} r186={1d,2u} r187={1d,3u} r188={1d,1u} r189={1d,2u} r190={1d,2u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u,1d} r196={1d,1u} r197={1d,1u} r200={1d,1u} r201={1d,1u} r203={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r210={1d,1u} r211={1d,1u,1d} r212={1d,1u,1d} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u,1d} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u,1d} r224={1d,1u,1d} r225={1d,1u} r226={1d,1u} r228={1d,1u} r229={1d,2u} r231={1d,1u} r232={1d,1u} r233={1d,2u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r239={1d,1u,1d} r240={1d,1u} r241={1d,1u} r242={1d,1u} r245={1d,1u} r248={1d,1u} r249={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r258={1d,1u} r261={1d,1u} r262={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,2u} r270={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,2u} r276={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r288={1d,2u} r289={1d,1u} r290={1d,2u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r299={1d,1u} r300={1d,1u} r302={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r311={1d,1u} r312={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u} r319={1d,1u} r320={1d,1u} r321={1d,1u} r322={1d,1u,1d} r323={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,2u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,2u} r335={1d,1u} r336={1d,1u} r337={1d,2u} r339={1d,1u} r340={1d,1u} r343={1d,2u} r344={1d,1u} r345={1d,3u,2d} r346={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,2u} r354={1d,1u} r355={1d,3u,2d} r356={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,2u} r364={1d,1u} r365={1d,3u,2d} r366={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,2u} r374={1d,1u} r375={1d,3u,2d} r376={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,2u} r385={1d,2u} r387={1d,1u} r404={1d,5u} r405={1d,4u} r406={1d,2u} r407={1d,2u} r413={1d,2u} r414={1d,1u} r415={1d,1u} 
;;    total ref usage 2177{1577d,579u,21e} in 345{334 regular + 11 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 152 175 176 193 194 195 196 197 413 414 415
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 152 175 176 193 194 195 196 197 413 414 415
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/mm/init.c:595 (set (reg/f:SI 193)
        (symbol_ref:SI ("max_mapnr") [flags 0xc0] <var_decl 0x110aed20 max_mapnr>)) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/mm/init.c:595 (set (reg/f:SI 194)
        (symbol_ref:SI ("max_pfn") [flags 0xc0] <var_decl 0x1108fae0 max_pfn>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/init.c:595 (set (reg:SI 196 [ max_pfn ])
        (mem/c/i:SI (reg/f:SI 194) [0 max_pfn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 194)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("max_pfn") [flags 0xc0] <var_decl 0x1108fae0 max_pfn>) [0 max_pfn+0 S4 A32])
            (nil))))

(insn 11 10 12 2 arch/arm/mm/init.c:595 (set (reg:SI 195)
        (ashift:SI (reg:SI 196 [ max_pfn ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 196 [ max_pfn ])
        (nil)))

(insn 12 11 13 2 arch/arm/mm/init.c:595 (set (reg:SI 197)
        (ashiftrt:SI (reg:SI 195)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 195)
        (expr_list:REG_EQUAL (div:SI (reg:SI 195)
                (const_int 32 [0x20]))
            (nil))))

(insn 13 12 14 2 arch/arm/mm/init.c:595 (set (mem/c/i:SI (reg/f:SI 193) [0 max_mapnr+0 S4 A32])
        (reg:SI 197)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 197)
        (expr_list:REG_DEAD (reg/f:SI 193)
            (nil))))

(insn 14 13 15 2 arch/arm/mm/init.c:595 (set (reg:SI 152 [ ivtmp.752 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 2 arch/arm/mm/init.c:487 (set (reg/v:SI 176 [ i ])
        (reg:SI 152 [ ivtmp.752 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 16 15 74 2 arch/arm/mm/init.c:480 (set (reg/v:SI 175 [ prev_bank_end ])
        (reg:SI 152 [ ivtmp.752 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 74 16 21 2 arch/arm/mm/init.c:487 discrim 1 (set (reg/f:SI 413)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 21 74 39 2 arch/arm/mm/init.c:584 (set (reg/f:SI 414)
        (plus:SI (reg/f:SI 413)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(insn 39 21 73 2 arch/arm/mm/init.c:457 (set (reg/f:SI 415)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 414
;; lr  def 	 24 [cc] 150 151 174 200 201 203 205 206 207 208
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  gen 	 24 [cc] 150 151 174 200 201 203 205 206 207 208
;; live  kill	

;; Pred edge  7 [88.9%] 
(code_label 73 39 19 3 45 "" [1 uses])

(note 19 73 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 19 23 3 arch/arm/mm/init.c:584 (set (reg/f:SI 151 [ D.26350 ])
        (plus:SI (reg/f:SI 414)
            (reg:SI 152 [ ivtmp.752 ]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 152 [ ivtmp.752 ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))))
        (nil)))

(insn 23 22 24 3 arch/arm/mm/init.c:490 (set (reg:SI 200 [ <variable>.start ])
        (mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.26350 ])
                (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 arch/arm/mm/init.c:490 (set (reg/v:SI 174 [ bank_start ])
        (lshiftrt:SI (reg:SI 200 [ <variable>.start ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 200 [ <variable>.start ])
        (nil)))

(insn 25 24 26 3 arch/arm/mm/init.c:505 (set (reg:SI 201)
        (and:SI (reg/v:SI 174 [ bank_start ])
            (const_int -1021 [0xfffffffffffffc03]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 174 [ bank_start ])
        (nil)))

(insn 26 25 27 3 arch/arm/mm/init.c:505 (set (reg/v:SI 150 [ bank_start.756 ])
        (and:SI (reg:SI 201)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 201)
        (expr_list:REG_EQUAL (and:SI (reg/v:SI 174 [ bank_start ])
                (const_int -1024 [0xfffffffffffffc00]))
            (nil))))

(insn 27 26 28 3 arch/arm/mm/init.c:511 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 175 [ prev_bank_end ])
            (reg/v:SI 150 [ bank_start.756 ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 28 27 30 3 arch/arm/mm/init.c:511 (set (reg:SI 203)
        (ltu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 30 28 31 3 arch/arm/mm/init.c:511 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 175 [ prev_bank_end ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 31 30 33 3 arch/arm/mm/init.c:511 (set (reg:SI 205)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 33 31 34 3 arch/arm/mm/init.c:511 (set (reg:SI 206)
        (and:SI (reg:SI 203)
            (reg:SI 205))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_DEAD (reg:SI 203)
            (nil))))

(insn 34 33 35 3 arch/arm/mm/init.c:511 (set (reg:QI 207)
        (subreg:QI (reg:SI 206) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))

(insn 35 34 36 3 arch/arm/mm/init.c:511 (set (reg:SI 208)
        (zero_extend:SI (reg:QI 207))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 207)
        (nil)))

(insn 36 35 37 3 arch/arm/mm/init.c:511 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 208)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(jump_insn 37 36 38 3 arch/arm/mm/init.c:511 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 175 415
;; lr  def 	 24 [cc] 177 178 179 210 211 212 213 214 215 216 217 218
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 152 175 176 413 414 415
;; live  gen 	 24 [cc] 177 178 179 210 211 212 213 214 215 216 217 218
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 38 37 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 40 38 41 4 arch/arm/mm/init.c:457 (set (reg/f:SI 179 [ mem_map.375 ])
        (mem/f/c/i:SI (reg/f:SI 415) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 41 40 42 4 arch/arm/mm/init.c:464 (set (reg:SI 210)
        (ashift:SI (reg/v:SI 175 [ prev_bank_end ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 175 [ prev_bank_end ])
        (nil)))

(insn 42 41 43 4 arch/arm/mm/init.c:464 (set (reg:SI 211)
        (plus:SI (reg/f:SI 179 [ mem_map.375 ])
            (reg:SI 210))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 43 42 44 4 arch/arm/mm/init.c:464 (set (reg:SI 213)
        (plus:SI (reg:SI 211)
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 211)
        (nil)))

(insn 44 43 45 4 arch/arm/mm/init.c:464 (set (reg:SI 212)
        (plus:SI (reg:SI 213)
            (const_int 1073741839 [0x4000000f]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 213)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 211)
                (const_int 1073745919 [0x40000fff]))
            (nil))))

(insn 45 44 46 4 arch/arm/mm/init.c:464 (set (reg:SI 214)
        (and:SI (reg:SI 212)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 46 45 47 4 arch/arm/mm/init.c:464 (set (reg/v:SI 178 [ pg ])
        (and:SI (reg:SI 214)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 214)
        (expr_list:REG_EQUAL (and:SI (reg:SI 212)
                (const_int -4096 [0xfffffffffffff000]))
            (nil))))

(insn 47 46 48 4 arch/arm/mm/init.c:465 (set (reg:SI 215)
        (ashift:SI (reg/v:SI 150 [ bank_start.756 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 150 [ bank_start.756 ])
        (nil)))

(insn 48 47 49 4 arch/arm/mm/init.c:465 (set (reg:SI 216)
        (plus:SI (reg/f:SI 179 [ mem_map.375 ])
            (reg:SI 215))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_DEAD (reg/f:SI 179 [ mem_map.375 ])
            (nil))))

(insn 49 48 50 4 arch/arm/mm/init.c:465 (set (reg:SI 217)
        (plus:SI (reg:SI 216)
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 216)
        (nil)))

(insn 50 49 51 4 arch/arm/mm/init.c:465 (set (reg:SI 218)
        (and:SI (reg:SI 217)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 217)
        (nil)))

(insn 51 50 52 4 arch/arm/mm/init.c:465 (set (reg/v:SI 177 [ pgend ])
        (and:SI (reg:SI 218)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_EQUAL (and:SI (reg:SI 217)
                (const_int -4096 [0xfffffffffffff000]))
            (nil))))

(insn 52 51 53 4 arch/arm/mm/init.c:471 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 178 [ pg ])
            (reg/v:SI 177 [ pgend ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 53 52 54 4 arch/arm/mm/init.c:471 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415


;; Succ edge  5 [29.0%]  (fallthru)
;; Succ edge  6 [71.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 177 178
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 177 178 413 414 415
;; live  gen 	 0 [r0] 1 [r1] 219
;; live  kill	 14 [lr]

;; Pred edge  4 [29.0%]  (fallthru)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 5 arch/arm/mm/init.c:472 (set (reg:SI 219)
        (minus:SI (reg/v:SI 177 [ pgend ])
            (reg/v:SI 178 [ pg ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 177 [ pgend ])
        (nil)))

(insn 56 55 57 5 arch/arm/mm/init.c:472 (set (reg:SI 0 r0)
        (reg/v:SI 178 [ pg ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 178 [ pg ])
        (nil)))

(insn 57 56 58 5 arch/arm/mm/init.c:472 (set (reg:SI 1 r1)
        (reg:SI 219)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 219)
        (nil)))

(call_insn 58 57 59 5 arch/arm/mm/init.c:472 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_bootmem") [flags 0x41] <function_decl 0x11095600 free_bootmem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 3 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176
;; lr  def 	 152 175 176 220 221 222 223 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 176 413 414 415
;; live  gen 	 152 175 176 220 221 222 223 224 225 226
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [71.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 59 58 60 6 44 "" [2 uses])

(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 62 6 arch/arm/mm/init.c:519 (set (reg:SI 221 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.26350 ])
                (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 6 arch/arm/mm/init.c:519 (set (reg:SI 222 [ <variable>.start ])
        (mem/s/j:SI (plus:SI (reg/f:SI 151 [ D.26350 ])
                (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 151 [ D.26350 ])
        (nil)))

(insn 63 62 64 6 arch/arm/mm/init.c:519 (set (reg:SI 220)
        (plus:SI (reg:SI 221 [ <variable>.size ])
            (reg:SI 222 [ <variable>.start ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 222 [ <variable>.start ])
        (expr_list:REG_DEAD (reg:SI 221 [ <variable>.size ])
            (nil))))

(insn 64 63 65 6 arch/arm/mm/init.c:519 (set (reg:SI 223)
        (lshiftrt:SI (reg:SI 220)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 220)
        (nil)))

(insn 65 64 66 6 arch/arm/mm/init.c:519 (set (reg:SI 225)
        (plus:SI (reg:SI 223)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 223)
        (nil)))

(insn 66 65 67 6 arch/arm/mm/init.c:519 (set (reg:SI 224)
        (plus:SI (reg:SI 225)
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 225)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 223)
                (const_int 1023 [0x3ff]))
            (nil))))

(insn 67 66 68 6 arch/arm/mm/init.c:519 (set (reg:SI 226)
        (and:SI (reg:SI 224)
            (const_int -1021 [0xfffffffffffffc03]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 224)
        (nil)))

(insn 68 67 69 6 arch/arm/mm/init.c:519 (set (reg/v:SI 175 [ prev_bank_end ])
        (and:SI (reg:SI 226)
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 226)
        (expr_list:REG_EQUAL (and:SI (reg:SI 224)
                (const_int -1024 [0xfffffffffffffc00]))
            (nil))))

(insn 69 68 70 6 arch/arm/mm/init.c:487 (set (reg/v:SI 176 [ i ])
        (plus:SI (reg/v:SI 176 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 70 69 71 6 arch/arm/mm/init.c:487 (set (reg:SI 152 [ ivtmp.752 ])
        (plus:SI (reg:SI 152 [ ivtmp.752 ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415


;; Succ edge  7 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u90(11){ }u91(13){ }u92(25){ }u93(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 176 413
;; lr  def 	 24 [cc] 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  gen 	 24 [cc] 228
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru,dfs_back)
(code_label 71 70 72 7 43 "" [0 uses])

(note 72 71 75 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 75 72 76 7 arch/arm/mm/init.c:487 discrim 1 (set (reg:SI 228 [ meminfo.nr_banks ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 413)
                (const_int 4 [0x4])) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))) [0 meminfo.nr_banks+0 S4 A32])
        (nil)))

(insn 76 75 77 7 arch/arm/mm/init.c:487 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 176 [ i ])
            (reg:SI 228 [ meminfo.nr_banks ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 228 [ meminfo.nr_banks ])
        (nil)))

(jump_insn 77 76 78 7 arch/arm/mm/init.c:487 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8889 [0x22b9])
            (nil))))
;; End of basic block 7 -> ( 3 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 175 176 413 414 415


;; Succ edge  3 [88.9%] 
;; Succ edge  8 [11.1%]  (fallthru,loop_exit)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u98(11){ }u99(13){ }u100(25){ }u101(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 167 169 191 192 229 231 232 233 404 405 406 407
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 167 169 191 192 229 231 232 233 404 405 406 407
;; live  kill	 14 [lr]

;; Pred edge  7 [11.1%]  (fallthru,loop_exit)
(note 78 77 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 80 8 arch/arm/mm/init.c:600 (set (reg/f:SI 229)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 80 79 81 8 arch/arm/mm/init.c:600 (set (reg:SI 192 [ totalram_pages.389 ])
        (mem/c/i:SI (reg/f:SI 229) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>) [0 totalram_pages+0 S4 A32])
        (nil)))

(call_insn 81 80 82 8 arch/arm/mm/init.c:600 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("free_all_bootmem") [flags 0x41] <function_decl 0x11095500 free_all_bootmem>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 82 81 84 8 arch/arm/mm/init.c:600 (set (reg:SI 191 [ D.25372 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 84 82 85 8 arch/arm/mm/init.c:600 (set (reg:SI 231)
        (plus:SI (reg:SI 191 [ D.25372 ])
            (reg:SI 192 [ totalram_pages.389 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 192 [ totalram_pages.389 ])
        (expr_list:REG_DEAD (reg:SI 191 [ D.25372 ])
            (nil))))

(insn 85 84 86 8 arch/arm/mm/init.c:600 (set (mem/c/i:SI (reg/f:SI 229) [0 totalram_pages+0 S4 A32])
        (reg:SI 231)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_DEAD (reg/f:SI 229)
            (nil))))

(insn 86 85 87 8 arch/arm/mm/init.c:532 (set (reg/f:SI 232)
        (symbol_ref:SI ("max_low_pfn") [flags 0xc0] <var_decl 0x1108fa20 max_low_pfn>)) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 8 arch/arm/mm/init.c:532 (set (reg/v:SI 169 [ start ])
        (mem/c/i:SI (reg/f:SI 232) [0 max_low_pfn+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 232)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("max_low_pfn") [flags 0xc0] <var_decl 0x1108fa20 max_low_pfn>) [0 max_low_pfn+0 S4 A32])
            (nil))))

(insn 88 87 89 8 arch/arm/mm/init.c:536 (set (reg/f:SI 233)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 89 88 216 8 arch/arm/mm/init.c:536 (set (reg/v/f:SI 167 [ mem ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 233)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 216 89 125 8 arch/arm/mm/init.c:536 discrim 1 (set (reg/f:SI 404)
        (reg/f:SI 233)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 233)
        (expr_list:REG_EQUAL (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
            (nil))))

(insn 125 216 132 8 arch/arm/mm/init.c:564 (set (reg/f:SI 405)
        (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 132 125 138 8 arch/arm/mm/init.c:424 (set (reg/f:SI 406)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 138 132 215 8 include/linux/mm.h:417 (set (reg:SI 407)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 27) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169
;; lr  def 	 24 [cc] 148 170 234 235
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  gen 	 24 [cc] 148 170 234 235
;; live  kill	

;; Pred edge  27 [91.0%] 
(code_label 215 138 92 9 56 "" [1 uses])

(note 92 215 93 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 9 include/linux/memblock.h:120 (set (reg:SI 170 [ D.25753 ])
        (mem/s/j:SI (reg/v/f:SI 167 [ mem ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 94 93 95 9 include/linux/memblock.h:129 (set (reg:SI 235 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 167 [ mem ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 9 include/linux/memblock.h:129 (set (reg:SI 234)
        (plus:SI (reg:SI 170 [ D.25753 ])
            (reg:SI 235 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 235 [ <variable>.size ])
        (nil)))

(insn 96 95 97 9 include/linux/memblock.h:129 (set (reg/v:SI 148 [ start.759 ])
        (lshiftrt:SI (reg:SI 234)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 234)
        (nil)))

(insn 97 96 98 9 arch/arm/mm/init.c:541 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ start.759 ])
            (reg/v:SI 169 [ start ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 98 97 99 9 arch/arm/mm/init.c:541 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 9 -> ( 26 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407


;; Succ edge  26 [50.0%] 
;; Succ edge  10 [50.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169 170 404
;; lr  def 	 24 [cc] 145 149 168 236 237
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 167 169 170 404 405 406 407
;; live  gen 	 145 149 168 236 237
;; live  kill	 24 [cc]

;; Pred edge  9 [50.0%]  (fallthru)
(note 99 98 100 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 101 10 include/linux/memblock.h:120 (set (reg:SI 237)
        (plus:SI (reg:SI 170 [ D.25753 ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 170 [ D.25753 ])
        (nil)))

(insn 101 100 102 10 include/linux/memblock.h:120 (set (reg:SI 236)
        (plus:SI (reg:SI 237)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 237)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 170 [ D.25753 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 102 101 103 10 include/linux/memblock.h:120 (set (reg/v:SI 149 [ start.758 ])
        (lshiftrt:SI (reg:SI 236)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 236)
        (nil)))

(insn 103 102 105 10 include/linux/memblock.h:120 (parallel [
            (set (reg/v:SI 145 [ start.762 ])
                (umax:SI (reg/v:SI 149 [ start.758 ])
                    (reg/v:SI 169 [ start ])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (expr_list:REG_DEAD (reg/v:SI 149 [ start.758 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 105 103 166 10 arch/arm/mm/init.c:549 (set (reg/v/f:SI 168 [ res ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 404)
                (const_int 28 [0x1c])) [0 memblock.reserved.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 28 [0x1c]))) [0 memblock.reserved.regions+0 S4 A32])
        (nil)))
;; End of basic block 10 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 20) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u136(11){ }u137(13){ }u138(25){ }u139(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 168
;; lr  def 	 24 [cc] 146 171 239 240 241 242
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  gen 	 24 [cc] 146 171 239 240 241 242
;; live  kill	

;; Pred edge  20 [95.5%] 
(code_label 166 105 108 11 53 "" [1 uses])

(note 108 166 109 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 11 include/linux/memblock.h:138 (set (reg:SI 171 [ D.25749 ])
        (mem/s/j:SI (reg/v/f:SI 168 [ res ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 110 109 111 11 include/linux/memblock.h:147 (set (reg:SI 240 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 168 [ res ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 111 110 112 11 include/linux/memblock.h:147 (set (reg:SI 239)
        (plus:SI (reg:SI 171 [ D.25749 ])
            (reg:SI 240 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 240 [ <variable>.size ])
        (nil)))

(insn 112 111 113 11 include/linux/memblock.h:147 (set (reg:SI 242)
        (plus:SI (reg:SI 239)
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 239)
        (nil)))

(insn 113 112 114 11 include/linux/memblock.h:147 (set (reg:SI 241)
        (plus:SI (reg:SI 242)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 242)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 239)
                (const_int 4095 [0xfff]))
            (nil))))

(insn 114 113 115 11 include/linux/memblock.h:147 (set (reg/v:SI 146 [ start.761 ])
        (lshiftrt:SI (reg:SI 241)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 241)
        (nil)))

(insn 115 114 116 11 arch/arm/mm/init.c:555 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ start.761 ])
            (reg/v:SI 145 [ start.762 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 116 115 117 11 arch/arm/mm/init.c:555 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 161)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 19 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407


;; Succ edge  19 [50.0%] 
;; Succ edge  12 [50.0%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 171
;; lr  def 	 24 [cc] 138 139 140 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 146 148 167 168 169 171 404 405 406 407
;; live  gen 	 24 [cc] 138 139 140 147
;; live  kill	 24 [cc]

;; Pred edge  11 [50.0%]  (fallthru)
(note 117 116 118 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 12 include/linux/memblock.h:138 (set (reg/v:SI 147 [ start.760 ])
        (lshiftrt:SI (reg:SI 171 [ D.25749 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 171 [ D.25749 ])
        (nil)))

(insn 119 118 120 12 include/linux/memblock.h:138 (parallel [
            (set (reg/v:SI 138 [ start.770 ])
                (umax:SI (reg/v:SI 145 [ start.762 ])
                    (reg/v:SI 147 [ start.760 ])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (expr_list:REG_DEAD (reg/v:SI 147 [ start.760 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 120 119 121 12 include/linux/memblock.h:138 (parallel [
            (set (reg/v:SI 140 [ start.768 ])
                (umin:SI (reg/v:SI 138 [ start.770 ])
                    (reg/v:SI 148 [ start.759 ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 138 [ start.770 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 121 120 122 12 include/linux/memblock.h:138 (parallel [
            (set (reg/v:SI 139 [ start.769 ])
                (umin:SI (reg/v:SI 146 [ start.761 ])
                    (reg/v:SI 148 [ start.759 ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 146 [ start.761 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 122 121 123 12 arch/arm/mm/init.c:563 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ start.768 ])
            (reg/v:SI 145 [ start.762 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 123 122 124 12 arch/arm/mm/init.c:563 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 155)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 12 -> ( 13 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407


;; Succ edge  13 [72.0%]  (fallthru)
;; Succ edge  17 [28.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u165(11){ }u166(13){ }u167(25){ }u168(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 405
;; lr  def 	 144 153 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 145 148 167 168 169 404 405 406 407
;; live  gen 	 144 153 166
;; live  kill	

;; Pred edge  12 [72.0%]  (fallthru)
(note 124 123 126 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 126 124 127 13 arch/arm/mm/init.c:564 (set (reg:SI 166 [ totalhigh_pages.382 ])
        (mem/c/i:SI (reg/f:SI 405) [0 totalhigh_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>) [0 totalhigh_pages+0 S4 A32])
        (nil)))

(insn 127 126 128 13 arch/arm/mm/init.c:564 (set (reg:SI 153 [ ivtmp.734 ])
        (ashift:SI (reg/v:SI 145 [ start.762 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 128 127 147 13 arch/arm/mm/init.c:564 (set (reg/v:SI 144 [ start.763 ])
        (reg/v:SI 145 [ start.762 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 15) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 153 406 407
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 153 172 245
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  gen 	 0 [r0] 1 [r1] 144 153 172 245
;; live  kill	 14 [lr]

;; Pred edge  15 [91.0%] 
(code_label 147 128 131 14 52 "" [1 uses])

(note 131 147 133 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 133 131 134 14 arch/arm/mm/init.c:424 (set (reg/f:SI 245 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 406) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 134 133 491 14 arch/arm/mm/init.c:424 (set (reg/v/f:SI 172 [ page ])
        (plus:SI (reg/f:SI 245 [ mem_map ])
            (reg:SI 153 [ ivtmp.734 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 245 [ mem_map ])
        (nil)))

(insn 491 134 136 14 include/linux/page-flags.h:207 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 136 491 137 14 include/linux/page-flags.h:207 (set (reg:SI 1 r1)
        (reg/v/f:SI 172 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 137 136 139 14 include/linux/page-flags.h:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 139 137 140 14 include/linux/mm.h:417 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 172 [ page ])
                (const_int 16 [0x10])) [0 <variable>.D.8033.D.8032.D.8031._count.counter+0 S4 A32])
        (reg:SI 407)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 140 139 493 14 arch/arm/mm/init.c:427 (set (reg:SI 0 r0)
        (reg/v/f:SI 172 [ page ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 172 [ page ])
        (nil)))

(insn 493 140 142 14 arch/arm/mm/init.c:427 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 142 493 143 14 arch/arm/mm/init.c:427 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 143 142 144 14 arch/arm/mm/init.c:423 discrim 2 (set (reg/v:SI 144 [ start.763 ])
        (plus:SI (reg/v:SI 144 [ start.763 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 144 143 145 14 arch/arm/mm/init.c:423 discrim 2 (set (reg:SI 153 [ ivtmp.734 ])
        (plus:SI (reg:SI 153 [ ivtmp.734 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u191(11){ }u192(13){ }u193(25){ }u194(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
(code_label 145 144 146 15 51 "" [0 uses])

(note 146 145 148 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 148 146 149 15 arch/arm/mm/init.c:423 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ start.763 ])
            (reg/v:SI 140 [ start.768 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 149 148 150 15 arch/arm/mm/init.c:423 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 147)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 15 -> ( 14 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 144 145 148 153 166 167 168 169 404 405 406 407


;; Succ edge  14 [91.0%] 
;; Succ edge  16 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u198(11){ }u199(13){ }u200(25){ }u201(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 148 166 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 145 166 405
;; lr  def 	 248 249
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 144 145 148 166 167 168 169 404 405 406 407
;; live  gen 	 248 249
;; live  kill	

;; Pred edge  15 [9.0%]  (fallthru,loop_exit)
(note 150 149 152 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 152 150 153 16 arch/arm/mm/init.c:564 (set (reg:SI 248)
        (minus:SI (reg:SI 166 [ totalhigh_pages.382 ])
            (reg/v:SI 145 [ start.762 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 166 [ totalhigh_pages.382 ])
        (expr_list:REG_DEAD (reg/v:SI 145 [ start.762 ])
            (nil))))

(insn 153 152 154 16 arch/arm/mm/init.c:564 (set (reg:SI 249)
        (plus:SI (reg:SI 248)
            (reg/v:SI 144 [ start.763 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 248)
        (expr_list:REG_DEAD (reg/v:SI 144 [ start.763 ])
            (nil))))

(insn 154 153 155 16 arch/arm/mm/init.c:564 (set (mem/c/i:SI (reg/f:SI 405) [0 totalhigh_pages+0 S4 A32])
        (reg:SI 249)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 249)
        (nil)))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 12 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  12 [28.0%] 
;; Pred edge  16 [100.0%]  (fallthru)
(code_label 155 154 156 17 50 "" [1 uses])

(note 156 155 157 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 157 156 158 17 arch/arm/mm/init.c:567 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ start.769 ])
            (reg/v:SI 148 [ start.759 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 158 157 159 17 arch/arm/mm/init.c:567 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 17 -> ( 26 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407


;; Succ edge  26 [4.5%]  (loop_exit)
;; Succ edge  18 [95.5%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u215(11){ }u216(13){ }u217(25){ }u218(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 148 167 168 169 404 405 406 407
;; live  gen 	 145
;; live  kill	

;; Pred edge  17 [95.5%]  (fallthru)
(note 159 158 160 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 18 arch/arm/mm/init.c:567 (set (reg/v:SI 145 [ start.762 ])
        (reg/v:SI 139 [ start.769 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ start.769 ])
        (nil)))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 11 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168
;; lr  def 	 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  gen 	 168
;; live  kill	

;; Pred edge  11 [50.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 161 160 162 19 49 "" [1 uses])

(note 162 161 163 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 164 19 arch/arm/mm/init.c:549 (set (reg/v/f:SI 168 [ res ])
        (plus:SI (reg/v/f:SI 168 [ res ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407


;; Succ edge  20 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 10 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168 404
;; lr  def 	 24 [cc] 252 253 254 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  gen 	 24 [cc] 252 253 254 255
;; live  kill	

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%]  (fallthru,dfs_back)
(code_label 164 163 165 20 48 "" [0 uses])

(note 165 164 169 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 169 165 170 20 arch/arm/mm/init.c:549 discrim 1 (set (reg:SI 253 [ memblock.reserved.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 404)
                (const_int 20 [0x14])) [0 memblock.reserved.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 20 [0x14]))) [0 memblock.reserved.cnt+0 S4 A32])
        (nil)))

(insn 170 169 171 20 arch/arm/mm/init.c:549 discrim 1 (set (reg:SI 252)
        (ashift:SI (reg:SI 253 [ memblock.reserved.cnt ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 253 [ memblock.reserved.cnt ])
        (nil)))

(insn 171 170 172 20 arch/arm/mm/init.c:549 discrim 1 (set (reg/f:SI 255 [ memblock.reserved.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 404)
                (const_int 28 [0x1c])) [0 memblock.reserved.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 28 [0x1c]))) [0 memblock.reserved.regions+0 S4 A32])
        (nil)))

(insn 172 171 173 20 arch/arm/mm/init.c:549 discrim 1 (set (reg:SI 254)
        (plus:SI (reg/f:SI 255 [ memblock.reserved.regions ])
            (reg:SI 252))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 255 [ memblock.reserved.regions ])
        (expr_list:REG_DEAD (reg:SI 252)
            (nil))))

(insn 173 172 174 20 arch/arm/mm/init.c:549 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 168 [ res ])
            (reg:SI 254))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 254)
        (nil)))

(jump_insn 174 173 175 20 arch/arm/mm/init.c:549 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 166)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 20 -> ( 11 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 168 169 404 405 406 407


;; Succ edge  11 [95.5%] 
;; Succ edge  21 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u238(11){ }u239(13){ }u240(25){ }u241(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148 167 169 404 405 406 407
;; live  gen 	 24 [cc] 137
;; live  kill	

;; Pred edge  20 [4.5%]  (fallthru,loop_exit)
(note 175 174 176 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 176 175 178 21 arch/arm/mm/init.c:549 discrim 1 (set (reg/v:SI 137 [ start.772 ])
        (reg/v:SI 145 [ start.762 ])) 167 {*arm_movsi_insn} (nil))

(insn 178 176 179 21 arch/arm/mm/init.c:572 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ start.762 ])
            (reg/v:SI 148 [ start.759 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 179 178 180 21 arch/arm/mm/init.c:572 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2628 [0xa44])
            (nil))))
;; End of basic block 21 -> ( 22 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407


;; Succ edge  22 [73.7%]  (fallthru)
;; Succ edge  26 [26.3%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 405
;; lr  def 	 142 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 145 148 167 169 404 405 406 407
;; live  gen 	 142 154
;; live  kill	

;; Pred edge  21 [73.7%]  (fallthru)
(note 180 179 182 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 182 180 183 22 arch/arm/mm/init.c:573 (set (reg:SI 142 [ totalhigh_pages.765 ])
        (mem/c/i:SI (reg/f:SI 405) [0 totalhigh_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>) [0 totalhigh_pages+0 S4 A32])
        (nil)))

(insn 183 182 202 22 arch/arm/mm/init.c:573 (set (reg:SI 154 [ ivtmp.722 ])
        (ashift:SI (reg/v:SI 145 [ start.762 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 24) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u253(11){ }u254(13){ }u255(25){ }u256(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 154 406 407
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 145 154 173 258
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  gen 	 0 [r0] 1 [r1] 145 154 173 258
;; live  kill	 14 [lr]

;; Pred edge  24 [91.0%] 
(code_label 202 183 186 23 55 "" [1 uses])

(note 186 202 188 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 188 186 189 23 arch/arm/mm/init.c:424 (set (reg/f:SI 258 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 406) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
        (nil)))

(insn 189 188 487 23 arch/arm/mm/init.c:424 (set (reg/v/f:SI 173 [ page ])
        (plus:SI (reg/f:SI 258 [ mem_map ])
            (reg:SI 154 [ ivtmp.722 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 258 [ mem_map ])
        (nil)))

(insn 487 189 191 23 include/linux/page-flags.h:207 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 191 487 192 23 include/linux/page-flags.h:207 (set (reg:SI 1 r1)
        (reg/v/f:SI 173 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 192 191 194 23 include/linux/page-flags.h:207 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 194 192 195 23 include/linux/mm.h:417 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 173 [ page ])
                (const_int 16 [0x10])) [0 <variable>.D.8033.D.8032.D.8031._count.counter+0 S4 A32])
        (reg:SI 407)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 195 194 489 23 arch/arm/mm/init.c:427 (set (reg:SI 0 r0)
        (reg/v/f:SI 173 [ page ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 173 [ page ])
        (nil)))

(insn 489 195 197 23 arch/arm/mm/init.c:427 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 197 489 198 23 arch/arm/mm/init.c:427 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10f4c580 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 198 197 199 23 arch/arm/mm/init.c:423 discrim 2 (set (reg/v:SI 145 [ start.762 ])
        (plus:SI (reg/v:SI 145 [ start.762 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 199 198 200 23 arch/arm/mm/init.c:423 discrim 2 (set (reg:SI 154 [ ivtmp.722 ])
        (plus:SI (reg:SI 154 [ ivtmp.722 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407


;; Succ edge  24 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 22 23) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u272(11){ }u273(13){ }u274(25){ }u275(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145 148
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  22 [100.0%]  (fallthru)
;; Pred edge  23 [100.0%]  (fallthru,dfs_back)
(code_label 200 199 201 24 54 "" [0 uses])

(note 201 200 203 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 203 201 204 24 arch/arm/mm/init.c:423 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ start.762 ])
            (reg/v:SI 148 [ start.759 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 204 203 205 24 arch/arm/mm/init.c:423 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 202)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 24 -> ( 23 25)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 145 148 154 167 169 404 405 406 407


;; Succ edge  23 [91.0%] 
;; Succ edge  25 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u279(11){ }u280(13){ }u281(25){ }u282(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 148 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 148 405
;; lr  def 	 261 262
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 142 148 167 169 404 405 406 407
;; live  gen 	 261 262
;; live  kill	

;; Pred edge  24 [9.0%]  (fallthru,loop_exit)
(note 205 204 207 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 207 205 208 25 arch/arm/mm/init.c:573 (set (reg:SI 261)
        (plus:SI (reg/v:SI 148 [ start.759 ])
            (reg:SI 142 [ totalhigh_pages.765 ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 148 [ start.759 ])
        (expr_list:REG_DEAD (reg:SI 142 [ totalhigh_pages.765 ])
            (nil))))

(insn 208 207 209 25 arch/arm/mm/init.c:573 (set (reg:SI 262)
        (minus:SI (reg:SI 261)
            (reg/v:SI 137 [ start.772 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 261)
        (expr_list:REG_DEAD (reg/v:SI 137 [ start.772 ])
            (nil))))

(insn 209 208 210 25 arch/arm/mm/init.c:573 (set (mem/c/i:SI (reg/f:SI 405) [0 totalhigh_pages+0 S4 A32])
        (reg:SI 262)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 262)
        (nil)))
;; End of basic block 25 -> ( 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407


;; Succ edge  26 [100.0%]  (fallthru)

;; Start of basic block ( 9 21 25 17) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u289(11){ }u290(13){ }u291(25){ }u292(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  gen 	 167
;; live  kill	

;; Pred edge  9 [50.0%] 
;; Pred edge  21 [26.3%] 
;; Pred edge  25 [100.0%]  (fallthru)
;; Pred edge  17 [4.5%]  (loop_exit)
(code_label 210 209 211 26 47 "" [3 uses])

(note 211 210 212 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 212 211 213 26 arch/arm/mm/init.c:536 (set (reg/v/f:SI 167 [ mem ])
        (plus:SI (reg/v/f:SI 167 [ mem ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407


;; Succ edge  27 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 8 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u294(11){ }u295(13){ }u296(25){ }u297(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 404
;; lr  def 	 24 [cc] 265 266 267 268
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  gen 	 24 [cc] 265 266 267 268
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  26 [100.0%]  (fallthru,dfs_back)
(code_label 213 212 214 27 46 "" [0 uses])

(note 214 213 218 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 218 214 219 27 arch/arm/mm/init.c:536 discrim 1 (set (reg:SI 266 [ memblock.memory.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 404)
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 8 [0x8]))) [0 memblock.memory.cnt+0 S4 A32])
        (nil)))

(insn 219 218 220 27 arch/arm/mm/init.c:536 discrim 1 (set (reg:SI 265)
        (ashift:SI (reg:SI 266 [ memblock.memory.cnt ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 266 [ memblock.memory.cnt ])
        (nil)))

(insn 220 219 221 27 arch/arm/mm/init.c:536 discrim 1 (set (reg/f:SI 268 [ memblock.memory.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 404)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 221 220 222 27 arch/arm/mm/init.c:536 discrim 1 (set (reg:SI 267)
        (plus:SI (reg/f:SI 268 [ memblock.memory.regions ])
            (reg:SI 265))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 268 [ memblock.memory.regions ])
        (expr_list:REG_DEAD (reg:SI 265)
            (nil))))

(insn 222 221 223 27 arch/arm/mm/init.c:536 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 167 [ mem ])
            (reg:SI 267))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 267)
        (nil)))

(jump_insn 223 222 224 27 arch/arm/mm/init.c:536 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 215)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 27 -> ( 9 28)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169 404 405 406 407


;; Succ edge  9 [91.0%] 
;; Succ edge  28 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u307(11){ }u308(13){ }u309(25){ }u310(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156 183 184 185 188 189 269 270 272 273 274 275 276 387
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 156 183 184 185 188 189 269 270 272 273 274 275 276 387
;; live  kill	

;; Pred edge  27 [9.0%]  (fallthru,loop_exit)
(note 224 223 225 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 225 224 226 28 arch/arm/mm/init.c:575 (set (reg/f:SI 269)
        (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 226 225 228 28 arch/arm/mm/init.c:575 (set (reg/f:SI 270)
        (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 228 226 229 28 arch/arm/mm/init.c:575 (set (reg:SI 272 [ totalhigh_pages ])
        (mem/c/i:SI (reg/f:SI 270) [0 totalhigh_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 270)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>) [0 totalhigh_pages+0 S4 A32])
            (nil))))

(insn 229 228 230 28 arch/arm/mm/init.c:575 (set (reg:SI 273 [ totalram_pages ])
        (mem/c/i:SI (reg/f:SI 269) [0 totalram_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalram_pages") [flags 0xc0] <var_decl 0x11082840 totalram_pages>) [0 totalram_pages+0 S4 A32])
        (nil)))

(insn 230 229 231 28 arch/arm/mm/init.c:575 (set (reg:SI 274)
        (plus:SI (reg:SI 272 [ totalhigh_pages ])
            (reg:SI 273 [ totalram_pages ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 273 [ totalram_pages ])
        (expr_list:REG_DEAD (reg:SI 272 [ totalhigh_pages ])
            (nil))))

(insn 231 230 232 28 arch/arm/mm/init.c:575 (set (mem/c/i:SI (reg/f:SI 269) [0 totalram_pages+0 S4 A32])
        (reg:SI 274)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 274)
        (expr_list:REG_DEAD (reg/f:SI 269)
            (nil))))

(insn 232 231 233 28 arch/arm/mm/init.c:612 discrim 1 (set (reg/f:SI 275)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 233 232 234 28 arch/arm/mm/init.c:612 discrim 1 (set (reg:SI 188 [ D.25389 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 275)
                (const_int 4 [0x4])) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))) [0 meminfo.nr_banks+0 S4 A32])
        (nil)))

(insn 234 233 235 28 arch/arm/mm/init.c:620 (set (reg/f:SI 276)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 235 234 236 28 arch/arm/mm/init.c:620 (set (reg/f:SI 189 [ mem_map.392 ])
        (mem/f/c/i:SI (reg/f:SI 276) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 276)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
            (nil))))

(insn 236 235 237 28 arch/arm/mm/init.c:620 (set (reg:SI 156 [ ivtmp.710 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 237 236 238 28 arch/arm/mm/init.c:612 (set (reg/v:SI 183 [ i ])
        (reg:SI 156 [ ivtmp.710 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 238 237 239 28 arch/arm/mm/init.c:610 (set (reg/v:SI 184 [ free_pages ])
        (reg:SI 156 [ ivtmp.710 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 239 238 244 28 arch/arm/mm/init.c:610 (set (reg/v:SI 185 [ reserved_pages ])
        (reg:SI 156 [ ivtmp.710 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 244 239 297 28 arch/arm/mm/init.c:584 (set (reg/f:SI 387)
        (plus:SI (reg/f:SI 275)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 275)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))
;; End of basic block 28 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387


;; Succ edge  39 [100.0%]  (fallthru)

;; Start of basic block ( 39) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u323(11){ }u324(13){ }u325(25){ }u326(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 189 387
;; lr  def 	 155 181 182 190 279 280 281 282 283 284
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  gen 	 155 181 182 190 279 280 281 282 283 284
;; live  kill	

;; Pred edge  39 [91.0%] 
(code_label 297 244 242 29 63 "" [1 uses])

(note 242 297 245 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 245 242 246 29 arch/arm/mm/init.c:584 (set (reg/f:SI 155 [ D.26304 ])
        (plus:SI (reg/f:SI 387)
            (reg:SI 156 [ ivtmp.710 ]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 156 [ ivtmp.710 ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))))
        (nil)))

(insn 246 245 247 29 arch/arm/mm/init.c:617 (set (reg:SI 190 [ D.25376 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 155 [ D.26304 ])
                (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 247 246 248 29 arch/arm/mm/init.c:620 (set (reg:SI 279)
        (lshiftrt:SI (reg:SI 190 [ D.25376 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 248 247 249 29 arch/arm/mm/init.c:620 (set (reg:SI 280)
        (ashift:SI (reg:SI 279)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 279)
        (nil)))

(insn 249 248 250 29 arch/arm/mm/init.c:620 (set (reg/v/f:SI 182 [ page ])
        (plus:SI (reg/f:SI 189 [ mem_map.392 ])
            (reg:SI 280))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 280)
        (nil)))

(insn 250 249 251 29 arch/arm/mm/init.c:621 (set (reg:SI 282 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 155 [ D.26304 ])
                (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 155 [ D.26304 ])
        (nil)))

(insn 251 250 252 29 arch/arm/mm/init.c:621 (set (reg:SI 281)
        (plus:SI (reg:SI 190 [ D.25376 ])
            (reg:SI 282 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 282 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 190 [ D.25376 ])
            (nil))))

(insn 252 251 253 29 arch/arm/mm/init.c:621 (set (reg:SI 283)
        (lshiftrt:SI (reg:SI 281)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 281)
        (nil)))

(insn 253 252 254 29 arch/arm/mm/init.c:621 (set (reg:SI 284)
        (ashift:SI (reg:SI 283)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 283)
        (nil)))

(insn 254 253 289 29 arch/arm/mm/init.c:621 (set (reg/v/f:SI 181 [ end ])
        (plus:SI (reg/f:SI 189 [ mem_map.392 ])
            (reg:SI 284))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 284)
        (nil)))
;; End of basic block 29 -> ( 30)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  30 [100.0%]  (fallthru)

;; Start of basic block ( 29 37) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u342(11){ }u343(13){ }u344(25){ }u345(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 24 [cc] 165 285
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 165 285
;; live  kill	

;; Pred edge  29 [100.0%]  (fallthru)
;; Pred edge  37 [86.0%]  (dfs_back)
(code_label 289 254 255 30 62 "" [1 uses])

(note 255 289 257 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 257 255 258 30 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 165 [ D.25775 ])
        (mem/v:SI (reg/v/f:SI 182 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 258 257 259 30 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 285)
        (and:SI (reg:SI 165 [ D.25775 ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 165 [ D.25775 ])
        (nil)))

(insn 259 258 260 30 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 285)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 285)
        (nil)))

(jump_insn 260 259 261 30 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 265)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 30 -> ( 31 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  31 [50.0%]  (fallthru)
;; Succ edge  32 [50.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u351(11){ }u352(13){ }u353(25){ }u354(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 185
;; lr  def 	 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 185
;; live  kill	

;; Pred edge  30 [50.0%]  (fallthru)
(note 261 260 262 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 262 261 265 31 arch/arm/mm/init.c:625 (set (reg/v:SI 185 [ reserved_pages ])
        (plus:SI (reg/v:SI 185 [ reserved_pages ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 31 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u356(11){ }u357(13){ }u358(25){ }u359(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 24 [cc] 162 286
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 162 286
;; live  kill	

;; Pred edge  30 [50.0%] 
(code_label 265 262 266 32 58 "" [1 uses])

(note 266 265 267 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 267 266 268 32 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 162 [ D.25790 ])
        (mem/v:SI (reg/v/f:SI 182 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 268 267 269 32 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 286)
        (and:SI (reg:SI 162 [ D.25790 ])
            (const_int 32768 [0x8000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 162 [ D.25790 ])
        (nil)))

(insn 269 268 270 32 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 286)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 286)
        (nil)))

(jump_insn 270 269 271 32 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 275)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 32 -> ( 34 33)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  34 [0.0%] 
;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u364(11){ }u365(13){ }u366(25){ }u367(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 141
;; live  kill	

;; Pred edge  32 [100.0%]  (fallthru)
(note 271 270 272 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 272 271 275 33 include/linux/mm.h:356 (set (reg/v/f:SI 141 [ page.767 ])
        (reg/v/f:SI 182 [ page ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 33 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 32) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u369(11){ }u370(13){ }u371(25){ }u372(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 182
;; lr  def 	 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 141
;; live  kill	

;; Pred edge  32 [0.0%] 
(code_label 275 272 276 34 60 "" [1 uses])

(note 276 275 277 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 277 276 278 34 include/linux/mm.h:355 (set (reg/v/f:SI 141 [ page.767 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 182 [ page ])
                (const_int 28 [0x1c])) [0 <variable>.D.8040.first_page+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 34 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 33 34) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u374(11){ }u375(13){ }u376(25){ }u377(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 161 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 161 163
;; live  kill	

;; Pred edge  33 [100.0%]  (fallthru)
;; Pred edge  34 [100.0%]  (fallthru)
(code_label 278 277 279 35 61 "" [0 uses])

(note 279 278 280 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 280 279 281 35 include/linux/mm.h:376 (set (reg/f:SI 161 [ D.25795 ])
        (plus:SI (reg/v/f:SI 141 [ page.767 ])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 141 [ page.767 ])
        (nil)))

(insn 281 280 282 35 include/linux/mm.h:376 (set (reg:SI 163 [ D.25786 ])
        (mem/v:SI (reg/f:SI 161 [ D.25795 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 161 [ D.25795 ])
        (nil)))

(insn 282 281 283 35 arch/arm/mm/init.c:626 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 163 [ D.25786 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 163 [ D.25786 ])
        (nil)))

(jump_insn 283 282 284 35 arch/arm/mm/init.c:626 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 286)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 35 -> ( 36 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  36 [50.0%]  (fallthru)
;; Succ edge  37 [50.0%] 

;; Start of basic block ( 35) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u382(11){ }u383(13){ }u384(25){ }u385(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184
;; lr  def 	 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 184
;; live  kill	

;; Pred edge  35 [50.0%]  (fallthru)
(note 284 283 285 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 285 284 286 36 arch/arm/mm/init.c:627 (set (reg/v:SI 184 [ free_pages ])
        (plus:SI (reg/v:SI 184 [ free_pages ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 36 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  37 [100.0%]  (fallthru)

;; Start of basic block ( 31 35 36) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u387(11){ }u388(13){ }u389(25){ }u390(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 181 182
;; lr  def 	 24 [cc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  gen 	 24 [cc] 182
;; live  kill	

;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  35 [50.0%] 
;; Pred edge  36 [100.0%]  (fallthru)
(code_label 286 285 287 37 59 "" [1 uses])

(note 287 286 288 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 288 287 290 37 arch/arm/mm/init.c:628 (set (reg/v/f:SI 182 [ page ])
        (plus:SI (reg/v/f:SI 182 [ page ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 290 288 291 37 arch/arm/mm/init.c:629 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 182 [ page ])
            (reg/v/f:SI 181 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 291 290 292 37 arch/arm/mm/init.c:629 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 289)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 37 -> ( 30 38)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 181 182 183 184 185 188 189 387


;; Succ edge  30 [86.0%]  (dfs_back)
;; Succ edge  38 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 37) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u395(11){ }u396(13){ }u397(25){ }u398(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183
;; lr  def 	 156 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  gen 	 156 183
;; live  kill	

;; Pred edge  37 [14.0%]  (fallthru,loop_exit)
(note 292 291 293 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 293 292 294 38 arch/arm/mm/init.c:612 (set (reg/v:SI 183 [ i ])
        (plus:SI (reg/v:SI 183 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 294 293 295 38 arch/arm/mm/init.c:612 (set (reg:SI 156 [ ivtmp.710 ])
        (plus:SI (reg:SI 156 [ ivtmp.710 ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))
;; End of basic block 38 -> ( 39)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387


;; Succ edge  39 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 28 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u401(11){ }u402(13){ }u403(25){ }u404(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 183 188
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  28 [100.0%]  (fallthru)
;; Pred edge  38 [100.0%]  (fallthru,dfs_back)
(code_label 295 294 296 39 57 "" [0 uses])

(note 296 295 298 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 298 296 299 39 arch/arm/mm/init.c:612 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 183 [ i ])
            (reg:SI 188 [ D.25389 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 299 298 300 39 arch/arm/mm/init.c:612 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 297)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 39 -> ( 29 40)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 183 184 185 188 189 387


;; Succ edge  29 [91.0%] 
;; Succ edge  40 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u408(11){ }u409(13){ }u410(25){ }u411(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157 288 289 290 384 385
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185
;; live  gen 	 0 [r0] 157 288 289 290 384 385
;; live  kill	 14 [lr]

;; Pred edge  39 [9.0%]  (fallthru,loop_exit)
(note 300 299 302 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 302 300 303 40 arch/arm/mm/init.c:636 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x116e6fc0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x116e6fc0>)
        (nil)))

(call_insn 303 302 304 40 arch/arm/mm/init.c:636 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 304 303 305 40 arch/arm/mm/init.c:637 (set (reg/f:SI 288)
        (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>)) 167 {*arm_movsi_insn} (nil))

(insn 305 304 306 40 arch/arm/mm/init.c:637 (set (reg:SI 289)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 306 305 307 40 arch/arm/mm/init.c:637 (set (mem/c/i:SI (reg/f:SI 288) [0 num_physpages+0 S4 A32])
        (reg:SI 289)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 289)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 307 306 308 40 arch/arm/mm/init.c:637 (set (reg/f:SI 290)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 308 307 335 40 arch/arm/mm/init.c:637 (set (reg:SI 157 [ ivtmp.692 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 290)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 335 308 478 40 arch/arm/mm/init.c:638 discrim 1 (set (reg/f:SI 384)
        (reg/f:SI 290)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 290)
        (expr_list:REG_EQUAL (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
            (nil))))

(insn 478 335 334 40 (set (reg/f:SI 385)
        (reg/f:SI 288)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 288)
        (expr_list:REG_EQUAL (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>)
            (nil))))
;; End of basic block 40 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385


;; Succ edge  42 [100.0%]  (fallthru)

;; Start of basic block ( 42) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u418(11){ }u419(13){ }u420(25){ }u421(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 385
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 160 180 291 292 293 294 295 296 299 300 302
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  gen 	 0 [r0] 1 [r1] 160 180 291 292 293 294 295 296 299 300 302
;; live  kill	 14 [lr]

;; Pred edge  42 [0.0%] 
(code_label 334 478 311 41 65 "" [1 uses])

(note 311 334 312 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 312 311 313 41 include/linux/memblock.h:129 (set (reg:SI 160 [ D.25802 ])
        (mem/s/j:SI (plus:SI (reg:SI 157 [ ivtmp.692 ])
                (const_int -8 [0xfffffffffffffff8])) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 313 312 314 41 arch/arm/mm/init.c:640 (set (reg:SI 292 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg:SI 157 [ ivtmp.692 ])
                (const_int -4 [0xfffffffffffffffc])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 314 313 315 41 arch/arm/mm/init.c:640 (set (reg:SI 291)
        (plus:SI (reg:SI 160 [ D.25802 ])
            (reg:SI 292 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 292 [ <variable>.size ])
        (nil)))

(insn 315 314 316 41 arch/arm/mm/init.c:640 (set (reg:SI 293)
        (lshiftrt:SI (reg:SI 291)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 291)
        (nil)))

(insn 316 315 317 41 arch/arm/mm/init.c:640 (set (reg:SI 295)
        (plus:SI (reg:SI 160 [ D.25802 ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 160 [ D.25802 ])
        (nil)))

(insn 317 316 318 41 arch/arm/mm/init.c:640 (set (reg:SI 294)
        (plus:SI (reg:SI 295)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 295)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 160 [ D.25802 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 318 317 319 41 arch/arm/mm/init.c:640 (set (reg:SI 296)
        (lshiftrt:SI (reg:SI 294)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 294)
        (nil)))

(insn 319 318 322 41 arch/arm/mm/init.c:640 (set (reg/v:SI 180 [ pages ])
        (minus:SI (reg:SI 293)
            (reg:SI 296))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 296)
        (expr_list:REG_DEAD (reg:SI 293)
            (nil))))

(insn 322 319 323 41 arch/arm/mm/init.c:641 (set (reg:SI 299 [ num_physpages ])
        (mem/c/i:SI (reg/f:SI 385) [0 num_physpages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>) [0 num_physpages+0 S4 A32])
        (nil)))

(insn 323 322 324 41 arch/arm/mm/init.c:641 (set (reg:SI 300)
        (plus:SI (reg/v:SI 180 [ pages ])
            (reg:SI 299 [ num_physpages ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 299 [ num_physpages ])
        (nil)))

(insn 324 323 326 41 arch/arm/mm/init.c:641 (set (mem/c/i:SI (reg/f:SI 385) [0 num_physpages+0 S4 A32])
        (reg:SI 300)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 300)
        (nil)))

(insn 326 324 484 41 arch/arm/mm/init.c:642 (set (reg:SI 302)
        (lshiftrt:SI (reg/v:SI 180 [ pages ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 180 [ pages ])
        (nil)))

(insn 484 326 328 41 arch/arm/mm/init.c:642 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x116e5440>)) 167 {*arm_movsi_insn} (nil))

(insn 328 484 329 41 arch/arm/mm/init.c:642 (set (reg:SI 1 r1)
        (reg:SI 302)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 302)
        (nil)))

(call_insn 329 328 330 41 arch/arm/mm/init.c:642 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 41 -> ( 42)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385


;; Succ edge  42 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 40 41) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u445(11){ }u446(13){ }u447(25){ }u448(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 384
;; lr  def 	 24 [cc] 136 157 305 306 307 308 383
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 384 385
;; live  gen 	 24 [cc] 136 157 305 306 307 308 383
;; live  kill	

;; Pred edge  40 [100.0%]  (fallthru)
;; Pred edge  41 [100.0%]  (fallthru,dfs_back)
(code_label 330 329 331 42 64 "" [0 uses])

(note 331 330 332 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 332 331 333 42 arch/arm/mm/init.c:642 (set (reg/v/f:SI 136 [ reg.773 ])
        (reg:SI 157 [ ivtmp.692 ])) 167 {*arm_movsi_insn} (nil))

(insn 333 332 337 42 arch/arm/mm/init.c:642 (set (reg:SI 157 [ ivtmp.692 ])
        (plus:SI (reg:SI 157 [ ivtmp.692 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 337 333 338 42 arch/arm/mm/init.c:638 discrim 1 (set (reg:SI 306 [ memblock.memory.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 384)
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 8 [0x8]))) [0 memblock.memory.cnt+0 S4 A32])
        (nil)))

(insn 338 337 339 42 arch/arm/mm/init.c:638 discrim 1 (set (reg:SI 305)
        (ashift:SI (reg:SI 306 [ memblock.memory.cnt ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 306 [ memblock.memory.cnt ])
        (nil)))

(insn 339 338 340 42 arch/arm/mm/init.c:638 discrim 1 (set (reg/f:SI 308 [ memblock.memory.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 384)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 340 339 341 42 arch/arm/mm/init.c:638 discrim 1 (set (reg:SI 307)
        (plus:SI (reg/f:SI 308 [ memblock.memory.regions ])
            (reg:SI 305))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 308 [ memblock.memory.regions ])
        (expr_list:REG_DEAD (reg:SI 305)
            (nil))))

(insn 341 340 483 42 arch/arm/mm/init.c:638 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 136 [ reg.773 ])
            (reg:SI 307))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 307)
        (expr_list:REG_DEAD (reg/v/f:SI 136 [ reg.773 ])
            (nil))))

(insn 483 341 342 42 (set (reg/f:SI 383)
        (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>)) 167 {*arm_movsi_insn} (nil))

(jump_insn 342 483 343 42 arch/arm/mm/init.c:638 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 334)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 42 -> ( 41 43)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 383 384 385
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 184 185 383 384 385


;; Succ edge  41 [0.0%] 
;; Succ edge  43 [100.0%]  (fallthru,loop_exit)

;; Start of basic block ( 42) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u460(11){ }u461(13){ }u462(25){ }u463(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185 383
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185 383
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 158 159 186 187 311 312 314 315 316 317 318 319 320 321 322 323 325 326 327 328 329 330 331 332 333 334 335 336 337 339 340 343 344 345 346 349 350 351 352 353 354 355 356 359 360 361 362 363 364 365 366 369 370 371 372 373 374 375 376 379 380 381 382
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 184 185 383
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 158 159 186 187 311 312 314 315 316 317 318 319 320 321 322 323 325 326 327 328 329 330 331 332 333 334 335 336 337 339 340 343 344 345 346 349 350 351 352 353 354 355 356 359 360 361 362 363 364 365 366 369 370 371 372 373 374 375 376 379 380 381 382
;; live  kill	 14 [lr]

;; Pred edge  42 [100.0%]  (fallthru,loop_exit)
(note 343 342 346 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 346 343 347 43 arch/arm/mm/init.c:644 (set (reg:SI 312 [ num_physpages ])
        (mem/c/i:SI (reg/f:SI 383) [0 num_physpages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 383)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("num_physpages") [flags 0xc0] <var_decl 0x110aed80 num_physpages>) [0 num_physpages+0 S4 A32])
            (nil))))

(insn 347 346 348 43 arch/arm/mm/init.c:644 (set (reg:SI 311)
        (lshiftrt:SI (reg:SI 312 [ num_physpages ])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 312 [ num_physpages ])
        (nil)))

(insn 348 347 349 43 arch/arm/mm/init.c:644 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x116e82a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x116e82a0>)
        (nil)))

(insn 349 348 350 43 arch/arm/mm/init.c:644 (set (reg:SI 1 r1)
        (reg:SI 311)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 311)
        (nil)))

(call_insn 350 349 351 43 arch/arm/mm/init.c:644 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 351 350 352 43 include/asm-generic/atomic-long.h:148 (set (reg/f:SI 159 [ D.25815 ])
        (symbol_ref:SI ("vm_stat") [flags 0xc0] <var_decl 0x1119ef00 vm_stat>)) 167 {*arm_movsi_insn} (nil))

(insn 352 351 354 43 include/asm-generic/atomic-long.h:148 (set (reg/v:SI 158 [ x ])
        (mem/v:SI (reg/f:SI 159 [ D.25815 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 159 [ D.25815 ])
        (expr_list:REG_EQUAL (mem/v:SI (symbol_ref:SI ("vm_stat") [flags 0xc0] <var_decl 0x1119ef00 vm_stat>) [0 S4 A32])
            (nil))))

(insn 354 352 355 43 arch/arm/mm/init.c:646 (set (reg:SI 314)
        (smax:SI (reg/v:SI 158 [ x ])
            (const_int 0 [0x0]))) 101 {*smax_0} (expr_list:REG_DEAD (reg/v:SI 158 [ x ])
        (nil)))

(insn 355 354 356 43 arch/arm/mm/init.c:646 (set (reg:SI 315)
        (ashift:SI (reg:SI 314)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 314)
        (nil)))

(insn 356 355 357 43 arch/arm/mm/init.c:646 (set (reg:SI 316)
        (ashift:SI (reg/v:SI 184 [ free_pages ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 184 [ free_pages ])
        (nil)))

(insn 357 356 358 43 arch/arm/mm/init.c:646 (set (reg:SI 317)
        (ashift:SI (reg/v:SI 185 [ reserved_pages ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 185 [ reserved_pages ])
        (nil)))

(insn 358 357 359 43 arch/arm/mm/init.c:646 (set (reg/f:SI 318)
        (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>)) 167 {*arm_movsi_insn} (nil))

(insn 359 358 360 43 arch/arm/mm/init.c:646 (set (reg:SI 320 [ totalhigh_pages ])
        (mem/c/i:SI (reg/f:SI 318) [0 totalhigh_pages+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 318)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("totalhigh_pages") [flags 0xc0] <var_decl 0x113a4600 totalhigh_pages>) [0 totalhigh_pages+0 S4 A32])
            (nil))))

(insn 360 359 361 43 arch/arm/mm/init.c:646 (set (reg:SI 319)
        (ashift:SI (reg:SI 320 [ totalhigh_pages ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 320 [ totalhigh_pages ])
        (nil)))

(insn 361 360 362 43 arch/arm/mm/init.c:646 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 319)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 319)
        (nil)))

(insn 362 361 363 43 arch/arm/mm/init.c:646 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x110f07e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x110f07e0>)
        (nil)))

(insn 363 362 364 43 arch/arm/mm/init.c:646 (set (reg:SI 1 r1)
        (reg:SI 315)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 315)
        (nil)))

(insn 364 363 365 43 arch/arm/mm/init.c:646 (set (reg:SI 2 r2)
        (reg:SI 316)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 316)
        (nil)))

(insn 365 364 366 43 arch/arm/mm/init.c:646 (set (reg:SI 3 r3)
        (reg:SI 317)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 317)
        (nil)))

(call_insn 366 365 367 43 arch/arm/mm/init.c:646 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 367 366 368 43 arch/arm/mm/init.c:687 (set (reg/f:SI 321)
        (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x110aee40 high_memory>)) 167 {*arm_movsi_insn} (nil))

(insn 368 367 369 43 arch/arm/mm/init.c:687 (set (reg:SI 187 [ high_memory.397 ])
        (mem/f/c/i:SI (reg/f:SI 321) [0 high_memory+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 321)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x110aee40 high_memory>) [0 high_memory+0 S4 A32])
            (nil))))

(insn 369 368 370 43 arch/arm/mm/init.c:687 (set (reg:SI 322)
        (plus:SI (reg:SI 187 [ high_memory.397 ])
            (const_int 8388608 [0x800000]))) 4 {*arm_addsi3} (nil))

(insn 370 369 371 43 arch/arm/mm/init.c:687 (set (reg:SI 323)
        (lshiftrt:SI (reg:SI 322)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 322)
        (nil)))

(insn 371 370 373 43 arch/arm/mm/init.c:687 (set (reg:SI 186 [ D.25409 ])
        (ashift:SI (reg:SI 323)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 323)
        (expr_list:REG_EQUAL (and:SI (reg:SI 322)
                (const_int -8388608 [0xffffffffff800000]))
            (nil))))

(insn 373 371 374 43 arch/arm/mm/init.c:656 (set (reg:SI 325)
        (const_int -1048576 [0xfffffffffff00000])) 167 {*arm_movsi_insn} (nil))

(insn 374 373 375 43 arch/arm/mm/init.c:656 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 325)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 325)
        (expr_list:REG_EQUAL (const_int -1048576 [0xfffffffffff00000])
            (nil))))

(insn 375 374 376 43 arch/arm/mm/init.c:656 (set (reg:SI 326)
        (const_int -131072 [0xfffffffffffe0000])) 167 {*arm_movsi_insn} (nil))

(insn 376 375 377 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 326)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 326)
        (expr_list:REG_EQUAL (const_int -131072 [0xfffffffffffe0000])
            (nil))))

(insn 377 376 378 43 arch/arm/mm/init.c:656 (set (reg:SI 327)
        (const_int 896 [0x380])) 167 {*arm_movsi_insn} (nil))

(insn 378 377 379 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 327)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 327)
        (expr_list:REG_EQUAL (const_int 896 [0x380])
            (nil))))

(insn 379 378 380 43 arch/arm/mm/init.c:656 (set (reg:SI 328)
        (const_int -16777216 [0xffffffffff000000])) 167 {*arm_movsi_insn} (nil))

(insn 380 379 381 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 328)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 328)
        (expr_list:REG_EQUAL (const_int -16777216 [0xffffffffff000000])
            (nil))))

(insn 381 380 382 43 arch/arm/mm/init.c:656 (set (reg:SI 329)
        (const_int -2097152 [0xffffffffffe00000])) 167 {*arm_movsi_insn} (nil))

(insn 382 381 383 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 16 [0x10])) [0 S4 A32])
        (reg:SI 329)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 329)
        (expr_list:REG_EQUAL (const_int -2097152 [0xffffffffffe00000])
            (nil))))

(insn 383 382 384 43 arch/arm/mm/init.c:656 (set (reg:SI 330)
        (const_int 14 [0xe])) 167 {*arm_movsi_insn} (nil))

(insn 384 383 385 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 20 [0x14])) [0 S4 A32])
        (reg:SI 330)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 14 [0xe])
        (nil)))

(insn 385 384 386 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 24 [0x18])) [0 S4 A32])
        (reg:SI 186 [ D.25409 ])) 167 {*arm_movsi_insn} (nil))

(insn 386 385 387 43 arch/arm/mm/init.c:656 (set (reg:SI 331)
        (const_int -134217728 [0xfffffffff8000000])) 167 {*arm_movsi_insn} (nil))

(insn 387 386 388 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 28 [0x1c])) [0 S4 A32])
        (reg:SI 331)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 331)
        (expr_list:REG_EQUAL (const_int -134217728 [0xfffffffff8000000])
            (nil))))

(insn 388 387 389 43 arch/arm/mm/init.c:656 (set (reg:SI 332)
        (minus:SI (const_int -134217728 [0xfffffffff8000000])
            (reg:SI 186 [ D.25409 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 186 [ D.25409 ])
        (nil)))

(insn 389 388 390 43 arch/arm/mm/init.c:656 (set (reg:SI 333)
        (lshiftrt:SI (reg:SI 332)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 332)
        (nil)))

(insn 390 389 391 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 32 [0x20])) [0 S4 A32])
        (reg:SI 333)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 333)
        (nil)))

(insn 391 390 392 43 arch/arm/mm/init.c:656 (set (reg:SI 334)
        (const_int -1073741824 [0xffffffffc0000000])) 167 {*arm_movsi_insn} (nil))

(insn 392 391 393 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 36 [0x24])) [0 S4 A32])
        (reg:SI 334)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1073741824 [0xffffffffc0000000])
        (nil)))

(insn 393 392 394 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 40 [0x28])) [0 S4 A32])
        (reg:SI 187 [ high_memory.397 ])) 167 {*arm_movsi_insn} (nil))

(insn 394 393 395 43 arch/arm/mm/init.c:656 (set (reg:SI 335)
        (plus:SI (reg:SI 187 [ high_memory.397 ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 187 [ high_memory.397 ])
        (nil)))

(insn 395 394 396 43 arch/arm/mm/init.c:656 (set (reg:SI 336)
        (lshiftrt:SI (reg:SI 335)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 335)
        (nil)))

(insn 396 395 397 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 44 [0x2c])) [0 S4 A32])
        (reg:SI 336)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 336)
        (nil)))

(insn 397 396 398 43 arch/arm/mm/init.c:656 (set (reg:SI 337)
        (const_int -1075838976 [0xffffffffbfe00000])) 167 {*arm_movsi_insn} (nil))

(insn 398 397 400 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 48 [0x30])) [0 S4 A32])
        (reg:SI 337)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1075838976 [0xffffffffbfe00000])
        (nil)))

(insn 400 398 401 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 52 [0x34])) [0 S4 A32])
        (reg:SI 334)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 334)
        (expr_list:REG_EQUAL (const_int -1073741824 [0xffffffffc0000000])
            (nil))))

(insn 401 400 402 43 arch/arm/mm/init.c:656 (set (reg:SI 339)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 402 401 403 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 56 [0x38])) [0 S4 A32])
        (reg:SI 339)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 339)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn 403 402 404 43 arch/arm/mm/init.c:656 (set (reg:SI 340)
        (const_int -1090519040 [0xffffffffbf000000])) 167 {*arm_movsi_insn} (nil))

(insn 404 403 406 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 60 [0x3c])) [0 S4 A32])
        (reg:SI 340)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 340)
        (expr_list:REG_EQUAL (const_int -1090519040 [0xffffffffbf000000])
            (nil))))

(insn 406 404 408 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 64 [0x40])) [0 S4 A32])
        (reg:SI 337)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 337)
        (expr_list:REG_EQUAL (const_int -1075838976 [0xffffffffbfe00000])
            (nil))))

(insn 408 406 409 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 68 [0x44])) [0 S4 A32])
        (reg:SI 330)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 330)
        (expr_list:REG_EQUAL (const_int 14 [0xe])
            (nil))))

(insn 409 408 410 43 arch/arm/mm/init.c:656 (set (reg/f:SI 343)
        (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f96c0 _text>)) 167 {*arm_movsi_insn} (nil))

(insn 410 409 411 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 72 [0x48])) [0 S4 A32])
        (reg/f:SI 343)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f96c0 _text>)
        (nil)))

(insn 411 410 412 43 arch/arm/mm/init.c:656 (set (reg/f:SI 344)
        (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f9780 _etext>)) 167 {*arm_movsi_insn} (nil))

(insn 412 411 413 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 76 [0x4c])) [0 S4 A32])
        (reg/f:SI 344)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 344)
        (expr_list:REG_EQUAL (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f9780 _etext>)
            (nil))))

(insn 413 412 415 43 arch/arm/mm/init.c:656 (set (reg/f:SI 346)
        (const:SI (plus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f9780 _etext>)
                (const_int 1023 [0x3ff])))) 167 {*arm_movsi_insn} (nil))

(insn 415 413 417 43 arch/arm/mm/init.c:656 (set (reg:SI 345)
        (minus:SI (reg/f:SI 346)
            (reg/f:SI 343))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 346)
        (expr_list:REG_DEAD (reg/f:SI 343)
            (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("_etext") [flags 0xc0] <var_decl 0x113f9780 _etext>)
                    (const:SI (plus:SI (symbol_ref:SI ("_text") [flags 0xc0] <var_decl 0x113f96c0 _text>)
                            (const_int -1023 [0xfffffffffffffc01]))))
                (nil)))))

(insn 417 415 418 43 arch/arm/mm/init.c:656 (set (reg:SI 351)
        (plus:SI (reg:SI 345)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 418 417 419 43 arch/arm/mm/init.c:656 (set (reg:SI 350)
        (plus:SI (reg:SI 351)
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 351)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 345)
                (const_int 1023 [0x3ff]))
            (nil))))

(insn 419 418 420 43 arch/arm/mm/init.c:656 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 345)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 420 419 421 43 arch/arm/mm/init.c:656 (set (reg:SI 349)
        (if_then_else:SI (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 350)
            (reg:SI 345))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 350)
        (expr_list:REG_DEAD (reg:SI 345)
            (expr_list:REG_DEAD (reg:CC 24 cc)
                (nil)))))

(insn 421 420 422 43 arch/arm/mm/init.c:656 (set (reg:SI 352)
        (ashiftrt:SI (reg:SI 349)
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 349)
        (expr_list:REG_EQUAL (div:SI (reg:SI 345)
                (const_int 1024 [0x400]))
            (nil))))

(insn 422 421 423 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 80 [0x50])) [0 S4 A32])
        (reg:SI 352)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 352)
        (nil)))

(insn 423 422 424 43 arch/arm/mm/init.c:656 (set (reg/f:SI 353)
        (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)) 167 {*arm_movsi_insn} (nil))

(insn 424 423 425 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 84 [0x54])) [0 S4 A32])
        (reg/f:SI 353)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
        (nil)))

(insn 425 424 426 43 arch/arm/mm/init.c:656 (set (reg/f:SI 354)
        (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)) 167 {*arm_movsi_insn} (nil))

(insn 426 425 427 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 88 [0x58])) [0 S4 A32])
        (reg/f:SI 354)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 354)
        (expr_list:REG_EQUAL (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
            (nil))))

(insn 427 426 429 43 arch/arm/mm/init.c:656 (set (reg/f:SI 356)
        (const:SI (plus:SI (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
                (const_int 1023 [0x3ff])))) 167 {*arm_movsi_insn} (nil))

(insn 429 427 431 43 arch/arm/mm/init.c:656 (set (reg:SI 355)
        (minus:SI (reg/f:SI 356)
            (reg/f:SI 353))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 356)
        (expr_list:REG_DEAD (reg/f:SI 353)
            (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("__init_end") [flags 0xc0] <var_decl 0x114781e0 __init_end>)
                    (const:SI (plus:SI (symbol_ref:SI ("__init_begin") [flags 0xc0] <var_decl 0x11478180 __init_begin>)
                            (const_int -1023 [0xfffffffffffffc01]))))
                (nil)))))

(insn 431 429 432 43 arch/arm/mm/init.c:656 (set (reg:SI 361)
        (plus:SI (reg:SI 355)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 432 431 433 43 arch/arm/mm/init.c:656 (set (reg:SI 360)
        (plus:SI (reg:SI 361)
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 361)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 355)
                (const_int 1023 [0x3ff]))
            (nil))))

(insn 433 432 434 43 arch/arm/mm/init.c:656 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 355)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 434 433 435 43 arch/arm/mm/init.c:656 (set (reg:SI 359)
        (if_then_else:SI (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 360)
            (reg:SI 355))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 360)
        (expr_list:REG_DEAD (reg:SI 355)
            (expr_list:REG_DEAD (reg:CC 24 cc)
                (nil)))))

(insn 435 434 436 43 arch/arm/mm/init.c:656 (set (reg:SI 362)
        (ashiftrt:SI (reg:SI 359)
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 359)
        (expr_list:REG_EQUAL (div:SI (reg:SI 355)
                (const_int 1024 [0x400]))
            (nil))))

(insn 436 435 437 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 92 [0x5c])) [0 S4 A32])
        (reg:SI 362)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 362)
        (nil)))

(insn 437 436 438 43 arch/arm/mm/init.c:656 (set (reg/f:SI 363)
        (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x11478000 _sdata>)) 167 {*arm_movsi_insn} (nil))

(insn 438 437 439 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 96 [0x60])) [0 S4 A32])
        (reg/f:SI 363)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x11478000 _sdata>)
        (nil)))

(insn 439 438 440 43 arch/arm/mm/init.c:656 (set (reg/f:SI 364)
        (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x11478060 _edata>)) 167 {*arm_movsi_insn} (nil))

(insn 440 439 441 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 100 [0x64])) [0 S4 A32])
        (reg/f:SI 364)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 364)
        (expr_list:REG_EQUAL (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x11478060 _edata>)
            (nil))))

(insn 441 440 443 43 arch/arm/mm/init.c:656 (set (reg/f:SI 366)
        (const:SI (plus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x11478060 _edata>)
                (const_int 1023 [0x3ff])))) 167 {*arm_movsi_insn} (nil))

(insn 443 441 445 43 arch/arm/mm/init.c:656 (set (reg:SI 365)
        (minus:SI (reg/f:SI 366)
            (reg/f:SI 363))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 366)
        (expr_list:REG_DEAD (reg/f:SI 363)
            (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("_edata") [flags 0xc0] <var_decl 0x11478060 _edata>)
                    (const:SI (plus:SI (symbol_ref:SI ("_sdata") [flags 0xc0] <var_decl 0x11478000 _sdata>)
                            (const_int -1023 [0xfffffffffffffc01]))))
                (nil)))))

(insn 445 443 446 43 arch/arm/mm/init.c:656 (set (reg:SI 371)
        (plus:SI (reg:SI 365)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 446 445 447 43 arch/arm/mm/init.c:656 (set (reg:SI 370)
        (plus:SI (reg:SI 371)
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 371)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 365)
                (const_int 1023 [0x3ff]))
            (nil))))

(insn 447 446 448 43 arch/arm/mm/init.c:656 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 365)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 448 447 449 43 arch/arm/mm/init.c:656 (set (reg:SI 369)
        (if_then_else:SI (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 370)
            (reg:SI 365))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 370)
        (expr_list:REG_DEAD (reg:SI 365)
            (expr_list:REG_DEAD (reg:CC 24 cc)
                (nil)))))

(insn 449 448 450 43 arch/arm/mm/init.c:656 (set (reg:SI 372)
        (ashiftrt:SI (reg:SI 369)
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 369)
        (expr_list:REG_EQUAL (div:SI (reg:SI 365)
                (const_int 1024 [0x400]))
            (nil))))

(insn 450 449 451 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 104 [0x68])) [0 S4 A32])
        (reg:SI 372)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 372)
        (nil)))

(insn 451 450 452 43 arch/arm/mm/init.c:656 (set (reg/f:SI 373)
        (symbol_ref:SI ("__bss_start") [flags 0xc0] <var_decl 0x114780c0 __bss_start>)) 167 {*arm_movsi_insn} (nil))

(insn 452 451 453 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 108 [0x6c])) [0 S4 A32])
        (reg/f:SI 373)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("__bss_start") [flags 0xc0] <var_decl 0x114780c0 __bss_start>)
        (nil)))

(insn 453 452 454 43 arch/arm/mm/init.c:656 (set (reg/f:SI 374)
        (symbol_ref:SI ("__bss_stop") [flags 0xc0] <var_decl 0x11478120 __bss_stop>)) 167 {*arm_movsi_insn} (nil))

(insn 454 453 455 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 112 [0x70])) [0 S4 A32])
        (reg/f:SI 374)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 374)
        (expr_list:REG_EQUAL (symbol_ref:SI ("__bss_stop") [flags 0xc0] <var_decl 0x11478120 __bss_stop>)
            (nil))))

(insn 455 454 457 43 arch/arm/mm/init.c:656 (set (reg/f:SI 376)
        (const:SI (plus:SI (symbol_ref:SI ("__bss_stop") [flags 0xc0] <var_decl 0x11478120 __bss_stop>)
                (const_int 1023 [0x3ff])))) 167 {*arm_movsi_insn} (nil))

(insn 457 455 459 43 arch/arm/mm/init.c:656 (set (reg:SI 375)
        (minus:SI (reg/f:SI 376)
            (reg/f:SI 373))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 376)
        (expr_list:REG_DEAD (reg/f:SI 373)
            (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("__bss_stop") [flags 0xc0] <var_decl 0x11478120 __bss_stop>)
                    (const:SI (plus:SI (symbol_ref:SI ("__bss_start") [flags 0xc0] <var_decl 0x114780c0 __bss_start>)
                            (const_int -1023 [0xfffffffffffffc01]))))
                (nil)))))

(insn 459 457 460 43 arch/arm/mm/init.c:656 (set (reg:SI 381)
        (plus:SI (reg:SI 375)
            (const_int 1020 [0x3fc]))) 4 {*arm_addsi3} (nil))

(insn 460 459 461 43 arch/arm/mm/init.c:656 (set (reg:SI 380)
        (plus:SI (reg:SI 381)
            (const_int 3 [0x3]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 381)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 375)
                (const_int 1023 [0x3ff]))
            (nil))))

(insn 461 460 462 43 arch/arm/mm/init.c:656 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 375)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 462 461 463 43 arch/arm/mm/init.c:656 (set (reg:SI 379)
        (if_then_else:SI (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 380)
            (reg:SI 375))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:SI 380)
        (expr_list:REG_DEAD (reg:SI 375)
            (expr_list:REG_DEAD (reg:CC 24 cc)
                (nil)))))

(insn 463 462 464 43 arch/arm/mm/init.c:656 (set (reg:SI 382)
        (ashiftrt:SI (reg:SI 379)
            (const_int 10 [0xa]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 379)
        (expr_list:REG_EQUAL (div:SI (reg:SI 375)
                (const_int 1024 [0x400]))
            (nil))))

(insn 464 463 465 43 arch/arm/mm/init.c:656 (set (mem:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 116 [0x74])) [0 S4 A32])
        (reg:SI 382)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 382)
        (nil)))

(insn 465 464 466 43 arch/arm/mm/init.c:656 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x1161bc00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x1161bc00>)
        (nil)))

(insn 466 465 467 43 arch/arm/mm/init.c:656 (set (reg:SI 1 r1)
        (const_int -65536 [0xffffffffffff0000])) 167 {*arm_movsi_insn} (nil))

(insn 467 466 468 43 arch/arm/mm/init.c:656 (set (reg:SI 2 r2)
        (const_int -61440 [0xffffffffffff1000])) 167 {*arm_movsi_insn} (nil))

(insn 468 467 469 43 arch/arm/mm/init.c:656 (set (reg:SI 3 r3)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(call_insn 469 468 0 43 arch/arm/mm/init.c:656 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 120 [0x78])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 43 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function bootmem_init (bootmem_init)[0:1354] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 31 count 52 (  2.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 31 count 55 (  2.4)

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (plus:SI (reg/f:SI 161)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (const_int 4 [0x4])))
  gid=0 offset=4 
 processing const load gid=0[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=17
  mem: (plus:SI (reg:SI 140 [ ivtmp.847 ])
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:SI (reg:SI 140 [ ivtmp.847 ])
    (const_int -8 [0xfffffffffffffff8]))
expanding: r140 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 140 [ ivtmp.847 ])
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:SI (reg:SI 140 [ ivtmp.847 ])
    (const_int -8 [0xfffffffffffffff8]))
  varying cselib base=1 offset = -8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg:SI 140 [ ivtmp.847 ])
        (const_int -8 [0xfffffffffffffff8])) [0 <variable>.start+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (plus:SI (reg:SI 140 [ ivtmp.847 ])
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:SI (reg:SI 140 [ ivtmp.847 ])
    (const_int -4 [0xfffffffffffffffc]))
expanding: r140 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 140 [ ivtmp.847 ])
    (const_int -4 [0xfffffffffffffffc]))

   after canon_rtx address: (plus:SI (reg:SI 140 [ ivtmp.847 ])
    (const_int -4 [0xfffffffffffffffc]))
  varying cselib base=1 offset = -4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg:SI 140 [ ivtmp.847 ])
        (const_int -4 [0xfffffffffffffffc])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=24
  mem: (reg:SI 140 [ ivtmp.847 ])

   after canon_rtx address: (reg:SI 140 [ ivtmp.847 ])
expanding: r140 into: NULL

   after cselib_expand address: (reg:SI 140 [ ivtmp.847 ])

   after canon_rtx address: (reg:SI 140 [ ivtmp.847 ])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:SI (reg:SI 140 [ ivtmp.847 ]) [0 <variable>.highmem+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
  mem: (symbol_ref:SI ("bootmem_bootmap_pages") [flags 0x41] <function_decl 0x11095280 bootmem_bootmap_pages>)

   after canon_rtx address: (symbol_ref:SI ("bootmem_bootmap_pages") [flags 0x41] <function_decl 0x11095280 bootmem_bootmap_pages>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
  mem: (symbol_ref:SI ("memblock_alloc_base") [flags 0x41] <function_decl 0x113f7900 memblock_alloc_base>)

   after canon_rtx address: (symbol_ref:SI ("memblock_alloc_base") [flags 0x41] <function_decl 0x113f7900 memblock_alloc_base>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=56
  mem: (symbol_ref:SI ("init_bootmem_node") [flags 0x41] <function_decl 0x11095300 init_bootmem_node>)

   after canon_rtx address: (symbol_ref:SI ("init_bootmem_node") [flags 0x41] <function_decl 0x11095300 init_bootmem_node>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
  mem: (plus:SI (reg/f:SI 170)
    (const_int 16 [0x10]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 16 [0x10])))
  gid=4 offset=16 
 processing const load gid=4[16..20)
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=62
  mem: (reg/v/f:SI 148 [ reg ])

   after canon_rtx address: (reg/v/f:SI 148 [ reg ])
expanding: r148 into: NULL

   after cselib_expand address: (reg/v/f:SI 148 [ reg ])

   after canon_rtx address: (reg/v/f:SI 148 [ reg ])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:SI (reg/v/f:SI 148 [ reg ]) [0 <variable>.base+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=64
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=66
  mem: (plus:SI (reg/v/f:SI 148 [ reg ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 148 [ reg ])
    (const_int 4 [0x4]))
expanding: r148 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 148 [ reg ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 148 [ reg ])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ reg ])
        (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=67
mems_found = 0, cannot_delete = true

**scanning insn=68
mems_found = 0, cannot_delete = true

**scanning insn=69
mems_found = 0, cannot_delete = true

**scanning insn=70
mems_found = 0, cannot_delete = true

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=74
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=78
  mem: (symbol_ref:SI ("free_bootmem") [flags 0x41] <function_decl 0x11095600 free_bootmem>)

   after canon_rtx address: (symbol_ref:SI ("free_bootmem") [flags 0x41] <function_decl 0x11095600 free_bootmem>)
  gid=5 offset=0 
 processing const load gid=5[0..4)

**scanning insn=79
mems_found = 0, cannot_delete = true

**scanning insn=85
  mem: (plus:SI (reg/f:SI 228)
    (const_int 8 [0x8]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 8 [0x8])))
  gid=4 offset=8 
 processing const load gid=4[8..12)
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=87
  mem: (plus:SI (reg/f:SI 228)
    (const_int 16 [0x10]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 16 [0x10])))
  gid=4 offset=16 
 processing const load gid=4[16..20)
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=90
mems_found = 0, cannot_delete = true

**scanning insn=93
mems_found = 0, cannot_delete = true

**scanning insn=94
  mem: (plus:SI (reg/f:SI 184)
    (const_int 28 [0x1c]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 28 [0x1c])))
  gid=4 offset=28 
 processing const load gid=4[28..32)
mems_found = 0, cannot_delete = true

**scanning insn=120
mems_found = 0, cannot_delete = true

**scanning insn=98
  mem: (reg/v/f:SI 138 [ reg.849 ])

   after canon_rtx address: (reg/v/f:SI 138 [ reg.849 ])
expanding: r138 into: NULL

   after cselib_expand address: (reg/v/f:SI 138 [ reg.849 ])

   after canon_rtx address: (reg/v/f:SI 138 [ reg.849 ])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:SI (reg/v/f:SI 138 [ reg.849 ]) [0 <variable>.base+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=100
  mem: (plus:SI (reg/v/f:SI 138 [ reg.849 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ reg.849 ])
    (const_int 4 [0x4]))
expanding: r138 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 138 [ reg.849 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 138 [ reg.849 ])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ reg.849 ])
        (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=104
mems_found = 0, cannot_delete = true

**scanning insn=105
mems_found = 0, cannot_delete = true

**scanning insn=106
mems_found = 0, cannot_delete = true

**scanning insn=107
mems_found = 0, cannot_delete = true

**scanning insn=109
mems_found = 0, cannot_delete = true

**scanning insn=110
mems_found = 0, cannot_delete = true

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=208
mems_found = 0, cannot_delete = true

**scanning insn=115
  mem: (symbol_ref:SI ("reserve_bootmem") [flags 0x41] <function_decl 0x11095700 reserve_bootmem>)

   after canon_rtx address: (symbol_ref:SI ("reserve_bootmem") [flags 0x41] <function_decl 0x11095700 reserve_bootmem>)
  gid=6 offset=0 
 processing const load gid=6[0..4)

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=122
  mem: (plus:SI (reg/f:SI 226)
    (const_int 20 [0x14]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 20 [0x14])))
  gid=4 offset=20 
 processing const load gid=4[20..24)
mems_found = 0, cannot_delete = true

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=124
  mem: (plus:SI (reg/f:SI 226)
    (const_int 28 [0x1c]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 28 [0x1c])))
  gid=4 offset=28 
 processing const load gid=4[28..32)
mems_found = 0, cannot_delete = true

**scanning insn=125
mems_found = 0, cannot_delete = true

**scanning insn=126
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=130
mems_found = 0, cannot_delete = true

**scanning insn=131
mems_found = 0, cannot_delete = true

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=133
  mem: (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10b7d080 __memzero>)

   after canon_rtx address: (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10b7d080 __memzero>)
  gid=7 offset=0 
 processing const load gid=7[0..4)

**scanning insn=134
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -12 [0xfffffffffffffff4]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -12 [0xfffffffffffffff4]))
  gid=8 offset=-12 
 processing const base store gid=8[-12..-8)
mems_found = 1, cannot_delete = false

**scanning insn=135
mems_found = 0, cannot_delete = true

**scanning insn=136
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -8 [0xfffffffffffffff8]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -8 [0xfffffffffffffff8]))
  gid=8 offset=-8 
 processing const base store gid=8[-8..-4)
expanding: r199 into: (minus:SI (value:SI)
    (value:SI))
expanding value SI into: r136
expanding: r136 into: NULL
expanding value SI into: r135
expanding: r135 into: NULL
    trying store in insn=134 gid=8[-12..-8)
mems_found = 1, cannot_delete = false

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=141
  mem: (plus:SI (reg/f:SI 198)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -4 [0xfffffffffffffffc]))
  gid=8 offset=-4 
 processing const load gid=8[-4..0)
  mem: (plus:SI (reg/f:SI 198)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -8 [0xfffffffffffffff8]))
  gid=8 offset=-8 
 processing const load gid=8[-8..-4)
trying to replace SImode load in insn 141 from SImode store in insn 136
 -- replacing the loaded MEM with (reg 229) led to an invalid instruction
removing from active insn=136 has store
  mem: (reg/f:SI 198)

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -12 [0xfffffffffffffff4]))
  gid=8 offset=-12 
 processing const load gid=8[-12..-8)
trying to replace SImode load in insn 141 from SImode store in insn 134
 -- replacing the loaded MEM with (reg 230) led to an invalid instruction
removing from active insn=134 has store
mems_found = 0, cannot_delete = true

**scanning insn=142
  mem: (reg/f:SI 200)

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -24 [0xffffffffffffffe8]))
  gid=8 offset=-24 
 processing const base store gid=8[-24..-20)
  mem: (plus:SI (reg/f:SI 200)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -20 [0xffffffffffffffec]))
  gid=8 offset=-20 
 processing const base store gid=8[-20..-16)
  mem: (plus:SI (reg/f:SI 200)
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -16 [0xfffffffffffffff0]))
  gid=8 offset=-16 
 processing const base store gid=8[-16..-12)
mems_found = 3, cannot_delete = false

**scanning insn=143
mems_found = 0, cannot_delete = true

**scanning insn=144
  mem: (plus:SI (reg/f:SI 204)
    (const_int 16 [0x10]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 16 [0x10])))
  gid=4 offset=16 
 processing const load gid=4[16..20)
mems_found = 0, cannot_delete = true

**scanning insn=146
  mem: (plus:SI (reg/f:SI 204)
    (const_int 8 [0x8]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
        (const_int 8 [0x8])))
  gid=4 offset=8 
 processing const load gid=4[8..12)
mems_found = 0, cannot_delete = true

**scanning insn=147
mems_found = 0, cannot_delete = true

**scanning insn=148
mems_found = 0, cannot_delete = true

**scanning insn=152
  mem: (reg/v/f:SI 142 [ reg ])

   after canon_rtx address: (reg/v/f:SI 142 [ reg ])
expanding: r142 into: NULL

   after cselib_expand address: (reg/v/f:SI 142 [ reg ])

   after canon_rtx address: (reg/v/f:SI 142 [ reg ])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:SI (reg/v/f:SI 142 [ reg ]) [0 <variable>.base+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=153
mems_found = 0, cannot_delete = true

**scanning insn=154
mems_found = 0, cannot_delete = true

**scanning insn=155
mems_found = 0, cannot_delete = true

**scanning insn=156
  mem: (plus:SI (reg/v/f:SI 142 [ reg ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 142 [ reg ])
    (const_int 4 [0x4]))
expanding: r142 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 142 [ reg ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 142 [ reg ])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ reg ])
        (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=157
mems_found = 0, cannot_delete = true

**scanning insn=158
mems_found = 0, cannot_delete = true

**scanning insn=159
mems_found = 0, cannot_delete = true

**scanning insn=160
mems_found = 0, cannot_delete = true

**scanning insn=162
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -24 [0xffffffffffffffe8]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -24 [0xffffffffffffffe8]))
  gid=8 offset=-24 
 processing const load gid=8[-24..-20)
mems_found = 0, cannot_delete = true

**scanning insn=163
mems_found = 0, cannot_delete = true

**scanning insn=164
mems_found = 0, cannot_delete = true

**scanning insn=165
mems_found = 0, cannot_delete = true

**scanning insn=166
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -24 [0xffffffffffffffe8]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -24 [0xffffffffffffffe8]))
  gid=8 offset=-24 
 processing const base store gid=8[-24..-20)
expanding: r215 into: (minus:SI (value:SI)
    (value:SI))
expanding value SI into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r143
(reg/v:SI 143 [ start ])
expanding value SI into: r213
(reg:SI 213 [ zhole_size ])
expanding value SI into: (umin:SI (value:SI)
    (value:SI))
expanding value SI into: r135
(reg/v:SI 135 [ max_low.852 ])
expanding value SI into: r144
(reg/v:SI 144 [ end ])
mems_found = 1, cannot_delete = false

**scanning insn=169
mems_found = 0, cannot_delete = true

**scanning insn=170
mems_found = 0, cannot_delete = true

**scanning insn=172
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -20 [0xffffffffffffffec]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -20 [0xffffffffffffffec]))
  gid=8 offset=-20 
 processing const load gid=8[-20..-16)
mems_found = 0, cannot_delete = true

**scanning insn=173
mems_found = 0, cannot_delete = true

**scanning insn=174
mems_found = 0, cannot_delete = true

**scanning insn=175
mems_found = 0, cannot_delete = true

**scanning insn=176
  mem: (plus:SI (reg/f:SI 25 sfp)
    (const_int -20 [0xffffffffffffffec]))

   after canon_rtx address: (plus:SI (reg/f:SI 25 sfp)
    (const_int -20 [0xffffffffffffffec]))
  gid=8 offset=-20 
 processing const base store gid=8[-20..-16)
expanding: r219 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: (minus:SI (value:SI)
    (value:SI))
expanding value SI into: r217
(reg:SI 217 [ zhole_size+4 ])
expanding value SI into: r144
(reg/v:SI 144 [ end ])
expanding value SI into: (umax:SI (value:SI)
    (value:SI))
expanding value SI into: r135
(reg/v:SI 135 [ max_low.852 ])
expanding value SI into: r143
(reg/v:SI 143 [ start ])
mems_found = 1, cannot_delete = false

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=183
mems_found = 0, cannot_delete = true

**scanning insn=184
mems_found = 0, cannot_delete = true

**scanning insn=186
mems_found = 0, cannot_delete = true

**scanning insn=187
mems_found = 0, cannot_delete = true

**scanning insn=188
mems_found = 0, cannot_delete = true

**scanning insn=189
mems_found = 0, cannot_delete = true

**scanning insn=190
mems_found = 0, cannot_delete = true

**scanning insn=191
mems_found = 0, cannot_delete = true

**scanning insn=192
  mem: (symbol_ref:SI ("free_area_init_node") [flags 0x41] <function_decl 0x111d5700 free_area_init_node>)

   after canon_rtx address: (symbol_ref:SI ("free_area_init_node") [flags 0x41] <function_decl 0x111d5700 free_area_init_node>)
  gid=9 offset=0 
 processing const load gid=9[0..4)

**scanning insn=193
mems_found = 0, cannot_delete = true

**scanning insn=194
mems_found = 0, cannot_delete = true

**scanning insn=195
  mem: (reg/f:SI 222)

   after canon_rtx address: (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x110aee40 high_memory>)
  gid=10 offset=0 
 processing const base store gid=10[0..4)
expanding: r223 into: (plus:SI (value:SI)
    (const_int -1073741824 [0xffffffffc0000000]))
expanding value SI into: r147
expanding: r147 into: NULL
mems_found = 1, cannot_delete = false

**scanning insn=196
mems_found = 0, cannot_delete = true

**scanning insn=197
  mem: (reg/f:SI 224)

   after canon_rtx address: (symbol_ref:SI ("max_low_pfn") [flags 0xc0] <var_decl 0x1108fa20 max_low_pfn>)
  gid=11 offset=0 
 processing const base store gid=11[0..4)
mems_found = 1, cannot_delete = false

**scanning insn=198
mems_found = 0, cannot_delete = true

**scanning insn=199
  mem: (reg/f:SI 225)

   after canon_rtx address: (symbol_ref:SI ("max_pfn") [flags 0xc0] <var_decl 0x1108fae0 max_pfn>)
  gid=12 offset=0 
 processing const base store gid=12[0..4)
mems_found = 1, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
group 6(0+0): n  p 
group 7(0+0): n  p 
group 8 is frame related group 8(20+0): n 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 p 
group 9(0+0): n  p 
group 10(0+0): n  p 
group 11(0+0): n  p 
group 12(0+0): n  p 
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
doing global processing
df_worklist_dataflow_doublequeue:n_basic_blocks 23 n_edges 31 count 50 (  2.2)


*** Global dataflow info after analysis.

( )->[0]->( 2 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 0 )->[2]->( 6 )
  in:   
  gen:  
  kill: 
  out:  

( 6 )->[3]->( 5 4 )
  in:   
  gen:  
  kill: 
  out:  

( 3 )->[4]->( 5 )
  in:   
  gen:  
  kill: 
  out:  

( 3 4 )->[5]->( 6 )
  in:   
  gen:  
  kill: 
  out:  

( 2 5 )->[6]->( 3 7 )
  in:   
  gen:  
  kill: 
  out:  

( 6 )->[7]->( 10 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 10 )->[8]->( 11 9 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 8 )->[9]->( 10 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 7 9 )->[10]->( 8 11 )
  in:   
  gen:  
  kill: 
  out:  

( 8 10 )->[11]->( 14 )
  in:   
  gen:  
  kill: 
  out:  

( 14 )->[12]->( 15 13 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 12 )->[13]->( 14 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 11 13 )->[14]->( 12 15 )
  in:   
  gen:  
  kill: 
  out:  

( 14 12 )->[15]->( 21 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 21 )->[16]->( 17 18 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  out:  

( 16 )->[17]->( 18 )
  in:   
  gen:  
  kill: 17, 18, 19, 20
  out:  

( 16 17 )->[18]->( 19 20 )
  in:   
  gen:  
  kill: 
  out:  

( 18 )->[19]->( 20 )
  in:   
  gen:  
  kill: 13, 14, 15, 16
  out:  

( 18 19 )->[20]->( 21 )
  in:   
  gen:  
  kill: 
  out:  

( 15 20 )->[21]->( 16 22 )
  in:   
  gen:  
  kill: 
  out:  

( 21 )->[22]->( 1 )
  in:   
  gen:  
  kill: *MISSING*
  out:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20

( 22 )->[1]->( )
  in:   1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  gen:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
  kill: *MISSING*
  out:  *MISSING*

starting to process insn 13
  v:  
starting to process insn 12
  v:  
starting to process insn 11
  v:  
starting to process insn 10
  v:  
starting to process insn 9
  v:  
starting to process insn 6
  v:  
regular read
starting to process insn 5
  v:  
starting to process insn 26
  v:  
starting to process insn 25
  v:  
starting to process insn 24
  v:  
regular read
starting to process insn 23
  v:  
starting to process insn 22
  v:  
starting to process insn 21
  v:  
starting to process insn 20
  v:  
starting to process insn 19
  v:  
regular read
starting to process insn 18
  v:  
starting to process insn 17
  v:  
regular read
starting to process insn 28
  v:  
starting to process insn 32
  v:  
starting to process insn 31
  v:  
starting to process insn 37
  v:  
starting to process insn 36
  v:  
starting to process insn 83
  v:  
starting to process insn 58
  v:  
regular read
starting to process insn 57
  v:  
starting to process insn 56
  v:  
wild read
starting to process insn 55
  v:  
starting to process insn 54
  v:  
starting to process insn 53
  v:  
starting to process insn 52
  v:  
starting to process insn 51
  v:  
starting to process insn 49
  v:  
starting to process insn 48
  v:  
wild read
starting to process insn 47
  v:  
starting to process insn 46
  v:  
starting to process insn 45
  v:  
starting to process insn 44
  v:  
starting to process insn 43
  v:  
starting to process insn 42
  v:  
starting to process insn 41
  v:  
wild read
starting to process insn 40
  v:  
starting to process insn 39
  v:  
starting to process insn 71
  v:  
starting to process insn 70
  v:  
starting to process insn 69
  v:  
starting to process insn 68
  v:  
starting to process insn 67
  v:  
starting to process insn 66
  v:  
regular read
starting to process insn 65
  v:  
starting to process insn 64
  v:  
starting to process insn 63
  v:  
starting to process insn 62
  v:  
regular read
starting to process insn 79
  v:  
starting to process insn 78
  v:  
wild read
starting to process insn 77
  v:  
starting to process insn 76
  v:  
starting to process insn 75
  v:  
starting to process insn 74
  v:  
starting to process insn 73
  v:  
starting to process insn 90
  v:  
starting to process insn 89
  v:  
starting to process insn 88
  v:  
starting to process insn 87
  v:  
regular read
starting to process insn 86
  v:  
starting to process insn 85
  v:  
regular read
starting to process insn 120
  v:  
starting to process insn 94
  v:  
regular read
starting to process insn 93
  v:  
starting to process insn 107
  v:  
starting to process insn 106
  v:  
starting to process insn 105
  v:  
starting to process insn 104
  v:  
starting to process insn 103
  v:  
starting to process insn 102
  v:  
starting to process insn 101
  v:  
starting to process insn 100
  v:  
regular read
starting to process insn 99
  v:  
starting to process insn 98
  v:  
regular read
starting to process insn 116
  v:  
starting to process insn 115
  v:  
wild read
starting to process insn 208
  v:  
starting to process insn 113
  v:  
starting to process insn 112
  v:  
starting to process insn 111
  v:  
starting to process insn 110
  v:  
starting to process insn 109
  v:  
starting to process insn 127
  v:  
starting to process insn 126
  v:  
starting to process insn 125
  v:  
starting to process insn 124
  v:  
regular read
starting to process insn 123
  v:  
starting to process insn 122
  v:  
regular read
starting to process insn 148
  v:  
starting to process insn 147
  v:  
starting to process insn 146
  v:  
regular read
starting to process insn 144
  v:  
regular read
starting to process insn 143
  v:  
starting to process insn 142
  v:  
starting to process insn 141
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
regular read
starting to process insn 137
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 136
  v:  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
i = -8, index = 4
failing at i = -8
starting to process insn 135
  v:  1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 134
  v:  1, 2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
i = -12, index = 8
failing at i = -12
starting to process insn 133
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
wild read
starting to process insn 132
  v:  
starting to process insn 131
  v:  
starting to process insn 130
  v:  
starting to process insn 160
  v:  
starting to process insn 159
  v:  
starting to process insn 158
  v:  
starting to process insn 157
  v:  
starting to process insn 156
  v:  
regular read
starting to process insn 155
  v:  
starting to process insn 154
  v:  
starting to process insn 153
  v:  
starting to process insn 152
  v:  
regular read
starting to process insn 166
  v:  
starting to process insn 165
  v:  17, 18, 19, 20
starting to process insn 164
  v:  17, 18, 19, 20
starting to process insn 163
  v:  17, 18, 19, 20
starting to process insn 162
  v:  17, 18, 19, 20
regular read
starting to process insn 170
  v:  
starting to process insn 169
  v:  
starting to process insn 176
  v:  
starting to process insn 175
  v:  13, 14, 15, 16
starting to process insn 174
  v:  13, 14, 15, 16
starting to process insn 173
  v:  13, 14, 15, 16
starting to process insn 172
  v:  13, 14, 15, 16
regular read
starting to process insn 179
  v:  
starting to process insn 184
  v:  
starting to process insn 183
  v:  
starting to process insn 199
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
i = 0, index = 0
failing at i = 0
starting to process insn 198
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 197
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
i = 0, index = 0
failing at i = 0
starting to process insn 196
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 195
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
i = 0, index = 0
failing at i = 0
starting to process insn 194
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 193
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
starting to process insn 192
  v:  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20
wild read
starting to process insn 191
  v:  
starting to process insn 190
  v:  
starting to process insn 189
  v:  
starting to process insn 188
  v:  
starting to process insn 187
  v:  
starting to process insn 186
  v:  
dse: local deletions = 0, global deletions = 0, spill deletions = 0


bootmem_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,10u} r1={15d,7u} r2={13d,5u} r3={10d,2u} r11={1d,22u} r12={8d} r13={1d,29u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={23d,9u} r25={1d,32u,3d} r26={1d,21u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={1d,2u} r134={1d,2u} r135={2d,12u} r136={2d,5u} r137={1d,1u} r138={2d,4u} r139={1d,1u} r140={2d,4u} r141={1d,1u} r142={2d,5u} r143={1d,3u} r144={1d,3u} r145={1d,2u,1d} r146={1d,2u} r147={1d,2u} r148={2d,4u} r149={1d,1u} r150={1d,1u} r151={1d,3u} r152={1d,3u} r153={1d,2u,1d} r154={1d,2u} r155={1d,2u} r156={1d,1u} r157={2d,2u} r158={1d,2u} r159={1d,1u} r160={2d,4u} r161={1d,2u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r169={1d,1u} r170={1d,2u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,2u} r185={1d,1u,1d} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,4u} r199={1d,1u} r200={1d,3u} r204={1d,2u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,2u} r228={1d,2u} 
;;    total ref usage 1247{959d,282u,6e} in 145{138 regular + 7 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135 136 140 156 157 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135 136 140 156 157 160 161
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/mm/init.c:144 discrim 1 (set (reg/f:SI 161)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 9 2 arch/arm/mm/init.c:144 discrim 1 (set (reg:SI 156 [ D.25862 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 161)
                (const_int 4 [0x4])) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))) [0 meminfo.nr_banks+0 S4 A32])
        (nil)))

(insn 9 6 10 2 arch/arm/mm/init.c:144 discrim 1 (set (reg:SI 140 [ ivtmp.847 ])
        (plus:SI (reg/f:SI 161)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 161)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 16 [0x10])))
            (nil))))

(insn 10 9 11 2 arch/arm/mm/init.c:142 (set (reg/v:SI 136 [ max_high.851 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/init.c:142 (set (reg/v:SI 135 [ max_low.852 ])
        (reg/v:SI 136 [ max_high.851 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 12 11 13 2 arch/arm/mm/init.c:141 (set (reg/v:SI 160 [ min ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 35 2 arch/arm/mm/init.c:144 (set (reg/v:SI 157 [ i ])
        (reg/v:SI 136 [ max_high.851 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 140 160
;; lr  def 	 24 [cc] 136 139 155 158 160 164 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  gen 	 24 [cc] 136 139 155 158 160 164 165 166
;; live  kill	 24 [cc]

;; Pred edge  6 [91.0%] 
(code_label 35 13 16 3 74 "" [1 uses])

(note 16 35 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 arch/arm/mm/init.c:148 (set (reg:SI 155 [ D.25868 ])
        (mem/s/j:SI (plus:SI (reg:SI 140 [ ivtmp.847 ])
                (const_int -8 [0xfffffffffffffff8])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 3 arch/arm/mm/init.c:148 (set (reg/v:SI 139 [ min.848 ])
        (lshiftrt:SI (reg:SI 155 [ D.25868 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 19 18 20 3 arch/arm/mm/init.c:149 (set (reg:SI 165 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg:SI 140 [ ivtmp.847 ])
                (const_int -4 [0xfffffffffffffffc])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 3 arch/arm/mm/init.c:149 (set (reg:SI 164)
        (plus:SI (reg:SI 155 [ D.25868 ])
            (reg:SI 165 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 165 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 155 [ D.25868 ])
            (nil))))

(insn 21 20 22 3 arch/arm/mm/init.c:149 (set (reg/v:SI 158 [ max_high ])
        (lshiftrt:SI (reg:SI 164)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 22 21 23 3 arch/arm/mm/init.c:149 (parallel [
            (set (reg/v:SI 160 [ min ])
                (umin:SI (reg/v:SI 160 [ min ])
                    (reg/v:SI 139 [ min.848 ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 139 [ min.848 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 23 22 24 3 arch/arm/mm/init.c:149 (parallel [
            (set (reg/v:SI 136 [ max_high.851 ])
                (umax:SI (reg/v:SI 136 [ max_high.851 ])
                    (reg/v:SI 158 [ max_high ])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 24 23 25 3 arch/arm/mm/init.c:155 (set (reg:SI 166 [ <variable>.highmem ])
        (mem/s/j:SI (reg:SI 140 [ ivtmp.847 ]) [0 <variable>.highmem+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 3 arch/arm/mm/init.c:155 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 166 [ <variable>.highmem ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 166 [ <variable>.highmem ])
        (nil)))

(jump_insn 26 25 27 3 arch/arm/mm/init.c:155 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 158 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 158 160


;; Succ edge  5 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 158 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 158
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 158 160
;; live  gen 	 135
;; live  kill	 24 [cc]

;; Pred edge  3 [50.0%]  (fallthru)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 arch/arm/mm/init.c:155 (parallel [
            (set (reg/v:SI 135 [ max_low.852 ])
                (umax:SI (reg/v:SI 135 [ max_low.852 ])
                    (reg/v:SI 158 [ max_high ])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (expr_list:REG_DEAD (reg/v:SI 158 [ max_high ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 157
;; lr  def 	 140 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  gen 	 140 157
;; live  kill	

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 29 28 30 5 73 "" [1 uses])

(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 5 arch/arm/mm/init.c:144 (set (reg/v:SI 157 [ i ])
        (plus:SI (reg/v:SI 157 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 32 31 33 5 arch/arm/mm/init.c:144 (set (reg:SI 140 [ ivtmp.847 ])
        (plus:SI (reg:SI 140 [ ivtmp.847 ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160


;; Succ edge  6 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%]  (fallthru,dfs_back)
(code_label 33 32 34 6 72 "" [0 uses])

(note 34 33 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 36 34 37 6 arch/arm/mm/init.c:144 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 157 [ i ])
            (reg:SI 156 [ D.25862 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 37 36 38 6 arch/arm/mm/init.c:144 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 6 -> ( 3 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 156 157 160


;; Succ edge  3 [91.0%] 
;; Succ edge  7 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147 148 149 150 167 169 170 228
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 160
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 146 147 148 149 150 167 169 170 228
;; live  kill	 14 [lr]

;; Pred edge  6 [9.0%]  (fallthru,loop_exit)
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 7 arch/arm/mm/init.c:174 (set (reg:SI 146 [ D.25910 ])
        (minus:SI (reg/v:SI 135 [ max_low.852 ])
            (reg/v:SI 160 [ min ]))) 28 {*arm_subsi3_insn} (nil))

(insn 40 39 41 7 arch/arm/mm/init.c:174 (set (reg:SI 0 r0)
        (reg:SI 146 [ D.25910 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 41 40 42 7 arch/arm/mm/init.c:174 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("bootmem_bootmap_pages") [flags 0x41] <function_decl 0x11095280 bootmem_bootmap_pages>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 42 41 43 7 arch/arm/mm/init.c:174 (set (reg/v:SI 149 [ boot_pages ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 43 42 44 7 arch/arm/mm/init.c:175 (set (reg:SI 147 [ D.25908 ])
        (ashift:SI (reg/v:SI 135 [ max_low.852 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 44 43 45 7 arch/arm/mm/init.c:175 (set (reg:SI 167)
        (ashift:SI (reg/v:SI 149 [ boot_pages ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 149 [ boot_pages ])
        (nil)))

(insn 45 44 46 7 arch/arm/mm/init.c:175 (set (reg:SI 0 r0)
        (reg:SI 167)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 46 45 47 7 arch/arm/mm/init.c:175 (set (reg:SI 1 r1)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 7 arch/arm/mm/init.c:175 (set (reg:SI 2 r2)
        (reg:SI 147 [ D.25908 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 48 47 49 7 arch/arm/mm/init.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_alloc_base") [flags 0x41] <function_decl 0x113f7900 memblock_alloc_base>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 49 48 51 7 arch/arm/mm/init.c:175 (set (reg/v:SI 150 [ bitmap ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 51 49 52 7 arch/arm/mm/init.c:184 (set (reg:SI 169)
        (lshiftrt:SI (reg/v:SI 150 [ bitmap ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 150 [ bitmap ])
        (nil)))

(insn 52 51 53 7 arch/arm/mm/init.c:184 (set (reg:SI 0 r0)
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c25120 contig_page_data>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c25120 contig_page_data>)
        (nil)))

(insn 53 52 54 7 arch/arm/mm/init.c:184 (set (reg:SI 1 r1)
        (reg:SI 169)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(insn 54 53 55 7 arch/arm/mm/init.c:184 (set (reg:SI 2 r2)
        (reg/v:SI 160 [ min ])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 7 arch/arm/mm/init.c:184 (set (reg:SI 3 r3)
        (reg/v:SI 135 [ max_low.852 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 56 55 57 7 arch/arm/mm/init.c:184 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("init_bootmem_node") [flags 0x41] <function_decl 0x11095300 init_bootmem_node>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 57 56 58 7 arch/arm/mm/init.c:187 (set (reg/f:SI 170)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 58 57 83 7 arch/arm/mm/init.c:187 (set (reg/v/f:SI 148 [ reg ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 170)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 83 58 82 7 arch/arm/mm/init.c:187 discrim 1 (set (reg/f:SI 228)
        (reg/f:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 170)
        (expr_list:REG_EQUAL (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
            (nil))))
;; End of basic block 7 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 148
;; lr  def 	 24 [cc] 134 151 153 159 171 172 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; live  gen 	 24 [cc] 134 151 153 159 171 172 173 174
;; live  kill	 24 [cc]

;; Pred edge  10 [95.5%] 
(code_label 82 83 61 8 77 "" [1 uses])

(note 61 82 62 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 8 include/linux/memblock.h:120 (set (reg:SI 153 [ D.25891 ])
        (mem/s/j:SI (reg/v/f:SI 148 [ reg ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 8 include/linux/memblock.h:120 (set (reg:SI 172)
        (plus:SI (reg:SI 153 [ D.25891 ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 64 63 65 8 include/linux/memblock.h:120 (set (reg:SI 171)
        (plus:SI (reg:SI 172)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 172)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 153 [ D.25891 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 65 64 66 8 include/linux/memblock.h:120 (set (reg/v:SI 151 [ start ])
        (lshiftrt:SI (reg:SI 171)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 66 65 67 8 include/linux/memblock.h:129 (set (reg:SI 174 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ reg ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 68 8 include/linux/memblock.h:129 (set (reg:SI 173)
        (plus:SI (reg:SI 153 [ D.25891 ])
            (reg:SI 174 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 174 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 153 [ D.25891 ])
            (nil))))

(insn 68 67 69 8 include/linux/memblock.h:129 (set (reg/v:SI 159 [ max_low ])
        (lshiftrt:SI (reg:SI 173)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 69 68 70 8 include/linux/memblock.h:129 (parallel [
            (set (reg/v:SI 134 [ max_low.853 ])
                (umin:SI (reg/v:SI 135 [ max_low.852 ])
                    (reg/v:SI 159 [ max_low ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 159 [ max_low ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 70 69 71 8 arch/arm/mm/init.c:193 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 151 [ start ])
            (reg/v:SI 134 [ max_low.853 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 71 70 72 8 arch/arm/mm/init.c:193 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 8 -> ( 11 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 146 147 148 151 160 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 146 147 148 151 160 228


;; Succ edge  11 [4.5%]  (loop_exit)
;; Succ edge  9 [95.5%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 146 147 148 151 160 228
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 148 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 175 176 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 136 146 147 148 151 160 228
;; live  gen 	 0 [r0] 1 [r1] 148 175 176 177
;; live  kill	 14 [lr]

;; Pred edge  8 [95.5%]  (fallthru)
(note 72 71 73 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 9 arch/arm/mm/init.c:196 (set (reg:SI 175)
        (ashift:SI (reg/v:SI 151 [ start ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 74 73 75 9 arch/arm/mm/init.c:196 (set (reg:SI 176)
        (minus:SI (reg/v:SI 134 [ max_low.853 ])
            (reg/v:SI 151 [ start ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ start ])
        (expr_list:REG_DEAD (reg/v:SI 134 [ max_low.853 ])
            (nil))))

(insn 75 74 76 9 arch/arm/mm/init.c:196 (set (reg:SI 177)
        (ashift:SI (reg:SI 176)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 76 75 77 9 arch/arm/mm/init.c:196 (set (reg:SI 0 r0)
        (reg:SI 175)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(insn 77 76 78 9 arch/arm/mm/init.c:196 (set (reg:SI 1 r1)
        (reg:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(call_insn 78 77 79 9 arch/arm/mm/init.c:196 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_bootmem") [flags 0x41] <function_decl 0x11095600 free_bootmem>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 79 78 80 9 arch/arm/mm/init.c:187 (set (reg/v/f:SI 148 [ reg ])
        (plus:SI (reg/v/f:SI 148 [ reg ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228


;; Succ edge  10 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 7 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 228
;; lr  def 	 24 [cc] 180 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; live  gen 	 24 [cc] 180 181 182 183
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%]  (fallthru,dfs_back)
(code_label 80 79 81 10 75 "" [0 uses])

(note 81 80 85 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 85 81 86 10 arch/arm/mm/init.c:187 discrim 1 (set (reg:SI 181 [ memblock.memory.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 228)
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 8 [0x8]))) [0 memblock.memory.cnt+0 S4 A32])
        (nil)))

(insn 86 85 87 10 arch/arm/mm/init.c:187 discrim 1 (set (reg:SI 180)
        (ashift:SI (reg:SI 181 [ memblock.memory.cnt ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 181 [ memblock.memory.cnt ])
        (nil)))

(insn 87 86 88 10 arch/arm/mm/init.c:187 discrim 1 (set (reg/f:SI 183 [ memblock.memory.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 228)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 88 87 89 10 arch/arm/mm/init.c:187 discrim 1 (set (reg:SI 182)
        (plus:SI (reg/f:SI 183 [ memblock.memory.regions ])
            (reg:SI 180))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 183 [ memblock.memory.regions ])
        (expr_list:REG_DEAD (reg:SI 180)
            (nil))))

(insn 89 88 90 10 arch/arm/mm/init.c:187 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 148 [ reg ])
            (reg:SI 182))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(jump_insn 90 89 91 10 arch/arm/mm/init.c:187 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 82)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 10 -> ( 8 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 148 160 228


;; Succ edge  8 [95.5%] 
;; Succ edge  11 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 8 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u121(11){ }u122(13){ }u123(25){ }u124(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 184 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 160
;; live  gen 	 138 184 226
;; live  kill	

;; Pred edge  8 [4.5%]  (loop_exit)
;; Pred edge  10 [4.5%]  (fallthru,loop_exit)
(code_label 91 90 92 11 76 "" [1 uses])

(note 92 91 93 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 11 arch/arm/mm/init.c:200 (set (reg/f:SI 184)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 94 93 120 11 arch/arm/mm/init.c:200 (set (reg/v/f:SI 138 [ reg.849 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 184)
                (const_int 28 [0x1c])) [0 memblock.reserved.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 28 [0x1c]))) [0 memblock.reserved.regions+0 S4 A32])
        (nil)))

(insn 120 94 119 11 arch/arm/mm/init.c:200 discrim 1 (set (reg/f:SI 226)
        (reg/f:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 184)
        (expr_list:REG_EQUAL (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
            (nil))))
;; End of basic block 11 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 14) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u126(11){ }u127(13){ }u128(25){ }u129(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; lr  def 	 24 [cc] 133 137 152 154 185 186 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; live  gen 	 24 [cc] 133 137 152 154 185 186 187 188
;; live  kill	 24 [cc]

;; Pred edge  14 [95.5%] 
(code_label 119 120 97 12 80 "" [1 uses])

(note 97 119 98 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 12 include/linux/memblock.h:138 (set (reg:SI 154 [ D.25887 ])
        (mem/s/j:SI (reg/v/f:SI 138 [ reg.849 ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 99 98 100 12 include/linux/memblock.h:138 (set (reg/v:SI 152 [ start ])
        (lshiftrt:SI (reg:SI 154 [ D.25887 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 100 99 101 12 include/linux/memblock.h:147 (set (reg:SI 186 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 138 [ reg.849 ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 101 100 102 12 include/linux/memblock.h:147 (set (reg:SI 185)
        (plus:SI (reg:SI 154 [ D.25887 ])
            (reg:SI 186 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 186 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 154 [ D.25887 ])
            (nil))))

(insn 102 101 103 12 include/linux/memblock.h:147 (set (reg:SI 188)
        (plus:SI (reg:SI 185)
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(insn 103 102 104 12 include/linux/memblock.h:147 (set (reg:SI 187)
        (plus:SI (reg:SI 188)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 188)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 185)
                (const_int 4095 [0xfff]))
            (nil))))

(insn 104 103 105 12 include/linux/memblock.h:147 (set (reg/v:SI 137 [ max_low.850 ])
        (lshiftrt:SI (reg:SI 187)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(insn 105 104 106 12 include/linux/memblock.h:147 (parallel [
            (set (reg/v:SI 133 [ max_low.854 ])
                (umin:SI (reg/v:SI 135 [ max_low.852 ])
                    (reg/v:SI 137 [ max_low.850 ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_DEAD (reg/v:SI 137 [ max_low.850 ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 106 105 107 12 arch/arm/mm/init.c:206 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 152 [ start ])
            (reg/v:SI 133 [ max_low.854 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 107 106 108 12 arch/arm/mm/init.c:206 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 450 [0x1c2])
            (nil))))
;; End of basic block 12 -> ( 15 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 146 147 152 160 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 146 147 152 160 226


;; Succ edge  15 [4.5%]  (loop_exit)
;; Succ edge  13 [95.5%]  (fallthru)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 146 147 152 160 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 152
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 189 190 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 138 146 147 152 160 226
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 138 189 190 191
;; live  kill	 14 [lr]

;; Pred edge  12 [95.5%]  (fallthru)
(note 108 107 109 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 110 13 arch/arm/mm/init.c:209 (set (reg:SI 189)
        (ashift:SI (reg/v:SI 152 [ start ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 110 109 111 13 arch/arm/mm/init.c:209 (set (reg:SI 190)
        (minus:SI (reg/v:SI 133 [ max_low.854 ])
            (reg/v:SI 152 [ start ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ start ])
        (expr_list:REG_DEAD (reg/v:SI 133 [ max_low.854 ])
            (nil))))

(insn 111 110 112 13 arch/arm/mm/init.c:209 (set (reg:SI 191)
        (ashift:SI (reg:SI 190)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))

(insn 112 111 113 13 arch/arm/mm/init.c:209 (set (reg:SI 0 r0)
        (reg:SI 189)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (nil)))

(insn 113 112 208 13 arch/arm/mm/init.c:209 (set (reg:SI 1 r1)
        (reg:SI 191)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(insn 208 113 115 13 arch/arm/mm/init.c:209 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 115 208 116 13 arch/arm/mm/init.c:209 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("reserve_bootmem") [flags 0x41] <function_decl 0x11095700 reserve_bootmem>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 116 115 117 13 arch/arm/mm/init.c:200 (set (reg/v/f:SI 138 [ reg.849 ])
        (plus:SI (reg/v/f:SI 138 [ reg.849 ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226


;; Succ edge  14 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 11 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u159(11){ }u160(13){ }u161(25){ }u162(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 226
;; lr  def 	 24 [cc] 194 195 196 197
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; live  gen 	 24 [cc] 194 195 196 197
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru,dfs_back)
(code_label 117 116 118 14 78 "" [0 uses])

(note 118 117 122 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 122 118 123 14 arch/arm/mm/init.c:200 discrim 1 (set (reg:SI 195 [ memblock.reserved.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 226)
                (const_int 20 [0x14])) [0 memblock.reserved.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 20 [0x14]))) [0 memblock.reserved.cnt+0 S4 A32])
        (nil)))

(insn 123 122 124 14 arch/arm/mm/init.c:200 discrim 1 (set (reg:SI 194)
        (ashift:SI (reg:SI 195 [ memblock.reserved.cnt ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 195 [ memblock.reserved.cnt ])
        (nil)))

(insn 124 123 125 14 arch/arm/mm/init.c:200 discrim 1 (set (reg/f:SI 197 [ memblock.reserved.regions ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 226)
                (const_int 28 [0x1c])) [0 memblock.reserved.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 28 [0x1c]))) [0 memblock.reserved.regions+0 S4 A32])
        (nil)))

(insn 125 124 126 14 arch/arm/mm/init.c:200 discrim 1 (set (reg:SI 196)
        (plus:SI (reg/f:SI 197 [ memblock.reserved.regions ])
            (reg:SI 194))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 197 [ memblock.reserved.regions ])
        (expr_list:REG_DEAD (reg:SI 194)
            (nil))))

(insn 126 125 127 14 arch/arm/mm/init.c:200 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 138 [ reg.849 ])
            (reg:SI 196))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(jump_insn 127 126 128 14 arch/arm/mm/init.c:200 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 119)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 14 -> ( 12 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 146 147 160 226


;; Succ edge  12 [95.5%] 
;; Succ edge  15 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 14 12) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 142 198 199 200 204 206 207
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 146 147 160
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 141 142 198 199 200 204 206 207
;; live  kill	 14 [lr]

;; Pred edge  14 [4.5%]  (fallthru,loop_exit)
;; Pred edge  12 [4.5%]  (loop_exit)
(code_label 128 127 129 15 79 "" [1 uses])

(note 129 128 130 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 130 129 131 15 arch/arm/mm/init.c:249 discrim 1 (set (reg/f:SI 198)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 131 130 132 15 arch/arm/mm/init.c:249 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 198)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))

(insn 132 131 133 15 arch/arm/mm/init.c:249 discrim 1 (set (reg:SI 1 r1)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(call_insn 133 132 134 15 arch/arm/mm/init.c:249 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10b7d080 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 134 133 135 15 arch/arm/mm/init.c:256 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4])) [0 zone_size+0 S4 A32])
        (reg:SI 146 [ D.25910 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 146 [ D.25910 ])
        (nil)))

(insn 135 134 136 15 arch/arm/mm/init.c:258 (set (reg:SI 199)
        (minus:SI (reg/v:SI 136 [ max_high.851 ])
            (reg/v:SI 135 [ max_low.852 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 136 135 137 15 arch/arm/mm/init.c:258 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0 zone_size+4 S4 A32])
        (reg:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 199)
        (nil)))

(insn 137 136 141 15 arch/arm/mm/init.c:265 (set (reg/f:SI 200)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 141 137 142 15 arch/arm/mm/init.c:265 (parallel [
            (set (reg:SI 0 r0)
                (mem/s/c:SI (reg/f:SI 198) [0 zone_size+0 S4 A32]))
            (set (reg:SI 1 r1)
                (mem/s/c:SI (plus:SI (reg/f:SI 198)
                        (const_int 4 [0x4])) [0 zone_size+4 S4 A32]))
            (set (reg:SI 2 r2)
                (mem/s/c:SI (plus:SI (reg/f:SI 198)
                        (const_int 8 [0x8])) [0 zone_size+8 S4 A32]))
        ]) 189 {*ldmsi3} (expr_list:REG_DEAD (reg/f:SI 198)
        (nil)))

(insn 142 141 143 15 arch/arm/mm/init.c:265 (parallel [
            (set (mem/s/c:SI (reg/f:SI 200) [0 zhole_size+0 S4 A64])
                (reg:SI 0 r0))
            (set (mem/s/c:SI (plus:SI (reg/f:SI 200)
                        (const_int 4 [0x4])) [0 zhole_size+4 S4 A32])
                (reg:SI 1 r1))
            (set (mem/s/c:SI (plus:SI (reg/f:SI 200)
                        (const_int 8 [0x8])) [0 zhole_size+8 S4 A64])
                (reg:SI 2 r2))
        ]) 196 {*stmsi3} (expr_list:REG_DEAD (reg/f:SI 200)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil))))))

(insn 143 142 144 15 arch/arm/mm/init.c:266 (set (reg/f:SI 204)
        (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)) 167 {*arm_movsi_insn} (nil))

(insn 144 143 146 15 arch/arm/mm/init.c:266 (set (reg/v/f:SI 142 [ reg ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 204)
                (const_int 16 [0x10])) [0 memblock.memory.regions+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                    (const_int 16 [0x10]))) [0 memblock.memory.regions+0 S4 A32])
        (nil)))

(insn 146 144 147 15 arch/arm/mm/init.c:266 discrim 1 (set (reg:SI 207 [ memblock.memory.cnt ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 204)
                (const_int 8 [0x8])) [0 memblock.memory.cnt+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 204)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("memblock") [flags 0xc0] <var_decl 0x113f9840 memblock>)
                        (const_int 8 [0x8]))) [0 memblock.memory.cnt+0 S4 A32])
            (nil))))

(insn 147 146 148 15 arch/arm/mm/init.c:266 discrim 1 (set (reg:SI 206)
        (ashift:SI (reg:SI 207 [ memblock.memory.cnt ])
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 207 [ memblock.memory.cnt ])
        (nil)))

(insn 148 147 182 15 arch/arm/mm/init.c:266 discrim 1 (set (reg/f:SI 141 [ D.25929 ])
        (plus:SI (reg/v/f:SI 142 [ reg ])
            (reg:SI 206))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 206)
        (nil)))
;; End of basic block 15 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 21) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u210(11){ }u211(13){ }u212(25){ }u213(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 142
;; lr  def 	 24 [cc] 143 144 145 208 209 210 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  gen 	 24 [cc] 143 144 145 208 209 210 211
;; live  kill	

;; Pred edge  21 [91.0%] 
(code_label 182 148 151 16 84 "" [1 uses])

(note 151 182 152 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 152 151 153 16 include/linux/memblock.h:120 (set (reg:SI 145 [ D.25927 ])
        (mem/s/j:SI (reg/v/f:SI 142 [ reg ]) [0 <variable>.base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 153 152 154 16 include/linux/memblock.h:120 (set (reg:SI 209)
        (plus:SI (reg:SI 145 [ D.25927 ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 154 153 155 16 include/linux/memblock.h:120 (set (reg:SI 208)
        (plus:SI (reg:SI 209)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_EQUAL (plus:SI (reg:SI 145 [ D.25927 ])
                (const_int 4095 [0xfff]))
            (nil))))

(insn 155 154 156 16 include/linux/memblock.h:120 (set (reg/v:SI 143 [ start ])
        (lshiftrt:SI (reg:SI 208)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 156 155 157 16 include/linux/memblock.h:129 (set (reg:SI 211 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ reg ])
                (const_int 4 [0x4])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 157 156 158 16 include/linux/memblock.h:129 (set (reg:SI 210)
        (plus:SI (reg:SI 145 [ D.25927 ])
            (reg:SI 211 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 211 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 145 [ D.25927 ])
            (nil))))

(insn 158 157 159 16 include/linux/memblock.h:129 (set (reg/v:SI 144 [ end ])
        (lshiftrt:SI (reg:SI 210)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(insn 159 158 160 16 arch/arm/mm/init.c:270 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ start ])
            (reg/v:SI 135 [ max_low.852 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 160 159 161 16 arch/arm/mm/init.c:270 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 167)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 16 -> ( 17 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160


;; Succ edge  17 [50.0%]  (fallthru)
;; Succ edge  18 [50.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u226(11){ }u227(13){ }u228(25){ }u229(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144
;; lr  def 	 24 [cc] 212 213 214 215
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  gen 	 212 213 214 215
;; live  kill	 24 [cc]

;; Pred edge  16 [50.0%]  (fallthru)
(note 161 160 162 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 162 161 163 17 arch/arm/mm/init.c:272 (set (reg:SI 213 [ zhole_size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 zhole_size+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 163 162 164 17 arch/arm/mm/init.c:272 (set (reg:SI 212)
        (plus:SI (reg/v:SI 143 [ start ])
            (reg:SI 213 [ zhole_size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 213 [ zhole_size ])
        (nil)))

(insn 164 163 165 17 arch/arm/mm/init.c:272 (parallel [
            (set (reg:SI 214)
                (umin:SI (reg/v:SI 135 [ max_low.852 ])
                    (reg/v:SI 144 [ end ])))
            (clobber (reg:CC 24 cc))
        ]) 107 {*arm_uminsi3} (expr_list:REG_UNUSED (reg:CC 24 cc)
        (nil)))

(insn 165 164 166 17 arch/arm/mm/init.c:272 (set (reg:SI 215)
        (minus:SI (reg:SI 212)
            (reg:SI 214))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 214)
        (expr_list:REG_DEAD (reg:SI 212)
            (nil))))

(insn 166 165 167 17 arch/arm/mm/init.c:272 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8])) [0 zhole_size+0 S4 A64])
        (reg:SI 215)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 215)
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160


;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u239(11){ }u240(13){ }u241(25){ }u242(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  16 [50.0%] 
;; Pred edge  17 [100.0%]  (fallthru)
(code_label 167 166 168 18 82 "" [1 uses])

(note 168 167 169 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 170 18 arch/arm/mm/init.c:275 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ end ])
            (reg/v:SI 135 [ max_low.852 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 170 169 171 18 arch/arm/mm/init.c:275 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 177)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 18 -> ( 19 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160


;; Succ edge  19 [50.0%]  (fallthru)
;; Succ edge  20 [50.0%] 

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u246(11){ }u247(13){ }u248(25){ }u249(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 143 144
;; lr  def 	 24 [cc] 216 217 218 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 147 160
;; live  gen 	 216 217 218 219
;; live  kill	 24 [cc]

;; Pred edge  18 [50.0%]  (fallthru)
(note 171 170 172 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 172 171 173 19 arch/arm/mm/init.c:277 (set (reg:SI 217 [ zhole_size+4 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 zhole_size+4 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 174 19 arch/arm/mm/init.c:277 (set (reg:SI 216)
        (minus:SI (reg:SI 217 [ zhole_size+4 ])
            (reg/v:SI 144 [ end ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 217 [ zhole_size+4 ])
        (expr_list:REG_DEAD (reg/v:SI 144 [ end ])
            (nil))))

(insn 174 173 175 19 arch/arm/mm/init.c:277 (parallel [
            (set (reg:SI 218)
                (umax:SI (reg/v:SI 135 [ max_low.852 ])
                    (reg/v:SI 143 [ start ])))
            (clobber (reg:CC 24 cc))
        ]) 106 {*arm_umaxsi3} (expr_list:REG_DEAD (reg/v:SI 143 [ start ])
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (nil))))

(insn 175 174 176 19 arch/arm/mm/init.c:277 (set (reg:SI 219)
        (plus:SI (reg:SI 216)
            (reg:SI 218))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 218)
        (expr_list:REG_DEAD (reg:SI 216)
            (nil))))

(insn 176 175 177 19 arch/arm/mm/init.c:277 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -20 [0xffffffffffffffec])) [0 zhole_size+4 S4 A32])
        (reg:SI 219)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 219)
        (nil)))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 18 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u259(11){ }u260(13){ }u261(25){ }u262(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  gen 	 142
;; live  kill	

;; Pred edge  18 [50.0%] 
;; Pred edge  19 [100.0%]  (fallthru)
(code_label 177 176 178 20 83 "" [1 uses])

(note 178 177 179 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 180 20 arch/arm/mm/init.c:266 (set (reg/v/f:SI 142 [ reg ])
        (plus:SI (reg/v/f:SI 142 [ reg ])
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160


;; Succ edge  21 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 15 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  20 [100.0%]  (fallthru,dfs_back)
(code_label 180 179 181 21 81 "" [0 uses])

(note 181 180 183 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 183 181 184 21 arch/arm/mm/init.c:266 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 142 [ reg ])
            (reg/f:SI 141 [ D.25929 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 184 183 185 21 arch/arm/mm/init.c:266 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 182)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 21 -> ( 16 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 147 160


;; Succ edge  16 [91.0%] 
;; Succ edge  22 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 147 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 147 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 220 221 222 223 224 225
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 147 160
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 220 221 222 223 224 225
;; live  kill	 14 [lr]

;; Pred edge  21 [9.0%]  (fallthru,loop_exit)
(note 185 184 186 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 186 185 187 22 arch/arm/mm/init.c:295 (set (reg/f:SI 220)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -12 [0xfffffffffffffff4]))) 4 {*arm_addsi3} (nil))

(insn 187 186 188 22 arch/arm/mm/init.c:295 (set (reg/f:SI 221)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -24 [0xffffffffffffffe8]))) 4 {*arm_addsi3} (nil))

(insn 188 187 189 22 arch/arm/mm/init.c:295 (set (reg:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 189 188 190 22 arch/arm/mm/init.c:295 (set (reg:SI 1 r1)
        (reg/f:SI 220)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 220)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))

(insn 190 189 191 22 arch/arm/mm/init.c:295 (set (reg:SI 2 r2)
        (reg/v:SI 160 [ min ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 160 [ min ])
        (nil)))

(insn 191 190 192 22 arch/arm/mm/init.c:295 (set (reg:SI 3 r3)
        (reg/f:SI 221)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 221)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -24 [0xffffffffffffffe8]))
            (nil))))

(call_insn 192 191 193 22 arch/arm/mm/init.c:295 (parallel [
            (call (mem:SI (symbol_ref:SI ("free_area_init_node") [flags 0x41] <function_decl 0x111d5700 free_area_init_node>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 193 192 194 22 arch/arm/mm/init.c:405 (set (reg/f:SI 222)
        (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x110aee40 high_memory>)) 167 {*arm_movsi_insn} (nil))

(insn 194 193 195 22 arch/arm/mm/init.c:405 (set (reg:SI 223)
        (plus:SI (reg:SI 147 [ D.25908 ])
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 147 [ D.25908 ])
        (nil)))

(insn 195 194 196 22 arch/arm/mm/init.c:405 (set (mem/f/c/i:SI (reg/f:SI 222) [0 high_memory+0 S4 A32])
        (reg:SI 223)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 223)
        (expr_list:REG_DEAD (reg/f:SI 222)
            (nil))))

(insn 196 195 197 22 arch/arm/mm/init.c:415 (set (reg/f:SI 224)
        (symbol_ref:SI ("max_low_pfn") [flags 0xc0] <var_decl 0x1108fa20 max_low_pfn>)) 167 {*arm_movsi_insn} (nil))

(insn 197 196 198 22 arch/arm/mm/init.c:415 (set (mem/c/i:SI (reg/f:SI 224) [0 max_low_pfn+0 S4 A32])
        (reg/v:SI 135 [ max_low.852 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 224)
        (expr_list:REG_DEAD (reg/v:SI 135 [ max_low.852 ])
            (nil))))

(insn 198 197 199 22 arch/arm/mm/init.c:416 (set (reg/f:SI 225)
        (symbol_ref:SI ("max_pfn") [flags 0xc0] <var_decl 0x1108fae0 max_pfn>)) 167 {*arm_movsi_insn} (nil))

(insn 199 198 0 22 arch/arm/mm/init.c:416 (set (mem/c/i:SI (reg/f:SI 225) [0 max_pfn+0 S4 A32])
        (reg/v:SI 136 [ max_high.851 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 225)
        (expr_list:REG_DEAD (reg/v:SI 136 [ max_high.851 ])
            (nil))))
;; End of basic block 22 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arm_memblock_init (arm_memblock_init)[0:1353] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 27 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 31 (  1.9)

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=3
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)

   after cselib_expand address: (reg/f:SI 13 sp)

   after canon_rtx address: (reg/f:SI 13 sp)
  varying cselib base=3 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=14
mems_found = 0, cannot_delete = true

**scanning insn=15
  mem: (plus:SI (reg/f:SI 145)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (const_int 4 [0x4])))
  gid=0 offset=4 
 processing const load gid=0[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
  mem: (symbol_ref:SI ("sort") [flags 0x41] <function_decl 0x11402380 sort>)

   after canon_rtx address: (symbol_ref:SI ("sort") [flags 0x41] <function_decl 0x11402380 sort>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=19
  mem: (symbol_ref:SI ("memblock_init") [flags 0x41] <function_decl 0x113f7480 memblock_init>)

   after canon_rtx address: (symbol_ref:SI ("memblock_init") [flags 0x41] <function_decl 0x113f7480 memblock_init>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=26
  mem: (plus:SI (reg/f:SI 135 [ D.26496 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 135 [ D.26496 ])
    (const_int 4 [0x4]))
expanding: r135 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r143
expanding: r143 into: NULL
expanding value SI into: r136
expanding: r136 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/v/f:SI 143 [ mi ])
        (reg:SI 136 [ ivtmp.885 ]))
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (plus:SI (reg/v/f:SI 143 [ mi ])
        (reg:SI 136 [ ivtmp.885 ]))
    (const_int 4 [0x4]))
  varying cselib base=75 offset = 4
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26496 ])
        (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=27
  mem: (plus:SI (reg/f:SI 135 [ D.26496 ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 135 [ D.26496 ])
    (const_int 8 [0x8]))
expanding: r135 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r143
expanding: r143 into: NULL
expanding value SI into: r136
expanding: r136 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/v/f:SI 143 [ mi ])
        (reg:SI 136 [ ivtmp.885 ]))
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (plus:SI (reg/v/f:SI 143 [ mi ])
        (reg:SI 136 [ ivtmp.885 ]))
    (const_int 8 [0x8]))
  varying cselib base=75 offset = 8
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26496 ])
        (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (symbol_ref:SI ("memblock_add") [flags 0x41] <function_decl 0x113f7580 memblock_add>)

   after canon_rtx address: (symbol_ref:SI ("memblock_add") [flags 0x41] <function_decl 0x113f7580 memblock_add>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=34
  mem: (reg/v/f:SI 143 [ mi ])

   after canon_rtx address: (reg/v/f:SI 143 [ mi ])
expanding: r143 into: NULL

   after cselib_expand address: (reg/v/f:SI 143 [ mi ])

   after canon_rtx address: (reg/v/f:SI 143 [ mi ])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:SI (reg/v/f:SI 143 [ mi ]) [0 <variable>.nr_banks+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=40
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=44
  mem: (symbol_ref:SI ("memblock_reserve") [flags 0x41] <function_decl 0x113f7700 memblock_reserve>)

   after canon_rtx address: (symbol_ref:SI ("memblock_reserve") [flags 0x41] <function_decl 0x113f7700 memblock_reserve>)
  gid=4 offset=0 
 processing const load gid=4[0..4)

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=46
  mem: (plus:SI (reg/f:SI 156)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=5 offset=4 
 processing const load gid=5[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=47
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=51
  mem: (reg/f:SI 156)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=5 offset=0 
 processing const load gid=5[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
  mem: (symbol_ref:SI ("memblock_is_region_memory") [flags 0x41] <function_decl 0x113f7c00 memblock_is_region_memory>)

   after canon_rtx address: (symbol_ref:SI ("memblock_is_region_memory") [flags 0x41] <function_decl 0x113f7c00 memblock_is_region_memory>)
  gid=6 offset=0 
 processing const load gid=6[0..4)

**scanning insn=54
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=56
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=62
  mem: (reg/f:SI 156)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=5 offset=0 
 processing const load gid=5[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=63
  mem: (plus:SI (reg/f:SI 156)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=5 offset=4 
 processing const load gid=5[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=64
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=7 offset=0 
 processing const load gid=7[0..4)

**scanning insn=67
  mem: (plus:SI (reg/f:SI 156)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=5 offset=4 
 processing const base store gid=5[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=70
  mem: (reg/f:SI 156)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=5 offset=0 
 processing const base store gid=5[0..4)
    trying store in insn=67 gid=5[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=74
  mem: (plus:SI (reg/f:SI 165)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=5 offset=4 
 processing const load gid=5[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=79
  mem: (reg/f:SI 165)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=5 offset=0 
 processing const load gid=5[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=81
  mem: (symbol_ref:SI ("memblock_is_region_reserved") [flags 0x41] <function_decl 0x113f7d00 memblock_is_region_reserved>)

   after canon_rtx address: (symbol_ref:SI ("memblock_is_region_reserved") [flags 0x41] <function_decl 0x113f7d00 memblock_is_region_reserved>)
  gid=8 offset=0 
 processing const load gid=8[0..4)

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=83
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=89
mems_found = 0, cannot_delete = true

**scanning insn=90
  mem: (reg/f:SI 165)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=5 offset=0 
 processing const load gid=5[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=91
  mem: (plus:SI (reg/f:SI 165)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=5 offset=4 
 processing const load gid=5[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=92
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=7 offset=0 
 processing const load gid=7[0..4)

**scanning insn=94
mems_found = 0, cannot_delete = true

**scanning insn=95
  mem: (plus:SI (reg/f:SI 165)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=5 offset=4 
 processing const base store gid=5[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=98
  mem: (reg/f:SI 165)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=5 offset=0 
 processing const base store gid=5[0..4)
    trying store in insn=95 gid=5[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=101
mems_found = 0, cannot_delete = true

**scanning insn=102
  mem: (plus:SI (reg/f:SI 174)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=5 offset=4 
 processing const load gid=5[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=103
mems_found = 0, cannot_delete = true

**scanning insn=104
mems_found = 0, cannot_delete = true

**scanning insn=107
  mem: (reg/f:SI 174)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=5 offset=0 
 processing const load gid=5[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=109
  mem: (symbol_ref:SI ("memblock_reserve") [flags 0x41] <function_decl 0x113f7700 memblock_reserve>)

   after canon_rtx address: (symbol_ref:SI ("memblock_reserve") [flags 0x41] <function_decl 0x113f7700 memblock_reserve>)
  gid=4 offset=0 
 processing const load gid=4[0..4)

**scanning insn=111
  mem: (reg/f:SI 174)

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=5 offset=0 
 processing const load gid=5[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=114
  mem: (reg/f:SI 178)

   after canon_rtx address: (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x111e8b40 initrd_start>)
  gid=9 offset=0 
 processing const base store gid=9[0..4)
expanding: r139 into: (plus:SI (value:SI)
    (const_int -1073741824 [0xffffffffc0000000]))
expanding value SI into: r177
expanding: r177 into: NULL
mems_found = 1, cannot_delete = false

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=117
  mem: (plus:SI (reg/f:SI 174)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=5 offset=4 
 processing const load gid=5[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=118
mems_found = 0, cannot_delete = true

**scanning insn=119
  mem: (reg/f:SI 179)

   after canon_rtx address: (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x111e8ba0 initrd_end>)
  gid=10 offset=0 
 processing const base store gid=10[0..4)
expanding: r182 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: (plus:SI (value:SI)
    (const_int -1073741824 [0xffffffffc0000000]))
expanding value SI into: r177
(reg:SI 177 [ phys_initrd_start ])
expanding value SI into: r181
expanding: r181 into: NULL
mems_found = 1, cannot_delete = false

**scanning insn=122
  mem: (symbol_ref:SI ("arm_mm_memblock_reserve") [flags 0x41] <function_decl 0x115b7280 arm_mm_memblock_reserve>)

   after canon_rtx address: (symbol_ref:SI ("arm_mm_memblock_reserve") [flags 0x41] <function_decl 0x115b7280 arm_mm_memblock_reserve>)
  gid=11 offset=0 
 processing const load gid=11[0..4)

**scanning insn=123
  mem: (plus:SI (reg/v/f:SI 144 [ mdesc ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 144 [ mdesc ])
    (const_int 36 [0x24]))
expanding: r144 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 144 [ mdesc ])
    (const_int 36 [0x24]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 144 [ mdesc ])
    (const_int 36 [0x24]))
  varying cselib base=1 offset = 36
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (reg/v/f:SI 144 [ mdesc ])
        (const_int 36 [0x24])) [0 <variable>.reserve+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=124
mems_found = 0, cannot_delete = true

**scanning insn=125
mems_found = 0, cannot_delete = true

**scanning insn=127
  mem: (reg/f:SI 138 [ D.25203 ])

   after canon_rtx address: (reg/f:SI 138 [ D.25203 ])
expanding: r138 into: NULL

   after cselib_expand address: (reg/f:SI 138 [ D.25203 ])

   after canon_rtx address: (reg/f:SI 138 [ D.25203 ])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem:SI (reg/f:SI 138 [ D.25203 ]) [0 S4 A32])

**scanning insn=130
  mem: (symbol_ref:SI ("memblock_analyze") [flags 0x41] <function_decl 0x113f7500 memblock_analyze>)

   after canon_rtx address: (symbol_ref:SI ("memblock_analyze") [flags 0x41] <function_decl 0x113f7500 memblock_analyze>)
  gid=12 offset=0 
 processing const load gid=12[0..4)

**scanning insn=131
  mem: (symbol_ref:SI ("memblock_dump_all") [flags 0x41] <function_decl 0x113f7d80 memblock_dump_all>)

   after canon_rtx address: (symbol_ref:SI ("memblock_dump_all") [flags 0x41] <function_decl 0x113f7d80 memblock_dump_all>)
  gid=13 offset=0 
 processing const load gid=13[0..4)
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+8): n  p 0, 1, 2, 3, 4, 5, 6, 7
group 6(0+0): n  p 
group 7(0+0): n  p 
group 8(0+0): n  p 
group 9(0+0): n  p 
group 10(0+0): n  p 
group 11(0+0): n  p 
group 12(0+0): n  p 
group 13(0+0): n  p 
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
doing global processing
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 31 (  1.9)


*** Global dataflow info after analysis.

( )->[0]->( 2 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 0 )->[2]->( 4 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 4 )->[3]->( 4 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 2 3 )->[4]->( 3 5 )
  in:   
  gen:  
  kill: 1, 2, 3, 4, 5, 6, 7, 8
  out:  

( 4 )->[5]->( 6 8 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 5 )->[6]->( 7 8 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 6 )->[7]->( 8 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 5 6 7 )->[8]->( 9 11 )
  in:   
  gen:  
  kill: 5, 6, 7, 8
  out:  

( 8 )->[9]->( 10 11 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 9 )->[10]->( 11 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 8 9 10 )->[11]->( 12 13 )
  in:   
  gen:  
  kill: 5, 6, 7, 8
  out:  

( 11 )->[12]->( 13 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 11 12 )->[13]->( 14 15 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 13 )->[14]->( 15 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 13 14 )->[15]->( 1 )
  in:   
  gen:  
  kill: *MISSING*
  out:  

( 15 )->[1]->( )
  in:   
  gen:  
  kill: *MISSING*
  out:  *MISSING*

starting to process insn 21
  v:  
starting to process insn 20
  v:  
starting to process insn 19
  v:  
wild read
starting to process insn 18
  v:  
wild read
starting to process insn 17
  v:  
starting to process insn 16
  v:  
starting to process insn 15
  v:  
regular read
starting to process insn 14
  v:  
starting to process insn 13
  v:  
starting to process insn 12
  v:  
starting to process insn 7
  v:  
starting to process insn 3
  v:  
starting to process insn 2
  v:  
starting to process insn 30
  v:  
starting to process insn 29
  v:  
starting to process insn 28
  v:  
wild read
starting to process insn 27
  v:  
regular read
starting to process insn 26
  v:  
regular read
starting to process insn 25
  v:  
starting to process insn 36
  v:  
starting to process insn 35
  v:  
starting to process insn 34
  v:  
regular read
starting to process insn 48
  v:  
starting to process insn 47
  v:  
starting to process insn 46
  v:  
regular read
starting to process insn 45
  v:  
starting to process insn 44
  v:  
wild read
starting to process insn 43
  v:  
starting to process insn 42
  v:  
starting to process insn 41
  v:  
starting to process insn 40
  v:  
starting to process insn 39
  v:  
starting to process insn 56
  v:  
starting to process insn 55
  v:  
starting to process insn 54
  v:  
starting to process insn 53
  v:  
wild read
starting to process insn 52
  v:  
starting to process insn 51
  v:  
regular read
starting to process insn 70
  v:  
starting to process insn 67
  v:  1, 2, 3, 4
i = 4, index = 5
failing at i = 4
starting to process insn 64
  v:  1, 2, 3, 4, 5, 6, 7, 8
wild read
starting to process insn 63
  v:  
regular read
starting to process insn 62
  v:  
regular read
starting to process insn 61
  v:  
starting to process insn 76
  v:  
starting to process insn 75
  v:  
starting to process insn 74
  v:  
regular read
starting to process insn 73
  v:  
starting to process insn 84
  v:  
starting to process insn 83
  v:  
starting to process insn 82
  v:  
starting to process insn 81
  v:  
wild read
starting to process insn 80
  v:  
starting to process insn 79
  v:  
regular read
starting to process insn 98
  v:  
starting to process insn 95
  v:  1, 2, 3, 4
i = 4, index = 5
failing at i = 4
starting to process insn 94
  v:  1, 2, 3, 4, 5, 6, 7, 8
starting to process insn 92
  v:  1, 2, 3, 4, 5, 6, 7, 8
wild read
starting to process insn 91
  v:  
regular read
starting to process insn 90
  v:  
regular read
starting to process insn 89
  v:  
starting to process insn 104
  v:  
starting to process insn 103
  v:  
starting to process insn 102
  v:  
regular read
starting to process insn 101
  v:  
starting to process insn 119
  v:  
starting to process insn 118
  v:  
starting to process insn 117
  v:  
regular read
starting to process insn 115
  v:  
starting to process insn 114
  v:  
starting to process insn 113
  v:  
starting to process insn 112
  v:  
starting to process insn 111
  v:  
regular read
starting to process insn 109
  v:  
wild read
starting to process insn 108
  v:  
starting to process insn 107
  v:  
regular read
starting to process insn 125
  v:  
starting to process insn 124
  v:  
starting to process insn 123
  v:  
regular read
starting to process insn 122
  v:  
wild read
starting to process insn 127
  v:  
wild read
starting to process insn 131
  v:  
wild read
starting to process insn 130
  v:  
wild read
dse: local deletions = 0, global deletions = 0, spill deletions = 0


arm_memblock_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={22d,11u} r1={22d,9u} r2={17d,3u} r3={15d,1u} r11={1d,15u} r12={14d} r13={1d,29u} r14={13d,1u} r15={13d} r16={13d} r17={13d} r18={13d} r19={13d} r20={13d} r21={13d} r22={13d} r23={13d} r24={20d,7u} r25={1d,15u} r26={1d,14u} r27={13d} r28={13d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={13d} r38={13d} r39={13d} r40={13d} r41={13d} r42={13d} r43={13d} r44={13d} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} r81={13d} r82={13d} r83={13d} r84={13d} r85={13d} r86={13d} r87={13d} r88={13d} r89={13d} r90={13d} r91={13d} r92={13d} r93={13d} r94={13d} r95={13d} r96={13d} r97={13d} r98={13d} r99={13d} r100={13d} r101={13d} r102={13d} r103={13d} r104={13d} r105={13d} r106={13d} r107={13d} r108={13d} r109={13d} r110={13d} r111={13d} r112={13d} r113={13d} r114={13d} r115={13d} r116={13d} r117={13d} r118={13d} r119={13d} r120={13d} r121={13d} r122={13d} r123={13d} r124={13d} r125={13d} r126={13d} r127={13d} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={2d,3u} r137={2d,2u} r138={1d,2u} r139={1d,2u} r140={1d,1u} r141={1d,3u} r142={1d,2u} r143={1d,2u} r144={1d,1u} r145={1d,2u} r150={1d,2u} r151={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,2u} r156={1d,6u} r165={1d,6u} r171={1d,2u} r174={1d,4u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r181={1d,1u} r182={1d,1u} 
;;    total ref usage 1747{1586d,161u,0e} in 83{70 regular + 13 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 143 144 145 150
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 136 137 143 144 145 150
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/mm/init.c:329 (set (reg/v/f:SI 143 [ mi ])
        (reg:SI 0 r0 [ mi ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ mi ])
        (nil)))

(insn 3 2 4 2 arch/arm/mm/init.c:329 (set (reg/v/f:SI 144 [ mdesc ])
        (reg:SI 1 r1 [ mdesc ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ mdesc ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 12 2 arch/arm/mm/init.c:332 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 7 13 2 arch/arm/mm/init.c:332 (set (reg:SI 150)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/init.c:332 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 14 13 15 2 arch/arm/mm/init.c:332 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 145)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 8 [0x8])))
        (nil)))

(insn 15 14 16 2 arch/arm/mm/init.c:332 (set (reg:SI 1 r1)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 145)
                (const_int 4 [0x4])) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 145)
        (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                        (const_int 4 [0x4]))) [0 meminfo.nr_banks+0 S4 A32])
            (nil))))

(insn 16 15 17 2 arch/arm/mm/init.c:332 (set (reg:SI 2 r2)
        (const_int 12 [0xc])) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/init.c:332 (set (reg:SI 3 r3)
        (symbol_ref:SI ("meminfo_cmp") [flags 0x3] <function_decl 0x115b7c80 meminfo_cmp>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("meminfo_cmp") [flags 0x3] <function_decl 0x115b7c80 meminfo_cmp>)
        (nil)))

(call_insn 18 17 19 2 arch/arm/mm/init.c:332 (parallel [
            (call (mem:SI (symbol_ref:SI ("sort") [flags 0x41] <function_decl 0x11402380 sort>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(call_insn 19 18 20 2 arch/arm/mm/init.c:334 (parallel [
            (call (mem:SI (symbol_ref:SI ("memblock_init") [flags 0x41] <function_decl 0x113f7480 memblock_init>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 20 19 21 2 arch/arm/mm/init.c:334 (set (reg:SI 136 [ ivtmp.885 ])
        (reg:SI 150)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 21 20 33 2 arch/arm/mm/init.c:335 (set (reg/v:SI 137 [ i ])
        (reg:SI 136 [ ivtmp.885 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; live  gen 	 0 [r0] 1 [r1] 135 136 137
;; live  kill	 14 [lr]

;; Pred edge  4 [88.9%] 
(code_label 33 21 24 3 90 "" [1 uses])

(note 24 33 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 3 arch/arm/mm/init.c:328 (set (reg/f:SI 135 [ D.26496 ])
        (plus:SI (reg/v/f:SI 143 [ mi ])
            (reg:SI 136 [ ivtmp.885 ]))) 4 {*arm_addsi3} (nil))

(insn 26 25 27 3 arch/arm/mm/init.c:336 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26496 ])
                (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 3 arch/arm/mm/init.c:336 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26496 ])
                (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ D.26496 ])
        (nil)))

(call_insn 28 27 29 3 arch/arm/mm/init.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_add") [flags 0x41] <function_decl 0x113f7580 memblock_add>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 29 28 30 3 arch/arm/mm/init.c:335 discrim 2 (set (reg/v:SI 137 [ i ])
        (plus:SI (reg/v:SI 137 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 30 29 31 3 arch/arm/mm/init.c:335 discrim 2 (set (reg:SI 136 [ ivtmp.885 ])
        (plus:SI (reg:SI 136 [ ivtmp.885 ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 143
;; lr  def 	 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; live  gen 	 24 [cc] 151
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
(code_label 31 30 32 4 89 "" [0 uses])

(note 32 31 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 34 32 35 4 arch/arm/mm/init.c:335 (set (reg:SI 151 [ <variable>.nr_banks ])
        (mem/s/j:SI (reg/v/f:SI 143 [ mi ]) [0 <variable>.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 4 arch/arm/mm/init.c:335 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ i ])
            (reg:SI 151 [ <variable>.nr_banks ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151 [ <variable>.nr_banks ])
        (nil)))

(jump_insn 36 35 37 4 arch/arm/mm/init.c:335 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8889 [0x22b9])
            (nil))))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 143 144


;; Succ edge  3 [88.9%] 
;; Succ edge  5 [11.1%]  (fallthru,loop_exit)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 153 154 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 142 153 154 155 156
;; live  kill	 14 [lr]

;; Pred edge  4 [11.1%]  (fallthru,loop_exit)
(note 37 36 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 39 37 40 5 arch/arm/mm/init.c:342 (set (reg/f:SI 154)
        (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x11478300 _end>)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 arch/arm/mm/init.c:342 (set (reg/f:SI 155)
        (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x113f9720 _stext>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x113f9720 _stext>)
        (nil)))

(insn 41 40 42 5 arch/arm/mm/init.c:342 (set (reg:SI 153)
        (minus:SI (reg/f:SI 154)
            (reg/f:SI 155))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg/f:SI 154)
        (expr_list:REG_EQUAL (minus:SI (symbol_ref:SI ("_end") [flags 0xc0] <var_decl 0x11478300 _end>)
                (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x113f9720 _stext>))
            (nil))))

(insn 42 41 43 5 arch/arm/mm/init.c:342 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 155)
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 155)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("_stext") [flags 0xc0] <var_decl 0x113f9720 _stext>)
                    (const_int 1073741824 [0x40000000])))
            (nil))))

(insn 43 42 44 5 arch/arm/mm/init.c:342 (set (reg:SI 1 r1)
        (reg:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 153)
        (nil)))

(call_insn 44 43 45 5 arch/arm/mm/init.c:342 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_reserve") [flags 0x41] <function_decl 0x113f7700 memblock_reserve>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 45 44 46 5 arch/arm/mm/init.c:345 (set (reg/f:SI 156)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 5 arch/arm/mm/init.c:345 (set (reg:SI 142 [ phys_initrd_size.365 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
        (nil)))

(insn 47 46 48 5 arch/arm/mm/init.c:345 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ phys_initrd_size.365 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 48 47 49 5 arch/arm/mm/init.c:345 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 156


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144 156
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 141
;; live  kill	 14 [lr]

;; Pred edge  5 [29.0%]  (fallthru)
(note 49 48 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 51 49 52 6 arch/arm/mm/init.c:346 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 156) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(insn 52 51 53 6 arch/arm/mm/init.c:346 (set (reg:SI 1 r1)
        (reg:SI 142 [ phys_initrd_size.365 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ phys_initrd_size.365 ])
        (nil)))

(call_insn 53 52 54 6 arch/arm/mm/init.c:346 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_is_region_memory") [flags 0x41] <function_decl 0x113f7c00 memblock_is_region_memory>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 54 53 55 6 arch/arm/mm/init.c:346 (set (reg:SI 141 [ D.25190 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 55 54 56 6 arch/arm/mm/init.c:345 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.25190 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 57 6 arch/arm/mm/init.c:345 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 156


;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  8 [100.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u71(11){ }u72(13){ }u73(25){ }u74(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 156
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 144 156
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  6 [0.0%]  (fallthru)
(note 57 56 61 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 61 57 62 7 arch/arm/mm/init.c:347 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11160a80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x11160a80>)
        (nil)))

(insn 62 61 63 7 arch/arm/mm/init.c:347 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 156) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(insn 63 62 64 7 arch/arm/mm/init.c:347 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
        (nil)))

(call_insn 64 63 67 7 arch/arm/mm/init.c:347 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 67 64 70 7 arch/arm/mm/init.c:349 (set (mem/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])
        (reg:SI 141 [ D.25190 ])) 167 {*arm_movsi_insn} (nil))

(insn 70 67 71 7 arch/arm/mm/init.c:349 (set (mem/c/i:SI (reg/f:SI 156) [0 phys_initrd_start+0 S4 A32])
        (reg:SI 141 [ D.25190 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 156)
        (expr_list:REG_DEAD (reg:SI 141 [ D.25190 ])
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 24 [cc] 134 165
;; live  kill	

;; Pred edge  5 [71.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 71 70 72 8 91 "" [2 uses])

(note 72 71 73 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 8 arch/arm/mm/init.c:351 (set (reg/f:SI 165)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 8 arch/arm/mm/init.c:351 (set (reg:SI 134 [ phys_initrd_size.892 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 165)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
        (nil)))

(insn 75 74 76 8 arch/arm/mm/init.c:351 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ phys_initrd_size.892 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 76 75 77 8 arch/arm/mm/init.c:351 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 8 -> ( 9 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 165


;; Succ edge  9 [29.0%]  (fallthru)
;; Succ edge  11 [71.0%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u99(11){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 165
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 144 165
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 140
;; live  kill	 14 [lr]

;; Pred edge  8 [29.0%]  (fallthru)
(note 77 76 79 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 79 77 80 9 arch/arm/mm/init.c:352 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 165) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(insn 80 79 81 9 arch/arm/mm/init.c:352 (set (reg:SI 1 r1)
        (reg:SI 134 [ phys_initrd_size.892 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ phys_initrd_size.892 ])
        (nil)))

(call_insn 81 80 82 9 arch/arm/mm/init.c:352 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_is_region_reserved") [flags 0x41] <function_decl 0x113f7d00 memblock_is_region_reserved>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 82 81 83 9 arch/arm/mm/init.c:352 (set (reg:SI 140 [ D.25195 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 83 82 84 9 arch/arm/mm/init.c:351 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.25195 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ D.25195 ])
        (nil)))

(jump_insn 84 83 85 9 arch/arm/mm/init.c:351 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 99)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 165
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 165


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 165
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 165
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 165
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 171
;; live  kill	 14 [lr]

;; Pred edge  9 [0.0%]  (fallthru)
(note 85 84 89 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 89 85 90 10 arch/arm/mm/init.c:353 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1174ae00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x1174ae00>)
        (nil)))

(insn 90 89 91 10 arch/arm/mm/init.c:353 (set (reg:SI 1 r1)
        (mem/c/i:SI (reg/f:SI 165) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(insn 91 90 92 10 arch/arm/mm/init.c:353 (set (reg:SI 2 r2)
        (mem/c/i:SI (plus:SI (reg/f:SI 165)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
        (nil)))

(call_insn 92 91 94 10 arch/arm/mm/init.c:353 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 94 92 95 10 arch/arm/mm/init.c:355 (set (reg:SI 171)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 95 94 98 10 arch/arm/mm/init.c:355 (set (mem/c/i:SI (plus:SI (reg/f:SI 165)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 98 95 99 10 arch/arm/mm/init.c:355 (set (mem/c/i:SI (reg/f:SI 165) [0 phys_initrd_start+0 S4 A32])
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_DEAD (reg/f:SI 165)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 8 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 24 [cc] 133 174
;; live  kill	

;; Pred edge  8 [71.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 99 98 100 11 92 "" [2 uses])

(note 100 99 101 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 101 100 102 11 arch/arm/mm/init.c:357 (set (reg/f:SI 174)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 11 arch/arm/mm/init.c:357 (set (reg:SI 133 [ phys_initrd_size.896 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 174)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
        (nil)))

(insn 103 102 104 11 arch/arm/mm/init.c:357 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ phys_initrd_size.896 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 104 103 105 11 arch/arm/mm/init.c:357 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 120)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 174


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  13 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 174
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139 177 178 179 181 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 144 174
;; live  gen 	 0 [r0] 1 [r1] 139 177 178 179 181 182
;; live  kill	 14 [lr]

;; Pred edge  11 [29.0%]  (fallthru)
(note 105 104 107 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 107 105 108 12 arch/arm/mm/init.c:358 (set (reg:SI 0 r0)
        (mem/c/i:SI (reg/f:SI 174) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(insn 108 107 109 12 arch/arm/mm/init.c:358 (set (reg:SI 1 r1)
        (reg:SI 133 [ phys_initrd_size.896 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ phys_initrd_size.896 ])
        (nil)))

(call_insn 109 108 111 12 arch/arm/mm/init.c:358 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_reserve") [flags 0x41] <function_decl 0x113f7700 memblock_reserve>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 111 109 112 12 arch/arm/mm/init.c:361 (set (reg:SI 177 [ phys_initrd_start ])
        (mem/c/i:SI (reg/f:SI 174) [0 phys_initrd_start+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 phys_initrd_start+0 S4 A32])
        (nil)))

(insn 112 111 113 12 arch/arm/mm/init.c:361 (set (reg:SI 139 [ initrd_start.367 ])
        (plus:SI (reg:SI 177 [ phys_initrd_start ])
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 177 [ phys_initrd_start ])
        (nil)))

(insn 113 112 114 12 arch/arm/mm/init.c:361 (set (reg/f:SI 178)
        (symbol_ref:SI ("initrd_start") [flags 0xc0] <var_decl 0x111e8b40 initrd_start>)) 167 {*arm_movsi_insn} (nil))

(insn 114 113 115 12 arch/arm/mm/init.c:361 (set (mem/c/i:SI (reg/f:SI 178) [0 initrd_start+0 S4 A32])
        (reg:SI 139 [ initrd_start.367 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 178)
        (nil)))

(insn 115 114 117 12 arch/arm/mm/init.c:362 (set (reg/f:SI 179)
        (symbol_ref:SI ("initrd_end") [flags 0xc0] <var_decl 0x111e8ba0 initrd_end>)) 167 {*arm_movsi_insn} (nil))

(insn 117 115 118 12 arch/arm/mm/init.c:362 (set (reg:SI 181 [ phys_initrd_size ])
        (mem/c/i:SI (plus:SI (reg/f:SI 174)
                (const_int 4 [0x4])) [0 phys_initrd_size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 174)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 phys_initrd_size+0 S4 A32])
            (nil))))

(insn 118 117 119 12 arch/arm/mm/init.c:362 (set (reg:SI 182)
        (plus:SI (reg:SI 139 [ initrd_start.367 ])
            (reg:SI 181 [ phys_initrd_size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 181 [ phys_initrd_size ])
        (expr_list:REG_DEAD (reg:SI 139 [ initrd_start.367 ])
            (nil))))

(insn 119 118 120 12 arch/arm/mm/init.c:362 (set (mem/c/i:SI (reg/f:SI 179) [0 initrd_end+0 S4 A32])
        (reg:SI 182)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 182)
        (expr_list:REG_DEAD (reg/f:SI 179)
            (nil))))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; live  gen 	 24 [cc] 138
;; live  kill	 14 [lr]

;; Pred edge  11 [71.0%] 
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 120 119 121 13 93 "" [1 uses])

(note 121 120 122 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(call_insn 122 121 123 13 arch/arm/mm/init.c:366 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_mm_memblock_reserve") [flags 0x41] <function_decl 0x115b7280 arm_mm_memblock_reserve>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 123 122 124 13 arch/arm/mm/init.c:370 (set (reg/f:SI 138 [ D.25203 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 144 [ mdesc ])
                (const_int 36 [0x24])) [0 <variable>.reserve+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 144 [ mdesc ])
        (nil)))

(insn 124 123 125 13 arch/arm/mm/init.c:370 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 138 [ D.25203 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 125 124 126 13 arch/arm/mm/init.c:370 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 128)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 13 -> ( 14 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138


;; Succ edge  14 [78.3%]  (fallthru)
;; Succ edge  15 [21.6%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  13 [78.3%]  (fallthru)
(note 126 125 127 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(call_insn 127 126 128 14 arch/arm/mm/init.c:371 (parallel [
            (call (mem:SI (reg/f:SI 138 [ D.25203 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 138 [ D.25203 ])
        (nil))
    (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 13 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  13 [21.6%] 
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 128 127 129 15 94 "" [1 uses])

(note 129 128 130 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(call_insn 130 129 131 15 arch/arm/mm/init.c:373 (parallel [
            (call (mem:SI (symbol_ref:SI ("memblock_analyze") [flags 0x41] <function_decl 0x113f7500 memblock_analyze>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(call_insn/j 131 130 0 15 arch/arm/mm/init.c:374 (parallel [
            (call (mem:SI (symbol_ref:SI ("memblock_dump_all") [flags 0x41] <function_decl 0x113f7d80 memblock_dump_all>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function pfn_valid (pfn_valid)[0:1350]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
  mem: (symbol_ref:SI ("memblock_is_memory") [flags 0x41] <function_decl 0x113f7b80 memblock_is_memory>)

   after canon_rtx address: (symbol_ref:SI ("memblock_is_memory") [flags 0x41] <function_decl 0x113f7b80 memblock_is_memory>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


pfn_valid

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 143{129d,14u,0e} in 4{3 regular + 1 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/mm/init.c:300 (set (reg/v:SI 135 [ pfn ])
        (reg:SI 0 r0 [ pfn ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ pfn ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/mm/init.c:301 (set (reg:SI 136)
        (ashift:SI (reg/v:SI 135 [ pfn ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ pfn ])
        (nil)))

(insn 7 6 8 2 arch/arm/mm/init.c:301 (set (reg:SI 0 r0)
        (reg:SI 136)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(call_insn/j 8 7 0 2 arch/arm/mm/init.c:301 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memblock_is_memory") [flags 0x41] <function_decl 0x113f7b80 memblock_is_memory>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function show_mem (show_mem)[0:1346]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 27 count 54 (  2.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 27 count 56 (  2.7)

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
  mem: (symbol_ref:SI ("show_free_areas") [flags 0x41] <function_decl 0x111b4600 show_free_areas>)

   after canon_rtx address: (symbol_ref:SI ("show_free_areas") [flags 0x41] <function_decl 0x111b4600 show_free_areas>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=12
  mem: (plus:SI (reg/f:SI 159)
    (const_int 4 [0x4]))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (const_int 4 [0x4])))
  gid=2 offset=4 
 processing const load gid=2[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=14
  mem: (reg/f:SI 160)

   after canon_rtx address: (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)
  gid=3 offset=0 
 processing const load gid=3[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=19
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=26
mems_found = 0, cannot_delete = true

**scanning insn=27
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (plus:SI (reg/f:SI 135 [ D.26570 ])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 135 [ D.26570 ])
    (const_int 4 [0x4]))
expanding: r135 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r180
expanding: r180 into: NULL
expanding value SI into: r136
expanding: r136 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/f:SI 180)
        (reg:SI 136 [ ivtmp.959 ]))
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 8 [0x8])))
    (reg:SI 136 [ ivtmp.959 ]))
  varying cselib base=1018533827 offset = 0
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26570 ])
        (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=29
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
  mem: (plus:SI (reg/f:SI 135 [ D.26570 ])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 135 [ D.26570 ])
    (const_int 8 [0x8]))
expanding: r135 into: (plus:SI (value:SI)
    (value:SI))
expanding value SI into: r180
expanding: r180 into: NULL
expanding value SI into: r136
expanding: r136 into: NULL

   after cselib_expand address: (plus:SI (plus:SI (reg/f:SI 180)
        (reg:SI 136 [ ivtmp.959 ]))
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
            (const_int 12 [0xc])))
    (reg:SI 136 [ ivtmp.959 ]))
  varying cselib base=1018533831 offset = 0
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26570 ])
        (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=40
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=41
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
mems_found = 0, cannot_delete = true

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=50
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=53
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=60
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=62
mems_found = 0, cannot_delete = true

**scanning insn=63
mems_found = 0, cannot_delete = true

**scanning insn=65
mems_found = 0, cannot_delete = true

**scanning insn=70
  mem: (plus:SI (reg/v/f:SI 147 [ page ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 147 [ page ])
    (const_int 28 [0x1c]))
expanding: r147 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 147 [ page ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 147 [ page ])
    (const_int 28 [0x1c]))
  varying cselib base=1 offset = 28
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ page ])
        (const_int 28 [0x1c])) [0 <variable>.D.8040.first_page+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=73
mems_found = 0, cannot_delete = true

**scanning insn=74
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=83
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=84
mems_found = 0, cannot_delete = true

**scanning insn=85
mems_found = 0, cannot_delete = true

**scanning insn=86
mems_found = 0, cannot_delete = true

**scanning insn=88
mems_found = 0, cannot_delete = true

**scanning insn=93
  mem: (plus:SI (reg/v/f:SI 147 [ page ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 147 [ page ])
    (const_int 28 [0x1c]))
expanding: r147 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 147 [ page ])
    (const_int 28 [0x1c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 147 [ page ])
    (const_int 28 [0x1c]))
  varying cselib base=1 offset = 28
 processing cselib load mem:(mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ page ])
        (const_int 28 [0x1c])) [0 <variable>.D.8040.first_page+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=96
mems_found = 0, cannot_delete = true

**scanning insn=97
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=98
mems_found = 0, cannot_delete = true

**scanning insn=99
mems_found = 0, cannot_delete = true

**scanning insn=102
mems_found = 0, cannot_delete = true

**scanning insn=104
mems_found = 0, cannot_delete = true

**scanning insn=105
mems_found = 0, cannot_delete = true

**scanning insn=107
mems_found = 0, cannot_delete = true

**scanning insn=108
mems_found = 0, cannot_delete = true

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=113
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=117
mems_found = 0, cannot_delete = true

**scanning insn=118
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=120
mems_found = 0, cannot_delete = true

**scanning insn=121
mems_found = 0, cannot_delete = true

**scanning insn=122
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=124
mems_found = 0, cannot_delete = true

**scanning insn=125
mems_found = 0, cannot_delete = true

**scanning insn=126
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=128
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=130
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=132
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=134
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=138
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=0 offset=0 
 processing const load gid=0[0..4)
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


show_mem

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,9u} r1={15d,6u} r2={9d} r3={9d} r11={1d,20u} r12={9d} r13={1d,28u} r14={8d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={15d,7u} r25={1d,20u} r26={1d,19u} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r133={2d,1u} r134={2d,1u} r135={1d,2u} r136={2d,8u,1d} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r145={1d,1u} r146={1d,1u} r147={2d,10u} r148={2d,2u} r149={2d,2u} r150={2d,2u} r151={2d,2u} r152={2d,2u} r153={2d,2u} r154={1d,1u} r155={1d,2u} r156={1d,2u} r157={1d,1u} r159={1d,2u} r160={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r180={1d,1u} 
;;    total ref usage 1189{1014d,174u,1e} in 84{76 regular + 8 call} insns.
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 148 149 150 151 152 153 154 155 157 159 160 180
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 136 148 149 150 151 152 153 154 155 157 159 160 180
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/mm/init.c:92 (set (reg/v:SI 157 [ filter ])
        (reg:SI 0 r0 [ filter ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ filter ])
        (nil)))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 3 8 2 arch/arm/mm/init.c:97 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x11768f30>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x11768f30>)
        (nil)))

(call_insn 8 7 9 2 arch/arm/mm/init.c:97 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 10 2 arch/arm/mm/init.c:98 (set (reg:SI 0 r0)
        (reg/v:SI 157 [ filter ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 157 [ filter ])
        (nil)))

(call_insn 10 9 11 2 arch/arm/mm/init.c:98 (parallel [
            (call (mem:SI (symbol_ref:SI ("show_free_areas") [flags 0x41] <function_decl 0x111b4600 show_free_areas>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 11 10 12 2 arch/arm/mm/init.c:100 discrim 1 (set (reg/f:SI 159)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/init.c:100 discrim 1 (set (reg:SI 154 [ D.25004 ])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 159)
                (const_int 4 [0x4])) [0 meminfo.nr_banks+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))) [0 meminfo.nr_banks+0 S4 A32])
        (nil)))

(insn 13 12 14 2 arch/arm/mm/init.c:108 (set (reg/f:SI 160)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/init.c:108 (set (reg/f:SI 155 [ mem_map.344 ])
        (mem/f/c/i:SI (reg/f:SI 160) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 160)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10bfb360 mem_map>) [0 mem_map+0 S4 A32])
            (nil))))

(insn 15 14 16 2 arch/arm/mm/init.c:108 (set (reg:SI 136 [ ivtmp.959 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/mm/init.c:100 (set (reg/v:SI 148 [ i ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 17 16 18 2 arch/arm/mm/init.c:94 (set (reg/v:SI 149 [ slab ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 18 17 19 2 arch/arm/mm/init.c:94 (set (reg/v:SI 150 [ shared ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 19 18 20 2 arch/arm/mm/init.c:93 (set (reg/v:SI 151 [ reserved ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 20 19 21 2 arch/arm/mm/init.c:93 (set (reg/v:SI 152 [ total ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 21 20 26 2 arch/arm/mm/init.c:93 (set (reg/v:SI 153 [ free ])
        (reg:SI 136 [ ivtmp.959 ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 26 21 111 2 arch/arm/mm/init.c:91 (set (reg/f:SI 180)
        (plus:SI (reg/f:SI 159)
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 159)
        (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4])))
            (nil))))
;; End of basic block 2 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 19) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 155 180
;; lr  def 	 135 146 147 156 163 164 165 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  gen 	 135 146 147 156 163 164 165 166 167 168
;; live  kill	

;; Pred edge  19 [91.0%] 
(code_label 111 26 24 3 111 "" [1 uses])

(note 24 111 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 27 24 28 3 arch/arm/mm/init.c:91 (set (reg/f:SI 135 [ D.26570 ])
        (plus:SI (reg/f:SI 180)
            (reg:SI 136 [ ivtmp.959 ]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 136 [ ivtmp.959 ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                    (const_int 4 [0x4]))))
        (nil)))

(insn 28 27 29 3 arch/arm/mm/init.c:105 (set (reg:SI 156 [ D.24980 ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26570 ])
                (const_int 4 [0x4])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 3 arch/arm/mm/init.c:108 (set (reg:SI 163)
        (lshiftrt:SI (reg:SI 156 [ D.24980 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 30 29 31 3 arch/arm/mm/init.c:108 (set (reg:SI 164)
        (ashift:SI (reg:SI 163)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 31 30 32 3 arch/arm/mm/init.c:108 (set (reg/v/f:SI 147 [ page ])
        (plus:SI (reg/f:SI 155 [ mem_map.344 ])
            (reg:SI 164))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 32 31 33 3 arch/arm/mm/init.c:109 (set (reg:SI 166 [ <variable>.size ])
        (mem/s/j:SI (plus:SI (reg/f:SI 135 [ D.26570 ])
                (const_int 8 [0x8])) [0 <variable>.size+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ D.26570 ])
        (nil)))

(insn 33 32 34 3 arch/arm/mm/init.c:109 (set (reg:SI 165)
        (plus:SI (reg:SI 156 [ D.24980 ])
            (reg:SI 166 [ <variable>.size ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 166 [ <variable>.size ])
        (expr_list:REG_DEAD (reg:SI 156 [ D.24980 ])
            (nil))))

(insn 34 33 35 3 arch/arm/mm/init.c:109 (set (reg:SI 167)
        (lshiftrt:SI (reg:SI 165)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 165)
        (nil)))

(insn 35 34 36 3 arch/arm/mm/init.c:109 (set (reg:SI 168)
        (ashift:SI (reg:SI 167)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(insn 36 35 103 3 arch/arm/mm/init.c:109 (set (reg/v/f:SI 146 [ end ])
        (plus:SI (reg/f:SI 155 [ mem_map.344 ])
            (reg:SI 168))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 17) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 152
;; lr  def 	 24 [cc] 145 152 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 145 152 169
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  17 [86.0%]  (dfs_back)
(code_label 103 36 37 4 110 "" [1 uses])

(note 37 103 38 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 40 4 arch/arm/mm/init.c:112 (set (reg/v:SI 152 [ total ])
        (plus:SI (reg/v:SI 152 [ total ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 40 38 41 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 145 [ D.25946 ])
        (mem/v:SI (reg/v/f:SI 147 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 169)
        (and:SI (reg:SI 145 [ D.25946 ])
            (const_int 1024 [0x400]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 145 [ D.25946 ])
        (nil)))

(insn 42 41 43 4 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(jump_insn 43 42 44 4 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  5 [50.0%]  (fallthru)
;; Succ edge  6 [50.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 151
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 48 5 arch/arm/mm/init.c:114 (set (reg/v:SI 151 [ reserved ])
        (plus:SI (reg/v:SI 151 [ reserved ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 5 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 143 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 143 170
;; live  kill	

;; Pred edge  4 [50.0%] 
(code_label 48 45 49 6 102 "" [1 uses])

(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 50 49 51 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 143 [ D.25959 ])
        (mem/v:SI (reg/v/f:SI 147 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 170)
        (and:SI (reg:SI 143 [ D.25959 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 143 [ D.25959 ])
        (nil)))

(insn 52 51 53 6 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(jump_insn 53 52 54 6 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149
;; lr  def 	 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 149
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 58 7 arch/arm/mm/init.c:118 (set (reg/v:SI 149 [ slab ])
        (plus:SI (reg/v:SI 149 [ slab ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 141 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 141 171
;; live  kill	

;; Pred edge  6 [50.0%] 
(code_label 58 55 59 8 104 "" [1 uses])

(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 8 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 141 [ D.25974 ])
        (mem/v:SI (reg/v/f:SI 147 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 8 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 171)
        (and:SI (reg:SI 141 [ D.25974 ])
            (const_int 32768 [0x8000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.25974 ])
        (nil)))

(insn 62 61 63 8 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(jump_insn 63 62 64 8 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  10 [0.0%] 
;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 134
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
(note 64 63 65 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 68 9 include/linux/mm.h:356 (set (reg/v/f:SI 134 [ page.962 ])
        (reg/v/f:SI 147 [ page ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 9 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 134
;; live  kill	

;; Pred edge  8 [0.0%] 
(code_label 68 65 69 10 105 "" [1 uses])

(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 10 include/linux/mm.h:355 (set (reg/v/f:SI 134 [ page.962 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ page ])
                (const_int 28 [0x1c])) [0 <variable>.D.8040.first_page+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 9 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 140 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 140 142
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 71 70 72 11 106 "" [0 uses])

(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 11 include/linux/mm.h:376 (set (reg/f:SI 140 [ D.25979 ])
        (plus:SI (reg/v/f:SI 134 [ page.962 ])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 134 [ page.962 ])
        (nil)))

(insn 74 73 75 11 include/linux/mm.h:376 (set (reg:SI 142 [ D.25970 ])
        (mem/v:SI (reg/f:SI 140 [ D.25979 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ D.25979 ])
        (nil)))

(insn 75 74 76 11 arch/arm/mm/init.c:119 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.25970 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.25970 ])
        (nil)))

(jump_insn 76 75 77 11 arch/arm/mm/init.c:119 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 81)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  12 [50.0%]  (fallthru)
;; Succ edge  13 [50.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 153
;; live  kill	

;; Pred edge  11 [50.0%]  (fallthru)
(note 77 76 78 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 81 12 arch/arm/mm/init.c:120 (set (reg/v:SI 153 [ free ])
        (plus:SI (reg/v:SI 153 [ free ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 12 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 24 [cc] 138 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 138 172
;; live  kill	

;; Pred edge  11 [50.0%] 
(code_label 81 78 82 13 107 "" [1 uses])

(note 82 81 83 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 84 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 138 [ D.25991 ])
        (mem/v:SI (reg/v/f:SI 147 [ page ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 84 83 85 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 172)
        (and:SI (reg:SI 138 [ D.25991 ])
            (const_int 32768 [0x8000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.25991 ])
        (nil)))

(insn 85 84 86 13 include/asm-generic/bitops/non-atomic.h:105 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(jump_insn 86 85 87 13 include/asm-generic/bitops/non-atomic.h:105 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 91)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  15 [0.0%] 
;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u105(11){ }u106(13){ }u107(25){ }u108(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 133
;; live  kill	

;; Pred edge  13 [100.0%]  (fallthru)
(note 87 86 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 91 14 include/linux/mm.h:356 (set (reg/v/f:SI 133 [ page.963 ])
        (reg/v/f:SI 147 [ page ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 133
;; live  kill	

;; Pred edge  13 [0.0%] 
(code_label 91 88 92 15 108 "" [1 uses])

(note 92 91 93 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 15 include/linux/mm.h:355 (set (reg/v/f:SI 133 [ page.963 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 147 [ page ])
                (const_int 28 [0x1c])) [0 <variable>.D.8040.first_page+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 150
;; lr  def 	 137 139 150 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 137 139 150 173
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 94 93 95 16 109 "" [0 uses])

(note 95 94 96 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 16 include/linux/mm.h:376 (set (reg/f:SI 137 [ D.25996 ])
        (plus:SI (reg/v/f:SI 133 [ page.963 ])
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v/f:SI 133 [ page.963 ])
        (nil)))

(insn 97 96 98 16 include/linux/mm.h:376 (set (reg:SI 139 [ D.25987 ])
        (mem/v:SI (reg/f:SI 137 [ D.25996 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137 [ D.25996 ])
        (nil)))

(insn 98 97 99 16 arch/arm/mm/init.c:122 (set (reg:SI 173)
        (plus:SI (reg:SI 139 [ D.25987 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 139 [ D.25987 ])
        (nil)))

(insn 99 98 100 16 arch/arm/mm/init.c:122 (set (reg/v:SI 150 [ shared ])
        (plus:SI (reg/v:SI 150 [ shared ])
            (reg:SI 173))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 5 16 7 12) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  def 	 24 [cc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc] 147
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 100 99 101 17 103 "" [0 uses])

(note 101 100 102 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 104 17 arch/arm/mm/init.c:123 (set (reg/v/f:SI 147 [ page ])
        (plus:SI (reg/v/f:SI 147 [ page ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 104 102 105 17 arch/arm/mm/init.c:124 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 147 [ page ])
            (reg/v/f:SI 146 [ end ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 105 104 106 17 arch/arm/mm/init.c:124 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 17 -> ( 4 18)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 146 147 148 149 150 151 152 153 154 155 180


;; Succ edge  4 [86.0%]  (dfs_back)
;; Succ edge  18 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148
;; lr  def 	 136 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  gen 	 136 148
;; live  kill	

;; Pred edge  17 [14.0%]  (fallthru,loop_exit)
(note 106 105 107 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 18 arch/arm/mm/init.c:100 (set (reg/v:SI 148 [ i ])
        (plus:SI (reg/v:SI 148 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 108 107 109 18 arch/arm/mm/init.c:100 (set (reg:SI 136 [ ivtmp.959 ])
        (plus:SI (reg:SI 136 [ ivtmp.959 ])
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180


;; Succ edge  19 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 154
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  18 [100.0%]  (fallthru,dfs_back)
(code_label 109 108 110 19 101 "" [0 uses])

(note 110 109 112 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 112 110 113 19 arch/arm/mm/init.c:100 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 148 [ i ])
            (reg:SI 154 [ D.25004 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 113 112 114 19 arch/arm/mm/init.c:100 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 111)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 19 -> ( 3 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 148 149 150 151 152 153 154 155 180


;; Succ edge  3 [91.0%] 
;; Succ edge  20 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u145(11){ }u146(13){ }u147(25){ }u148(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152 153
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 149 150 151 152 153
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  19 [9.0%]  (fallthru,loop_exit)
(note 114 113 116 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 116 114 117 20 arch/arm/mm/init.c:127 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11769900>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x11769900>)
        (nil)))

(insn 117 116 118 20 arch/arm/mm/init.c:127 (set (reg:SI 1 r1)
        (reg/v:SI 152 [ total ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 152 [ total ])
        (nil)))

(call_insn 118 117 120 20 arch/arm/mm/init.c:127 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 120 118 121 20 arch/arm/mm/init.c:128 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11769b70>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x11769b70>)
        (nil)))

(insn 121 120 122 20 arch/arm/mm/init.c:128 (set (reg:SI 1 r1)
        (reg/v:SI 153 [ free ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 153 [ free ])
        (nil)))

(call_insn 122 121 124 20 arch/arm/mm/init.c:128 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 124 122 125 20 arch/arm/mm/init.c:129 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11769ed0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x11769ed0>)
        (nil)))

(insn 125 124 126 20 arch/arm/mm/init.c:129 (set (reg:SI 1 r1)
        (reg/v:SI 151 [ reserved ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 151 [ reserved ])
        (nil)))

(call_insn 126 125 128 20 arch/arm/mm/init.c:129 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 128 126 129 20 arch/arm/mm/init.c:130 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x11765930>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x11765930>)
        (nil)))

(insn 129 128 130 20 arch/arm/mm/init.c:130 (set (reg:SI 1 r1)
        (reg/v:SI 149 [ slab ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ slab ])
        (nil)))

(call_insn 130 129 132 20 arch/arm/mm/init.c:130 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 132 130 133 20 arch/arm/mm/init.c:131 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x1176c0c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x1176c0c0>)
        (nil)))

(insn 133 132 134 20 arch/arm/mm/init.c:131 (set (reg:SI 1 r1)
        (reg/v:SI 150 [ shared ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 150 [ shared ])
        (nil)))

(call_insn 134 133 136 20 arch/arm/mm/init.c:131 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 136 134 137 20 arch/arm/mm/init.c:132 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x1176c1b0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC17") [flags 0x82] <string_cst 0x1176c1b0>)
        (nil)))

(insn 137 136 138 20 arch/arm/mm/init.c:132 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 138 137 0 20 arch/arm/mm/init.c:132 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 20 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
ending the processing of deferred insns
