
;; Function dma_supported (dma_supported)[0:1293]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 5 6
;; 2 succs { 5 3 }
;; 3 succs { 5 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 21.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



dma_supported

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d,1u} r3={1d,1u} r11={1d,5u} r12={1d} r13={1d,5u} r14={1d,1u} r24={2d,2u} r25={1d,5u} r26={1d,4u} r133={1d} r136={2d,2u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 48{18d,30u,0e} in 10{10 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,2] 25[11,1] 26[12,1] 133[13,1] 136[14,2] 137[16,1] 138[17,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 137 138
;; live  in  	 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12
;; rd  gen 	(4)
10, 15, 16, 17
;; rd  kill	(6)
9, 10, 14, 15, 16, 17

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 41 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 41 5 42 2 arch/arm/mm/dma-mapping.c:678 (set (reg:SI 137 [ mask ])
        (reg:SI 2 r2 [ mask ])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 4 2 arch/arm/mm/dma-mapping.c:678 (set (reg:SI 138 [ mask+4 ])
        (reg:SI 3 r3 [ mask+4 ])) 167 {*arm_movsi_insn} (nil))

(note 4 42 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/mm/dma-mapping.c:682 (set (reg:SI 136)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/mm/dma-mapping.c:682 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ mask+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 34 2 arch/arm/mm/dma-mapping.c:682 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17


;; Succ edge  4 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17
;; rd  gen 	(1)
9
;; rd  kill	(2)
9, 10

;; Pred edge  2 [50.0%]  (fallthru)
(note 34 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 34 13 3 arch/arm/mm/dma-mapping.c:682 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137 [ mask ])
            (const_int -2 [0xfffffffffffffffe]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 18 3 arch/arm/mm/dma-mapping.c:682 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; rd  out 	(14)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 16, 17


;; Succ edge  4 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 136
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17
;; rd  gen 	(1)
14
;; rd  kill	(2)
14, 15

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [50.0%] 
(code_label 18 13 37 4 3 "" [2 uses])

(note 37 18 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 37 20 4 arch/arm/mm/dma-mapping.c:682 (set (reg:SI 136)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17
;; rd  gen 	(2)
0, 13
;; rd  kill	(3)
0, 1, 13

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [50.0%]  (fallthru)
(code_label 20 19 38 5 2 "" [0 uses])

(note 38 20 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 38 31 5 arch/arm/mm/dma-mapping.c:682 (set (reg/i:SI 0 r0)
        (reg:SI 136)) 167 {*arm_movsi_insn} (nil))

(insn 31 25 0 5 arch/arm/mm/dma-mapping.c:682 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 21.
ending the processing of deferred insns

;; Function dma_set_mask (dma_set_mask)[0:1294]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 6 7 8
;; 2 succs { 6 3 }
;; 3 succs { 8 4 }
;; 4 succs { 8 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }
;; 8 succs { 7 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 26.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



dma_set_mask

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d,1u} r3={1d,1u} r11={1d,7u} r12={1d} r13={1d,7u} r14={1d,1u} r24={3d,3u} r25={1d,7u} r26={1d,6u} r133={2d,2u} r134={1d,3u} r135={1d} r136={1d,1u} r139={1d,2u} r140={1d,2u} 
;;    total ref usage 67{21d,46u,0e} in 16{16 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,3] 25[12,1] 26[13,1] 133[14,2] 134[16,1] 135[17,1] 136[18,1] 139[19,1] 140[20,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 136 139 140
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 136 139 140
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 12, 13
;; rd  gen 	(5)
11, 16, 18, 19, 20
;; rd  kill	(7)
9, 10, 11, 16, 18, 19, 20

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 52 2 arch/arm/mm/dma-mapping.c:686 (set (reg/v/f:SI 136 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 52 2 53 2 arch/arm/mm/dma-mapping.c:686 (set (reg:SI 139 [ dma_mask ])
        (reg:SI 2 r2 [ dma_mask ])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 4 2 arch/arm/mm/dma-mapping.c:686 (set (reg:SI 140 [ dma_mask+4 ])
        (reg:SI 3 r3 [ dma_mask+4 ])) 167 {*arm_movsi_insn} (nil))

(note 4 53 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/mm/dma-mapping.c:687 (set (reg/f:SI 134 [ D.24963 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ dev ])
                (const_int 276 [0x114])) [0 <variable>.dma_mask+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/mm/dma-mapping.c:687 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.24963 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/mm/dma-mapping.c:687 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8090 [0x1f9a])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 16, 18, 19, 20


;; Succ edge  5 [80.9%] 
;; Succ edge  3 [19.1%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 16, 18, 19, 20
;; rd  gen 	(1)
10
;; rd  kill	(3)
9, 10, 11

;; Pred edge  2 [19.1%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/mm/dma-mapping.c:679 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ dma_mask+4 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 46 3 arch/arm/mm/dma-mapping.c:679 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 7 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 16, 18, 19, 20


;; Succ edge  7 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(15)
1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 16, 18, 19, 20
;; rd  gen 	(1)
9
;; rd  kill	(3)
9, 10, 11

;; Pred edge  3 [50.0%]  (fallthru)
(note 46 12 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 46 16 4 arch/arm/mm/dma-mapping.c:679 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ dma_mask ])
            (const_int -2 [0xfffffffffffffffe]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 22 4 arch/arm/mm/dma-mapping.c:679 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 7 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; rd  out 	(15)
1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 16, 18, 19, 20


;; Succ edge  7 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 18, 19, 20
;; rd  gen 	(1)
15
;; rd  kill	(2)
14, 15

;; Pred edge  4 [50.0%]  (fallthru)
;; Pred edge  2 [80.9%] 
(code_label 22 16 23 5 7 "" [1 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 33 5 arch/arm/mm/dma-mapping.c:688 (set (reg:SI 133 [ D.24966 ])
        (const_int -5 [0xfffffffffffffffb])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 7) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 135
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20
;; rd  gen 	(2)
0, 17
;; rd  kill	(3)
0, 1, 17

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 33 24 25 6 10 "" [0 uses])

(note 25 33 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 37 25 43 6 arch/arm/mm/dma-mapping.c:695 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ D.24966 ])) 167 {*arm_movsi_insn} (nil))

(insn 43 37 29 6 arch/arm/mm/dma-mapping.c:695 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(20)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 139 140
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 139 140
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 16, 18, 19, 20
;; rd  gen 	(1)
14
;; rd  kill	(2)
14, 15

;; Pred edge  3 [50.0%] 
;; Pred edge  4 [50.0%] 
(code_label 29 43 30 7 8 "" [2 uses])

(note 30 29 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 30 55 7 arch/arm/mm/dma-mapping.c:691 (set (mem:SI (reg/f:SI 134 [ D.24963 ]) [0 S4 A64])
        (reg:SI 139 [ dma_mask ])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 32 7 arch/arm/mm/dma-mapping.c:691 (set (mem:SI (plus:SI (reg/f:SI 134 [ D.24963 ])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 140 [ dma_mask+4 ])) 167 {*arm_movsi_insn} (nil))

(insn 32 55 0 7 arch/arm/mm/dma-mapping.c:694 (set (reg:SI 133 [ D.24966 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20


;; Succ edge  6 [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 26.
ending the processing of deferred insns

;; Function dma_debug_do_init (dma_debug_do_init)[0:1295] (unlikely executed)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

In insn 9, replacing
 (reg:SI 133 [ <result> ])
 with (const_int 0 [0x0])
Changes to insn 9 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



dma_debug_do_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(2)
0, 11
;; rd  kill	(3)
0, 1, 11

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 9 2 arch/arm/mm/dma-mapping.c:704 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 9 5 15 2 arch/arm/mm/dma-mapping.c:704 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 15 9 0 2 arch/arm/mm/dma-mapping.c:704 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function consistent_init (consistent_init)[0:1274] (unlikely executed)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13
;;
;; Loop 1
;;  header 3, latch 11
;;  depth 1, outer 0
;;  nodes: 3 11 9 7 8 5 6
;; 2 succs { 3 }
;; 3 succs { 4 5 }
;; 4 succs { 13 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 9 8 }
;; 8 succs { 9 10 }
;; 9 succs { 10 11 }
;; 10 succs { 13 }
;; 11 succs { 3 12 }
;; 12 succs { 13 }
;; 13 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 19 count 26 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 19 count 36 (  2.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 19 count 36 (  2.6)

In insn 51, replacing
 (reg/f:SI 178)
 with (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114c1c90>)
Changes to insn 51 not profitable

In insn 52, replacing
 (reg/f:SI 179)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 52 not profitable

In insn 65, replacing
 (reg/f:SI 181)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
Changes to insn 65 not profitable

In insn 74, replacing
 (reg/v/f:SI 169 [ pmd ])
 with (reg/v/f:SI 170 [ pgd ])
Changed insn 74
deferring rescan insn with uid = 74.
deferring rescan insn with uid = 74.

In insn 97, replacing
 (reg/f:SI 191)
 with (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152dba0>)
Changes to insn 97 not profitable

In insn 98, replacing
 (reg/f:SI 192)
 with (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
Changes to insn 98 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 116.
Deleted 1 trivially dead insns

Number of successful forward propagations: 1



consistent_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={10d,7u} r1={9d,4u} r2={5d} r3={5d} r11={1d,13u} r12={5d} r13={1d,17u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={10d,6u} r25={1d,13u} r26={1d,12u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r166={2d,2u} r167={2d,5u} r168={1d,2u} r169={1d,3u} r170={1d,3u} r171={3d,2u} r172={1d,1u} r173={1d} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u,1d} r185={1d,1u} r186={1d,1u} r187={1d,1u,1d} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} 
;;    total ref usage 638{525d,111u,2e} in 58{54 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492
0[0,10] 1[10,9] 2[19,5] 3[24,5] 11[29,1] 12[30,5] 13[35,1] 14[36,5] 15[41,4] 16[45,4] 17[49,4] 18[53,4] 19[57,4] 20[61,4] 21[65,4] 22[69,4] 23[73,4] 24[77,10] 25[87,1] 26[88,1] 27[89,4] 28[93,4] 29[97,4] 30[101,4] 31[105,4] 32[109,4] 33[113,4] 34[117,4] 35[121,4] 36[125,4] 37[129,4] 38[133,4] 39[137,4] 40[141,4] 41[145,4] 42[149,4] 43[153,4] 44[157,4] 45[161,4] 46[165,4] 47[169,4] 48[173,4] 49[177,4] 50[181,4] 51[185,4] 52[189,4] 53[193,4] 54[197,4] 55[201,4] 56[205,4] 57[209,4] 58[213,4] 59[217,4] 60[221,4] 61[225,4] 62[229,4] 63[233,4] 64[237,4] 65[241,4] 66[245,4] 67[249,4] 68[253,4] 69[257,4] 70[261,4] 71[265,4] 72[269,4] 73[273,4] 74[277,4] 75[281,4] 76[285,4] 77[289,4] 78[293,4] 79[297,4] 80[301,4] 81[305,4] 82[309,4] 83[313,4] 84[317,4] 85[321,4] 86[325,4] 87[329,4] 88[333,4] 89[337,4] 90[341,4] 91[345,4] 92[349,4] 93[353,4] 94[357,4] 95[361,4] 96[365,4] 97[369,4] 98[373,4] 99[377,4] 100[381,4] 101[385,4] 102[389,4] 103[393,4] 104[397,4] 105[401,4] 106[405,4] 107[409,4] 108[413,4] 109[417,4] 110[421,4] 111[425,4] 112[429,4] 113[433,4] 114[437,4] 115[441,4] 116[445,4] 117[449,4] 118[453,4] 119[457,4] 120[461,4] 121[465,4] 122[469,4] 123[473,4] 124[477,4] 125[481,4] 126[485,4] 127[489,4] 166[493,2] 167[495,2] 168[497,1] 169[498,1] 170[499,1] 171[500,3] 172[503,1] 173[504,1] 174[505,1] 175[506,1] 176[507,1] 177[508,1] 178[509,1] 179[510,1] 180[511,1] 181[512,1] 182[513,1] 183[514,1] 184[515,1] 185[516,1] 186[517,1] 187[518,1] 188[519,1] 189[520,1] 190[521,1] 191[522,1] 192[523,1] 193[524,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166 167
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 166 167
;; live  kill	
;; rd  in  	(10)
9, 18, 23, 28, 29, 34, 35, 40, 87, 88
;; rd  gen 	(2)
494, 496
;; rd  kill	(4)
493, 494, 495, 496

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 36 0 35 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 35 36 38 2 NOTE_INSN_FUNCTION_BEG)

(insn 38 35 39 2 arch/arm/mm/dma-mapping.c:151 (set (reg:SI 166 [ ivtmp.521 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 109 2 arch/arm/mm/dma-mapping.c:158 (set (reg/v:SI 167 [ base ])
        (const_int -16777216 [0xffffffffff000000])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167
;; rd  out 	(12)
9, 18, 23, 28, 29, 34, 35, 40, 87, 88, 494, 496


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 11) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u4(11){ }u5(13){ }u6(25){ }u7(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  def 	 24 [cc] 170 174 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167
;; live  gen 	 24 [cc] 170 174 175 176 177
;; live  kill	
;; rd  in  	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 77, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524
;; rd  gen 	(6)
86, 499, 505, 506, 507, 508
;; rd  kill	(15)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 499, 505, 506, 507, 508

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  11 [85.7%]  (dfs_back)
(code_label 109 39 40 3 21 "" [1 uses])

(note 40 109 41 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 3 arch/arm/mm/dma-mapping.c:161 (set (reg/f:SI 174)
        (symbol_ref:SI ("init_mm") [flags 0xc0] <var_decl 0x113e8c00 init_mm>)) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 3 arch/arm/mm/dma-mapping.c:161 (set (reg:SI 175)
        (lshiftrt:SI (reg/v:SI 167 [ base ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 43 42 44 3 arch/arm/mm/dma-mapping.c:161 (set (reg:SI 176)
        (ashift:SI (reg:SI 175)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (nil))

(insn 44 43 45 3 arch/arm/mm/dma-mapping.c:161 (set (reg/f:SI 177 [ init_mm.pgd ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 174)
                (const_int 36 [0x24])) [0 init_mm.pgd+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 3 arch/arm/mm/dma-mapping.c:161 (set (reg/v/f:SI 170 [ pgd ])
        (plus:SI (reg/f:SI 177 [ init_mm.pgd ])
            (reg:SI 176))) 4 {*arm_addsi3} (nil))

(insn 46 45 47 3 arch/arm/mm/dma-mapping.c:164 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 170 [ pgd ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 47 46 48 3 arch/arm/mm/dma-mapping.c:164 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 170
;; rd  out 	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 86, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171 178 179
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 171 178 179
;; live  kill	 14 [lr]
;; rd  in  	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 86, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524
;; rd  gen 	(4)
7, 502, 509, 510
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40, 500, 501, 502, 509, 510

;; Pred edge  3 [0.0%]  (fallthru)
(note 48 47 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 4 arch/arm/mm/dma-mapping.c:165 (set (reg/f:SI 178)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114c1c90>)) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 4 arch/arm/mm/dma-mapping.c:165 (set (reg/f:SI 179)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 4 arch/arm/mm/dma-mapping.c:165 (set (reg:SI 0 r0)
        (reg/f:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x114c1c90>)
        (nil)))

(insn 52 51 53 4 arch/arm/mm/dma-mapping.c:165 (set (reg:SI 1 r1)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 53 52 54 4 arch/arm/mm/dma-mapping.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 54 53 57 4 arch/arm/mm/dma-mapping.c:166 (set (reg/v:SI 171 [ ret ])
        (const_int -12 [0xfffffffffffffff4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; rd  out 	(37)
7, 18, 23, 28, 29, 34, 35, 86, 87, 88, 493, 494, 495, 496, 497, 498, 499, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  def 	 24 [cc] 169 180
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 170
;; live  gen 	 24 [cc] 169 180
;; live  kill	
;; rd  in  	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 86, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524
;; rd  gen 	(3)
84, 498, 511
;; rd  kill	(12)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 498, 511

;; Pred edge  3 [100.0%] 
(code_label 57 54 58 5 15 "" [1 uses])

(note 58 57 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 5 arch/arm/mm/dma-mapping.c:170 (set (reg/v/f:SI 169 [ pmd ])
        (reg/v/f:SI 170 [ pgd ])) 167 {*arm_movsi_insn} (nil))

(insn 60 59 61 5 arch/arm/mm/dma-mapping.c:176 (set (reg:SI 180)
        (mem:SI (reg/v/f:SI 169 [ pmd ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 61 60 62 5 arch/arm/mm/dma-mapping.c:176 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 180)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 62 61 63 5 arch/arm/mm/dma-mapping.c:176 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 68)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169
;; rd  out 	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 84, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167 169
;; live  gen 	 0 [r0] 1 [r1] 181
;; live  kill	 14 [lr]
;; rd  in  	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 84, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524
;; rd  gen 	(1)
512
;; rd  kill	(6)
36, 37, 38, 39, 40, 512

;; Pred edge  5 [0.0%]  (fallthru)
(note 63 62 64 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 6 arch/arm/mm/dma-mapping.c:176 discrim 1 (set (reg/f:SI 181)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 6 arch/arm/mm/dma-mapping.c:176 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
        (nil)))

(insn 66 65 67 6 arch/arm/mm/dma-mapping.c:176 discrim 1 (set (reg:SI 1 r1)
        (const_int 176 [0xb0])) 167 {*arm_movsi_insn} (nil))

(call_insn 67 66 68 6 arch/arm/mm/dma-mapping.c:176 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a67280 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167 169
;; rd  out 	(35)
3, 9, 18, 23, 28, 29, 34, 35, 84, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169
;; lr  def 	 24 [cc] 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169
;; live  gen 	 24 [cc] 182
;; live  kill	
;; rd  in  	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 84, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524
;; rd  gen 	(2)
82, 513
;; rd  kill	(11)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 513

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 68 67 69 7 17 "" [1 uses])

(note 69 68 70 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 7 arch/arm/mm/dma-mapping.c:178 (set (reg:SI 182)
        (mem:SI (reg/v/f:SI 169 [ pmd ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 7 arch/arm/mm/dma-mapping.c:178 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 182)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 72 71 73 7 arch/arm/mm/dma-mapping.c:178 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 80)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169
;; rd  out 	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 82, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524


;; Succ edge  9 [100.0%] 
;; Succ edge  8 [0.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167 169
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 172
;; live  kill	 14 [lr]
;; rd  in  	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 82, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524
;; rd  gen 	(3)
3, 80, 503
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 503

;; Pred edge  7 [0.0%]  (fallthru)
(note 73 72 74 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 170 [ pgd ])) 167 {*arm_movsi_insn} (nil))

(insn 75 74 76 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (set (reg:SI 1 r1)
        (reg/v:SI 167 [ base ])) 167 {*arm_movsi_insn} (nil))

(call_insn 76 75 77 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__pte_alloc_kernel") [flags 0x41] <function_decl 0x10f97d80 __pte_alloc_kernel>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 77 76 78 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (set (reg:SI 172 [ D.24406 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 78 77 79 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172 [ D.24406 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 79 78 80 8 arch/arm/mm/dma-mapping.c:178 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167 169
;; rd  out 	(34)
3, 18, 23, 28, 29, 34, 35, 80, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524


;; Succ edge  9 [50.0%]  (fallthru)
;; Succ edge  10 [50.0%] 

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 169
;; lr  def 	 24 [cc] 168 183 184 185 186 187 188 189 190
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169
;; live  gen 	 24 [cc] 168 183 184 185 186 187 188 189 190
;; live  kill	
;; rd  in  	(37)
3, 9, 18, 23, 28, 29, 34, 35, 40, 80, 82, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524
;; rd  gen 	(10)
79, 497, 514, 515, 516, 517, 518, 519, 520, 521
;; rd  kill	(19)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 497, 514, 515, 516, 517, 518, 519, 520, 521

;; Pred edge  7 [100.0%] 
;; Pred edge  8 [50.0%]  (fallthru)
(code_label 80 79 81 9 18 "" [1 uses])

(note 81 80 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 82 81 83 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 184)
        (mem:SI (reg/v/f:SI 169 [ pmd ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 83 82 84 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 185)
        (and:SI (reg:SI 184)
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 83 85 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 183)
        (and:SI (reg:SI 185)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 184)
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 85 84 86 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 186)
        (plus:SI (reg:SI 183)
            (const_int -1073741824 [0xffffffffc0000000]))) 4 {*arm_addsi3} (nil))

(insn 86 85 87 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 187)
        (lshiftrt:SI (reg/v:SI 167 [ base ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 87 86 88 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 189)
        (ashift:SI (reg:SI 187)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 88 87 89 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 188)
        (lshiftrt:SI (reg:SI 189)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 187)
            (const_int 511 [0x1ff]))
        (nil)))

(insn 89 88 90 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg:SI 190)
        (ashift:SI (reg:SI 188)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 90 89 91 9 arch/arm/mm/dma-mapping.c:178 discrim 1 (set (reg/v/f:SI 168 [ pte ])
        (plus:SI (reg:SI 186)
            (reg:SI 190))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 9 arch/arm/mm/dma-mapping.c:179 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 168 [ pte ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 92 91 93 9 arch/arm/mm/dma-mapping.c:179 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9998 [0x270e])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; rd  out 	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 79, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 171 191 192
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 171 191 192
;; live  kill	 14 [lr]
;; rd  in  	(37)
3, 9, 18, 23, 28, 29, 34, 35, 40, 79, 80, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524
;; rd  gen 	(4)
1, 501, 522, 523
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 36, 37, 38, 39, 40, 500, 501, 502, 522, 523

;; Pred edge  9 [0.0%]  (fallthru)
;; Pred edge  8 [50.0%] 
(code_label 93 92 94 10 19 "" [1 uses])

(note 94 93 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 10 arch/arm/mm/dma-mapping.c:180 (set (reg/f:SI 191)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152dba0>)) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 10 arch/arm/mm/dma-mapping.c:180 (set (reg/f:SI 192)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 10 arch/arm/mm/dma-mapping.c:180 (set (reg:SI 0 r0)
        (reg/f:SI 191)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152dba0>)
        (nil)))

(insn 98 97 99 10 arch/arm/mm/dma-mapping.c:180 (set (reg:SI 1 r1)
        (reg/f:SI 192)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn 99 98 100 10 arch/arm/mm/dma-mapping.c:180 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 100 99 103 10 arch/arm/mm/dma-mapping.c:181 (set (reg/v:SI 171 [ ret ])
        (const_int -12 [0xfffffffffffffff4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 171
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; rd  out 	(38)
1, 18, 23, 28, 29, 34, 35, 79, 80, 87, 88, 493, 494, 495, 496, 497, 498, 499, 501, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 167 168
;; lr  def 	 24 [cc] 166 167 193
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; live  gen 	 24 [cc] 166 167 193
;; live  kill	
;; rd  in  	(36)
3, 9, 18, 23, 28, 29, 34, 35, 40, 79, 87, 88, 493, 494, 495, 496, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524
;; rd  gen 	(4)
77, 493, 495, 524
;; rd  kill	(15)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 493, 494, 495, 496, 524

;; Pred edge  9 [100.0%] 
(code_label 103 100 104 11 20 "" [1 uses])

(note 104 103 105 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 105 104 106 11 arch/arm/mm/dma-mapping.c:185 (set (reg/f:SI 193)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 106 105 107 11 arch/arm/mm/dma-mapping.c:185 (set (mem/s/f/j:SI (plus:SI (reg/f:SI 193)
                (reg:SI 166 [ ivtmp.521 ])) [0 consistent_pte S4 A32])
        (reg/v/f:SI 168 [ pte ])) 167 {*arm_movsi_insn} (nil))

(insn 107 106 108 11 arch/arm/mm/dma-mapping.c:186 (set (reg/v:SI 167 [ base ])
        (plus:SI (reg/v:SI 167 [ base ])
            (const_int 2097152 [0x200000]))) 4 {*arm_addsi3} (nil))

(insn 108 107 110 11 arch/arm/mm/dma-mapping.c:186 (set (reg:SI 166 [ ivtmp.521 ])
        (plus:SI (reg:SI 166 [ ivtmp.521 ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 110 108 111 11 arch/arm/mm/dma-mapping.c:187 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 167 [ base ])
            (const_int -2097152 [0xffffffffffe00000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 111 110 112 11 arch/arm/mm/dma-mapping.c:187 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8571 [0x217b])
        (nil)))
;; End of basic block 11 -> ( 3 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167
;; rd  out 	(34)
3, 9, 18, 23, 28, 29, 34, 35, 40, 77, 87, 88, 493, 495, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524


;; Succ edge  3 [85.7%]  (dfs_back)
;; Succ edge  12 [14.3%]  (fallthru)

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 171
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 171
;; live  kill	
;; rd  in  	(34)
3, 9, 18, 23, 28, 29, 34, 35, 40, 77, 87, 88, 493, 495, 497, 498, 499, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524
;; rd  gen 	(1)
500
;; rd  kill	(3)
500, 501, 502

;; Pred edge  11 [14.3%]  (fallthru)
(note 112 111 113 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 114 12 arch/arm/mm/dma-mapping.c:152 (set (reg/v:SI 171 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 171
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 171
;; rd  out 	(35)
3, 9, 18, 23, 28, 29, 34, 35, 40, 77, 87, 88, 493, 495, 497, 498, 499, 500, 503, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 4 12 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u101(11){ }u102(13){ }u103(25){ }u104(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 171
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 171
;; lr  def 	 0 [r0] 173
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 171
;; live  gen 	 0 [r0] 173
;; live  kill	
;; rd  in  	(48)
1, 3, 7, 9, 18, 23, 28, 29, 34, 35, 40, 77, 79, 80, 86, 87, 88, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524
;; rd  gen 	(2)
0, 504
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 504

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 114 113 115 13 16 "" [0 uses])

(note 115 114 120 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 120 115 126 13 arch/arm/mm/dma-mapping.c:190 (set (reg/i:SI 0 r0)
        (reg/v:SI 171 [ ret ])) 167 {*arm_movsi_insn} (nil))

(insn 126 120 0 13 arch/arm/mm/dma-mapping.c:190 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 13 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(46)
0, 18, 23, 28, 29, 34, 35, 40, 77, 79, 80, 86, 87, 88, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 116.
verify found no changes in insn with uid = 74.
ending the processing of deferred insns

;; Function ___dma_single_dev_to_cpu (___dma_single_dev_to_cpu)[0:1285]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;; 2 succs { 5 3 }
;; 3 succs { 5 9 }
;; 4 succs { 5 10 }
;; 5 succs { }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 1 }
;; 9 succs { 5 4 }
;; 10 succs { 6 8 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 15 count 17 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 15 count 20 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 11 n_edges 15 count 20 (  1.8)

In insn 26, replacing
 (reg/f:SI 142)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
Changes to insn 26 not profitable

In insn 27, replacing
 (reg:SI 143)
 with (const_int 462 [0x1ce])
Changes to insn 27 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 8.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



___dma_single_dev_to_cpu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={7d,4u} r2={5d,2u} r3={4d} r11={1d,10u} r12={4d} r13={1d,13u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={9d,6u} r25={1d,10u} r26={1d,9u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={1d} r138={1d,6u} r139={1d,3u} r140={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} 
;;    total ref usage 476{390d,86u,0e} in 37{34 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373
0[0,7] 1[7,7] 2[14,5] 3[19,4] 11[23,1] 12[24,4] 13[28,1] 14[29,4] 15[33,3] 16[36,3] 17[39,3] 18[42,3] 19[45,3] 20[48,3] 21[51,3] 22[54,3] 23[57,3] 24[60,9] 25[69,1] 26[70,1] 27[71,3] 28[74,3] 29[77,3] 30[80,3] 31[83,3] 32[86,3] 33[89,3] 34[92,3] 35[95,3] 36[98,3] 37[101,3] 38[104,3] 39[107,3] 40[110,3] 41[113,3] 42[116,3] 43[119,3] 44[122,3] 45[125,3] 46[128,3] 47[131,3] 48[134,3] 49[137,3] 50[140,3] 51[143,3] 52[146,3] 53[149,3] 54[152,3] 55[155,3] 56[158,3] 57[161,3] 58[164,3] 59[167,3] 60[170,3] 61[173,3] 62[176,3] 63[179,3] 64[182,3] 65[185,3] 66[188,3] 67[191,3] 68[194,3] 69[197,3] 70[200,3] 71[203,3] 72[206,3] 73[209,3] 74[212,3] 75[215,3] 76[218,3] 77[221,3] 78[224,3] 79[227,3] 80[230,3] 81[233,3] 82[236,3] 83[239,3] 84[242,3] 85[245,3] 86[248,3] 87[251,3] 88[254,3] 89[257,3] 90[260,3] 91[263,3] 92[266,3] 93[269,3] 94[272,3] 95[275,3] 96[278,3] 97[281,3] 98[284,3] 99[287,3] 100[290,3] 101[293,3] 102[296,3] 103[299,3] 104[302,3] 105[305,3] 106[308,3] 107[311,3] 108[314,3] 109[317,3] 110[320,3] 111[323,3] 112[326,3] 113[329,3] 114[332,3] 115[335,3] 116[338,3] 117[341,3] 118[344,3] 119[347,3] 120[350,3] 121[353,3] 122[356,3] 123[359,3] 124[362,3] 125[365,3] 126[368,3] 127[371,3] 133[374,1] 134[375,1] 135[376,1] 136[377,1] 137[378,1] 138[379,1] 139[380,1] 140[381,1] 141[382,1] 142[383,1] 143[384,1] 144[385,1] 145[386,1] 146[387,1] 147[388,1] 148[389,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 138 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 137 138 139 140
;; live  kill	
;; rd  in  	(10)
6, 13, 18, 22, 23, 27, 28, 32, 69, 70
;; rd  gen 	(5)
61, 378, 379, 380, 381
;; rd  kill	(13)
60, 61, 62, 63, 64, 65, 66, 67, 68, 378, 379, 380, 381

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/dma-mapping.c:461 (set (reg/v/f:SI 138 [ kaddr ])
        (reg:SI 0 r0 [ kaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:461 (set (reg/v:SI 139 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:461 (set (reg/v:SI 140 [ dir ])
        (reg:SI 2 r2 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 arch/arm/mm/dma-mapping.c:462 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 138 [ kaddr ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/mm/dma-mapping.c:462 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; rd  out 	(15)
6, 13, 18, 22, 23, 27, 28, 32, 61, 69, 70, 378, 379, 380, 381


;; Succ edge  5 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 136 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; live  gen 	 24 [cc] 136 141
;; live  kill	
;; rd  in  	(15)
6, 13, 18, 22, 23, 27, 28, 32, 61, 69, 70, 378, 379, 380, 381
;; rd  gen 	(3)
60, 377, 382
;; rd  kill	(11)
60, 61, 62, 63, 64, 65, 66, 67, 68, 377, 382

;; Pred edge  2 [100.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/mm/dma-mapping.c:462 discrim 2 (set (reg/f:SI 141)
        (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x10e733c0 high_memory>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/mm/dma-mapping.c:462 discrim 2 (set (reg:SI 136 [ high_memory.383 ])
        (mem/f/c/i:SI (reg/f:SI 141) [0 high_memory+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/mm/dma-mapping.c:462 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 138 [ kaddr ])
            (reg:SI 136 [ high_memory.383 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 19 3 arch/arm/mm/dma-mapping.c:462 discrim 2 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 3 -> ( 5 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 140
;; rd  out 	(17)
6, 13, 18, 22, 23, 27, 28, 32, 60, 69, 70, 377, 378, 379, 380, 381, 382


;; Succ edge  5 [0.0%] 
;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
6, 13, 18, 22, 23, 27, 28, 32, 63, 69, 70, 376, 377, 378, 379, 380, 381, 382, 389
;; rd  gen 	(1)
68
;; rd  kill	(9)
60, 61, 62, 63, 64, 65, 66, 67, 68

;; Pred edge  9 [100.0%]  (fallthru)
(note 19 15 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/dma-mapping.c:462 discrim 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.24740 ])
            (reg:SI 136 [ high_memory.383 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 4 arch/arm/mm/dma-mapping.c:462 discrim 8 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; rd  out 	(19)
6, 13, 18, 22, 23, 27, 28, 32, 68, 69, 70, 376, 377, 378, 379, 380, 381, 382, 389


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  10 [100.0%] 

;; Start of basic block ( 2 9 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 142 143
;; live  kill	 14 [lr]
;; rd  in  	(22)
6, 13, 18, 22, 23, 27, 28, 32, 60, 61, 63, 68, 69, 70, 376, 377, 378, 379, 380, 381, 382, 389
;; rd  gen 	(2)
383, 384
;; rd  kill	(6)
29, 30, 31, 32, 383, 384

;; Pred edge  2 [0.0%] 
;; Pred edge  9 [0.0%] 
;; Pred edge  3 [0.0%] 
;; Pred edge  4 [0.0%]  (fallthru)
(code_label 22 21 23 5 28 "" [3 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 arch/arm/mm/dma-mapping.c:462 discrim 5 (set (reg/f:SI 142)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 arch/arm/mm/dma-mapping.c:462 discrim 5 (set (reg:SI 143)
        (const_int 462 [0x1ce])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 arch/arm/mm/dma-mapping.c:462 discrim 5 (set (reg:SI 0 r0)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
        (nil)))

(insn 27 26 28 5 arch/arm/mm/dma-mapping.c:462 discrim 5 (set (reg:SI 1 r1)
        (reg:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 462 [0x1ce])
        (nil)))

(call_insn 28 27 63 5 arch/arm/mm/dma-mapping.c:462 discrim 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
6, 13, 18, 22, 23, 27, 28, 60, 61, 63, 68, 69, 70, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389



;; Start of basic block ( 10) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; live  gen 	 24 [cc] 133 144
;; live  kill	
;; rd  in  	(19)
6, 13, 18, 22, 23, 27, 28, 32, 62, 69, 70, 376, 377, 378, 379, 380, 381, 382, 389
;; rd  gen 	(3)
66, 374, 385
;; rd  kill	(11)
60, 61, 62, 63, 64, 65, 66, 67, 68, 374, 385

;; Pred edge  10 [80.1%] 
(code_label 63 28 30 6 33 "" [1 uses])

(note 30 63 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 144)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 133 [ D.25042 ])
        (mem/s/f/j/c:SI (reg/f:SI 144) [0 outer_cache.inv_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.25042 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 34 33 35 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140
;; rd  out 	(21)
6, 13, 18, 22, 23, 27, 28, 32, 66, 69, 70, 374, 376, 377, 378, 379, 380, 381, 382, 385, 389


;; Succ edge  7 [78.3%]  (fallthru)
;; Succ edge  8 [21.6%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140
;; live  gen 	 0 [r0] 1 [r1] 134 145
;; live  kill	 14 [lr]
;; rd  in  	(21)
6, 13, 18, 22, 23, 27, 28, 32, 66, 69, 70, 374, 376, 377, 378, 379, 380, 381, 382, 385, 389
;; rd  gen 	(2)
375, 386
;; rd  kill	(6)
29, 30, 31, 32, 375, 386

;; Pred edge  6 [78.3%]  (fallthru)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 arch/arm/mm/dma-mapping.c:467 (set (reg/v:SI 134 [ paddr ])
        (plus:SI (reg/v/f:SI 138 [ kaddr ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 37 36 38 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 145)
        (plus:SI (reg/v:SI 134 [ paddr ])
            (reg/v:SI 139 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 38 37 39 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 0 r0)
        (reg/v:SI 134 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 1 r1)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(call_insn 40 39 41 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (parallel [
            (call (mem:SI (reg/f:SI 133 [ D.25042 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; rd  out 	(22)
6, 13, 18, 22, 23, 27, 28, 66, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 389


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 6 10) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 146 147
;; live  kill	 14 [lr]
;; rd  in  	(24)
6, 13, 18, 22, 23, 27, 28, 32, 62, 66, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 389
;; rd  gen 	(2)
387, 388
;; rd  kill	(6)
29, 30, 31, 32, 387, 388

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  6 [21.6%] 
;; Pred edge  10 [19.9%]  (fallthru)
(code_label 41 40 42 8 31 "" [1 uses])

(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 8 arch/arm/mm/dma-mapping.c:471 (set (reg/f:SI 146)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x112494e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 8 arch/arm/mm/dma-mapping.c:471 (set (reg/f:SI 147 [ cpu_cache.dma_unmap_area ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 146)
                (const_int 32 [0x20])) [0 cpu_cache.dma_unmap_area+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 8 arch/arm/mm/dma-mapping.c:471 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ kaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 8 arch/arm/mm/dma-mapping.c:471 (set (reg:SI 1 r1)
        (reg/v:SI 139 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 8 arch/arm/mm/dma-mapping.c:471 (set (reg:SI 2 r2)
        (reg/v:SI 140 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 48 47 52 8 arch/arm/mm/dma-mapping.c:471 (parallel [
            (call (mem:SI (reg/f:SI 147 [ cpu_cache.dma_unmap_area ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(25)
6, 13, 18, 22, 23, 27, 28, 62, 66, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 24 [cc] 135 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 140
;; live  gen 	 24 [cc] 135 148
;; live  kill	
;; rd  in  	(17)
6, 13, 18, 22, 23, 27, 28, 32, 60, 69, 70, 377, 378, 379, 380, 381, 382
;; rd  gen 	(3)
63, 376, 389
;; rd  kill	(11)
60, 61, 62, 63, 64, 65, 66, 67, 68, 376, 389

;; Pred edge  3 [100.0%]  (fallthru)
(note 52 48 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 9 arch/arm/mm/dma-mapping.c:462 discrim 6 (set (reg:SI 148)
        (plus:SI (reg/v:SI 139 [ size ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 54 53 55 9 arch/arm/mm/dma-mapping.c:462 discrim 6 (set (reg:SI 135 [ D.24740 ])
        (plus:SI (reg/v/f:SI 138 [ kaddr ])
            (reg:SI 148))) 4 {*arm_addsi3} (nil))

(insn 55 54 56 9 arch/arm/mm/dma-mapping.c:462 discrim 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 135 [ D.24740 ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 61 9 arch/arm/mm/dma-mapping.c:462 discrim 6 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 9 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139 140
;; rd  out 	(19)
6, 13, 18, 22, 23, 27, 28, 32, 63, 69, 70, 376, 377, 378, 379, 380, 381, 382, 389


;; Succ edge  5 [0.0%] 
;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
6, 13, 18, 22, 23, 27, 28, 32, 68, 69, 70, 376, 377, 378, 379, 380, 381, 382, 389
;; rd  gen 	(1)
62
;; rd  kill	(9)
60, 61, 62, 63, 64, 65, 66, 67, 68

;; Pred edge  4 [100.0%] 
(code_label 61 56 62 10 30 "" [1 uses])

(note 62 61 64 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 64 62 65 10 arch/arm/mm/dma-mapping.c:466 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ dir ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 0 10 arch/arm/mm/dma-mapping.c:466 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 63)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8009 [0x1f49])
        (nil)))
;; End of basic block 10 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140
;; rd  out 	(19)
6, 13, 18, 22, 23, 27, 28, 32, 62, 69, 70, 376, 377, 378, 379, 380, 381, 382, 389


;; Succ edge  6 [80.1%] 
;; Succ edge  8 [19.9%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 8.
ending the processing of deferred insns

;; Function ___dma_single_cpu_to_dev (___dma_single_cpu_to_dev)[0:1284]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12
;; 2 succs { 5 3 }
;; 3 succs { 5 10 }
;; 4 succs { 5 11 }
;; 5 succs { }
;; 6 succs { 7 12 }
;; 7 succs { 12 }
;; 8 succs { 9 12 }
;; 9 succs { 12 }
;; 10 succs { 5 4 }
;; 11 succs { 6 8 }
;; 12 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 22 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 18 count 24 (  1.8)

In insn 26, replacing
 (reg/f:SI 143)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
Changes to insn 26 not profitable

In insn 27, replacing
 (reg:SI 144)
 with (const_int 445 [0x1bd])
Changes to insn 27 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 72.
deferring deletion of insn with uid = 71.
deferring deletion of insn with uid = 70.
deferring deletion of insn with uid = 8.
Deleted 4 trivially dead insns

Number of successful forward propagations: 0



___dma_single_cpu_to_dev

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,6u} r1={9d,6u} r2={6d,3u} r3={5d} r11={1d,12u} r12={5d} r13={1d,16u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={11d,7u} r25={1d,12u} r26={1d,11u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={1d,2u} r135={1d,4u} r136={1d,2u} r137={1d,2u} r138={1d} r139={1d,5u} r140={1d,3u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 618{513d,105u,0e} in 42{38 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493
0[0,9] 1[9,9] 2[18,6] 3[24,5] 11[29,1] 12[30,5] 13[35,1] 14[36,5] 15[41,4] 16[45,4] 17[49,4] 18[53,4] 19[57,4] 20[61,4] 21[65,4] 22[69,4] 23[73,4] 24[77,11] 25[88,1] 26[89,1] 27[90,4] 28[94,4] 29[98,4] 30[102,4] 31[106,4] 32[110,4] 33[114,4] 34[118,4] 35[122,4] 36[126,4] 37[130,4] 38[134,4] 39[138,4] 40[142,4] 41[146,4] 42[150,4] 43[154,4] 44[158,4] 45[162,4] 46[166,4] 47[170,4] 48[174,4] 49[178,4] 50[182,4] 51[186,4] 52[190,4] 53[194,4] 54[198,4] 55[202,4] 56[206,4] 57[210,4] 58[214,4] 59[218,4] 60[222,4] 61[226,4] 62[230,4] 63[234,4] 64[238,4] 65[242,4] 66[246,4] 67[250,4] 68[254,4] 69[258,4] 70[262,4] 71[266,4] 72[270,4] 73[274,4] 74[278,4] 75[282,4] 76[286,4] 77[290,4] 78[294,4] 79[298,4] 80[302,4] 81[306,4] 82[310,4] 83[314,4] 84[318,4] 85[322,4] 86[326,4] 87[330,4] 88[334,4] 89[338,4] 90[342,4] 91[346,4] 92[350,4] 93[354,4] 94[358,4] 95[362,4] 96[366,4] 97[370,4] 98[374,4] 99[378,4] 100[382,4] 101[386,4] 102[390,4] 103[394,4] 104[398,4] 105[402,4] 106[406,4] 107[410,4] 108[414,4] 109[418,4] 110[422,4] 111[426,4] 112[430,4] 113[434,4] 114[438,4] 115[442,4] 116[446,4] 117[450,4] 118[454,4] 119[458,4] 120[462,4] 121[466,4] 122[470,4] 123[474,4] 124[478,4] 125[482,4] 126[486,4] 127[490,4] 133[494,1] 134[495,1] 135[496,1] 136[497,1] 137[498,1] 138[499,1] 139[500,1] 140[501,1] 141[502,1] 142[503,1] 143[504,1] 144[505,1] 145[506,1] 146[507,1] 147[508,1] 148[509,1] 149[510,1] 150[511,1] 151[512,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 139 140 141
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 139 140 141
;; live  kill	
;; rd  in  	(10)
8, 17, 23, 28, 29, 34, 35, 40, 88, 89
;; rd  gen 	(5)
78, 499, 500, 501, 502
;; rd  kill	(15)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 499, 500, 501, 502

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/dma-mapping.c:442 (set (reg/v/f:SI 139 [ kaddr ])
        (reg:SI 0 r0 [ kaddr ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:442 (set (reg/v:SI 140 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:442 (set (reg/v:SI 141 [ dir ])
        (reg:SI 2 r2 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 arch/arm/mm/dma-mapping.c:445 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 139 [ kaddr ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/mm/dma-mapping.c:445 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(15)
8, 17, 23, 28, 29, 34, 35, 40, 78, 88, 89, 499, 500, 501, 502


;; Succ edge  5 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u10(11){ }u11(13){ }u12(25){ }u13(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 137 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 24 [cc] 137 142
;; live  kill	
;; rd  in  	(15)
8, 17, 23, 28, 29, 34, 35, 40, 78, 88, 89, 499, 500, 501, 502
;; rd  gen 	(3)
77, 498, 503
;; rd  kill	(13)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 498, 503

;; Pred edge  2 [100.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/mm/dma-mapping.c:445 discrim 2 (set (reg/f:SI 142)
        (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x10e733c0 high_memory>)) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/mm/dma-mapping.c:445 discrim 2 (set (reg:SI 137 [ high_memory.377 ])
        (mem/f/c/i:SI (reg/f:SI 142) [0 high_memory+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 3 arch/arm/mm/dma-mapping.c:445 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 139 [ kaddr ])
            (reg:SI 137 [ high_memory.377 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 19 3 arch/arm/mm/dma-mapping.c:445 discrim 2 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 3 -> ( 5 10)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 141
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 141
;; rd  out 	(17)
8, 17, 23, 28, 29, 34, 35, 40, 77, 88, 89, 498, 499, 500, 501, 502, 503


;; Succ edge  5 [0.0%] 
;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 10) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
8, 17, 23, 28, 29, 34, 35, 40, 81, 88, 89, 497, 498, 499, 500, 501, 502, 503, 510
;; rd  gen 	(1)
87
;; rd  kill	(11)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87

;; Pred edge  10 [100.0%]  (fallthru)
(note 19 15 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/mm/dma-mapping.c:445 discrim 8 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.24698 ])
            (reg:SI 137 [ high_memory.377 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 4 arch/arm/mm/dma-mapping.c:445 discrim 8 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 11)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; rd  out 	(19)
8, 17, 23, 28, 29, 34, 35, 40, 87, 88, 89, 497, 498, 499, 500, 501, 502, 503, 510


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 2 10 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 143 144
;; live  kill	 14 [lr]
;; rd  in  	(22)
8, 17, 23, 28, 29, 34, 35, 40, 77, 78, 81, 87, 88, 89, 497, 498, 499, 500, 501, 502, 503, 510
;; rd  gen 	(2)
504, 505
;; rd  kill	(7)
36, 37, 38, 39, 40, 504, 505

;; Pred edge  2 [0.0%] 
;; Pred edge  10 [0.0%] 
;; Pred edge  3 [0.0%] 
;; Pred edge  4 [0.0%]  (fallthru)
(code_label 22 21 23 5 40 "" [3 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 5 arch/arm/mm/dma-mapping.c:445 discrim 5 (set (reg/f:SI 143)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 5 arch/arm/mm/dma-mapping.c:445 discrim 5 (set (reg:SI 144)
        (const_int 445 [0x1bd])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 arch/arm/mm/dma-mapping.c:445 discrim 5 (set (reg:SI 0 r0)
        (reg/f:SI 143)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
        (nil)))

(insn 27 26 28 5 arch/arm/mm/dma-mapping.c:445 discrim 5 (set (reg:SI 1 r1)
        (reg:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 445 [0x1bd])
        (nil)))

(call_insn 28 27 75 5 arch/arm/mm/dma-mapping.c:445 discrim 5 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
8, 17, 23, 28, 29, 34, 35, 77, 78, 81, 87, 88, 89, 497, 498, 499, 500, 501, 502, 503, 504, 505, 510



;; Start of basic block ( 11) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; live  gen 	 24 [cc] 134 145
;; live  kill	
;; rd  in  	(21)
8, 17, 23, 28, 29, 34, 35, 79, 88, 89, 496, 497, 498, 499, 500, 501, 502, 503, 510, 511, 512
;; rd  gen 	(3)
85, 495, 506
;; rd  kill	(13)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 495, 506

;; Pred edge  11 [28.0%] 
(code_label 75 28 30 6 45 "" [1 uses])

(note 30 75 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 145)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 134 [ D.25045 ])
        (mem/s/f/j/c:SI (reg/f:SI 145) [0 outer_cache.inv_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.25045 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 34 33 35 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 85)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 6 -> ( 7 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 140
;; rd  out 	(23)
8, 17, 23, 28, 29, 34, 35, 85, 88, 89, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 510, 511, 512


;; Succ edge  7 [69.8%]  (fallthru)
;; Succ edge  12 [30.2%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 140
;; live  gen 	 0 [r0] 1 [r1] 146
;; live  kill	 14 [lr]
;; rd  in  	(23)
8, 17, 23, 28, 29, 34, 35, 85, 88, 89, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 510, 511, 512
;; rd  gen 	(1)
507
;; rd  kill	(6)
36, 37, 38, 39, 40, 507

;; Pred edge  6 [69.8%]  (fallthru)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 146)
        (plus:SI (reg/v:SI 135 [ paddr ])
            (reg/v:SI 140 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 37 36 38 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 1 r1)
        (reg:SI 146)) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (parallel [
            (call (mem:SI (reg/f:SI 134 [ D.25045 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
8, 17, 23, 28, 29, 34, 35, 85, 88, 89, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 510, 511, 512


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u53(11){ }u54(13){ }u55(25){ }u56(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; live  gen 	 24 [cc] 133 147
;; live  kill	
;; rd  in  	(21)
8, 17, 23, 28, 29, 34, 35, 79, 88, 89, 496, 497, 498, 499, 500, 501, 502, 503, 510, 511, 512
;; rd  gen 	(3)
83, 494, 508
;; rd  kill	(13)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 494, 508

;; Pred edge  11 [72.0%]  (fallthru)
(note 42 39 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 147)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 133 [ D.25048 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 147)
                (const_int 4 [0x4])) [0 outer_cache.clean_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.25048 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 46 45 47 8 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 85)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 8 -> ( 9 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140
;; rd  out 	(23)
8, 17, 23, 28, 29, 34, 35, 83, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 508, 510, 511, 512


;; Succ edge  9 [78.3%]  (fallthru)
;; Succ edge  12 [21.6%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 140
;; live  gen 	 0 [r0] 1 [r1] 148
;; live  kill	 14 [lr]
;; rd  in  	(23)
8, 17, 23, 28, 29, 34, 35, 83, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 508, 510, 511, 512
;; rd  gen 	(1)
509
;; rd  kill	(6)
36, 37, 38, 39, 40, 509

;; Pred edge  8 [78.3%]  (fallthru)
(note 47 46 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 148)
        (plus:SI (reg/v:SI 135 [ paddr ])
            (reg/v:SI 140 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 49 48 50 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 1 r1)
        (reg:SI 148)) 167 {*arm_movsi_insn} (nil))

(call_insn 51 50 57 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (parallel [
            (call (mem:SI (reg/f:SI 133 [ D.25048 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 9 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
8, 17, 23, 28, 29, 34, 35, 83, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 508, 509, 510, 511, 512


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 24 [cc] 136 149
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 141
;; live  gen 	 24 [cc] 136 149
;; live  kill	
;; rd  in  	(17)
8, 17, 23, 28, 29, 34, 35, 40, 77, 88, 89, 498, 499, 500, 501, 502, 503
;; rd  gen 	(3)
81, 497, 510
;; rd  kill	(13)
77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 497, 510

;; Pred edge  3 [100.0%]  (fallthru)
(note 57 51 58 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 59 10 arch/arm/mm/dma-mapping.c:445 discrim 6 (set (reg:SI 149)
        (plus:SI (reg/v:SI 140 [ size ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 59 58 60 10 arch/arm/mm/dma-mapping.c:445 discrim 6 (set (reg:SI 136 [ D.24698 ])
        (plus:SI (reg/v/f:SI 139 [ kaddr ])
            (reg:SI 149))) 4 {*arm_addsi3} (nil))

(insn 60 59 61 10 arch/arm/mm/dma-mapping.c:445 discrim 6 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.24698 ])
            (const_int -1073741825 [0xffffffffbfffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 61 60 66 10 arch/arm/mm/dma-mapping.c:445 discrim 6 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 10 -> ( 5 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 141
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 141
;; rd  out 	(19)
8, 17, 23, 28, 29, 34, 35, 40, 81, 88, 89, 497, 498, 499, 500, 501, 502, 503, 510


;; Succ edge  5 [0.0%] 
;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 150 151
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140 141
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 135 150 151
;; live  kill	 14 [lr]
;; rd  in  	(19)
8, 17, 23, 28, 29, 34, 35, 40, 87, 88, 89, 497, 498, 499, 500, 501, 502, 503, 510
;; rd  gen 	(4)
79, 496, 511, 512
;; rd  kill	(19)
36, 37, 38, 39, 40, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 496, 511, 512

;; Pred edge  4 [100.0%] 
(code_label 66 61 67 11 42 "" [1 uses])

(note 67 66 68 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 11 arch/arm/mm/dma-mapping.c:447 (set (reg/f:SI 150)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x112494e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 69 68 73 11 arch/arm/mm/dma-mapping.c:447 (set (reg/f:SI 151 [ cpu_cache.dma_map_area ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 150)
                (const_int 28 [0x1c])) [0 cpu_cache.dma_map_area+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 73 69 74 11 arch/arm/mm/dma-mapping.c:447 (parallel [
            (call (mem:SI (reg/f:SI 151 [ cpu_cache.dma_map_area ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 74 73 76 11 arch/arm/mm/dma-mapping.c:449 (set (reg/v:SI 135 [ paddr ])
        (plus:SI (reg/v/f:SI 139 [ kaddr ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 76 74 77 11 arch/arm/mm/dma-mapping.c:450 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ dir ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 77 76 85 11 arch/arm/mm/dma-mapping.c:450 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 11 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; rd  out 	(21)
8, 17, 23, 28, 29, 34, 35, 79, 88, 89, 496, 497, 498, 499, 500, 501, 502, 503, 510, 511, 512


;; Succ edge  6 [28.0%] 
;; Succ edge  8 [72.0%]  (fallthru)

;; Start of basic block ( 9 6 7 8) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(28)
8, 17, 23, 28, 29, 34, 35, 83, 85, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  6 [30.2%] 
;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  8 [21.6%] 
(code_label 85 77 88 12 47 "" [2 uses])

(note 88 85 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 12 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
8, 17, 23, 28, 29, 34, 35, 83, 85, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 8.
deleting insn with uid = 70.
deleting insn with uid = 71.
deleting insn with uid = 72.
ending the processing of deferred insns

;; Function dma_cache_maint_page (dma_cache_maint_page)[0:1286]

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 1
;;  header 3, latch 14
;;  depth 1, outer 0
;;  nodes: 3 14 13 11 15 10 12 9 5 8 6 7 4
;; 2 succs { 3 }
;; 3 succs { 4 15 }
;; 4 succs { 6 5 }
;; 5 succs { 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 13 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 16 }
;; 14 succs { 3 }
;; 15 succs { 13 }
;; 16 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 44 (  2.6)

In insn 15, replacing
 (mult:SI (reg:SI 147)
        (reg:SI 144))
 with (mult:SI (reg:SI 144)
        (const_int 768 [0x300]))
Changes to insn 15 not recognized
 Setting REG_EQUAL note

In insn 17, replacing
 (plus:SI (reg:SI 146)
        (reg/f:SI 148))
 with (plus:SI (reg:SI 146)
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>))
Changes to insn 17 not recognized
 Setting REG_EQUAL note

In insn 33, replacing
 (compare:CC (reg/v:SI 140 [ offset ])
        (reg:SI 152))
 with (compare:CC (reg/v:SI 140 [ offset ])
        (const_int 4095 [0xfff]))
Changes to insn 33 not recognized
 Setting REG_EQUAL note


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



dma_cache_maint_page

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={17d,12u} r1={12d,4u} r2={12d,4u} r3={9d,1u} r11={1d,16u} r12={9d} r13={1d,24u} r14={9d,1u} r15={8d} r16={8d} r17={8d} r18={8d} r19={8d} r20={8d} r21={8d} r22={8d} r23={8d} r24={14d,6u} r25={1d,16u} r26={1d,16u,1d} r27={8d} r28={8d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={8d} r38={8d} r39={8d} r40={8d} r41={8d} r42={8d} r43={8d} r44={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r77={8d} r78={8d} r79={8d} r80={8d} r81={8d} r82={8d} r83={8d} r84={8d} r85={8d} r86={8d} r87={8d} r88={8d} r89={8d} r90={8d} r91={8d} r92={8d} r93={8d} r94={8d} r95={8d} r96={8d} r97={8d} r98={8d} r99={8d} r100={8d} r101={8d} r102={8d} r103={8d} r104={8d} r105={8d} r106={8d} r107={8d} r108={8d} r109={8d} r110={8d} r111={8d} r112={8d} r113={8d} r114={8d} r115={8d} r116={8d} r117={8d} r118={8d} r119={8d} r120={8d} r121={8d} r122={8d} r123={8d} r124={8d} r125={8d} r126={8d} r127={8d} r133={1d,2u} r134={1d,2u} r135={1d,2u} r136={3d,3u} r137={2d,6u} r138={1d,1u} r139={3d,7u} r140={3d,8u,1d} r141={1d,1u} r142={1d,3u} r143={1d,3u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} 
;;    total ref usage 1160{1002d,156u,2e} in 70{62 regular + 8 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965
0[0,17] 1[17,12] 2[29,12] 3[41,9] 11[50,1] 12[51,9] 13[60,1] 14[61,9] 15[70,8] 16[78,8] 17[86,8] 18[94,8] 19[102,8] 20[110,8] 21[118,8] 22[126,8] 23[134,8] 24[142,14] 25[156,1] 26[157,1] 27[158,8] 28[166,8] 29[174,8] 30[182,8] 31[190,8] 32[198,8] 33[206,8] 34[214,8] 35[222,8] 36[230,8] 37[238,8] 38[246,8] 39[254,8] 40[262,8] 41[270,8] 42[278,8] 43[286,8] 44[294,8] 45[302,8] 46[310,8] 47[318,8] 48[326,8] 49[334,8] 50[342,8] 51[350,8] 52[358,8] 53[366,8] 54[374,8] 55[382,8] 56[390,8] 57[398,8] 58[406,8] 59[414,8] 60[422,8] 61[430,8] 62[438,8] 63[446,8] 64[454,8] 65[462,8] 66[470,8] 67[478,8] 68[486,8] 69[494,8] 70[502,8] 71[510,8] 72[518,8] 73[526,8] 74[534,8] 75[542,8] 76[550,8] 77[558,8] 78[566,8] 79[574,8] 80[582,8] 81[590,8] 82[598,8] 83[606,8] 84[614,8] 85[622,8] 86[630,8] 87[638,8] 88[646,8] 89[654,8] 90[662,8] 91[670,8] 92[678,8] 93[686,8] 94[694,8] 95[702,8] 96[710,8] 97[718,8] 98[726,8] 99[734,8] 100[742,8] 101[750,8] 102[758,8] 103[766,8] 104[774,8] 105[782,8] 106[790,8] 107[798,8] 108[806,8] 109[814,8] 110[822,8] 111[830,8] 112[838,8] 113[846,8] 114[854,8] 115[862,8] 116[870,8] 117[878,8] 118[886,8] 119[894,8] 120[902,8] 121[910,8] 122[918,8] 123[926,8] 124[934,8] 125[942,8] 126[950,8] 127[958,8] 133[966,1] 134[967,1] 135[968,1] 136[969,3] 137[972,2] 138[974,1] 139[975,3] 140[978,3] 141[981,1] 142[982,1] 143[983,1] 144[984,1] 145[985,1] 146[986,1] 147[987,1] 148[988,1] 149[989,1] 150[990,1] 151[991,1] 152[992,1] 153[993,1] 154[994,1] 155[995,1] 156[996,1] 157[997,1] 158[998,1] 159[999,1] 160[1000,1] 161[1001,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137 139 140 141 142 143
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137 139 140 141 142 143
;; live  kill	
;; rd  in  	(10)
16, 28, 40, 49, 50, 59, 60, 69, 156, 157
;; rd  gen 	(6)
973, 977, 980, 981, 982, 983
;; rd  kill	(11)
972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/dma-mapping.c:478 (set (reg/v/f:SI 139 [ page ])
        (reg:SI 0 r0 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:478 (set (reg/v:SI 140 [ offset ])
        (reg:SI 1 r1 [ offset ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:478 (set (reg/v:SI 141 [ size ])
        (reg:SI 2 r2 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:478 (set (reg/v:SI 142 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/dma-mapping.c:478 (set (reg/v/f:SI 143 [ op ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 op+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 op+0 S4 A32])
        (nil)))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 87 2 arch/arm/mm/dma-mapping.c:485 (set (reg/v:SI 137 [ left ])
        (reg/v:SI 141 [ size ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; rd  out 	(16)
16, 28, 40, 49, 50, 59, 60, 69, 156, 157, 973, 977, 980, 981, 982, 983


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 14) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 134 144 145 146 147 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  gen 	 24 [cc] 134 144 145 146 147 148 149 150
;; live  kill	
;; rd  in  	(46)
14, 16, 28, 40, 49, 50, 59, 60, 69, 144, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(9)
155, 967, 984, 985, 986, 987, 988, 989, 990
;; rd  kill	(22)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 967, 984, 985, 986, 987, 988, 989, 990

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  14 [100.0%]  (fallthru)
(code_label 87 10 11 3 66 "" [0 uses])

(note 11 87 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 include/linux/mm.h:692 (set (reg:SI 145 [ <variable>.flags ])
        (mem/s/j:SI (reg/v/f:SI 139 [ page ]) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 include/linux/mm.h:692 (set (reg:SI 144)
        (lshiftrt:SI (reg:SI 145 [ <variable>.flags ])
            (const_int 30 [0x1e]))) 117 {*arm_shiftsi3} (nil))

(insn 14 13 15 3 include/linux/mm.h:692 (set (reg:SI 147)
        (const_int 768 [0x300])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 include/linux/mm.h:692 (set (reg:SI 146)
        (mult:SI (reg:SI 147)
            (reg:SI 144))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg:SI 144)
            (const_int 768 [0x300]))
        (nil)))

(insn 16 15 17 3 include/linux/mm.h:692 (set (reg/f:SI 148)
        (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 include/linux/mm.h:692 (set (reg/f:SI 134 [ D.25051 ])
        (plus:SI (reg:SI 146)
            (reg/f:SI 148))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg:SI 146)
            (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>))
        (nil)))

(insn 18 17 19 3 include/linux/mmzone.h:741 (set (reg/f:SI 150 [ <variable>.zone_pgdat ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ D.25051 ])
                (const_int 748 [0x2ec])) [0 <variable>.zone_pgdat+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 include/linux/mmzone.h:741 (set (reg:SI 149)
        (minus:SI (reg/f:SI 134 [ D.25051 ])
            (reg/f:SI 150 [ <variable>.zone_pgdat ]))) 28 {*arm_subsi3_insn} (nil))

(insn 20 19 21 3 include/linux/mmzone.h:741 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149)
            (const_int 768 [0x300]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 22 3 include/linux/mmzone.h:741 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 94)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 3 -> ( 4 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; rd  out 	(46)
14, 16, 28, 40, 49, 50, 59, 60, 69, 155, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  4 [28.0%]  (fallthru)
;; Succ edge  15 [72.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 140
;; lr  def 	 24 [cc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  gen 	 24 [cc] 151
;; live  kill	
;; rd  in  	(46)
14, 16, 28, 40, 49, 50, 59, 60, 69, 155, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(2)
154, 991
;; rd  kill	(15)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 991

;; Pred edge  3 [28.0%]  (fallthru)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 arch/arm/mm/dma-mapping.c:491 (set (reg:SI 151)
        (plus:SI (reg/v:SI 137 [ left ])
            (reg/v:SI 140 [ offset ]))) 4 {*arm_addsi3} (nil))

(insn 24 23 25 4 arch/arm/mm/dma-mapping.c:491 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 4096 [0x1000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 26 4 arch/arm/mm/dma-mapping.c:491 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; rd  out 	(46)
14, 16, 28, 40, 49, 50, 59, 60, 69, 154, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  gen 	 136
;; live  kill	
;; rd  in  	(46)
14, 16, 28, 40, 49, 50, 59, 60, 69, 154, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(1)
971
;; rd  kill	(3)
969, 970, 971

;; Pred edge  4 [50.0%]  (fallthru)
(note 26 25 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 30 5 arch/arm/mm/dma-mapping.c:487 (set (reg/v:SI 136 [ len ])
        (reg/v:SI 137 [ left ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; rd  out 	(44)
14, 16, 28, 40, 49, 50, 59, 60, 69, 154, 156, 157, 966, 967, 968, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 24 [cc] 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  gen 	 24 [cc] 152
;; live  kill	
;; rd  in  	(46)
14, 16, 28, 40, 49, 50, 59, 60, 69, 154, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(2)
153, 992
;; rd  kill	(15)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 992

;; Pred edge  4 [50.0%] 
(code_label 30 27 31 6 60 "" [1 uses])

(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 arch/arm/mm/dma-mapping.c:492 (set (reg:SI 152)
        (const_int 4095 [0xfff])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 arch/arm/mm/dma-mapping.c:492 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ offset ])
            (reg:SI 152))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 140 [ offset ])
            (const_int 4095 [0xfff]))
        (nil)))

(jump_insn 34 33 35 6 arch/arm/mm/dma-mapping.c:492 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; rd  out 	(46)
14, 16, 28, 40, 49, 50, 59, 60, 69, 153, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  7 [50.0%]  (fallthru)
;; Succ edge  8 [50.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139 140
;; lr  def 	 139 140 153 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  gen 	 139 140 153 154 155
;; live  kill	
;; rd  in  	(46)
14, 16, 28, 40, 49, 50, 59, 60, 69, 153, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(5)
976, 979, 993, 994, 995
;; rd  kill	(9)
975, 976, 977, 978, 979, 980, 993, 994, 995

;; Pred edge  6 [50.0%]  (fallthru)
(note 35 34 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 37 7 arch/arm/mm/dma-mapping.c:493 (set (reg:SI 153)
        (lshiftrt:SI (reg/v:SI 140 [ offset ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 37 36 38 7 arch/arm/mm/dma-mapping.c:493 (set (reg:SI 154)
        (ashift:SI (reg:SI 153)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 38 37 39 7 arch/arm/mm/dma-mapping.c:493 (set (reg/v/f:SI 139 [ page ])
        (plus:SI (reg/v/f:SI 139 [ page ])
            (reg:SI 154))) 4 {*arm_addsi3} (nil))

(insn 39 38 40 7 arch/arm/mm/dma-mapping.c:494 (set (reg:SI 155)
        (ashift:SI (reg/v:SI 140 [ offset ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 40 39 41 7 arch/arm/mm/dma-mapping.c:494 (set (reg/v:SI 140 [ offset ])
        (lshiftrt:SI (reg:SI 155)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/v:SI 140 [ offset ])
            (const_int 4095 [0xfff]))
        (nil)))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; rd  out 	(44)
14, 16, 28, 40, 49, 50, 59, 60, 69, 153, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 976, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  gen 	 136
;; live  kill	
;; rd  in  	(48)
14, 16, 28, 40, 49, 50, 59, 60, 69, 153, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(1)
970
;; rd  kill	(3)
969, 970, 971

;; Pred edge  6 [50.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 41 40 42 8 62 "" [1 uses])

(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 8 arch/arm/mm/dma-mapping.c:496 (set (reg/v:SI 136 [ len ])
        (minus:SI (const_int 4096 [0x1000])
            (reg/v:SI 140 [ offset ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; rd  out 	(46)
14, 16, 28, 40, 49, 50, 59, 60, 69, 153, 156, 157, 966, 967, 968, 970, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 5 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; live  gen 	 0 [r0] 24 [cc] 135
;; live  kill	 14 [lr]
;; rd  in  	(48)
14, 16, 28, 40, 49, 50, 59, 60, 69, 153, 154, 156, 157, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(3)
14, 151, 968
;; rd  kill	(41)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 61, 62, 63, 64, 65, 66, 67, 68, 69, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 968

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 44 43 45 9 61 "" [0 uses])

(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 9 arch/arm/mm/dma-mapping.c:498 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 48 9 arch/arm/mm/dma-mapping.c:498 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("kmap_high_get") [flags 0x41] <function_decl 0x11268f00 kmap_high_get>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 48 47 49 9 arch/arm/mm/dma-mapping.c:498 (set (reg/v/f:SI 135 [ vaddr ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 9 arch/arm/mm/dma-mapping.c:499 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ vaddr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 9 arch/arm/mm/dma-mapping.c:499 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 61)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 137 139 140 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 142 143
;; rd  out 	(45)
14, 28, 40, 49, 50, 59, 60, 151, 156, 157, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  10 [69.8%]  (fallthru)
;; Succ edge  11 [30.2%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 139 140 142 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 139 140 142 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 156
;; live  kill	 14 [lr]
;; rd  in  	(45)
14, 28, 40, 49, 50, 59, 60, 151, 156, 157, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(1)
996
;; rd  kill	(10)
61, 62, 63, 64, 65, 66, 67, 68, 69, 996

;; Pred edge  9 [69.8%]  (fallthru)
(note 51 50 52 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 10 arch/arm/mm/dma-mapping.c:501 (set (reg:SI 156)
        (plus:SI (reg/v/f:SI 135 [ vaddr ])
            (reg/v:SI 140 [ offset ]))) 4 {*arm_addsi3} (nil))

(insn 53 52 54 10 arch/arm/mm/dma-mapping.c:501 (set (reg:SI 0 r0)
        (reg:SI 156)) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 10 arch/arm/mm/dma-mapping.c:501 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 55 54 56 10 arch/arm/mm/dma-mapping.c:501 (set (reg:SI 2 r2)
        (reg/v:SI 142 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 56 55 57 10 arch/arm/mm/dma-mapping.c:501 (parallel [
            (call (mem:SI (reg/v/f:SI 143 [ op ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 57 56 58 10 arch/arm/mm/dma-mapping.c:502 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 61 10 arch/arm/mm/dma-mapping.c:502 (parallel [
            (call (mem:SI (symbol_ref:SI ("kunmap_high") [flags 0x41] <function_decl 0x11268e80 kunmap_high>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 10 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 139 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 142 143
;; rd  out 	(45)
14, 28, 40, 49, 50, 59, 60, 151, 156, 157, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 157 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; live  gen 	 24 [cc] 157 158 159
;; live  kill	
;; rd  in  	(45)
14, 28, 40, 49, 50, 59, 60, 151, 156, 157, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(4)
148, 997, 998, 999
;; rd  kill	(17)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 997, 998, 999

;; Pred edge  9 [30.2%] 
(code_label 61 58 62 11 63 "" [1 uses])

(note 62 61 63 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 157)
        (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x11249780 cacheid>)) 167 {*arm_movsi_insn} (nil))

(insn 64 63 65 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 159 [ cacheid ])
        (mem/c/i:SI (reg/f:SI 157) [0 cacheid+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 158)
        (and:SI (reg:SI 159 [ cacheid ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (nil))

(insn 66 65 67 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 67 66 68 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; rd  out 	(45)
14, 28, 40, 49, 50, 59, 60, 148, 156, 157, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  13 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 140 142 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 140 142 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 133 160
;; live  kill	 14 [lr]
;; rd  in  	(45)
14, 28, 40, 49, 50, 59, 60, 148, 156, 157, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(2)
966, 1000
;; rd  kill	(11)
61, 62, 63, 64, 65, 66, 67, 68, 69, 966, 1000

;; Pred edge  11 [29.0%]  (fallthru)
(note 68 67 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 70 12 arch/arm/mm/dma-mapping.c:505 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 70 69 71 12 arch/arm/mm/dma-mapping.c:505 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__kmap_atomic") [flags 0x41] <function_decl 0x11273080 __kmap_atomic>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 71 70 72 12 arch/arm/mm/dma-mapping.c:505 (set (reg/v/f:SI 133 [ vaddr.608 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 72 71 73 12 arch/arm/mm/dma-mapping.c:506 (set (reg:SI 160)
        (plus:SI (reg/v/f:SI 133 [ vaddr.608 ])
            (reg/v:SI 140 [ offset ]))) 4 {*arm_addsi3} (nil))

(insn 73 72 74 12 arch/arm/mm/dma-mapping.c:506 (set (reg:SI 0 r0)
        (reg:SI 160)) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 12 arch/arm/mm/dma-mapping.c:506 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 75 74 76 12 arch/arm/mm/dma-mapping.c:506 (set (reg:SI 2 r2)
        (reg/v:SI 142 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 76 75 77 12 arch/arm/mm/dma-mapping.c:506 (parallel [
            (call (mem:SI (reg/v/f:SI 143 [ op ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 77 76 78 12 arch/arm/mm/dma-mapping.c:507 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 133 [ vaddr.608 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 78 77 79 12 arch/arm/mm/dma-mapping.c:507 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__kunmap_atomic") [flags 0x41] <function_decl 0x11273100 __kunmap_atomic>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 139 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 142 143
;; rd  out 	(45)
14, 28, 40, 49, 50, 59, 60, 148, 156, 157, 966, 967, 968, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 11 15 10 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 139 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137
;; lr  def 	 24 [cc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 142 143
;; live  gen 	 24 [cc] 137
;; live  kill	
;; rd  in  	(49)
14, 16, 28, 40, 49, 50, 59, 60, 148, 151, 155, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(2)
144, 972
;; rd  kill	(16)
142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 972, 973

;; Pred edge  11 [71.0%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%]  (fallthru)
(code_label 79 78 80 13 64 "" [1 uses])

(note 80 79 81 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 13 arch/arm/mm/dma-mapping.c:515 (set (reg/v:SI 137 [ left ])
        (minus:SI (reg/v:SI 137 [ left ])
            (reg/v:SI 136 [ len ]))) 28 {*arm_subsi3_insn} (nil))

(insn 82 81 83 13 arch/arm/mm/dma-mapping.c:516 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ left ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 83 82 84 13 arch/arm/mm/dma-mapping.c:516 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1400 [0x578])
        (nil)))
;; End of basic block 13 -> ( 14 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 139 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 143
;; rd  out 	(46)
14, 16, 28, 40, 49, 50, 59, 60, 144, 156, 157, 966, 967, 968, 969, 970, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  14 [86.0%]  (fallthru)
;; Succ edge  16 [14.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(11){ }u127(13){ }u128(25){ }u129(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 139 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 142 143
;; live  gen 	 139 140
;; live  kill	
;; rd  in  	(46)
14, 16, 28, 40, 49, 50, 59, 60, 144, 156, 157, 966, 967, 968, 969, 970, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(2)
975, 978
;; rd  kill	(6)
975, 976, 977, 978, 979, 980

;; Pred edge  13 [86.0%]  (fallthru)
(note 84 83 85 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 14 arch/arm/mm/dma-mapping.c:514 (set (reg/v/f:SI 139 [ page ])
        (plus:SI (reg/v/f:SI 139 [ page ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))

(insn 86 85 94 14 arch/arm/mm/dma-mapping.c:513 (set (reg/v:SI 140 [ offset ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; rd  out 	(42)
14, 16, 28, 40, 49, 50, 59, 60, 144, 156, 157, 966, 967, 968, 969, 970, 971, 972, 974, 975, 978, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 138 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 139 140 142 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 136 138 161
;; live  kill	 14 [lr]
;; rd  in  	(46)
14, 16, 28, 40, 49, 50, 59, 60, 69, 155, 156, 157, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(3)
969, 974, 1001
;; rd  kill	(14)
61, 62, 63, 64, 65, 66, 67, 68, 69, 969, 970, 971, 974, 1001

;; Pred edge  3 [72.0%] 
(code_label 94 86 95 15 59 "" [1 uses])

(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 15 arch/arm/mm/dma-mapping.c:510 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 15 arch/arm/mm/dma-mapping.c:510 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("page_address") [flags 0x41] <function_decl 0x10f7b880 page_address>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 98 97 99 15 arch/arm/mm/dma-mapping.c:510 (set (reg/f:SI 138 [ D.24793 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 99 98 100 15 arch/arm/mm/dma-mapping.c:511 (set (reg:SI 161)
        (plus:SI (reg/f:SI 138 [ D.24793 ])
            (reg/v:SI 140 [ offset ]))) 4 {*arm_addsi3} (nil))

(insn 100 99 101 15 arch/arm/mm/dma-mapping.c:511 (set (reg:SI 0 r0)
        (reg:SI 161)) 167 {*arm_movsi_insn} (nil))

(insn 101 100 102 15 arch/arm/mm/dma-mapping.c:511 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ left ])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 15 arch/arm/mm/dma-mapping.c:511 (set (reg:SI 2 r2)
        (reg/v:SI 142 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 103 102 104 15 arch/arm/mm/dma-mapping.c:511 (parallel [
            (call (mem:SI (reg/v/f:SI 143 [ op ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 104 103 110 15 arch/arm/mm/dma-mapping.c:487 (set (reg/v:SI 136 [ len ])
        (reg/v:SI 137 [ left ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 139 142 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 139 142 143
;; rd  out 	(43)
14, 16, 28, 40, 49, 50, 59, 60, 155, 156, 157, 966, 967, 968, 969, 972, 973, 974, 975, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u150(11){ }u151(13){ }u152(25){ }u153(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(46)
14, 16, 28, 40, 49, 50, 59, 60, 144, 156, 157, 966, 967, 968, 969, 970, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  13 [14.0%] 
(code_label 110 104 113 16 67 "" [1 uses])

(note 113 110 0 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 16 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(46)
14, 16, 28, 40, 49, 50, 59, 60, 144, 156, 157, 966, 967, 968, 969, 970, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ___dma_page_dev_to_cpu (___dma_page_dev_to_cpu)[0:1288]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 8 }
;; 6 succs { 7 8 }
;; 7 succs { 1 }
;; 8 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 12 count 16 (  1.8)

In insn 43, replacing
 (subreg:SI (reg:QI 149) 0)
 with (reg:SI 150)
Changed insn 43
deferring rescan insn with uid = 43.

In insn 43, replacing
 (subreg:SI (reg:QI 151) 0)
 with (reg:SI 152)
Changed insn 43
deferring rescan insn with uid = 43.

In insn 50, replacing
 (compare:CC (reg/v:SI 138 [ size ])
        (reg:SI 156))
 with (compare:CC (reg/v:SI 138 [ size ])
        (const_int 4095 [0xfff]))
Changes to insn 50 not recognized
 Setting REG_EQUAL note


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 42.
deferring deletion of insn with uid = 39.
Deleted 2 trivially dead insns

Number of successful forward propagations: 2



___dma_page_dev_to_cpu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={7d,4u} r2={5d,2u} r3={5d,2u} r11={1d,8u} r12={4d} r13={1d,12u} r14={3d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={9d,6u} r25={1d,8u} r26={1d,7u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,2u} r135={1d,1u} r136={1d,3u} r137={1d,3u} r138={1d,3u} r139={1d,3u} r140={1d,1u} r141={1d,1u} r142={1d,1u,1d} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d} r150={1d,1u} r151={1d} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} 
;;    total ref usage 483{397d,85u,1e} in 43{40 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373
0[0,7] 1[7,7] 2[14,5] 3[19,5] 11[24,1] 12[25,4] 13[29,1] 14[30,3] 15[33,3] 16[36,3] 17[39,3] 18[42,3] 19[45,3] 20[48,3] 21[51,3] 22[54,3] 23[57,3] 24[60,9] 25[69,1] 26[70,1] 27[71,3] 28[74,3] 29[77,3] 30[80,3] 31[83,3] 32[86,3] 33[89,3] 34[92,3] 35[95,3] 36[98,3] 37[101,3] 38[104,3] 39[107,3] 40[110,3] 41[113,3] 42[116,3] 43[119,3] 44[122,3] 45[125,3] 46[128,3] 47[131,3] 48[134,3] 49[137,3] 50[140,3] 51[143,3] 52[146,3] 53[149,3] 54[152,3] 55[155,3] 56[158,3] 57[161,3] 58[164,3] 59[167,3] 60[170,3] 61[173,3] 62[176,3] 63[179,3] 64[182,3] 65[185,3] 66[188,3] 67[191,3] 68[194,3] 69[197,3] 70[200,3] 71[203,3] 72[206,3] 73[209,3] 74[212,3] 75[215,3] 76[218,3] 77[221,3] 78[224,3] 79[227,3] 80[230,3] 81[233,3] 82[236,3] 83[239,3] 84[242,3] 85[245,3] 86[248,3] 87[251,3] 88[254,3] 89[257,3] 90[260,3] 91[263,3] 92[266,3] 93[269,3] 94[272,3] 95[275,3] 96[278,3] 97[281,3] 98[284,3] 99[287,3] 100[290,3] 101[293,3] 102[296,3] 103[299,3] 104[302,3] 105[305,3] 106[308,3] 107[311,3] 108[314,3] 109[317,3] 110[320,3] 111[323,3] 112[326,3] 113[329,3] 114[332,3] 115[335,3] 116[338,3] 117[341,3] 118[344,3] 119[347,3] 120[350,3] 121[353,3] 122[356,3] 123[359,3] 124[362,3] 125[365,3] 126[368,3] 127[371,3] 133[374,1] 134[375,1] 135[376,1] 136[377,1] 137[378,1] 138[379,1] 139[380,1] 140[381,1] 141[382,1] 142[383,1] 144[384,1] 145[385,1] 146[386,1] 147[387,1] 148[388,1] 149[389,1] 150[390,1] 151[391,1] 152[392,1] 153[393,1] 154[394,1] 155[395,1] 156[396,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137 138 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137 138 139 140
;; live  kill	
;; rd  in  	(10)
6, 13, 18, 23, 24, 28, 29, 32, 69, 70
;; rd  gen 	(7)
68, 376, 377, 378, 379, 380, 381
;; rd  kill	(15)
60, 61, 62, 63, 64, 65, 66, 67, 68, 376, 377, 378, 379, 380, 381

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/dma-mapping.c:538 (set (reg/v/f:SI 136 [ page ])
        (reg:SI 0 r0 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:538 (set (reg/v:SI 137 [ off ])
        (reg:SI 1 r1 [ off ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:538 (set (reg/v:SI 138 [ size ])
        (reg:SI 2 r2 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:538 (set (reg/v:SI 139 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:539 (set (reg/f:SI 140)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/dma-mapping.c:539 (set (reg/f:SI 135 [ mem_map.393 ])
        (mem/f/c/i:SI (reg/f:SI 140) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:543 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ dir ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 arch/arm/mm/dma-mapping.c:543 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139
;; rd  out 	(17)
6, 13, 18, 23, 24, 28, 29, 32, 68, 69, 70, 376, 377, 378, 379, 380, 381


;; Succ edge  3 [72.0%]  (fallthru)
;; Succ edge  5 [28.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137 138 139
;; live  gen 	 24 [cc] 133 141
;; live  kill	
;; rd  in  	(17)
6, 13, 18, 23, 24, 28, 29, 32, 68, 69, 70, 376, 377, 378, 379, 380, 381
;; rd  gen 	(3)
67, 374, 382
;; rd  kill	(11)
60, 61, 62, 63, 64, 65, 66, 67, 68, 374, 382

;; Pred edge  2 [72.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 141)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 133 [ D.25071 ])
        (mem/s/f/j/c:SI (reg/f:SI 141) [0 outer_cache.inv_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.25071 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 139
;; rd  out 	(19)
6, 13, 18, 23, 24, 28, 29, 32, 67, 69, 70, 374, 376, 377, 378, 379, 380, 381, 382


;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  5 [30.2%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 142 144 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 136 137 138 139
;; live  gen 	 0 [r0] 1 [r1] 134 142 144 145 146
;; live  kill	 14 [lr]
;; rd  in  	(19)
6, 13, 18, 23, 24, 28, 29, 32, 67, 69, 70, 374, 376, 377, 378, 379, 380, 381, 382
;; rd  gen 	(5)
375, 383, 384, 385, 386
;; rd  kill	(8)
30, 31, 32, 375, 383, 384, 385, 386

;; Pred edge  3 [69.8%]  (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 arch/arm/mm/dma-mapping.c:539 (set (reg:SI 142)
        (minus:SI (reg/v/f:SI 136 [ page ])
            (reg/f:SI 135 [ mem_map.393 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 20 19 21 4 arch/arm/mm/dma-mapping.c:539 (set (reg:SI 144)
        (ashiftrt:SI (reg:SI 142)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 142)
            (const_int 32 [0x20]))
        (nil)))

(insn 21 20 22 4 arch/arm/mm/dma-mapping.c:539 (set (reg:SI 145)
        (ashift:SI (reg:SI 144)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 22 21 23 4 arch/arm/mm/dma-mapping.c:539 (set (reg/v:SI 134 [ paddr ])
        (plus:SI (reg:SI 145)
            (reg/v:SI 137 [ off ]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 146)
        (plus:SI (reg/v:SI 134 [ paddr ])
            (reg/v:SI 138 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 24 23 25 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 0 r0)
        (reg/v:SI 134 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 1 r1)
        (reg:SI 146)) 167 {*arm_movsi_insn} (nil))

(call_insn 26 25 27 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (parallel [
            (call (mem:SI (reg/f:SI 133 [ D.25071 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; rd  out 	(23)
6, 13, 18, 23, 24, 28, 29, 67, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148 149 150 151 152 153 154 155
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 147 148 149 150 151 152 153 154 155
;; live  kill	 14 [lr]
;; rd  in  	(25)
6, 13, 18, 23, 24, 28, 29, 32, 67, 68, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386
;; rd  gen 	(10)
62, 387, 388, 389, 390, 391, 392, 393, 394, 395
;; rd  kill	(21)
30, 31, 32, 60, 61, 62, 63, 64, 65, 66, 67, 68, 387, 388, 389, 390, 391, 392, 393, 394, 395

;; Pred edge  2 [28.0%] 
;; Pred edge  3 [30.2%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 27 26 28 5 71 "" [2 uses])

(note 28 27 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 5 arch/arm/mm/dma-mapping.c:546 (set (reg/f:SI 147)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x112494e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 arch/arm/mm/dma-mapping.c:546 (set (reg/f:SI 148 [ cpu_cache.dma_unmap_area ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 147)
                (const_int 32 [0x20])) [0 cpu_cache.dma_unmap_area+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 5 arch/arm/mm/dma-mapping.c:546 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 148 [ cpu_cache.dma_unmap_area ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 5 arch/arm/mm/dma-mapping.c:546 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/dma-mapping.c:546 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ off ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 arch/arm/mm/dma-mapping.c:546 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 arch/arm/mm/dma-mapping.c:546 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 36 35 37 5 arch/arm/mm/dma-mapping.c:546 (parallel [
            (call (mem:SI (symbol_ref:SI ("dma_cache_maint_page") [flags 0x3] <function_decl 0x1145ee00 dma_cache_maint_page>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 37 36 38 5 arch/arm/mm/dma-mapping.c:551 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ dir ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(insn 38 37 40 5 arch/arm/mm/dma-mapping.c:551 (set (reg:SI 150)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 40 38 41 5 arch/arm/mm/dma-mapping.c:551 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ off ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 41 40 43 5 arch/arm/mm/dma-mapping.c:551 (set (reg:SI 152)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 43 41 44 5 arch/arm/mm/dma-mapping.c:551 (set (reg:SI 153)
        (and:SI (reg:SI 150)
            (reg:SI 152))) 67 {*arm_andsi3_insn} (nil))

(insn 44 43 45 5 arch/arm/mm/dma-mapping.c:551 (set (reg:QI 154)
        (subreg:QI (reg:SI 153) 0)) 178 {*arm_movqi_insn} (nil))

(insn 45 44 46 5 arch/arm/mm/dma-mapping.c:551 (set (reg:SI 155)
        (zero_extend:SI (reg:QI 154))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 46 45 47 5 arch/arm/mm/dma-mapping.c:551 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 47 46 48 5 arch/arm/mm/dma-mapping.c:551 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 5 -> ( 6 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; rd  out 	(32)
6, 13, 18, 23, 24, 28, 29, 62, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395


;; Succ edge  6 [61.0%]  (fallthru)
;; Succ edge  8 [39.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138
;; live  gen 	 24 [cc] 156
;; live  kill	
;; rd  in  	(32)
6, 13, 18, 23, 24, 28, 29, 62, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395
;; rd  gen 	(2)
61, 396
;; rd  kill	(10)
60, 61, 62, 63, 64, 65, 66, 67, 68, 396

;; Pred edge  5 [61.0%]  (fallthru)
(note 48 47 49 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 6 arch/arm/mm/dma-mapping.c:551 discrim 1 (set (reg:SI 156)
        (const_int 4095 [0xfff])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 51 6 arch/arm/mm/dma-mapping.c:551 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ size ])
            (reg:SI 156))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 138 [ size ])
            (const_int 4095 [0xfff]))
        (nil)))

(jump_insn 51 50 52 6 arch/arm/mm/dma-mapping.c:551 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(33)
6, 13, 18, 23, 24, 28, 29, 61, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	
;; rd  in  	(33)
6, 13, 18, 23, 24, 28, 29, 61, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [39.0%]  (fallthru)
(note 52 51 53 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 7 arch/arm/mm/dma-mapping.c:552 (set (reg:SI 0 r0)
        (const_int 9 [0x9])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 7 arch/arm/mm/dma-mapping.c:552 (set (reg:SI 1 r1)
        (reg/v/f:SI 136 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 55 54 62 7 arch/arm/mm/dma-mapping.c:552 (parallel [
            (call (mem:SI (symbol_ref:SI ("_set_bit") [flags 0x41] <function_decl 0x109c0500 _set_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(33)
6, 13, 18, 23, 24, 28, 29, 61, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 6 5) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(34)
6, 13, 18, 23, 24, 28, 29, 61, 62, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [61.0%] 
;; Pred edge  5 [39.0%] 
(code_label 62 55 65 8 73 "" [2 uses])

(note 65 62 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 8 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(34)
6, 13, 18, 23, 24, 28, 29, 61, 62, 69, 70, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 39.
deleting insn with uid = 42.
rescanning insn with uid = 43.
deleting insn with uid = 43.
ending the processing of deferred insns

;; Function dma_sync_sg_for_cpu (dma_sync_sg_for_cpu)[0:1291]

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 3
;; 2 succs { 8 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 10 count 21 (  2.1)

In insn 16, replacing
 (compare:CC (reg:SI 141 [ <variable>.sg_magic ])
        (reg:SI 140))
 with (compare:CC (reg:SI 141 [ <variable>.sg_magic ])
        (const_int -2023406815 [0xffffffff87654321]))
Changes to insn 16 not recognized
 Setting REG_EQUAL note

In insn 20, replacing
 (reg/f:SI 142)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
Changes to insn 20 not profitable

In insn 32, replacing
 (reg/f:SI 144)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
Changes to insn 32 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



dma_sync_sg_for_cpu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,5u} r1={8d,4u} r2={6d,2u} r3={6d,2u} r11={1d,9u} r12={5d} r13={1d,13u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={7d,3u} r25={1d,9u} r26={1d,8u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={2d,2u} r135={2d,5u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 578{504d,74u,0e} in 33{29 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489
0[0,9] 1[9,8] 2[17,6] 3[23,6] 11[29,1] 12[30,5] 13[35,1] 14[36,5] 15[41,4] 16[45,4] 17[49,4] 18[53,4] 19[57,4] 20[61,4] 21[65,4] 22[69,4] 23[73,4] 24[77,7] 25[84,1] 26[85,1] 27[86,4] 28[90,4] 29[94,4] 30[98,4] 31[102,4] 32[106,4] 33[110,4] 34[114,4] 35[118,4] 36[122,4] 37[126,4] 38[130,4] 39[134,4] 40[138,4] 41[142,4] 42[146,4] 43[150,4] 44[154,4] 45[158,4] 46[162,4] 47[166,4] 48[170,4] 49[174,4] 50[178,4] 51[182,4] 52[186,4] 53[190,4] 54[194,4] 55[198,4] 56[202,4] 57[206,4] 58[210,4] 59[214,4] 60[218,4] 61[222,4] 62[226,4] 63[230,4] 64[234,4] 65[238,4] 66[242,4] 67[246,4] 68[250,4] 69[254,4] 70[258,4] 71[262,4] 72[266,4] 73[270,4] 74[274,4] 75[278,4] 76[282,4] 77[286,4] 78[290,4] 79[294,4] 80[298,4] 81[302,4] 82[306,4] 83[310,4] 84[314,4] 85[318,4] 86[322,4] 87[326,4] 88[330,4] 89[334,4] 90[338,4] 91[342,4] 92[346,4] 93[350,4] 94[354,4] 95[358,4] 96[362,4] 97[366,4] 98[370,4] 99[374,4] 100[378,4] 101[382,4] 102[386,4] 103[390,4] 104[394,4] 105[398,4] 106[402,4] 107[406,4] 108[410,4] 109[414,4] 110[418,4] 111[422,4] 112[426,4] 113[430,4] 114[434,4] 115[438,4] 116[442,4] 117[446,4] 118[450,4] 119[454,4] 120[458,4] 121[462,4] 122[466,4] 123[470,4] 124[474,4] 125[478,4] 126[482,4] 127[486,4] 133[490,1] 134[491,2] 135[493,2] 137[495,1] 138[496,1] 139[497,1] 140[498,1] 141[499,1] 142[500,1] 143[501,1] 144[502,1] 145[503,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 137 138 139
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 137 138 139
;; live  kill	
;; rd  in  	(10)
8, 16, 22, 28, 29, 34, 35, 40, 84, 85
;; rd  gen 	(5)
492, 494, 495, 496, 497
;; rd  kill	(7)
491, 492, 493, 494, 495, 496, 497

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 arch/arm/mm/dma-mapping.c:628 (set (reg/v/f:SI 137 [ sg ])
        (reg:SI 1 r1 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:628 (set (reg/v:SI 138 [ nents ])
        (reg:SI 2 r2 [ nents ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:628 (set (reg/v:SI 139 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:632 (set (reg/v/f:SI 135 [ s ])
        (reg/v/f:SI 137 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 50 2 arch/arm/mm/dma-mapping.c:632 (set (reg/v:SI 134 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; rd  out 	(15)
8, 16, 22, 28, 29, 34, 35, 40, 84, 85, 492, 494, 495, 496, 497


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; live  gen 	 24 [cc] 140 141
;; live  kill	
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 77, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(3)
83, 498, 499
;; rd  kill	(9)
77, 78, 79, 80, 81, 82, 83, 498, 499

;; Pred edge  8 [97.0%] 
(code_label 50 10 13 3 80 "" [1 uses])

(note 13 50 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 include/linux/scatterlist.h:96 (set (reg:SI 140)
        (const_int -2023406815 [0xffffffff87654321])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 include/linux/scatterlist.h:96 (set (reg:SI 141 [ <variable>.sg_magic ])
        (mem/s/j:SI (reg/v/f:SI 135 [ s ]) [0 <variable>.sg_magic+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 include/linux/scatterlist.h:96 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ <variable>.sg_magic ])
            (reg:SI 140))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 141 [ <variable>.sg_magic ])
            (const_int -2023406815 [0xffffffff87654321]))
        (nil)))

(jump_insn 17 16 18 3 include/linux/scatterlist.h:96 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 83, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 142
;; live  kill	 14 [lr]
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 83, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(1)
500
;; rd  kill	(6)
36, 37, 38, 39, 40, 500

;; Pred edge  3 [0.0%]  (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 include/linux/scatterlist.h:96 discrim 1 (set (reg/f:SI 142)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
        (nil)))

(insn 21 20 22 4 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 1 r1)
        (const_int 96 [0x60])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 21 24 4 include/linux/scatterlist.h:96 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 83, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503



;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 133 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; live  gen 	 24 [cc] 133 143
;; live  kill	
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 83, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(3)
81, 490, 501
;; rd  kill	(9)
77, 78, 79, 80, 81, 82, 83, 490, 501

;; Pred edge  3 [100.0%] 
(code_label 24 22 25 5 78 "" [1 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 include/linux/scatterlist.h:97 (set (reg:SI 133 [ D.25085 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 4 [0x4])) [0 <variable>.page_link+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 include/linux/scatterlist.h:97 (set (reg:SI 143)
        (and:SI (reg:SI 133 [ D.25085 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 28 27 29 5 include/linux/scatterlist.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 5 include/linux/scatterlist.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138 139
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 81, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 144
;; live  kill	 14 [lr]
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 81, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(1)
502
;; rd  kill	(6)
36, 37, 38, 39, 40, 502

;; Pred edge  5 [0.0%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 include/linux/scatterlist.h:97 discrim 1 (set (reg/f:SI 144)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
        (nil)))

(insn 33 32 34 6 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 1 r1)
        (const_int 97 [0x61])) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 36 6 include/linux/scatterlist.h:97 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 81, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503



;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 135 145
;; live  kill	 14 [lr]
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 81, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(4)
0, 491, 493, 503
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 40, 491, 492, 493, 494, 503

;; Pred edge  5 [100.0%] 
(code_label 36 34 37 7 79 "" [1 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 145)
        (and:SI (reg:SI 133 [ D.25085 ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 39 38 40 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 0 r0)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 8 [0x8])) [0 <variable>.offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 12 [0xc])) [0 <variable>.length+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (parallel [
            (call (mem:SI (symbol_ref:SI ("___dma_page_dev_to_cpu") [flags 0x3] <function_decl 0x11060f80 ___dma_page_dev_to_cpu>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 44 43 45 7 arch/arm/mm/dma-mapping.c:632 (set (reg/v:SI 134 [ i ])
        (plus:SI (reg/v:SI 134 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 7 arch/arm/mm/dma-mapping.c:632 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ s ])) 167 {*arm_movsi_insn} (nil))

(call_insn 46 45 47 7 arch/arm/mm/dma-mapping.c:632 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sg_next") [flags 0x41] <function_decl 0x1103bb00 sg_next>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 47 46 48 7 arch/arm/mm/dma-mapping.c:632 (set (reg/v/f:SI 135 [ s ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; rd  out 	(20)
0, 16, 22, 28, 29, 34, 35, 81, 84, 85, 490, 491, 493, 495, 496, 497, 498, 499, 501, 503


;; Succ edge  8 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 81, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(1)
77
;; rd  kill	(7)
77, 78, 79, 80, 81, 82, 83

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru,dfs_back)
(code_label 48 47 49 8 77 "" [0 uses])

(note 49 48 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 49 52 8 arch/arm/mm/dma-mapping.c:632 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ i ])
            (reg/v:SI 138 [ nents ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 60 8 arch/arm/mm/dma-mapping.c:632 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
        (nil)))
;; End of basic block 8 -> ( 3 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 77, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503


;; Succ edge  3 [97.0%] 
;; Succ edge  9 [3.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 77, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  8 [3.0%]  (fallthru)
(note 60 52 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 9 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 77, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dma_unmap_sg (dma_unmap_sg)[0:1290]

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 11 (  1.8)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



dma_unmap_sg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={4d,2u} r2={4d,2u} r3={4d,2u} r11={1d,5u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,5u} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={2d,2u} r134={2d,3u} r135={1d,2u,1d} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} 
;;    total ref usage 315{265d,49u,1e} in 24{22 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249
0[0,5] 1[5,4] 2[9,4] 3[13,4] 11[17,1] 12[18,3] 13[21,1] 14[22,3] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,3] 25[46,1] 26[47,1] 27[48,2] 28[50,2] 29[52,2] 30[54,2] 31[56,2] 32[58,2] 33[60,2] 34[62,2] 35[64,2] 36[66,2] 37[68,2] 38[70,2] 39[72,2] 40[74,2] 41[76,2] 42[78,2] 43[80,2] 44[82,2] 45[84,2] 46[86,2] 47[88,2] 48[90,2] 49[92,2] 50[94,2] 51[96,2] 52[98,2] 53[100,2] 54[102,2] 55[104,2] 56[106,2] 57[108,2] 58[110,2] 59[112,2] 60[114,2] 61[116,2] 62[118,2] 63[120,2] 64[122,2] 65[124,2] 66[126,2] 67[128,2] 68[130,2] 69[132,2] 70[134,2] 71[136,2] 72[138,2] 73[140,2] 74[142,2] 75[144,2] 76[146,2] 77[148,2] 78[150,2] 79[152,2] 80[154,2] 81[156,2] 82[158,2] 83[160,2] 84[162,2] 85[164,2] 86[166,2] 87[168,2] 88[170,2] 89[172,2] 90[174,2] 91[176,2] 92[178,2] 93[180,2] 94[182,2] 95[184,2] 96[186,2] 97[188,2] 98[190,2] 99[192,2] 100[194,2] 101[196,2] 102[198,2] 103[200,2] 104[202,2] 105[204,2] 106[206,2] 107[208,2] 108[210,2] 109[212,2] 110[214,2] 111[216,2] 112[218,2] 113[220,2] 114[222,2] 115[224,2] 116[226,2] 117[228,2] 118[230,2] 119[232,2] 120[234,2] 121[236,2] 122[238,2] 123[240,2] 124[242,2] 125[244,2] 126[246,2] 127[248,2] 133[250,2] 134[252,2] 135[254,1] 137[255,1] 138[256,1] 139[257,1] 140[258,1] 141[259,1] 142[260,1] 143[261,1] 144[262,1] 145[263,1] 146[264,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 137 138 139
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 137 138 139
;; live  kill	
;; rd  in  	(10)
4, 8, 12, 16, 17, 20, 21, 24, 46, 47
;; rd  gen 	(5)
251, 253, 255, 256, 257
;; rd  kill	(7)
250, 251, 252, 253, 255, 256, 257

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 arch/arm/mm/dma-mapping.c:608 (set (reg/v/f:SI 137 [ sg ])
        (reg:SI 1 r1 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:608 (set (reg/v:SI 138 [ nents ])
        (reg:SI 2 r2 [ nents ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:608 (set (reg/v:SI 139 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:614 (set (reg/v/f:SI 134 [ s ])
        (reg/v/f:SI 137 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 33 2 arch/arm/mm/dma-mapping.c:614 (set (reg/v:SI 133 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(15)
4, 8, 12, 16, 17, 20, 21, 24, 46, 47, 251, 253, 255, 256, 257


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 4) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 140 141 142 143 144 145 146
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 134 135 140 141 142 143 144 145 146
;; live  kill	 14 [lr]
;; rd  in  	(27)
0, 4, 8, 12, 16, 17, 20, 21, 24, 43, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264
;; rd  gen 	(11)
0, 250, 252, 254, 258, 259, 260, 261, 262, 263, 264
;; rd  kill	(20)
0, 1, 2, 3, 4, 22, 23, 24, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264

;; Pred edge  4 [91.0%] 
(code_label 33 10 13 3 87 "" [1 uses])

(note 13 33 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/mm/dma-mapping.c:615 (set (reg:SI 135 [ D.24893 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ s ])
                (const_int 16 [0x10])) [0 <variable>.dma_address+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg/f:SI 140)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 141)
        (lshiftrt:SI (reg:SI 135 [ D.24893 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 17 16 18 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 142)
        (ashift:SI (reg:SI 141)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 18 17 19 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg/f:SI 144 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 140) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 143)
        (plus:SI (reg/f:SI 144 [ mem_map ])
            (reg:SI 142))) 4 {*arm_addsi3} (nil))

(insn 20 19 21 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 146)
        (ashift:SI (reg:SI 135 [ D.24893 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 21 20 22 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 145)
        (lshiftrt:SI (reg:SI 146)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 135 [ D.24893 ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 22 21 23 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 0 r0)
        (reg:SI 143)) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 1 r1)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ s ])
                (const_int 12 [0xc])) [0 <variable>.length+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 26 25 27 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (parallel [
            (call (mem:SI (symbol_ref:SI ("___dma_page_dev_to_cpu") [flags 0x3] <function_decl 0x11060f80 ___dma_page_dev_to_cpu>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 27 26 28 3 arch/arm/mm/dma-mapping.c:614 discrim 2 (set (reg/v:SI 133 [ i ])
        (plus:SI (reg/v:SI 133 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 28 27 29 3 arch/arm/mm/dma-mapping.c:614 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 134 [ s ])) 167 {*arm_movsi_insn} (nil))

(call_insn 29 28 30 3 arch/arm/mm/dma-mapping.c:614 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sg_next") [flags 0x41] <function_decl 0x1103bb00 sg_next>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 29 31 3 arch/arm/mm/dma-mapping.c:614 discrim 2 (set (reg/v/f:SI 134 [ s ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(23)
0, 8, 12, 16, 17, 20, 21, 43, 46, 47, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264


;; Succ edge  4 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u35(11){ }u36(13){ }u37(25){ }u38(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(27)
0, 4, 8, 12, 16, 17, 20, 21, 24, 43, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264
;; rd  gen 	(1)
43
;; rd  kill	(3)
43, 44, 45

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%]  (fallthru,dfs_back)
(code_label 31 30 32 4 86 "" [0 uses])

(note 32 31 34 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 34 32 35 4 arch/arm/mm/dma-mapping.c:614 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ i ])
            (reg/v:SI 138 [ nents ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 35 34 43 4 arch/arm/mm/dma-mapping.c:614 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 4 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 138 139
;; rd  out 	(27)
0, 4, 8, 12, 16, 17, 20, 21, 24, 43, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264


;; Succ edge  3 [91.0%] 
;; Succ edge  5 [9.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
0, 4, 8, 12, 16, 17, 20, 21, 24, 43, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [9.0%]  (fallthru)
(note 43 35 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(27)
0, 4, 8, 12, 16, 17, 20, 21, 24, 43, 46, 47, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function ___dma_page_cpu_to_dev (___dma_page_cpu_to_dev)[0:1287]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 5 }
;; 3 succs { 4 7 }
;; 4 succs { 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 13 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 10 count 14 (  1.8)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 15.
deferring deletion of insn with uid = 14.
deferring deletion of insn with uid = 13.
deferring deletion of insn with uid = 12.
Deleted 4 trivially dead insns

Number of successful forward propagations: 0



___dma_page_cpu_to_dev

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,5u} r1={7d,5u} r2={5d,3u} r3={5d,3u} r11={1d,7u} r12={4d} r13={1d,11u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={6d,3u} r25={1d,7u} r26={1d,6u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,2u} r134={1d,2u} r135={1d,4u} r136={1d,1u} r137={1d,1u} r138={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u,1d} r144={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 466{390d,75u,1e} in 32{29 regular + 3 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371
0[0,7] 1[7,7] 2[14,5] 3[19,5] 11[24,1] 12[25,4] 13[29,1] 14[30,4] 15[34,3] 16[37,3] 17[40,3] 18[43,3] 19[46,3] 20[49,3] 21[52,3] 22[55,3] 23[58,3] 24[61,6] 25[67,1] 26[68,1] 27[69,3] 28[72,3] 29[75,3] 30[78,3] 31[81,3] 32[84,3] 33[87,3] 34[90,3] 35[93,3] 36[96,3] 37[99,3] 38[102,3] 39[105,3] 40[108,3] 41[111,3] 42[114,3] 43[117,3] 44[120,3] 45[123,3] 46[126,3] 47[129,3] 48[132,3] 49[135,3] 50[138,3] 51[141,3] 52[144,3] 53[147,3] 54[150,3] 55[153,3] 56[156,3] 57[159,3] 58[162,3] 59[165,3] 60[168,3] 61[171,3] 62[174,3] 63[177,3] 64[180,3] 65[183,3] 66[186,3] 67[189,3] 68[192,3] 69[195,3] 70[198,3] 71[201,3] 72[204,3] 73[207,3] 74[210,3] 75[213,3] 76[216,3] 77[219,3] 78[222,3] 79[225,3] 80[228,3] 81[231,3] 82[234,3] 83[237,3] 84[240,3] 85[243,3] 86[246,3] 87[249,3] 88[252,3] 89[255,3] 90[258,3] 91[261,3] 92[264,3] 93[267,3] 94[270,3] 95[273,3] 96[276,3] 97[279,3] 98[282,3] 99[285,3] 100[288,3] 101[291,3] 102[294,3] 103[297,3] 104[300,3] 105[303,3] 106[306,3] 107[309,3] 108[312,3] 109[315,3] 110[318,3] 111[321,3] 112[324,3] 113[327,3] 114[330,3] 115[333,3] 116[336,3] 117[339,3] 118[342,3] 119[345,3] 120[348,3] 121[351,3] 122[354,3] 123[357,3] 124[360,3] 125[363,3] 126[366,3] 127[369,3] 133[372,1] 134[373,1] 135[374,1] 136[375,1] 137[376,1] 138[377,1] 139[378,1] 140[379,1] 141[380,1] 142[381,1] 143[382,1] 144[383,1] 146[384,1] 147[385,1] 148[386,1] 149[387,1] 150[388,1] 151[389,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 138 139 140 141 142 143 144 146 147
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 136 137 138 139 140 141 142 143 144 146 147
;; live  kill	 14 [lr]
;; rd  in  	(10)
6, 13, 18, 23, 24, 28, 29, 33, 67, 68
;; rd  gen 	(13)
65, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385
;; rd  kill	(22)
30, 31, 32, 33, 61, 62, 63, 64, 65, 66, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/dma-mapping.c:521 (set (reg/v/f:SI 136 [ page ])
        (reg:SI 0 r0 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:521 (set (reg/v:SI 137 [ off ])
        (reg:SI 1 r1 [ off ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:521 (set (reg/v:SI 138 [ size ])
        (reg:SI 2 r2 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:521 (set (reg/v:SI 139 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:524 (set (reg/f:SI 140)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x112494e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/dma-mapping.c:524 (set (reg/f:SI 141 [ cpu_cache.dma_map_area ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 140)
                (const_int 28 [0x1c])) [0 cpu_cache.dma_map_area+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 16 2 arch/arm/mm/dma-mapping.c:524 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 141 [ cpu_cache.dma_map_area ])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 11 17 2 arch/arm/mm/dma-mapping.c:524 (parallel [
            (call (mem:SI (symbol_ref:SI ("dma_cache_maint_page") [flags 0x3] <function_decl 0x1145ee00 dma_cache_maint_page>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 17 16 18 2 arch/arm/mm/dma-mapping.c:526 (set (reg/f:SI 142)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 2 arch/arm/mm/dma-mapping.c:526 (set (reg/f:SI 144 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 142) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 2 arch/arm/mm/dma-mapping.c:526 (set (reg:SI 143)
        (minus:SI (reg/v/f:SI 136 [ page ])
            (reg/f:SI 144 [ mem_map ]))) 28 {*arm_subsi3_insn} (nil))

(insn 20 19 21 2 arch/arm/mm/dma-mapping.c:526 (set (reg:SI 146)
        (ashiftrt:SI (reg:SI 143)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 143)
            (const_int 32 [0x20]))
        (nil)))

(insn 21 20 22 2 arch/arm/mm/dma-mapping.c:526 (set (reg:SI 147)
        (ashift:SI (reg:SI 146)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 22 21 23 2 arch/arm/mm/dma-mapping.c:526 (set (reg/v:SI 135 [ paddr ])
        (plus:SI (reg:SI 147)
            (reg/v:SI 137 [ off ]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 2 arch/arm/mm/dma-mapping.c:527 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 139 [ dir ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 2 arch/arm/mm/dma-mapping.c:527 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 37)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; rd  out 	(22)
6, 13, 18, 23, 24, 28, 29, 65, 67, 68, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385


;; Succ edge  3 [28.0%]  (fallthru)
;; Succ edge  5 [72.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; live  gen 	 24 [cc] 134 148
;; live  kill	
;; rd  in  	(22)
6, 13, 18, 23, 24, 28, 29, 65, 67, 68, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385
;; rd  gen 	(3)
64, 373, 386
;; rd  kill	(8)
61, 62, 63, 64, 65, 66, 373, 386

;; Pred edge  2 [28.0%]  (fallthru)
(note 25 24 26 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 148)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg/f:SI 134 [ D.25126 ])
        (mem/s/f/j/c:SI (reg/f:SI 148) [0 outer_cache.inv_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 28 27 29 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.25126 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:45 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; rd  out 	(24)
6, 13, 18, 23, 24, 28, 29, 64, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386


;; Succ edge  4 [69.8%]  (fallthru)
;; Succ edge  7 [30.2%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138
;; live  gen 	 0 [r0] 1 [r1] 149
;; live  kill	 14 [lr]
;; rd  in  	(24)
6, 13, 18, 23, 24, 28, 29, 64, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386
;; rd  gen 	(1)
387
;; rd  kill	(5)
30, 31, 32, 33, 387

;; Pred edge  3 [69.8%]  (fallthru)
(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 149)
        (plus:SI (reg/v:SI 135 [ paddr ])
            (reg/v:SI 138 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 32 31 33 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (set (reg:SI 1 r1)
        (reg:SI 149)) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 37 4 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:46 (parallel [
            (call (mem:SI (reg/f:SI 134 [ D.25126 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(25)
6, 13, 18, 23, 24, 28, 29, 64, 67, 68, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138
;; live  gen 	 24 [cc] 133 150
;; live  kill	
;; rd  in  	(22)
6, 13, 18, 23, 24, 28, 29, 65, 67, 68, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385
;; rd  gen 	(3)
62, 372, 388
;; rd  kill	(8)
61, 62, 63, 64, 65, 66, 372, 388

;; Pred edge  2 [72.0%] 
(code_label 37 34 38 5 92 "" [1 uses])

(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 40 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 150)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg/f:SI 133 [ D.25129 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 150)
                (const_int 4 [0x4])) [0 outer_cache.clean_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ D.25129 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 43 5 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:50 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2165 [0x875])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 135 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 138
;; rd  out 	(24)
6, 13, 18, 23, 24, 28, 29, 62, 67, 68, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388


;; Succ edge  6 [78.3%]  (fallthru)
;; Succ edge  7 [21.6%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 138
;; live  gen 	 0 [r0] 1 [r1] 151
;; live  kill	 14 [lr]
;; rd  in  	(24)
6, 13, 18, 23, 24, 28, 29, 62, 67, 68, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388
;; rd  gen 	(1)
389
;; rd  kill	(5)
30, 31, 32, 33, 389

;; Pred edge  5 [78.3%]  (fallthru)
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 151)
        (plus:SI (reg/v:SI 135 [ paddr ])
            (reg/v:SI 138 [ size ]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ paddr ])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (set (reg:SI 1 r1)
        (reg:SI 151)) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 53 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:51 (parallel [
            (call (mem:SI (reg/f:SI 133 [ D.25129 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(25)
6, 13, 18, 23, 24, 28, 29, 62, 67, 68, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 4 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(29)
6, 13, 18, 23, 24, 28, 29, 62, 64, 67, 68, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [30.2%] 
;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  5 [21.6%] 
(code_label 53 47 56 7 94 "" [2 uses])

(note 56 53 0 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
6, 13, 18, 23, 24, 28, 29, 62, 64, 67, 68, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 12.
deleting insn with uid = 13.
deleting insn with uid = 14.
deleting insn with uid = 15.
ending the processing of deferred insns

;; Function dma_sync_sg_for_device (dma_sync_sg_for_device)[0:1292]

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 1
;;  header 8, latch 7
;;  depth 1, outer 0
;;  nodes: 8 7 5 3
;; 2 succs { 8 }
;; 3 succs { 4 5 }
;; 4 succs { }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 }
;; 8 succs { 3 9 }
;; 9 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 10 count 21 (  2.1)

In insn 16, replacing
 (compare:CC (reg:SI 141 [ <variable>.sg_magic ])
        (reg:SI 140))
 with (compare:CC (reg:SI 141 [ <variable>.sg_magic ])
        (const_int -2023406815 [0xffffffff87654321]))
Changes to insn 16 not recognized
 Setting REG_EQUAL note

In insn 20, replacing
 (reg/f:SI 142)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
Changes to insn 20 not profitable

In insn 32, replacing
 (reg/f:SI 144)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
Changes to insn 32 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



dma_sync_sg_for_device

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,5u} r1={8d,4u} r2={6d,2u} r3={6d,2u} r11={1d,9u} r12={5d} r13={1d,13u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={7d,3u} r25={1d,9u} r26={1d,8u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={1d,2u} r134={2d,2u} r135={2d,5u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} 
;;    total ref usage 578{504d,74u,0e} in 33{29 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489
0[0,9] 1[9,8] 2[17,6] 3[23,6] 11[29,1] 12[30,5] 13[35,1] 14[36,5] 15[41,4] 16[45,4] 17[49,4] 18[53,4] 19[57,4] 20[61,4] 21[65,4] 22[69,4] 23[73,4] 24[77,7] 25[84,1] 26[85,1] 27[86,4] 28[90,4] 29[94,4] 30[98,4] 31[102,4] 32[106,4] 33[110,4] 34[114,4] 35[118,4] 36[122,4] 37[126,4] 38[130,4] 39[134,4] 40[138,4] 41[142,4] 42[146,4] 43[150,4] 44[154,4] 45[158,4] 46[162,4] 47[166,4] 48[170,4] 49[174,4] 50[178,4] 51[182,4] 52[186,4] 53[190,4] 54[194,4] 55[198,4] 56[202,4] 57[206,4] 58[210,4] 59[214,4] 60[218,4] 61[222,4] 62[226,4] 63[230,4] 64[234,4] 65[238,4] 66[242,4] 67[246,4] 68[250,4] 69[254,4] 70[258,4] 71[262,4] 72[266,4] 73[270,4] 74[274,4] 75[278,4] 76[282,4] 77[286,4] 78[290,4] 79[294,4] 80[298,4] 81[302,4] 82[306,4] 83[310,4] 84[314,4] 85[318,4] 86[322,4] 87[326,4] 88[330,4] 89[334,4] 90[338,4] 91[342,4] 92[346,4] 93[350,4] 94[354,4] 95[358,4] 96[362,4] 97[366,4] 98[370,4] 99[374,4] 100[378,4] 101[382,4] 102[386,4] 103[390,4] 104[394,4] 105[398,4] 106[402,4] 107[406,4] 108[410,4] 109[414,4] 110[418,4] 111[422,4] 112[426,4] 113[430,4] 114[434,4] 115[438,4] 116[442,4] 117[446,4] 118[450,4] 119[454,4] 120[458,4] 121[462,4] 122[466,4] 123[470,4] 124[474,4] 125[478,4] 126[482,4] 127[486,4] 133[490,1] 134[491,2] 135[493,2] 137[495,1] 138[496,1] 139[497,1] 140[498,1] 141[499,1] 142[500,1] 143[501,1] 144[502,1] 145[503,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 137 138 139
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 137 138 139
;; live  kill	
;; rd  in  	(10)
8, 16, 22, 28, 29, 34, 35, 40, 84, 85
;; rd  gen 	(5)
492, 494, 495, 496, 497
;; rd  kill	(7)
491, 492, 493, 494, 495, 496, 497

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 arch/arm/mm/dma-mapping.c:654 (set (reg/v/f:SI 137 [ sg ])
        (reg:SI 1 r1 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:654 (set (reg/v:SI 138 [ nents ])
        (reg:SI 2 r2 [ nents ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:654 (set (reg/v:SI 139 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:658 (set (reg/v/f:SI 135 [ s ])
        (reg/v/f:SI 137 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 50 2 arch/arm/mm/dma-mapping.c:658 (set (reg/v:SI 134 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 2 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; rd  out 	(15)
8, 16, 22, 28, 29, 34, 35, 40, 84, 85, 492, 494, 495, 496, 497


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 8) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 140 141
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; live  gen 	 24 [cc] 140 141
;; live  kill	
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 77, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(3)
83, 498, 499
;; rd  kill	(9)
77, 78, 79, 80, 81, 82, 83, 498, 499

;; Pred edge  8 [97.0%] 
(code_label 50 10 13 3 104 "" [1 uses])

(note 13 50 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 include/linux/scatterlist.h:96 (set (reg:SI 140)
        (const_int -2023406815 [0xffffffff87654321])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 include/linux/scatterlist.h:96 (set (reg:SI 141 [ <variable>.sg_magic ])
        (mem/s/j:SI (reg/v/f:SI 135 [ s ]) [0 <variable>.sg_magic+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 include/linux/scatterlist.h:96 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ <variable>.sg_magic ])
            (reg:SI 140))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 141 [ <variable>.sg_magic ])
            (const_int -2023406815 [0xffffffff87654321]))
        (nil)))

(jump_insn 17 16 18 3 include/linux/scatterlist.h:96 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 83, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 142
;; live  kill	 14 [lr]
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 83, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(1)
500
;; rd  kill	(6)
36, 37, 38, 39, 40, 500

;; Pred edge  3 [0.0%]  (fallthru)
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 4 include/linux/scatterlist.h:96 discrim 1 (set (reg/f:SI 142)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
        (nil)))

(insn 21 20 22 4 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 1 r1)
        (const_int 96 [0x60])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 21 24 4 include/linux/scatterlist.h:96 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 83, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503



;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 133 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; live  gen 	 24 [cc] 133 143
;; live  kill	
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 83, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(3)
81, 490, 501
;; rd  kill	(9)
77, 78, 79, 80, 81, 82, 83, 490, 501

;; Pred edge  3 [100.0%] 
(code_label 24 22 25 5 102 "" [1 uses])

(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 include/linux/scatterlist.h:97 (set (reg:SI 133 [ D.25143 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 4 [0x4])) [0 <variable>.page_link+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 include/linux/scatterlist.h:97 (set (reg:SI 143)
        (and:SI (reg:SI 133 [ D.25143 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 28 27 29 5 include/linux/scatterlist.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 5 include/linux/scatterlist.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138 139
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 81, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 144
;; live  kill	 14 [lr]
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 81, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(1)
502
;; rd  kill	(6)
36, 37, 38, 39, 40, 502

;; Pred edge  5 [0.0%]  (fallthru)
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 6 include/linux/scatterlist.h:97 discrim 1 (set (reg/f:SI 144)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 6 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
        (nil)))

(insn 33 32 34 6 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 1 r1)
        (const_int 97 [0x61])) 167 {*arm_movsi_insn} (nil))

(call_insn 34 33 36 6 include/linux/scatterlist.h:97 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 81, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503



;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 134 135 145
;; live  kill	 14 [lr]
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 81, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(4)
0, 491, 493, 503
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 36, 37, 38, 39, 40, 491, 492, 493, 494, 503

;; Pred edge  5 [100.0%] 
(code_label 36 34 37 7 103 "" [1 uses])

(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 145)
        (and:SI (reg:SI 133 [ D.25143 ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 39 38 40 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 0 r0)
        (reg:SI 145)) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 8 [0x8])) [0 <variable>.offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 40 42 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 135 [ s ])
                (const_int 12 [0xc])) [0 <variable>.length+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 43 42 44 7 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (parallel [
            (call (mem:SI (symbol_ref:SI ("___dma_page_cpu_to_dev") [flags 0x3] <function_decl 0x11060e00 ___dma_page_cpu_to_dev>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 44 43 45 7 arch/arm/mm/dma-mapping.c:658 (set (reg/v:SI 134 [ i ])
        (plus:SI (reg/v:SI 134 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 7 arch/arm/mm/dma-mapping.c:658 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ s ])) 167 {*arm_movsi_insn} (nil))

(call_insn 46 45 47 7 arch/arm/mm/dma-mapping.c:658 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sg_next") [flags 0x41] <function_decl 0x1103bb00 sg_next>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 47 46 48 7 arch/arm/mm/dma-mapping.c:658 (set (reg/v/f:SI 135 [ s ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 138 139
;; rd  out 	(20)
0, 16, 22, 28, 29, 34, 35, 81, 84, 85, 490, 491, 493, 495, 496, 497, 498, 499, 501, 503


;; Succ edge  8 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 2 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 81, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(1)
77
;; rd  kill	(7)
77, 78, 79, 80, 81, 82, 83

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%]  (fallthru,dfs_back)
(code_label 48 47 49 8 101 "" [0 uses])

(note 49 48 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 51 49 52 8 arch/arm/mm/dma-mapping.c:658 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ i ])
            (reg/v:SI 138 [ nents ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 60 8 arch/arm/mm/dma-mapping.c:658 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9700 [0x25e4])
        (nil)))
;; End of basic block 8 -> ( 3 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 138 139
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 77, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503


;; Succ edge  3 [97.0%] 
;; Succ edge  9 [3.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 77, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  8 [3.0%]  (fallthru)
(note 60 52 0 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 9 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(24)
0, 8, 16, 22, 28, 29, 34, 35, 40, 77, 84, 85, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 503


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dma_map_sg (dma_map_sg)[0:1289]

;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;;
;; Loop 2
;;  header 14, latch 13
;;  depth 1, outer 0
;;  nodes: 14 13
;;
;; Loop 1
;;  header 12, latch 11
;;  depth 1, outer 0
;;  nodes: 12 11 9 7 5
;; 2 succs { 4 3 }
;; 3 succs { 12 }
;; 4 succs { }
;; 5 succs { 6 7 }
;; 6 succs { }
;; 7 succs { 8 9 }
;; 8 succs { }
;; 9 succs { 10 11 }
;; 10 succs { 14 }
;; 11 succs { 12 }
;; 12 succs { 5 16 }
;; 13 succs { 14 }
;; 14 succs { 13 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 19 count 30 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 19 count 34 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 19 count 38 (  2.2)

In insn 20, replacing
 (reg/f:SI 147)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
Changes to insn 20 not profitable

In insn 21, replacing
 (reg:SI 148)
 with (const_int 578 [0x242])
Changes to insn 21 not profitable

In insn 27, replacing
 (compare:CC (reg:SI 150 [ <variable>.sg_magic ])
        (reg:SI 149))
 with (compare:CC (reg:SI 150 [ <variable>.sg_magic ])
        (const_int -2023406815 [0xffffffff87654321]))
Changes to insn 27 not recognized
 Setting REG_EQUAL note

In insn 31, replacing
 (reg/f:SI 151)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
Changes to insn 31 not profitable

In insn 43, replacing
 (reg/f:SI 153)
 with (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
Changes to insn 43 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 111.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



dma_map_sg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={16d,11u} r1={13d,6u} r2={10d,3u} r3={10d,3u} r11={1d,16u} r12={8d} r13={1d,23u} r14={8d,1u} r15={7d} r16={7d} r17={7d} r18={7d} r19={7d} r20={7d} r21={7d} r22={7d} r23={7d} r24={13d,6u} r25={1d,16u} r26={1d,15u} r27={7d} r28={7d} r29={7d} r30={7d} r31={7d} r32={7d} r33={7d} r34={7d} r35={7d} r36={7d} r37={7d} r38={7d} r39={7d} r40={7d} r41={7d} r42={7d} r43={7d} r44={7d} r45={7d} r46={7d} r47={7d} r48={7d} r49={7d} r50={7d} r51={7d} r52={7d} r53={7d} r54={7d} r55={7d} r56={7d} r57={7d} r58={7d} r59={7d} r60={7d} r61={7d} r62={7d} r63={7d} r64={7d} r65={7d} r66={7d} r67={7d} r68={7d} r69={7d} r70={7d} r71={7d} r72={7d} r73={7d} r74={7d} r75={7d} r76={7d} r77={7d} r78={7d} r79={7d} r80={7d} r81={7d} r82={7d} r83={7d} r84={7d} r85={7d} r86={7d} r87={7d} r88={7d} r89={7d} r90={7d} r91={7d} r92={7d} r93={7d} r94={7d} r95={7d} r96={7d} r97={7d} r98={7d} r99={7d} r100={7d} r101={7d} r102={7d} r103={7d} r104={7d} r105={7d} r106={7d} r107={7d} r108={7d} r109={7d} r110={7d} r111={7d} r112={7d} r113={7d} r114={7d} r115={7d} r116={7d} r117={7d} r118={7d} r119={7d} r120={7d} r121={7d} r122={7d} r123={7d} r124={7d} r125={7d} r126={7d} r127={7d} r133={2d,3u} r134={1d,2u} r135={1d,2u} r136={1d,2u} r137={2d,2u} r138={2d,3u} r139={2d,6u} r140={1d,2u,1d} r141={1d,2u} r142={1d} r144={1d,2u} r145={2d,3u} r146={1d,3u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,2u} r153={1d,1u} r154={1d,1u} r155={1d,1u,1d} r156={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} 
;;    total ref usage 1043{889d,152u,2e} in 74{67 regular + 7 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851
0[0,16] 1[16,13] 2[29,10] 3[39,10] 11[49,1] 12[50,8] 13[58,1] 14[59,8] 15[67,7] 16[74,7] 17[81,7] 18[88,7] 19[95,7] 20[102,7] 21[109,7] 22[116,7] 23[123,7] 24[130,13] 25[143,1] 26[144,1] 27[145,7] 28[152,7] 29[159,7] 30[166,7] 31[173,7] 32[180,7] 33[187,7] 34[194,7] 35[201,7] 36[208,7] 37[215,7] 38[222,7] 39[229,7] 40[236,7] 41[243,7] 42[250,7] 43[257,7] 44[264,7] 45[271,7] 46[278,7] 47[285,7] 48[292,7] 49[299,7] 50[306,7] 51[313,7] 52[320,7] 53[327,7] 54[334,7] 55[341,7] 56[348,7] 57[355,7] 58[362,7] 59[369,7] 60[376,7] 61[383,7] 62[390,7] 63[397,7] 64[404,7] 65[411,7] 66[418,7] 67[425,7] 68[432,7] 69[439,7] 70[446,7] 71[453,7] 72[460,7] 73[467,7] 74[474,7] 75[481,7] 76[488,7] 77[495,7] 78[502,7] 79[509,7] 80[516,7] 81[523,7] 82[530,7] 83[537,7] 84[544,7] 85[551,7] 86[558,7] 87[565,7] 88[572,7] 89[579,7] 90[586,7] 91[593,7] 92[600,7] 93[607,7] 94[614,7] 95[621,7] 96[628,7] 97[635,7] 98[642,7] 99[649,7] 100[656,7] 101[663,7] 102[670,7] 103[677,7] 104[684,7] 105[691,7] 106[698,7] 107[705,7] 108[712,7] 109[719,7] 110[726,7] 111[733,7] 112[740,7] 113[747,7] 114[754,7] 115[761,7] 116[768,7] 117[775,7] 118[782,7] 119[789,7] 120[796,7] 121[803,7] 122[810,7] 123[817,7] 124[824,7] 125[831,7] 126[838,7] 127[845,7] 133[852,2] 134[854,1] 135[855,1] 136[856,1] 137[857,2] 138[859,2] 139[861,2] 140[863,1] 141[864,1] 142[865,1] 144[866,1] 145[867,2] 146[869,1] 147[870,1] 148[871,1] 149[872,1] 150[873,1] 151[874,1] 152[875,1] 153[876,1] 154[877,1] 155[878,1] 156[879,1] 158[880,1] 159[881,1] 160[882,1] 161[883,1] 162[884,1] 163[885,1] 164[886,1] 165[887,1] 166[888,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 144 145 146
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 144 145 146
;; live  kill	
;; rd  in  	(10)
15, 28, 38, 48, 49, 57, 58, 66, 143, 144
;; rd  gen 	(4)
142, 866, 868, 869
;; rd  kill	(17)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 866, 867, 868, 869

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 7 4 2 arch/arm/mm/dma-mapping.c:574 (set (reg/v/f:SI 144 [ sg ])
        (reg:SI 1 r1 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:574 (set (reg/v:SI 145 [ nents ])
        (reg:SI 2 r2 [ nents ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:574 (set (reg/v:SI 146 [ dir ])
        (reg:SI 3 r3 [ dir ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:578 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ dir ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 11 2 arch/arm/mm/dma-mapping.c:578 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 16)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 145 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 145 146
;; rd  out 	(14)
15, 28, 38, 48, 49, 57, 58, 66, 142, 143, 144, 866, 868, 869


;; Succ edge  4 [0.0%] 
;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 138 139
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 144 145 146
;; live  gen 	 138 139
;; live  kill	
;; rd  in  	(14)
15, 28, 38, 48, 49, 57, 58, 66, 142, 143, 144, 866, 868, 869
;; rd  gen 	(2)
860, 862
;; rd  kill	(4)
859, 860, 861, 862

;; Pred edge  2 [100.0%]  (fallthru)
(note 11 10 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 3 arch/arm/mm/dma-mapping.c:578 (set (reg/v/f:SI 139 [ s ])
        (reg/v/f:SI 144 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 16 3 arch/arm/mm/dma-mapping.c:578 (set (reg/v:SI 138 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 144 145 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 144 145 146
;; rd  out 	(16)
15, 28, 38, 48, 49, 57, 58, 66, 142, 143, 144, 860, 862, 866, 868, 869


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 147 148
;; live  kill	 14 [lr]
;; rd  in  	(14)
15, 28, 38, 48, 49, 57, 58, 66, 142, 143, 144, 866, 868, 869
;; rd  gen 	(2)
870, 871
;; rd  kill	(10)
59, 60, 61, 62, 63, 64, 65, 66, 870, 871

;; Pred edge  2 [0.0%] 
(code_label 16 13 17 4 110 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 19 4 arch/arm/mm/dma-mapping.c:578 discrim 1 (set (reg/f:SI 147)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 19 18 20 4 arch/arm/mm/dma-mapping.c:578 discrim 1 (set (reg:SI 148)
        (const_int 578 [0x242])) 167 {*arm_movsi_insn} (nil))

(insn 20 19 21 4 arch/arm/mm/dma-mapping.c:578 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
        (nil)))

(insn 21 20 22 4 arch/arm/mm/dma-mapping.c:578 discrim 1 (set (reg:SI 1 r1)
        (reg:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 578 [0x242])
        (nil)))

(call_insn 22 21 78 4 arch/arm/mm/dma-mapping.c:578 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 4 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
15, 28, 38, 48, 49, 57, 58, 142, 143, 144, 866, 868, 869, 870, 871



;; Start of basic block ( 12) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144 145 146
;; live  gen 	 24 [cc] 149 150
;; live  kill	
;; rd  in  	(31)
5, 15, 28, 38, 48, 49, 57, 58, 66, 133, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881
;; rd  gen 	(3)
140, 872, 873
;; rd  kill	(15)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 872, 873

;; Pred edge  12 [97.8%] 
(code_label 78 22 24 5 116 "" [1 uses])

(note 24 78 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 include/linux/scatterlist.h:96 (set (reg:SI 149)
        (const_int -2023406815 [0xffffffff87654321])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 5 include/linux/scatterlist.h:96 (set (reg:SI 150 [ <variable>.sg_magic ])
        (mem/s/j:SI (reg/v/f:SI 139 [ s ]) [0 <variable>.sg_magic+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 5 include/linux/scatterlist.h:96 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150 [ <variable>.sg_magic ])
            (reg:SI 149))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg:SI 150 [ <variable>.sg_magic ])
            (const_int -2023406815 [0xffffffff87654321]))
        (nil)))

(jump_insn 28 27 29 5 include/linux/scatterlist.h:96 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 35)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144 145 146
;; rd  out 	(31)
5, 15, 28, 38, 48, 49, 57, 58, 66, 140, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 151
;; live  kill	 14 [lr]
;; rd  in  	(31)
5, 15, 28, 38, 48, 49, 57, 58, 66, 140, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881
;; rd  gen 	(1)
874
;; rd  kill	(9)
59, 60, 61, 62, 63, 64, 65, 66, 874

;; Pred edge  5 [0.0%]  (fallthru)
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 6 include/linux/scatterlist.h:96 discrim 1 (set (reg/f:SI 151)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 6 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 151)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
        (nil)))

(insn 32 31 33 6 include/linux/scatterlist.h:96 discrim 1 (set (reg:SI 1 r1)
        (const_int 96 [0x60])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 35 6 include/linux/scatterlist.h:96 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 6 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(31)
5, 15, 28, 38, 48, 49, 57, 58, 140, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 874, 875, 877, 878, 879, 880, 881



;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 24 [cc] 135 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144 145 146
;; live  gen 	 24 [cc] 135 152
;; live  kill	
;; rd  in  	(31)
5, 15, 28, 38, 48, 49, 57, 58, 66, 140, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881
;; rd  gen 	(3)
138, 855, 875
;; rd  kill	(15)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 855, 875

;; Pred edge  5 [100.0%] 
(code_label 35 33 36 7 112 "" [1 uses])

(note 36 35 37 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 7 include/linux/scatterlist.h:97 (set (reg:SI 135 [ D.25174 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ s ])
                (const_int 4 [0x4])) [0 <variable>.page_link+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 38 37 39 7 include/linux/scatterlist.h:97 (set (reg:SI 152)
        (and:SI (reg:SI 135 [ D.25174 ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 39 38 40 7 include/linux/scatterlist.h:97 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 41 7 include/linux/scatterlist.h:97 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 47)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 144 145 146 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 144 145 146 152
;; rd  out 	(31)
5, 15, 28, 38, 48, 49, 57, 58, 66, 138, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881


;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 153
;; live  kill	 14 [lr]
;; rd  in  	(31)
5, 15, 28, 38, 48, 49, 57, 58, 66, 138, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881
;; rd  gen 	(1)
876
;; rd  kill	(9)
59, 60, 61, 62, 63, 64, 65, 66, 876

;; Pred edge  7 [0.0%]  (fallthru)
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 8 include/linux/scatterlist.h:97 discrim 1 (set (reg/f:SI 153)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 8 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 153)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x114dd9c0>)
        (nil)))

(insn 44 43 45 8 include/linux/scatterlist.h:97 discrim 1 (set (reg:SI 1 r1)
        (const_int 97 [0x61])) 167 {*arm_movsi_insn} (nil))

(call_insn 45 44 47 8 include/linux/scatterlist.h:97 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 8 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(31)
5, 15, 28, 38, 48, 49, 57, 58, 138, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 876, 877, 878, 879, 880, 881



;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 144 145 146 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 139 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 141 154 155 156 158 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 138 139 144 145 146 152
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 136 141 154 155 156 158 159
;; live  kill	 14 [lr]
;; rd  in  	(31)
5, 15, 28, 38, 48, 49, 57, 58, 66, 138, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881
;; rd  gen 	(9)
135, 854, 856, 864, 877, 878, 879, 880, 881
;; rd  kill	(29)
59, 60, 61, 62, 63, 64, 65, 66, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 854, 856, 864, 877, 878, 879, 880, 881

;; Pred edge  7 [100.0%] 
(code_label 47 45 48 9 113 "" [1 uses])

(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 9 include/linux/scatterlist.h:99 (set (reg/f:SI 136 [ D.25168 ])
        (and:SI (reg:SI 135 [ D.25174 ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 50 49 51 9 arch/arm/mm/dma-mapping.c:581 (set (reg:SI 141 [ D.24869 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ s ])
                (const_int 8 [0x8])) [0 <variable>.offset+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 52 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 0 r0)
        (reg/f:SI 136 [ D.25168 ])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 1 r1)
        (reg:SI 141 [ D.24869 ])) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ s ])
                (const_int 12 [0xc])) [0 <variable>.length+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 55 54 56 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:105 (parallel [
            (call (mem:SI (symbol_ref:SI ("___dma_page_cpu_to_dev") [flags 0x3] <function_decl 0x11060e00 ___dma_page_cpu_to_dev>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 56 55 57 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg/f:SI 154)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 57 56 58 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg/f:SI 156 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 154) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 58 57 59 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg:SI 155)
        (minus:SI (reg/f:SI 136 [ D.25168 ])
            (reg/f:SI 156 [ mem_map ]))) 28 {*arm_subsi3_insn} (nil))

(insn 59 58 60 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg:SI 158)
        (ashiftrt:SI (reg:SI 155)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 155)
            (const_int 32 [0x20]))
        (nil)))

(insn 60 59 61 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg:SI 159)
        (ashift:SI (reg:SI 158)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 61 60 62 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:282 (set (reg:SI 134 [ D.25188 ])
        (plus:SI (reg:SI 159)
            (reg:SI 141 [ D.24869 ]))) 4 {*arm_addsi3} (nil))

(insn 62 61 63 9 arch/arm/mm/dma-mapping.c:581 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 139 [ s ])
                (const_int 16 [0x10])) [0 <variable>.dma_address+0 S4 A32])
        (reg:SI 134 [ D.25188 ])) 167 {*arm_movsi_insn} (nil))

(insn 63 62 64 9 arch/arm/mm/dma-mapping.c:583 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.25188 ])
            (const_int -1 [0xffffffffffffffff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 64 63 65 9 arch/arm/mm/dma-mapping.c:583 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 144 145 146 152
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144 145 146 152
;; rd  out 	(30)
5, 15, 28, 38, 48, 49, 57, 58, 135, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881


;; Succ edge  10 [2.2%]  (fallthru)
;; Succ edge  11 [97.8%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 144 146 152
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144 152
;; lr  def 	 133 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 144 146 152
;; live  gen 	 133 137
;; live  kill	
;; rd  in  	(30)
5, 15, 28, 38, 48, 49, 57, 58, 135, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881
;; rd  gen 	(2)
853, 857
;; rd  kill	(4)
852, 853, 857, 858

;; Pred edge  9 [2.2%]  (fallthru)
(note 65 64 66 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 10 arch/arm/mm/dma-mapping.c:583 (set (reg/v/f:SI 133 [ s.771 ])
        (reg/v/f:SI 144 [ sg ])) 167 {*arm_movsi_insn} (nil))

(insn 67 66 70 10 arch/arm/mm/dma-mapping.c:583 (set (reg/v:SI 137 [ j ])
        (reg:SI 152)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 10 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 146
;; rd  out 	(32)
5, 15, 28, 38, 48, 49, 57, 58, 135, 143, 144, 853, 854, 855, 856, 857, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144 145 146
;; live  gen 	 0 [r0] 138 139
;; live  kill	 14 [lr]
;; rd  in  	(30)
5, 15, 28, 38, 48, 49, 57, 58, 135, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881
;; rd  gen 	(3)
5, 859, 861
;; rd  kill	(28)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 59, 60, 61, 62, 63, 64, 65, 66, 859, 860, 861, 862

;; Pred edge  9 [97.8%] 
(code_label 70 67 71 11 114 "" [1 uses])

(note 71 70 72 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 11 arch/arm/mm/dma-mapping.c:580 (set (reg/v:SI 138 [ i ])
        (plus:SI (reg/v:SI 138 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 73 72 74 11 arch/arm/mm/dma-mapping.c:580 (set (reg:SI 0 r0)
        (reg/v/f:SI 139 [ s ])) 167 {*arm_movsi_insn} (nil))

(call_insn 74 73 75 11 arch/arm/mm/dma-mapping.c:580 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sg_next") [flags 0x41] <function_decl 0x1103bb00 sg_next>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 75 74 76 11 arch/arm/mm/dma-mapping.c:580 (set (reg/v/f:SI 139 [ s ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 144 145 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 144 145 146
;; rd  out 	(27)
5, 28, 38, 48, 49, 57, 58, 135, 143, 144, 854, 855, 856, 859, 861, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881


;; Succ edge  12 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 3 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 144 145 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 145
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 144 145 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(32)
5, 15, 28, 38, 48, 49, 57, 58, 66, 135, 142, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881
;; rd  gen 	(1)
133
;; rd  kill	(13)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru,dfs_back)
(code_label 76 75 77 12 111 "" [0 uses])

(note 77 76 79 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 79 77 80 12 arch/arm/mm/dma-mapping.c:580 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ i ])
            (reg/v:SI 145 [ nents ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 80 79 104 12 arch/arm/mm/dma-mapping.c:580 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9775 [0x262f])
        (nil)))
;; End of basic block 12 -> ( 5 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 144 145 146
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 144 145 146
;; rd  out 	(31)
5, 15, 28, 38, 48, 49, 57, 58, 66, 133, 143, 144, 854, 855, 856, 859, 860, 861, 862, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881


;; Succ edge  5 [97.8%] 
;; Succ edge  16 [2.2%]  (fallthru)

;; Start of basic block ( 14) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 137 140 160 161 162 163 164 165 166
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 137 140 160 161 162 163 164 165 166
;; live  kill	 14 [lr]
;; rd  in  	(43)
1, 5, 15, 28, 38, 48, 49, 57, 58, 130, 143, 144, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888
;; rd  gen 	(11)
1, 852, 858, 863, 882, 883, 884, 885, 886, 887, 888
;; rd  kill	(36)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 59, 60, 61, 62, 63, 64, 65, 66, 852, 853, 857, 858, 863, 882, 883, 884, 885, 886, 887, 888

;; Pred edge  14 [91.0%] 
(code_label 104 80 84 13 118 "" [1 uses])

(note 84 104 85 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 13 arch/arm/mm/dma-mapping.c:591 (set (reg:SI 140 [ D.24872 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ s.771 ])
                (const_int 16 [0x10])) [0 <variable>.dma_address+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg/f:SI 160)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 161)
        (lshiftrt:SI (reg:SI 140 [ D.24872 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 88 87 89 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 162)
        (ashift:SI (reg:SI 161)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 89 88 90 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg/f:SI 164 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 160) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 90 89 91 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 163)
        (plus:SI (reg/f:SI 164 [ mem_map ])
            (reg:SI 162))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 166)
        (ashift:SI (reg:SI 140 [ D.24872 ])
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (nil))

(insn 92 91 93 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 165)
        (lshiftrt:SI (reg:SI 166)
            (const_int 20 [0x14]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 140 [ D.24872 ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 93 92 94 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 0 r0)
        (reg:SI 163)) 167 {*arm_movsi_insn} (nil))

(insn 94 93 95 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 1 r1)
        (reg:SI 165)) 167 {*arm_movsi_insn} (nil))

(insn 95 94 96 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 2 r2)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ s.771 ])
                (const_int 12 [0xc])) [0 <variable>.length+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (set (reg:SI 3 r3)
        (reg/v:SI 146 [ dir ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/dma-mapping.h:115 (parallel [
            (call (mem:SI (symbol_ref:SI ("___dma_page_dev_to_cpu") [flags 0x3] <function_decl 0x11060f80 ___dma_page_dev_to_cpu>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 98 97 99 13 arch/arm/mm/dma-mapping.c:590 discrim 2 (set (reg/v:SI 137 [ j ])
        (plus:SI (reg/v:SI 137 [ j ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 99 98 100 13 arch/arm/mm/dma-mapping.c:590 discrim 2 (set (reg:SI 0 r0)
        (reg/v/f:SI 133 [ s.771 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 100 99 101 13 arch/arm/mm/dma-mapping.c:590 discrim 2 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("sg_next") [flags 0x41] <function_decl 0x1103bb00 sg_next>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 101 100 102 13 arch/arm/mm/dma-mapping.c:590 discrim 2 (set (reg/v/f:SI 133 [ s.771 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 146
;; rd  out 	(39)
1, 28, 38, 48, 49, 57, 58, 130, 143, 144, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888


;; Succ edge  14 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 10 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 146
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(44)
1, 5, 15, 28, 38, 48, 49, 57, 58, 130, 135, 143, 144, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888
;; rd  gen 	(1)
130
;; rd  kill	(13)
130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  13 [100.0%]  (fallthru,dfs_back)
(code_label 102 101 103 14 115 "" [0 uses])

(note 103 102 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 105 103 106 14 arch/arm/mm/dma-mapping.c:590 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ j ])
            (reg/v:SI 138 [ i ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 106 105 107 14 arch/arm/mm/dma-mapping.c:590 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 14 -> ( 13 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137 138 146
;; rd  out 	(43)
1, 5, 15, 28, 38, 48, 49, 57, 58, 130, 143, 144, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888


;; Succ edge  13 [91.0%] 
;; Succ edge  15 [9.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u138(11){ }u139(13){ }u140(25){ }u141(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 145
;; live  kill	
;; rd  in  	(43)
1, 5, 15, 28, 38, 48, 49, 57, 58, 130, 143, 144, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888
;; rd  gen 	(1)
867
;; rd  kill	(2)
867, 868

;; Pred edge  14 [9.0%]  (fallthru)
(note 107 106 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 15 arch/arm/mm/dma-mapping.c:592 (set (reg/v:SI 145 [ nents ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; rd  out 	(43)
1, 5, 15, 28, 38, 48, 49, 57, 58, 130, 143, 144, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 867, 869, 872, 873, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 0 [r0] 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 145
;; live  gen 	 0 [r0] 142
;; live  kill	
;; rd  in  	(46)
1, 5, 15, 28, 38, 48, 49, 57, 58, 66, 130, 133, 143, 144, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 866, 867, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888
;; rd  gen 	(2)
0, 865
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 865

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  12 [2.2%]  (fallthru)
(code_label 109 108 110 16 117 "" [0 uses])

(note 110 109 115 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 115 110 121 16 arch/arm/mm/dma-mapping.c:593 (set (reg/i:SI 0 r0)
        (reg/v:SI 145 [ nents ])) 167 {*arm_movsi_insn} (nil))

(insn 121 115 0 16 arch/arm/mm/dma-mapping.c:593 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(45)
0, 28, 38, 48, 49, 57, 58, 66, 130, 133, 143, 144, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 872, 873, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 111.
ending the processing of deferred insns

;; Function dma_free_coherent (dma_free_coherent)[0:1283]

;; 4 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
;;
;; Loop 3
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22
;;
;; Loop 2
;;  header 13, latch 19
;;  depth 1, outer 0
;;  nodes: 13 19 17 18 16 14 15
;;
;; Loop 1
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 }
;; 5 succs { 5 6 }
;; 6 succs { 24 7 }
;; 7 succs { 8 9 }
;; 8 succs { 21 }
;; 9 succs { 11 10 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 13 }
;; 13 succs { 15 14 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 18 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 13 20 }
;; 20 succs { 21 }
;; 21 succs { 23 }
;; 22 succs { 23 }
;; 23 succs { 22 24 }
;; 24 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 34 count 53 (  2.1)
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 34 count 49 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 25 n_edges 34 count 55 (  2.2)

In insn 17, replacing
 (reg/f:SI 156)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
Changes to insn 17 not profitable

In insn 45, replacing
 (reg/f:SI 160)
 with (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
Changes to insn 45 not profitable

In insn 54, replacing
 (plus:SI (reg/f:SI 162)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 54 not profitable

In insn 55, replacing
 (reg/f:SI 161)
 with (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114ecc80>)
Changes to insn 55 not profitable

In insn 77, replacing
 (plus:SI (reg/f:SI 167)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 77 not profitable

In insn 78, replacing
 (reg/f:SI 166)
 with (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114ecd20>)
Changes to insn 78 not profitable

In insn 103, replacing
 (reg:SI 1 r1)
 with (const_int 0 [0x0])
Changes to insn 103 not profitable

In insn 130, replacing
 (plus:SI (reg/f:SI 180)
        (const_int 16 [0x10]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 16 [0x10])))
Changes to insn 130 not profitable

In insn 131, replacing
 (reg/f:SI 179)
 with (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114f1ac0>)
Changes to insn 131 not profitable

In insn 145, replacing
 (reg/f:SI 182)
 with (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
Changes to insn 145 not profitable


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



dma_free_coherent

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={23d,13u} r1={23d,12u} r2={17d,5u} r3={14d,2u} r11={1d,24u} r12={13d} r13={1d,36u} r14={13d,1u} r15={12d} r16={12d} r17={12d} r18={12d} r19={12d} r20={12d} r21={12d} r22={12d} r23={12d} r24={23d,10u} r25={1d,24u} r26={1d,23u} r27={12d} r28={12d} r29={12d} r30={12d} r31={12d} r32={12d} r33={12d} r34={12d} r35={12d} r36={12d} r37={12d} r38={12d} r39={12d} r40={12d} r41={12d} r42={12d} r43={12d} r44={12d} r45={12d} r46={12d} r47={12d} r48={12d} r49={12d} r50={12d} r51={12d} r52={12d} r53={12d} r54={12d} r55={12d} r56={12d} r57={12d} r58={12d} r59={12d} r60={12d} r61={12d} r62={12d} r63={12d} r64={12d} r65={12d} r66={12d} r67={12d} r68={12d} r69={12d} r70={12d} r71={12d} r72={12d} r73={12d} r74={12d} r75={12d} r76={12d} r77={12d} r78={12d} r79={12d} r80={12d} r81={12d} r82={12d} r83={12d} r84={12d} r85={12d} r86={12d} r87={12d} r88={12d} r89={12d} r90={12d} r91={12d} r92={12d} r93={12d} r94={12d} r95={12d} r96={12d} r97={12d} r98={12d} r99={12d} r100={12d} r101={12d} r102={12d} r103={12d} r104={12d} r105={12d} r106={12d} r107={12d} r108={12d} r109={12d} r110={12d} r111={12d} r112={12d} r113={12d} r114={12d} r115={12d} r116={12d} r117={12d} r118={12d} r119={12d} r120={12d} r121={12d} r122={12d} r123={12d} r124={12d} r125={12d} r126={12d} r127={12d} r135={3d,2u} r136={1d,4u} r137={1d,1u} r138={2d,4u} r139={1d,2u} r140={1d,2u} r141={1d,9u} r142={3d,3u} r143={2d,3u} r144={3d,3u} r145={1d,2u} r146={2d,2u} r147={2d,2u} r148={1d,1u} r149={1d,1u,1d} r150={1d,1u} r151={1d,1u} r152={1d,2u,1d} r153={1d,3u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u,1d} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} 
;;    total ref usage 1750{1514d,233u,3e} in 121{109 regular + 12 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449
0[0,23] 1[23,23] 2[46,17] 3[63,14] 11[77,1] 12[78,13] 13[91,1] 14[92,13] 15[105,12] 16[117,12] 17[129,12] 18[141,12] 19[153,12] 20[165,12] 21[177,12] 22[189,12] 23[201,12] 24[213,23] 25[236,1] 26[237,1] 27[238,12] 28[250,12] 29[262,12] 30[274,12] 31[286,12] 32[298,12] 33[310,12] 34[322,12] 35[334,12] 36[346,12] 37[358,12] 38[370,12] 39[382,12] 40[394,12] 41[406,12] 42[418,12] 43[430,12] 44[442,12] 45[454,12] 46[466,12] 47[478,12] 48[490,12] 49[502,12] 50[514,12] 51[526,12] 52[538,12] 53[550,12] 54[562,12] 55[574,12] 56[586,12] 57[598,12] 58[610,12] 59[622,12] 60[634,12] 61[646,12] 62[658,12] 63[670,12] 64[682,12] 65[694,12] 66[706,12] 67[718,12] 68[730,12] 69[742,12] 70[754,12] 71[766,12] 72[778,12] 73[790,12] 74[802,12] 75[814,12] 76[826,12] 77[838,12] 78[850,12] 79[862,12] 80[874,12] 81[886,12] 82[898,12] 83[910,12] 84[922,12] 85[934,12] 86[946,12] 87[958,12] 88[970,12] 89[982,12] 90[994,12] 91[1006,12] 92[1018,12] 93[1030,12] 94[1042,12] 95[1054,12] 96[1066,12] 97[1078,12] 98[1090,12] 99[1102,12] 100[1114,12] 101[1126,12] 102[1138,12] 103[1150,12] 104[1162,12] 105[1174,12] 106[1186,12] 107[1198,12] 108[1210,12] 109[1222,12] 110[1234,12] 111[1246,12] 112[1258,12] 113[1270,12] 114[1282,12] 115[1294,12] 116[1306,12] 117[1318,12] 118[1330,12] 119[1342,12] 120[1354,12] 121[1366,12] 122[1378,12] 123[1390,12] 124[1402,12] 125[1414,12] 126[1426,12] 127[1438,12] 135[1450,3] 136[1453,1] 137[1454,1] 138[1455,2] 139[1457,1] 140[1458,1] 141[1459,1] 142[1460,3] 143[1463,2] 144[1465,3] 145[1468,1] 146[1469,2] 147[1471,2] 148[1473,1] 149[1474,1] 150[1475,1] 151[1476,1] 152[1477,1] 153[1478,1] 154[1479,1] 155[1480,1] 156[1481,1] 157[1482,1] 158[1483,1] 159[1484,1] 160[1485,1] 161[1486,1] 162[1487,1] 163[1488,1] 164[1489,1] 165[1490,1] 166[1491,1] 167[1492,1] 168[1493,1] 169[1494,1] 170[1495,1] 171[1496,1] 172[1497,1] 173[1498,1] 174[1499,1] 175[1500,1] 176[1501,1] 177[1502,1] 178[1503,1] 179[1504,1] 180[1505,1] 181[1506,1] 182[1507,1] 183[1508,1] 184[1509,1] 185[1510,1] 186[1511,1] 187[1512,1] 188[1513,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 148 151 152 153 154 155
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 148 151 152 153 154 155
;; live  kill	 24 [cc]
;; rd  in  	(10)
22, 45, 62, 76, 77, 90, 91, 104, 236, 237
;; rd  gen 	(7)
234, 1473, 1476, 1477, 1478, 1479, 1480
;; rd  kill	(29)
213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 1473, 1476, 1477, 1478, 1479, 1480

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 4 9 5 2 arch/arm/mm/dma-mapping.c:419 (set (reg/v/f:SI 151 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:419 (set (reg/v:SI 152 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/dma-mapping.c:419 (set (reg/v/f:SI 153 [ cpu_addr ])
        (reg:SI 2 r2 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/dma-mapping.c:419 (set (reg/v:SI 154 [ handle ])
        (reg:SI 3 r3 [ handle ])) 167 {*arm_movsi_insn} (nil))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:131 (parallel [
            (set (reg/v:SI 148 [ _flags ])
                (asm_operands/v:SI ("	mrs	%0, cpsr	@ local_save_flags") ("=r") 0 []
                     [] 1118080))
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 12 11 13 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:SI 155)
        (and:SI (reg/v:SI 148 [ _flags ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (nil))

(insn 13 12 14 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 155)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:151 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 153 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 153 154
;; rd  out 	(17)
22, 45, 62, 76, 77, 90, 91, 104, 234, 236, 237, 1473, 1476, 1477, 1478, 1479, 1480


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 153 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 153 154
;; live  gen 	 0 [r0] 1 [r1] 156
;; live  kill	 14 [lr]
;; rd  in  	(17)
22, 45, 62, 76, 77, 90, 91, 104, 234, 236, 237, 1473, 1476, 1477, 1478, 1479, 1480
;; rd  gen 	(1)
1481
;; rd  kill	(14)
92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 1481

;; Pred edge  2 [0.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 arch/arm/mm/dma-mapping.c:420 discrim 1 (set (reg/f:SI 156)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 3 arch/arm/mm/dma-mapping.c:420 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 156)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
        (nil)))

(insn 18 17 19 3 arch/arm/mm/dma-mapping.c:420 discrim 1 (set (reg:SI 1 r1)
        (const_int 420 [0x1a4])) 167 {*arm_movsi_insn} (nil))

(call_insn 19 18 20 3 arch/arm/mm/dma-mapping.c:420 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a67280 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 153 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 153 154
;; rd  out 	(17)
22, 45, 62, 76, 77, 90, 91, 234, 236, 237, 1473, 1476, 1477, 1478, 1479, 1480, 1481


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 153 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152
;; lr  def 	 146 147 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 153 154
;; live  gen 	 146 147 157
;; live  kill	
;; rd  in  	(18)
22, 45, 62, 76, 77, 90, 91, 104, 234, 236, 237, 1473, 1476, 1477, 1478, 1479, 1480, 1481
;; rd  gen 	(3)
1470, 1472, 1482
;; rd  kill	(5)
1469, 1470, 1471, 1472, 1482

;; Pred edge  2 [100.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 20 19 21 4 124 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 include/asm-generic/getorder.h:13 (set (reg:SI 157)
        (plus:SI (reg/v:SI 152 [ size ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 23 22 24 4 include/asm-generic/getorder.h:13 (set (reg/v:SI 147 [ size ])
        (lshiftrt:SI (reg:SI 157)
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (nil))

(insn 24 23 28 4 include/asm-generic/getorder.h:14 (set (reg/v:SI 146 [ order ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 151 152 153 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 151 152 153 154
;; rd  out 	(21)
22, 45, 62, 76, 77, 90, 91, 104, 234, 236, 237, 1470, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 151 152 153 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  def 	 24 [cc] 146 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 151 152 153 154
;; live  gen 	 24 [cc] 146 147
;; live  kill	
;; rd  in  	(24)
22, 45, 62, 76, 77, 90, 91, 104, 232, 234, 236, 237, 1469, 1470, 1471, 1472, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482
;; rd  gen 	(3)
232, 1469, 1471
;; rd  kill	(27)
213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 1469, 1470, 1471, 1472

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  5 [86.0%]  (dfs_back)
(code_label 28 24 25 5 125 "" [1 uses])

(note 25 28 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 5 include/asm-generic/getorder.h:16 (set (reg/v:SI 147 [ size ])
        (lshiftrt:SI (reg/v:SI 147 [ size ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 27 26 29 5 include/asm-generic/getorder.h:17 (set (reg/v:SI 146 [ order ])
        (plus:SI (reg/v:SI 146 [ order ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 29 27 30 5 include/asm-generic/getorder.h:18 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 30 29 31 5 include/asm-generic/getorder.h:18 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 5 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 151 152 153 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147 151 152 153 154
;; rd  out 	(21)
22, 45, 62, 76, 77, 90, 91, 104, 232, 236, 237, 1469, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482


;; Succ edge  5 [86.0%]  (dfs_back)
;; Succ edge  6 [14.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 151 152 153 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 151 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 151 152 153 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 150
;; live  kill	 14 [lr]
;; rd  in  	(21)
22, 45, 62, 76, 77, 90, 91, 104, 232, 236, 237, 1469, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482
;; rd  gen 	(3)
18, 230, 1475
;; rd  kill	(60)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 1475

;; Pred edge  5 [14.0%]  (fallthru)
(note 31 30 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 31 33 6 arch/arm/mm/dma-mapping.c:422 (set (reg:SI 0 r0)
        (reg/v/f:SI 151 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 6 arch/arm/mm/dma-mapping.c:422 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ order ])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 6 arch/arm/mm/dma-mapping.c:422 (set (reg:SI 2 r2)
        (reg/v/f:SI 153 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 35 34 36 6 arch/arm/mm/dma-mapping.c:422 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dma_release_from_coherent") [flags 0x41] <function_decl 0x11060400 dma_release_from_coherent>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 36 35 37 6 arch/arm/mm/dma-mapping.c:422 (set (reg:SI 150 [ D.24658 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 6 arch/arm/mm/dma-mapping.c:422 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150 [ D.24658 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 38 37 39 6 arch/arm/mm/dma-mapping.c:422 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 175)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 6 -> ( 24 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 152 153 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154
;; rd  out 	(21)
18, 45, 62, 76, 77, 90, 91, 230, 236, 237, 1469, 1471, 1473, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482


;; Succ edge  24 [61.0%] 
;; Succ edge  7 [39.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 141 149 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153 154
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 136 141 149 158 159 160
;; live  kill	 14 [lr]
;; rd  in  	(21)
18, 45, 62, 76, 77, 90, 91, 230, 236, 237, 1469, 1471, 1473, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482
;; rd  gen 	(8)
16, 228, 1453, 1459, 1474, 1483, 1484, 1485
;; rd  kill	(65)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 1453, 1459, 1474, 1483, 1484, 1485

;; Pred edge  6 [39.0%]  (fallthru)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 7 arch/arm/mm/dma-mapping.c:425 (set (reg:SI 158)
        (plus:SI (reg/v:SI 152 [ size ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 41 40 42 7 arch/arm/mm/dma-mapping.c:425 (set (reg:SI 149 [ D.24661 ])
        (plus:SI (reg:SI 158)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 152 [ size ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 42 41 43 7 arch/arm/mm/dma-mapping.c:425 (set (reg:SI 159)
        (and:SI (reg:SI 149 [ D.24661 ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 43 42 44 7 arch/arm/mm/dma-mapping.c:425 (set (reg/v:SI 136 [ size.823 ])
        (and:SI (reg:SI 159)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 149 [ D.24661 ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 44 43 45 7 arch/arm/mm/dma-mapping.c:259 (set (reg/f:SI 160)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 7 arch/arm/mm/dma-mapping.c:259 (set (reg:SI 0 r0)
        (reg/f:SI 160)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 46 45 47 7 arch/arm/mm/dma-mapping.c:259 (set (reg:SI 1 r1)
        (reg/v/f:SI 153 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 47 46 48 7 arch/arm/mm/dma-mapping.c:259 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arm_vmregion_find_remove") [flags 0x41] <function_decl 0x11440d00 arm_vmregion_find_remove>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 48 47 49 7 arch/arm/mm/dma-mapping.c:259 (set (reg/v/f:SI 141 [ c ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 arch/arm/mm/dma-mapping.c:260 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 141 [ c ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 7 arch/arm/mm/dma-mapping.c:260 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 153 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 153 154
;; rd  out 	(27)
16, 45, 62, 76, 77, 90, 91, 228, 236, 237, 1453, 1459, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485


;; Succ edge  8 [0.0%]  (fallthru)
;; Succ edge  9 [100.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 153 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 161 162 163
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 153 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 161 162 163
;; live  kill	 14 [lr]
;; rd  in  	(27)
16, 45, 62, 76, 77, 90, 91, 228, 236, 237, 1453, 1459, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485
;; rd  gen 	(3)
1486, 1487, 1488
;; rd  kill	(16)
92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 1486, 1487, 1488

;; Pred edge  7 [0.0%]  (fallthru)
(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 8 arch/arm/mm/dma-mapping.c:261 (set (reg/f:SI 161)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114ecc80>)) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 8 arch/arm/mm/dma-mapping.c:261 (set (reg/f:SI 162)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 54 53 55 8 arch/arm/mm/dma-mapping.c:261 (set (reg/f:SI 163)
        (plus:SI (reg/f:SI 162)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 55 54 56 8 arch/arm/mm/dma-mapping.c:261 (set (reg:SI 0 r0)
        (reg/f:SI 161)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x114ecc80>)
        (nil)))

(insn 56 55 57 8 arch/arm/mm/dma-mapping.c:261 (set (reg:SI 1 r1)
        (reg/f:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 57 56 58 8 arch/arm/mm/dma-mapping.c:261 (set (reg:SI 2 r2)
        (reg/v/f:SI 153 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 58 57 59 8 arch/arm/mm/dma-mapping.c:261 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(call_insn 59 58 62 8 arch/arm/mm/dma-mapping.c:263 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 8 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 154
;; rd  out 	(30)
16, 45, 62, 76, 77, 90, 91, 228, 236, 237, 1453, 1459, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141
;; lr  def 	 24 [cc] 139 164 165
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 154
;; live  gen 	 24 [cc] 139 164 165
;; live  kill	
;; rd  in  	(27)
16, 45, 62, 76, 77, 90, 91, 228, 236, 237, 1453, 1459, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485
;; rd  gen 	(4)
225, 1457, 1489, 1490
;; rd  kill	(26)
213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 1457, 1489, 1490

;; Pred edge  7 [100.0%] 
(code_label 62 59 63 9 127 "" [1 uses])

(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 9 arch/arm/mm/dma-mapping.c:267 (set (reg:SI 164 [ <variable>.vm_end ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 12 [0xc])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 65 64 66 9 arch/arm/mm/dma-mapping.c:267 (set (reg:SI 165 [ <variable>.vm_start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 9 arch/arm/mm/dma-mapping.c:267 (set (reg:SI 139 [ D.25252 ])
        (minus:SI (reg:SI 164 [ <variable>.vm_end ])
            (reg:SI 165 [ <variable>.vm_start ]))) 28 {*arm_subsi3_insn} (nil))

(insn 67 66 68 9 arch/arm/mm/dma-mapping.c:267 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.25252 ])
            (reg/v:SI 136 [ size.823 ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 68 67 69 9 arch/arm/mm/dma-mapping.c:267 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 73)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 9 -> ( 11 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141 154
;; rd  out 	(30)
16, 45, 62, 76, 77, 90, 91, 225, 236, 237, 1453, 1457, 1459, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490


;; Succ edge  11 [0.0%] 
;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 154
;; live  gen 	 135
;; live  kill	
;; rd  in  	(30)
16, 45, 62, 76, 77, 90, 91, 225, 236, 237, 1453, 1457, 1459, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490
;; rd  gen 	(1)
1452
;; rd  kill	(3)
1450, 1451, 1452

;; Pred edge  9 [100.0%]  (fallthru)
(note 69 68 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 73 10 arch/arm/mm/dma-mapping.c:267 (set (reg/v:SI 135 [ size.827 ])
        (reg/v:SI 136 [ size.823 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 154
;; rd  out 	(31)
16, 45, 62, 76, 77, 90, 91, 225, 236, 237, 1452, 1453, 1457, 1459, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 166 167 168 169 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 139 141 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135 166 167 168 169 170
;; live  kill	 14 [lr]
;; rd  in  	(30)
16, 45, 62, 76, 77, 90, 91, 225, 236, 237, 1453, 1457, 1459, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490
;; rd  gen 	(6)
1451, 1491, 1492, 1493, 1494, 1495
;; rd  kill	(21)
92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 1450, 1451, 1452, 1491, 1492, 1493, 1494, 1495

;; Pred edge  9 [0.0%] 
(code_label 73 70 74 11 129 "" [1 uses])

(note 74 73 75 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 11 arch/arm/mm/dma-mapping.c:268 (set (reg/f:SI 166)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114ecd20>)) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 11 arch/arm/mm/dma-mapping.c:268 (set (reg/f:SI 167)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 78 11 arch/arm/mm/dma-mapping.c:268 (set (reg/f:SI 168)
        (plus:SI (reg/f:SI 167)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 78 77 79 11 arch/arm/mm/dma-mapping.c:268 (set (reg:SI 0 r0)
        (reg/f:SI 166)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x114ecd20>)
        (nil)))

(insn 79 78 80 11 arch/arm/mm/dma-mapping.c:268 (set (reg:SI 1 r1)
        (reg/f:SI 168)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 80 79 81 11 arch/arm/mm/dma-mapping.c:268 (set (reg:SI 2 r2)
        (reg:SI 139 [ D.25252 ])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 11 arch/arm/mm/dma-mapping.c:268 (set (reg:SI 3 r3)
        (reg/v:SI 136 [ size.823 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 82 81 83 11 arch/arm/mm/dma-mapping.c:268 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(call_insn 83 82 84 11 arch/arm/mm/dma-mapping.c:270 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 84 83 85 11 arch/arm/mm/dma-mapping.c:271 (set (reg:SI 169 [ <variable>.vm_end ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 12 [0xc])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 85 84 86 11 arch/arm/mm/dma-mapping.c:271 (set (reg:SI 170 [ <variable>.vm_start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 11 arch/arm/mm/dma-mapping.c:271 (set (reg/v:SI 135 [ size.827 ])
        (minus:SI (reg:SI 169 [ <variable>.vm_end ])
            (reg:SI 170 [ <variable>.vm_start ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 154
;; rd  out 	(36)
16, 45, 62, 76, 77, 90, 91, 225, 236, 237, 1451, 1453, 1457, 1459, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 140 142 143 144 171 172 173 174 175 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 154
;; live  gen 	 140 142 143 144 171 172 173 174 175 176
;; live  kill	
;; rd  in  	(37)
16, 45, 62, 76, 77, 90, 91, 225, 236, 237, 1451, 1452, 1453, 1457, 1459, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495
;; rd  gen 	(10)
1458, 1462, 1464, 1467, 1496, 1497, 1498, 1499, 1500, 1501
;; rd  kill	(15)
1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1496, 1497, 1498, 1499, 1500, 1501

;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 87 86 88 12 130 "" [0 uses])

(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 12 arch/arm/mm/dma-mapping.c:274 (set (reg:SI 171 [ <variable>.vm_start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 90 89 91 12 arch/arm/mm/dma-mapping.c:274 (set (reg:SI 140 [ D.25251 ])
        (plus:SI (reg:SI 171 [ <variable>.vm_start ])
            (const_int 16777216 [0x1000000]))) 4 {*arm_addsi3} (nil))

(insn 91 90 92 12 arch/arm/mm/dma-mapping.c:274 (set (reg/v:SI 143 [ idx ])
        (lshiftrt:SI (reg:SI 140 [ D.25251 ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 92 91 93 12 arch/arm/mm/dma-mapping.c:275 (set (reg:SI 172)
        (lshiftrt:SI (reg:SI 140 [ D.25251 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 93 92 94 12 arch/arm/mm/dma-mapping.c:275 (set (reg:SI 173)
        (ashift:SI (reg:SI 172)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 94 93 95 12 arch/arm/mm/dma-mapping.c:275 (set (reg/v:SI 144 [ off ])
        (lshiftrt:SI (reg:SI 173)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 172)
            (const_int 511 [0x1ff]))
        (nil)))

(insn 95 94 96 12 arch/arm/mm/dma-mapping.c:276 (set (reg/f:SI 174)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 12 arch/arm/mm/dma-mapping.c:276 (set (reg:SI 175)
        (ashift:SI (reg/v:SI 144 [ off ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 97 96 98 12 arch/arm/mm/dma-mapping.c:276 (set (reg/f:SI 176)
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 143 [ idx ])
                    (const_int 4 [0x4]))
                (reg/f:SI 174)) [0 consistent_pte S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 98 97 137 12 arch/arm/mm/dma-mapping.c:276 (set (reg/v/f:SI 142 [ ptep ])
        (plus:SI (reg/f:SI 176)
            (reg:SI 175))) 4 {*arm_addsi3} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; rd  out 	(47)
16, 45, 62, 76, 77, 90, 91, 225, 236, 237, 1451, 1452, 1453, 1457, 1458, 1459, 1462, 1464, 1467, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 19) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 145
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 144 145
;; live  kill	 14 [lr]
;; rd  in  	(61)
6, 16, 45, 62, 76, 77, 90, 91, 217, 225, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506
;; rd  gen 	(3)
221, 1466, 1468
;; rd  kill	(40)
92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 1465, 1466, 1467, 1468

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  19 [86.0%]  (dfs_back)
(code_label 137 98 99 13 135 "" [1 uses])

(note 99 137 100 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 101 13 include/asm-generic/pgtable.h:76 (set (reg/v:SI 145 [ pte ])
        (mem:SI (reg/v/f:SI 142 [ ptep ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 101 100 102 13 include/asm-generic/pgtable.h:77 (set (reg:SI 0 r0)
        (reg/v/f:SI 142 [ ptep ])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 13 include/asm-generic/pgtable.h:77 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 103 102 104 13 include/asm-generic/pgtable.h:77 (set (reg:SI 2 r2)
        (reg:SI 1 r1)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 104 103 105 13 include/asm-generic/pgtable.h:77 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_set_pte_ext") [flags 0x41] <function_decl 0x10e63d00 cpu_v7_set_pte_ext>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 105 104 106 13 arch/arm/mm/dma-mapping.c:283 (set (reg/v:SI 144 [ off ])
        (plus:SI (reg/v:SI 144 [ off ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 106 105 107 13 arch/arm/mm/dma-mapping.c:284 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ off ])
            (const_int 512 [0x200]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 107 106 108 13 arch/arm/mm/dma-mapping.c:284 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 13 -> ( 15 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; rd  out 	(58)
6, 16, 45, 62, 76, 77, 90, 91, 221, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506


;; Succ edge  15 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u143(11){ }u144(13){ }u145(25){ }u146(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; live  gen 	 142
;; live  kill	
;; rd  in  	(58)
6, 16, 45, 62, 76, 77, 90, 91, 221, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506
;; rd  gen 	(1)
1461
;; rd  kill	(3)
1460, 1461, 1462

;; Pred edge  13 [50.0%]  (fallthru)
(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 112 14 arch/arm/mm/dma-mapping.c:281 (set (reg/v/f:SI 142 [ ptep ])
        (plus:SI (reg/v/f:SI 142 [ ptep ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; rd  out 	(56)
6, 16, 45, 62, 76, 77, 90, 91, 221, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1461, 1463, 1464, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 143 145 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 142 143 144 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 143 145 154
;; live  gen 	 142 143 144 177
;; live  kill	
;; rd  in  	(58)
6, 16, 45, 62, 76, 77, 90, 91, 221, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506
;; rd  gen 	(4)
1460, 1463, 1465, 1502
;; rd  kill	(9)
1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1502

;; Pred edge  13 [50.0%] 
(code_label 112 109 113 15 131 "" [1 uses])

(note 113 112 114 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 15 arch/arm/mm/dma-mapping.c:286 (set (reg/v:SI 143 [ idx ])
        (plus:SI (reg/v:SI 143 [ idx ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 115 114 116 15 arch/arm/mm/dma-mapping.c:286 (set (reg/f:SI 177)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 15 arch/arm/mm/dma-mapping.c:286 (set (reg/v/f:SI 142 [ ptep ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 143 [ idx ])
                    (const_int 4 [0x4]))
                (reg/f:SI 177)) [0 consistent_pte S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 117 116 118 15 arch/arm/mm/dma-mapping.c:285 (set (reg/v:SI 144 [ off ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; rd  out 	(55)
6, 16, 45, 62, 76, 77, 90, 91, 221, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1463, 1465, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u155(11){ }u156(13){ }u157(25){ }u158(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(58)
6, 16, 45, 62, 76, 77, 90, 91, 221, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506
;; rd  gen 	(1)
220
;; rd  kill	(23)
213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%]  (fallthru)
(code_label 118 117 119 16 132 "" [0 uses])

(note 119 118 120 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 16 arch/arm/mm/dma-mapping.c:289 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 145 [ pte ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 121 120 122 16 arch/arm/mm/dma-mapping.c:289 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 126)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 16 -> ( 18 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; rd  out 	(58)
6, 16, 45, 62, 76, 77, 90, 91, 220, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506


;; Succ edge  18 [0.0%] 
;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 145 154
;; live  gen 	 24 [cc] 178
;; live  kill	
;; rd  in  	(58)
6, 16, 45, 62, 76, 77, 90, 91, 220, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506
;; rd  gen 	(2)
219, 1503
;; rd  kill	(24)
213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 1503

;; Pred edge  16 [100.0%]  (fallthru)
(note 122 121 123 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 17 arch/arm/mm/dma-mapping.c:289 discrim 1 (set (reg:SI 178)
        (and:SI (reg/v:SI 145 [ pte ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (nil))

(insn 124 123 125 17 arch/arm/mm/dma-mapping.c:289 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 125 124 126 17 arch/arm/mm/dma-mapping.c:289 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 134)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; rd  out 	(58)
6, 16, 45, 62, 76, 77, 90, 91, 219, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506


;; Succ edge  18 [0.0%]  (fallthru)
;; Succ edge  19 [100.0%] 

;; Start of basic block ( 16 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 179 180 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; live  gen 	 0 [r0] 1 [r1] 179 180 181
;; live  kill	 14 [lr]
;; rd  in  	(59)
6, 16, 45, 62, 76, 77, 90, 91, 219, 220, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506
;; rd  gen 	(4)
6, 1504, 1505, 1506
;; rd  kill	(39)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 1504, 1505, 1506

;; Pred edge  16 [0.0%] 
;; Pred edge  17 [0.0%]  (fallthru)
(code_label 126 125 127 18 133 "" [1 uses])

(note 127 126 128 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 129 18 arch/arm/mm/dma-mapping.c:290 (set (reg/f:SI 179)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114f1ac0>)) 167 {*arm_movsi_insn} (nil))

(insn 129 128 130 18 arch/arm/mm/dma-mapping.c:290 (set (reg/f:SI 180)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 18 arch/arm/mm/dma-mapping.c:290 (set (reg/f:SI 181)
        (plus:SI (reg/f:SI 180)
            (const_int 16 [0x10]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(insn 131 130 132 18 arch/arm/mm/dma-mapping.c:290 (set (reg:SI 0 r0)
        (reg/f:SI 179)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x114f1ac0>)
        (nil)))

(insn 132 131 133 18 arch/arm/mm/dma-mapping.c:290 (set (reg:SI 1 r1)
        (reg/f:SI 181)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 16 [0x10])))
        (nil)))

(call_insn 133 132 134 18 arch/arm/mm/dma-mapping.c:290 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; rd  out 	(58)
6, 45, 62, 76, 77, 90, 91, 219, 220, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 17 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; live  gen 	 24 [cc] 135
;; live  kill	
;; rd  in  	(59)
6, 16, 45, 62, 76, 77, 90, 91, 219, 220, 236, 237, 1450, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506
;; rd  gen 	(2)
217, 1450
;; rd  kill	(26)
213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 1450, 1451, 1452

;; Pred edge  17 [100.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 134 133 135 19 134 "" [1 uses])

(note 135 134 136 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 136 135 138 19 arch/arm/mm/dma-mapping.c:292 (set (reg/v:SI 135 [ size.827 ])
        (plus:SI (reg/v:SI 135 [ size.827 ])
            (const_int -4096 [0xfffffffffffff000]))) 4 {*arm_addsi3} (nil))

(insn 138 136 139 19 arch/arm/mm/dma-mapping.c:292 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ size.827 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 139 138 140 19 arch/arm/mm/dma-mapping.c:292 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 137)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 19 -> ( 13 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 141 142 143 144 154
;; rd  out 	(56)
6, 16, 45, 62, 76, 77, 90, 91, 217, 236, 237, 1450, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506


;; Succ edge  13 [86.0%]  (dfs_back)
;; Succ edge  20 [14.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u185(11){ }u186(13){ }u187(25){ }u188(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 182
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 141 154
;; live  gen 	 0 [r0] 1 [r1] 182
;; live  kill	 14 [lr]
;; rd  in  	(56)
6, 16, 45, 62, 76, 77, 90, 91, 217, 236, 237, 1450, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506
;; rd  gen 	(1)
1507
;; rd  kill	(14)
92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 1507

;; Pred edge  19 [14.0%]  (fallthru)
(note 140 139 141 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 20 arch/arm/mm/dma-mapping.c:294 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 142 141 143 20 arch/arm/mm/dma-mapping.c:294 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 12 [0xc])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 143 142 144 20 arch/arm/mm/dma-mapping.c:294 (parallel [
            (call (mem:SI (symbol_ref:SI ("flush_tlb_kernel_range") [flags 0x41] <function_decl 0x11440480 flush_tlb_kernel_range>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 144 143 145 20 arch/arm/mm/dma-mapping.c:296 (set (reg/f:SI 182)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 145 144 146 20 arch/arm/mm/dma-mapping.c:296 (set (reg:SI 0 r0)
        (reg/f:SI 182)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 146 145 147 20 arch/arm/mm/dma-mapping.c:296 (set (reg:SI 1 r1)
        (reg/v/f:SI 141 [ c ])) 167 {*arm_movsi_insn} (nil))

(call_insn 147 146 148 20 arch/arm/mm/dma-mapping.c:296 (parallel [
            (call (mem:SI (symbol_ref:SI ("arm_vmregion_free") [flags 0x41] <function_decl 0x11440d80 arm_vmregion_free>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 154
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 154
;; rd  out 	(57)
6, 16, 45, 62, 76, 77, 90, 91, 217, 236, 237, 1450, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 20 8) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 154
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 154
;; lr  def 	 137 138 183 184 185 186 187 188
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 154
;; live  gen 	 137 138 183 184 185 186 187 188
;; live  kill	
;; rd  in  	(61)
6, 16, 45, 62, 76, 77, 90, 91, 217, 228, 236, 237, 1450, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507
;; rd  gen 	(8)
1454, 1456, 1508, 1509, 1510, 1511, 1512, 1513
;; rd  kill	(9)
1454, 1455, 1456, 1508, 1509, 1510, 1511, 1512, 1513

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 148 147 149 21 128 "" [0 uses])

(note 149 148 150 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 21 arch/arm/mm/dma-mapping.c:430 (set (reg/f:SI 183)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 21 arch/arm/mm/dma-mapping.c:430 (set (reg:SI 184)
        (lshiftrt:SI (reg/v:SI 154 [ handle ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 152 151 153 21 arch/arm/mm/dma-mapping.c:430 (set (reg:SI 185)
        (ashift:SI (reg:SI 184)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 153 152 154 21 arch/arm/mm/dma-mapping.c:430 (set (reg/f:SI 186 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 183) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 154 153 155 21 arch/arm/mm/dma-mapping.c:430 (set (reg/v/f:SI 138 [ page ])
        (plus:SI (reg/f:SI 186 [ mem_map ])
            (reg:SI 185))) 4 {*arm_addsi3} (nil))

(insn 155 154 156 21 arch/arm/mm/dma-mapping.c:111 (set (reg:SI 187)
        (lshiftrt:SI (reg/v:SI 136 [ size.823 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 156 155 157 21 arch/arm/mm/dma-mapping.c:111 (set (reg:SI 188)
        (ashift:SI (reg:SI 187)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 157 156 167 21 arch/arm/mm/dma-mapping.c:111 (set (reg/v/f:SI 137 [ e ])
        (plus:SI (reg/v/f:SI 138 [ page ])
            (reg:SI 188))) 4 {*arm_addsi3} (nil))
;; End of basic block 21 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(69)
6, 16, 45, 62, 76, 77, 90, 91, 217, 228, 236, 237, 1450, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 23) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 0 [r0] 1 [r1] 138
;; live  kill	 14 [lr]
;; rd  in  	(69)
6, 16, 45, 62, 76, 77, 90, 91, 213, 236, 237, 1450, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513
;; rd  gen 	(1)
1455
;; rd  kill	(15)
92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 1455, 1456

;; Pred edge  23 [91.0%] 
(code_label 167 157 160 22 137 "" [1 uses])

(note 160 167 161 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 162 22 arch/arm/mm/dma-mapping.c:114 (set (reg:SI 0 r0)
        (reg/v/f:SI 138 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 162 161 163 22 arch/arm/mm/dma-mapping.c:114 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 163 162 164 22 arch/arm/mm/dma-mapping.c:114 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10cd6800 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 164 163 165 22 arch/arm/mm/dma-mapping.c:115 (set (reg/v/f:SI 138 [ page ])
        (plus:SI (reg/v/f:SI 138 [ page ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(68)
6, 16, 45, 62, 76, 77, 90, 91, 213, 236, 237, 1450, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513


;; Succ edge  23 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u221(11){ }u222(13){ }u223(25){ }u224(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(71)
6, 16, 45, 62, 76, 77, 90, 91, 213, 217, 228, 236, 237, 1450, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513
;; rd  gen 	(1)
213
;; rd  kill	(23)
213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  22 [100.0%]  (fallthru,dfs_back)
(code_label 165 164 166 23 136 "" [0 uses])

(note 166 165 168 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 168 166 169 23 arch/arm/mm/dma-mapping.c:113 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 138 [ page ])
            (reg/v/f:SI 137 [ e ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 169 168 175 23 arch/arm/mm/dma-mapping.c:113 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 167)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 23 -> ( 22 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137 138
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138
;; rd  out 	(69)
6, 16, 45, 62, 76, 77, 90, 91, 213, 236, 237, 1450, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513


;; Succ edge  22 [91.0%] 
;; Succ edge  24 [9.0%]  (fallthru)

;; Start of basic block ( 23 6) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u228(11){ }u229(13){ }u230(25){ }u231(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(71)
6, 16, 18, 45, 62, 76, 77, 90, 91, 213, 230, 236, 237, 1450, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  23 [9.0%]  (fallthru)
;; Pred edge  6 [61.0%] 
(code_label 175 169 178 24 138 "" [1 uses])

(note 178 175 0 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 24 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(71)
6, 16, 18, 45, 62, 76, 77, 90, 91, 213, 230, 236, 237, 1450, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dma_mmap (dma_mmap)[0:1280]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 6 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 1 }
;; 6 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 9 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 9 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 9 count 12 (  1.7)

In insn 13, replacing
 (reg/f:SI 146)
 with (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
Changes to insn 13 not profitable

In insn 54, replacing
 (reg/v:SI 137 [ ret ])
 with (const_int -6 [0xfffffffffffffffa])
Changes to insn 54 not profitable

In insn 58, replacing
 (reg/v:SI 137 [ ret ])
 with (const_int -6 [0xfffffffffffffffa])
Changes to insn 58 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 54.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



dma_mmap

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,3u} r2={4d,2u} r3={4d,1u} r11={1d,6u} r12={3d} r13={1d,8u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={5d,3u} r25={1d,6u} r26={1d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,3u} r134={1d,4u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r138={1d,1u} r139={1d,1u} r140={1d} r142={1d,6u} r143={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u,1d} r154={1d,1u} r155={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} 
;;    total ref usage 355{277d,77u,1e} in 40{38 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252
0[0,6] 1[6,5] 2[11,4] 3[15,4] 11[19,1] 12[20,3] 13[23,1] 14[24,2] 15[26,2] 16[28,2] 17[30,2] 18[32,2] 19[34,2] 20[36,2] 21[38,2] 22[40,2] 23[42,2] 24[44,5] 25[49,1] 26[50,1] 27[51,2] 28[53,2] 29[55,2] 30[57,2] 31[59,2] 32[61,2] 33[63,2] 34[65,2] 35[67,2] 36[69,2] 37[71,2] 38[73,2] 39[75,2] 40[77,2] 41[79,2] 42[81,2] 43[83,2] 44[85,2] 45[87,2] 46[89,2] 47[91,2] 48[93,2] 49[95,2] 50[97,2] 51[99,2] 52[101,2] 53[103,2] 54[105,2] 55[107,2] 56[109,2] 57[111,2] 58[113,2] 59[115,2] 60[117,2] 61[119,2] 62[121,2] 63[123,2] 64[125,2] 65[127,2] 66[129,2] 67[131,2] 68[133,2] 69[135,2] 70[137,2] 71[139,2] 72[141,2] 73[143,2] 74[145,2] 75[147,2] 76[149,2] 77[151,2] 78[153,2] 79[155,2] 80[157,2] 81[159,2] 82[161,2] 83[163,2] 84[165,2] 85[167,2] 86[169,2] 87[171,2] 88[173,2] 89[175,2] 90[177,2] 91[179,2] 92[181,2] 93[183,2] 94[185,2] 95[187,2] 96[189,2] 97[191,2] 98[193,2] 99[195,2] 100[197,2] 101[199,2] 102[201,2] 103[203,2] 104[205,2] 105[207,2] 106[209,2] 107[211,2] 108[213,2] 109[215,2] 110[217,2] 111[219,2] 112[221,2] 113[223,2] 114[225,2] 115[227,2] 116[229,2] 117[231,2] 118[233,2] 119[235,2] 120[237,2] 121[239,2] 122[241,2] 123[243,2] 124[245,2] 125[247,2] 126[249,2] 127[251,2] 133[253,1] 134[254,1] 135[255,1] 136[256,1] 137[257,1] 138[258,1] 139[259,1] 140[260,1] 142[261,1] 143[262,1] 146[263,1] 147[264,1] 148[265,1] 149[266,1] 150[267,1] 151[268,1] 152[269,1] 153[270,1] 154[271,1] 155[272,1] 157[273,1] 158[274,1] 159[275,1] 160[276,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 138 139 142 143 146
;; live  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 138 139 142 143 146
;; live  kill	 14 [lr]
;; rd  in  	(10)
5, 10, 14, 18, 19, 22, 23, 25, 49, 50
;; rd  gen 	(8)
3, 47, 254, 258, 259, 261, 262, 263
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 24, 25, 44, 45, 46, 47, 48, 254, 258, 259, 261, 262, 263

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 4 2 arch/arm/mm/dma-mapping.c:371 (set (reg/v/f:SI 142 [ vma ])
        (reg:SI 1 r1 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 7 2 arch/arm/mm/dma-mapping.c:371 (set (reg/v/f:SI 143 [ cpu_addr ])
        (reg:SI 2 r2 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(note 7 4 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/dma-mapping.c:377 (set (reg:SI 139 [ D.24577 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vma ])
                (const_int 8 [0x8])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:377 (set (reg:SI 138 [ D.24578 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:379 (set (reg/f:SI 146)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:379 (set (reg:SI 0 r0)
        (reg/f:SI 146)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 14 13 15 2 arch/arm/mm/dma-mapping.c:379 (set (reg:SI 1 r1)
        (reg/v/f:SI 143 [ cpu_addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 15 14 16 2 arch/arm/mm/dma-mapping.c:379 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arm_vmregion_find") [flags 0x41] <function_decl 0x11440c80 arm_vmregion_find>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 17 2 arch/arm/mm/dma-mapping.c:379 (set (reg/v/f:SI 134 [ c ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/dma-mapping.c:380 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ c ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 2 arch/arm/mm/dma-mapping.c:380 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8090 [0x1f9a])
        (nil)))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139 142
;; rd  out 	(16)
3, 10, 14, 18, 19, 22, 23, 47, 49, 50, 254, 258, 259, 261, 262, 263


;; Succ edge  3 [19.1%]  (fallthru)
;; Succ edge  6 [80.9%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; lr  def 	 24 [cc] 133 135 147 148 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 139 142
;; live  gen 	 24 [cc] 133 135 147 148 149
;; live  kill	
;; rd  in  	(16)
3, 10, 14, 18, 19, 22, 23, 47, 49, 50, 254, 258, 259, 261, 262, 263
;; rd  gen 	(6)
46, 253, 255, 264, 265, 266
;; rd  kill	(10)
44, 45, 46, 47, 48, 253, 255, 264, 265, 266

;; Pred edge  2 [19.1%]  (fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 arch/arm/mm/dma-mapping.c:381 (set (reg/v:SI 133 [ off ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vma ])
                (const_int 72 [0x48])) [0 <variable>.vm_pgoff+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 21 20 22 3 arch/arm/mm/dma-mapping.c:383 (set (reg:SI 148 [ <variable>.vm_end ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ c ])
                (const_int 12 [0xc])) [0 <variable>.vm_end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 22 21 23 3 arch/arm/mm/dma-mapping.c:383 (set (reg:SI 149 [ <variable>.vm_start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 134 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 arch/arm/mm/dma-mapping.c:383 (set (reg:SI 147)
        (minus:SI (reg:SI 148 [ <variable>.vm_end ])
            (reg:SI 149 [ <variable>.vm_start ]))) 28 {*arm_subsi3_insn} (nil))

(insn 24 23 25 3 arch/arm/mm/dma-mapping.c:383 (set (reg/v:SI 135 [ kern_size ])
        (lshiftrt:SI (reg:SI 147)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 25 24 26 3 arch/arm/mm/dma-mapping.c:385 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 133 [ off ])
            (reg/v:SI 135 [ kern_size ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 26 25 27 3 arch/arm/mm/dma-mapping.c:385 (set (pc)
        (if_then_else (geu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
        (nil)))
;; End of basic block 3 -> ( 4 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 138 139 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138 139 142
;; rd  out 	(21)
3, 10, 14, 18, 19, 22, 23, 46, 49, 50, 253, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266


;; Succ edge  4 [4.0%]  (fallthru)
;; Succ edge  6 [96.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 135 138 139 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 135 138 139
;; lr  def 	 24 [cc] 136 150 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 135 138 139 142
;; live  gen 	 24 [cc] 136 150 151
;; live  kill	
;; rd  in  	(21)
3, 10, 14, 18, 19, 22, 23, 46, 49, 50, 253, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266
;; rd  gen 	(4)
45, 256, 267, 268
;; rd  kill	(8)
44, 45, 46, 47, 48, 256, 267, 268

;; Pred edge  3 [4.0%]  (fallthru)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 arch/arm/mm/dma-mapping.c:377 (set (reg:SI 150)
        (minus:SI (reg:SI 139 [ D.24577 ])
            (reg:SI 138 [ D.24578 ]))) 28 {*arm_subsi3_insn} (nil))

(insn 29 28 30 4 arch/arm/mm/dma-mapping.c:377 (set (reg/v:SI 136 [ user_size ])
        (lshiftrt:SI (reg:SI 150)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 30 29 31 4 arch/arm/mm/dma-mapping.c:386 (set (reg:SI 151)
        (minus:SI (reg/v:SI 135 [ kern_size ])
            (reg/v:SI 133 [ off ]))) 28 {*arm_subsi3_insn} (nil))

(insn 31 30 32 4 arch/arm/mm/dma-mapping.c:386 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ user_size ])
            (reg:SI 151))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 32 31 33 4 arch/arm/mm/dma-mapping.c:386 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 50)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 142
;; rd  out 	(24)
3, 10, 14, 18, 19, 22, 23, 45, 49, 50, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268


;; Succ edge  5 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 136 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 152 153 154 155 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 136 142
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 152 153 154 155 157 158 159 160
;; live  kill	
;; rd  in  	(24)
3, 10, 14, 18, 19, 22, 23, 45, 49, 50, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268
;; rd  gen 	(9)
1, 269, 270, 271, 272, 273, 274, 275, 276
;; rd  kill	(14)
0, 1, 2, 3, 4, 5, 269, 270, 271, 272, 273, 274, 275, 276

;; Pred edge  4 [39.0%]  (fallthru)
(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 5 arch/arm/mm/dma-mapping.c:387 (set (reg/f:SI 152)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 5 arch/arm/mm/dma-mapping.c:387 (set (reg/f:SI 154 [ <variable>.vm_pages ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 134 [ c ])
                (const_int 16 [0x10])) [0 <variable>.vm_pages+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 5 arch/arm/mm/dma-mapping.c:387 (set (reg/f:SI 155 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 152) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 153)
        (minus:SI (reg/f:SI 154 [ <variable>.vm_pages ])
            (reg/f:SI 155 [ mem_map ]))) 28 {*arm_subsi3_insn} (nil))

(insn 38 37 39 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 157)
        (ashiftrt:SI (reg:SI 153)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 153)
            (const_int 32 [0x20]))
        (nil)))

(insn 39 38 40 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 158)
        (plus:SI (reg:SI 157)
            (reg/v:SI 133 [ off ]))) 4 {*arm_addsi3} (nil))

(insn 40 39 41 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 159)
        (ashift:SI (reg/v:SI 136 [ user_size ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 41 40 42 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 160 [ <variable>.vm_page_prot ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vma ])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 43 5 arch/arm/mm/dma-mapping.c:387 (set (mem:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 160 [ <variable>.vm_page_prot ])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 0 r0)
        (reg/v/f:SI 142 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 44 43 45 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 142 [ vma ])
                (const_int 4 [0x4])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 2 r2)
        (reg:SI 158)) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 5 arch/arm/mm/dma-mapping.c:387 (set (reg:SI 3 r3)
        (reg:SI 159)) 167 {*arm_movsi_insn} (nil))

(call_insn/j 47 46 50 5 arch/arm/mm/dma-mapping.c:387 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("remap_pfn_range") [flags 0x41] <function_decl 0x10fb1200 remap_pfn_range>) [0 S4 A32])
                    (const_int 4 [0x4])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(32)
1, 10, 14, 18, 19, 22, 23, 45, 49, 50, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2 3 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 137 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 137 140
;; live  kill	
;; rd  in  	(26)
3, 10, 14, 18, 19, 22, 23, 45, 46, 47, 49, 50, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268
;; rd  gen 	(3)
0, 257, 260
;; rd  kill	(8)
0, 1, 2, 3, 4, 5, 257, 260

;; Pred edge  2 [80.9%] 
;; Pred edge  3 [96.0%] 
;; Pred edge  4 [61.0%] 
(code_label 50 47 51 6 144 "" [3 uses])

(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 58 6 arch/arm/mm/dma-mapping.c:372 (set (reg/v:SI 137 [ ret ])
        (const_int -6 [0xfffffffffffffffa])) 167 {*arm_movsi_insn} (nil))

(insn 58 52 64 6 arch/arm/mm/dma-mapping.c:396 (set (reg/i:SI 0 r0)
        (reg/v:SI 137 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -6 [0xfffffffffffffffa])
        (nil)))

(insn 64 58 0 6 arch/arm/mm/dma-mapping.c:396 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
0, 10, 14, 18, 19, 22, 23, 45, 46, 47, 49, 50, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 54.
ending the processing of deferred insns

;; Function dma_mmap_writecombine (dma_mmap_writecombine)[0:1282]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 18.
deferring deletion of insn with uid = 17.
deferring deletion of insn with uid = 16.
deferring deletion of insn with uid = 15.
deferring deletion of insn with uid = 5.
deferring deletion of insn with uid = 4.
deferring deletion of insn with uid = 2.
Deleted 7 trivially dead insns

Number of successful forward propagations: 0



dma_mmap_writecombine

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={3d,4u} r1={3d,3u} r2={3d,3u} r3={3d,3u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d} r136={1d,2u} r137={1d} r138={1d} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 168{138d,30u,0e} in 8{7 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,3] 11[12,1] 12[13,2] 13[15,1] 14[16,1] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 135[130,1] 136[131,1] 137[132,1] 138[133,1] 139[134,1] 140[135,1] 141[136,1] 142[137,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135 136 137 138 139 140 141 142
;; live  kill	
;; rd  in  	(10)
2, 5, 8, 11, 12, 14, 15, 16, 27, 28
;; rd  gen 	(9)
1, 130, 131, 132, 133, 134, 135, 136, 137
;; rd  kill	(11)
0, 1, 2, 130, 131, 132, 133, 134, 135, 136, 137

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 6 2 arch/arm/mm/dma-mapping.c:408 (set (reg/v/f:SI 136 [ vma ])
        (reg:SI 1 r1 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 6 3 7 2 arch/arm/mm/dma-mapping.c:408 (set (reg/v:SI 139 [ size ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/dma-mapping.c:409 (set (reg:SI 141 [ <variable>.vm_page_prot ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:409 (set (reg:SI 140)
        (and:SI (reg:SI 141 [ <variable>.vm_page_prot ])
            (const_int -61 [0xffffffffffffffc3]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:409 (set (reg:SI 142)
        (ior:SI (reg:SI 140)
            (const_int 4 [0x4]))) 89 {*arm_iorsi3} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:409 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 19 2 arch/arm/mm/dma-mapping.c:410 (set (mem:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 139 [ size ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 19 14 0 2 arch/arm/mm/dma-mapping.c:410 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dma_mmap") [flags 0x3] <function_decl 0x1145e500 dma_mmap>) [0 S4 A32])
                    (const_int 4 [0x4])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
1, 5, 8, 11, 12, 14, 15, 16, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
deleting insn with uid = 2.
deleting insn with uid = 4.
deleting insn with uid = 5.
deleting insn with uid = 15.
deleting insn with uid = 16.
deleting insn with uid = 17.
deleting insn with uid = 18.
ending the processing of deferred insns

;; Function dma_mmap_coherent (dma_mmap_coherent)[0:1281]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 18.
deferring deletion of insn with uid = 17.
deferring deletion of insn with uid = 16.
deferring deletion of insn with uid = 15.
deferring deletion of insn with uid = 5.
deferring deletion of insn with uid = 4.
deferring deletion of insn with uid = 2.
Deleted 7 trivially dead insns

Number of successful forward propagations: 0



dma_mmap_coherent

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp]
;;  ref usage 	r0={3d,4u} r1={3d,3u} r2={3d,3u} r3={3d,3u} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d} r136={1d,2u} r137={1d} r138={1d} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 168{138d,30u,0e} in 8{7 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,3] 3[9,3] 11[12,1] 12[13,2] 13[15,1] 14[16,1] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,1] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 135[130,1] 136[131,1] 137[132,1] 138[133,1] 139[134,1] 140[135,1] 141[136,1] 142[137,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 136 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 135 136 137 138 139 140 141 142
;; live  kill	
;; rd  in  	(10)
2, 5, 8, 11, 12, 14, 15, 16, 27, 28
;; rd  gen 	(9)
1, 130, 131, 132, 133, 134, 135, 136, 137
;; rd  kill	(11)
0, 1, 2, 130, 131, 132, 133, 134, 135, 136, 137

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 8 6 2 arch/arm/mm/dma-mapping.c:400 (set (reg/v/f:SI 136 [ vma ])
        (reg:SI 1 r1 [ vma ])) 167 {*arm_movsi_insn} (nil))

(insn 6 3 7 2 arch/arm/mm/dma-mapping.c:400 (set (reg/v:SI 139 [ size ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 size+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)

(insn 10 7 11 2 arch/arm/mm/dma-mapping.c:401 (set (reg:SI 141 [ <variable>.vm_page_prot ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:401 (set (reg:SI 140)
        (and:SI (reg:SI 141 [ <variable>.vm_page_prot ])
            (const_int -573 [0xfffffffffffffdc3]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:401 (set (reg:SI 142)
        (ior:SI (reg:SI 140)
            (const_int 516 [0x204]))) 89 {*arm_iorsi3} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:401 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 136 [ vma ])
                (const_int 20 [0x14])) [0 <variable>.vm_page_prot+0 S4 A32])
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(insn 14 13 19 2 arch/arm/mm/dma-mapping.c:402 (set (mem:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 139 [ size ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 19 14 0 2 arch/arm/mm/dma-mapping.c:402 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dma_mmap") [flags 0x3] <function_decl 0x1145e500 dma_mmap>) [0 S4 A32])
                    (const_int 4 [0x4])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(18)
1, 5, 8, 11, 12, 14, 15, 16, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

starting the processing of deferred insns
deleting insn with uid = 2.
deleting insn with uid = 4.
deleting insn with uid = 5.
deleting insn with uid = 15.
deleting insn with uid = 16.
deleting insn with uid = 17.
deleting insn with uid = 18.
ending the processing of deferred insns

;; Function __dma_alloc (__dma_alloc)[0:1277]

;; 5 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
;;
;; Loop 4
;;  header 33, latch 32
;;  depth 1, outer 0
;;  nodes: 33 32
;;
;; Loop 3
;;  header 24, latch 29
;;  depth 1, outer 0
;;  nodes: 24 29 28 26 27
;;
;; Loop 2
;;  header 16, latch 15
;;  depth 1, outer 0
;;  nodes: 16 15
;;
;; Loop 1
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 5 12 }
;; 5 succs { 6 7 }
;; 6 succs { 35 }
;; 7 succs { 8 9 }
;; 8 succs { 35 }
;; 9 succs { 12 10 }
;; 10 succs { 12 11 }
;; 11 succs { 13 }
;; 12 succs { 13 }
;; 13 succs { 34 14 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 15 17 }
;; 17 succs { 18 19 }
;; 18 succs { 19 }
;; 19 succs { 20 36 }
;; 20 succs { 36 }
;; 21 succs { 33 }
;; 22 succs { 23 33 }
;; 23 succs { 24 }
;; 24 succs { 25 26 }
;; 25 succs { }
;; 26 succs { 27 28 }
;; 27 succs { 28 }
;; 28 succs { 29 30 }
;; 29 succs { 24 }
;; 30 succs { 31 33 }
;; 31 succs { 35 }
;; 32 succs { 33 }
;; 33 succs { 32 34 }
;; 34 succs { 35 }
;; 35 succs { 1 }
;; 36 succs { 21 22 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 52 count 74 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 52 count 75 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 37 n_edges 52 count 79 (  2.1)

In insn 13, replacing
 (reg:SI 165)
 with (const_int -1 [0xffffffffffffffff])
Changes to insn 13 not recognized
 Setting REG_EQUAL note

In insn 20, replacing
 (reg:SI 165)
 with (const_int -1 [0xffffffffffffffff])
Changes to insn 20 not profitable

In insn 40, replacing
 (reg/f:SI 170)
 with (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x115c6b80>)
Changes to insn 40 not profitable

In insn 54, replacing
 (reg:DI 174)
 with (const_int 4294967295 [0xffffffff])
Changes to insn 54 not recognized
 Setting REG_EQUAL note

In insn 56, replacing
 (reg/f:SI 173)
 with (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x111f0060>)
Changes to insn 56 not profitable

In insn 88, replacing
 (reg/f:SI 175)
 with (const:SI (plus:SI (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)
            (const_int 2304 [0x900])))
Changes to insn 88 not profitable

In insn 102, replacing
 (ashift:SI (reg:SI 179)
        (reg/v:SI 153 [ order ]))
 with (ashift:SI (const_int 32 [0x20])
        (reg/v:SI 153 [ order ]))
Changes to insn 102 not recognized
 Setting REG_EQUAL note

In insn 152, replacing
 (plus:SI (reg/f:SI 188)
        (const_int 36 [0x24]))
 with (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (const_int 36 [0x24])))
Changes to insn 152 not profitable

In insn 153, replacing
 (reg/f:SI 187)
 with (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1150bec0>)
Changes to insn 153 not profitable

In insn 165, replacing
 (ashift:SI (reg:SI 193)
        (reg:SI 191))
 with (ashift:SI (const_int 1 [0x1])
        (reg:SI 191))
Changes to insn 165 not recognized
 Setting REG_EQUAL note

In insn 167, replacing
 (reg/f:SI 190)
 with (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
Changes to insn 167 not profitable

In insn 182, replacing
 (reg/f:SI 218)
 with (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
Changes to insn 182 not profitable

In insn 194, replacing
 (reg/f:SI 202)
 with (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
Changes to insn 194 not profitable


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 259.
deferring deletion of insn with uid = 182.
deferring deletion of insn with uid = 140.
deferring deletion of insn with uid = 124.
deferring deletion of insn with uid = 95.
deferring deletion of insn with uid = 84.
Deleted 6 trivially dead insns

Number of successful forward propagations: 0



__dma_alloc

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={31d,22u} r1={29d,14u} r2={20d,5u} r3={19d,4u} r11={1d,36u} r12={16d} r13={1d,52u} r14={16d,1u} r15={15d} r16={15d} r17={15d} r18={15d} r19={15d} r20={15d} r21={15d} r22={15d} r23={15d} r24={33d,17u} r25={1d,36u} r26={1d,36u,1d} r27={15d} r28={15d} r29={15d} r30={15d} r31={15d} r32={15d} r33={15d} r34={15d} r35={15d} r36={15d} r37={15d} r38={15d} r39={15d} r40={15d} r41={15d} r42={15d} r43={15d} r44={15d} r45={15d} r46={15d} r47={15d} r48={15d} r49={15d} r50={15d} r51={15d} r52={15d} r53={15d} r54={15d} r55={15d} r56={15d} r57={15d} r58={15d} r59={15d} r60={15d} r61={15d} r62={15d} r63={15d} r64={15d} r65={15d} r66={15d} r67={15d} r68={15d} r69={15d} r70={15d} r71={15d} r72={15d} r73={15d} r74={15d} r75={15d} r76={15d} r77={15d} r78={15d} r79={15d} r80={15d} r81={15d} r82={15d} r83={15d} r84={15d} r85={15d} r86={15d} r87={15d} r88={15d} r89={15d} r90={15d} r91={15d} r92={15d} r93={15d} r94={15d} r95={15d} r96={15d} r97={15d} r98={15d} r99={15d} r100={15d} r101={15d} r102={15d} r103={15d} r104={15d} r105={15d} r106={15d} r107={15d} r108={15d} r109={15d} r110={15d} r111={15d} r112={15d} r113={15d} r114={15d} r115={15d} r116={15d} r117={15d} r118={15d} r119={15d} r120={15d} r121={15d} r122={15d} r123={15d} r124={15d} r125={15d} r126={15d} r127={15d} r134={2d,2u} r135={1d,1u} r136={2d,3u} r137={2d,1u} r138={2d,9u} r139={1d,3u} r140={1d,2u} r141={1d,4u} r142={3d,3u} r143={2d,3u} r144={3d,3u} r145={1d,1u} r146={1d} r147={1d} r148={1d,2u} r149={1d,1u} r150={1d,5u} r151={1d,6u} r152={2d,4u} r153={2d,5u} r154={1d,2u} r155={1d,2u} r156={4d,3u} r157={2d,10u} r158={1d,1u,1d} r159={1d} r160={1d,4u} r161={1d,1u,1d} r162={1d,2u} r163={1d,1u} r164={1d,1u} r165={1d,2u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={2d,2u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u,1d} r197={1d,1u} r198={1d} r199={1d,1u} r200={1d,1u} r201={1d,3u} r202={1d,1u} r203={1d,1u} r204={1d,1u,1d} r205={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r212={1d,1u,1d} r213={1d,1u} r215={1d,1u} r216={1d,1u} r218={1d,3u} r219={1d,1u} 
;;    total ref usage 2288{1917d,365u,6e} in 182{167 regular + 15 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,31] 1[31,29] 2[60,20] 3[80,19] 11[99,1] 12[100,16] 13[116,1] 14[117,16] 15[133,15] 16[148,15] 17[163,15] 18[178,15] 19[193,15] 20[208,15] 21[223,15] 22[238,15] 23[253,15] 24[268,33] 25[301,1] 26[302,1] 27[303,15] 28[318,15] 29[333,15] 30[348,15] 31[363,15] 32[378,15] 33[393,15] 34[408,15] 35[423,15] 36[438,15] 37[453,15] 38[468,15] 39[483,15] 40[498,15] 41[513,15] 42[528,15] 43[543,15] 44[558,15] 45[573,15] 46[588,15] 47[603,15] 48[618,15] 49[633,15] 50[648,15] 51[663,15] 52[678,15] 53[693,15] 54[708,15] 55[723,15] 56[738,15] 57[753,15] 58[768,15] 59[783,15] 60[798,15] 61[813,15] 62[828,15] 63[843,15] 64[858,15] 65[873,15] 66[888,15] 67[903,15] 68[918,15] 69[933,15] 70[948,15] 71[963,15] 72[978,15] 73[993,15] 74[1008,15] 75[1023,15] 76[1038,15] 77[1053,15] 78[1068,15] 79[1083,15] 80[1098,15] 81[1113,15] 82[1128,15] 83[1143,15] 84[1158,15] 85[1173,15] 86[1188,15] 87[1203,15] 88[1218,15] 89[1233,15] 90[1248,15] 91[1263,15] 92[1278,15] 93[1293,15] 94[1308,15] 95[1323,15] 96[1338,15] 97[1353,15] 98[1368,15] 99[1383,15] 100[1398,15] 101[1413,15] 102[1428,15] 103[1443,15] 104[1458,15] 105[1473,15] 106[1488,15] 107[1503,15] 108[1518,15] 109[1533,15] 110[1548,15] 111[1563,15] 112[1578,15] 113[1593,15] 114[1608,15] 115[1623,15] 116[1638,15] 117[1653,15] 118[1668,15] 119[1683,15] 120[1698,15] 121[1713,15] 122[1728,15] 123[1743,15] 124[1758,15] 125[1773,15] 126[1788,15] 127[1803,15] 134[1818,2] 135[1820,1] 136[1821,2] 137[1823,2] 138[1825,2] 139[1827,1] 140[1828,1] 141[1829,1] 142[1830,3] 143[1833,2] 144[1835,3] 145[1838,1] 146[1839,1] 147[1840,1] 148[1841,1] 149[1842,1] 150[1843,1] 151[1844,1] 152[1845,2] 153[1847,2] 154[1849,1] 155[1850,1] 156[1851,4] 157[1855,2] 158[1857,1] 159[1858,1] 160[1859,1] 161[1860,1] 162[1861,1] 163[1862,1] 164[1863,1] 165[1864,1] 166[1865,1] 167[1866,1] 168[1867,1] 169[1868,2] 170[1870,1] 171[1871,1] 172[1872,1] 173[1873,1] 174[1874,1] 175[1875,1] 176[1876,1] 177[1877,1] 178[1878,1] 179[1879,1] 180[1880,1] 181[1881,1] 182[1882,1] 183[1883,1] 184[1884,1] 185[1885,1] 186[1886,1] 187[1887,1] 188[1888,1] 189[1889,1] 190[1890,1] 191[1891,1] 192[1892,1] 193[1893,1] 194[1894,1] 195[1895,1] 196[1896,1] 197[1897,1] 198[1898,1] 199[1899,1] 200[1900,1] 201[1901,1] 202[1902,1] 203[1903,1] 204[1904,1] 205[1905,1] 207[1906,1] 208[1907,1] 209[1908,1] 210[1909,1] 211[1910,1] 212[1911,1] 213[1912,1] 215[1913,1] 216[1914,1] 218[1915,1] 219[1916,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 138 139 152 153 154 158 160 161 162 163 164 165 166 167
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 138 139 152 153 154 158 160 161 162 163 164 165 166 167
;; live  kill	
;; rd  in  	(10)
30, 59, 79, 98, 99, 115, 116, 132, 301, 302
;; rd  gen 	(14)
1826, 1827, 1846, 1847, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866
;; rd  kill	(17)
1825, 1826, 1827, 1845, 1846, 1847, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 9 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 9 4 2 arch/arm/mm/dma-mapping.c:309 (set (reg/v/f:SI 160 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:309 (set (reg/v:SI 161 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:309 (set (reg/v/f:SI 162 [ handle ])
        (reg:SI 2 r2 [ handle ])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/mm/dma-mapping.c:309 (set (reg/v:SI 163 [ gfp ])
        (reg:SI 3 r3 [ gfp ])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/mm/dma-mapping.c:309 (set (reg/v:SI 164 [ prot ])
        (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 prot+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 26 afp)
                (const_int 4 [0x4])) [0 prot+0 S4 A32])
        (nil)))

(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)

(insn 11 8 12 2 arch/arm/mm/dma-mapping.c:318 (set (reg/v:SI 139 [ gfp.958 ])
        (and:SI (reg/v:SI 163 [ gfp ])
            (const_int -16385 [0xffffffffffffbfff]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:320 (set (reg:SI 165)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/dma-mapping.c:320 (set (mem:SI (reg/v/f:SI 162 [ handle ]) [0 S4 A32])
        (reg:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 14 13 15 2 arch/arm/mm/dma-mapping.c:321 (set (reg:SI 166)
        (plus:SI (reg/v:SI 161 [ size ])
            (const_int 4080 [0xff0]))) 4 {*arm_addsi3} (nil))

(insn 15 14 16 2 arch/arm/mm/dma-mapping.c:321 (set (reg:SI 158 [ D.24512 ])
        (plus:SI (reg:SI 166)
            (const_int 15 [0xf]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (plus:SI (reg/v:SI 161 [ size ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 16 15 17 2 arch/arm/mm/dma-mapping.c:321 (set (reg:SI 167)
        (and:SI (reg:SI 158 [ D.24512 ])
            (const_int -4081 [0xfffffffffffff00f]))) 67 {*arm_andsi3_insn} (nil))

(insn 17 16 18 2 arch/arm/mm/dma-mapping.c:321 (set (reg/v:SI 138 [ size.959 ])
        (and:SI (reg:SI 167)
            (const_int -16 [0xfffffffffffffff0]))) 67 {*arm_andsi3_insn} (expr_list:REG_EQUAL (and:SI (reg:SI 158 [ D.24512 ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 18 17 19 2 include/asm-generic/getorder.h:13 (set (reg:SI 154 [ D.25334 ])
        (plus:SI (reg/v:SI 138 [ size.959 ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 19 18 20 2 include/asm-generic/getorder.h:13 (set (reg/v:SI 152 [ size ])
        (lshiftrt:SI (reg:SI 154 [ D.25334 ])
            (const_int 11 [0xb]))) 117 {*arm_shiftsi3} (nil))

(insn 20 19 24 2 include/asm-generic/getorder.h:14 (set (reg/v:SI 153 [ order ])
        (reg:SI 165)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
;; End of basic block 2 -> ( 3)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; rd  out 	(24)
30, 59, 79, 98, 99, 115, 116, 132, 301, 302, 1826, 1827, 1846, 1847, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866


;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 153
;; lr  def 	 24 [cc] 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; live  gen 	 24 [cc] 152 153
;; live  kill	
;; rd  in  	(27)
30, 59, 79, 98, 99, 115, 116, 132, 300, 301, 302, 1826, 1827, 1845, 1846, 1847, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866
;; rd  gen 	(3)
300, 1845, 1848
;; rd  kill	(4)
1845, 1846, 1847, 1848

;; Pred edge  2 [100.0%]  (fallthru)
;; Pred edge  3 [86.0%]  (dfs_back)
(code_label 24 20 21 3 153 "" [1 uses])

(note 21 24 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 3 include/asm-generic/getorder.h:16 (set (reg/v:SI 152 [ size ])
        (lshiftrt:SI (reg/v:SI 152 [ size ])
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (nil))

(insn 23 22 25 3 include/asm-generic/getorder.h:17 (set (reg/v:SI 153 [ order ])
        (plus:SI (reg/v:SI 153 [ order ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 25 23 26 3 include/asm-generic/getorder.h:18 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 152 [ size ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 26 25 27 3 include/asm-generic/getorder.h:18 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 24)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
        (nil)))
;; End of basic block 3 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; rd  out 	(25)
30, 59, 79, 98, 99, 115, 116, 132, 300, 301, 302, 1826, 1827, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866


;; Succ edge  3 [86.0%]  (dfs_back)
;; Succ edge  4 [14.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u30(11){ }u31(13){ }u32(25){ }u33(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(25)
30, 59, 79, 98, 99, 115, 116, 132, 300, 301, 302, 1826, 1827, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866
;; rd  gen 	(1)
299
;; rd  kill	(0)


;; Pred edge  3 [14.0%]  (fallthru)
(note 27 26 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 4 arch/arm/mm/dma-mapping.c:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 160 [ dev ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 30 4 arch/arm/mm/dma-mapping.c:34 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 4 -> ( 5 12)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; rd  out 	(25)
30, 59, 79, 98, 99, 115, 116, 132, 299, 301, 302, 1826, 1827, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866


;; Succ edge  5 [85.0%]  (fallthru)
;; Succ edge  12 [15.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 160
;; lr  def 	 24 [cc] 151 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 152 153 154 160 162 164
;; live  gen 	 24 [cc] 151 168 169
;; live  kill	
;; rd  in  	(25)
30, 59, 79, 98, 99, 115, 116, 132, 299, 301, 302, 1826, 1827, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866
;; rd  gen 	(4)
298, 1844, 1867, 1868
;; rd  kill	(4)
1844, 1867, 1868, 1869

;; Pred edge  4 [85.0%]  (fallthru)
(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 5 arch/arm/mm/dma-mapping.c:35 (set (reg:SI 168)
        (const_int 280 [0x118])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 5 arch/arm/mm/dma-mapping.c:35 (set (reg/v:DI 151 [ mask ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 160 [ dev ])
                (reg:SI 168)) [0 <variable>.coherent_dma_mask+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 33 32 34 5 arch/arm/mm/dma-mapping.c:41 (set (reg:SI 169 [ mask ])
        (subreg:SI (reg/v:DI 151 [ mask ]) 0)) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 arch/arm/mm/dma-mapping.c:41 (set (reg:SI 169 [ mask ])
        (ior:SI (reg:SI 169 [ mask ])
            (subreg:SI (reg/v:DI 151 [ mask ]) 4))) 89 {*arm_iorsi3} (nil))

(insn 35 34 36 5 arch/arm/mm/dma-mapping.c:41 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 169 [ mask ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 36 35 37 5 arch/arm/mm/dma-mapping.c:41 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 152 153 154 160 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 152 153 154 160 162 164
;; rd  out 	(28)
30, 59, 79, 98, 99, 115, 116, 132, 298, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868


;; Succ edge  6 [29.0%]  (fallthru)
;; Succ edge  7 [71.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 156 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 152 160
;; live  gen 	 0 [r0] 1 [r1] 156 170
;; live  kill	 14 [lr]
;; rd  in  	(28)
30, 59, 79, 98, 99, 115, 116, 132, 298, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868
;; rd  gen 	(3)
28, 1852, 1870
;; rd  kill	(52)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1851, 1852, 1853, 1854, 1870

;; Pred edge  5 [29.0%]  (fallthru)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 6 arch/arm/mm/dma-mapping.c:42 (set (reg/f:SI 170)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x115c6b80>)) 167 {*arm_movsi_insn} (nil))

(insn 39 38 40 6 arch/arm/mm/dma-mapping.c:42 (set (reg:SI 0 r0)
        (reg/v/f:SI 160 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 40 39 41 6 arch/arm/mm/dma-mapping.c:42 (set (reg:SI 1 r1)
        (reg/f:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x115c6b80>)
        (nil)))

(call_insn 41 40 42 6 arch/arm/mm/dma-mapping.c:42 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dev_warn") [flags 0x41] <function_decl 0x11022280 dev_warn>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 42 41 45 6 arch/arm/mm/dma-mapping.c:325 (set (reg/v/f:SI 156 [ addr ])
        (reg/v:SI 152 [ size ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 6 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; rd  out 	(29)
28, 59, 79, 98, 99, 115, 116, 298, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1852, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1870


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 152 153 154 160 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 171 172
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 152 153 154 160 162 164
;; live  gen 	 24 [cc] 171 172
;; live  kill	
;; rd  in  	(28)
30, 59, 79, 98, 99, 115, 116, 132, 298, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868
;; rd  gen 	(3)
296, 1871, 1872
;; rd  kill	(2)
1871, 1872

;; Pred edge  5 [71.0%] 
(code_label 45 42 46 7 155 "" [1 uses])

(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 47 46 48 7 arch/arm/mm/dma-mapping.c:46 (set (reg:DI 171)
        (not:DI (reg/v:DI 151 [ mask ]))) 133 {one_cmpldi2} (nil))

(insn 48 47 49 7 arch/arm/mm/dma-mapping.c:46 (set (reg:SI 172)
        (subreg:SI (reg:DI 171) 0)) 167 {*arm_movsi_insn} (nil))

(insn 49 48 50 7 arch/arm/mm/dma-mapping.c:46 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 172)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 50 49 51 7 arch/arm/mm/dma-mapping.c:46 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 152 153 154 160 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 152 153 154 160 162 164
;; rd  out 	(30)
30, 59, 79, 98, 99, 115, 116, 132, 296, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872


;; Succ edge  8 [29.0%]  (fallthru)
;; Succ edge  9 [71.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u65(11){ }u66(13){ }u67(25){ }u68(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 160
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 160
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 156 173 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151 152 160
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 156 173 174
;; live  kill	 14 [lr]
;; rd  in  	(30)
30, 59, 79, 98, 99, 115, 116, 132, 296, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872
;; rd  gen 	(4)
26, 1851, 1873, 1874
;; rd  kill	(53)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1851, 1852, 1853, 1854, 1873, 1874

;; Pred edge  7 [29.0%]  (fallthru)
(note 51 50 52 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 52 51 53 8 arch/arm/mm/dma-mapping.c:47 (set (reg/f:SI 173)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x111f0060>)) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 8 arch/arm/mm/dma-mapping.c:47 (set (reg:DI 174)
        (const_int 4294967295 [0xffffffff])) 163 {*arm_movdi} (nil))

(insn 54 53 55 8 arch/arm/mm/dma-mapping.c:47 (set (mem:DI (reg/f:SI 13 sp) [0 S8 A64])
        (reg:DI 174)) 163 {*arm_movdi} (expr_list:REG_EQUAL (const_int 4294967295 [0xffffffff])
        (nil)))

(insn 55 54 56 8 arch/arm/mm/dma-mapping.c:47 (set (reg:SI 0 r0)
        (reg/v/f:SI 160 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 56 55 57 8 arch/arm/mm/dma-mapping.c:47 (set (reg:SI 1 r1)
        (reg/f:SI 173)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x111f0060>)
        (nil)))

(insn 57 56 58 8 arch/arm/mm/dma-mapping.c:47 (set (reg:DI 2 r2)
        (reg/v:DI 151 [ mask ])) 163 {*arm_movdi} (nil))

(call_insn 58 57 59 8 arch/arm/mm/dma-mapping.c:47 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dev_warn") [flags 0x41] <function_decl 0x11022280 dev_warn>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 59 58 62 8 arch/arm/mm/dma-mapping.c:325 (set (reg/v/f:SI 156 [ addr ])
        (reg/v:SI 152 [ size ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 8 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; rd  out 	(32)
26, 59, 79, 98, 99, 115, 116, 296, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1851, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1873, 1874


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 153 154 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 153 154 162 164
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
30, 59, 79, 98, 99, 115, 116, 132, 296, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872
;; rd  gen 	(1)
294
;; rd  kill	(0)


;; Pred edge  7 [71.0%] 
(code_label 62 59 63 9 157 "" [1 uses])

(note 63 62 64 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 9 arch/arm/mm/dma-mapping.c:80 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 151 [ mask ]) 4)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 65 64 283 9 arch/arm/mm/dma-mapping.c:80 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 9 -> ( 12 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 153 154 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 153 154 162 164
;; rd  out 	(30)
30, 59, 79, 98, 99, 115, 116, 132, 294, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872


;; Succ edge  12 [50.0%] 
;; Succ edge  10 [50.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 153 154 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 151 153 154 162 164
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(30)
30, 59, 79, 98, 99, 115, 116, 132, 294, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872
;; rd  gen 	(1)
293
;; rd  kill	(0)


;; Pred edge  9 [50.0%]  (fallthru)
(note 283 65 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 68 283 69 10 arch/arm/mm/dma-mapping.c:80 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 151 [ mask ]) 0)
            (const_int -2 [0xfffffffffffffffe]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 69 68 284 10 arch/arm/mm/dma-mapping.c:80 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 10 -> ( 12 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 153 154 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 153 154 162 164
;; rd  out 	(30)
30, 59, 79, 98, 99, 115, 116, 132, 293, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872


;; Succ edge  12 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 153 154 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 153 154 162 164
;; live  gen 	 137
;; live  kill	
;; rd  in  	(30)
30, 59, 79, 98, 99, 115, 116, 132, 293, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872
;; rd  gen 	(1)
1824
;; rd  kill	(2)
1823, 1824

;; Pred edge  10 [50.0%]  (fallthru)
(note 284 69 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 76 284 79 11 arch/arm/mm/dma-mapping.c:81 (set (reg/v:SI 137 [ gfp.960 ])
        (ior:SI (reg/v:SI 139 [ gfp.958 ])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 153 154 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 153 154 162 164
;; rd  out 	(31)
30, 59, 79, 98, 99, 115, 116, 132, 293, 301, 302, 1824, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 4 9 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u97(11){ }u98(13){ }u99(25){ }u100(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 153 154 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 153 154 162 164
;; live  gen 	 137
;; live  kill	
;; rd  in  	(32)
30, 59, 79, 98, 99, 115, 116, 132, 293, 294, 299, 301, 302, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872
;; rd  gen 	(1)
1823
;; rd  kill	(2)
1823, 1824

;; Pred edge  4 [15.0%] 
;; Pred edge  9 [50.0%] 
;; Pred edge  10 [50.0%] 
(code_label 79 76 80 12 154 "" [3 uses])

(note 80 79 81 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 12 arch/arm/mm/dma-mapping.c:81 (set (reg/v:SI 137 [ gfp.960 ])
        (reg/v:SI 139 [ gfp.958 ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 12 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 153 154 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 153 154 162 164
;; rd  out 	(33)
30, 59, 79, 98, 99, 115, 116, 132, 293, 294, 299, 301, 302, 1823, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872


;; Succ edge  13 [100.0%]  (fallthru)

;; Start of basic block ( 12 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u102(11){ }u103(13){ }u104(25){ }u105(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 153 154 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 153
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147 157 175
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137 138 139 153 154 162 164
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 147 157 175
;; live  kill	 14 [lr]
;; rd  in  	(34)
30, 59, 79, 98, 99, 115, 116, 132, 293, 294, 299, 301, 302, 1823, 1824, 1826, 1827, 1844, 1845, 1848, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872
;; rd  gen 	(5)
24, 291, 1840, 1856, 1875
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1840, 1855, 1856, 1875

;; Pred edge  12 [100.0%]  (fallthru)
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 82 81 83 13 159 "" [0 uses])

(note 83 82 85 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 85 83 86 13 include/linux/gfp.h:300 (set (reg/f:SI 175)
        (const:SI (plus:SI (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)
                (const_int 2304 [0x900])))) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 13 include/linux/gfp.h:300 (set (reg:SI 0 r0)
        (reg/v:SI 137 [ gfp.960 ])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 13 include/linux/gfp.h:300 (set (reg:SI 1 r1)
        (reg/v:SI 153 [ order ])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 89 13 include/linux/gfp.h:300 (set (reg:SI 2 r2)
        (reg/f:SI 175)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("contig_page_data") [flags 0xc0] <var_decl 0x10c5b780 contig_page_data>)
                (const_int 2304 [0x900])))
        (nil)))

(insn 89 88 90 13 include/linux/gfp.h:300 (set (reg:SI 3 r3)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 90 89 91 13 include/linux/gfp.h:300 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__alloc_pages_nodemask") [flags 0x41] <function_decl 0x10cd6180 __alloc_pages_nodemask>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 91 90 92 13 include/linux/gfp.h:300 (set (reg/v/f:SI 157 [ page ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 92 91 93 13 arch/arm/mm/dma-mapping.c:84 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 157 [ page ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 93 92 94 13 arch/arm/mm/dma-mapping.c:84 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 254)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 13 -> ( 34 14)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 153 154 157 162 164
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 153 154 157 162 164
;; rd  out 	(34)
24, 59, 79, 98, 99, 115, 116, 291, 301, 302, 1823, 1824, 1826, 1827, 1840, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875


;; Succ edge  34 [30.2%] 
;; Succ edge  14 [69.8%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u118(11){ }u119(13){ }u120(25){ }u121(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 153 154 157 162 164
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 153 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 148 149 176 177 178 179
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 153 154 157 162 164
;; live  gen 	 0 [r0] 1 [r1] 136 148 149 176 177 178 179
;; live  kill	 14 [lr]
;; rd  in  	(34)
24, 59, 79, 98, 99, 115, 116, 291, 301, 302, 1823, 1824, 1826, 1827, 1840, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875
;; rd  gen 	(7)
1822, 1841, 1842, 1876, 1877, 1878, 1879
;; rd  kill	(24)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1821, 1822, 1841, 1842, 1876, 1877, 1878, 1879

;; Pred edge  13 [69.8%]  (fallthru)
(note 94 93 96 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 96 94 97 14 arch/arm/mm/dma-mapping.c:90 (set (reg:SI 1 r1)
        (reg/v:SI 153 [ order ])) 167 {*arm_movsi_insn} (nil))

(call_insn 97 96 98 14 arch/arm/mm/dma-mapping.c:90 (parallel [
            (call (mem:SI (symbol_ref:SI ("split_page") [flags 0x41] <function_decl 0x10f23500 split_page>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 98 97 99 14 arch/arm/mm/dma-mapping.c:91 (set (reg:SI 176)
        (lshiftrt:SI (reg/v:SI 138 [ size.959 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 99 98 100 14 arch/arm/mm/dma-mapping.c:91 (set (reg:SI 177)
        (ashift:SI (reg:SI 176)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 100 99 101 14 arch/arm/mm/dma-mapping.c:91 (set (reg/v/f:SI 148 [ p ])
        (plus:SI (reg/v/f:SI 157 [ page ])
            (reg:SI 177))) 4 {*arm_addsi3} (nil))

(insn 101 100 102 14 arch/arm/mm/dma-mapping.c:91 (set (reg:SI 179)
        (const_int 32 [0x20])) 167 {*arm_movsi_insn} (nil))

(insn 102 101 103 14 arch/arm/mm/dma-mapping.c:91 (set (reg:SI 178)
        (ashift:SI (reg:SI 179)
            (reg/v:SI 153 [ order ]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (ashift:SI (const_int 32 [0x20])
            (reg/v:SI 153 [ order ]))
        (nil)))

(insn 103 102 104 14 arch/arm/mm/dma-mapping.c:91 (set (reg/v/f:SI 149 [ e ])
        (plus:SI (reg/v/f:SI 157 [ page ])
            (reg:SI 178))) 4 {*arm_addsi3} (nil))

(insn 104 103 114 14 arch/arm/mm/dma-mapping.c:91 (set (reg/v/f:SI 136 [ p.961 ])
        (reg/v/f:SI 148 [ p ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 148 149 154 157 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 148 149 154 157 162 164
;; rd  out 	(41)
24, 59, 79, 98, 99, 115, 116, 291, 301, 302, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 16) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u136(11){ }u137(13){ }u138(25){ }u139(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 148 149 154 157 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 148 149 154 157 162 164
;; live  gen 	 0 [r0] 1 [r1] 136
;; live  kill	 14 [lr]
;; rd  in  	(42)
24, 59, 79, 98, 99, 115, 116, 288, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879
;; rd  gen 	(1)
1821
;; rd  kill	(18)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1821, 1822

;; Pred edge  16 [91.0%] 
(code_label 114 104 107 15 162 "" [1 uses])

(note 107 114 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 15 arch/arm/mm/dma-mapping.c:92 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ p.961 ])) 167 {*arm_movsi_insn} (nil))

(insn 109 108 110 15 arch/arm/mm/dma-mapping.c:92 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 110 109 111 15 arch/arm/mm/dma-mapping.c:92 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10cd6800 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 111 110 112 15 arch/arm/mm/dma-mapping.c:91 discrim 2 (set (reg/v/f:SI 136 [ p.961 ])
        (plus:SI (reg/v/f:SI 136 [ p.961 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 148 149 154 157 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 148 149 154 157 162 164
;; rd  out 	(41)
24, 59, 79, 98, 99, 115, 116, 288, 301, 302, 1821, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879


;; Succ edge  16 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u145(11){ }u146(13){ }u147(25){ }u148(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 148 149 154 157 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 149
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 148 149 154 157 162 164
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(43)
24, 59, 79, 98, 99, 115, 116, 288, 291, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879
;; rd  gen 	(1)
288
;; rd  kill	(0)


;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%]  (fallthru,dfs_back)
(code_label 112 111 113 16 161 "" [0 uses])

(note 113 112 115 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 115 113 116 16 arch/arm/mm/dma-mapping.c:91 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 136 [ p.961 ])
            (reg/v/f:SI 149 [ e ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 116 115 117 16 arch/arm/mm/dma-mapping.c:91 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 16 -> ( 15 17)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 148 149 154 157 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139 148 149 154 157 162 164
;; rd  out 	(42)
24, 59, 79, 98, 99, 115, 116, 288, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879


;; Succ edge  15 [91.0%] 
;; Succ edge  17 [9.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 154 157 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 154 157 162 164
;; live  gen 	 0 [r0] 24 [cc] 150
;; live  kill	 14 [lr]
;; rd  in  	(42)
24, 59, 79, 98, 99, 115, 116, 288, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879
;; rd  gen 	(3)
19, 286, 1843
;; rd  kill	(48)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1843

;; Pred edge  16 [9.0%]  (fallthru)
(note 117 116 118 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 17 arch/arm/mm/dma-mapping.c:98 (set (reg:SI 0 r0)
        (reg/v/f:SI 157 [ page ])) 167 {*arm_movsi_insn} (nil))

(call_insn 119 118 120 17 arch/arm/mm/dma-mapping.c:98 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("page_address") [flags 0x41] <function_decl 0x10f7b880 page_address>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 120 119 121 17 arch/arm/mm/dma-mapping.c:98 (set (reg/v/f:SI 150 [ ptr ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 121 120 122 17 arch/arm/mm/dma-mapping.c:99 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ size.959 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 122 121 123 17 arch/arm/mm/dma-mapping.c:99 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 127)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 157 162 164
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 157 162 164
;; rd  out 	(43)
19, 59, 79, 98, 99, 115, 116, 286, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879


;; Succ edge  18 [29.0%]  (fallthru)
;; Succ edge  19 [71.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 157 162 164
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 157 162 164
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(43)
19, 59, 79, 98, 99, 115, 116, 286, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879
;; rd  gen 	(0)

;; rd  kill	(16)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132

;; Pred edge  17 [29.0%]  (fallthru)
(note 123 122 125 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 125 123 126 18 arch/arm/mm/dma-mapping.c:99 discrim 1 (set (reg:SI 1 r1)
        (reg/v:SI 138 [ size.959 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 126 125 127 18 arch/arm/mm/dma-mapping.c:99 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10bb1200 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 157 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 157 162 164
;; rd  out 	(43)
19, 59, 79, 98, 99, 115, 116, 286, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 17 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u171(11){ }u172(13){ }u173(25){ }u174(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 157 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 150
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 155 180 181 182 183
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 157 162 164
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 155 180 181 182 183
;; live  kill	 14 [lr]
;; rd  in  	(43)
19, 59, 79, 98, 99, 115, 116, 286, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879
;; rd  gen 	(6)
283, 1850, 1880, 1881, 1882, 1883
;; rd  kill	(21)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1850, 1880, 1881, 1882, 1883

;; Pred edge  17 [71.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 127 126 128 19 163 "" [1 uses])

(note 128 127 129 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 129 128 130 19 arch/arm/mm/dma-mapping.c:100 (set (reg/f:SI 180)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x112494e0 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 130 129 131 19 arch/arm/mm/dma-mapping.c:100 (set (reg:SI 181)
        (plus:SI (reg/v/f:SI 150 [ ptr ])
            (reg/v:SI 138 [ size.959 ]))) 4 {*arm_addsi3} (nil))

(insn 131 130 132 19 arch/arm/mm/dma-mapping.c:100 (set (reg/f:SI 182 [ cpu_cache.dma_flush_range ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 180)
                (const_int 36 [0x24])) [0 cpu_cache.dma_flush_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 132 131 133 19 arch/arm/mm/dma-mapping.c:100 (set (reg:SI 0 r0)
        (reg/v/f:SI 150 [ ptr ])) 167 {*arm_movsi_insn} (nil))

(insn 133 132 134 19 arch/arm/mm/dma-mapping.c:100 (set (reg:SI 1 r1)
        (reg:SI 181)) 167 {*arm_movsi_insn} (nil))

(call_insn 134 133 135 19 arch/arm/mm/dma-mapping.c:100 (parallel [
            (call (mem:SI (reg/f:SI 182 [ cpu_cache.dma_flush_range ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 135 134 136 19 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:55 (set (reg/f:SI 183)
        (symbol_ref:SI ("outer_cache") [flags 0xc0] <var_decl 0x512cf6c0 outer_cache>)) 167 {*arm_movsi_insn} (nil))

(insn 136 135 137 19 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:55 (set (reg/f:SI 155 [ D.25331 ])
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 183)
                (const_int 8 [0x8])) [0 outer_cache.flush_range+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 137 136 138 19 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:55 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 155 [ D.25331 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 138 137 139 19 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:55 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 262)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 19 -> ( 20 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 155 157 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 155 157 162 164
;; rd  out 	(48)
19, 59, 79, 98, 99, 115, 116, 283, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883


;; Succ edge  20 [69.8%]  (fallthru)
;; Succ edge  36 [30.2%] 

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u187(11){ }u188(13){ }u189(25){ }u190(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 155 157 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 150 155
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 146 184 185 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 150 154 155 157 162 164
;; live  gen 	 0 [r0] 1 [r1] 146 184 185 186
;; live  kill	 14 [lr]
;; rd  in  	(48)
19, 59, 79, 98, 99, 115, 116, 283, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883
;; rd  gen 	(4)
1839, 1884, 1885, 1886
;; rd  kill	(20)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1839, 1884, 1885, 1886

;; Pred edge  19 [69.8%]  (fallthru)
(note 139 138 141 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 141 139 142 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (set (reg/f:SI 184)
        (plus:SI (reg/v/f:SI 150 [ ptr ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 142 141 143 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (set (reg:SI 185)
        (plus:SI (reg/v:SI 138 [ size.959 ])
            (const_int 1073741824 [0x40000000]))) 4 {*arm_addsi3} (nil))

(insn 143 142 144 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (set (reg:SI 186)
        (plus:SI (reg:SI 185)
            (reg/v/f:SI 150 [ ptr ]))) 4 {*arm_addsi3} (nil))

(insn 144 143 145 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (set (reg:SI 0 r0)
        (reg/f:SI 184)) 167 {*arm_movsi_insn} (nil))

(insn 145 144 146 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (set (reg:SI 1 r1)
        (reg:SI 186)) 167 {*arm_movsi_insn} (nil))

(call_insn 146 145 264 20 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/outercache.h:56 (parallel [
            (call (mem:SI (reg/f:SI 155 [ D.25331 ]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 244 {*call_reg_armv5} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 20 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 154 157 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 154 157 162 164
;; rd  out 	(52)
19, 59, 79, 98, 99, 115, 116, 283, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886


;; Succ edge  36 [100.0%]  (fallthru)

;; Start of basic block ( 36) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u202(11){ }u203(13){ }u204(25){ }u205(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 157
;; live  gen 	 0 [r0] 1 [r1] 187 188 189
;; live  kill	 14 [lr]
;; rd  in  	(54)
19, 59, 79, 98, 99, 115, 116, 268, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1915, 1916
;; rd  gen 	(3)
1887, 1888, 1889
;; rd  kill	(19)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1887, 1888, 1889

;; Pred edge  36 [0.0%] 
(code_label 264 146 149 21 171 "" [1 uses])

(note 149 264 150 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 21 arch/arm/mm/dma-mapping.c:202 (set (reg/f:SI 187)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1150bec0>)) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 21 arch/arm/mm/dma-mapping.c:202 (set (reg/f:SI 188)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 152 151 153 21 arch/arm/mm/dma-mapping.c:202 (set (reg/f:SI 189)
        (plus:SI (reg/f:SI 188)
            (const_int 36 [0x24]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 36 [0x24])))
        (nil)))

(insn 153 152 154 21 arch/arm/mm/dma-mapping.c:202 (set (reg:SI 0 r0)
        (reg/f:SI 187)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x1150bec0>)
        (nil)))

(insn 154 153 155 21 arch/arm/mm/dma-mapping.c:202 (set (reg:SI 1 r1)
        (reg/f:SI 189)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                (const_int 36 [0x24])))
        (nil)))

(call_insn 155 154 156 21 arch/arm/mm/dma-mapping.c:202 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 156 155 159 21 arch/arm/mm/dma-mapping.c:203 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 21 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 157
;; rd  out 	(57)
19, 59, 79, 98, 99, 115, 116, 268, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1915, 1916


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 36) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 154 157 162 164 218
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 154
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 141 145 190 191 192 193 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 154 157 162 164 218
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 135 141 145 190 191 192 193 194
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(54)
19, 59, 79, 98, 99, 115, 116, 268, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1915, 1916
;; rd  gen 	(10)
9, 277, 1820, 1829, 1838, 1890, 1891, 1892, 1893, 1894
;; rd  kill	(55)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1820, 1829, 1838, 1890, 1891, 1892, 1893, 1894

;; Pred edge  36 [100.0%]  (fallthru)
(note 159 156 160 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 160 159 161 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:268 (set (reg/v:SI 145 [ ret ])
        (asm_operands:SI ("clz	%0, %1") ("=r") 0 [
                (reg:SI 154 [ D.25334 ])
            ]
             [
                (asm_input:SI ("r") 0)
            ] 1265521)) -1 (nil))

(insn 161 160 162 22 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/bitops.h:269 (set (reg/v:SI 135 [ bit.962 ])
        (minus:SI (const_int 32 [0x20])
            (reg/v:SI 145 [ ret ]))) 28 {*arm_subsi3_insn} (nil))

(insn 162 161 163 22 arch/arm/mm/dma-mapping.c:221 (set (reg/f:SI 190)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 163 162 164 22 arch/arm/mm/dma-mapping.c:221 (parallel [
            (set (reg:SI 191)
                (smin:SI (reg/v:SI 135 [ bit.962 ])
                    (const_int 20 [0x14])))
            (clobber (reg:CC 24 cc))
        ]) 105 {*arm_smin_insn} (nil))

(insn 164 163 165 22 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 193)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 165 164 166 22 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 192)
        (ashift:SI (reg:SI 193)
            (reg:SI 191))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (ashift:SI (const_int 1 [0x1])
            (reg:SI 191))
        (nil)))

(insn 166 165 167 22 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 194)
        (and:SI (reg/v:SI 139 [ gfp.958 ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 167 166 168 22 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 0 r0)
        (reg/f:SI 190)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 168 167 169 22 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 1 r1)
        (reg:SI 192)) 167 {*arm_movsi_insn} (nil))

(insn 169 168 170 22 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ size.959 ])) 167 {*arm_movsi_insn} (nil))

(insn 170 169 171 22 arch/arm/mm/dma-mapping.c:221 (set (reg:SI 3 r3)
        (reg:SI 194)) 167 {*arm_movsi_insn} (nil))

(call_insn 171 170 172 22 arch/arm/mm/dma-mapping.c:221 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arm_vmregion_alloc") [flags 0x41] <function_decl 0x11440c00 arm_vmregion_alloc>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 172 171 173 22 arch/arm/mm/dma-mapping.c:221 (set (reg/v/f:SI 141 [ c ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 173 172 174 22 arch/arm/mm/dma-mapping.c:223 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 141 [ c ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 174 173 175 22 arch/arm/mm/dma-mapping.c:223 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 249)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 22 -> ( 23 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 141 148 157 162 164 218
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148 157 162 164 218
;; rd  out 	(62)
9, 59, 79, 98, 99, 115, 116, 277, 301, 302, 1820, 1821, 1822, 1823, 1824, 1826, 1827, 1829, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1915, 1916


;; Succ edge  23 [85.0%]  (fallthru)
;; Succ edge  33 [15.0%] 

;; Start of basic block ( 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u235(11){ }u236(13){ }u237(25){ }u238(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148 157 162 164 218
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 157 218
;; lr  def 	 134 140 142 143 144 195 196 197 198 199 200
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141 148 157 162 164 218
;; live  gen 	 134 140 142 143 144 195 196 197 198 199 200
;; live  kill	
;; rd  in  	(62)
9, 59, 79, 98, 99, 115, 116, 277, 301, 302, 1820, 1821, 1822, 1823, 1824, 1826, 1827, 1829, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1915, 1916
;; rd  gen 	(11)
1819, 1828, 1832, 1834, 1837, 1895, 1896, 1897, 1898, 1899, 1900
;; rd  kill	(17)
1818, 1819, 1828, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1895, 1896, 1897, 1898, 1899, 1900

;; Pred edge  22 [85.0%]  (fallthru)
(note 175 174 176 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 176 175 177 23 arch/arm/mm/dma-mapping.c:225 (set (reg:SI 195 [ <variable>.vm_start ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 177 176 178 23 arch/arm/mm/dma-mapping.c:225 (set (reg:SI 140 [ D.25379 ])
        (plus:SI (reg:SI 195 [ <variable>.vm_start ])
            (const_int 16777216 [0x1000000]))) 4 {*arm_addsi3} (nil))

(insn 178 177 179 23 arch/arm/mm/dma-mapping.c:225 (set (reg/v:SI 143 [ idx ])
        (lshiftrt:SI (reg:SI 140 [ D.25379 ])
            (const_int 21 [0x15]))) 117 {*arm_shiftsi3} (nil))

(insn 179 178 180 23 arch/arm/mm/dma-mapping.c:226 (set (reg:SI 196)
        (lshiftrt:SI (reg:SI 140 [ D.25379 ])
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 180 179 181 23 arch/arm/mm/dma-mapping.c:226 (set (reg:SI 197)
        (ashift:SI (reg:SI 196)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 181 180 183 23 arch/arm/mm/dma-mapping.c:226 (set (reg/v:SI 144 [ off ])
        (lshiftrt:SI (reg:SI 197)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg:SI 196)
            (const_int 511 [0x1ff]))
        (nil)))

(insn 183 181 184 23 arch/arm/mm/dma-mapping.c:228 (set (reg:SI 199)
        (ashift:SI (reg/v:SI 144 [ off ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 184 183 185 23 arch/arm/mm/dma-mapping.c:228 (set (reg/f:SI 200)
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 143 [ idx ])
                    (const_int 4 [0x4]))
                (reg/f:SI 218)) [0 consistent_pte S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 185 184 186 23 arch/arm/mm/dma-mapping.c:228 (set (reg/v/f:SI 142 [ pte ])
        (plus:SI (reg/f:SI 200)
            (reg:SI 199))) 4 {*arm_addsi3} (nil))

(insn 186 185 187 23 arch/arm/mm/dma-mapping.c:229 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 16 [0x10])) [0 <variable>.vm_pages+0 S4 A32])
        (reg/v/f:SI 157 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 187 186 226 23 arch/arm/mm/dma-mapping.c:229 (set (reg/v/f:SI 134 [ page.963 ])
        (reg/v/f:SI 157 [ page ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; rd  out 	(73)
9, 59, 79, 98, 99, 115, 116, 277, 301, 302, 1819, 1820, 1821, 1822, 1823, 1824, 1826, 1827, 1828, 1829, 1832, 1834, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1915, 1916


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 23 29) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u255(11){ }u256(13){ }u257(25){ }u258(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 24 [cc] 201
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; live  gen 	 24 [cc] 201
;; live  kill	
;; rd  in  	(89)
9, 59, 79, 98, 99, 115, 116, 272, 277, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(2)
276, 1901
;; rd  kill	(1)
1901

;; Pred edge  23 [100.0%]  (fallthru)
;; Pred edge  29 [100.0%]  (fallthru)
(code_label 226 187 188 24 169 "" [0 uses])

(note 188 226 189 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 190 24 arch/arm/mm/dma-mapping.c:232 (set (reg:SI 201)
        (mem:SI (reg/v/f:SI 142 [ pte ]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 190 189 191 24 arch/arm/mm/dma-mapping.c:232 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 201)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 191 190 192 24 arch/arm/mm/dma-mapping.c:232 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 198)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 24 -> ( 25 26)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164 201
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164 201
;; rd  out 	(88)
9, 59, 79, 98, 99, 115, 116, 276, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916


;; Succ edge  25 [0.0%]  (fallthru)
;; Succ edge  26 [100.0%] 

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u262(11){ }u263(13){ }u264(25){ }u265(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 202
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 202
;; live  kill	 14 [lr]
;; rd  in  	(88)
9, 59, 79, 98, 99, 115, 116, 276, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(1)
1902
;; rd  kill	(17)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1902

;; Pred edge  24 [0.0%]  (fallthru)
(note 192 191 193 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 194 25 arch/arm/mm/dma-mapping.c:232 discrim 1 (set (reg/f:SI 202)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)) 167 {*arm_movsi_insn} (nil))

(insn 194 193 195 25 arch/arm/mm/dma-mapping.c:232 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 202)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x1152a880>)
        (nil)))

(insn 195 194 196 25 arch/arm/mm/dma-mapping.c:232 discrim 1 (set (reg:SI 1 r1)
        (const_int 232 [0xe8])) 167 {*arm_movsi_insn} (nil))

(call_insn 196 195 198 25 arch/arm/mm/dma-mapping.c:232 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a67100 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 25 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(89)
9, 59, 79, 98, 99, 115, 116, 276, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916



;; Start of basic block ( 24) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u270(11){ }u271(13){ }u272(25){ }u273(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164 201
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142 144 164 201
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142 144 203 204 205 207 208 209
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164 201
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 142 144 203 204 205 207 208 209
;; live  kill	 14 [lr]
;; rd  in  	(88)
9, 59, 79, 98, 99, 115, 116, 276, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(9)
273, 1831, 1836, 1903, 1904, 1905, 1906, 1907, 1908
;; rd  kill	(28)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1830, 1831, 1832, 1835, 1836, 1837, 1903, 1904, 1905, 1906, 1907, 1908

;; Pred edge  24 [100.0%] 
(code_label 198 196 199 26 166 "" [1 uses])

(note 199 198 200 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 200 199 201 26 arch/arm/mm/dma-mapping.c:234 (set (reg/f:SI 203)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 201 200 202 26 arch/arm/mm/dma-mapping.c:234 (set (reg/f:SI 205 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 203) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 202 201 203 26 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 204)
        (minus:SI (reg/v/f:SI 134 [ page.963 ])
            (reg/f:SI 205 [ mem_map ]))) 28 {*arm_subsi3_insn} (nil))

(insn 203 202 204 26 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 207)
        (ashiftrt:SI (reg:SI 204)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 204)
            (const_int 32 [0x20]))
        (nil)))

(insn 204 203 205 26 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 208)
        (ashift:SI (reg:SI 207)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 205 204 206 26 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 209)
        (ior:SI (reg:SI 208)
            (reg/v:SI 164 [ prot ]))) 89 {*arm_iorsi3} (nil))

(insn 206 205 207 26 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 0 r0)
        (reg/v/f:SI 142 [ pte ])) 167 {*arm_movsi_insn} (nil))

(insn 207 206 208 26 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 1 r1)
        (reg:SI 209)) 167 {*arm_movsi_insn} (nil))

(insn 208 207 209 26 arch/arm/mm/dma-mapping.c:234 (set (reg:SI 2 r2)
        (reg:SI 201)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 209 208 210 26 arch/arm/mm/dma-mapping.c:234 (parallel [
            (call (mem:SI (symbol_ref:SI ("cpu_v7_set_pte_ext") [flags 0x41] <function_decl 0x10e63d00 cpu_v7_set_pte_ext>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 210 209 211 26 arch/arm/mm/dma-mapping.c:236 (set (reg/v/f:SI 142 [ pte ])
        (plus:SI (reg/v/f:SI 142 [ pte ])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (nil))

(insn 211 210 212 26 arch/arm/mm/dma-mapping.c:237 (set (reg/v:SI 144 [ off ])
        (plus:SI (reg/v:SI 144 [ off ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 212 211 213 26 arch/arm/mm/dma-mapping.c:238 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ off ])
            (const_int 512 [0x200]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 213 212 214 26 arch/arm/mm/dma-mapping.c:238 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 219)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 26 -> ( 27 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164 201
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164 201
;; rd  out 	(84)
9, 59, 79, 98, 99, 115, 116, 273, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1831, 1833, 1834, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916


;; Succ edge  27 [50.0%]  (fallthru)
;; Succ edge  28 [50.0%] 

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u293(11){ }u294(13){ }u295(25){ }u296(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 141 143 148 157 162 164 201
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 201
;; lr  def 	 142 143 144 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 143 148 157 162 164 201
;; live  gen 	 142 143 144 210
;; live  kill	
;; rd  in  	(84)
9, 59, 79, 98, 99, 115, 116, 273, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1831, 1833, 1834, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(4)
1830, 1833, 1835, 1909
;; rd  kill	(9)
1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1909

;; Pred edge  26 [50.0%]  (fallthru)
(note 214 213 215 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 215 214 216 27 arch/arm/mm/dma-mapping.c:240 (set (reg/v:SI 143 [ idx ])
        (plus:SI (reg/v:SI 143 [ idx ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 216 215 217 27 arch/arm/mm/dma-mapping.c:240 (set (reg/f:SI 210)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 217 216 218 27 arch/arm/mm/dma-mapping.c:240 (set (reg/v/f:SI 142 [ pte ])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 143 [ idx ])
                    (const_int 4 [0x4]))
                (reg/f:SI 210)) [0 consistent_pte S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 218 217 219 27 arch/arm/mm/dma-mapping.c:239 (set (reg/v:SI 144 [ off ])
        (reg:SI 201)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 27 -> ( 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; rd  out 	(83)
9, 59, 79, 98, 99, 115, 116, 273, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1833, 1835, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916


;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 26 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u301(11){ }u302(13){ }u303(25){ }u304(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 24 [cc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; live  gen 	 24 [cc] 138
;; live  kill	
;; rd  in  	(86)
9, 59, 79, 98, 99, 115, 116, 273, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(2)
272, 1825
;; rd  kill	(2)
1825, 1826

;; Pred edge  26 [50.0%] 
;; Pred edge  27 [100.0%]  (fallthru)
(code_label 219 218 220 28 167 "" [1 uses])

(note 220 219 221 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 221 220 222 28 arch/arm/mm/dma-mapping.c:242 (set (reg/v:SI 138 [ size.959 ])
        (plus:SI (reg/v:SI 138 [ size.959 ])
            (const_int -4096 [0xfffffffffffff000]))) 4 {*arm_addsi3} (nil))

(insn 222 221 223 28 arch/arm/mm/dma-mapping.c:242 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 138 [ size.959 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 223 222 224 28 arch/arm/mm/dma-mapping.c:242 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 229)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1400 [0x578])
        (nil)))
;; End of basic block 28 -> ( 29 30)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; rd  out 	(85)
9, 59, 79, 98, 99, 115, 116, 272, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916


;; Succ edge  29 [86.0%]  (fallthru)
;; Succ edge  30 [14.0%] 

;; Start of basic block ( 28) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u308(11){ }u309(13){ }u310(25){ }u311(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; live  gen 	 134
;; live  kill	
;; rd  in  	(85)
9, 59, 79, 98, 99, 115, 116, 272, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(1)
1818
;; rd  kill	(2)
1818, 1819

;; Pred edge  28 [86.0%]  (fallthru)
(note 224 223 225 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 225 224 229 29 arch/arm/mm/dma-mapping.c:235 (set (reg/v/f:SI 134 [ page.963 ])
        (plus:SI (reg/v/f:SI 134 [ page.963 ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 29 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 138 141 142 143 144 148 157 162 164
;; rd  out 	(84)
9, 59, 79, 98, 99, 115, 116, 272, 301, 302, 1818, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916


;; Succ edge  24 [100.0%]  (fallthru)

;; Start of basic block ( 28) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u313(11){ }u314(13){ }u315(25){ }u316(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 148 157 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc] 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 148 157 162
;; live  gen 	 24 [cc] 156
;; live  kill	
;; rd  in  	(85)
9, 59, 79, 98, 99, 115, 116, 272, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(2)
271, 1854
;; rd  kill	(4)
1851, 1852, 1853, 1854

;; Pred edge  28 [14.0%] 
(code_label 229 225 230 30 168 "" [1 uses])

(note 230 229 231 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 231 230 232 30 arch/arm/mm/dma-mapping.c:244 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 8158962)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 232 231 233 30 arch/arm/mm/dma-mapping.c:246 (set (reg/v/f:SI 156 [ addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 141 [ c ])
                (const_int 8 [0x8])) [0 <variable>.vm_start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 233 232 234 30 arch/arm/mm/dma-mapping.c:332 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 156 [ addr ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 234 233 235 30 arch/arm/mm/dma-mapping.c:332 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 249)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 767 [0x2ff])
        (nil)))
;; End of basic block 30 -> ( 31 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 156 157 162
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 156 157 162
;; rd  out 	(86)
9, 59, 79, 98, 99, 115, 116, 271, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1854, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916


;; Succ edge  31 [92.3%]  (fallthru)
;; Succ edge  33 [7.7%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u320(11){ }u321(13){ }u322(25){ }u323(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156 157 162
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157 162
;; lr  def 	 211 212 213 215 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156 157 162
;; live  gen 	 211 212 213 215 216
;; live  kill	
;; rd  in  	(86)
9, 59, 79, 98, 99, 115, 116, 271, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1854, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(5)
1910, 1911, 1912, 1913, 1914
;; rd  kill	(5)
1910, 1911, 1912, 1913, 1914

;; Pred edge  30 [92.3%]  (fallthru)
(note 235 234 236 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 31 arch/arm/mm/dma-mapping.c:333 (set (reg/f:SI 211)
        (symbol_ref:SI ("mem_map") [flags 0xc0] <var_decl 0x10c2a9c0 mem_map>)) 167 {*arm_movsi_insn} (nil))

(insn 237 236 238 31 arch/arm/mm/dma-mapping.c:333 (set (reg/f:SI 213 [ mem_map ])
        (mem/f/c/i:SI (reg/f:SI 211) [0 mem_map+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 238 237 239 31 arch/arm/mm/dma-mapping.c:333 (set (reg:SI 212)
        (minus:SI (reg/v/f:SI 157 [ page ])
            (reg/f:SI 213 [ mem_map ]))) 28 {*arm_subsi3_insn} (nil))

(insn 239 238 240 31 arch/arm/mm/dma-mapping.c:333 (set (reg:SI 215)
        (ashiftrt:SI (reg:SI 212)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (div:SI (reg:SI 212)
            (const_int 32 [0x20]))
        (nil)))

(insn 240 239 241 31 arch/arm/mm/dma-mapping.c:333 (set (reg:SI 216)
        (ashift:SI (reg:SI 215)
            (const_int 12 [0xc]))) 117 {*arm_shiftsi3} (nil))

(insn 241 240 251 31 arch/arm/mm/dma-mapping.c:333 (set (mem:SI (reg/v/f:SI 162 [ handle ]) [0 S4 A32])
        (reg:SI 216)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 31 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; rd  out 	(91)
9, 59, 79, 98, 99, 115, 116, 271, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1854, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 33) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u332(11){ }u333(13){ }u334(25){ }u335(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 157
;; live  gen 	 0 [r0] 1 [r1] 157
;; live  kill	 14 [lr]
;; rd  in  	(92)
9, 19, 59, 79, 98, 99, 115, 116, 269, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(1)
1855
;; rd  kill	(18)
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 1855, 1856

;; Pred edge  33 [91.0%] 
(code_label 251 241 244 32 170 "" [1 uses])

(note 244 251 245 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 245 244 246 32 arch/arm/mm/dma-mapping.c:114 (set (reg:SI 0 r0)
        (reg/v/f:SI 157 [ page ])) 167 {*arm_movsi_insn} (nil))

(insn 246 245 247 32 arch/arm/mm/dma-mapping.c:114 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 247 246 248 32 arch/arm/mm/dma-mapping.c:114 (parallel [
            (call (mem:SI (symbol_ref:SI ("__free_pages") [flags 0x41] <function_decl 0x10cd6800 __free_pages>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 248 247 249 32 arch/arm/mm/dma-mapping.c:115 (set (reg/v/f:SI 157 [ page ])
        (plus:SI (reg/v/f:SI 157 [ page ])
            (const_int 32 [0x20]))) 4 {*arm_addsi3} (nil))
;; End of basic block 32 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 157
;; rd  out 	(91)
9, 19, 59, 79, 98, 99, 115, 116, 269, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1854, 1855, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916


;; Succ edge  33 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 21 32 30 22) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u341(11){ }u342(13){ }u343(25){ }u344(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 157
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 157
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 157
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(95)
9, 19, 59, 79, 98, 99, 115, 116, 268, 269, 271, 277, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(1)
269
;; rd  kill	(0)


;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  32 [100.0%]  (fallthru,dfs_back)
;; Pred edge  30 [7.7%] 
;; Pred edge  22 [15.0%] 
(code_label 249 248 250 33 165 "" [2 uses])

(note 250 249 252 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 252 250 253 33 arch/arm/mm/dma-mapping.c:113 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 157 [ page ])
            (reg/v/f:SI 148 [ p ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 253 252 254 33 arch/arm/mm/dma-mapping.c:113 discrim 1 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 251)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 33 -> ( 32 34)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 148 157
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 157
;; rd  out 	(92)
9, 19, 59, 79, 98, 99, 115, 116, 269, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916


;; Succ edge  32 [91.0%] 
;; Succ edge  34 [9.0%]  (fallthru)

;; Start of basic block ( 13 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u348(11){ }u349(13){ }u350(25){ }u351(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 156
;; live  kill	
;; rd  in  	(94)
9, 19, 24, 59, 79, 98, 99, 115, 116, 269, 291, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916
;; rd  gen 	(1)
1853
;; rd  kill	(4)
1851, 1852, 1853, 1854

;; Pred edge  13 [30.2%] 
;; Pred edge  33 [9.0%]  (fallthru)
(code_label 254 253 255 34 160 "" [1 uses])

(note 255 254 256 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 256 255 257 34 arch/arm/mm/dma-mapping.c:325 (set (reg/v/f:SI 156 [ addr ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 34 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; rd  out 	(94)
9, 19, 24, 59, 79, 98, 99, 115, 116, 269, 291, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1853, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1915, 1916


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 34 31 8 6) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u352(11){ }u353(13){ }u354(25){ }u355(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 156
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; lr  def 	 0 [r0] 159
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 156
;; live  gen 	 0 [r0] 159
;; live  kill	
;; rd  in  	(110)
9, 19, 24, 26, 28, 59, 79, 98, 99, 115, 116, 269, 271, 291, 296, 298, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916
;; rd  gen 	(2)
0, 1858
;; rd  kill	(32)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 1858

;; Pred edge  34 [100.0%]  (fallthru)
;; Pred edge  31 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%]  (fallthru)
(code_label 257 256 258 35 156 "" [0 uses])

(note 258 257 274 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 274 258 280 35 arch/arm/mm/dma-mapping.c:338 (set (reg/i:SI 0 r0)
        (reg/v/f:SI 156 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 280 274 262 35 arch/arm/mm/dma-mapping.c:338 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 35 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(107)
0, 59, 79, 98, 99, 115, 116, 269, 271, 291, 296, 298, 301, 302, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 20 19) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u359(11){ }u360(13){ }u361(25){ }u362(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 154 157 162 164
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 218 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 154 157 162 164
;; live  gen 	 24 [cc] 218 219
;; live  kill	
;; rd  in  	(52)
19, 59, 79, 98, 99, 115, 116, 283, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886
;; rd  gen 	(3)
268, 1915, 1916
;; rd  kill	(2)
1915, 1916

;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  19 [30.2%] 
(code_label 262 280 263 36 164 "" [1 uses])

(note 263 262 265 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 265 263 266 36 arch/arm/mm/dma-mapping.c:201 (set (reg/f:SI 218)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 266 265 267 36 arch/arm/mm/dma-mapping.c:201 (set (reg/f:SI 219 [ consistent_pte ])
        (mem/s/f/j:SI (reg/f:SI 218) [0 consistent_pte+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 267 266 268 36 arch/arm/mm/dma-mapping.c:201 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 219 [ consistent_pte ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 268 267 0 36 arch/arm/mm/dma-mapping.c:201 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 264)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 36 -> ( 21 22)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 154 157 162 164 218
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 148 154 157 162 164 218
;; rd  out 	(54)
19, 59, 79, 98, 99, 115, 116, 268, 301, 302, 1821, 1822, 1823, 1824, 1826, 1827, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1848, 1849, 1850, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1915, 1916


;; Succ edge  21 [0.0%] 
;; Succ edge  22 [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 84.
deleting insn with uid = 95.
deleting insn with uid = 124.
deleting insn with uid = 140.
deleting insn with uid = 182.
deleting insn with uid = 259.
ending the processing of deferred insns

;; Function dma_alloc_writecombine (dma_alloc_writecombine)[0:1279]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 24.
deferring deletion of insn with uid = 20.
deferring deletion of insn with uid = 19.
deferring deletion of insn with uid = 17.
deferring deletion of insn with uid = 16.
deferring deletion of insn with uid = 15.
deferring deletion of insn with uid = 14.
deferring deletion of insn with uid = 5.
deferring deletion of insn with uid = 4.
deferring deletion of insn with uid = 3.
deferring deletion of insn with uid = 2.
Deleted 11 trivially dead insns

Number of successful forward propagations: 0



dma_alloc_writecombine

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr]
;;  ref usage 	r0={4d,7u} r1={3d,3u} r2={3d,3u} r3={3d,3u} r11={1d,2u} r12={2d} r13={1d,4u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d} r135={1d} r136={1d} r137={1d} r138={1d} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} 
;;    total ref usage 173{142d,31u,0e} in 7{6 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,2] 13[16,1] 14[17,2] 15[19,1] 16[20,1] 17[21,1] 18[22,1] 19[23,1] 20[24,1] 21[25,1] 22[26,1] 23[27,1] 24[28,1] 25[29,1] 26[30,1] 27[31,1] 28[32,1] 29[33,1] 30[34,1] 31[35,1] 32[36,1] 33[37,1] 34[38,1] 35[39,1] 36[40,1] 37[41,1] 38[42,1] 39[43,1] 40[44,1] 41[45,1] 42[46,1] 43[47,1] 44[48,1] 45[49,1] 46[50,1] 47[51,1] 48[52,1] 49[53,1] 50[54,1] 51[55,1] 52[56,1] 53[57,1] 54[58,1] 55[59,1] 56[60,1] 57[61,1] 58[62,1] 59[63,1] 60[64,1] 61[65,1] 62[66,1] 63[67,1] 64[68,1] 65[69,1] 66[70,1] 67[71,1] 68[72,1] 69[73,1] 70[74,1] 71[75,1] 72[76,1] 73[77,1] 74[78,1] 75[79,1] 76[80,1] 77[81,1] 78[82,1] 79[83,1] 80[84,1] 81[85,1] 82[86,1] 83[87,1] 84[88,1] 85[89,1] 86[90,1] 87[91,1] 88[92,1] 89[93,1] 90[94,1] 91[95,1] 92[96,1] 93[97,1] 94[98,1] 95[99,1] 96[100,1] 97[101,1] 98[102,1] 99[103,1] 100[104,1] 101[105,1] 102[106,1] 103[107,1] 104[108,1] 105[109,1] 106[110,1] 107[111,1] 108[112,1] 109[113,1] 110[114,1] 111[115,1] 112[116,1] 113[117,1] 114[118,1] 115[119,1] 116[120,1] 117[121,1] 118[122,1] 119[123,1] 120[124,1] 121[125,1] 122[126,1] 123[127,1] 124[128,1] 125[129,1] 126[130,1] 127[131,1] 133[132,1] 134[133,1] 135[134,1] 136[135,1] 137[136,1] 138[137,1] 139[138,1] 140[139,1] 141[140,1] 142[141,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 138 139 140 141 142
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 134 135 136 137 138 139 140 141 142
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 12, 13, 15, 16, 18, 29, 30
;; rd  gen 	(11)
0, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141
;; rd  kill	(16)
0, 1, 2, 3, 17, 18, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 6 7 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 10 2 arch/arm/mm/dma-mapping.c:364 (set (reg/f:SI 139)
        (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e730c0 pgprot_kernel>)) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/dma-mapping.c:364 (set (reg:SI 141 [ pgprot_kernel ])
        (mem/c/i:SI (reg/f:SI 139) [0 pgprot_kernel+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 12 2 arch/arm/mm/dma-mapping.c:364 (set (reg:SI 140)
        (and:SI (reg:SI 141 [ pgprot_kernel ])
            (const_int -61 [0xffffffffffffffc3]))) 67 {*arm_andsi3_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/dma-mapping.c:364 (set (reg:SI 142)
        (ior:SI (reg:SI 140)
            (const_int 4 [0x4]))) 89 {*arm_iorsi3} (nil))

(insn 13 12 18 2 arch/arm/mm/dma-mapping.c:364 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 142)) 167 {*arm_movsi_insn} (nil))

(call_insn 18 13 30 2 arch/arm/mm/dma-mapping.c:364 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__dma_alloc") [flags 0x3] <function_decl 0x1145e100 __dma_alloc>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 30 18 0 2 arch/arm/mm/dma-mapping.c:366 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 6, 9, 12, 13, 15, 16, 29, 30, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 2.
deleting insn with uid = 3.
deleting insn with uid = 4.
deleting insn with uid = 5.
deleting insn with uid = 14.
deleting insn with uid = 15.
deleting insn with uid = 16.
deleting insn with uid = 17.
deleting insn with uid = 19.
deleting insn with uid = 20.
deleting insn with uid = 24.
ending the processing of deferred insns

;; Function dma_alloc_coherent (dma_alloc_coherent)[0:1278]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 37.
deferring deletion of insn with uid = 12.
deferring deletion of insn with uid = 11.
deferring deletion of insn with uid = 10.
Deleted 4 trivially dead insns

Number of successful forward propagations: 0



dma_alloc_coherent

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,8u} r1={5d,4u} r2={5d,4u} r3={5d,3u} r11={1d,5u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,7u,1d} r26={1d,4u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={2d,2u} r134={1d,1u} r135={1d} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} 
;;    total ref usage 325{267d,57u,1e} in 24{22 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253
0[0,6] 1[6,5] 2[11,5] 3[16,5] 11[21,1] 12[22,3] 13[25,1] 14[26,3] 15[29,2] 16[31,2] 17[33,2] 18[35,2] 19[37,2] 20[39,2] 21[41,2] 22[43,2] 23[45,2] 24[47,3] 25[50,1] 26[51,1] 27[52,2] 28[54,2] 29[56,2] 30[58,2] 31[60,2] 32[62,2] 33[64,2] 34[66,2] 35[68,2] 36[70,2] 37[72,2] 38[74,2] 39[76,2] 40[78,2] 41[80,2] 42[82,2] 43[84,2] 44[86,2] 45[88,2] 46[90,2] 47[92,2] 48[94,2] 49[96,2] 50[98,2] 51[100,2] 52[102,2] 53[104,2] 54[106,2] 55[108,2] 56[110,2] 57[112,2] 58[114,2] 59[116,2] 60[118,2] 61[120,2] 62[122,2] 63[124,2] 64[126,2] 65[128,2] 66[130,2] 67[132,2] 68[134,2] 69[136,2] 70[138,2] 71[140,2] 72[142,2] 73[144,2] 74[146,2] 75[148,2] 76[150,2] 77[152,2] 78[154,2] 79[156,2] 80[158,2] 81[160,2] 82[162,2] 83[164,2] 84[166,2] 85[168,2] 86[170,2] 87[172,2] 88[174,2] 89[176,2] 90[178,2] 91[180,2] 92[182,2] 93[184,2] 94[186,2] 95[188,2] 96[190,2] 97[192,2] 98[194,2] 99[196,2] 100[198,2] 101[200,2] 102[202,2] 103[204,2] 104[206,2] 105[208,2] 106[210,2] 107[212,2] 108[214,2] 109[216,2] 110[218,2] 111[220,2] 112[222,2] 113[224,2] 114[226,2] 115[228,2] 116[230,2] 117[232,2] 118[234,2] 119[236,2] 120[238,2] 121[240,2] 122[242,2] 123[244,2] 124[246,2] 125[248,2] 126[250,2] 127[252,2] 133[254,2] 134[256,1] 135[257,1] 136[258,1] 137[259,1] 138[260,1] 139[261,1] 140[262,1] 141[263,1] 142[264,1] 143[265,1] 144[266,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 136 137 138 139 140
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 134 136 137 138 139 140
;; live  kill	 14 [lr]
;; rd  in  	(10)
5, 10, 15, 20, 21, 24, 25, 28, 50, 51
;; rd  gen 	(8)
4, 48, 256, 258, 259, 260, 261, 262
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 26, 27, 28, 47, 48, 49, 256, 258, 259, 260, 261, 262

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/dma-mapping.c:346 (set (reg/v/f:SI 136 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/dma-mapping.c:346 (set (reg/v:SI 137 [ size ])
        (reg:SI 1 r1 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/dma-mapping.c:346 (set (reg/v/f:SI 138 [ handle ])
        (reg:SI 2 r2 [ handle ])) 167 {*arm_movsi_insn} (nil))

(insn 5 4 6 2 arch/arm/mm/dma-mapping.c:346 (set (reg/v:SI 139 [ gfp ])
        (reg:SI 3 r3 [ gfp ])) 167 {*arm_movsi_insn} (nil))

(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 6 13 2 arch/arm/mm/dma-mapping.c:349 (set (reg/f:SI 140)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 13 9 14 2 arch/arm/mm/dma-mapping.c:349 (set (reg:SI 3 r3)
        (reg/f:SI 140)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))
        (nil)))

(call_insn 14 13 15 2 arch/arm/mm/dma-mapping.c:349 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("dma_alloc_from_coherent") [flags 0x41] <function_decl 0x11060380 dma_alloc_from_coherent>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 15 14 16 2 arch/arm/mm/dma-mapping.c:349 (set (reg:SI 134 [ D.24540 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/mm/dma-mapping.c:349 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24540 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 2 arch/arm/mm/dma-mapping.c:349 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 137 138 139
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; rd  out 	(16)
4, 10, 15, 20, 21, 24, 25, 48, 50, 51, 256, 258, 259, 260, 261, 262


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  4 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
4, 10, 15, 20, 21, 24, 25, 48, 50, 51, 256, 258, 259, 260, 261, 262
;; rd  gen 	(1)
255
;; rd  kill	(2)
254, 255

;; Pred edge  2 [61.0%]  (fallthru)
(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 22 3 arch/arm/mm/dma-mapping.c:350 (set (reg/f:SI 133 [ D.24543 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 memory+0 S4 A32])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(17)
4, 10, 15, 20, 21, 24, 25, 48, 50, 51, 255, 256, 258, 259, 260, 261, 262


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 137 138 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 133 141 142 143 144
;; live  kill	 14 [lr]
;; rd  in  	(16)
4, 10, 15, 20, 21, 24, 25, 48, 50, 51, 256, 258, 259, 260, 261, 262
;; rd  gen 	(6)
2, 254, 263, 264, 265, 266
;; rd  kill	(15)
0, 1, 2, 3, 4, 5, 26, 27, 28, 254, 255, 263, 264, 265, 266

;; Pred edge  2 [39.0%] 
(code_label 22 19 23 4 190 "" [1 uses])

(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 25 4 arch/arm/mm/dma-mapping.c:352 (set (reg/f:SI 141)
        (symbol_ref:SI ("pgprot_kernel") [flags 0xc0] <var_decl 0x10e730c0 pgprot_kernel>)) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 143 [ pgprot_kernel ])
        (mem/c/i:SI (reg/f:SI 141) [0 pgprot_kernel+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 25 27 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 142)
        (and:SI (reg:SI 143 [ pgprot_kernel ])
            (const_int -573 [0xfffffffffffffdc3]))) 67 {*arm_andsi3_insn} (nil))

(insn 27 26 28 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 144)
        (ior:SI (reg:SI 142)
            (const_int 516 [0x204]))) 89 {*arm_iorsi3} (nil))

(insn 28 27 29 4 arch/arm/mm/dma-mapping.c:352 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg:SI 144)) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ size ])) 167 {*arm_movsi_insn} (nil))

(insn 31 30 32 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 2 r2)
        (reg/v/f:SI 138 [ handle ])) 167 {*arm_movsi_insn} (nil))

(insn 32 31 33 4 arch/arm/mm/dma-mapping.c:352 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ gfp ])) 167 {*arm_movsi_insn} (nil))

(call_insn 33 32 34 4 arch/arm/mm/dma-mapping.c:352 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__dma_alloc") [flags 0x3] <function_decl 0x1145e100 __dma_alloc>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 34 33 35 4 arch/arm/mm/dma-mapping.c:352 (set (reg/f:SI 133 [ D.24543 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(21)
2, 10, 15, 20, 21, 24, 25, 48, 50, 51, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 135
;; live  kill	
;; rd  in  	(23)
2, 4, 10, 15, 20, 21, 24, 25, 48, 50, 51, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266
;; rd  gen 	(2)
0, 257
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 257

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 35 34 36 5 191 "" [0 uses])

(note 36 35 41 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 41 36 47 5 arch/arm/mm/dma-mapping.c:354 (set (reg/i:SI 0 r0)
        (reg/f:SI 133 [ D.24543 ])) 167 {*arm_movsi_insn} (nil))

(insn 47 41 0 5 arch/arm/mm/dma-mapping.c:354 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
0, 10, 15, 20, 21, 24, 25, 48, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 10.
deleting insn with uid = 11.
deleting insn with uid = 12.
deleting insn with uid = 37.
ending the processing of deferred insns
