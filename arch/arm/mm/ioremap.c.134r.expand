
;; Function __iounmap (__iounmap)[0:1243]


;; Generating RTL for gimple basic block 2

;; vunmap ((void *) ((long unsigned int) io_addr & 4294963200)); [tail call]

(insn 6 5 7 2 arch/arm/mm/ioremap.c:318 (set (reg:SI 135)
        (and:SI (reg/v/f:SI 133 [ io_addr ])
            (const_int -4081 [0xfffffffffffff00f]))) -1 (nil))

(insn 7 6 8 2 arch/arm/mm/ioremap.c:318 (set (reg:SI 134)
        (and:SI (reg:SI 135)
            (const_int -16 [0xfffffffffffffff0]))) -1 (expr_list:REG_EQUAL (and:SI (reg/v/f:SI 133 [ io_addr ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 8 7 9 2 arch/arm/mm/ioremap.c:318 (set (reg:SI 0 r0)
        (reg:SI 134)) -1 (nil))

(call_insn/j 9 8 10 2 arch/arm/mm/ioremap.c:318 (parallel [
            (call (mem:SI (symbol_ref:SI ("vunmap") [flags 0x41] <function_decl 0x10fb8c00 vunmap>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(barrier 10 9 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/mm/ioremap.c:293 (set (reg/v/f:SI 133 [ io_addr ])
        (reg:SI 0 r0 [ io_addr ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 arch/arm/mm/ioremap.c:318 (set (reg:SI 135)
        (and:SI (reg/v/f:SI 133 [ io_addr ])
            (const_int -4081 [0xfffffffffffff00f]))) -1 (nil))

(insn 7 6 8 3 arch/arm/mm/ioremap.c:318 (set (reg:SI 134)
        (and:SI (reg:SI 135)
            (const_int -16 [0xfffffffffffffff0]))) -1 (expr_list:REG_EQUAL (and:SI (reg/v/f:SI 133 [ io_addr ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 8 7 9 3 arch/arm/mm/ioremap.c:318 (set (reg:SI 0 r0)
        (reg:SI 134)) -1 (nil))

(call_insn/j 9 8 10 3 arch/arm/mm/ioremap.c:318 (parallel [
            (call (mem:SI (symbol_ref:SI ("vunmap") [flags 0x41] <function_decl 0x10fb8c00 vunmap>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 10 9 15)

;; Start of basic block () -> 4
(note 15 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 12 15 13 4 arch/arm/mm/ioremap.c:319 (set (pc)
        (label_ref 14)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 13 12 11)

;; Start of basic block () -> 5
(code_label 11 13 16 5 1 "" [0 uses])

(note 16 11 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 14 16 17 6 2 "" [1 uses])

(note 17 14 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function __arm_ioremap_pfn_caller (__arm_ioremap_pfn_caller)[0:1239]


;; Generating RTL for gimple basic block 2

;; if (pfn > 1048575)

(insn 10 9 11 arch/arm/mm/ioremap.c:201 (set (reg:SI 148)
        (const_int 1048575 [0xfffff])) -1 (nil))

(insn 11 10 12 arch/arm/mm/ioremap.c:201 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ pfn ])
            (reg:SI 148))) -1 (nil))

(jump_insn 12 11 0 arch/arm/mm/ioremap.c:201 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2899 [0xb53])
        (nil)))

;; Generating RTL for gimple basic block 3

;; if (pfn << 12 & 16777215 != 0)

(insn 14 13 15 arch/arm/mm/ioremap.c:201 discrim 1 (set (reg:SI 149)
        (ashift:SI (reg/v:SI 143 [ pfn ])
            (const_int 12 [0xc]))) -1 (nil))

(insn 15 14 16 arch/arm/mm/ioremap.c:201 discrim 1 (set (reg:SI 150)
        (and:SI (reg:SI 149)
            (const_int 16777215 [0xffffff]))) -1 (nil))

(insn 16 15 17 arch/arm/mm/ioremap.c:201 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 17 16 0 arch/arm/mm/ioremap.c:201 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 18 17 19 4 "" [0 uses])

(note 19 18 0 NOTE_INSN_BASIC_BLOCK)

;; D.23354 = pfn_valid (pfn);

(insn 20 19 21 arch/arm/mm/ioremap.c:207 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ pfn ])) -1 (nil))

(call_insn 21 20 22 arch/arm/mm/ioremap.c:207 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pfn_valid") [flags 0x41] <function_decl 0x10c01c80 pfn_valid>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 22 21 0 arch/arm/mm/ioremap.c:207 (set (reg:SI 140 [ D.23354 ])
        (reg:SI 0 r0)) -1 (nil))

;; if (D.23354 != 0)

(insn 23 22 24 arch/arm/mm/ioremap.c:207 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.23354 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 24 23 0 arch/arm/mm/ioremap.c:207 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 5

;; warn_slowpath_null (&"arch/arm/mm/ioremap.c"[0], 207);

(insn 26 25 27 arch/arm/mm/ioremap.c:207 discrim 1 (set (reg:SI 151)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1140be10>)) -1 (nil))

(insn 27 26 28 arch/arm/mm/ioremap.c:207 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 151)) -1 (nil))

(insn 28 27 29 arch/arm/mm/ioremap.c:207 discrim 1 (set (reg:SI 1 r1)
        (const_int 207 [0xcf])) -1 (nil))

(call_insn 29 28 0 arch/arm/mm/ioremap.c:207 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a67280 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; D.23353 = 0B;

(insn 30 29 0 arch/arm/mm/ioremap.c:208 (set (reg/f:SI 141 [ D.23353 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 33 32 34 6 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; type = get_mem_type (mtype);

(insn 35 34 36 arch/arm/mm/ioremap.c:210 (set (reg:SI 0 r0)
        (reg/v:SI 146 [ mtype ])) -1 (nil))

(call_insn 36 35 37 arch/arm/mm/ioremap.c:210 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_mem_type") [flags 0x41] <function_decl 0x113ded80 get_mem_type>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 37 36 0 arch/arm/mm/ioremap.c:210 (set (reg/v/f:SI 137 [ type ])
        (reg:SI 0 r0)) -1 (nil))

;; if (type == 0B)

(insn 38 37 39 arch/arm/mm/ioremap.c:211 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 137 [ type ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 39 38 0 arch/arm/mm/ioremap.c:211 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7954 [0x1f12])
        (nil)))

;; Generating RTL for gimple basic block 7

;; D.23365 = (offset + 4095) + size;

(insn 41 40 42 arch/arm/mm/ioremap.c:217 (set (reg:SI 153)
        (plus:SI (reg/v:SI 144 [ offset ])
            (const_int 4080 [0xff0]))) -1 (nil))

(insn 42 41 43 arch/arm/mm/ioremap.c:217 (set (reg:SI 152)
        (plus:SI (reg:SI 153)
            (const_int 15 [0xf]))) -1 (expr_list:REG_EQUAL (plus:SI (reg/v:SI 144 [ offset ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 43 42 0 arch/arm/mm/ioremap.c:217 (set (reg:SI 139 [ D.23365 ])
        (plus:SI (reg:SI 152)
            (reg/v:SI 145 [ size ]))) -1 (nil))

;; size.389 = D.23365 & 4294963200;

(insn 44 43 45 arch/arm/mm/ioremap.c:217 (set (reg:SI 154)
        (and:SI (reg:SI 139 [ D.23365 ])
            (const_int -4081 [0xfffffffffffff00f]))) -1 (nil))

(insn 45 44 0 arch/arm/mm/ioremap.c:217 (set (reg/v:SI 133 [ size.389 ])
        (and:SI (reg:SI 154)
            (const_int -16 [0xfffffffffffffff0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 139 [ D.23365 ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

;; area = get_vm_area_caller (size.389, 1, caller);

(insn 46 45 47 arch/arm/mm/ioremap.c:219 (set (reg:SI 0 r0)
        (reg/v:SI 133 [ size.389 ])) -1 (nil))

(insn 47 46 48 arch/arm/mm/ioremap.c:219 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) -1 (nil))

(insn 48 47 49 arch/arm/mm/ioremap.c:219 (set (reg:SI 2 r2)
        (reg/v/f:SI 147 [ caller ])) -1 (nil))

(call_insn 49 48 50 arch/arm/mm/ioremap.c:219 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_vm_area_caller") [flags 0x41] <function_decl 0x10fb8f00 get_vm_area_caller>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 50 49 0 arch/arm/mm/ioremap.c:219 (set (reg/v/f:SI 134 [ area ])
        (reg:SI 0 r0)) -1 (nil))

;; if (area == 0B)

(insn 51 50 52 arch/arm/mm/ioremap.c:220 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ area ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 52 51 0 arch/arm/mm/ioremap.c:220 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2164 [0x874])
        (nil)))

;; Generating RTL for gimple basic block 8

;; D.23369 = area->addr;

(insn 54 53 0 arch/arm/mm/ioremap.c:222 (set (reg/f:SI 138 [ D.23369 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 134 [ area ])
                (const_int 4 [0x4])) [0 <variable>.addr+0 S4 A32])) -1 (nil))

;; addr = (long unsigned int) D.23369;

(insn 55 54 0 arch/arm/mm/ioremap.c:222 (set (reg/v:SI 135 [ addr ])
        (reg/f:SI 138 [ D.23369 ])) -1 (nil))

;; err = ioremap_page_range (addr, size.389 + addr, pfn << 12, type->prot_pte);

(insn 56 55 57 arch/arm/mm/ioremap.c:236 (set (reg:SI 155)
        (plus:SI (reg/v:SI 133 [ size.389 ])
            (reg/v:SI 135 [ addr ]))) -1 (nil))

(insn 57 56 58 arch/arm/mm/ioremap.c:236 (set (reg:SI 156)
        (ashift:SI (reg/v:SI 143 [ pfn ])
            (const_int 12 [0xc]))) -1 (nil))

(insn 58 57 59 arch/arm/mm/ioremap.c:236 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ addr ])) -1 (nil))

(insn 59 58 60 arch/arm/mm/ioremap.c:236 (set (reg:SI 1 r1)
        (reg:SI 155)) -1 (nil))

(insn 60 59 61 arch/arm/mm/ioremap.c:236 (set (reg:SI 2 r2)
        (reg:SI 156)) -1 (nil))

(insn 61 60 62 arch/arm/mm/ioremap.c:236 (set (reg:SI 3 r3)
        (mem/s/j:SI (reg/v/f:SI 137 [ type ]) [0 <variable>.prot_pte+0 S4 A32])) -1 (nil))

(call_insn 62 61 63 arch/arm/mm/ioremap.c:236 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ioremap_page_range") [flags 0x41] <function_decl 0x10fcbc00 ioremap_page_range>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 63 62 0 arch/arm/mm/ioremap.c:236 (set (reg/v:SI 136 [ err ])
        (reg:SI 0 r0)) -1 (nil))

;; if (err != 0)

(insn 64 63 65 arch/arm/mm/ioremap.c:239 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ err ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 65 64 0 arch/arm/mm/ioremap.c:239 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9566 [0x255e])
        (nil)))

;; Generating RTL for gimple basic block 9

;; vunmap (D.23369);

(insn 67 66 68 arch/arm/mm/ioremap.c:240 (set (reg:SI 0 r0)
        (reg/f:SI 138 [ D.23369 ])) -1 (nil))

(call_insn 68 67 0 arch/arm/mm/ioremap.c:240 (parallel [
            (call (mem:SI (symbol_ref:SI ("vunmap") [flags 0x41] <function_decl 0x10fb8c00 vunmap>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; D.23353 = 0B;

(insn 69 68 0 arch/arm/mm/ioremap.c:241 (set (reg/f:SI 141 [ D.23353 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 72 71 73 8 "" [0 uses])

(note 73 72 0 NOTE_INSN_BASIC_BLOCK)

;; if (cacheid & 2 == 0)

(insn 74 73 75 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 157)
        (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x10fc0960 cacheid>)) -1 (nil))

(insn 75 74 76 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 159)
        (mem/c/i:SI (reg/f:SI 157) [0 cacheid+0 S4 A32])) -1 (nil))

(insn 76 75 77 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 158)
        (and:SI (reg:SI 159)
            (const_int 2 [0x2]))) -1 (nil))

(insn 77 76 78 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 78 77 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))

;; Generating RTL for gimple basic block 11

;; cpu_cache.flush_kern_all ();

(insn 80 79 81 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:332 (set (reg/f:SI 160)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10fc0f60 cpu_cache>)) -1 (nil))

(insn 81 80 82 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:332 (set (reg/f:SI 161)
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 160)
                (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32])) -1 (nil))

(call_insn 82 81 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:332 (parallel [
            (call (mem:SI (reg/f:SI 161) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 85 84 86 9 "" [0 uses])

(note 86 85 0 NOTE_INSN_BASIC_BLOCK)

;; __asm__ __volatile__("dsb" : "memory");

(insn 87 86 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:338 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5635626)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 88 87 89 10 "" [0 uses])

(note 89 88 0 NOTE_INSN_BASIC_BLOCK)

;; D.23353 = (void *) (offset + addr);

(insn 90 89 0 arch/arm/mm/ioremap.c:245 (set (reg/f:SI 141 [ D.23353 ])
        (plus:SI (reg/v:SI 144 [ offset ])
            (reg/v:SI 135 [ addr ]))) -1 (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 93 92 94 5 "" [0 uses])

(note 94 93 0 NOTE_INSN_BASIC_BLOCK)

;; D.23353 = 0B;

(insn 95 94 0 arch/arm/mm/ioremap.c:202 (set (reg/f:SI 141 [ D.23353 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 96 95 97 7 "" [0 uses])

(note 97 96 0 NOTE_INSN_BASIC_BLOCK)

;; return D.23353;

(insn 98 97 99 arch/arm/mm/ioremap.c:246 (set (reg:SI 142 [ <result> ])
        (reg/f:SI 141 [ D.23353 ])) -1 (nil))

(jump_insn 99 98 100 arch/arm/mm/ioremap.c:246 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 100 99 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 8 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 8 3 2 arch/arm/mm/ioremap.c:192 (set (reg/v:SI 143 [ pfn ])
        (reg:SI 0 r0 [ pfn ])) -1 (nil))

(insn 3 2 4 2 arch/arm/mm/ioremap.c:192 (set (reg/v:SI 144 [ offset ])
        (reg:SI 1 r1 [ offset ])) -1 (nil))

(insn 4 3 5 2 arch/arm/mm/ioremap.c:192 (set (reg/v:SI 145 [ size ])
        (reg:SI 2 r2 [ size ])) -1 (nil))

(insn 5 4 6 2 arch/arm/mm/ioremap.c:192 (set (reg/v:SI 146 [ mtype ])
        (reg:SI 3 r3 [ mtype ])) -1 (nil))

(insn 6 5 7 2 arch/arm/mm/ioremap.c:192 (set (reg/v/f:SI 147 [ caller ])
        (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 caller+0 S4 A32])) -1 (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 128 virtual-incoming-args) [0 caller+0 S4 A32])
        (nil)))

(note 7 6 9 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 9 7 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/mm/ioremap.c:201 (set (reg:SI 148)
        (const_int 1048575 [0xfffff])) -1 (nil))

(insn 11 10 12 3 arch/arm/mm/ioremap.c:201 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 143 [ pfn ])
            (reg:SI 148))) -1 (nil))

(jump_insn 12 11 13 3 arch/arm/mm/ioremap.c:201 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2899 [0xb53])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [71.0%]  (fallthru)
;; Succ edge  5 [29.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [71.0%]  (fallthru)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 4 arch/arm/mm/ioremap.c:201 discrim 1 (set (reg:SI 149)
        (ashift:SI (reg/v:SI 143 [ pfn ])
            (const_int 12 [0xc]))) -1 (nil))

(insn 15 14 16 4 arch/arm/mm/ioremap.c:201 discrim 1 (set (reg:SI 150)
        (and:SI (reg:SI 149)
            (const_int 16777215 [0xffffff]))) -1 (nil))

(insn 16 15 17 4 arch/arm/mm/ioremap.c:201 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 17 16 18 4 arch/arm/mm/ioremap.c:201 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
        (nil)))
;; End of basic block 4 -> ( 15 5)

;; Succ edge  15 [90.0%] 
;; Succ edge  5 [10.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3 [29.0%] 
;; Pred edge  4 [10.0%]  (fallthru)
(code_label 18 17 19 5 4 "" [1 uses])

(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 5 arch/arm/mm/ioremap.c:207 (set (reg:SI 0 r0)
        (reg/v:SI 143 [ pfn ])) -1 (nil))

(call_insn 21 20 22 5 arch/arm/mm/ioremap.c:207 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("pfn_valid") [flags 0x41] <function_decl 0x10c01c80 pfn_valid>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 22 21 23 5 arch/arm/mm/ioremap.c:207 (set (reg:SI 140 [ D.23354 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 23 22 24 5 arch/arm/mm/ioremap.c:207 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140 [ D.23354 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 24 23 25 5 arch/arm/mm/ioremap.c:207 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [0.0%]  (fallthru)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 6 arch/arm/mm/ioremap.c:207 discrim 1 (set (reg:SI 151)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x1140be10>)) -1 (nil))

(insn 27 26 28 6 arch/arm/mm/ioremap.c:207 discrim 1 (set (reg:SI 0 r0)
        (reg:SI 151)) -1 (nil))

(insn 28 27 29 6 arch/arm/mm/ioremap.c:207 discrim 1 (set (reg:SI 1 r1)
        (const_int 207 [0xcf])) -1 (nil))

(call_insn 29 28 30 6 arch/arm/mm/ioremap.c:207 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a67280 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 30 29 31 6 arch/arm/mm/ioremap.c:208 (set (reg/f:SI 141 [ D.23353 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 31 30 32 6 arch/arm/mm/ioremap.c:208 (set (pc)
        (label_ref 96)) -1 (nil))
;; End of basic block 6 -> ( 16)

;; Succ edge  16 [100.0%] 

(barrier 32 31 33)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [100.0%] 
(code_label 33 32 34 7 6 "" [1 uses])

(note 34 33 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 34 36 7 arch/arm/mm/ioremap.c:210 (set (reg:SI 0 r0)
        (reg/v:SI 146 [ mtype ])) -1 (nil))

(call_insn 36 35 37 7 arch/arm/mm/ioremap.c:210 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_mem_type") [flags 0x41] <function_decl 0x113ded80 get_mem_type>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 37 36 38 7 arch/arm/mm/ioremap.c:210 (set (reg/v/f:SI 137 [ type ])
        (reg:SI 0 r0)) -1 (nil))

(insn 38 37 39 7 arch/arm/mm/ioremap.c:211 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 137 [ type ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 39 38 40 7 arch/arm/mm/ioremap.c:211 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7954 [0x1f12])
        (nil)))
;; End of basic block 7 -> ( 15 8)

;; Succ edge  15 [79.5%] 
;; Succ edge  8 [20.5%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 [20.5%]  (fallthru)
(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 8 arch/arm/mm/ioremap.c:217 (set (reg:SI 153)
        (plus:SI (reg/v:SI 144 [ offset ])
            (const_int 4080 [0xff0]))) -1 (nil))

(insn 42 41 43 8 arch/arm/mm/ioremap.c:217 (set (reg:SI 152)
        (plus:SI (reg:SI 153)
            (const_int 15 [0xf]))) -1 (expr_list:REG_EQUAL (plus:SI (reg/v:SI 144 [ offset ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 43 42 44 8 arch/arm/mm/ioremap.c:217 (set (reg:SI 139 [ D.23365 ])
        (plus:SI (reg:SI 152)
            (reg/v:SI 145 [ size ]))) -1 (nil))

(insn 44 43 45 8 arch/arm/mm/ioremap.c:217 (set (reg:SI 154)
        (and:SI (reg:SI 139 [ D.23365 ])
            (const_int -4081 [0xfffffffffffff00f]))) -1 (nil))

(insn 45 44 46 8 arch/arm/mm/ioremap.c:217 (set (reg/v:SI 133 [ size.389 ])
        (and:SI (reg:SI 154)
            (const_int -16 [0xfffffffffffffff0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 139 [ D.23365 ])
            (const_int -4096 [0xfffffffffffff000]))
        (nil)))

(insn 46 45 47 8 arch/arm/mm/ioremap.c:219 (set (reg:SI 0 r0)
        (reg/v:SI 133 [ size.389 ])) -1 (nil))

(insn 47 46 48 8 arch/arm/mm/ioremap.c:219 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) -1 (nil))

(insn 48 47 49 8 arch/arm/mm/ioremap.c:219 (set (reg:SI 2 r2)
        (reg/v/f:SI 147 [ caller ])) -1 (nil))

(call_insn 49 48 50 8 arch/arm/mm/ioremap.c:219 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_vm_area_caller") [flags 0x41] <function_decl 0x10fb8f00 get_vm_area_caller>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 50 49 51 8 arch/arm/mm/ioremap.c:219 (set (reg/v/f:SI 134 [ area ])
        (reg:SI 0 r0)) -1 (nil))

(insn 51 50 52 8 arch/arm/mm/ioremap.c:220 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 134 [ area ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 52 51 53 8 arch/arm/mm/ioremap.c:220 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 93)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2164 [0x874])
        (nil)))
;; End of basic block 8 -> ( 15 9)

;; Succ edge  15 [21.6%] 
;; Succ edge  9 [78.4%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 [78.4%]  (fallthru)
(note 53 52 54 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 55 9 arch/arm/mm/ioremap.c:222 (set (reg/f:SI 138 [ D.23369 ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 134 [ area ])
                (const_int 4 [0x4])) [0 <variable>.addr+0 S4 A32])) -1 (nil))

(insn 55 54 56 9 arch/arm/mm/ioremap.c:222 (set (reg/v:SI 135 [ addr ])
        (reg/f:SI 138 [ D.23369 ])) -1 (nil))

(insn 56 55 57 9 arch/arm/mm/ioremap.c:236 (set (reg:SI 155)
        (plus:SI (reg/v:SI 133 [ size.389 ])
            (reg/v:SI 135 [ addr ]))) -1 (nil))

(insn 57 56 58 9 arch/arm/mm/ioremap.c:236 (set (reg:SI 156)
        (ashift:SI (reg/v:SI 143 [ pfn ])
            (const_int 12 [0xc]))) -1 (nil))

(insn 58 57 59 9 arch/arm/mm/ioremap.c:236 (set (reg:SI 0 r0)
        (reg/v:SI 135 [ addr ])) -1 (nil))

(insn 59 58 60 9 arch/arm/mm/ioremap.c:236 (set (reg:SI 1 r1)
        (reg:SI 155)) -1 (nil))

(insn 60 59 61 9 arch/arm/mm/ioremap.c:236 (set (reg:SI 2 r2)
        (reg:SI 156)) -1 (nil))

(insn 61 60 62 9 arch/arm/mm/ioremap.c:236 (set (reg:SI 3 r3)
        (mem/s/j:SI (reg/v/f:SI 137 [ type ]) [0 <variable>.prot_pte+0 S4 A32])) -1 (nil))

(call_insn 62 61 63 9 arch/arm/mm/ioremap.c:236 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("ioremap_page_range") [flags 0x41] <function_decl 0x10fcbc00 ioremap_page_range>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 63 62 64 9 arch/arm/mm/ioremap.c:236 (set (reg/v:SI 136 [ err ])
        (reg:SI 0 r0)) -1 (nil))

(insn 64 63 65 9 arch/arm/mm/ioremap.c:239 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ err ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 65 64 66 9 arch/arm/mm/ioremap.c:239 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9566 [0x255e])
        (nil)))
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 [4.3%]  (fallthru)
;; Succ edge  11 [95.7%] 

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [4.3%]  (fallthru)
(note 66 65 67 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 67 66 68 10 arch/arm/mm/ioremap.c:240 (set (reg:SI 0 r0)
        (reg/f:SI 138 [ D.23369 ])) -1 (nil))

(call_insn 68 67 69 10 arch/arm/mm/ioremap.c:240 (parallel [
            (call (mem:SI (symbol_ref:SI ("vunmap") [flags 0x41] <function_decl 0x10fb8c00 vunmap>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 69 68 70 10 arch/arm/mm/ioremap.c:241 (set (reg/f:SI 141 [ D.23353 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 70 69 71 10 arch/arm/mm/ioremap.c:241 (set (pc)
        (label_ref 96)) -1 (nil))
;; End of basic block 10 -> ( 16)

;; Succ edge  16 [100.0%] 

(barrier 71 70 72)

;; Start of basic block ( 9) -> 11
;; Pred edge  9 [95.7%] 
(code_label 72 71 73 11 8 "" [1 uses])

(note 73 72 74 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg/f:SI 157)
        (symbol_ref:SI ("cacheid") [flags 0xc0] <var_decl 0x10fc0960 cacheid>)) -1 (nil))

(insn 75 74 76 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 159)
        (mem/c/i:SI (reg/f:SI 157) [0 cacheid+0 S4 A32])) -1 (nil))

(insn 76 75 77 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:SI 158)
        (and:SI (reg:SI 159)
            (const_int 2 [0x2]))) -1 (nil))

(insn 77 76 78 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 158)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 78 77 79 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cachetype.h:52 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 11 -> ( 12 13)

;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  13 [71.0%] 

;; Start of basic block ( 11) -> 12
;; Pred edge  11 [29.0%]  (fallthru)
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:332 (set (reg/f:SI 160)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x10fc0f60 cpu_cache>)) -1 (nil))

(insn 81 80 82 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:332 (set (reg/f:SI 161)
        (mem/s/f/j/c:SI (plus:SI (reg/f:SI 160)
                (const_int 4 [0x4])) [0 cpu_cache.flush_kern_all+0 S4 A32])) -1 (nil))

(call_insn 82 81 83 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:332 (parallel [
            (call (mem:SI (reg/f:SI 161) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(jump_insn 83 82 84 12 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:332 (set (pc)
        (label_ref 88)) -1 (nil))
;; End of basic block 12 -> ( 14)

;; Succ edge  14 [100.0%] 

(barrier 84 83 85)

;; Start of basic block ( 11) -> 13
;; Pred edge  11 [71.0%] 
(code_label 85 84 86 13 9 "" [1 uses])

(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 13 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cacheflush.h:338 (parallel [
            (asm_operands/v ("dsb") ("") 0 []
                 [] 5635626)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 12) -> 14
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 88 87 89 14 10 "" [1 uses])

(note 89 88 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 14 arch/arm/mm/ioremap.c:245 (set (reg/f:SI 141 [ D.23353 ])
        (plus:SI (reg/v:SI 144 [ offset ])
            (reg/v:SI 135 [ addr ]))) -1 (nil))

(jump_insn 91 90 92 14 arch/arm/mm/ioremap.c:245 (set (pc)
        (label_ref 96)) -1 (nil))
;; End of basic block 14 -> ( 16)

;; Succ edge  16 [100.0%] 

(barrier 92 91 93)

;; Start of basic block ( 4 8 7) -> 15
;; Pred edge  4 [90.0%] 
;; Pred edge  8 [21.6%] 
;; Pred edge  7 [79.5%] 
(code_label 93 92 94 15 5 "" [3 uses])

(note 94 93 95 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 15 arch/arm/mm/ioremap.c:202 (set (reg/f:SI 141 [ D.23353 ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 6 14 10) -> 16
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  10 [100.0%] 
(code_label 96 95 97 16 7 "" [3 uses])

(note 97 96 98 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 99 16 arch/arm/mm/ioremap.c:246 (set (reg:SI 142 [ <result> ])
        (reg/f:SI 141 [ D.23353 ])) -1 (nil))

(jump_insn 99 98 100 16 arch/arm/mm/ioremap.c:246 (set (pc)
        (label_ref 101)) -1 (nil))
;; End of basic block 16 -> ( 18)

;; Succ edge  18 [100.0%] 

(barrier 100 99 109)

;; Start of basic block () -> 17
(note 109 100 103 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 103 109 104 17 arch/arm/mm/ioremap.c:246 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 104 103 105 17 arch/arm/mm/ioremap.c:246 (clobber (reg:SI 142 [ <result> ])) -1 (nil))

(jump_insn 105 104 106 17 arch/arm/mm/ioremap.c:246 (set (pc)
        (label_ref 107)) -1 (nil))
;; End of basic block 17 -> ( 19)

;; Succ edge  19 [100.0%] 

(barrier 106 105 101)

;; Start of basic block ( 16) -> 18
;; Pred edge  16 [100.0%] 
(code_label 101 106 110 18 3 "" [1 uses])

(note 110 101 102 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 102 110 107 18 arch/arm/mm/ioremap.c:246 (set (reg/i:SI 0 r0)
        (reg:SI 142 [ <result> ])) -1 (nil))
;; End of basic block 18 -> ( 19)

;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 17 18) -> 19
;; Pred edge  17 [100.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 107 102 111 19 11 "" [1 uses])

(note 111 107 108 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 108 111 0 19 arch/arm/mm/ioremap.c:246 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 19 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function __arm_ioremap_pfn (__arm_ioremap_pfn)[0:1241]


;; Generating RTL for gimple basic block 2

;; D.23401 = __builtin_return_address (0);

(insn 9 8 0 arch/arm/mm/ioremap.c:279 (set (reg/f:SI 133 [ D.23401 ])
        (reg:SI 140)) -1 (nil))

;; D.23400 = __arm_ioremap_pfn_caller (pfn, offset, size, mtype, D.23401); [tail call]

(insn 10 9 11 arch/arm/mm/ioremap.c:279 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 133 [ D.23401 ])) -1 (nil))

(insn 11 10 12 arch/arm/mm/ioremap.c:279 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ pfn ])) -1 (nil))

(insn 12 11 13 arch/arm/mm/ioremap.c:279 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ offset ])) -1 (nil))

(insn 13 12 14 arch/arm/mm/ioremap.c:279 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ size ])) -1 (nil))

(insn 14 13 15 arch/arm/mm/ioremap.c:279 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ mtype ])) -1 (nil))

(call_insn 15 14 16 arch/arm/mm/ioremap.c:279 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__arm_ioremap_pfn_caller") [flags 0x3] <function_decl 0x10fbf980 __arm_ioremap_pfn_caller>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 16 15 0 arch/arm/mm/ioremap.c:279 (set (reg/f:SI 134 [ D.23400 ])
        (reg:SI 0 r0)) -1 (nil))

;; return D.23400;

(insn 17 16 18 arch/arm/mm/ioremap.c:281 (set (reg:SI 135 [ <result> ])
        (reg/f:SI 134 [ D.23400 ])) -1 (nil))

(jump_insn 18 17 19 arch/arm/mm/ioremap.c:281 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 19 18 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/ioremap.c:278 (set (reg/v:SI 136 [ pfn ])
        (reg:SI 0 r0 [ pfn ])) -1 (nil))

(insn 3 2 4 2 arch/arm/mm/ioremap.c:278 (set (reg/v:SI 137 [ offset ])
        (reg:SI 1 r1 [ offset ])) -1 (nil))

(insn 4 3 5 2 arch/arm/mm/ioremap.c:278 (set (reg/v:SI 138 [ size ])
        (reg:SI 2 r2 [ size ])) -1 (nil))

(insn 5 4 6 2 arch/arm/mm/ioremap.c:278 (set (reg/v:SI 139 [ mtype ])
        (reg:SI 3 r3 [ mtype ])) -1 (nil))

(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 8 6 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 arch/arm/mm/ioremap.c:279 (set (reg/f:SI 133 [ D.23401 ])
        (reg:SI 140)) -1 (nil))

(insn 10 9 11 3 arch/arm/mm/ioremap.c:279 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/f:SI 133 [ D.23401 ])) -1 (nil))

(insn 11 10 12 3 arch/arm/mm/ioremap.c:279 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ pfn ])) -1 (nil))

(insn 12 11 13 3 arch/arm/mm/ioremap.c:279 (set (reg:SI 1 r1)
        (reg/v:SI 137 [ offset ])) -1 (nil))

(insn 13 12 14 3 arch/arm/mm/ioremap.c:279 (set (reg:SI 2 r2)
        (reg/v:SI 138 [ size ])) -1 (nil))

(insn 14 13 15 3 arch/arm/mm/ioremap.c:279 (set (reg:SI 3 r3)
        (reg/v:SI 139 [ mtype ])) -1 (nil))

(call_insn 15 14 16 3 arch/arm/mm/ioremap.c:279 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__arm_ioremap_pfn_caller") [flags 0x3] <function_decl 0x10fbf980 __arm_ioremap_pfn_caller>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 16 15 17 3 arch/arm/mm/ioremap.c:279 (set (reg/f:SI 134 [ D.23400 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 17 16 18 3 arch/arm/mm/ioremap.c:281 (set (reg:SI 135 [ <result> ])
        (reg/f:SI 134 [ D.23400 ])) -1 (nil))

(jump_insn 18 17 19 3 arch/arm/mm/ioremap.c:281 (set (pc)
        (label_ref 20)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 19 18 28)

;; Start of basic block () -> 4
(note 28 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 28 23 4 arch/arm/mm/ioremap.c:281 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 23 22 24 4 arch/arm/mm/ioremap.c:281 (clobber (reg:SI 135 [ <result> ])) -1 (nil))

(jump_insn 24 23 25 4 arch/arm/mm/ioremap.c:281 (set (pc)
        (label_ref 26)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 25 24 20)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 20 25 29 5 15 "" [1 uses])

(note 29 20 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 29 26 5 arch/arm/mm/ioremap.c:281 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 26 21 30 6 16 "" [1 uses])

(note 30 26 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 30 0 6 arch/arm/mm/ioremap.c:281 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function __arm_ioremap_caller (__arm_ioremap_caller)[0:1240]


;; Generating RTL for gimple basic block 2

;; if ((phys_addr + 4294967295) + size < phys_addr | size == 0 != 0)

(insn 9 8 10 arch/arm/mm/ioremap.c:258 (set (reg:SI 139)
        (plus:SI (reg/v:SI 135 [ phys_addr ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(insn 10 9 11 arch/arm/mm/ioremap.c:258 (set (reg:SI 140)
        (plus:SI (reg:SI 139)
            (reg/v:SI 136 [ size ]))) -1 (nil))

(insn 11 10 12 arch/arm/mm/ioremap.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (reg/v:SI 135 [ phys_addr ]))) -1 (nil))

(insn 12 11 13 arch/arm/mm/ioremap.c:258 (set (reg:SI 142)
        (ltu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 13 12 14 arch/arm/mm/ioremap.c:258 (set (reg:QI 141)
        (subreg:QI (reg:SI 142) 0)) -1 (nil))

(insn 14 13 15 arch/arm/mm/ioremap.c:259 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ size ])
            (const_int 0 [0x0]))) -1 (nil))

(insn 15 14 16 arch/arm/mm/ioremap.c:259 (set (reg:SI 144)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 16 15 17 arch/arm/mm/ioremap.c:259 (set (reg:QI 143)
        (subreg:QI (reg:SI 144) 0)) -1 (nil))

(insn 17 16 18 arch/arm/mm/ioremap.c:259 (set (reg:SI 145)
        (ior:SI (subreg:SI (reg:QI 141) 0)
            (subreg:SI (reg:QI 143) 0))) -1 (nil))

(insn 18 17 19 arch/arm/mm/ioremap.c:259 (set (reg:QI 146)
        (subreg:QI (reg:SI 145) 0)) -1 (nil))

(insn 19 18 20 arch/arm/mm/ioremap.c:259 (set (reg:SI 147)
        (zero_extend:SI (reg:QI 146))) -1 (nil))

(insn 20 19 21 arch/arm/mm/ioremap.c:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 21 20 0 arch/arm/mm/ioremap.c:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
        (nil)))

;; Generating RTL for gimple basic block 3

;; D.23392 = 0B;

(insn 23 22 0 arch/arm/mm/ioremap.c:260 (set (reg/f:SI 133 [ D.23392 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 26 25 27 18 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; D.23392 = __arm_ioremap_pfn_caller (phys_addr >> 12, phys_addr & 4095, size, mtype, caller); [tail call]

(insn 28 27 29 arch/arm/mm/ioremap.c:262 (set (reg:SI 148)
        (lshiftrt:SI (reg/v:SI 135 [ phys_addr ])
            (const_int 12 [0xc]))) -1 (nil))

(insn 29 28 30 arch/arm/mm/ioremap.c:262 (set (reg:SI 150)
        (ashift:SI (reg/v:SI 135 [ phys_addr ])
            (const_int 20 [0x14]))) -1 (nil))

(insn 30 29 31 arch/arm/mm/ioremap.c:262 (set (reg:SI 149)
        (lshiftrt:SI (reg:SI 150)
            (const_int 20 [0x14]))) -1 (expr_list:REG_EQUAL (and:SI (reg/v:SI 135 [ phys_addr ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 31 30 32 arch/arm/mm/ioremap.c:262 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 138 [ caller ])) -1 (nil))

(insn 32 31 33 arch/arm/mm/ioremap.c:262 (set (reg:SI 0 r0)
        (reg:SI 148)) -1 (nil))

(insn 33 32 34 arch/arm/mm/ioremap.c:262 (set (reg:SI 1 r1)
        (reg:SI 149)) -1 (nil))

(insn 34 33 35 arch/arm/mm/ioremap.c:262 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ size ])) -1 (nil))

(insn 35 34 36 arch/arm/mm/ioremap.c:262 (set (reg:SI 3 r3)
        (reg/v:SI 137 [ mtype ])) -1 (nil))

(call_insn 36 35 37 arch/arm/mm/ioremap.c:262 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__arm_ioremap_pfn_caller") [flags 0x3] <function_decl 0x10fbf980 __arm_ioremap_pfn_caller>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 37 36 0 arch/arm/mm/ioremap.c:262 (set (reg/f:SI 133 [ D.23392 ])
        (reg:SI 0 r0)) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 38 37 39 19 "" [0 uses])

(note 39 38 0 NOTE_INSN_BASIC_BLOCK)

;; return D.23392;

(insn 40 39 41 arch/arm/mm/ioremap.c:264 (set (reg:SI 134 [ <result> ])
        (reg/f:SI 133 [ D.23392 ])) -1 (nil))

(jump_insn 41 40 42 arch/arm/mm/ioremap.c:264 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 42 41 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 7 3 2 arch/arm/mm/ioremap.c:250 (set (reg/v:SI 135 [ phys_addr ])
        (reg:SI 0 r0 [ phys_addr ])) -1 (nil))

(insn 3 2 4 2 arch/arm/mm/ioremap.c:250 (set (reg/v:SI 136 [ size ])
        (reg:SI 1 r1 [ size ])) -1 (nil))

(insn 4 3 5 2 arch/arm/mm/ioremap.c:250 (set (reg/v:SI 137 [ mtype ])
        (reg:SI 2 r2 [ mtype ])) -1 (nil))

(insn 5 4 6 2 arch/arm/mm/ioremap.c:250 (set (reg/v/f:SI 138 [ caller ])
        (reg:SI 3 r3 [ caller ])) -1 (nil))

(note 6 5 8 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 8 6 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 3 arch/arm/mm/ioremap.c:258 (set (reg:SI 139)
        (plus:SI (reg/v:SI 135 [ phys_addr ])
            (const_int -1 [0xffffffffffffffff]))) -1 (nil))

(insn 10 9 11 3 arch/arm/mm/ioremap.c:258 (set (reg:SI 140)
        (plus:SI (reg:SI 139)
            (reg/v:SI 136 [ size ]))) -1 (nil))

(insn 11 10 12 3 arch/arm/mm/ioremap.c:258 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 140)
            (reg/v:SI 135 [ phys_addr ]))) -1 (nil))

(insn 12 11 13 3 arch/arm/mm/ioremap.c:258 (set (reg:SI 142)
        (ltu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 13 12 14 3 arch/arm/mm/ioremap.c:258 (set (reg:QI 141)
        (subreg:QI (reg:SI 142) 0)) -1 (nil))

(insn 14 13 15 3 arch/arm/mm/ioremap.c:259 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ size ])
            (const_int 0 [0x0]))) -1 (nil))

(insn 15 14 16 3 arch/arm/mm/ioremap.c:259 (set (reg:SI 144)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 16 15 17 3 arch/arm/mm/ioremap.c:259 (set (reg:QI 143)
        (subreg:QI (reg:SI 144) 0)) -1 (nil))

(insn 17 16 18 3 arch/arm/mm/ioremap.c:259 (set (reg:SI 145)
        (ior:SI (subreg:SI (reg:QI 141) 0)
            (subreg:SI (reg:QI 143) 0))) -1 (nil))

(insn 18 17 19 3 arch/arm/mm/ioremap.c:259 (set (reg:QI 146)
        (subreg:QI (reg:SI 145) 0)) -1 (nil))

(insn 19 18 20 3 arch/arm/mm/ioremap.c:259 (set (reg:SI 147)
        (zero_extend:SI (reg:QI 146))) -1 (nil))

(insn 20 19 21 3 arch/arm/mm/ioremap.c:259 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 21 20 22 3 arch/arm/mm/ioremap.c:259 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [61.0%]  (fallthru)
;; Succ edge  5 [39.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [61.0%]  (fallthru)
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 arch/arm/mm/ioremap.c:260 (set (reg/f:SI 133 [ D.23392 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 24 23 25 4 arch/arm/mm/ioremap.c:260 (set (pc)
        (label_ref 38)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 25 24 26)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [39.0%] 
(code_label 26 25 27 5 18 "" [1 uses])

(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 5 arch/arm/mm/ioremap.c:262 (set (reg:SI 148)
        (lshiftrt:SI (reg/v:SI 135 [ phys_addr ])
            (const_int 12 [0xc]))) -1 (nil))

(insn 29 28 30 5 arch/arm/mm/ioremap.c:262 (set (reg:SI 150)
        (ashift:SI (reg/v:SI 135 [ phys_addr ])
            (const_int 20 [0x14]))) -1 (nil))

(insn 30 29 31 5 arch/arm/mm/ioremap.c:262 (set (reg:SI 149)
        (lshiftrt:SI (reg:SI 150)
            (const_int 20 [0x14]))) -1 (expr_list:REG_EQUAL (and:SI (reg/v:SI 135 [ phys_addr ])
            (const_int 4095 [0xfff]))
        (nil)))

(insn 31 30 32 5 arch/arm/mm/ioremap.c:262 (set (mem:SI (reg/f:SI 131 virtual-outgoing-args) [0 S4 A32])
        (reg/v/f:SI 138 [ caller ])) -1 (nil))

(insn 32 31 33 5 arch/arm/mm/ioremap.c:262 (set (reg:SI 0 r0)
        (reg:SI 148)) -1 (nil))

(insn 33 32 34 5 arch/arm/mm/ioremap.c:262 (set (reg:SI 1 r1)
        (reg:SI 149)) -1 (nil))

(insn 34 33 35 5 arch/arm/mm/ioremap.c:262 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ size ])) -1 (nil))

(insn 35 34 36 5 arch/arm/mm/ioremap.c:262 (set (reg:SI 3 r3)
        (reg/v:SI 137 [ mtype ])) -1 (nil))

(call_insn 36 35 37 5 arch/arm/mm/ioremap.c:262 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__arm_ioremap_pfn_caller") [flags 0x3] <function_decl 0x10fbf980 __arm_ioremap_pfn_caller>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 37 36 38 5 arch/arm/mm/ioremap.c:262 (set (reg/f:SI 133 [ D.23392 ])
        (reg:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 38 37 39 6 19 "" [1 uses])

(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 6 arch/arm/mm/ioremap.c:264 (set (reg:SI 134 [ <result> ])
        (reg/f:SI 133 [ D.23392 ])) -1 (nil))

(jump_insn 41 40 42 6 arch/arm/mm/ioremap.c:264 (set (pc)
        (label_ref 43)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 42 41 51)

;; Start of basic block () -> 7
(note 51 42 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 45 51 46 7 arch/arm/mm/ioremap.c:264 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 46 45 47 7 arch/arm/mm/ioremap.c:264 (clobber (reg:SI 134 [ <result> ])) -1 (nil))

(jump_insn 47 46 48 7 arch/arm/mm/ioremap.c:264 (set (pc)
        (label_ref 49)) -1 (nil))
;; End of basic block 7 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 48 47 43)

;; Start of basic block ( 6) -> 8
;; Pred edge  6 [100.0%] 
(code_label 43 48 52 8 17 "" [1 uses])

(note 52 43 44 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 44 52 49 8 arch/arm/mm/ioremap.c:264 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ <result> ])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 49 44 53 9 20 "" [1 uses])

(note 53 49 50 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 50 53 0 9 arch/arm/mm/ioremap.c:264 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

