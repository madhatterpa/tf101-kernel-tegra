
;; Function ioport_map (ioport_map)[0:985]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 12.
Deleted 1 trivially dead insns

Number of successful forward propagations: 0



ioport_map

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d} r134={1d,1u,1d} r136={1d,2u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 37{18d,18u,1e} in 8{8 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 134[12,1] 136[13,1] 137[14,1] 138[15,1] 139[16,1] 140[17,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133 134 136 137 138 139 140
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 136 137 138 139 140
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(8)
0, 11, 12, 13, 14, 15, 16, 17
;; rd  kill	(9)
0, 1, 11, 12, 13, 14, 15, 16, 17

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 4 2 arch/arm/mm/iomap.c:17 (set (reg/v:SI 134 [ port ])
        (reg:SI 0 r0 [ port ])) 167 {*arm_movsi_insn} (nil))

(note 4 2 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/mm/iomap.c:19 (set (reg/f:SI 137)
        (symbol_ref:SI ("tegra_pcie_io_base") [flags 0xc0] <var_decl 0x10ed5660 tegra_pcie_io_base>)) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/mm/iomap.c:19 (set (reg:SI 139)
        (ashift:SI (reg/v:SI 134 [ port ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 9 8 10 2 arch/arm/mm/iomap.c:19 (set (reg:SI 138)
        (lshiftrt:SI (reg:SI 139)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/v:SI 134 [ port ])
            (const_int 65535 [0xffff]))
        (nil)))

(insn 10 9 11 2 arch/arm/mm/iomap.c:19 (set (reg/f:SI 140 [ tegra_pcie_io_base ])
        (mem/f/c/i:SI (reg/f:SI 137) [0 tegra_pcie_io_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 16 2 arch/arm/mm/iomap.c:19 (set (reg:SI 136)
        (plus:SI (reg/f:SI 140 [ tegra_pcie_io_base ])
            (reg:SI 138))) 4 {*arm_addsi3} (nil))

(insn 16 11 22 2 arch/arm/mm/iomap.c:19 (set (reg/i:SI 0 r0)
        (reg:SI 136)) 167 {*arm_movsi_insn} (nil))

(insn 22 16 0 2 arch/arm/mm/iomap.c:19 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 12.
ending the processing of deferred insns

;; Function ioport_unmap (ioport_unmap)[0:986]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


try_optimize_cfg iteration 1


Number of successful forward propagations: 0



ioport_unmap

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function pci_iounmap (pci_iounmap)[0:988]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 1 }
;; 4 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

In insn 19, replacing
 (subreg:SI (reg:QI 136) 0)
 with (reg:SI 137)
Changed insn 19
deferring rescan insn with uid = 19.

In insn 19, replacing
 (subreg:SI (reg:QI 143) 0)
 with (reg:SI 144)
Changed insn 19
deferring rescan insn with uid = 19.


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 18.
deferring deletion of insn with uid = 10.
deferring deletion of insn with uid = 7.
Deleted 3 trivially dead insns

Number of successful forward propagations: 2



pci_iounmap

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 24[cc]
;;  ref usage 	r0={3d,1u} r1={2d,1u} r2={2d} r3={2d} r11={1d,4u} r12={2d} r13={1d,5u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d} r135={1d,4u} r136={1d} r137={1d,1u} r138={1d,1u} r139={1d,1u,1d} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} 
;;    total ref usage 181{144d,36u,1e} in 17{16 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,1] 15[14,1] 16[15,1] 17[16,1] 18[17,1] 19[18,1] 20[19,1] 21[20,1] 22[21,1] 23[22,1] 24[23,4] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 135[131,1] 136[132,1] 137[133,1] 138[134,1] 139[135,1] 140[136,1] 141[137,1] 142[138,1] 143[139,1] 144[140,1] 145[141,1] 146[142,1] 147[143,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 136 137 138 139 140 141 142 143 144 145 146 147
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 136 137 138 139 140 141 142 143 144 145 146 147
;; live  kill	
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 13, 27, 28
;; rd  gen 	(15)
26, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143
;; rd  kill	(18)
23, 24, 25, 26, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 0 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/mm/iomap.c:60 (set (reg/v/f:SI 135 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 9 2 arch/arm/mm/iomap.c:62 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ addr ])
            (const_int -134217729 [0xfffffffff7ffffff]))) 219 {*arm_cmpsi_insn} (nil))

(insn 9 8 11 2 arch/arm/mm/iomap.c:62 (set (reg:SI 137)
        (leu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 11 9 12 2 arch/arm/mm/iomap.c:61 (set (reg/f:SI 138)
        (symbol_ref:SI ("high_memory") [flags 0xc0] <var_decl 0x10ffd7e0 high_memory>)) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/mm/iomap.c:61 (set (reg/f:SI 140 [ high_memory ])
        (mem/f/c/i:SI (reg/f:SI 138) [0 high_memory+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 2 arch/arm/mm/iomap.c:61 (set (reg/f:SI 139)
        (plus:SI (reg/f:SI 140 [ high_memory ])
            (const_int 8388608 [0x800000]))) 4 {*arm_addsi3} (nil))

(insn 14 13 15 2 arch/arm/mm/iomap.c:61 (set (reg:SI 142)
        (lshiftrt:SI (reg/f:SI 139)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (nil))

(insn 15 14 16 2 arch/arm/mm/iomap.c:61 (set (reg:SI 141)
        (ashift:SI (reg:SI 142)
            (const_int 23 [0x17]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/f:SI 139)
            (const_int -8388608 [0xffffffffff800000]))
        (nil)))

(insn 16 15 17 2 arch/arm/mm/iomap.c:61 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 135 [ addr ])
            (reg:SI 141))) 219 {*arm_cmpsi_insn} (nil))

(insn 17 16 19 2 arch/arm/mm/iomap.c:61 (set (reg:SI 144)
        (geu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 19 17 20 2 arch/arm/mm/iomap.c:61 (set (reg:SI 145)
        (and:SI (reg:SI 137)
            (reg:SI 144))) 67 {*arm_andsi3_insn} (nil))

(insn 20 19 21 2 arch/arm/mm/iomap.c:61 (set (reg:QI 146)
        (subreg:QI (reg:SI 145) 0)) 178 {*arm_movqi_insn} (nil))

(insn 21 20 22 2 arch/arm/mm/iomap.c:61 (set (reg:SI 147)
        (zero_extend:SI (reg:QI 146))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 22 21 23 2 arch/arm/mm/iomap.c:61 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 147)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 24 2 arch/arm/mm/iomap.c:61 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(25)
2, 4, 6, 8, 9, 11, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(25)
2, 4, 6, 8, 9, 11, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [39.0%]  (fallthru)
(note 24 23 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 3 arch/arm/mm/iomap.c:63 (set (reg:SI 0 r0)
        (reg/v/f:SI 135 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 26 25 33 3 arch/arm/mm/iomap.c:63 (parallel [
            (call (mem:SI (symbol_ref:SI ("tegra_iounmap") [flags 0x41] <function_decl 0x10eddf80 tegra_iounmap>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(25)
2, 4, 6, 8, 9, 11, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(25)
2, 4, 6, 8, 9, 11, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [61.0%] 
(code_label 33 26 36 4 9 "" [1 uses])

(note 36 33 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(25)
2, 4, 6, 8, 9, 11, 12, 13, 26, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 7.
deleting insn with uid = 10.
deleting insn with uid = 18.
rescanning insn with uid = 19.
deleting insn with uid = 19.
ending the processing of deferred insns

;; Function pci_iomap (pci_iomap)[0:987]

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 15 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 16 }
;; 11 succs { 12 15 }
;; 12 succs { 13 14 }
;; 13 succs { 1 }
;; 14 succs { 1 }
;; 15 succs { 16 }
;; 16 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 23 count 30 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 23 count 32 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 23 count 32 (  1.9)

In insn 10, replacing
 (mult:SI (reg:SI 143)
        (reg/v:SI 139 [ bar ]))
 with (mult:SI (reg/v:SI 139 [ bar ])
        (const_int 28 [0x1c]))
Changes to insn 10 not recognized
 Setting REG_EQUAL note

In insn 13, replacing
 (mem/s/j:SI (reg/f:SI 145) [0 <variable>.start+0 S4 A32])
 with (mem/s/j:SI (plus:SI (reg:SI 144)
            (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])
Changed insn 13
deferring rescan insn with uid = 13.
deferring rescan insn with uid = 13.

In insn 17, replacing
 (reg:SI 141)
 with (const_int 464 [0x1d0])
Changes to insn 17 not profitable

In insn 18, replacing
 (reg:SI 143)
 with (const_int 28 [0x1c])
Changes to insn 18 not profitable

In insn 33, replacing
 (mult:SI (reg:SI 154)
        (reg/v:SI 139 [ bar ]))
 with (mult:SI (reg/v:SI 139 [ bar ])
        (const_int 28 [0x1c]))
Changes to insn 33 not recognized
 Setting REG_EQUAL note

In insn 43, replacing
 (mult:SI (reg:SI 161)
        (reg/v:SI 139 [ bar ]))
 with (mult:SI (reg/v:SI 139 [ bar ])
        (const_int 28 [0x1c]))
Changes to insn 43 not recognized
 Setting REG_EQUAL note

In insn 53, replacing
 (subreg:SI (reg:QI 164) 0)
 with (reg:SI 165)
Changed insn 53
deferring rescan insn with uid = 53.

In insn 53, replacing
 (subreg:SI (reg:QI 166) 0)
 with (reg:SI 167)
Changed insn 53
deferring rescan insn with uid = 53.

In insn 65, replacing
 (subreg:SI (reg:QI 171) 0)
 with (reg:SI 172)
Changed insn 65
deferring rescan insn with uid = 65.

In insn 65, replacing
 (subreg:SI (reg:QI 173) 0)
 with (reg:SI 174)
Changed insn 65
deferring rescan insn with uid = 65.


try_optimize_cfg iteration 1

deferring deletion of insn with uid = 114.
deferring deletion of insn with uid = 64.
deferring deletion of insn with uid = 61.
deferring deletion of insn with uid = 52.
deferring deletion of insn with uid = 49.
deferring deletion of insn with uid = 41.
deferring deletion of insn with uid = 31.
deferring deletion of insn with uid = 21.
deferring deletion of insn with uid = 20.
deferring deletion of insn with uid = 19.
deferring deletion of insn with uid = 18.
deferring deletion of insn with uid = 17.
deferring deletion of insn with uid = 8.
Deleted 13 trivially dead insns

Number of successful forward propagations: 5



pci_iomap

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 24[cc]
;;  ref usage 	r0={6d,5u} r1={5d,3u} r2={5d,3u} r3={3d} r11={1d,16u} r12={3d} r13={1d,18u} r14={1d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={13d,11u} r25={1d,16u} r26={1d,15u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={2d,2u} r134={1d,3u} r135={3d,4u} r136={1d,7u,1d} r137={1d} r138={1d,3u} r139={1d,3u} r140={1d,3u} r141={1d,1u} r142={1d,2u} r143={1d,2u} r144={1d,3u} r145={1d,2u} r146={1d} r147={1d} r148={1d} r149={1d} r150={1d} r151={1d,1u} r152={1d} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d} r165={1d,1u} r166={1d} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d} r172={1d,1u} r173={1d} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,2u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,2u} 
;;    total ref usage 469{315d,153u,1e} in 70{68 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259
0[0,6] 1[6,5] 2[11,5] 3[16,3] 11[19,1] 12[20,3] 13[23,1] 14[24,1] 15[25,2] 16[27,2] 17[29,2] 18[31,2] 19[33,2] 20[35,2] 21[37,2] 22[39,2] 23[41,2] 24[43,13] 25[56,1] 26[57,1] 27[58,2] 28[60,2] 29[62,2] 30[64,2] 31[66,2] 32[68,2] 33[70,2] 34[72,2] 35[74,2] 36[76,2] 37[78,2] 38[80,2] 39[82,2] 40[84,2] 41[86,2] 42[88,2] 43[90,2] 44[92,2] 45[94,2] 46[96,2] 47[98,2] 48[100,2] 49[102,2] 50[104,2] 51[106,2] 52[108,2] 53[110,2] 54[112,2] 55[114,2] 56[116,2] 57[118,2] 58[120,2] 59[122,2] 60[124,2] 61[126,2] 62[128,2] 63[130,2] 64[132,2] 65[134,2] 66[136,2] 67[138,2] 68[140,2] 69[142,2] 70[144,2] 71[146,2] 72[148,2] 73[150,2] 74[152,2] 75[154,2] 76[156,2] 77[158,2] 78[160,2] 79[162,2] 80[164,2] 81[166,2] 82[168,2] 83[170,2] 84[172,2] 85[174,2] 86[176,2] 87[178,2] 88[180,2] 89[182,2] 90[184,2] 91[186,2] 92[188,2] 93[190,2] 94[192,2] 95[194,2] 96[196,2] 97[198,2] 98[200,2] 99[202,2] 100[204,2] 101[206,2] 102[208,2] 103[210,2] 104[212,2] 105[214,2] 106[216,2] 107[218,2] 108[220,2] 109[222,2] 110[224,2] 111[226,2] 112[228,2] 113[230,2] 114[232,2] 115[234,2] 116[236,2] 117[238,2] 118[240,2] 119[242,2] 120[244,2] 121[246,2] 122[248,2] 123[250,2] 124[252,2] 125[254,2] 126[256,2] 127[258,2] 133[260,2] 134[262,1] 135[263,3] 136[266,1] 137[267,1] 138[268,1] 139[269,1] 140[270,1] 141[271,1] 142[272,1] 143[273,1] 144[274,1] 145[275,1] 146[276,1] 147[277,1] 148[278,1] 149[279,1] 150[280,1] 151[281,1] 152[282,1] 153[283,1] 154[284,1] 155[285,1] 156[286,1] 157[287,1] 158[288,1] 159[289,1] 160[290,1] 161[291,1] 162[292,1] 163[293,1] 164[294,1] 165[295,1] 166[296,1] 167[297,1] 168[298,1] 169[299,1] 170[300,1] 171[301,1] 172[302,1] 173[303,1] 174[304,1] 175[305,1] 176[306,1] 177[307,1] 178[308,1] 179[309,1] 180[310,1] 181[311,1] 182[312,1] 183[313,1] 184[314,1] 
;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 136 138 139 140 141 142 143 144 145
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 136 138 139 140 141 142 143 144 145
;; live  kill	
;; rd  in  	(10)
5, 10, 15, 18, 19, 22, 23, 24, 56, 57
;; rd  gen 	(10)
55, 266, 268, 269, 270, 271, 272, 273, 274, 275
;; rd  kill	(22)
43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 266, 268, 269, 270, 271, 272, 273, 274, 275

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/mm/iomap.c:39 (set (reg/v/f:SI 138 [ dev ])
        (reg:SI 0 r0 [ dev ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/mm/iomap.c:39 (set (reg/v:SI 139 [ bar ])
        (reg:SI 1 r1 [ bar ])) 167 {*arm_movsi_insn} (nil))

(insn 4 3 5 2 arch/arm/mm/iomap.c:39 (set (reg/v:SI 140 [ maxlen ])
        (reg:SI 2 r2 [ maxlen ])) 167 {*arm_movsi_insn} (nil))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 arch/arm/mm/iomap.c:40 (set (reg:SI 143)
        (const_int 28 [0x1c])) 167 {*arm_movsi_insn} (nil))

(insn 10 9 11 2 arch/arm/mm/iomap.c:40 (set (reg:SI 142)
        (mult:SI (reg:SI 143)
            (reg/v:SI 139 [ bar ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg/v:SI 139 [ bar ])
            (const_int 28 [0x1c]))
        (nil)))

(insn 11 10 12 2 arch/arm/mm/iomap.c:40 (set (reg:SI 144)
        (plus:SI (reg/v/f:SI 138 [ dev ])
            (reg:SI 142))) 4 {*arm_addsi3} (nil))

(insn 12 11 13 2 arch/arm/mm/iomap.c:40 (set (reg/f:SI 145)
        (plus:SI (reg:SI 144)
            (const_int 464 [0x1d0]))) 4 {*arm_addsi3} (nil))

(insn 13 12 14 2 arch/arm/mm/iomap.c:40 (set (reg/v:SI 136 [ start ])
        (mem/s/j:SI (plus:SI (reg:SI 144)
                (const_int 464 [0x1d0])) [0 <variable>.start+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/mm/iomap.c:41 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ start ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 16 2 arch/arm/mm/iomap.c:41 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 5 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140 141 142 143 144 145
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140 141 142 143 144 145
;; rd  out 	(20)
5, 10, 15, 18, 19, 22, 23, 24, 55, 56, 57, 266, 268, 269, 270, 271, 272, 273, 274, 275


;; Succ edge  5 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140 141 142 143 144 145
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 144 145
;; lr  def 	 24 [cc] 146 147 148 149 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140 141 142 143 144 145
;; live  gen 	 24 [cc] 146 147 148 149 150 151
;; live  kill	
;; rd  in  	(20)
5, 10, 15, 18, 19, 22, 23, 24, 55, 56, 57, 266, 268, 269, 270, 271, 272, 273, 274, 275
;; rd  gen 	(7)
54, 276, 277, 278, 279, 280, 281
;; rd  kill	(19)
43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 276, 277, 278, 279, 280, 281

;; Pred edge  2 [50.0%]  (fallthru)
(note 16 15 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 22 16 23 3 arch/arm/mm/iomap.c:41 discrim 2 (set (reg:SI 151 [ <variable>.end ])
        (mem/s/j:SI (plus:SI (reg/f:SI 145)
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 3 arch/arm/mm/iomap.c:41 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151 [ <variable>.end ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 3 arch/arm/mm/iomap.c:41 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140
;; rd  out 	(26)
5, 10, 15, 18, 19, 22, 23, 24, 54, 56, 57, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281


;; Succ edge  5 [72.0%] 
;; Succ edge  4 [28.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140
;; live  gen 	 135
;; live  kill	
;; rd  in  	(26)
5, 10, 15, 18, 19, 22, 23, 24, 54, 56, 57, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281
;; rd  gen 	(1)
263
;; rd  kill	(3)
263, 264, 265

;; Pred edge  3 [28.0%]  (fallthru)
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 29 4 arch/arm/mm/iomap.c:41 discrim 3 (set (reg/v:SI 135 [ len ])
        (reg/v:SI 136 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 138 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 138 139 140
;; rd  out 	(27)
5, 10, 15, 18, 19, 22, 23, 24, 54, 56, 57, 263, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136 138 139
;; lr  def 	 135 152 153 154 155 156 157 158
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136 138 139 140
;; live  gen 	 135 152 153 154 155 156 157 158
;; live  kill	
;; rd  in  	(27)
5, 10, 15, 18, 19, 22, 23, 24, 54, 55, 56, 57, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281
;; rd  gen 	(8)
265, 282, 283, 284, 285, 286, 287, 288
;; rd  kill	(10)
263, 264, 265, 282, 283, 284, 285, 286, 287, 288

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [72.0%] 
(code_label 29 26 30 5 14 "" [2 uses])

(note 30 29 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 32 30 33 5 arch/arm/mm/iomap.c:41 discrim 1 (set (reg:SI 154)
        (const_int 28 [0x1c])) 167 {*arm_movsi_insn} (nil))

(insn 33 32 34 5 arch/arm/mm/iomap.c:41 discrim 1 (set (reg:SI 153)
        (mult:SI (reg:SI 154)
            (reg/v:SI 139 [ bar ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg/v:SI 139 [ bar ])
            (const_int 28 [0x1c]))
        (nil)))

(insn 34 33 35 5 arch/arm/mm/iomap.c:41 discrim 1 (set (reg:SI 155)
        (plus:SI (reg/v/f:SI 138 [ dev ])
            (reg:SI 153))) 4 {*arm_addsi3} (nil))

(insn 35 34 36 5 arch/arm/mm/iomap.c:41 discrim 1 (set (reg/f:SI 156)
        (plus:SI (reg:SI 155)
            (const_int 464 [0x1d0]))) 4 {*arm_addsi3} (nil))

(insn 36 35 37 5 arch/arm/mm/iomap.c:41 discrim 1 (set (reg:SI 158 [ <variable>.end ])
        (mem/s/j:SI (plus:SI (reg/f:SI 156)
                (const_int 4 [0x4])) [0 <variable>.end+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 37 36 38 5 arch/arm/mm/iomap.c:41 discrim 1 (set (reg:SI 157)
        (plus:SI (reg:SI 158 [ <variable>.end ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 38 37 39 5 arch/arm/mm/iomap.c:41 discrim 1 (set (reg/v:SI 135 [ len ])
        (minus:SI (reg:SI 157)
            (reg/v:SI 136 [ start ]))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 138 139 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 138 139 140
;; rd  out 	(35)
5, 10, 15, 18, 19, 22, 23, 24, 54, 55, 56, 57, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u45(11){ }u46(13){ }u47(25){ }u48(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 138 139 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 138 139
;; lr  def 	 24 [cc] 134 159 160 161 162 163 164 165 166 167 168 169 170
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 138 139 140
;; live  gen 	 24 [cc] 134 159 160 161 162 163 164 165 166 167 168 169 170
;; live  kill	
;; rd  in  	(36)
5, 10, 15, 18, 19, 22, 23, 24, 54, 55, 56, 57, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288
;; rd  gen 	(14)
51, 262, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300
;; rd  kill	(26)
43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 262, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 39 38 40 6 15 "" [0 uses])

(note 40 39 42 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 42 40 43 6 arch/arm/mm/iomap.c:42 (set (reg:SI 161)
        (const_int 28 [0x1c])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 6 arch/arm/mm/iomap.c:42 (set (reg:SI 160)
        (mult:SI (reg:SI 161)
            (reg/v:SI 139 [ bar ]))) 32 {*arm_mulsi3_v6} (expr_list:REG_EQUAL (mult:SI (reg/v:SI 139 [ bar ])
            (const_int 28 [0x1c]))
        (nil)))

(insn 44 43 45 6 arch/arm/mm/iomap.c:42 (set (reg:SI 162)
        (plus:SI (reg/v/f:SI 138 [ dev ])
            (reg:SI 160))) 4 {*arm_addsi3} (nil))

(insn 45 44 46 6 arch/arm/mm/iomap.c:42 (set (reg/f:SI 163)
        (plus:SI (reg:SI 162)
            (const_int 472 [0x1d8]))) 4 {*arm_addsi3} (nil))

(insn 46 45 47 6 arch/arm/mm/iomap.c:42 (set (reg/v:SI 134 [ flags ])
        (mem/s/j:SI (plus:SI (reg/f:SI 163)
                (const_int 4 [0x4])) [0 <variable>.flags+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 47 46 48 6 arch/arm/mm/iomap.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ len ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 48 47 50 6 arch/arm/mm/iomap.c:44 (set (reg:SI 165)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 50 48 51 6 arch/arm/mm/iomap.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ start ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 51 50 53 6 arch/arm/mm/iomap.c:44 (set (reg:SI 167)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 53 51 54 6 arch/arm/mm/iomap.c:44 (set (reg:SI 168)
        (ior:SI (reg:SI 165)
            (reg:SI 167))) 89 {*arm_iorsi3} (nil))

(insn 54 53 55 6 arch/arm/mm/iomap.c:44 (set (reg:QI 169)
        (subreg:QI (reg:SI 168) 0)) 178 {*arm_movqi_insn} (nil))

(insn 55 54 56 6 arch/arm/mm/iomap.c:44 (set (reg:SI 170)
        (zero_extend:SI (reg:QI 169))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 56 55 57 6 arch/arm/mm/iomap.c:44 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 170)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 57 56 58 6 arch/arm/mm/iomap.c:44 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 6 -> ( 15 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 140
;; rd  out 	(48)
5, 10, 15, 18, 19, 22, 23, 24, 51, 56, 57, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300


;; Succ edge  15 [39.0%] 
;; Succ edge  7 [61.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 140
;; lr  def 	 24 [cc] 171 172 173 174 175 176 177
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 140
;; live  gen 	 24 [cc] 171 172 173 174 175 176 177
;; live  kill	
;; rd  in  	(48)
5, 10, 15, 18, 19, 22, 23, 24, 51, 56, 57, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300
;; rd  gen 	(8)
48, 301, 302, 303, 304, 305, 306, 307
;; rd  kill	(20)
43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 301, 302, 303, 304, 305, 306, 307

;; Pred edge  6 [61.0%]  (fallthru)
(note 58 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 7 arch/arm/mm/iomap.c:46 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ len ])
            (reg/v:SI 140 [ maxlen ]))) 219 {*arm_cmpsi_insn} (nil))

(insn 60 59 62 7 arch/arm/mm/iomap.c:46 (set (reg:SI 172)
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 62 60 63 7 arch/arm/mm/iomap.c:46 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ maxlen ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 63 62 65 7 arch/arm/mm/iomap.c:46 (set (reg:SI 174)
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (nil))

(insn 65 63 66 7 arch/arm/mm/iomap.c:46 (set (reg:SI 175)
        (and:SI (reg:SI 172)
            (reg:SI 174))) 67 {*arm_andsi3_insn} (nil))

(insn 66 65 67 7 arch/arm/mm/iomap.c:46 (set (reg:QI 176)
        (subreg:QI (reg:SI 175) 0)) 178 {*arm_movqi_insn} (nil))

(insn 67 66 68 7 arch/arm/mm/iomap.c:46 (set (reg:SI 177)
        (zero_extend:SI (reg:QI 176))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 68 67 69 7 arch/arm/mm/iomap.c:46 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 177)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 69 68 70 7 arch/arm/mm/iomap.c:46 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 8 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 140
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 140
;; rd  out 	(55)
5, 10, 15, 18, 19, 22, 23, 24, 48, 56, 57, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307


;; Succ edge  8 [50.0%]  (fallthru)
;; Succ edge  9 [50.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 136 140
;; live  gen 	 135
;; live  kill	
;; rd  in  	(55)
5, 10, 15, 18, 19, 22, 23, 24, 48, 56, 57, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307
;; rd  gen 	(1)
264
;; rd  kill	(3)
263, 264, 265

;; Pred edge  7 [50.0%]  (fallthru)
(note 70 69 71 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 8 arch/arm/mm/iomap.c:46 (set (reg/v:SI 135 [ len ])
        (reg/v:SI 140 [ maxlen ])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; rd  out 	(54)
5, 10, 15, 18, 19, 22, 23, 24, 48, 56, 57, 262, 264, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 178
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136
;; live  gen 	 24 [cc] 178
;; live  kill	
;; rd  in  	(56)
5, 10, 15, 18, 19, 22, 23, 24, 48, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307
;; rd  gen 	(2)
47, 308
;; rd  kill	(14)
43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 308

;; Pred edge  7 [50.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 72 71 73 9 17 "" [1 uses])

(note 73 72 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 9 arch/arm/mm/iomap.c:48 (set (reg:SI 178)
        (and:SI (reg/v:SI 134 [ flags ])
            (const_int 256 [0x100]))) 67 {*arm_andsi3_insn} (nil))

(insn 75 74 76 9 arch/arm/mm/iomap.c:48 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 76 75 77 9 arch/arm/mm/iomap.c:48 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 178
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 178
;; rd  out 	(57)
5, 10, 15, 18, 19, 22, 23, 24, 47, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308


;; Succ edge  10 [90.0%]  (fallthru)
;; Succ edge  11 [10.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 133 179 180 181 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  gen 	 133 179 180 181 182
;; live  kill	
;; rd  in  	(57)
5, 10, 15, 18, 19, 22, 23, 24, 47, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308
;; rd  gen 	(5)
261, 309, 310, 311, 312
;; rd  kill	(6)
260, 261, 309, 310, 311, 312

;; Pred edge  9 [90.0%]  (fallthru)
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 79 10 arch/arm/mach-tegra/include/mach/io.h:132 (set (reg/f:SI 179)
        (symbol_ref:SI ("tegra_pcie_io_base") [flags 0xc0] <var_decl 0x10ed5660 tegra_pcie_io_base>)) 167 {*arm_movsi_insn} (nil))

(insn 79 78 80 10 arch/arm/mach-tegra/include/mach/io.h:132 (set (reg:SI 181)
        (ashift:SI (reg/v:SI 136 [ start ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (nil))

(insn 80 79 81 10 arch/arm/mach-tegra/include/mach/io.h:132 (set (reg:SI 180)
        (lshiftrt:SI (reg:SI 181)
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_EQUAL (and:SI (reg/v:SI 136 [ start ])
            (const_int 65535 [0xffff]))
        (nil)))

(insn 81 80 82 10 arch/arm/mach-tegra/include/mach/io.h:132 (set (reg/f:SI 182 [ tegra_pcie_io_base ])
        (mem/f/c/i:SI (reg/f:SI 179) [0 tegra_pcie_io_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 82 81 85 10 arch/arm/mach-tegra/include/mach/io.h:132 (set (reg/f:SI 133 [ D.17898 ])
        (plus:SI (reg/f:SI 182 [ tegra_pcie_io_base ])
            (reg:SI 180))) 4 {*arm_addsi3} (nil))
;; End of basic block 10 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(62)
5, 10, 15, 18, 19, 22, 23, 24, 47, 56, 57, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 183
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 178
;; live  gen 	 24 [cc] 183
;; live  kill	
;; rd  in  	(57)
5, 10, 15, 18, 19, 22, 23, 24, 47, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308
;; rd  gen 	(2)
46, 313
;; rd  kill	(14)
43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 313

;; Pred edge  9 [10.0%] 
(code_label 85 82 86 11 18 "" [1 uses])

(note 86 85 87 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 11 arch/arm/mm/iomap.c:50 (set (reg:SI 183)
        (and:SI (reg/v:SI 134 [ flags ])
            (const_int 512 [0x200]))) 67 {*arm_andsi3_insn} (nil))

(insn 88 87 89 11 arch/arm/mm/iomap.c:50 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 183)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 89 88 90 11 arch/arm/mm/iomap.c:50 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 11 -> ( 12 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 178
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 178
;; rd  out 	(58)
5, 10, 15, 18, 19, 22, 23, 24, 46, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313


;; Succ edge  12 [61.0%]  (fallthru)
;; Succ edge  15 [39.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 184
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 136 178
;; live  gen 	 24 [cc] 184
;; live  kill	
;; rd  in  	(58)
5, 10, 15, 18, 19, 22, 23, 24, 46, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313
;; rd  gen 	(2)
45, 314
;; rd  kill	(14)
43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 314

;; Pred edge  11 [61.0%]  (fallthru)
(note 90 89 91 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 91 90 92 12 arch/arm/mm/iomap.c:51 (set (reg:SI 184)
        (and:SI (reg/v:SI 134 [ flags ])
            (const_int 32768 [0x8000]))) 67 {*arm_andsi3_insn} (nil))

(insn 92 91 93 12 arch/arm/mm/iomap.c:51 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 184)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 93 92 94 12 arch/arm/mm/iomap.c:51 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 101)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 178 184
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 178 184
;; rd  out 	(59)
5, 10, 15, 18, 19, 22, 23, 24, 45, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314


;; Succ edge  13 [39.0%]  (fallthru)
;; Succ edge  14 [61.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 178
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 178
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 178
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; rd  in  	(59)
5, 10, 15, 18, 19, 22, 23, 24, 45, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314
;; rd  gen 	(1)
3
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  12 [39.0%]  (fallthru)
(note 94 93 95 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 95 94 96 13 arch/arm/mm/iomap.c:52 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 96 95 97 13 arch/arm/mm/iomap.c:52 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 97 96 98 13 arch/arm/mm/iomap.c:52 (set (reg:SI 2 r2)
        (reg:SI 178)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn/j 98 97 101 13 arch/arm/mm/iomap.c:52 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("tegra_ioremap") [flags 0x41] <function_decl 0x10eddf00 tegra_ioremap>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 13 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(59)
3, 10, 15, 18, 19, 22, 23, 24, 45, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u131(11){ }u132(13){ }u133(25){ }u134(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 184
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 184
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 184
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	
;; rd  in  	(59)
5, 10, 15, 18, 19, 22, 23, 24, 45, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314
;; rd  gen 	(1)
1
;; rd  kill	(6)
0, 1, 2, 3, 4, 5

;; Pred edge  12 [61.0%] 
(code_label 101 98 102 14 20 "" [1 uses])

(note 102 101 103 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 14 arch/arm/mm/iomap.c:53 (set (reg:SI 0 r0)
        (reg/v:SI 136 [ start ])) 167 {*arm_movsi_insn} (nil))

(insn 104 103 105 14 arch/arm/mm/iomap.c:53 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ len ])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 106 14 arch/arm/mm/iomap.c:53 (set (reg:SI 2 r2)
        (reg:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn/j 106 105 109 14 arch/arm/mm/iomap.c:53 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("tegra_ioremap") [flags 0x41] <function_decl 0x10eddf00 tegra_ioremap>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 14 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(59)
1, 10, 15, 18, 19, 22, 23, 24, 45, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

;; Start of basic block ( 6 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u142(11){ }u143(13){ }u144(25){ }u145(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(59)
5, 10, 15, 18, 19, 22, 23, 24, 46, 51, 56, 57, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313
;; rd  gen 	(1)
260
;; rd  kill	(2)
260, 261

;; Pred edge  6 [39.0%] 
;; Pred edge  11 [39.0%] 
(code_label 109 106 110 15 16 "" [2 uses])

(note 110 109 111 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 111 110 112 15 arch/arm/mm/iomap.c:45 (set (reg/f:SI 133 [ D.17898 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(60)
5, 10, 15, 18, 19, 22, 23, 24, 46, 51, 56, 57, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 10) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 137
;; live  kill	
;; rd  in  	(66)
5, 10, 15, 18, 19, 22, 23, 24, 46, 47, 51, 56, 57, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313
;; rd  gen 	(2)
0, 267
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 267

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%]  (fallthru)
(code_label 112 111 113 16 19 "" [0 uses])

(note 113 112 118 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 118 113 124 16 arch/arm/mm/iomap.c:56 (set (reg/i:SI 0 r0)
        (reg/f:SI 133 [ D.17898 ])) 167 {*arm_movsi_insn} (nil))

(insn 124 118 0 16 arch/arm/mm/iomap.c:56 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(67)
0, 10, 15, 18, 19, 22, 23, 24, 46, 47, 51, 56, 57, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 8.
deleting insn with uid = 17.
deleting insn with uid = 18.
deleting insn with uid = 19.
deleting insn with uid = 20.
deleting insn with uid = 21.
deleting insn with uid = 31.
deleting insn with uid = 41.
deleting insn with uid = 49.
deleting insn with uid = 52.
deleting insn with uid = 61.
deleting insn with uid = 64.
deleting insn with uid = 114.
verify found no changes in insn with uid = 13.
rescanning insn with uid = 53.
deleting insn with uid = 53.
rescanning insn with uid = 65.
deleting insn with uid = 65.
ending the processing of deferred insns
