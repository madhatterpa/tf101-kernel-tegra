
;; Function twd_set_mode (twd_set_mode)[0:688]


;; Generating RTL for gimple basic block 2

;; switch (mode) <default: <L8>, case 2: <L0>, case 3: <L7>>

(insn 7 6 8 arch/arm/kernel/smp_twd.c:40 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ mode ])
            (const_int 2 [0x2]))) -1 (nil))

(jump_insn 8 7 9 arch/arm/kernel/smp_twd.c:40 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(insn 9 8 10 arch/arm/kernel/smp_twd.c:40 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ mode ])
            (const_int 3 [0x3]))) -1 (nil))

(jump_insn 10 9 11 arch/arm/kernel/smp_twd.c:40 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

(jump_insn 11 10 12 arch/arm/kernel/smp_twd.c:40 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 12 11 0)

;; Generating RTL for gimple basic block 3

;; <L8>:

(code_label 13 12 14 2 "" [0 uses])

(note 14 13 0 NOTE_INSN_BASIC_BLOCK)

;; ctrl = 0;

(insn 15 14 0 arch/arm/kernel/smp_twd.c:54 (set (reg/v:SI 133 [ ctrl ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; <L7>:

(code_label 18 17 19 4 "" [0 uses])

(note 19 18 0 NOTE_INSN_BASIC_BLOCK)

;; ctrl = 4;

(insn 20 19 0 arch/arm/kernel/smp_twd.c:49 (set (reg/v:SI 133 [ ctrl ])
        (const_int 4 [0x4])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; <L0>:

(code_label 23 22 24 3 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; twd_base.201 = (volatile unsigned int *) twd_base;

(insn 25 24 26 arch/arm/kernel/smp_twd.c:45 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 26 25 0 arch/arm/kernel/smp_twd.c:45 (set (reg/f:SI 136 [ twd_base.201 ])
        (mem/f/c/i:SI (reg/f:SI 139) [0 twd_base+0 S4 A32])) -1 (nil))

;; D.14162 = twd_timer_rate / 100;

(insn 27 26 28 arch/arm/kernel/smp_twd.c:45 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 28 27 29 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 141)
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) -1 (nil))

(insn 29 28 30 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 0 r0)
        (reg:SI 141)) -1 (nil))

(insn 30 29 31 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) -1 (nil))

(call_insn/u 31 30 32 arch/arm/kernel/smp_twd.c:45 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 32 31 33 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 144)
        (reg:SI 0 r0)) -1 (expr_list:REG_EQUAL (udiv:SI (reg:SI 141)
            (const_int 100 [0x64]))
        (nil)))

(insn 33 32 0 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 135 [ D.14162 ])
        (reg:SI 144)) -1 (nil))

;; *twd_base.201 ={v} D.14162;

(insn 34 33 0 arch/arm/kernel/smp_twd.c:45 (set (mem/v:SI (reg/f:SI 136 [ twd_base.201 ]) [0 S4 A32])
        (reg:SI 135 [ D.14162 ])) -1 (nil))

;; ctrl = 7;

(insn 35 34 0 arch/arm/kernel/smp_twd.c:43 (set (reg/v:SI 133 [ ctrl ])
        (const_int 7 [0x7])) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 36 35 37 5 "" [0 uses])

(note 37 36 0 NOTE_INSN_BASIC_BLOCK)

;; D.14163 = (volatile unsigned int *) twd_base + 8;

(insn 38 37 39 arch/arm/kernel/smp_twd.c:57 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 39 38 40 arch/arm/kernel/smp_twd.c:57 (set (reg:SI 146)
        (mem/f/c/i:SI (reg/f:SI 145) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 40 39 0 arch/arm/kernel/smp_twd.c:57 (set (reg/f:SI 134 [ D.14163 ])
        (plus:SI (reg:SI 146)
            (const_int 8 [0x8]))) -1 (nil))

;; *D.14163 ={v} ctrl;

(insn 41 40 0 arch/arm/kernel/smp_twd.c:57 (set (mem/v:SI (reg/f:SI 134 [ D.14163 ]) [0 S4 A32])
        (reg/v:SI 133 [ ctrl ])) -1 (nil))
Purged edges from bb 10
Predictions for insn 8 bb 2
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  opcode values nonequal heuristics: 29.0%
Predictions for insn 10 bb 9
  DS theory heuristics: 29.0%
  first match heuristics (ignored): 29.0%
  combined heuristics: 29.0%
  opcode values nonequal heuristics: 29.0%


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/smp_twd.c:37 (set (reg/v:SI 137 [ mode ])
        (reg:SI 0 r0 [ mode ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/smp_twd.c:37 (set (reg/v/f:SI 138 [ clk ])
        (reg:SI 1 r1 [ clk ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 arch/arm/kernel/smp_twd.c:40 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ mode ])
            (const_int 2 [0x2]))) -1 (nil))

(jump_insn 8 7 47 3 arch/arm/kernel/smp_twd.c:40 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 3 -> ( 8 4)

;; Succ edge  8 [29.0%] 
;; Succ edge  4 [71.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [71.0%]  (fallthru)
(note 47 8 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 9 47 10 4 arch/arm/kernel/smp_twd.c:40 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 137 [ mode ])
            (const_int 3 [0x3]))) -1 (nil))

(jump_insn 10 9 48 4 arch/arm/kernel/smp_twd.c:40 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 4 -> ( 7 5)

;; Succ edge  7 [29.0%] 
;; Succ edge  5 [71.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [71.0%]  (fallthru)
(note 48 10 11 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 11 48 12 5 arch/arm/kernel/smp_twd.c:40 (set (pc)
        (label_ref 13)) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 12 11 13)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [100.0%] 
(code_label 13 12 14 6 2 "" [1 uses])

(note 14 13 15 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 6 arch/arm/kernel/smp_twd.c:54 (set (reg/v:SI 133 [ ctrl ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 16 15 17 6 arch/arm/kernel/smp_twd.c:54 (set (pc)
        (label_ref 36)) -1 (nil))
;; End of basic block 6 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 17 16 18)

;; Start of basic block ( 4) -> 7
;; Pred edge  4 [29.0%] 
(code_label 18 17 19 7 4 "" [1 uses])

(note 19 18 20 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 7 arch/arm/kernel/smp_twd.c:49 (set (reg/v:SI 133 [ ctrl ])
        (const_int 4 [0x4])) -1 (nil))

(jump_insn 21 20 22 7 arch/arm/kernel/smp_twd.c:49 (set (pc)
        (label_ref 36)) -1 (nil))
;; End of basic block 7 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 22 21 23)

;; Start of basic block ( 3) -> 8
;; Pred edge  3 [29.0%] 
(code_label 23 22 24 8 3 "" [1 uses])

(note 24 23 25 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 8 arch/arm/kernel/smp_twd.c:45 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 26 25 27 8 arch/arm/kernel/smp_twd.c:45 (set (reg/f:SI 136 [ twd_base.201 ])
        (mem/f/c/i:SI (reg/f:SI 139) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 27 26 28 8 arch/arm/kernel/smp_twd.c:45 (set (reg/f:SI 140)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 28 27 29 8 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 141)
        (mem/c/i:SI (plus:SI (reg/f:SI 140)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) -1 (nil))

(insn 29 28 30 8 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 0 r0)
        (reg:SI 141)) -1 (nil))

(insn 30 29 31 8 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) -1 (nil))

(call_insn/u 31 30 32 8 arch/arm/kernel/smp_twd.c:45 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 32 31 33 8 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 144)
        (reg:SI 0 r0)) -1 (expr_list:REG_EQUAL (udiv:SI (reg:SI 141)
            (const_int 100 [0x64]))
        (nil)))

(insn 33 32 34 8 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 135 [ D.14162 ])
        (reg:SI 144)) -1 (nil))

(insn 34 33 35 8 arch/arm/kernel/smp_twd.c:45 (set (mem/v:SI (reg/f:SI 136 [ twd_base.201 ]) [0 S4 A32])
        (reg:SI 135 [ D.14162 ])) -1 (nil))

(insn 35 34 36 8 arch/arm/kernel/smp_twd.c:43 (set (reg/v:SI 133 [ ctrl ])
        (const_int 7 [0x7])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 7 6) -> 9
;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
;; Pred edge  6 [100.0%] 
(code_label 36 35 37 9 5 "" [2 uses])

(note 37 36 38 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 9 arch/arm/kernel/smp_twd.c:57 (set (reg/f:SI 145)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 39 38 40 9 arch/arm/kernel/smp_twd.c:57 (set (reg:SI 146)
        (mem/f/c/i:SI (reg/f:SI 145) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 40 39 41 9 arch/arm/kernel/smp_twd.c:57 (set (reg/f:SI 134 [ D.14163 ])
        (plus:SI (reg:SI 146)
            (const_int 8 [0x8]))) -1 (nil))

(insn 41 40 46 9 arch/arm/kernel/smp_twd.c:57 (set (mem/v:SI (reg/f:SI 134 [ D.14163 ]) [0 S4 A32])
        (reg/v:SI 133 [ ctrl ])) -1 (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [100.0%]  (fallthru)
(note 46 41 43 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 43 46 44 10 arch/arm/kernel/smp_twd.c:58 (set (pc)
        (label_ref 45)) -1 (nil))
;; End of basic block 10 -> ( 12)

;; Succ edge  12 [100.0%] 

(barrier 44 43 42)

;; Start of basic block () -> 11
(code_label 42 44 49 11 1 "" [0 uses])

(note 49 42 45 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 11 -> ( 12)

;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 10 11) -> 12
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%]  (fallthru)
(code_label 45 49 50 12 6 "" [1 uses])

(note 50 45 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 12 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function twd_set_next_event (twd_set_next_event)[0:689]


;; Generating RTL for gimple basic block 2

;; twd_base.204 = (volatile unsigned int *) twd_base;

(insn 7 6 8 arch/arm/kernel/smp_twd.c:63 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 8 7 0 arch/arm/kernel/smp_twd.c:63 (set (reg/f:SI 138 [ twd_base.204 ])
        (mem/f/c/i:SI (reg/f:SI 142) [0 twd_base+0 S4 A32])) -1 (nil))

;; D.14171 = twd_base.204 + 8;

(insn 9 8 0 arch/arm/kernel/smp_twd.c:63 (set (reg/f:SI 137 [ D.14171 ])
        (plus:SI (reg/f:SI 138 [ twd_base.204 ])
            (const_int 8 [0x8]))) -1 (nil))

;; ctrl ={v} *D.14171;

(insn 10 9 0 arch/arm/kernel/smp_twd.c:63 (set (reg/v:SI 135 [ ctrl ])
        (mem/v:SI (reg/f:SI 137 [ D.14171 ]) [0 S4 A32])) -1 (nil))

;; ctrl.273 = ctrl | 1;

(insn 11 10 0 arch/arm/kernel/smp_twd.c:65 (set (reg/v:SI 134 [ ctrl.273 ])
        (ior:SI (reg/v:SI 135 [ ctrl ])
            (const_int 1 [0x1]))) -1 (nil))

;; D.14172 = twd_base.204 + 4;

(insn 12 11 0 arch/arm/kernel/smp_twd.c:67 (set (reg/f:SI 136 [ D.14172 ])
        (plus:SI (reg/f:SI 138 [ twd_base.204 ])
            (const_int 4 [0x4]))) -1 (nil))

;; *D.14172 ={v} evt;

(insn 13 12 0 arch/arm/kernel/smp_twd.c:67 (set (mem/v:SI (reg/f:SI 136 [ D.14172 ]) [0 S4 A32])
        (reg/v:SI 140 [ evt ])) -1 (nil))

;; temp.276 = (volatile unsigned int *) twd_base + 8;

(insn 14 13 15 arch/arm/kernel/smp_twd.c:68 (set (reg/f:SI 143)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 15 14 16 arch/arm/kernel/smp_twd.c:68 (set (reg:SI 144)
        (mem/f/c/i:SI (reg/f:SI 143) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 16 15 0 arch/arm/kernel/smp_twd.c:68 (set (reg/f:SI 133 [ temp.276 ])
        (plus:SI (reg:SI 144)
            (const_int 8 [0x8]))) -1 (nil))

;; *temp.276 ={v} ctrl.273;

(insn 17 16 0 arch/arm/kernel/smp_twd.c:68 (set (mem/v:SI (reg/f:SI 133 [ temp.276 ]) [0 S4 A32])
        (reg/v:SI 134 [ ctrl.273 ])) -1 (nil))

;; return 0;

(insn 18 17 19 arch/arm/kernel/smp_twd.c:71 (set (reg:SI 139 [ <result> ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 19 18 20 arch/arm/kernel/smp_twd.c:71 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 20 19 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/smp_twd.c:62 (set (reg/v:SI 140 [ evt ])
        (reg:SI 0 r0 [ evt ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/smp_twd.c:62 (set (reg/v/f:SI 141 [ unused ])
        (reg:SI 1 r1 [ unused ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 arch/arm/kernel/smp_twd.c:63 (set (reg/f:SI 142)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 8 7 9 3 arch/arm/kernel/smp_twd.c:63 (set (reg/f:SI 138 [ twd_base.204 ])
        (mem/f/c/i:SI (reg/f:SI 142) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 9 8 10 3 arch/arm/kernel/smp_twd.c:63 (set (reg/f:SI 137 [ D.14171 ])
        (plus:SI (reg/f:SI 138 [ twd_base.204 ])
            (const_int 8 [0x8]))) -1 (nil))

(insn 10 9 11 3 arch/arm/kernel/smp_twd.c:63 (set (reg/v:SI 135 [ ctrl ])
        (mem/v:SI (reg/f:SI 137 [ D.14171 ]) [0 S4 A32])) -1 (nil))

(insn 11 10 12 3 arch/arm/kernel/smp_twd.c:65 (set (reg/v:SI 134 [ ctrl.273 ])
        (ior:SI (reg/v:SI 135 [ ctrl ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/smp_twd.c:67 (set (reg/f:SI 136 [ D.14172 ])
        (plus:SI (reg/f:SI 138 [ twd_base.204 ])
            (const_int 4 [0x4]))) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/smp_twd.c:67 (set (mem/v:SI (reg/f:SI 136 [ D.14172 ]) [0 S4 A32])
        (reg/v:SI 140 [ evt ])) -1 (nil))

(insn 14 13 15 3 arch/arm/kernel/smp_twd.c:68 (set (reg/f:SI 143)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 15 14 16 3 arch/arm/kernel/smp_twd.c:68 (set (reg:SI 144)
        (mem/f/c/i:SI (reg/f:SI 143) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 16 15 17 3 arch/arm/kernel/smp_twd.c:68 (set (reg/f:SI 133 [ temp.276 ])
        (plus:SI (reg:SI 144)
            (const_int 8 [0x8]))) -1 (nil))

(insn 17 16 18 3 arch/arm/kernel/smp_twd.c:68 (set (mem/v:SI (reg/f:SI 133 [ temp.276 ]) [0 S4 A32])
        (reg/v:SI 134 [ ctrl.273 ])) -1 (nil))

(insn 18 17 19 3 arch/arm/kernel/smp_twd.c:71 (set (reg:SI 139 [ <result> ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 19 18 20 3 arch/arm/kernel/smp_twd.c:71 (set (pc)
        (label_ref 21)) -1 (nil))
;; End of basic block 3 -> ( 5)

;; Succ edge  5 [100.0%] 

(barrier 20 19 29)

;; Start of basic block () -> 4
(note 29 20 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 29 24 4 arch/arm/kernel/smp_twd.c:71 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 24 23 25 4 arch/arm/kernel/smp_twd.c:71 (clobber (reg:SI 139 [ <result> ])) -1 (nil))

(jump_insn 25 24 26 4 arch/arm/kernel/smp_twd.c:71 (set (pc)
        (label_ref 27)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 26 25 21)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [100.0%] 
(code_label 21 26 30 5 10 "" [1 uses])

(note 30 21 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 30 27 5 arch/arm/kernel/smp_twd.c:71 (set (reg/i:SI 0 r0)
        (reg:SI 139 [ <result> ])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 27 22 31 6 11 "" [1 uses])

(note 31 27 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 31 0 6 arch/arm/kernel/smp_twd.c:71 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function twd_timer_ack (twd_timer_ack)[0:690]


;; Generating RTL for gimple basic block 2

;; D.14179 = (volatile unsigned int *) twd_base + 12;

(insn 5 4 6 arch/arm/kernel/smp_twd.c:81 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 6 5 7 arch/arm/kernel/smp_twd.c:81 (set (reg:SI 138)
        (mem/f/c/i:SI (reg/f:SI 137) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 7 6 0 arch/arm/kernel/smp_twd.c:81 (set (reg/f:SI 135 [ D.14179 ])
        (plus:SI (reg:SI 138)
            (const_int 12 [0xc]))) -1 (nil))

;; D.14180 ={v} *D.14179;

(insn 8 7 0 arch/arm/kernel/smp_twd.c:81 (set (reg:SI 134 [ D.14180 ])
        (mem/v:SI (reg/f:SI 135 [ D.14179 ]) [0 S4 A32])) -1 (nil))

;; if (D.14180 != 0)

(insn 9 8 10 arch/arm/kernel/smp_twd.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.14180 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 10 9 0 arch/arm/kernel/smp_twd.c:81 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))

;; Generating RTL for gimple basic block 3

;; D.14183 = 0;

(insn 12 11 0 arch/arm/kernel/smp_twd.c:86 (set (reg:SI 133 [ D.14183 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 15 14 16 15 "" [0 uses])

(note 16 15 0 NOTE_INSN_BASIC_BLOCK)

;; *D.14179 ={v} 1;

(insn 17 16 18 arch/arm/kernel/smp_twd.c:82 (set (reg:SI 139)
        (const_int 1 [0x1])) -1 (nil))

(insn 18 17 0 arch/arm/kernel/smp_twd.c:82 (set (mem/v:SI (reg/f:SI 135 [ D.14179 ]) [0 S4 A32])
        (reg:SI 139)) -1 (nil))

;; D.14183 = 1;

(insn 19 18 0 arch/arm/kernel/smp_twd.c:83 (set (reg:SI 133 [ D.14183 ])
        (const_int 1 [0x1])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 20 19 21 16 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; return D.14183;

(insn 22 21 23 arch/arm/kernel/smp_twd.c:87 (set (reg:SI 136 [ <result> ])
        (reg:SI 133 [ D.14183 ])) -1 (nil))

(jump_insn 23 22 24 arch/arm/kernel/smp_twd.c:87 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 24 23 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 arch/arm/kernel/smp_twd.c:81 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 6 5 7 3 arch/arm/kernel/smp_twd.c:81 (set (reg:SI 138)
        (mem/f/c/i:SI (reg/f:SI 137) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 7 6 8 3 arch/arm/kernel/smp_twd.c:81 (set (reg/f:SI 135 [ D.14179 ])
        (plus:SI (reg:SI 138)
            (const_int 12 [0xc]))) -1 (nil))

(insn 8 7 9 3 arch/arm/kernel/smp_twd.c:81 (set (reg:SI 134 [ D.14180 ])
        (mem/v:SI (reg/f:SI 135 [ D.14179 ]) [0 S4 A32])) -1 (nil))

(insn 9 8 10 3 arch/arm/kernel/smp_twd.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.14180 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 10 9 11 3 arch/arm/kernel/smp_twd.c:81 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 3 -> ( 5 4)

;; Succ edge  5 [61.0%] 
;; Succ edge  4 [39.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [39.0%]  (fallthru)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 12 11 13 4 arch/arm/kernel/smp_twd.c:86 (set (reg:SI 133 [ D.14183 ])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 13 12 14 4 arch/arm/kernel/smp_twd.c:86 (set (pc)
        (label_ref 20)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 14 13 15)

;; Start of basic block ( 3) -> 5
;; Pred edge  3 [61.0%] 
(code_label 15 14 16 5 15 "" [1 uses])

(note 16 15 17 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 5 arch/arm/kernel/smp_twd.c:82 (set (reg:SI 139)
        (const_int 1 [0x1])) -1 (nil))

(insn 18 17 19 5 arch/arm/kernel/smp_twd.c:82 (set (mem/v:SI (reg/f:SI 135 [ D.14179 ]) [0 S4 A32])
        (reg:SI 139)) -1 (nil))

(insn 19 18 20 5 arch/arm/kernel/smp_twd.c:83 (set (reg:SI 133 [ D.14183 ])
        (const_int 1 [0x1])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 20 19 21 6 16 "" [1 uses])

(note 21 20 22 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 6 arch/arm/kernel/smp_twd.c:87 (set (reg:SI 136 [ <result> ])
        (reg:SI 133 [ D.14183 ])) -1 (nil))

(jump_insn 23 22 24 6 arch/arm/kernel/smp_twd.c:87 (set (pc)
        (label_ref 25)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 24 23 33)

;; Start of basic block () -> 7
(note 33 24 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 27 33 28 7 arch/arm/kernel/smp_twd.c:87 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 28 27 29 7 arch/arm/kernel/smp_twd.c:87 (clobber (reg:SI 136 [ <result> ])) -1 (nil))

(jump_insn 29 28 30 7 arch/arm/kernel/smp_twd.c:87 (set (pc)
        (label_ref 31)) -1 (nil))
;; End of basic block 7 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 30 29 25)

;; Start of basic block ( 6) -> 8
;; Pred edge  6 [100.0%] 
(code_label 25 30 34 8 14 "" [1 uses])

(note 34 25 26 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 26 34 31 8 arch/arm/kernel/smp_twd.c:87 (set (reg/i:SI 0 r0)
        (reg:SI 136 [ <result> ])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 31 26 35 9 17 "" [1 uses])

(note 35 31 32 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 32 35 0 9 arch/arm/kernel/smp_twd.c:87 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function twd_cpufreq_transition (twd_cpufreq_transition)[0:692]


;; Generating RTL for gimple basic block 2

;; if (state == 8 | state == 1 != 0)

(insn 8 7 9 arch/arm/kernel/smp_twd.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ state ])
            (const_int 8 [0x8]))) -1 (nil))

(insn 9 8 10 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 138)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 10 9 11 arch/arm/kernel/smp_twd.c:110 (set (reg:QI 137)
        (subreg:QI (reg:SI 138) 0)) -1 (nil))

(insn 11 10 12 arch/arm/kernel/smp_twd.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ state ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 12 11 13 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 140)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 13 12 14 arch/arm/kernel/smp_twd.c:110 (set (reg:QI 139)
        (subreg:QI (reg:SI 140) 0)) -1 (nil))

(insn 14 13 15 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 141)
        (ior:SI (subreg:SI (reg:QI 137) 0)
            (subreg:SI (reg:QI 139) 0))) -1 (nil))

(insn 15 14 16 arch/arm/kernel/smp_twd.c:110 (set (reg:QI 142)
        (subreg:QI (reg:SI 141) 0)) -1 (nil))

(insn 16 15 17 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 143)
        (zero_extend:SI (reg:QI 142))) -1 (nil))

(insn 17 16 18 arch/arm/kernel/smp_twd.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 18 17 0 arch/arm/kernel/smp_twd.c:110 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))

;; Generating RTL for gimple basic block 3

;; smp_call_function_single ((int) ((struct cpufreq_freqs *) data)->cpu, twd_update_frequency, 0B, 1);

(insn 20 19 21 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 144)
        (symbol_ref:SI ("twd_update_frequency") [flags 0x3] <function_decl 0x10fa8000 twd_update_frequency>)) -1 (nil))

(insn 21 20 22 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 0 r0)
        (mem/s/j:SI (reg/v/f:SI 136 [ data ]) [0 <variable>.cpu+0 S4 A32])) -1 (nil))

(insn 22 21 23 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 1 r1)
        (reg:SI 144)) -1 (nil))

(insn 23 22 24 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 24 23 25 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 25 24 0 arch/arm/kernel/smp_twd.c:111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("smp_call_function_single") [flags 0x41] <function_decl 0x10cc8e80 smp_call_function_single>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; Generating RTL for gimple basic block 4

;; 

(code_label 26 25 27 21 "" [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; return 1;

(insn 28 27 29 arch/arm/kernel/smp_twd.c:115 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 29 28 30 arch/arm/kernel/smp_twd.c:115 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 30 29 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/smp_twd.c:102 (set (reg/v/f:SI 134 [ nb ])
        (reg:SI 0 r0 [ nb ])) -1 (nil))

(insn 3 2 4 2 arch/arm/kernel/smp_twd.c:102 (set (reg/v:SI 135 [ state ])
        (reg:SI 1 r1 [ state ])) -1 (nil))

(insn 4 3 5 2 arch/arm/kernel/smp_twd.c:102 (set (reg/v/f:SI 136 [ data ])
        (reg:SI 2 r2 [ data ])) -1 (nil))

(note 5 4 7 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 7 5 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 8 7 9 3 arch/arm/kernel/smp_twd.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ state ])
            (const_int 8 [0x8]))) -1 (nil))

(insn 9 8 10 3 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 138)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 10 9 11 3 arch/arm/kernel/smp_twd.c:110 (set (reg:QI 137)
        (subreg:QI (reg:SI 138) 0)) -1 (nil))

(insn 11 10 12 3 arch/arm/kernel/smp_twd.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ state ])
            (const_int 1 [0x1]))) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 140)
        (eq:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/smp_twd.c:110 (set (reg:QI 139)
        (subreg:QI (reg:SI 140) 0)) -1 (nil))

(insn 14 13 15 3 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 141)
        (ior:SI (subreg:SI (reg:QI 137) 0)
            (subreg:SI (reg:QI 139) 0))) -1 (nil))

(insn 15 14 16 3 arch/arm/kernel/smp_twd.c:110 (set (reg:QI 142)
        (subreg:QI (reg:SI 141) 0)) -1 (nil))

(insn 16 15 17 3 arch/arm/kernel/smp_twd.c:110 (set (reg:SI 143)
        (zero_extend:SI (reg:QI 142))) -1 (nil))

(insn 17 16 18 3 arch/arm/kernel/smp_twd.c:110 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 143)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 18 17 19 3 arch/arm/kernel/smp_twd.c:110 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 [39.0%]  (fallthru)
;; Succ edge  5 [61.0%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [39.0%]  (fallthru)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 4 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 144)
        (symbol_ref:SI ("twd_update_frequency") [flags 0x3] <function_decl 0x10fa8000 twd_update_frequency>)) -1 (nil))

(insn 21 20 22 4 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 0 r0)
        (mem/s/j:SI (reg/v/f:SI 136 [ data ]) [0 <variable>.cpu+0 S4 A32])) -1 (nil))

(insn 22 21 23 4 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 1 r1)
        (reg:SI 144)) -1 (nil))

(insn 23 22 24 4 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) -1 (nil))

(insn 24 23 25 4 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 25 24 26 4 arch/arm/kernel/smp_twd.c:111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("smp_call_function_single") [flags 0x41] <function_decl 0x10cc8e80 smp_call_function_single>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3 [61.0%] 
;; Pred edge  4 [100.0%]  (fallthru)
(code_label 26 25 27 5 21 "" [1 uses])

(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 5 arch/arm/kernel/smp_twd.c:115 (set (reg:SI 133 [ <result> ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 29 28 30 5 arch/arm/kernel/smp_twd.c:115 (set (pc)
        (label_ref 31)) -1 (nil))
;; End of basic block 5 -> ( 7)

;; Succ edge  7 [100.0%] 

(barrier 30 29 39)

;; Start of basic block () -> 6
(note 39 30 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 33 39 34 6 arch/arm/kernel/smp_twd.c:115 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 34 33 35 6 arch/arm/kernel/smp_twd.c:115 (clobber (reg:SI 133 [ <result> ])) -1 (nil))

(jump_insn 35 34 36 6 arch/arm/kernel/smp_twd.c:115 (set (pc)
        (label_ref 37)) -1 (nil))
;; End of basic block 6 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 36 35 31)

;; Start of basic block ( 5) -> 7
;; Pred edge  5 [100.0%] 
(code_label 31 36 40 7 20 "" [1 uses])

(note 40 31 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 32 40 37 7 arch/arm/kernel/smp_twd.c:115 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) -1 (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 6 7) -> 8
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 37 32 41 8 22 "" [1 uses])

(note 41 37 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 38 41 0 8 arch/arm/kernel/smp_twd.c:115 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 8 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function twd_update_frequency (twd_update_frequency)[0:691]


;; Generating RTL for gimple basic block 2

;; twd_timer_rate.208 = clk_get_rate (twd_clk);

(insn 6 5 7 arch/arm/kernel/smp_twd.c:95 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 7 6 8 arch/arm/kernel/smp_twd.c:95 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) -1 (nil))

(call_insn 8 7 9 arch/arm/kernel/smp_twd.c:95 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 0 arch/arm/kernel/smp_twd.c:95 (set (reg:SI 135 [ twd_timer_rate.208 ])
        (reg:SI 0 r0)) -1 (nil))

;; twd_timer_rate = twd_timer_rate.208;

(insn 10 9 11 arch/arm/kernel/smp_twd.c:95 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 11 10 0 arch/arm/kernel/smp_twd.c:95 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 135 [ twd_timer_rate.208 ])) -1 (nil))

;; __asm__("" : "=r" __ptr : "0" &twd_ce);

(insn 12 11 13 arch/arm/kernel/smp_twd.c:97 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 13 12 0 arch/arm/kernel/smp_twd.c:97 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 139)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 5255831)) -1 (nil))

;; sp.87 = sp;

(insn 14 13 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; clockevents_update_freq (*(struct clock_event_device * *) (__ptr + __per_cpu_offset[((struct thread_info *) (sp.87 & 4294959104))->cpu]), twd_timer_rate.208); [tail call]

(insn 15 14 16 2 arch/arm/kernel/smp_twd.c:97 (set (reg/f:SI 140)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)) -1 (nil))

(insn 16 15 17 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 142)
        (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 17 16 18 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 141)
        (and:SI (reg:SI 142)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 18 17 19 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 143)
        (mem/s/j:SI (plus:SI (reg:SI 141)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) -1 (nil))

(insn 19 18 20 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 144)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 143)
                    (const_int 4 [0x4]))
                (reg/f:SI 140)) [0 __per_cpu_offset S4 A32])) -1 (nil))

(insn 20 19 21 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 0 r0)
        (mem/f:SI (plus:SI (reg/v:SI 134 [ __ptr ])
                (reg:SI 144)) [0 S4 A32])) -1 (nil))

(insn 21 20 22 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 1 r1)
        (reg:SI 135 [ twd_timer_rate.208 ])) -1 (nil))

(call_insn/j 22 21 23 2 arch/arm/kernel/smp_twd.c:97 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clockevents_update_freq") [flags 0x41] <function_decl 0x10f21900 clockevents_update_freq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(barrier 23 22 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/smp_twd.c:94 (set (reg/v/f:SI 136 [ data ])
        (reg:SI 0 r0 [ data ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 arch/arm/kernel/smp_twd.c:95 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 7 6 8 3 arch/arm/kernel/smp_twd.c:95 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 137)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) -1 (nil))

(call_insn 8 7 9 3 arch/arm/kernel/smp_twd.c:95 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 10 3 arch/arm/kernel/smp_twd.c:95 (set (reg:SI 135 [ twd_timer_rate.208 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 10 9 11 3 arch/arm/kernel/smp_twd.c:95 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 11 10 12 3 arch/arm/kernel/smp_twd.c:95 (set (mem/c/i:SI (plus:SI (reg/f:SI 138)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 135 [ twd_timer_rate.208 ])) -1 (nil))

(insn 12 11 13 3 arch/arm/kernel/smp_twd.c:97 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 13 12 14 3 arch/arm/kernel/smp_twd.c:97 (set (reg/v:SI 134 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 139)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 5255831)) -1 (nil))

(insn 14 13 15 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 133 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 15 14 16 3 arch/arm/kernel/smp_twd.c:97 (set (reg/f:SI 140)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)) -1 (nil))

(insn 16 15 17 3 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 142)
        (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 17 16 18 3 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 141)
        (and:SI (reg:SI 142)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 133 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 18 17 19 3 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 143)
        (mem/s/j:SI (plus:SI (reg:SI 141)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) -1 (nil))

(insn 19 18 20 3 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 144)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 143)
                    (const_int 4 [0x4]))
                (reg/f:SI 140)) [0 __per_cpu_offset S4 A32])) -1 (nil))

(insn 20 19 21 3 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 0 r0)
        (mem/f:SI (plus:SI (reg/v:SI 134 [ __ptr ])
                (reg:SI 144)) [0 S4 A32])) -1 (nil))

(insn 21 20 22 3 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 1 r1)
        (reg:SI 135 [ twd_timer_rate.208 ])) -1 (nil))

(call_insn/j 22 21 23 3 arch/arm/kernel/smp_twd.c:97 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clockevents_update_freq") [flags 0x41] <function_decl 0x10f21900 clockevents_update_freq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 23 22 28)

;; Start of basic block () -> 4
(note 28 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 25 28 26 4 arch/arm/kernel/smp_twd.c:98 (set (pc)
        (label_ref 27)) -1 (nil))
;; End of basic block 4 -> ( 6)

;; Succ edge  6 [100.0%] 

(barrier 26 25 24)

;; Start of basic block () -> 5
(code_label 24 26 29 5 25 "" [0 uses])

(note 29 24 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 27 29 30 6 26 "" [1 uses])

(note 30 27 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function twd_cpufreq_init (twd_cpufreq_init)[0:693]


;; Generating RTL for gimple basic block 2

;; twd_clk.210 = twd_clk;

(insn 5 4 6 arch/arm/kernel/smp_twd.c:123 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 6 5 0 arch/arm/kernel/smp_twd.c:123 (set (reg/f:SI 134 [ twd_clk.210 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) -1 (nil))

;; if (twd_clk.210 == 0B)

(insn 7 6 8 include/linux/err.h:39 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ twd_clk.210 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 0 include/linux/err.h:39 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 3

;; if ((long unsigned int) twd_clk.210 > 4294963200)

(insn 10 9 11 include/linux/err.h:39 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ twd_clk.210 ])
            (const_int -4096 [0xfffffffffffff000]))) -1 (nil))

(jump_insn 11 10 0 include/linux/err.h:39 discrim 2 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 12 11 13 30 "" [0 uses])

(note 13 12 0 NOTE_INSN_BASIC_BLOCK)

;; D.14221 = 0;

(insn 14 13 0 arch/arm/kernel/smp_twd.c:127 (set (reg:SI 133 [ D.14221 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; return D.14221;

(insn 16 15 17 arch/arm/kernel/smp_twd.c:128 (set (reg:SI 135 [ <result> ])
        (reg:SI 133 [ D.14221 ])) -1 (nil))

(jump_insn 17 16 18 arch/arm/kernel/smp_twd.c:128 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 18 17 0)

;; Generating RTL for gimple basic block 6

;; 

(code_label 19 18 20 31 "" [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; D.14221 = cpufreq_register_notifier (&twd_cpufreq_nb, 0); [tail call]

(insn 21 20 22 6 arch/arm/kernel/smp_twd.c:124 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 22 21 23 6 arch/arm/kernel/smp_twd.c:124 (set (reg:SI 0 r0)
        (reg/f:SI 138)) -1 (nil))

(insn 23 22 24 6 arch/arm/kernel/smp_twd.c:124 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(call_insn/j 24 23 25 6 arch/arm/kernel/smp_twd.c:124 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpufreq_register_notifier") [flags 0x41] <function_decl 0x10e9fe00 cpufreq_register_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(barrier 25 24 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 arch/arm/kernel/smp_twd.c:123 (set (reg/f:SI 136)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 6 5 7 3 arch/arm/kernel/smp_twd.c:123 (set (reg/f:SI 134 [ twd_clk.210 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 136)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) -1 (nil))

(insn 7 6 8 3 include/linux/err.h:39 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ twd_clk.210 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 8 7 9 3 include/linux/err.h:39 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 3 -> ( 5 4)

;; Succ edge  5 [15.0%] 
;; Succ edge  4 [85.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [85.0%]  (fallthru)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 4 include/linux/err.h:39 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ twd_clk.210 ])
            (const_int -4096 [0xfffffffffffff000]))) -1 (nil))

(jump_insn 11 10 12 4 include/linux/err.h:39 discrim 2 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 7)

;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3 [15.0%] 
;; Pred edge  4 [0.0%]  (fallthru)
(code_label 12 11 13 5 30 "" [1 uses])

(note 13 12 14 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 5 arch/arm/kernel/smp_twd.c:127 (set (reg:SI 133 [ D.14221 ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; Pred edge  5 [100.0%]  (fallthru)
(note 15 14 16 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 6 arch/arm/kernel/smp_twd.c:128 (set (reg:SI 135 [ <result> ])
        (reg:SI 133 [ D.14221 ])) -1 (nil))

(jump_insn 17 16 18 6 arch/arm/kernel/smp_twd.c:128 (set (pc)
        (label_ref 27)) -1 (nil))
;; End of basic block 6 -> ( 9)

;; Succ edge  9 [100.0%] 

(barrier 18 17 19)

;; Start of basic block ( 4) -> 7
;; Pred edge  4 [100.0%] 
(code_label 19 18 20 7 31 "" [1 uses])

(note 20 19 21 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 7 arch/arm/kernel/smp_twd.c:124 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) -1 (nil))

(insn 22 21 23 7 arch/arm/kernel/smp_twd.c:124 (set (reg:SI 0 r0)
        (reg/f:SI 138)) -1 (nil))

(insn 23 22 24 7 arch/arm/kernel/smp_twd.c:124 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(call_insn/j 24 23 25 7 arch/arm/kernel/smp_twd.c:124 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpufreq_register_notifier") [flags 0x41] <function_decl 0x10e9fe00 cpufreq_register_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 7 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 25 24 35)

;; Start of basic block () -> 8
(note 35 25 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 29 35 30 8 arch/arm/kernel/smp_twd.c:128 (clobber (reg/i:SI 0 r0)) -1 (nil))

(insn 30 29 31 8 arch/arm/kernel/smp_twd.c:128 (clobber (reg:SI 135 [ <result> ])) -1 (nil))

(jump_insn 31 30 32 8 arch/arm/kernel/smp_twd.c:128 (set (pc)
        (label_ref 33)) -1 (nil))
;; End of basic block 8 -> ( 10)

;; Succ edge  10 [100.0%] 

(barrier 32 31 27)

;; Start of basic block ( 6) -> 9
;; Pred edge  6 [100.0%] 
(code_label 27 32 36 9 29 "" [1 uses])

(note 36 27 28 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 28 36 33 9 arch/arm/kernel/smp_twd.c:128 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ <result> ])) -1 (nil))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 8 9) -> 10
;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%]  (fallthru)
(code_label 33 28 37 10 32 "" [1 uses])

(note 37 33 34 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 34 37 0 10 arch/arm/kernel/smp_twd.c:128 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 10 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function twd_timer_setup (twd_timer_setup)[0:696] (unlikely executed)


;; Generating RTL for gimple basic block 2

;; if (twd_clk == 0B)

(insn 6 5 7 arch/arm/kernel/smp_twd.c:196 (set (reg/f:SI 151)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 7 6 8 arch/arm/kernel/smp_twd.c:196 (set (reg:SI 152)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) -1 (nil))

(insn 8 7 9 arch/arm/kernel/smp_twd.c:196 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 9 8 0 arch/arm/kernel/smp_twd.c:196 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))

;; Generating RTL for gimple basic block 3

;; clk = clk_get_sys (&"smp_twd"[0], 0B);

(insn 11 10 12 arch/arm/kernel/smp_twd.c:175 (set (reg:SI 153)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fc9390>)) -1 (nil))

(insn 12 11 13 arch/arm/kernel/smp_twd.c:175 (set (reg:SI 0 r0)
        (reg:SI 153)) -1 (nil))

(insn 13 12 14 arch/arm/kernel/smp_twd.c:175 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 14 13 15 arch/arm/kernel/smp_twd.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_sys") [flags 0x41] <function_decl 0x10a60980 clk_get_sys>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 14 0 arch/arm/kernel/smp_twd.c:175 (set (reg/v/f:SI 145 [ clk ])
        (reg:SI 0 r0)) -1 (nil))

;; if ((long unsigned int) clk > 4294963200)

(insn 16 15 17 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 145 [ clk ])
            (const_int -4096 [0xfffffffffffff000]))) -1 (nil))

(jump_insn 17 16 0 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 4

;; printk (&"<3>smp_twd: clock not found: %d\n"[0], (long int) clk);

(insn 19 18 20 arch/arm/kernel/smp_twd.c:177 (set (reg:SI 154)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10fe42c0>)) -1 (nil))

(insn 20 19 21 arch/arm/kernel/smp_twd.c:177 (set (reg:SI 0 r0)
        (reg:SI 154)) -1 (nil))

(insn 21 20 22 arch/arm/kernel/smp_twd.c:177 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ clk ])) -1 (nil))

(call_insn 22 21 0 arch/arm/kernel/smp_twd.c:177 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; Generating RTL for gimple basic block 5

;; 

(code_label 25 24 26 37 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; err = clk_enable (clk);

(insn 27 26 28 arch/arm/kernel/smp_twd.c:181 (set (reg:SI 0 r0)
        (reg/v/f:SI 145 [ clk ])) -1 (nil))

(call_insn 28 27 29 arch/arm/kernel/smp_twd.c:181 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_enable") [flags 0x41] <function_decl 0x10a60500 clk_enable>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 29 28 0 arch/arm/kernel/smp_twd.c:181 (set (reg/v:SI 146 [ err ])
        (reg:SI 0 r0)) -1 (nil))

;; if (err != 0)

(insn 30 29 31 arch/arm/kernel/smp_twd.c:182 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ err ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 31 30 0 arch/arm/kernel/smp_twd.c:182 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 6

;; printk (&"<3>smp_twd: clock failed to enable: %d\n"[0], err);

(insn 33 32 34 arch/arm/kernel/smp_twd.c:183 (set (reg:SI 155)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10fb2e10>)) -1 (nil))

(insn 34 33 35 arch/arm/kernel/smp_twd.c:183 (set (reg:SI 0 r0)
        (reg:SI 155)) -1 (nil))

(insn 35 34 36 arch/arm/kernel/smp_twd.c:183 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ err ])) -1 (nil))

(call_insn 36 35 0 arch/arm/kernel/smp_twd.c:183 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

;; clk_put (clk);

(insn 37 36 38 arch/arm/kernel/smp_twd.c:184 (set (reg:SI 0 r0)
        (reg/v/f:SI 145 [ clk ])) -1 (nil))

(call_insn 38 37 0 arch/arm/kernel/smp_twd.c:184 (parallel [
            (call (mem:SI (symbol_ref:SI ("clk_put") [flags 0x41] <function_decl 0x10a60680 clk_put>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; clk = (struct clk *) (void *) err;

(insn 39 38 0 arch/arm/kernel/smp_twd.c:185 (set (reg/v/f:SI 145 [ clk ])
        (reg/v:SI 146 [ err ])) -1 (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 40 39 41 38 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; twd_clk = clk;

(insn 42 41 43 arch/arm/kernel/smp_twd.c:197 (set (reg/f:SI 156)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 43 42 0 arch/arm/kernel/smp_twd.c:197 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])
        (reg/v/f:SI 145 [ clk ])) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 44 43 45 36 "" [0 uses])

(note 45 44 0 NOTE_INSN_BASIC_BLOCK)

;; twd_clk.403 = twd_clk;

(insn 46 45 47 arch/arm/kernel/smp_twd.c:199 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 47 46 0 arch/arm/kernel/smp_twd.c:199 (set (reg/f:SI 135 [ twd_clk.403 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) -1 (nil))

;; if (twd_clk.403 == 0B)

(insn 48 47 49 include/linux/err.h:39 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ twd_clk.403 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 49 48 0 include/linux/err.h:39 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))

;; Generating RTL for gimple basic block 9

;; if ((long unsigned int) twd_clk.403 > 4294963200)

(insn 51 50 52 include/linux/err.h:39 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ twd_clk.403 ])
            (const_int -4096 [0xfffffffffffff000]))) -1 (nil))

(jump_insn 52 51 0 include/linux/err.h:39 discrim 2 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 10

;; 

(code_label 53 52 54 39 "" [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; if (twd_timer_rate == 0)

(insn 55 54 56 arch/arm/kernel/smp_twd.c:140 (set (reg/f:SI 158)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 56 55 57 arch/arm/kernel/smp_twd.c:140 (set (reg:SI 159)
        (mem/c/i:SI (plus:SI (reg/f:SI 158)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) -1 (nil))

(insn 57 56 58 arch/arm/kernel/smp_twd.c:140 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 58 57 0 arch/arm/kernel/smp_twd.c:140 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))

;; Generating RTL for gimple basic block 11

;; printk (&"<6>Calibrating local timer... "[0]);

(insn 60 59 61 arch/arm/kernel/smp_twd.c:141 (set (reg:SI 160)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10fcab40>)) -1 (nil))

(insn 61 60 62 arch/arm/kernel/smp_twd.c:141 (set (reg:SI 0 r0)
        (reg:SI 160)) -1 (nil))

(call_insn 62 61 0 arch/arm/kernel/smp_twd.c:141 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; D.14354 = get_jiffies_64 ();

(call_insn 63 62 64 arch/arm/kernel/smp_twd.c:144 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 64 63 0 arch/arm/kernel/smp_twd.c:144 (set (reg:DI 137 [ D.14354 ])
        (reg:DI 0 r0)) -1 (nil))

;; waitjiffies = D.14354 + 1;

(insn 65 64 66 arch/arm/kernel/smp_twd.c:144 (set (reg:DI 161)
        (const_int 1 [0x1])) -1 (nil))

(insn 66 65 0 arch/arm/kernel/smp_twd.c:144 (parallel [
            (set (reg/v:DI 144 [ waitjiffies ])
                (plus:DI (reg:DI 137 [ D.14354 ])
                    (reg:DI 161)))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 12

;; __udelay (10);

(insn 70 69 71 arch/arm/kernel/smp_twd.c:147 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) -1 (nil))

(call_insn 71 70 0 arch/arm/kernel/smp_twd.c:147 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 13

;; 

(code_label 72 71 73 42 "" [0 uses])

(note 73 72 0 NOTE_INSN_BASIC_BLOCK)

;; D.14353 = get_jiffies_64 ();

(call_insn 74 73 75 arch/arm/kernel/smp_twd.c:146 discrim 1 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 75 74 0 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:DI 138 [ D.14353 ])
        (reg:DI 0 r0)) -1 (nil))
Failed to add probability note

;; if (D.14353 < waitjiffies)

(insn 77 75 78 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ waitjiffies ]) 4)
            (subreg:SI (reg:DI 138 [ D.14353 ]) 4))) -1 (nil))

(jump_insn 78 77 79 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) -1 (nil))

(insn 79 78 80 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ waitjiffies ]) 4)
            (subreg:SI (reg:DI 138 [ D.14353 ]) 4))) -1 (nil))

(jump_insn 80 79 81 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 87)
            (pc))) -1 (nil))

(insn 81 80 82 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ waitjiffies ]) 0)
            (subreg:SI (reg:DI 138 [ D.14353 ]) 0))) -1 (nil))

(jump_insn 82 81 83 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) -1 (nil))

(insn 83 82 84 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ waitjiffies ]) 0)
            (subreg:SI (reg:DI 138 [ D.14353 ]) 0))) -1 (nil))

(jump_insn 84 83 85 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 87)
            (pc))) -1 (nil))

(jump_insn 85 84 86 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (label_ref 87)) -1 (nil))

(barrier 86 85 87)

(code_label 87 86 0 44 "" [0 uses])

;; Generating RTL for gimple basic block 14

;; waitjiffies.404 = waitjiffies + 5;

(insn 89 88 90 arch/arm/kernel/smp_twd.c:150 (set (reg:DI 162)
        (const_int 5 [0x5])) -1 (nil))

(insn 90 89 0 arch/arm/kernel/smp_twd.c:150 (parallel [
            (set (reg/v:DI 134 [ waitjiffies.404 ])
                (plus:DI (reg/v:DI 144 [ waitjiffies ])
                    (reg:DI 162)))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

;; D.14350 = (volatile unsigned int *) twd_base + 8;

(insn 91 90 92 arch/arm/kernel/smp_twd.c:153 (set (reg/f:SI 163)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 92 91 93 arch/arm/kernel/smp_twd.c:153 (set (reg:SI 164)
        (mem/f/c/i:SI (reg/f:SI 163) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 93 92 0 arch/arm/kernel/smp_twd.c:153 (set (reg/f:SI 139 [ D.14350 ])
        (plus:SI (reg:SI 164)
            (const_int 8 [0x8]))) -1 (nil))

;; *D.14350 ={v} 1;

(insn 94 93 95 arch/arm/kernel/smp_twd.c:153 (set (reg:SI 165)
        (const_int 1 [0x1])) -1 (nil))

(insn 95 94 0 arch/arm/kernel/smp_twd.c:153 (set (mem/v:SI (reg/f:SI 139 [ D.14350 ]) [0 S4 A32])
        (reg:SI 165)) -1 (nil))

;; D.14349 = (volatile unsigned int *) twd_base + 4;

(insn 96 95 97 arch/arm/kernel/smp_twd.c:156 (set (reg/f:SI 166)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 97 96 98 arch/arm/kernel/smp_twd.c:156 (set (reg:SI 167)
        (mem/f/c/i:SI (reg/f:SI 166) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 98 97 0 arch/arm/kernel/smp_twd.c:156 (set (reg/f:SI 140 [ D.14349 ])
        (plus:SI (reg:SI 167)
            (const_int 4 [0x4]))) -1 (nil))

;; *D.14349 ={v} 4294967295;

(insn 99 98 100 arch/arm/kernel/smp_twd.c:156 (set (reg:SI 168)
        (const_int -1 [0xffffffffffffffff])) -1 (nil))

(insn 100 99 0 arch/arm/kernel/smp_twd.c:156 (set (mem/v:SI (reg/f:SI 140 [ D.14349 ]) [0 S4 A32])
        (reg:SI 168)) -1 (nil))

;; Generating RTL for gimple basic block 15

;; __udelay (10);

(insn 104 103 105 arch/arm/kernel/smp_twd.c:159 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) -1 (nil))

(call_insn 105 104 0 arch/arm/kernel/smp_twd.c:159 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

;; Generating RTL for gimple basic block 16

;; 

(code_label 106 105 107 45 "" [0 uses])

(note 107 106 0 NOTE_INSN_BASIC_BLOCK)

;; D.14348 = get_jiffies_64 ();

(call_insn 108 107 109 arch/arm/kernel/smp_twd.c:158 discrim 1 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 109 108 0 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:DI 141 [ D.14348 ])
        (reg:DI 0 r0)) -1 (nil))
Failed to add probability note

;; if (D.14348 < waitjiffies.404)

(insn 111 109 112 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ waitjiffies.404 ]) 4)
            (subreg:SI (reg:DI 141 [ D.14348 ]) 4))) -1 (nil))

(jump_insn 112 111 113 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) -1 (nil))

(insn 113 112 114 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ waitjiffies.404 ]) 4)
            (subreg:SI (reg:DI 141 [ D.14348 ]) 4))) -1 (nil))

(jump_insn 114 113 115 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) -1 (nil))

(insn 115 114 116 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ waitjiffies.404 ]) 0)
            (subreg:SI (reg:DI 141 [ D.14348 ]) 0))) -1 (nil))

(jump_insn 116 115 117 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) -1 (nil))

(insn 117 116 118 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ waitjiffies.404 ]) 0)
            (subreg:SI (reg:DI 141 [ D.14348 ]) 0))) -1 (nil))

(jump_insn 118 117 119 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) -1 (nil))

(jump_insn 119 118 120 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (label_ref 121)) -1 (nil))

(barrier 120 119 121)

(code_label 121 120 0 47 "" [0 uses])

;; Generating RTL for gimple basic block 17

;; temp.409 = (volatile unsigned int *) twd_base + 4;

(insn 123 122 124 arch/arm/kernel/smp_twd.c:161 (set (reg/f:SI 169)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 124 123 125 arch/arm/kernel/smp_twd.c:161 (set (reg:SI 170)
        (mem/f/c/i:SI (reg/f:SI 169) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 125 124 0 arch/arm/kernel/smp_twd.c:161 (set (reg/f:SI 133 [ temp.409 ])
        (plus:SI (reg:SI 170)
            (const_int 4 [0x4]))) -1 (nil))

;; count ={v} *temp.409;

(insn 126 125 0 arch/arm/kernel/smp_twd.c:161 (set (reg/v:SI 143 [ count ])
        (mem/v:SI (reg/f:SI 133 [ temp.409 ]) [0 S4 A32])) -1 (nil))

;; twd_timer_rate.214 = ~count * 20;

(insn 127 126 128 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 171)
        (not:SI (reg/v:SI 143 [ count ]))) -1 (nil))

(insn 128 127 129 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 172)
        (const_int 20 [0x14])) -1 (nil))

(insn 129 128 0 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 142 [ twd_timer_rate.214 ])
        (mult:SI (reg:SI 172)
            (reg:SI 171))) -1 (nil))

;; twd_timer_rate = twd_timer_rate.214;

(insn 130 129 131 arch/arm/kernel/smp_twd.c:163 (set (reg/f:SI 173)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 131 130 0 arch/arm/kernel/smp_twd.c:163 (set (mem/c/i:SI (plus:SI (reg/f:SI 173)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 142 [ twd_timer_rate.214 ])) -1 (nil))

;; printk (&"%lu.%02luMHz.\n"[0], twd_timer_rate.214 / 1000000, (twd_timer_rate.214 / 10000) % 100);

(insn 132 131 133 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 174)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10ff0a80>)) -1 (nil))

(insn 133 132 134 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 142 [ twd_timer_rate.214 ])) -1 (nil))

(insn 134 133 135 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 1000000 [0xf4240])) -1 (nil))

(call_insn/u 135 134 136 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 136 135 137 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 178)
        (reg:SI 0 r0)) -1 (expr_list:REG_EQUAL (udiv:SI (reg:SI 142 [ twd_timer_rate.214 ])
            (const_int 1000000 [0xf4240]))
        (nil)))

(insn 137 136 138 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 142 [ twd_timer_rate.214 ])) -1 (nil))

(insn 138 137 139 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 10000 [0x2710])) -1 (nil))

(call_insn/u 139 138 140 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 140 139 141 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 182)
        (reg:SI 0 r0)) -1 (expr_list:REG_EQUAL (udiv:SI (reg:SI 142 [ twd_timer_rate.214 ])
            (const_int 10000 [0x2710]))
        (nil)))

(insn 141 140 142 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 182)) -1 (nil))

(insn 142 141 143 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) -1 (nil))

(call_insn/u 143 142 144 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 144 143 145 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 188)
        (reg:SI 1 r1 [+4 ])) -1 (expr_list:REG_EQUAL (umod:SI (reg:SI 182)
            (const_int 100 [0x64]))
        (nil)))

(insn 145 144 146 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 174)) -1 (nil))

(insn 146 145 147 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (reg:SI 178)) -1 (nil))

(insn 147 146 148 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 2 r2)
        (reg:SI 188)) -1 (nil))

(call_insn 148 147 0 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

;; Generating RTL for gimple basic block 18

;; 

(code_label 149 148 150 41 "" [0 uses])

(note 150 149 0 NOTE_INSN_BASIC_BLOCK)

;; D.14283 = (volatile unsigned int *) twd_base + 8;

(insn 151 150 152 arch/arm/kernel/smp_twd.c:204 (set (reg/f:SI 189)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 152 151 153 arch/arm/kernel/smp_twd.c:204 (set (reg:SI 190)
        (mem/f/c/i:SI (reg/f:SI 189) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 153 152 0 arch/arm/kernel/smp_twd.c:204 (set (reg/f:SI 148 [ D.14283 ])
        (plus:SI (reg:SI 190)
            (const_int 8 [0x8]))) -1 (nil))

;; *D.14283 ={v} 0;

(insn 154 153 155 arch/arm/kernel/smp_twd.c:204 (set (reg:SI 191)
        (const_int 0 [0x0])) -1 (nil))

(insn 155 154 0 arch/arm/kernel/smp_twd.c:204 (set (mem/v:SI (reg/f:SI 148 [ D.14283 ]) [0 S4 A32])
        (reg:SI 191)) -1 (nil))

;; clk->name = &"local_timer"[0];

(insn 156 155 157 arch/arm/kernel/smp_twd.c:206 (set (reg/f:SI 192)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10ff00c0>)) -1 (nil))

(insn 157 156 0 arch/arm/kernel/smp_twd.c:206 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 68 [0x44])) [0 <variable>.name+0 S4 A32])
        (reg/f:SI 192)) -1 (nil))

;; clk->features = 7;

(insn 158 157 159 arch/arm/kernel/smp_twd.c:207 (set (reg:SI 193)
        (const_int 7 [0x7])) -1 (nil))

(insn 159 158 0 arch/arm/kernel/smp_twd.c:207 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 44 [0x2c])) [0 <variable>.features+0 S4 A32])
        (reg:SI 193)) -1 (nil))

;; clk->rating = 350;

(insn 160 159 161 arch/arm/kernel/smp_twd.c:209 (set (reg:SI 194)
        (const_int 350 [0x15e])) -1 (nil))

(insn 161 160 0 arch/arm/kernel/smp_twd.c:209 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 72 [0x48])) [0 <variable>.rating+0 S4 A64])
        (reg:SI 194)) -1 (nil))

;; clk->set_mode = twd_set_mode;

(insn 162 161 163 arch/arm/kernel/smp_twd.c:210 (set (reg/f:SI 195)
        (symbol_ref:SI ("twd_set_mode") [flags 0x3] <function_decl 0x10f97d00 twd_set_mode>)) -1 (nil))

(insn 163 162 0 arch/arm/kernel/smp_twd.c:210 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 56 [0x38])) [0 <variable>.set_mode+0 S4 A64])
        (reg/f:SI 195)) -1 (nil))

;; clk->set_next_event = twd_set_next_event;

(insn 164 163 165 arch/arm/kernel/smp_twd.c:211 (set (reg/f:SI 196)
        (symbol_ref:SI ("twd_set_next_event") [flags 0x3] <function_decl 0x10f97e00 twd_set_next_event>)) -1 (nil))

(insn 165 164 0 arch/arm/kernel/smp_twd.c:211 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 4 [0x4])) [0 <variable>.set_next_event+0 S4 A32])
        (reg/f:SI 196)) -1 (nil))

;; __asm__("" : "=r" __ptr : "0" &twd_ce);

(insn 166 165 167 arch/arm/kernel/smp_twd.c:213 (set (reg/f:SI 197)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 167 166 0 arch/arm/kernel/smp_twd.c:213 (set (reg/v:SI 147 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 197)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 5270655)) -1 (nil))

;; sp.87 = sp;

(insn 168 167 0 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 136 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

;; *(struct clock_event_device * *) (__ptr + __per_cpu_offset[((struct thread_info *) (sp.87 & 4294959104))->cpu]) = clk;

(insn 169 168 170 arch/arm/kernel/smp_twd.c:213 (set (reg/f:SI 198)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)) -1 (nil))

(insn 170 169 171 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 200)
        (and:SI (reg:SI 136 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 171 170 172 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 199)
        (and:SI (reg:SI 200)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 136 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 172 171 173 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 201)
        (mem/s/j:SI (plus:SI (reg:SI 199)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) -1 (nil))

(insn 173 172 174 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 202)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 201)
                    (const_int 4 [0x4]))
                (reg/f:SI 198)) [0 __per_cpu_offset S4 A32])) -1 (nil))

(insn 174 173 0 arch/arm/kernel/smp_twd.c:213 (set (mem/f:SI (plus:SI (reg/v:SI 147 [ __ptr ])
                (reg:SI 202)) [0 S4 A32])
        (reg/v/f:SI 150 [ clk ])) -1 (nil))

;; clockevents_config_and_register (clk, twd_timer_rate, 15, 4294967295);

(insn 175 174 176 arch/arm/kernel/smp_twd.c:215 (set (reg/f:SI 203)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 176 175 177 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 0 r0)
        (reg/v/f:SI 150 [ clk ])) -1 (nil))

(insn 177 176 178 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 203)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) -1 (nil))

(insn 178 177 179 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 2 r2)
        (const_int 15 [0xf])) -1 (nil))

(insn 179 178 180 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) -1 (nil))

(call_insn 180 179 0 arch/arm/kernel/smp_twd.c:215 (parallel [
            (call (mem:SI (symbol_ref:SI ("clockevents_config_and_register") [flags 0x41] <function_decl 0x10f21880 clockevents_config_and_register>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

;; gic_enable_ppi ((unsigned int) clk->irq); [tail call]

(insn 181 180 182 18 arch/arm/kernel/smp_twd.c:219 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 76 [0x4c])) [0 <variable>.irq+0 S4 A32])) -1 (nil))

(call_insn/j 182 181 183 18 arch/arm/kernel/smp_twd.c:219 (parallel [
            (call (mem:SI (symbol_ref:SI ("gic_enable_ppi") [flags 0x41] <function_decl 0x10f97c80 gic_enable_ppi>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(barrier 183 182 0)

;; Generating RTL for gimple basic block 19

;; 

(code_label 184 183 185 40 "" [0 uses])

(note 185 184 0 NOTE_INSN_BASIC_BLOCK)

;; twd_timer_rate.219 = clk_get_rate (twd_clk.403);

(insn 186 185 187 arch/arm/kernel/smp_twd.c:200 (set (reg:SI 0 r0)
        (reg/f:SI 135 [ twd_clk.403 ])) -1 (nil))

(call_insn 187 186 188 arch/arm/kernel/smp_twd.c:200 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 188 187 0 arch/arm/kernel/smp_twd.c:200 (set (reg:SI 149 [ twd_timer_rate.219 ])
        (reg:SI 0 r0)) -1 (nil))

;; twd_timer_rate = twd_timer_rate.219;

(insn 189 188 190 arch/arm/kernel/smp_twd.c:200 (set (reg/f:SI 204)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 190 189 0 arch/arm/kernel/smp_twd.c:200 (set (mem/c/i:SI (plus:SI (reg/f:SI 204)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 149 [ twd_timer_rate.219 ])) -1 (nil))
Purged non-fallthru edges from bb 26
Purged non-fallthru edges from bb 31
Predictions for insn 78 bb 13
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 80 bb 22
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  opcode values nonequal heuristics: 71.0%
Predictions for insn 82 bb 23
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 84 bb 24
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  opcode values nonequal heuristics: 71.0%
Predictions for insn 112 bb 16
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 114 bb 27
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  opcode values nonequal heuristics: 71.0%
Predictions for insn 116 bb 28
  no prediction heuristics: 50.0%
  combined heuristics: 50.0%
Predictions for insn 118 bb 29
  DS theory heuristics: 71.0%
  first match heuristics (ignored): 71.0%
  combined heuristics: 71.0%
  opcode values nonequal heuristics: 71.0%


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/smp_twd.c:195 (set (reg/v/f:SI 150 [ clk ])
        (reg:SI 0 r0 [ clk ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 arch/arm/kernel/smp_twd.c:196 (set (reg/f:SI 151)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 7 6 8 3 arch/arm/kernel/smp_twd.c:196 (set (reg:SI 152)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 151)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) -1 (nil))

(insn 8 7 9 3 arch/arm/kernel/smp_twd.c:196 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 152)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 9 8 10 3 arch/arm/kernel/smp_twd.c:196 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))
;; End of basic block 3 -> ( 4 9)

;; Succ edge  4 [6.7%]  (fallthru)
;; Succ edge  9 [93.3%] 

;; Start of basic block ( 3) -> 4
;; Pred edge  3 [6.7%]  (fallthru)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 4 arch/arm/kernel/smp_twd.c:175 (set (reg:SI 153)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fc9390>)) -1 (nil))

(insn 12 11 13 4 arch/arm/kernel/smp_twd.c:175 (set (reg:SI 0 r0)
        (reg:SI 153)) -1 (nil))

(insn 13 12 14 4 arch/arm/kernel/smp_twd.c:175 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 14 13 15 4 arch/arm/kernel/smp_twd.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_sys") [flags 0x41] <function_decl 0x10a60980 clk_get_sys>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 14 16 4 arch/arm/kernel/smp_twd.c:175 (set (reg/v/f:SI 145 [ clk ])
        (reg:SI 0 r0)) -1 (nil))

(insn 16 15 17 4 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 145 [ clk ])
            (const_int -4096 [0xfffffffffffff000]))) -1 (nil))

(jump_insn 17 16 18 4 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; Pred edge  4 [0.0%]  (fallthru)
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 5 arch/arm/kernel/smp_twd.c:177 (set (reg:SI 154)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10fe42c0>)) -1 (nil))

(insn 20 19 21 5 arch/arm/kernel/smp_twd.c:177 (set (reg:SI 0 r0)
        (reg:SI 154)) -1 (nil))

(insn 21 20 22 5 arch/arm/kernel/smp_twd.c:177 (set (reg:SI 1 r1)
        (reg/v/f:SI 145 [ clk ])) -1 (nil))

(call_insn 22 21 23 5 arch/arm/kernel/smp_twd.c:177 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 23 22 24 5 arch/arm/kernel/smp_twd.c:177 (set (pc)
        (label_ref 40)) -1 (nil))
;; End of basic block 5 -> ( 8)

;; Succ edge  8 [100.0%] 

(barrier 24 23 25)

;; Start of basic block ( 4) -> 6
;; Pred edge  4 [100.0%] 
(code_label 25 24 26 6 37 "" [1 uses])

(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 6 arch/arm/kernel/smp_twd.c:181 (set (reg:SI 0 r0)
        (reg/v/f:SI 145 [ clk ])) -1 (nil))

(call_insn 28 27 29 6 arch/arm/kernel/smp_twd.c:181 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_enable") [flags 0x41] <function_decl 0x10a60500 clk_enable>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 29 28 30 6 arch/arm/kernel/smp_twd.c:181 (set (reg/v:SI 146 [ err ])
        (reg:SI 0 r0)) -1 (nil))

(insn 30 29 31 6 arch/arm/kernel/smp_twd.c:182 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 146 [ err ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 31 30 32 6 arch/arm/kernel/smp_twd.c:182 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 6 -> ( 7 8)

;; Succ edge  7 [0.0%]  (fallthru)
;; Succ edge  8 [100.0%] 

;; Start of basic block ( 6) -> 7
;; Pred edge  6 [0.0%]  (fallthru)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 7 arch/arm/kernel/smp_twd.c:183 (set (reg:SI 155)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10fb2e10>)) -1 (nil))

(insn 34 33 35 7 arch/arm/kernel/smp_twd.c:183 (set (reg:SI 0 r0)
        (reg:SI 155)) -1 (nil))

(insn 35 34 36 7 arch/arm/kernel/smp_twd.c:183 (set (reg:SI 1 r1)
        (reg/v:SI 146 [ err ])) -1 (nil))

(call_insn 36 35 37 7 arch/arm/kernel/smp_twd.c:183 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 36 38 7 arch/arm/kernel/smp_twd.c:184 (set (reg:SI 0 r0)
        (reg/v/f:SI 145 [ clk ])) -1 (nil))

(call_insn 38 37 39 7 arch/arm/kernel/smp_twd.c:184 (parallel [
            (call (mem:SI (symbol_ref:SI ("clk_put") [flags 0x41] <function_decl 0x10a60680 clk_put>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 39 38 40 7 arch/arm/kernel/smp_twd.c:185 (set (reg/v/f:SI 145 [ clk ])
        (reg/v:SI 146 [ err ])) -1 (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 7) -> 8
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 40 39 41 8 38 "" [2 uses])

(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 8 arch/arm/kernel/smp_twd.c:197 (set (reg/f:SI 156)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 43 42 44 8 arch/arm/kernel/smp_twd.c:197 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 156)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])
        (reg/v/f:SI 145 [ clk ])) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 3 8) -> 9
;; Pred edge  3 [93.3%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 44 43 45 9 36 "" [1 uses])

(note 45 44 46 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 9 arch/arm/kernel/smp_twd.c:199 (set (reg/f:SI 157)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 47 46 48 9 arch/arm/kernel/smp_twd.c:199 (set (reg/f:SI 135 [ twd_clk.403 ])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 157)
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) -1 (nil))

(insn 48 47 49 9 include/linux/err.h:39 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ twd_clk.403 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 49 48 50 9 include/linux/err.h:39 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 9 -> ( 11 10)

;; Succ edge  11 [15.0%] 
;; Succ edge  10 [85.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; Pred edge  9 [85.0%]  (fallthru)
(note 50 49 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 10 include/linux/err.h:39 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ twd_clk.403 ])
            (const_int -4096 [0xfffffffffffff000]))) -1 (nil))

(jump_insn 52 51 53 10 include/linux/err.h:39 discrim 2 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 10 -> ( 11 30)

;; Succ edge  11 [0.0%]  (fallthru)
;; Succ edge  30 [100.0%] 

;; Start of basic block ( 9 10) -> 11
;; Pred edge  9 [15.0%] 
;; Pred edge  10 [0.0%]  (fallthru)
(code_label 53 52 54 11 39 "" [1 uses])

(note 54 53 55 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 11 arch/arm/kernel/smp_twd.c:140 (set (reg/f:SI 158)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 56 55 57 11 arch/arm/kernel/smp_twd.c:140 (set (reg:SI 159)
        (mem/c/i:SI (plus:SI (reg/f:SI 158)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) -1 (nil))

(insn 57 56 58 11 arch/arm/kernel/smp_twd.c:140 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 159)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 58 57 59 11 arch/arm/kernel/smp_twd.c:140 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 149)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 11 -> ( 12 29)

;; Succ edge  12 [0.0%]  (fallthru)
;; Succ edge  29 [100.0%] 

;; Start of basic block ( 11) -> 12
;; Pred edge  11 [0.0%]  (fallthru)
(note 59 58 60 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 12 arch/arm/kernel/smp_twd.c:141 (set (reg:SI 160)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10fcab40>)) -1 (nil))

(insn 61 60 62 12 arch/arm/kernel/smp_twd.c:141 (set (reg:SI 0 r0)
        (reg:SI 160)) -1 (nil))

(call_insn 62 61 63 12 arch/arm/kernel/smp_twd.c:141 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 63 62 64 12 arch/arm/kernel/smp_twd.c:144 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 64 63 65 12 arch/arm/kernel/smp_twd.c:144 (set (reg:DI 137 [ D.14354 ])
        (reg:DI 0 r0)) -1 (nil))

(insn 65 64 66 12 arch/arm/kernel/smp_twd.c:144 (set (reg:DI 161)
        (const_int 1 [0x1])) -1 (nil))

(insn 66 65 67 12 arch/arm/kernel/smp_twd.c:144 (parallel [
            (set (reg/v:DI 144 [ waitjiffies ])
                (plus:DI (reg:DI 137 [ D.14354 ])
                    (reg:DI 161)))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(jump_insn 67 66 68 12 arch/arm/kernel/smp_twd.c:144 (set (pc)
        (label_ref 72)) -1 (nil))
;; End of basic block 12 -> ( 14)

;; Succ edge  14 [100.0%] 

(barrier 68 67 76)

;; Start of basic block ( 14 16) -> 13
;; Pred edge  14 [50.0%] 
;; Pred edge  16 [50.0%] 
(code_label 76 68 69 13 43 "" [2 uses])

(note 69 76 70 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 13 arch/arm/kernel/smp_twd.c:147 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) -1 (nil))

(call_insn 71 70 72 13 arch/arm/kernel/smp_twd.c:147 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 12 13) -> 14
;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%]  (fallthru,dfs_back)
(code_label 72 71 73 14 42 "" [1 uses])

(note 73 72 74 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(call_insn 74 73 75 14 arch/arm/kernel/smp_twd.c:146 discrim 1 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 75 74 77 14 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:DI 138 [ D.14353 ])
        (reg:DI 0 r0)) -1 (nil))

(insn 77 75 78 14 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ waitjiffies ]) 4)
            (subreg:SI (reg:DI 138 [ D.14353 ]) 4))) -1 (nil))

(jump_insn 78 77 198 14 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 14 -> ( 13 15)

;; Succ edge  13 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; Pred edge  14 [50.0%]  (fallthru)
(note 198 78 79 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 79 198 80 15 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ waitjiffies ]) 4)
            (subreg:SI (reg:DI 138 [ D.14353 ]) 4))) -1 (nil))

(jump_insn 80 79 199 15 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 87)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 15 -> ( 19 16)

;; Succ edge  19 [71.0%] 
;; Succ edge  16 [29.0%]  (fallthru)

;; Start of basic block ( 15) -> 16
;; Pred edge  15 [29.0%]  (fallthru)
(note 199 80 81 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 81 199 82 16 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ waitjiffies ]) 0)
            (subreg:SI (reg:DI 138 [ D.14353 ]) 0))) -1 (nil))

(jump_insn 82 81 200 16 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 16 -> ( 13 17)

;; Succ edge  13 [50.0%] 
;; Succ edge  17 [50.0%]  (fallthru)

;; Start of basic block ( 16) -> 17
;; Pred edge  16 [50.0%]  (fallthru)
(note 200 82 83 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 83 200 84 17 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 144 [ waitjiffies ]) 0)
            (subreg:SI (reg:DI 138 [ D.14353 ]) 0))) -1 (nil))

(jump_insn 84 83 201 17 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 87)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 17 -> ( 19 18)

;; Succ edge  19 [71.0%] 
;; Succ edge  18 [29.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; Pred edge  17 [29.0%]  (fallthru)
(note 201 84 85 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(jump_insn 85 201 86 18 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (label_ref 87)) -1 (nil))
;; End of basic block 18 -> ( 19)

;; Succ edge  19 [100.0%] 

(barrier 86 85 87)

;; Start of basic block ( 15 17 18) -> 19
;; Pred edge  15 [71.0%] 
;; Pred edge  17 [71.0%] 
;; Pred edge  18 [100.0%] 
(code_label 87 86 202 19 44 "" [3 uses])

(note 202 87 88 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 19 -> ( 20)

;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; Pred edge  19 [100.0%]  (fallthru)
(note 88 202 89 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 20 arch/arm/kernel/smp_twd.c:150 (set (reg:DI 162)
        (const_int 5 [0x5])) -1 (nil))

(insn 90 89 91 20 arch/arm/kernel/smp_twd.c:150 (parallel [
            (set (reg/v:DI 134 [ waitjiffies.404 ])
                (plus:DI (reg/v:DI 144 [ waitjiffies ])
                    (reg:DI 162)))
            (clobber (reg:CC 24 cc))
        ]) -1 (nil))

(insn 91 90 92 20 arch/arm/kernel/smp_twd.c:153 (set (reg/f:SI 163)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 92 91 93 20 arch/arm/kernel/smp_twd.c:153 (set (reg:SI 164)
        (mem/f/c/i:SI (reg/f:SI 163) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 93 92 94 20 arch/arm/kernel/smp_twd.c:153 (set (reg/f:SI 139 [ D.14350 ])
        (plus:SI (reg:SI 164)
            (const_int 8 [0x8]))) -1 (nil))

(insn 94 93 95 20 arch/arm/kernel/smp_twd.c:153 (set (reg:SI 165)
        (const_int 1 [0x1])) -1 (nil))

(insn 95 94 96 20 arch/arm/kernel/smp_twd.c:153 (set (mem/v:SI (reg/f:SI 139 [ D.14350 ]) [0 S4 A32])
        (reg:SI 165)) -1 (nil))

(insn 96 95 97 20 arch/arm/kernel/smp_twd.c:156 (set (reg/f:SI 166)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 97 96 98 20 arch/arm/kernel/smp_twd.c:156 (set (reg:SI 167)
        (mem/f/c/i:SI (reg/f:SI 166) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 98 97 99 20 arch/arm/kernel/smp_twd.c:156 (set (reg/f:SI 140 [ D.14349 ])
        (plus:SI (reg:SI 167)
            (const_int 4 [0x4]))) -1 (nil))

(insn 99 98 100 20 arch/arm/kernel/smp_twd.c:156 (set (reg:SI 168)
        (const_int -1 [0xffffffffffffffff])) -1 (nil))

(insn 100 99 101 20 arch/arm/kernel/smp_twd.c:156 (set (mem/v:SI (reg/f:SI 140 [ D.14349 ]) [0 S4 A32])
        (reg:SI 168)) -1 (nil))

(jump_insn 101 100 102 20 arch/arm/kernel/smp_twd.c:156 (set (pc)
        (label_ref 106)) -1 (nil))
;; End of basic block 20 -> ( 22)

;; Succ edge  22 [100.0%] 

(barrier 102 101 110)

;; Start of basic block ( 22 24) -> 21
;; Pred edge  22 [50.0%] 
;; Pred edge  24 [50.0%] 
(code_label 110 102 103 21 46 "" [2 uses])

(note 103 110 104 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 105 21 arch/arm/kernel/smp_twd.c:159 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) -1 (nil))

(call_insn 105 104 106 21 arch/arm/kernel/smp_twd.c:159 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 21 -> ( 22)

;; Succ edge  22 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 20 21) -> 22
;; Pred edge  20 [100.0%] 
;; Pred edge  21 [100.0%]  (fallthru,dfs_back)
(code_label 106 105 107 22 45 "" [1 uses])

(note 107 106 108 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(call_insn 108 107 109 22 arch/arm/kernel/smp_twd.c:158 discrim 1 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (nil))

(insn 109 108 111 22 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:DI 141 [ D.14348 ])
        (reg:DI 0 r0)) -1 (nil))

(insn 111 109 112 22 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ waitjiffies.404 ]) 4)
            (subreg:SI (reg:DI 141 [ D.14348 ]) 4))) -1 (nil))

(jump_insn 112 111 203 22 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 22 -> ( 21 23)

;; Succ edge  21 [50.0%] 
;; Succ edge  23 [50.0%]  (fallthru)

;; Start of basic block ( 22) -> 23
;; Pred edge  22 [50.0%]  (fallthru)
(note 203 112 113 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 113 203 114 23 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ waitjiffies.404 ]) 4)
            (subreg:SI (reg:DI 141 [ D.14348 ]) 4))) -1 (nil))

(jump_insn 114 113 204 23 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 23 -> ( 27 24)

;; Succ edge  27 [71.0%] 
;; Succ edge  24 [29.0%]  (fallthru)

;; Start of basic block ( 23) -> 24
;; Pred edge  23 [29.0%]  (fallthru)
(note 204 114 115 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 115 204 116 24 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ waitjiffies.404 ]) 0)
            (subreg:SI (reg:DI 141 [ D.14348 ]) 0))) -1 (nil))

(jump_insn 116 115 205 24 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 24 -> ( 21 25)

;; Succ edge  21 [50.0%] 
;; Succ edge  25 [50.0%]  (fallthru)

;; Start of basic block ( 24) -> 25
;; Pred edge  24 [50.0%]  (fallthru)
(note 205 116 117 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 117 205 118 25 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (subreg:SI (reg/v:DI 134 [ waitjiffies.404 ]) 0)
            (subreg:SI (reg:DI 141 [ D.14348 ]) 0))) -1 (nil))

(jump_insn 118 117 206 25 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 121)
            (pc))) -1 (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 25 -> ( 27 26)

;; Succ edge  27 [71.0%] 
;; Succ edge  26 [29.0%]  (fallthru)

;; Start of basic block ( 25) -> 26
;; Pred edge  25 [29.0%]  (fallthru)
(note 206 118 119 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(jump_insn 119 206 120 26 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (label_ref 121)) -1 (nil))
;; End of basic block 26 -> ( 27)

;; Succ edge  27 [100.0%] 

(barrier 120 119 121)

;; Start of basic block ( 23 25 26) -> 27
;; Pred edge  23 [71.0%] 
;; Pred edge  25 [71.0%] 
;; Pred edge  26 [100.0%] 
(code_label 121 120 207 27 47 "" [3 uses])

(note 207 121 122 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 27 -> ( 28)

;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; Pred edge  27 [100.0%]  (fallthru)
(note 122 207 123 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 28 arch/arm/kernel/smp_twd.c:161 (set (reg/f:SI 169)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 124 123 125 28 arch/arm/kernel/smp_twd.c:161 (set (reg:SI 170)
        (mem/f/c/i:SI (reg/f:SI 169) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 125 124 126 28 arch/arm/kernel/smp_twd.c:161 (set (reg/f:SI 133 [ temp.409 ])
        (plus:SI (reg:SI 170)
            (const_int 4 [0x4]))) -1 (nil))

(insn 126 125 127 28 arch/arm/kernel/smp_twd.c:161 (set (reg/v:SI 143 [ count ])
        (mem/v:SI (reg/f:SI 133 [ temp.409 ]) [0 S4 A32])) -1 (nil))

(insn 127 126 128 28 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 171)
        (not:SI (reg/v:SI 143 [ count ]))) -1 (nil))

(insn 128 127 129 28 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 172)
        (const_int 20 [0x14])) -1 (nil))

(insn 129 128 130 28 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 142 [ twd_timer_rate.214 ])
        (mult:SI (reg:SI 172)
            (reg:SI 171))) -1 (nil))

(insn 130 129 131 28 arch/arm/kernel/smp_twd.c:163 (set (reg/f:SI 173)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 131 130 132 28 arch/arm/kernel/smp_twd.c:163 (set (mem/c/i:SI (plus:SI (reg/f:SI 173)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 142 [ twd_timer_rate.214 ])) -1 (nil))

(insn 132 131 133 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 174)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10ff0a80>)) -1 (nil))

(insn 133 132 134 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 142 [ twd_timer_rate.214 ])) -1 (nil))

(insn 134 133 135 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 1000000 [0xf4240])) -1 (nil))

(call_insn/u 135 134 136 28 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 136 135 137 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 178)
        (reg:SI 0 r0)) -1 (expr_list:REG_EQUAL (udiv:SI (reg:SI 142 [ twd_timer_rate.214 ])
            (const_int 1000000 [0xf4240]))
        (nil)))

(insn 137 136 138 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 142 [ twd_timer_rate.214 ])) -1 (nil))

(insn 138 137 139 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 10000 [0x2710])) -1 (nil))

(call_insn/u 139 138 140 28 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 140 139 141 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 182)
        (reg:SI 0 r0)) -1 (expr_list:REG_EQUAL (udiv:SI (reg:SI 142 [ twd_timer_rate.214 ])
            (const_int 10000 [0x2710]))
        (nil)))

(insn 141 140 142 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 182)) -1 (nil))

(insn 142 141 143 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) -1 (nil))

(call_insn/u 143 142 144 28 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 144 143 145 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 188)
        (reg:SI 1 r1 [+4 ])) -1 (expr_list:REG_EQUAL (umod:SI (reg:SI 182)
            (const_int 100 [0x64]))
        (nil)))

(insn 145 144 146 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 174)) -1 (nil))

(insn 146 145 147 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (reg:SI 178)) -1 (nil))

(insn 147 146 148 28 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 2 r2)
        (reg:SI 188)) -1 (nil))

(call_insn 148 147 149 28 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 28 -> ( 29)

;; Succ edge  29 [100.0%]  (fallthru)

;; Start of basic block ( 30 11 28) -> 29
;; Pred edge  30 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  28 [100.0%]  (fallthru)
(code_label 149 148 150 29 41 "" [2 uses])

(note 150 149 151 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 152 29 arch/arm/kernel/smp_twd.c:204 (set (reg/f:SI 189)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 152 151 153 29 arch/arm/kernel/smp_twd.c:204 (set (reg:SI 190)
        (mem/f/c/i:SI (reg/f:SI 189) [0 twd_base+0 S4 A32])) -1 (nil))

(insn 153 152 154 29 arch/arm/kernel/smp_twd.c:204 (set (reg/f:SI 148 [ D.14283 ])
        (plus:SI (reg:SI 190)
            (const_int 8 [0x8]))) -1 (nil))

(insn 154 153 155 29 arch/arm/kernel/smp_twd.c:204 (set (reg:SI 191)
        (const_int 0 [0x0])) -1 (nil))

(insn 155 154 156 29 arch/arm/kernel/smp_twd.c:204 (set (mem/v:SI (reg/f:SI 148 [ D.14283 ]) [0 S4 A32])
        (reg:SI 191)) -1 (nil))

(insn 156 155 157 29 arch/arm/kernel/smp_twd.c:206 (set (reg/f:SI 192)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10ff00c0>)) -1 (nil))

(insn 157 156 158 29 arch/arm/kernel/smp_twd.c:206 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 68 [0x44])) [0 <variable>.name+0 S4 A32])
        (reg/f:SI 192)) -1 (nil))

(insn 158 157 159 29 arch/arm/kernel/smp_twd.c:207 (set (reg:SI 193)
        (const_int 7 [0x7])) -1 (nil))

(insn 159 158 160 29 arch/arm/kernel/smp_twd.c:207 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 44 [0x2c])) [0 <variable>.features+0 S4 A32])
        (reg:SI 193)) -1 (nil))

(insn 160 159 161 29 arch/arm/kernel/smp_twd.c:209 (set (reg:SI 194)
        (const_int 350 [0x15e])) -1 (nil))

(insn 161 160 162 29 arch/arm/kernel/smp_twd.c:209 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 72 [0x48])) [0 <variable>.rating+0 S4 A64])
        (reg:SI 194)) -1 (nil))

(insn 162 161 163 29 arch/arm/kernel/smp_twd.c:210 (set (reg/f:SI 195)
        (symbol_ref:SI ("twd_set_mode") [flags 0x3] <function_decl 0x10f97d00 twd_set_mode>)) -1 (nil))

(insn 163 162 164 29 arch/arm/kernel/smp_twd.c:210 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 56 [0x38])) [0 <variable>.set_mode+0 S4 A64])
        (reg/f:SI 195)) -1 (nil))

(insn 164 163 165 29 arch/arm/kernel/smp_twd.c:211 (set (reg/f:SI 196)
        (symbol_ref:SI ("twd_set_next_event") [flags 0x3] <function_decl 0x10f97e00 twd_set_next_event>)) -1 (nil))

(insn 165 164 166 29 arch/arm/kernel/smp_twd.c:211 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 4 [0x4])) [0 <variable>.set_next_event+0 S4 A32])
        (reg/f:SI 196)) -1 (nil))

(insn 166 165 167 29 arch/arm/kernel/smp_twd.c:213 (set (reg/f:SI 197)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) -1 (nil))

(insn 167 166 168 29 arch/arm/kernel/smp_twd.c:213 (set (reg/v:SI 147 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 197)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 5270655)) -1 (nil))

(insn 168 167 169 29 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 136 [ sp.87 ])
        (reg/v:SI 13 sp [ sp ])) -1 (nil))

(insn 169 168 170 29 arch/arm/kernel/smp_twd.c:213 (set (reg/f:SI 198)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)) -1 (nil))

(insn 170 169 171 29 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 200)
        (and:SI (reg:SI 136 [ sp.87 ])
            (const_int -8129 [0xffffffffffffe03f]))) -1 (nil))

(insn 171 170 172 29 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 199)
        (and:SI (reg:SI 200)
            (const_int -64 [0xffffffffffffffc0]))) -1 (expr_list:REG_EQUAL (and:SI (reg:SI 136 [ sp.87 ])
            (const_int -8192 [0xffffffffffffe000]))
        (nil)))

(insn 172 171 173 29 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 201)
        (mem/s/j:SI (plus:SI (reg:SI 199)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) -1 (nil))

(insn 173 172 174 29 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 202)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 201)
                    (const_int 4 [0x4]))
                (reg/f:SI 198)) [0 __per_cpu_offset S4 A32])) -1 (nil))

(insn 174 173 175 29 arch/arm/kernel/smp_twd.c:213 (set (mem/f:SI (plus:SI (reg/v:SI 147 [ __ptr ])
                (reg:SI 202)) [0 S4 A32])
        (reg/v/f:SI 150 [ clk ])) -1 (nil))

(insn 175 174 176 29 arch/arm/kernel/smp_twd.c:215 (set (reg/f:SI 203)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 176 175 177 29 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 0 r0)
        (reg/v/f:SI 150 [ clk ])) -1 (nil))

(insn 177 176 178 29 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 203)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) -1 (nil))

(insn 178 177 179 29 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 2 r2)
        (const_int 15 [0xf])) -1 (nil))

(insn 179 178 180 29 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) -1 (nil))

(call_insn 180 179 181 29 arch/arm/kernel/smp_twd.c:215 (parallel [
            (call (mem:SI (symbol_ref:SI ("clockevents_config_and_register") [flags 0x41] <function_decl 0x10f21880 clockevents_config_and_register>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 181 180 182 29 arch/arm/kernel/smp_twd.c:219 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 150 [ clk ])
                (const_int 76 [0x4c])) [0 <variable>.irq+0 S4 A32])) -1 (nil))

(call_insn/j 182 181 183 29 arch/arm/kernel/smp_twd.c:219 (parallel [
            (call (mem:SI (symbol_ref:SI ("gic_enable_ppi") [flags 0x41] <function_decl 0x10f97c80 gic_enable_ppi>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 29 -> ( 1)

;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 183 182 184)

;; Start of basic block ( 10) -> 30
;; Pred edge  10 [100.0%] 
(code_label 184 183 185 30 40 "" [1 uses])

(note 185 184 186 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 186 185 187 30 arch/arm/kernel/smp_twd.c:200 (set (reg:SI 0 r0)
        (reg/f:SI 135 [ twd_clk.403 ])) -1 (nil))

(call_insn 187 186 188 30 arch/arm/kernel/smp_twd.c:200 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 188 187 189 30 arch/arm/kernel/smp_twd.c:200 (set (reg:SI 149 [ twd_timer_rate.219 ])
        (reg:SI 0 r0)) -1 (nil))

(insn 189 188 190 30 arch/arm/kernel/smp_twd.c:200 (set (reg/f:SI 204)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(insn 190 189 191 30 arch/arm/kernel/smp_twd.c:200 (set (mem/c/i:SI (plus:SI (reg/f:SI 204)
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 149 [ twd_timer_rate.219 ])) -1 (nil))

(jump_insn 191 190 192 30 arch/arm/kernel/smp_twd.c:200 (set (pc)
        (label_ref 149)) -1 (nil))
;; End of basic block 30 -> ( 29)

;; Succ edge  29 [100.0%] 

(barrier 192 191 197)

;; Start of basic block () -> 31
(note 197 192 194 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(jump_insn 194 197 195 31 arch/arm/kernel/smp_twd.c:220 (set (pc)
        (label_ref 196)) -1 (nil))
;; End of basic block 31 -> ( 33)

;; Succ edge  33 [100.0%] 

(barrier 195 194 193)

;; Start of basic block () -> 32
(code_label 193 195 208 32 35 "" [0 uses])

(note 208 193 196 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 32 -> ( 33)

;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 31 32) -> 33
;; Pred edge  31 [100.0%] 
;; Pred edge  32 [100.0%]  (fallthru)
(code_label 196 208 209 33 48 "" [1 uses])

(note 209 196 0 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 33 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

