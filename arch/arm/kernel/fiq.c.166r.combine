
;; Function claim_fiq (claim_fiq)[0:921]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 2: 4
insn_cost 6: 8
insn_cost 7: 4
insn_cost 8: 4
insn_cost 9: 0
insn_cost 11: 4
insn_cost 12: 4
insn_cost 13: 0
insn_cost 15: 4
insn_cost 68: 0
insn_cost 20: 4
insn_cost 21: 4
insn_cost 22: 0
insn_cost 23: 4
insn_cost 24: 4
insn_cost 25: 0
insn_cost 28: 8
insn_cost 29: 4
insn_cost 30: 4
insn_cost 32: 4
insn_cost 33: 4
insn_cost 40: 4
insn_cost 46: 0
Failed to match this instruction:
(set (reg/f:SI 135 [ current_fiq.241 ])
    (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32])
                (const_int 0 [0x0])))
        (set (reg/f:SI 135 [ current_fiq.241 ])
            (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32])
                (const_int 0 [0x0])))
        (set (reg/f:SI 135 [ current_fiq.241 ])
            (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32])
                (const_int 0 [0x0])))
        (set (reg/f:SI 135 [ current_fiq.241 ])
            (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32])
                (const_int 0 [0x0])))
        (set (reg/f:SI 135 [ current_fiq.241 ])
            (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
    ])
Failed to match this instruction:
(set (reg/f:SI 135 [ current_fiq.241 ])
    (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
Failed to match this instruction:
(set (pc)
    (if_then_else (eq (reg/f:SI 135 [ current_fiq.241 ])
            (const_int 0 [0x0]))
        (label_ref 26)
        (pc)))
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (eq (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32])
                    (const_int 0 [0x0]))
                (label_ref 26)
                (pc)))
        (set (reg/f:SI 135 [ current_fiq.241 ])
            (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (eq (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32])
                    (const_int 0 [0x0]))
                (label_ref 26)
                (pc)))
        (set (reg/f:SI 135 [ current_fiq.241 ])
            (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32]))
    ])
Successfully matched this instruction:
(set (reg/f:SI 135 [ current_fiq.241 ])
    (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32]))
Failed to match this instruction:
(set (pc)
    (if_then_else (eq (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32])
            (const_int 0 [0x0]))
        (label_ref 26)
        (pc)))
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                        (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32])
                (const_int 0 [0x0])))
        (set (reg/f:SI 134 [ D.15569 ])
            (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                    (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                        (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32])
                (const_int 0 [0x0])))
        (set (reg/f:SI 134 [ D.15569 ])
            (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                    (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32]))
    ])
Failed to match this instruction:
(set (pc)
    (if_then_else (ne (reg/f:SI 134 [ D.15569 ])
            (const_int 0 [0x0]))
        (label_ref 18)
        (pc)))
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (ne (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                            (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32])
                    (const_int 0 [0x0]))
                (label_ref 18)
                (pc)))
        (set (reg/f:SI 134 [ D.15569 ])
            (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                    (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (ne (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                            (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32])
                    (const_int 0 [0x0]))
                (label_ref 18)
                (pc)))
        (set (reg/f:SI 134 [ D.15569 ])
            (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                    (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32]))
    ])
Successfully matched this instruction:
(set (reg/f:SI 134 [ D.15569 ])
    (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
            (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32]))
Failed to match this instruction:
(set (pc)
    (if_then_else (ne (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                    (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32])
            (const_int 0 [0x0]))
        (label_ref 18)
        (pc)))
Successfully matched this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (reg:SI 0 r0)
                (const_int 0 [0x0])))
        (set (reg/v:SI 133 [ ret ])
            (reg:SI 0 r0))
    ])
Successfully matched this instruction:
(set (pc)
    (if_then_else (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (label_ref 34)
        (pc)))
deferring deletion of insn with uid = 23.
modifying other_insn    25 pc={(cc:CC!=0x0)?L34:pc}
      REG_DEAD: cc:CC
      REG_BR_PROB: 0x2710
deferring rescan insn with uid = 25.
modifying insn i3    24 {cc:CC=cmp(r0:SI,0x0);r133:SI=r0:SI;}
      REG_DEAD: r0:SI
deferring rescan insn with uid = 24.
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (ne (reg:SI 0 r0)
                    (const_int 0 [0x0]))
                (label_ref 34)
                (pc)))
        (set (reg/v:SI 133 [ ret ])
            (reg:SI 0 r0))
    ])
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (ne (reg:SI 0 r0)
                    (const_int 0 [0x0]))
                (label_ref 34)
                (pc)))
        (set (reg/v:SI 133 [ ret ])
            (reg:SI 0 r0))
    ])
Successfully matched this instruction:
(set (reg/v:SI 133 [ ret ])
    (reg:SI 0 r0))
Failed to match this instruction:
(set (pc)
    (if_then_else (ne (reg:SI 0 r0)
            (const_int 0 [0x0]))
        (label_ref 34)
        (pc)))
Failed to match this instruction:
(parallel [
        (set (reg/f:SI 140 [ current_fiq ])
            (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
        (set (reg/f:SI 139)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg/f:SI 140 [ current_fiq ])
            (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
        (set (reg/f:SI 139)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
    ])
Failed to match this instruction:
(set (mem/s/f/j:SI (reg/v/f:SI 137 [ f ]) [0 <variable>.next+0 S4 A32])
    (mem/f/c/i:SI (reg/f:SI 139) [0 current_fiq+0 S4 A32]))
Failed to match this instruction:
(parallel [
        (set (mem/s/f/j:SI (reg/v/f:SI 137 [ f ]) [0 <variable>.next+0 S4 A32])
            (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
        (set (reg/f:SI 139)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
    ])
Failed to match this instruction:
(parallel [
        (set (mem/s/f/j:SI (reg/v/f:SI 137 [ f ]) [0 <variable>.next+0 S4 A32])
            (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
        (set (reg/f:SI 139)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
    ])
Successfully matched this instruction:
(set (reg/f:SI 139)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
Failed to match this instruction:
(set (mem/s/f/j:SI (reg/v/f:SI 137 [ f ]) [0 <variable>.next+0 S4 A32])
    (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
Failed to match this instruction:
(parallel [
        (use (reg/v:SI 133 [ ret ]))
        (set (reg/i:SI 0 r0)
            (reg/v:SI 133 [ ret ]))
    ])
Failed to match this instruction:
(parallel [
        (use (reg/v:SI 133 [ ret ]))
        (set (reg/i:SI 0 r0)
            (reg/v:SI 133 [ ret ]))
    ])


claim_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,5u} r1={3d,1u} r2={2d} r3={2d} r11={1d,7u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,3u} r25={1d,7u} r26={1d,6u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={3d,2u} r134={1d,2u} r135={1d,3u} r137={1d,2u} r138={1d,1u} r139={1d,2u} r140={1d,1u} 
;;    total ref usage 193{142d,51u,0e} in 22{21 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 137 138
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 137 138
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/fiq.c:93 (set (reg/v/f:SI 137 [ f ])
        (reg:SI 0 r0 [ f ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ f ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/fiq.c:96 (set (reg/f:SI 138)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/fiq.c:96 (set (reg/f:SI 135 [ current_fiq.241 ])
        (mem/f/c/i:SI (reg/f:SI 138) [0 current_fiq+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 138)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32])
            (nil))))

(insn 8 7 9 2 arch/arm/kernel/fiq.c:96 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ current_fiq.241 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/fiq.c:96 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8090 [0x1f9a])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137


;; Succ edge  3 [19.1%]  (fallthru)
;; Succ edge  6 [80.9%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 137
;; live  gen 	 24 [cc] 134
;; live  kill	

;; Pred edge  2 [19.1%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/fiq.c:99 (set (reg/f:SI 134 [ D.15569 ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 3 arch/arm/kernel/fiq.c:99 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 134 [ D.15569 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 14 3 arch/arm/kernel/fiq.c:99 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6983 [0x1b47])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 135 137


;; Succ edge  5 [69.8%] 
;; Succ edge  4 [30.2%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u15(11){ }u16(13){ }u17(25){ }u18(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	

;; Pred edge  3 [30.2%]  (fallthru)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 68 4 arch/arm/kernel/fiq.c:97 (set (reg/v:SI 133 [ ret ])
        (const_int -16 [0xfffffffffffffff0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 68 15 69 4 (set (pc)
        (label_ref 34)) -1 (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  7 [100.0%] 

(barrier 69 68 18)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 135 137
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133
;; live  kill	 14 [lr]

;; Pred edge  3 [69.8%] 
(code_label 18 69 19 5 3 "" [1 uses])

(note 19 18 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 5 arch/arm/kernel/fiq.c:100 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.241 ])
                (const_int 12 [0xc])) [0 <variable>.dev_id+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ current_fiq.241 ])
        (nil)))

(insn 21 20 22 5 arch/arm/kernel/fiq.c:100 (set (reg:SI 1 r1)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 22 21 23 5 arch/arm/kernel/fiq.c:100 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (reg/f:SI 134 [ D.15569 ]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 249 {*call_value_reg_armv5} (expr_list:REG_DEAD (reg/f:SI 134 [ D.15569 ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 23 22 24 5 NOTE_INSN_DELETED)

(insn 24 23 25 5 arch/arm/kernel/fiq.c:103 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 133 [ ret ])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 25 24 26 5 arch/arm/kernel/fiq.c:103 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 34)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137


;; Succ edge  6 (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 133 139 140
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 133 139 140
;; live  kill	

;; Pred edge  5 (fallthru)
;; Pred edge  2 [80.9%] 
(code_label 26 25 27 6 2 "" [1 uses])

(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 29 6 arch/arm/kernel/fiq.c:104 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 6 arch/arm/kernel/fiq.c:104 (set (reg/f:SI 140 [ current_fiq ])
        (mem/f/c/i:SI (reg/f:SI 139) [0 current_fiq+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32])
        (nil)))

(insn 30 29 32 6 arch/arm/kernel/fiq.c:104 (set (mem/s/f/j:SI (reg/v/f:SI 137 [ f ]) [0 <variable>.next+0 S4 A32])
        (reg/f:SI 140 [ current_fiq ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ current_fiq ])
        (nil)))

(insn 32 30 33 6 arch/arm/kernel/fiq.c:105 (set (mem/f/c/i:SI (reg/f:SI 139) [0 current_fiq+0 S4 A32])
        (reg/v/f:SI 137 [ f ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_DEAD (reg/v/f:SI 137 [ f ])
            (nil))))

(insn 33 32 34 6 arch/arm/kernel/fiq.c:105 (set (reg/v:SI 133 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 5 6 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 34 33 35 7 4 "" [2 uses])

(note 35 34 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 35 46 7 arch/arm/kernel/fiq.c:109 (set (reg/i:SI 0 r0)
        (reg/v:SI 133 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ ret ])
        (nil)))

(insn 46 40 0 7 arch/arm/kernel/fiq.c:109 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 23.
rescanning insn with uid = 24.
deleting insn with uid = 24.
verify found no changes in insn with uid = 25.
ending the processing of deferred insns

;; Function init_FIQ (init_FIQ)[0:925] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 5: 4
insn_cost 6: 4
insn_cost 7: 8
insn_cost 8: 4
Failed to match this instruction:
(set (reg:SI 133 [ no_fiq_insn.247 ])
    (mem:SI (const_int -65508 [0xffffffffffff001c]) [0 S4 A32]))
Failed to match this instruction:
(set (mem/c/i:SI (reg/f:SI 135) [0 no_fiq_insn+0 S4 A32])
    (mem:SI (plus:SI (reg/f:SI 134)
            (const_int -4067 [0xfffffffffffff01d])) [0 S4 A32]))
Failed to match this instruction:
(set (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 no_fiq_insn+0 S4 A32])
    (reg:SI 133 [ no_fiq_insn.247 ]))
Failed to match this instruction:
(set (mem/c/i:SI (reg/f:SI 135) [0 no_fiq_insn+0 S4 A32])
    (mem:SI (const_int -65508 [0xffffffffffff001c]) [0 S4 A32]))
Failed to match this instruction:
(set (mem/c/i:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 no_fiq_insn+0 S4 A32])
    (mem:SI (plus:SI (reg/f:SI 134)
            (const_int -4067 [0xfffffffffffff01d])) [0 S4 A32]))
Successfully matched this instruction:
(set (reg/f:SI 135)
    (high:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])))
Failed to match this instruction:
(set (mem/c/i:SI (lo_sum:SI (reg/f:SI 135)
            (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) [0 no_fiq_insn+0 S4 A32])
    (mem:SI (plus:SI (reg/f:SI 134)
            (const_int -4067 [0xfffffffffffff01d])) [0 S4 A32]))


init_FIQ

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} 
;;    total ref usage 24{13d,11u,0e} in 4{4 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 134 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 135
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/fiq.c:145 (set (reg/f:SI 134)
        (const_int -61441 [0xffffffffffff0fff])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/fiq.c:145 (set (reg:SI 133 [ no_fiq_insn.247 ])
        (mem:SI (plus:SI (reg/f:SI 134)
                (const_int -4067 [0xfffffffffffff01d])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 134)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/fiq.c:145 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 7 0 2 arch/arm/kernel/fiq.c:145 (set (mem/c/i:SI (reg/f:SI 135) [0 no_fiq_insn+0 S4 A32])
        (reg:SI 133 [ no_fiq_insn.247 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_DEAD (reg:SI 133 [ no_fiq_insn.247 ])
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function disable_fiq (disable_fiq)[0:924]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 7: 0


disable_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 136{126d,10u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(call_insn/j 7 3 8 2 arch/arm/kernel/fiq.c:132 (parallel [
            (call (mem:SI (symbol_ref:SI ("disable_irq") [flags 0x41] <function_decl 0x10e80400 disable_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 8 7 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function enable_fiq (enable_fiq)[0:923]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 7: 0


enable_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp]
;;  ref usage 	r0={2d,1u} r1={2d} r2={2d} r3={2d} r11={1d,2u} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d,2u} r26={1d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 136{126d,10u,0e} in 1{0 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(call_insn/j 7 3 8 2 arch/arm/kernel/fiq.c:127 (parallel [
            (call (mem:SI (symbol_ref:SI ("enable_irq") [flags 0x41] <function_decl 0x10e80480 enable_irq>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 8 7 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function release_fiq (release_fiq)[0:922]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 2: 4
insn_cost 6: 8
insn_cost 7: 4
insn_cost 8: 4
insn_cost 9: 0
insn_cost 12: 8
insn_cost 13: 4
insn_cost 14: 4
insn_cost 15: 0
insn_cost 16: 0
insn_cost 20: 4
insn_cost 21: 4
insn_cost 22: 4
insn_cost 24: 4
insn_cost 25: 4
insn_cost 26: 4
insn_cost 45: 4
insn_cost 28: 0
insn_cost 29: 4
insn_cost 30: 4
insn_cost 31: 0
Failed to match this instruction:
(parallel [
        (set (reg/f:SI 135 [ current_fiq.243 ])
            (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
        (set (reg/f:SI 137)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg/f:SI 135 [ current_fiq.243 ])
            (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
        (set (reg/f:SI 137)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (reg/f:SI 135 [ current_fiq.243 ])
                (reg:SI 0 r0 [ f ])))
        (set (reg/v/f:SI 136 [ f ])
            (reg:SI 0 r0 [ f ]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (reg/f:SI 135 [ current_fiq.243 ])
                (reg:SI 0 r0 [ f ])))
        (set (reg/v/f:SI 136 [ f ])
            (reg:SI 0 r0 [ f ]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32])
                (reg/v/f:SI 136 [ f ])))
        (set (reg/f:SI 135 [ current_fiq.243 ])
            (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32])
                (reg/v/f:SI 136 [ f ])))
        (set (reg/f:SI 135 [ current_fiq.243 ])
            (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32])
                (reg/v/f:SI 136 [ f ])))
        (set (reg/f:SI 135 [ current_fiq.243 ])
            (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
        (set (reg/f:SI 137)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32])
                (reg/v/f:SI 136 [ f ])))
        (set (reg/f:SI 135 [ current_fiq.243 ])
            (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32]))
        (set (reg/f:SI 137)
            (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32])
                (reg:SI 0 r0 [ f ])))
        (set (reg/f:SI 135 [ current_fiq.243 ])
            (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32]))
        (set (reg/v/f:SI 136 [ f ])
            (reg:SI 0 r0 [ f ]))
    ])
Failed to match this instruction:
(parallel [
        (set (reg:CC 24 cc)
            (compare:CC (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32])
                (reg:SI 0 r0 [ f ])))
        (set (reg/f:SI 135 [ current_fiq.243 ])
            (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32]))
        (set (reg/v/f:SI 136 [ f ])
            (reg:SI 0 r0 [ f ]))
    ])
Failed to match this instruction:
(set (pc)
    (if_then_else (eq (reg/f:SI 135 [ current_fiq.243 ])
            (reg/v/f:SI 136 [ f ]))
        (label_ref 18)
        (pc)))
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (eq (reg/f:SI 135 [ current_fiq.243 ])
                    (reg:SI 0 r0 [ f ]))
                (label_ref 18)
                (pc)))
        (set (reg/v/f:SI 136 [ f ])
            (reg:SI 0 r0 [ f ]))
    ])
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (eq (reg/f:SI 135 [ current_fiq.243 ])
                    (reg:SI 0 r0 [ f ]))
                (label_ref 18)
                (pc)))
        (set (reg/v/f:SI 136 [ f ])
            (reg:SI 0 r0 [ f ]))
    ])
Successfully matched this instruction:
(set (reg/v/f:SI 136 [ f ])
    (reg:SI 0 r0 [ f ]))
Failed to match this instruction:
(set (pc)
    (if_then_else (eq (reg/f:SI 135 [ current_fiq.243 ])
            (reg:SI 0 r0 [ f ]))
        (label_ref 18)
        (pc)))
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (eq (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32])
                    (reg/v/f:SI 136 [ f ]))
                (label_ref 18)
                (pc)))
        (set (reg/f:SI 135 [ current_fiq.243 ])
            (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (pc)
            (if_then_else (eq (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32])
                    (reg/v/f:SI 136 [ f ]))
                (label_ref 18)
                (pc)))
        (set (reg/f:SI 135 [ current_fiq.243 ])
            (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32]))
    ])
Successfully matched this instruction:
(set (reg/f:SI 135 [ current_fiq.243 ])
    (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32]))
Failed to match this instruction:
(set (pc)
    (if_then_else (eq (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32])
            (reg/v/f:SI 136 [ f ]))
        (label_ref 18)
        (pc)))
Failed to match this instruction:
(set (reg/f:SI 134 [ current_fiq.244 ])
    (mem/s/f/j:SI (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32]) [0 <variable>.next+0 S4 A32]))
Failed to match this instruction:
(parallel [
        (set (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32])
            (mem/s/f/j:SI (reg/f:SI 140 [ current_fiq ]) [0 <variable>.next+0 S4 A32]))
        (set (reg/f:SI 134 [ current_fiq.244 ])
            (mem/s/f/j:SI (reg/f:SI 140 [ current_fiq ]) [0 <variable>.next+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32])
            (mem/s/f/j:SI (reg/f:SI 140 [ current_fiq ]) [0 <variable>.next+0 S4 A32]))
        (set (reg/f:SI 134 [ current_fiq.244 ])
            (mem/s/f/j:SI (reg/f:SI 140 [ current_fiq ]) [0 <variable>.next+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32])
            (mem/s/f/j:SI (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32]) [0 <variable>.next+0 S4 A32]))
        (set (reg/f:SI 134 [ current_fiq.244 ])
            (mem/s/f/j:SI (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32]) [0 <variable>.next+0 S4 A32]))
    ])
Failed to match this instruction:
(parallel [
        (set (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32])
            (mem/s/f/j:SI (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32]) [0 <variable>.next+0 S4 A32]))
        (set (reg/f:SI 134 [ current_fiq.244 ])
            (mem/s/f/j:SI (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32]) [0 <variable>.next+0 S4 A32]))
    ])
Successfully matched this instruction:
(parallel [
        (set (reg:SI 0 r0)
            (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ current_fiq.244 ])
                            (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0])))
        (use (const_int 0 [0x0]))
        (clobber (reg:SI 14 lr))
    ])
deferring deletion of insn with uid = 25.
modifying insn i3    28 r0:SI=call [[r134:SI+0x8]] argc:0x0
      REG_DEAD: r134:SI
      REG_DEAD: r1:SI
deferring rescan insn with uid = 28.
Successfully matched this instruction:
(set (reg:CC 24 cc)
    (compare:CC (reg:SI 0 r0)
        (const_int 0 [0x0])))
deferring deletion of insn with uid = 29.
modifying insn i3    30 cc:CC=cmp(r0:SI,0x0)
      REG_DEAD: r0:SI
deferring rescan insn with uid = 30.
Failed to match this instruction:
(set (pc)
    (if_then_else (ne (reg:SI 0 r0)
            (const_int 0 [0x0]))
        (label_ref:SI 41)
        (pc)))


release_fiq

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,4u} r1={6d,2u} r2={5d,1u} r3={4d} r11={1d,6u} r12={4d} r13={1d,9u} r14={3d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={5d,2u} r25={1d,6u} r26={1d,5u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,3u} r135={1d,2u} r136={1d,2u} r137={1d,2u} r140={1d,1u} r142={1d,1u} r143={1d,2u} 
;;    total ref usage 425{375d,50u,0e} in 19{16 regular + 3 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136 137
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136 137
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/fiq.c:112 (set (reg/v/f:SI 136 [ f ])
        (reg:SI 0 r0 [ f ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ f ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/fiq.c:113 (set (reg/f:SI 137)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/fiq.c:113 (set (reg/f:SI 135 [ current_fiq.243 ])
        (mem/f/c/i:SI (reg/f:SI 137) [0 current_fiq+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32])
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/fiq.c:113 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 135 [ current_fiq.243 ])
            (reg/v/f:SI 136 [ f ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/fiq.c:113 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 137


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 13 3 arch/arm/kernel/fiq.c:114 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11078640>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x11078640>)
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/fiq.c:114 (set (reg:SI 1 r1)
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 136 [ f ])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ f ])
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/fiq.c:114 (set (reg:SI 2 r2)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 135 [ current_fiq.243 ])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135 [ current_fiq.243 ])
        (nil)))

(call_insn 15 14 16 3 arch/arm/kernel/fiq.c:114 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a57b00 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(call_insn/j 16 15 17 3 arch/arm/kernel/fiq.c:116 (parallel [
            (call (mem:SI (symbol_ref:SI ("dump_stack") [flags 0x41] <function_decl 0x10a57d80 dump_stack>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (nil)
    (nil))
;; End of basic block 3 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 17 16 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; live  gen 	 143
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 18 17 19 4 18 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 41 4 arch/arm/kernel/fiq.c:121 (set (reg/f:SI 143)
        (reg/f:SI 137)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 137)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 140 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 133 134 140 142
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  5 [86.0%]  (dfs_back)
(code_label 41 20 40 5 20 "" [1 uses])

(note 40 41 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 21 40 22 5 arch/arm/kernel/fiq.c:121 (set (reg/f:SI 140 [ current_fiq ])
        (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32])
        (nil)))

(insn 22 21 24 5 arch/arm/kernel/fiq.c:121 (set (reg/f:SI 134 [ current_fiq.244 ])
        (mem/s/f/j:SI (reg/f:SI 140 [ current_fiq ]) [0 <variable>.next+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ current_fiq ])
        (nil)))

(insn 24 22 25 5 arch/arm/kernel/fiq.c:121 (set (mem/f/c/i:SI (reg/f:SI 143) [0 current_fiq+0 S4 A32])
        (reg/f:SI 134 [ current_fiq.244 ])) 167 {*arm_movsi_insn} (nil))

(note 25 24 26 5 NOTE_INSN_DELETED)

(insn 26 25 45 5 arch/arm/kernel/fiq.c:122 discrim 1 (set (reg:SI 0 r0)
        (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ current_fiq.244 ])
                (const_int 12 [0xc])) [0 <variable>.dev_id+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 45 26 28 5 arch/arm/kernel/fiq.c:122 discrim 1 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 28 45 29 5 arch/arm/kernel/fiq.c:122 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (mem/s/f/j:SI (plus:SI (reg/f:SI 134 [ current_fiq.244 ])
                                (const_int 8 [0x8])) [0 <variable>.fiq_op+0 S4 A32]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 251 {*call_value_mem} (expr_list:REG_DEAD (reg/f:SI 134 [ current_fiq.244 ])
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(note 29 28 30 5 NOTE_INSN_DELETED)

(insn 30 29 31 5 arch/arm/kernel/fiq.c:122 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 31 30 39 5 arch/arm/kernel/fiq.c:122 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8600 [0x2198])
            (nil))))
;; End of basic block 5 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143


;; Succ edge  5 [86.0%]  (dfs_back)
;; Succ edge  6 [14.0%]  (fallthru,loop_exit)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [14.0%]  (fallthru,loop_exit)
(note 39 31 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 6 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 25.
deleting insn with uid = 29.
rescanning insn with uid = 28.
deleting insn with uid = 28.
rescanning insn with uid = 30.
deleting insn with uid = 30.
ending the processing of deferred insns

;; Function set_fiq_handler (set_fiq_handler)[0:920]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 2: 4
insn_cost 3: 4
insn_cost 7: 8
insn_cost 8: 4
insn_cost 9: 4
insn_cost 13: 4
insn_cost 14: 4
insn_cost 15: 4
insn_cost 16: 0
insn_cost 18: 8
insn_cost 20: 4
insn_cost 21: 8
insn_cost 22: 4
insn_cost 23: 8
insn_cost 24: 4
insn_cost 25: 0
insn_cost 26: 8
insn_cost 27: 4
insn_cost 28: 4
insn_cost 29: 4
insn_cost 30: 0
insn_cost 33: 4
insn_cost 34: 4
insn_cost 35: 4
insn_cost 36: 4
insn_cost 37: 0
Failed to match this instruction:
(set (reg/f:SI 137 [ vectors_page ])
    (mem/f/c/i:SI (symbol_ref:SI ("vectors_page") [flags 0xc0] <var_decl 0x11052240 vectors_page>) [0 vectors_page+0 S4 A32]))
Failed to match this instruction:
(set (reg/f:SI 136)
    (plus:SI (mem/f/c/i:SI (reg/f:SI 135) [0 vectors_page+0 S4 A32])
        (const_int 28 [0x1c])))
Failed to match this instruction:
(set (reg/f:SI 136)
    (plus:SI (mem/f/c/i:SI (symbol_ref:SI ("vectors_page") [flags 0xc0] <var_decl 0x11052240 vectors_page>) [0 vectors_page+0 S4 A32])
        (const_int 28 [0x1c])))
Successfully matched this instruction:
(set (reg/f:SI 137 [ vectors_page ])
    (high:SI (symbol_ref:SI ("vectors_page") [flags 0xc0] <var_decl 0x11052240 vectors_page>)))
Failed to match this instruction:
(set (reg/f:SI 136)
    (plus:SI (mem/f/c/i:SI (lo_sum:SI (reg/f:SI 137 [ vectors_page ])
                (symbol_ref:SI ("vectors_page") [flags 0xc0] <var_decl 0x11052240 vectors_page>)) [0 vectors_page+0 S4 A32])
        (const_int 28 [0x1c])))
Successfully matched this instruction:
(set (reg:SI 0 r0)
    (plus:SI (reg/f:SI 137 [ vectors_page ])
        (const_int 28 [0x1c])))
deferring deletion of insn with uid = 9.
modifying insn i3    13 r0:SI=r137:SI+0x1c
      REG_DEAD: r137:SI
deferring rescan insn with uid = 13.
Failed to match this instruction:
(set (reg:SI 0 r0)
    (plus:SI (mem/f/c/i:SI (reg/f:SI 135) [0 vectors_page+0 S4 A32])
        (const_int 28 [0x1c])))
Failed to match this instruction:
(set (reg:SI 0 r0)
    (plus:SI (mem/f/c/i:SI (symbol_ref:SI ("vectors_page") [flags 0xc0] <var_decl 0x11052240 vectors_page>) [0 vectors_page+0 S4 A32])
        (const_int 28 [0x1c])))
Successfully matched this instruction:
(set (reg/f:SI 137 [ vectors_page ])
    (high:SI (symbol_ref:SI ("vectors_page") [flags 0xc0] <var_decl 0x11052240 vectors_page>)))
Failed to match this instruction:
(set (reg:SI 0 r0)
    (plus:SI (mem/f/c/i:SI (lo_sum:SI (reg/f:SI 137 [ vectors_page ])
                (symbol_ref:SI ("vectors_page") [flags 0xc0] <var_decl 0x11052240 vectors_page>)) [0 vectors_page+0 S4 A32])
        (const_int 28 [0x1c])))
Successfully matched this instruction:
(set (reg:SI 144)
    (plus:SI (reg/v:SI 134 [ length ])
        (const_int -65508 [0xffffffffffff001c])))
deferring deletion of insn with uid = 20.
modifying insn i3    21 r144:SI=r134:SI-0xffe4
deferring rescan insn with uid = 21.
Failed to match this instruction:
(parallel [
        (set (reg/f:SI 146 [ cpu_cache.coherent_kern_range ])
            (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>)
                        (const_int 16 [0x10]))) [0 cpu_cache.coherent_kern_range+0 S4 A32]))
        (set (reg/f:SI 142)
            (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>))
    ])
Failed to match this instruction:
(parallel [
        (set (reg/f:SI 146 [ cpu_cache.coherent_kern_range ])
            (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>)
                        (const_int 16 [0x10]))) [0 cpu_cache.coherent_kern_range+0 S4 A32]))
        (set (reg/f:SI 142)
            (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>))
    ])
Successfully matched this instruction:
(set (reg:SI 1 r1)
    (plus:SI (reg/v:SI 134 [ length ])
        (const_int -65508 [0xffffffffffff001c])))
deferring deletion of insn with uid = 21.
modifying insn i3    24 r1:SI=r134:SI-0xffe4
deferring rescan insn with uid = 24.
Successfully matched this instruction:
(parallel [
        (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 142)
                        (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32]) [0 S4 A32])
            (const_int 0 [0x0]))
        (use (const_int 0 [0x0]))
        (clobber (reg:SI 14 lr))
    ])
deferring deletion of insn with uid = 22.
modifying insn i3    25 call [[r142:SI+0x10]] argc:0x0
      REG_DEAD: r0:SI
      REG_DEAD: r1:SI
deferring rescan insn with uid = 25.
Failed to match this instruction:
(parallel [
        (call (mem:SI (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>)
                            (const_int 16 [0x10]))) [0 cpu_cache.coherent_kern_range+0 S4 A32]) [0 S4 A32])
            (const_int 0 [0x0]))
        (use (const_int 0 [0x0]))
        (clobber (reg:SI 14 lr))
        (set (reg/f:SI 142)
            (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>))
    ])
Failed to match this instruction:
(parallel [
        (call (mem:SI (mem/s/f/j/c:SI (const:SI (plus:SI (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>)
                            (const_int 16 [0x10]))) [0 cpu_cache.coherent_kern_range+0 S4 A32]) [0 S4 A32])
            (const_int 0 [0x0]))
        (use (const_int 0 [0x0]))
        (set (reg/f:SI 142)
            (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>))
    ])
Failed to match this instruction:
(set (reg:SI 149 [ cr_alignment ])
    (mem/c/i:SI (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>) [0 cr_alignment+0 S4 A32]))
Failed to match this instruction:
(set (reg:SI 148)
    (and:SI (mem/c/i:SI (reg/f:SI 147) [0 cr_alignment+0 S4 A32])
        (const_int 8192 [0x2000])))
Failed to match this instruction:
(set (reg:SI 148)
    (and:SI (mem/c/i:SI (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>) [0 cr_alignment+0 S4 A32])
        (const_int 8192 [0x2000])))
Successfully matched this instruction:
(set (reg:SI 149 [ cr_alignment ])
    (high:SI (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>)))
Failed to match this instruction:
(set (reg:SI 148)
    (and:SI (mem/c/i:SI (lo_sum:SI (reg:SI 149 [ cr_alignment ])
                (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>)) [0 cr_alignment+0 S4 A32])
        (const_int 8192 [0x2000])))
Successfully matched this instruction:
(set (reg:CC_NOOV 24 cc)
    (compare:CC_NOOV (zero_extract:SI (reg:SI 149 [ cr_alignment ])
            (const_int 1 [0x1])
            (const_int 13 [0xd]))
        (const_int 0 [0x0])))
Successfully matched this instruction:
(set (pc)
    (if_then_else (ne (reg:CC_NOOV 24 cc)
            (const_int 0 [0x0]))
        (label_ref:SI 43)
        (pc)))
deferring deletion of insn with uid = 28.
modifying other_insn    30 pc={(cc:CC_NOOV!=0x0)?L43:pc}
      REG_DEAD: cc:CC
      REG_BR_PROB: 0x17d6
deferring rescan insn with uid = 30.
modifying insn i3    29 cc:CC_NOOV=cmp(zero_extract(r149:SI,0x1,0xd),0x0)
      REG_DEAD: r149:SI
deferring rescan insn with uid = 29.
Failed to match this instruction:
(set (reg:CC_NOOV 24 cc)
    (compare:CC_NOOV (zero_extract:SI (mem/c/i:QI (plus:SI (reg/f:SI 147)
                    (const_int 1 [0x1])) [0 cr_alignment+1 S1 A8])
            (const_int 1 [0x1])
            (const_int 5 [0x5]))
        (const_int 0 [0x0])))
Failed to match this instruction:
(set (reg:CC_NOOV 24 cc)
    (compare:CC_NOOV (zero_extract:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>)
                        (const_int 1 [0x1]))) [0 cr_alignment+1 S1 A8])
            (const_int 1 [0x1])
            (const_int 5 [0x5]))
        (const_int 0 [0x0])))
Successfully matched this instruction:
(set (reg:SI 149 [ cr_alignment ])
    (high:SI (const:SI (plus:SI (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>)
                (const_int 1 [0x1])))))
Failed to match this instruction:
(set (reg:CC_NOOV 24 cc)
    (compare:CC_NOOV (zero_extract:SI (mem/c/i:QI (lo_sum:SI (reg:SI 149 [ cr_alignment ])
                    (const:SI (plus:SI (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>)
                            (const_int 1 [0x1])))) [0 cr_alignment+1 S1 A8])
            (const_int 1 [0x1])
            (const_int 5 [0x5]))
        (const_int 0 [0x0])))
Failed to match this instruction:
(set (pc)
    (if_then_else (ne (zero_extract:SI (reg:SI 149 [ cr_alignment ])
                (const_int 1 [0x1])
                (const_int 13 [0xd]))
            (const_int 0 [0x0]))
        (label_ref:SI 43)
        (pc)))
Failed to match this instruction:
(set (pc)
    (if_then_else (ne (zero_extract:SI (mem/c/i:QI (plus:SI (reg/f:SI 147)
                        (const_int 1 [0x1])) [0 cr_alignment+1 S1 A8])
                (const_int 1 [0x1])
                (const_int 5 [0x5]))
            (const_int 0 [0x0]))
        (label_ref:SI 43)
        (pc)))
Successfully matched this instruction:
(set (reg:SI 1 r1)
    (plus:SI (reg/v:SI 134 [ length ])
        (const_int 28 [0x1c])))
deferring deletion of insn with uid = 33.
modifying insn i3    36 r1:SI=r134:SI+0x1c
      REG_DEAD: r134:SI
deferring rescan insn with uid = 36.
Successfully matched this instruction:
(parallel [
        (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 142)
                        (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32]) [0 S4 A32])
            (const_int 0 [0x0]))
        (use (const_int 0 [0x0]))
        (clobber (reg:SI 14 lr))
    ])
deferring deletion of insn with uid = 34.
modifying insn i3    37 call [[r142:SI+0x10]] argc:0x0
      REG_DEAD: r142:SI
      REG_DEAD: r0:SI
      REG_DEAD: r1:SI
deferring rescan insn with uid = 37.


set_fiq_handler

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,4u} r1={7d,4u} r2={5d,1u} r3={4d} r11={1d,4u} r12={4d} r13={1d,7u} r14={4d,1u} r15={3d} r16={3d} r17={3d} r18={3d} r19={3d} r20={3d} r21={3d} r22={3d} r23={3d} r24={4d,1u} r25={1d,4u} r26={1d,3u} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r81={3d} r82={3d} r83={3d} r84={3d} r85={3d} r86={3d} r87={3d} r88={3d} r89={3d} r90={3d} r91={3d} r92={3d} r93={3d} r94={3d} r95={3d} r96={3d} r97={3d} r98={3d} r99={3d} r100={3d} r101={3d} r102={3d} r103={3d} r104={3d} r105={3d} r106={3d} r107={3d} r108={3d} r109={3d} r110={3d} r111={3d} r112={3d} r113={3d} r114={3d} r115={3d} r116={3d} r117={3d} r118={3d} r119={3d} r120={3d} r121={3d} r122={3d} r123={3d} r124={3d} r125={3d} r126={3d} r127={3d} r133={1d,1u} r134={1d,3u,1d} r135={1d,1u} r136={1d,1u} r137={1d,1u} r142={1d,2u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} 
;;    total ref usage 430{383d,46u,1e} in 19{16 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135 136 137 142 144 145 146 147 148 149
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 134 135 136 137 142 144 145 146 147 148 149
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/fiq.c:81 (set (reg/v/f:SI 133 [ start ])
        (reg:SI 0 r0 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ start ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/fiq.c:81 (set (reg/v:SI 134 [ length ])
        (reg:SI 1 r1 [ length ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ length ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/fiq.c:85 (set (reg/f:SI 135)
        (symbol_ref:SI ("vectors_page") [flags 0xc0] <var_decl 0x11052240 vectors_page>)) 167 {*arm_movsi_insn} (nil))

(insn 8 7 9 2 arch/arm/kernel/fiq.c:85 (set (reg/f:SI 137 [ vectors_page ])
        (mem/f/c/i:SI (reg/f:SI 135) [0 vectors_page+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 135)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("vectors_page") [flags 0xc0] <var_decl 0x11052240 vectors_page>) [0 vectors_page+0 S4 A32])
            (nil))))

(note 9 8 13 2 NOTE_INSN_DELETED)

(insn 13 9 14 2 arch/arm/kernel/fiq.c:85 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 137 [ vectors_page ])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 137 [ vectors_page ])
        (nil)))

(insn 14 13 15 2 arch/arm/kernel/fiq.c:85 (set (reg:SI 1 r1)
        (reg/v/f:SI 133 [ start ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ start ])
        (nil)))

(insn 15 14 16 2 arch/arm/kernel/fiq.c:85 (set (reg:SI 2 r2)
        (reg/v:SI 134 [ length ])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 18 2 arch/arm/kernel/fiq.c:85 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("memcpy") [flags 0x41] <function_decl 0x11066e80 memcpy>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (expr_list:REG_EH_REGION (const_int 0 [0x0])
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 18 16 20 2 arch/arm/kernel/fiq.c:87 (set (reg/f:SI 142)
        (symbol_ref:SI ("cpu_cache") [flags 0xc0] <var_decl 0x1102af00 cpu_cache>)) 167 {*arm_movsi_insn} (nil))

(note 20 18 21 2 NOTE_INSN_DELETED)

(note 21 20 22 2 NOTE_INSN_DELETED)

(note 22 21 23 2 NOTE_INSN_DELETED)

(insn 23 22 24 2 arch/arm/kernel/fiq.c:87 (set (reg:SI 0 r0)
        (const_int -65508 [0xffffffffffff001c])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -65508 [0xffffffffffff001c])
        (nil)))

(insn 24 23 25 2 arch/arm/kernel/fiq.c:87 (set (reg:SI 1 r1)
        (plus:SI (reg/v:SI 134 [ length ])
            (const_int -65508 [0xffffffffffff001c]))) 4 {*arm_addsi3} (nil))

(call_insn 25 24 26 2 arch/arm/kernel/fiq.c:87 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 142)
                            (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 25 27 2 arch/arm/kernel/fiq.c:88 (set (reg/f:SI 147)
        (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>)) 167 {*arm_movsi_insn} (nil))

(insn 27 26 28 2 arch/arm/kernel/fiq.c:88 (set (reg:SI 149 [ cr_alignment ])
        (mem/c/i:SI (reg/f:SI 147) [0 cr_alignment+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (mem/c/i:SI (symbol_ref:SI ("cr_alignment") [flags 0xc0] <var_decl 0x512cff60 cr_alignment>) [0 cr_alignment+0 S4 A32])
            (nil))))

(note 28 27 29 2 NOTE_INSN_DELETED)

(insn 29 28 30 2 arch/arm/kernel/fiq.c:88 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 149 [ cr_alignment ])
                (const_int 1 [0x1])
                (const_int 13 [0xd]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (expr_list:REG_DEAD (reg:SI 149 [ cr_alignment ])
        (nil)))

(jump_insn 30 29 31 2 arch/arm/kernel/fiq.c:88 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 43)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 142
;; live  gen 	 0 [r0] 1 [r1] 151 152
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 31 30 33 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 33 31 34 3 NOTE_INSN_DELETED)

(note 34 33 35 3 NOTE_INSN_DELETED)

(insn 35 34 36 3 arch/arm/kernel/fiq.c:89 (set (reg:SI 0 r0)
        (const_int 28 [0x1c])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 3 arch/arm/kernel/fiq.c:89 (set (reg:SI 1 r1)
        (plus:SI (reg/v:SI 134 [ length ])
            (const_int 28 [0x1c]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 134 [ length ])
        (nil)))

(call_insn 37 36 43 3 arch/arm/kernel/fiq.c:89 (parallel [
            (call (mem:SI (mem/s/f/j/c:SI (plus:SI (reg/f:SI 142)
                            (const_int 16 [0x10])) [0 cpu_cache.coherent_kern_range+0 S4 A32]) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 246 {*call_mem} (expr_list:REG_DEAD (reg/f:SI 142)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
;; Pred edge  2 [61.0%] 
(code_label 43 37 46 4 26 "" [1 uses])

(note 46 43 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 4 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 9.
deleting insn with uid = 20.
deleting insn with uid = 21.
deleting insn with uid = 22.
deleting insn with uid = 28.
deleting insn with uid = 33.
deleting insn with uid = 34.
rescanning insn with uid = 13.
deleting insn with uid = 13.
rescanning insn with uid = 24.
deleting insn with uid = 24.
rescanning insn with uid = 25.
deleting insn with uid = 25.
rescanning insn with uid = 29.
deleting insn with uid = 29.
verify found no changes in insn with uid = 30.
rescanning insn with uid = 36.
deleting insn with uid = 36.
rescanning insn with uid = 37.
deleting insn with uid = 37.
ending the processing of deferred insns

;; Function fiq_def_op (fiq_def_op)[0:918]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 3: 4
insn_cost 7: 4
insn_cost 8: 0
insn_cost 11: 8
insn_cost 12: 4
insn_cost 13: 0
insn_cost 20: 4
insn_cost 26: 0
Successfully matched this instruction:
(set (reg:CC 24 cc)
    (compare:CC (reg:SI 1 r1 [ relinquish ])
        (const_int 0 [0x0])))
deferring deletion of insn with uid = 3.
modifying insn i3     7 cc:CC=cmp(r1:SI,0x0)
      REG_DEAD: r1:SI
deferring rescan insn with uid = 7.
Failed to match this instruction:
(set (pc)
    (if_then_else (ne (reg:SI 1 r1 [ relinquish ])
            (const_int 0 [0x0]))
        (label_ref 14)
        (pc)))
Failed to match this instruction:
(parallel [
        (use (const_int 0 [0x0]))
        (set (reg/i:SI 0 r0)
            (const_int 0 [0x0]))
    ])
Failed to match this instruction:
(parallel [
        (use (const_int 0 [0x0]))
        (set (reg/i:SI 0 r0)
            (const_int 0 [0x0]))
    ])
Failed to match this instruction:
(parallel [
        (use (const_int 0 [0x0]))
        (set (reg/i:SI 0 r0)
            (const_int 0 [0x0]))
    ])
Failed to match this instruction:
(parallel [
        (use (const_int 0 [0x0]))
        (set (reg/i:SI 0 r0)
            (const_int 0 [0x0]))
    ])


fiq_def_op

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={2d} r3={2d} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} 
;;    total ref usage 156{132d,24u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135
;; live  in  	 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/fiq.c:58 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ relinquish ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ relinquish ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/fiq.c:58 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 arch/arm/kernel/fiq.c:59 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 12 11 13 3 arch/arm/kernel/fiq.c:59 (set (reg:SI 1 r1)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 14 3 arch/arm/kernel/fiq.c:59 (parallel [
            (call (mem:SI (symbol_ref:SI ("set_fiq_handler") [flags 0x3] <function_decl 0x11048a00 set_fiq_handler>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 14 13 15 4 30 "" [1 uses])

(note 15 14 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 15 26 4 arch/arm/kernel/fiq.c:62 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 26 20 0 4 arch/arm/kernel/fiq.c:62 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 3.
rescanning insn with uid = 7.
deleting insn with uid = 7.
ending the processing of deferred insns

;; Function show_fiq_list (show_fiq_list)[0:919]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
insn_cost 3: 4
insn_cost 7: 8
insn_cost 39: 4
insn_cost 8: 4
insn_cost 11: 4
insn_cost 12: 0
insn_cost 16: 4
insn_cost 17: 4
insn_cost 19: 8
insn_cost 20: 4
insn_cost 21: 8
insn_cost 22: 0
insn_cost 29: 4
insn_cost 35: 0
Successfully matched this instruction:
(set (reg/f:SI 139)
    (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]))
deferring deletion of insn with uid = 7.
modifying insn i3    39 r139:SI=`*.LANCHOR0'
deferring rescan insn with uid = 39.
Failed to match this instruction:
(set (pc)
    (if_then_else (eq (reg/f:SI 133 [ current_fiq.238 ])
            (reg/f:SI 139))
        (label_ref 23)
        (pc)))
Failed to match this instruction:
(set (pc)
    (if_then_else (eq (reg/f:SI 133 [ current_fiq.238 ])
            (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))))
        (label_ref 23)
        (pc)))
Failed to match this instruction:
(set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
    (mem/s/f/j:SI (plus:SI (reg/f:SI 133 [ current_fiq.238 ])
            (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32]))
Failed to match this instruction:
(parallel [
        (use (const_int 0 [0x0]))
        (set (reg/i:SI 0 r0)
            (const_int 0 [0x0]))
    ])
Failed to match this instruction:
(parallel [
        (use (const_int 0 [0x0]))
        (set (reg/i:SI 0 r0)
            (const_int 0 [0x0]))
    ])
Failed to match this instruction:
(parallel [
        (use (const_int 0 [0x0]))
        (set (reg/i:SI 0 r0)
            (const_int 0 [0x0]))
    ])
Failed to match this instruction:
(parallel [
        (use (const_int 0 [0x0]))
        (set (reg/i:SI 0 r0)
            (const_int 0 [0x0]))
    ])


show_fiq_list

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,2u} r2={3d,1u} r3={3d,1u} r11={1d,4u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u,1d} r136={1d,1u} r137={1d,1u} r139={2d,2u} r142={1d,1u} 
;;    total ref usage 172{138d,33u,1e} in 13{12 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 136 137 139
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 136 137 139
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/fiq.c:72 (set (reg/v:SI 136 [ prec ])
        (reg:SI 1 r1 [ prec ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ prec ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 4 39 2 NOTE_INSN_DELETED)

(insn 39 7 8 2 arch/arm/kernel/fiq.c:73 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 8 39 11 2 arch/arm/kernel/fiq.c:73 (set (reg/f:SI 133 [ current_fiq.238 ])
        (mem/f/c/i:SI (post_inc:SI (reg/f:SI 139)) [0 current_fiq+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg/f:SI 139)
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 current_fiq+0 S4 A32])
            (nil))))

(insn 11 8 12 2 arch/arm/kernel/fiq.c:73 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 133 [ current_fiq.238 ])
            (reg/f:SI 139))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (compare:CC (reg/f:SI 133 [ current_fiq.238 ])
                (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))))
            (nil))))

(jump_insn 12 11 13 2 arch/arm/kernel/fiq.c:73 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2165 [0x875])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 136


;; Succ edge  3 [78.3%]  (fallthru)
;; Succ edge  4 [21.6%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 142
;; live  kill	 14 [lr]

;; Pred edge  2 [78.3%]  (fallthru)
(note 13 12 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 13 17 3 arch/arm/kernel/fiq.c:74 (set (reg/f:SI 142 [ <variable>.name ])
        (mem/s/f/j:SI (plus:SI (reg/f:SI 133 [ current_fiq.238 ])
                (const_int 4 [0x4])) [0 <variable>.name+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 133 [ current_fiq.238 ])
        (nil)))

(insn 17 16 19 3 arch/arm/kernel/fiq.c:74 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 142 [ <variable>.name ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 142 [ <variable>.name ])
        (nil)))

(insn 19 17 20 3 arch/arm/kernel/fiq.c:74 (set (reg:SI 1 r1)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11087180>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x11087180>)
        (nil)))

(insn 20 19 21 3 arch/arm/kernel/fiq.c:74 (set (reg:SI 2 r2)
        (reg/v:SI 136 [ prec ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ prec ])
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/fiq.c:74 (set (reg:SI 3 r3)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11083c00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x11083c00>)
        (nil)))

(call_insn 22 21 23 3 arch/arm/kernel/fiq.c:74 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("seq_printf") [flags 0x41] <function_decl 0x10eb2200 seq_printf>) [0 S4 A32])
                    (const_int 8 [0x8])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [21.6%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 23 22 24 4 35 "" [1 uses])

(note 24 23 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 29 24 35 4 arch/arm/kernel/fiq.c:78 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 35 29 0 4 arch/arm/kernel/fiq.c:78 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
deleting insn with uid = 7.
rescanning insn with uid = 39.
deleting insn with uid = 39.
ending the processing of deferred insns

;; Combiner totals: 127 attempts, 64 substitutions (25 requiring new space),
;; 12 successes.
