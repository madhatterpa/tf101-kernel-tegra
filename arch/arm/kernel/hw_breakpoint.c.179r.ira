
;; Function arch_get_debug_arch (arch_get_debug_arch)[0:1244]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 19(l0): point = 0
   Insn 13(l0): point = 2
   Insn 5(l0): point = 4
 a0(r135): [3..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r135): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135
    modified regnos: 135
    border:
    Pressure: GENERAL_REGS=2
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
Disposition:
    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 135
insn=13, live_throughout: 13, 14, dead_or_set: 0, 135
insn=19, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 5 (nil))
changing reg in insn 5
changing reg in insn 13


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


arch_get_debug_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={2d,1u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 15{9d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 7 2 NOTE_INSN_DELETED)

(note 7 6 8 2 NOTE_INSN_DELETED)

(note 8 7 5 2 NOTE_INSN_DELETED)

(insn 5 8 13 2 arch/arm/kernel/hw_breakpoint.c:152 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 13 5 19 2 arch/arm/kernel/hw_breakpoint.c:152 (set (reg/i:SI 0 r0)
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 3 r3 [135]) [0 debug_arch+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 19 13 23 2 arch/arm/kernel/hw_breakpoint.c:152 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 24 NOTE_INSN_DELETED)

(note 24 23 0 NOTE_INSN_DELETED)


;; Function arch_get_max_wp_len (arch_get_max_wp_len)[0:1254]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 19(l0): point = 0
   Insn 13(l0): point = 2
   Insn 5(l0): point = 4
 a0(r135): [3..4]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r135): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=3, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r135
    modified regnos: 135
    border:
    Pressure: GENERAL_REGS=2
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 3
Disposition:
    0:r135 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 135
insn=13, live_throughout: 13, 14, dead_or_set: 0, 135
insn=19, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 135: (insn_list:REG_DEP_TRUE 5 (nil))
changing reg in insn 5
changing reg in insn 13


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


arch_get_max_wp_len

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={2d,1u} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 15{9d,6u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 7 2 NOTE_INSN_DELETED)

(note 7 6 8 2 NOTE_INSN_DELETED)

(note 8 7 5 2 NOTE_INSN_DELETED)

(insn 5 8 13 2 arch/arm/kernel/hw_breakpoint.c:323 (set (reg/f:SI 3 r3 [135])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 13 5 19 2 arch/arm/kernel/hw_breakpoint.c:323 (set (reg/i:SI 0 r0)
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [135])
                    (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 19 13 23 2 arch/arm/kernel/hw_breakpoint.c:323 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 23 19 24 NOTE_INSN_DELETED)

(note 24 23 0 NOTE_INSN_DELETED)


;; Function arch_check_bp_in_kernelspace (arch_check_bp_in_kernelspace)[0:1258]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a4(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a7(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a4(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a7(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 78(l0): point = 0
   Insn 72(l0): point = 2
   Insn 64(l0): point = 5
   Insn 61(l0): point = 7
   Insn 60(l0): point = 9
   Insn 121(l0): point = 12
   Insn 55(l0): point = 14
   Insn 53(l0): point = 17
   Insn 52(l0): point = 19
   Insn 51(l0): point = 21
   Insn 48(l0): point = 24
   Insn 119(l0): point = 27
   Insn 43(l0): point = 29
   Insn 117(l0): point = 32
   Insn 38(l0): point = 34
   Insn 115(l0): point = 37
   Insn 33(l0): point = 39
   Insn 113(l0): point = 42
   Insn 28(l0): point = 44
   Insn 111(l0): point = 47
   Insn 23(l0): point = 50
   Insn 22(l0): point = 52
   Insn 21(l0): point = 55
   Insn 20(l0): point = 57
   Insn 108(l0): point = 60
   Insn 16(l0): point = 63
   Insn 15(l0): point = 65
   Insn 14(l0): point = 68
   Insn 12(l0): point = 71
   Insn 11(l0): point = 73
   Insn 10(l0): point = 75
   Insn 6(l0): point = 77
   Insn 7(l0): point = 79
   Insn 2(l0): point = 81
 a0(r135): [12..14] [3..5]
 a1(r142): [17..21] [6..11]
 a2(r144): [6..7]
 a3(r133): [42..44] [37..39] [32..34] [27..29] [17..24] [8..11]
 a4(r143): [8..9]
 a5(r134): [17..77] [10..11]
 a6(r141): [53..75] [45..46]
 a7(r139): [76..79]
 a8(r137): [78..81]
Compressing live ranges: from 84 to 30 - 35%
Ranges after the compression:
 a0(r135): [8..9] [0..1]
 a1(r142): [10..11] [2..7]
 a2(r144): [2..3]
 a3(r133): [19..20] [17..18] [15..16] [13..14] [10..12] [4..7]
 a4(r143): [4..5]
 a5(r134): [10..26] [6..7]
 a6(r141): [23..24] [21..22]
 a7(r139): [25..28]
 a8(r137): [27..29]
+++Allocating 72 bytes for conflict table (uncompressed size 72)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r142,l0) conflicts: a2(r144,l0) a4(r143,l0) a3(r133,l0) a5(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r144,l0) conflicts: a1(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r133,l0) conflicts: a1(r142,l0) a4(r143,l0) a5(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r143,l0) conflicts: a1(r142,l0) a3(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r134,l0) conflicts: a1(r142,l0) a3(r133,l0) a6(r141,l0) a7(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r141,l0) conflicts: a5(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r139,l0) conflicts: a5(r134,l0) a8(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r137,l0) conflicts: a7(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a4(r143)<->a5(r134)@125:shuffle
  cp1:a2(r144)<->a4(r143)@125:shuffle
  cp2:a2(r144)<->a3(r133)@125:shuffle
  cp3:a0(r135)<->a2(r144)@125:shuffle
  cp4:a0(r135)<->a1(r142)@125:shuffle
  cp5:a3(r133)<->a6(r141)@1000:move
  cp6:a6(r141)<->a7(r139)@125:shuffle
  regions=1, blocks=18, points=30
    allocnos=9, copies=7, conflicts=3, ranges=18

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r135 1r142 2r144 3r133 4r143 5r134 6r141 7r139 8r137
    modified regnos: 133 134 135 137 139 141 142 143 144
    border:
    Pressure: GENERAL_REGS=4
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a7(r139,l0)
      Pushing a4(r143,l0)
      Pushing a2(r144,l0)
      Pushing a8(r137,l0)
      Pushing a5(r134,l0)
      Pushing a1(r142,l0)
      Pushing a0(r135,l0)
      Pushing a6(r141,l0)
      Pushing a3(r133,l0)
      Popping a3(r133,l0)  -- assign reg 3
      Popping a6(r141,l0)  -- assign reg 3
      Popping a0(r135,l0)  -- assign reg 0
      Popping a1(r142,l0)  -- assign reg 2
      Popping a5(r134,l0)  -- assign reg 0
      Popping a8(r137,l0)  -- assign reg 0
      Popping a2(r144,l0)  -- assign reg 0
      Popping a4(r143,l0)  -- assign reg 0
      Popping a7(r139,l0)  -- assign reg 3
Disposition:
    3:r133 l0     3    5:r134 l0     0    0:r135 l0     0    8:r137 l0     0
    7:r139 l0     3    6:r141 l0     3    1:r142 l0     2    4:r143 l0     0
    2:r144 l0     0
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 137
insn=7, live_throughout: 13, 14, 137, dead_or_set: 139
insn=6, live_throughout: 13, 14, 139, dead_or_set: 134, 137
insn=10, live_throughout: 13, 14, 134, dead_or_set: 139, 141
insn=11, live_throughout: 13, 14, 134, 141, dead_or_set: 
insn=12, live_throughout: 13, 14, 24, 134, 141, dead_or_set: 
insn=14, live_throughout: 13, 14, 134, 141, dead_or_set: 
insn=15, live_throughout: 13, 14, 134, 141, dead_or_set: 
insn=16, live_throughout: 13, 14, 134, 141, dead_or_set: 
insn=108, live_throughout: 13, 14, 134, 141, dead_or_set: 
insn=19, live_throughout: 13, 14, 134, 141, dead_or_set: 
insn=20, live_throughout: 13, 14, 134, 141, dead_or_set: 
insn=21, live_throughout: 13, 14, 134, 141, dead_or_set: 
insn=22, live_throughout: 13, 14, 134, dead_or_set: 141
insn=23, live_throughout: 13, 14, 134, dead_or_set: 
insn=111, live_throughout: 13, 14, 134, dead_or_set: 
insn=26, live_throughout: 13, 14, 134, 141, dead_or_set: 
insn=28, live_throughout: 13, 14, 134, dead_or_set: 133, 141
insn=113, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=31, live_throughout: 13, 14, 134, dead_or_set: 
insn=33, live_throughout: 13, 14, 134, dead_or_set: 133
insn=115, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=36, live_throughout: 13, 14, 134, dead_or_set: 
insn=38, live_throughout: 13, 14, 134, dead_or_set: 133
insn=117, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=41, live_throughout: 13, 14, 134, dead_or_set: 
insn=43, live_throughout: 13, 14, 134, dead_or_set: 133
insn=119, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=46, live_throughout: 13, 14, 134, dead_or_set: 
insn=48, live_throughout: 13, 14, 134, dead_or_set: 133
insn=49, live_throughout: 13, 14, 133, 134, dead_or_set: 
insn=51, live_throughout: 13, 14, 133, 134, dead_or_set: 142
insn=52, live_throughout: 13, 14, 133, 134, 142, dead_or_set: 
insn=53, live_throughout: 13, 14, 133, 134, 142, dead_or_set: 
insn=55, live_throughout: 13, 14, dead_or_set: 135
insn=121, live_throughout: 13, 14, 135, dead_or_set: 
insn=58, live_throughout: 13, 14, 133, 134, 142, dead_or_set: 
insn=60, live_throughout: 13, 14, 133, 142, dead_or_set: 134, 143
insn=61, live_throughout: 13, 14, 142, dead_or_set: 133, 143, 144
insn=64, live_throughout: 13, 14, dead_or_set: 135, 142, 144
insn=66, live_throughout: 13, 14, 135, dead_or_set: 
insn=72, live_throughout: 13, 14, dead_or_set: 0, 135
insn=78, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 142: (insn_list:REG_DEP_TRUE 51 (nil))
changing reg in insn 28
changing reg in insn 48
changing reg in insn 43
changing reg in insn 38
changing reg in insn 33
changing reg in insn 61
changing reg in insn 6
changing reg in insn 60
changing reg in insn 52
changing reg in insn 52
changing reg in insn 64
changing reg in insn 55
changing reg in insn 72
changing reg in insn 2
changing reg in insn 7
changing reg in insn 6
changing reg in insn 7
changing reg in insn 10
changing reg in insn 10
changing reg in insn 28
changing reg in insn 22
changing reg in insn 20
changing reg in insn 15
changing reg in insn 11
changing reg in insn 51
changing reg in insn 64
changing reg in insn 52
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 64
deleting insn with uid = 2.
deleting insn with uid = 28.
deleting insn with uid = 72.


try_optimize_cfg iteration 1

Forwarding edge 4->5 to 14 failed.
Redirecting jump 108 from 9 to 14.
Forwarding edge 7->8 to 13 failed.
Deleting block 9.
deleting insn with uid = 26.
deleting insn with uid = 27.
deleting insn with uid = 113.
deleting insn with uid = 114.
deleting block 9


try_optimize_cfg iteration 2

Forwarding edge 4->5 to 14 failed.
Simplifying condjump 23 around jump 111
deleting insn with uid = 110.
deleting insn with uid = 111.
deleting insn with uid = 112.
deleting block 8


try_optimize_cfg iteration 3

Forwarding edge 4->5 to 14 failed.


try_optimize_cfg iteration 1

Forwarding edge 4->5 to 14 failed.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 21 count 30 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 21 count 30 (  1.9)


arch_check_bp_in_kernelspace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={6d,8u,1d} r1={1d} r2={2d,2u} r3={7d,6u} r12={1d} r13={1d,15u} r14={1d,1u} r24={6d,6u} 
;;    total ref usage 64{25d,38u,1e} in 29{29 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 3 7 2 NOTE_INSN_DELETED)

(insn 7 9 6 2 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:SI 3 r3 [139])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 0 r0 [orig:137 bp ] [137])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 6 7 10 2 arch/arm/kernel/hw_breakpoint.c:464 (set (reg/v:SI 0 r0 [orig:134 va ] [134])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:137 bp ] [137])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 10 6 11 2 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:SI 3 r3 [141])
        (zero_extract:SI (reg:SI 3 r3 [139])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))) 124 {extzv_t2} (nil))

(insn 11 10 12 2 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [141])
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 80 2 arch/arm/kernel/hw_breakpoint.c:437 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 2 -> ( 11 3)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  11 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [71.0%]  (fallthru)
(note 80 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 14 80 81 3 arch/arm/kernel/hw_breakpoint.c:437 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 81 14 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 81 16 4 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [141])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 107 4 arch/arm/kernel/hw_breakpoint.c:437 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [29.0%]  (fallthru)
;; Succ edge  10 [71.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [29.0%]  (fallthru)
(note 107 16 108 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 108 107 109 5 (set (pc)
        (label_ref:SI 49)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 14)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  14 [100.0%] 

(barrier 109 108 19)

;; Start of basic block ( 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
(code_label 19 109 83 6 15 "" [1 uses])

(note 83 19 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 20 83 21 6 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [141])
            (const_int 15 [0xf]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 84 6 arch/arm/kernel/hw_breakpoint.c:437 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 6 -> ( 12 7)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  12 [29.0%] 
;; Succ edge  7 [71.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [71.0%]  (fallthru)
(note 84 21 22 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 22 84 23 7 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [141])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 23 22 31 7 arch/arm/kernel/hw_breakpoint.c:437 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 46)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 7 -> ( 13 10)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  13 [29.0%] 
;; Succ edge  10 [71.0%]  (fallthru)

;; Start of basic block ( 4 7) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  4 [71.0%] 
;; Pred edge  7 [71.0%]  (fallthru)
(code_label 31 23 32 10 10 "" [1 uses])

(note 32 31 33 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 115 10 arch/arm/kernel/hw_breakpoint.c:435 (set (reg/v:SI 3 r3 [orig:133 len_in_bytes ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 115 33 116 10 (set (pc)
        (label_ref 49)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 14)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  14 [100.0%] 

(barrier 116 115 36)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [29.0%] 
(code_label 36 116 37 11 12 "" [1 uses])

(note 37 36 38 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 117 11 arch/arm/kernel/hw_breakpoint.c:442 (set (reg/v:SI 3 r3 [orig:133 len_in_bytes ] [133])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(jump_insn 117 38 118 11 (set (pc)
        (label_ref 49)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 14)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  14 [100.0%] 

(barrier 118 117 41)

;; Start of basic block ( 6) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  6 [29.0%] 
(code_label 41 118 42 12 13 "" [1 uses])

(note 42 41 43 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 119 12 arch/arm/kernel/hw_breakpoint.c:445 (set (reg/v:SI 3 r3 [orig:133 len_in_bytes ] [133])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(jump_insn 119 43 120 12 (set (pc)
        (label_ref 49)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  14 [100.0%] 

(barrier 120 119 46)

;; Start of basic block ( 7) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  7 [29.0%] 
(code_label 46 120 47 13 14 "" [1 uses])

(note 47 46 48 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 13 arch/arm/kernel/hw_breakpoint.c:448 (set (reg/v:SI 3 r3 [orig:133 len_in_bytes ] [133])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 5 13 10 11 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 24 [cc]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%] 
(code_label 49 48 50 14 16 "" [4 uses])

(note 50 49 51 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 14 arch/arm/kernel/hw_breakpoint.c:467 (set (reg:SI 2 r2 [142])
        (const_int -1090519041 [0xffffffffbeffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -1090519041 [0xffffffffbeffffff])
        (nil)))

(insn 52 51 53 14 arch/arm/kernel/hw_breakpoint.c:467 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:134 va ] [134])
            (reg:SI 2 r2 [142]))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 0 r0 [orig:134 va ] [134])
            (const_int -1090519041 [0xffffffffbeffffff]))
        (nil)))

(jump_insn 53 52 54 14 arch/arm/kernel/hw_breakpoint.c:467 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  16 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  14 [50.0%]  (fallthru)
(note 54 53 55 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 121 15 arch/arm/kernel/hw_breakpoint.c:467 discrim 2 (set (reg:SI 0 r0 [orig:135 D.23890 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 121 55 122 15 (set (pc)
        (label_ref 66)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  17 [100.0%] 

(barrier 122 121 58)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 0 [r0] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	 24 [cc]

;; Pred edge  14 [50.0%] 
(code_label 58 122 59 16 17 "" [1 uses])

(note 59 58 63 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 63 59 60 16 NOTE_INSN_DELETED)

(insn 60 63 61 16 arch/arm/kernel/hw_breakpoint.c:467 discrim 3 (set (reg:SI 0 r0 [143])
        (plus:SI (reg/v:SI 0 r0 [orig:134 va ] [134])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 61 60 64 16 arch/arm/kernel/hw_breakpoint.c:467 discrim 3 (set (reg:SI 0 r0 [144])
        (plus:SI (reg:SI 0 r0 [143])
            (reg/v:SI 3 r3 [orig:133 len_in_bytes ] [133]))) 4 {*arm_addsi3} (nil))

(insn 64 61 66 16 arch/arm/kernel/hw_breakpoint.c:467 discrim 3 (parallel [
            (set (reg:SI 0 r0 [orig:135 D.23890 ] [135])
                (gtu:SI (reg:SI 0 r0 [144])
                    (reg:SI 2 r2 [142])))
            (clobber (reg:CC 24 cc))
        ]) 278 {*compare_scc} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%] 
(code_label 66 64 67 17 18 "" [1 uses])

(note 67 66 78 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 78 67 123 17 arch/arm/kernel/hw_breakpoint.c:468 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 17 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 123 78 124 NOTE_INSN_DELETED)

(note 124 123 0 NOTE_INSN_DELETED)


;; Function arch_bp_generic_fields (arch_bp_generic_fields)[0:1259]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a7(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a8(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r149: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a2(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a6(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a7(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a8(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 102(l0): point = 0
   Insn 96(l0): point = 2
   Insn 88(l0): point = 5
   Insn 87(l0): point = 7
   Insn 89(l0): point = 9
   Insn 130(l0): point = 12
   Insn 82(l0): point = 14
   Insn 81(l0): point = 16
   Insn 80(l0): point = 18
   Insn 128(l0): point = 21
   Insn 75(l0): point = 23
   Insn 74(l0): point = 25
   Insn 73(l0): point = 27
   Insn 126(l0): point = 30
   Insn 68(l0): point = 32
   Insn 67(l0): point = 34
   Insn 124(l0): point = 37
   Insn 61(l0): point = 39
   Insn 56(l0): point = 42
   Insn 55(l0): point = 44
   Insn 54(l0): point = 47
   Insn 53(l0): point = 49
   Insn 122(l0): point = 52
   Insn 49(l0): point = 55
   Insn 48(l0): point = 57
   Insn 47(l0): point = 60
   Insn 45(l0): point = 63
   Insn 44(l0): point = 65
   Insn 41(l0): point = 68
   Insn 119(l0): point = 71
   Insn 35(l0): point = 73
   Insn 117(l0): point = 76
   Insn 29(l0): point = 78
   Insn 115(l0): point = 81
   Insn 23(l0): point = 83
   Insn 22(l0): point = 85
   Insn 17(l0): point = 88
   Insn 16(l0): point = 90
   Insn 15(l0): point = 93
   Insn 14(l0): point = 95
   Insn 13(l0): point = 98
   Insn 9(l0): point = 100
   Insn 12(l0): point = 102
   Insn 4(l0): point = 104
   Insn 11(l0): point = 106
   Insn 3(l0): point = 108
   Insn 2(l0): point = 110
 a0(r134): [37..39] [30..32] [21..23] [12..14] [3..9]
 a1(r137): [42..108] [35..36] [26..29] [17..20] [6..11]
 a2(r149): [6..7]
 a3(r148): [17..18]
 a4(r147): [26..27]
 a5(r133): [45..100] [35..36]
 a6(r138): [84..104] [79..80] [74..75] [69..70]
 a7(r141): [88..106] [79..80] [74..75] [69..70]
 a8(r142): [84..85]
 a9(r136): [101..110]
Compressing live ranges: from 113 to 38 - 33%
Ranges after the compression:
 a0(r134): [19..20] [15..16] [10..11] [5..6] [0..3]
 a1(r137): [21..36] [17..18] [12..14] [7..9] [1..4]
 a2(r149): [1..2]
 a3(r148): [7..8]
 a4(r147): [12..13]
 a5(r133): [22..32] [17..18]
 a6(r138): [29..34] [27..28] [25..26] [23..24]
 a7(r141): [31..35] [27..28] [25..26] [23..24]
 a8(r142): [29..30]
 a9(r136): [33..37]
+++Allocating 80 bytes for conflict table (uncompressed size 80)
;; a0(r134,l0) conflicts: a2(r149,l0) a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a0(r134,l0) a2(r149,l0) a3(r148,l0) a4(r147,l0) a5(r133,l0) a6(r138,l0) a7(r141,l0) a8(r142,l0) a9(r136,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14
;; a2(r149,l0) conflicts: a0(r134,l0) a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r148,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r147,l0) conflicts: a1(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r133,l0) conflicts: a1(r137,l0) a6(r138,l0) a7(r141,l0) a8(r142,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r138,l0) conflicts: a1(r137,l0) a5(r133,l0) a7(r141,l0) a8(r142,l0) a9(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r141,l0) conflicts: a1(r137,l0) a5(r133,l0) a6(r138,l0) a9(r136,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14
;; a8(r142,l0) conflicts: a1(r137,l0) a5(r133,l0) a6(r138,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r136,l0) conflicts: a1(r137,l0) a6(r138,l0) a7(r141,l0)
;;     total conflict hard regs: 1 2 14
;;     conflict hard regs: 1 2 14

  cp0:a5(r133)<->a9(r136)@125:shuffle
  regions=1, blocks=21, points=38
    allocnos=10, copies=1, conflicts=2, ranges=25

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r134 1r137 2r149 3r148 4r147 5r133 6r138 7r141 8r142 9r136
    modified regnos: 133 134 136 137 138 141 142 147 148 149
    border:
    Pressure: GENERAL_REGS=5
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
    Reg 149 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 2 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 3 regs less
      Pushing a8(r142,l0)
      Pushing a4(r147,l0)
      Pushing a3(r148,l0)
      Pushing a2(r149,l0)
      Pushing a6(r138,l0)
      Pushing a5(r133,l0)
      Pushing a0(r134,l0)
      Pushing a1(r137,l0)
      Pushing a7(r141,l0)
      Pushing a9(r136,l0)
      Popping a9(r136,l0)  -- assign reg 0
      Popping a7(r141,l0)  -- assign reg 3
      Popping a1(r137,l0)  -- assign reg 1
      Popping a0(r134,l0)  -- assign reg 0
      Popping a5(r133,l0)  -- assign reg 0
      Popping a6(r138,l0)  -- assign reg 2
      Popping a2(r149,l0)  -- assign reg 3
      Popping a3(r148,l0)  -- assign reg 3
      Popping a4(r147,l0)  -- assign reg 3
      Popping a8(r142,l0)  -- assign reg 3
Disposition:
    5:r133 l0     0    0:r134 l0     0    9:r136 l0     0    1:r137 l0     1
    6:r138 l0     2    7:r141 l0     3    8:r142 l0     3    4:r147 l0     3
    3:r148 l0     3    2:r149 l0     3
New iteration of spill/restore move
+++Costs: overall -16000, reg -16000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 2, 13, 14, dead_or_set: 0, 136
insn=3, live_throughout: 2, 13, 14, 136, dead_or_set: 1, 137
insn=11, live_throughout: 2, 13, 14, 136, 137, dead_or_set: 141
insn=4, live_throughout: 13, 14, 136, 137, 141, dead_or_set: 2, 138
insn=12, live_throughout: 13, 14, 136, 137, 138, 141, dead_or_set: 
insn=9, live_throughout: 13, 14, 24, 137, 138, 141, dead_or_set: 133, 136
insn=13, live_throughout: 13, 14, 133, 137, 138, 141, dead_or_set: 
insn=14, live_throughout: 13, 14, 133, 137, 138, 141, dead_or_set: 
insn=15, live_throughout: 13, 14, 133, 137, 138, 141, dead_or_set: 
insn=16, live_throughout: 13, 14, 133, 137, 138, 141, dead_or_set: 
insn=17, live_throughout: 13, 14, 133, 137, 138, 141, dead_or_set: 
insn=22, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 142
insn=23, live_throughout: 13, 14, 133, 137, dead_or_set: 138, 142
insn=115, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=26, live_throughout: 13, 14, 133, 137, 138, 141, dead_or_set: 
insn=29, live_throughout: 13, 14, 133, 137, dead_or_set: 138, 141
insn=117, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=32, live_throughout: 13, 14, 133, 137, 138, 141, dead_or_set: 
insn=35, live_throughout: 13, 14, 133, 137, dead_or_set: 138, 141
insn=119, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=38, live_throughout: 13, 14, 133, 137, 138, 141, dead_or_set: 
insn=41, live_throughout: 13, 14, 133, 137, dead_or_set: 138, 141
insn=42, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=44, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=45, live_throughout: 13, 14, 24, 133, 137, dead_or_set: 
insn=47, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=48, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=49, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=122, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=52, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=53, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=54, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=55, live_throughout: 13, 14, 137, dead_or_set: 133
insn=56, live_throughout: 13, 14, 137, dead_or_set: 
insn=59, live_throughout: 13, 14, dead_or_set: 
insn=61, live_throughout: 13, 14, dead_or_set: 134
insn=124, live_throughout: 13, 14, 134, dead_or_set: 
insn=64, live_throughout: 13, 14, 133, 137, dead_or_set: 
insn=67, live_throughout: 13, 14, dead_or_set: 133, 137
insn=68, live_throughout: 13, 14, dead_or_set: 134
insn=126, live_throughout: 13, 14, 134, dead_or_set: 
insn=71, live_throughout: 13, 14, 137, dead_or_set: 
insn=73, live_throughout: 13, 14, 137, dead_or_set: 147
insn=74, live_throughout: 13, 14, dead_or_set: 137, 147
insn=75, live_throughout: 13, 14, dead_or_set: 134
insn=128, live_throughout: 13, 14, 134, dead_or_set: 
insn=78, live_throughout: 13, 14, 137, dead_or_set: 
insn=80, live_throughout: 13, 14, 137, dead_or_set: 148
insn=81, live_throughout: 13, 14, dead_or_set: 137, 148
insn=82, live_throughout: 13, 14, dead_or_set: 134
insn=130, live_throughout: 13, 14, 134, dead_or_set: 
insn=85, live_throughout: 13, 14, 137, dead_or_set: 
insn=89, live_throughout: 13, 14, 137, dead_or_set: 134
insn=87, live_throughout: 13, 14, 134, 137, dead_or_set: 149
insn=88, live_throughout: 13, 14, 134, dead_or_set: 137, 149
insn=90, live_throughout: 13, 14, 134, dead_or_set: 
insn=96, live_throughout: 13, 14, dead_or_set: 0, 134
insn=102, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 142: (insn_list:REG_DEP_TRUE 22 (nil))
init_insns for 147: (insn_list:REG_DEP_TRUE 73 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 80 (nil))
init_insns for 149: (insn_list:REG_DEP_TRUE 87 (nil))
changing reg in insn 9
changing reg in insn 67
changing reg in insn 55
changing reg in insn 53
changing reg in insn 48
changing reg in insn 44
changing reg in insn 89
changing reg in insn 82
changing reg in insn 75
changing reg in insn 68
changing reg in insn 61
changing reg in insn 96
changing reg in insn 2
changing reg in insn 11
changing reg in insn 9
changing reg in insn 3
changing reg in insn 67
changing reg in insn 88
changing reg in insn 81
changing reg in insn 74
changing reg in insn 4
changing reg in insn 41
changing reg in insn 35
changing reg in insn 29
changing reg in insn 23
changing reg in insn 11
changing reg in insn 41
changing reg in insn 35
changing reg in insn 29
changing reg in insn 16
changing reg in insn 14
changing reg in insn 12
changing reg in insn 22
changing reg in insn 23
changing reg in insn 73
changing reg in insn 74
changing reg in insn 80
changing reg in insn 81
changing reg in insn 87
changing reg in insn 88
Spilling for insn 23.
Spilling for insn 29.
Spilling for insn 35.
Spilling for insn 41.
Spilling for insn 67.
Spilling for insn 74.
Spilling for insn 81.
Spilling for insn 88.

Reloads for insn # 23
Reload 0: reload_out (SI) = (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])

Reloads for insn # 29
Reload 0: reload_out (SI) = (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])

Reloads for insn # 35
Reload 0: reload_out (SI) = (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])

Reloads for insn # 41
Reload 0: reload_out (SI) = (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])

Reloads for insn # 67
Reload 0: reload_out (SI) = (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])

Reloads for insn # 74
Reload 0: reload_out (SI) = (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])

Reloads for insn # 81
Reload 0: reload_out (SI) = (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])

Reloads for insn # 88
Reload 0: reload_out (SI) = (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])
deleting insn with uid = 2.
deleting insn with uid = 3.
deleting insn with uid = 4.
deleting insn with uid = 96.


try_optimize_cfg iteration 1

Forwarding edge 11->12 to 16 failed.
starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)


arch_bp_generic_fields

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 24[cc]
;;  ref usage 	r0={7d,9u} r1={1d,4u} r2={1d,4u} r3={6d,10u} r12={1d} r13={1d,20u} r14={1d,1u} r24={7d,8u} 
;;    total ref usage 81{25d,56u,0e} in 43{43 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 10 2 NOTE_INSN_DELETED)

(note 10 8 11 2 NOTE_INSN_DELETED)

(insn 11 10 12 2 arch/arm/kernel/hw_breakpoint.c:479 (set (reg:SI 3 r3 [141])
        (zero_extract:SI (reg/v:SI 0 r0 [orig:136 ctrl ] [136])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))) 124 {extzv_t2} (nil))

(insn 12 11 9 2 arch/arm/kernel/hw_breakpoint.c:479 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [141])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(insn 9 12 13 2 arch/arm/kernel/hw_breakpoint.c:477 (set (reg:SI 0 r0 [orig:133 ctrl$len ] [133])
        (zero_extract:SI (reg/v:SI 0 r0 [orig:136 ctrl ] [136])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))) 124 {extzv_t2} (nil))

(jump_insn 13 9 104 2 arch/arm/kernel/hw_breakpoint.c:479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  7 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [71.0%]  (fallthru)
(note 104 13 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 104 15 3 arch/arm/kernel/hw_breakpoint.c:479 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [141])
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 105 3 arch/arm/kernel/hw_breakpoint.c:479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 3 -> ( 8 4)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  8 [29.0%] 
;; Succ edge  4 [71.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [71.0%]  (fallthru)
(note 105 15 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 105 17 4 arch/arm/kernel/hw_breakpoint.c:479 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [141])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 21 4 arch/arm/kernel/hw_breakpoint.c:479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  6 [29.0%] 
;; Succ edge  5 [71.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  4 [71.0%]  (fallthru)
(note 21 17 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 arch/arm/kernel/hw_breakpoint.c:481 (set (reg:SI 3 r3 [142])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))

(insn 23 22 115 5 arch/arm/kernel/hw_breakpoint.c:481 (set (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])
        (reg:SI 3 r3 [142])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(jump_insn 115 23 116 5 arch/arm/kernel/hw_breakpoint.c:482 (set (pc)
        (label_ref 42)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%] 

(barrier 116 115 26)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [29.0%] 
(code_label 26 116 27 6 23 "" [1 uses])

(note 27 26 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 27 117 6 arch/arm/kernel/hw_breakpoint.c:484 (set (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])
        (reg:SI 3 r3 [141])) 167 {*arm_movsi_insn} (nil))

(jump_insn 117 29 118 6 arch/arm/kernel/hw_breakpoint.c:485 (set (pc)
        (label_ref 42)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%] 

(barrier 118 117 32)

;; Start of basic block ( 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [29.0%] 
(code_label 32 118 33 7 24 "" [1 uses])

(note 33 32 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 119 7 arch/arm/kernel/hw_breakpoint.c:487 (set (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])
        (reg:SI 3 r3 [141])) 167 {*arm_movsi_insn} (nil))

(jump_insn 119 35 120 7 arch/arm/kernel/hw_breakpoint.c:488 (set (pc)
        (label_ref 42)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%] 

(barrier 120 119 38)

;; Start of basic block ( 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [29.0%] 
(code_label 38 120 39 8 25 "" [1 uses])

(note 39 38 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 41 39 42 8 arch/arm/kernel/hw_breakpoint.c:490 (set (mem:SI (reg/v/f:SI 2 r2 [orig:138 gen_type ] [138]) [0 S4 A32])
        (reg:SI 3 r3 [141])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 42 41 43 9 26 "" [3 uses])

(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 9 arch/arm/kernel/hw_breakpoint.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:133 ctrl$len ] [133])
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 45 44 107 9 arch/arm/kernel/hw_breakpoint.c:497 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 9 -> ( 17 10)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr] 24 [cc]


;; Succ edge  17 [29.0%] 
;; Succ edge  10 [71.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  9 [71.0%]  (fallthru)
(note 107 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 47 107 108 10 arch/arm/kernel/hw_breakpoint.c:497 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 10 -> ( 13 11)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  13 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%]  (fallthru)
(note 108 47 48 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 48 108 49 11 arch/arm/kernel/hw_breakpoint.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:133 ctrl$len ] [133])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 49 48 121 11 arch/arm/kernel/hw_breakpoint.c:497 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 11 -> ( 12 15)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  15 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  11 [29.0%]  (fallthru)
(note 121 49 122 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 122 121 123 12 (set (pc)
        (label_ref 64)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 16)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  16 [100.0%] 

(barrier 123 122 52)

;; Start of basic block ( 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  10 [50.0%] 
(code_label 52 123 110 13 32 "" [1 uses])

(note 110 52 53 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 53 110 54 13 arch/arm/kernel/hw_breakpoint.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:133 ctrl$len ] [133])
            (const_int 15 [0xf]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 111 13 arch/arm/kernel/hw_breakpoint.c:497 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 13 -> ( 18 14)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  18 [29.0%] 
;; Succ edge  14 [71.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  13 [71.0%]  (fallthru)
(note 111 54 55 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 55 111 56 14 arch/arm/kernel/hw_breakpoint.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:133 ctrl$len ] [133])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 59 14 arch/arm/kernel/hw_breakpoint.c:497 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 14 -> ( 19 15)
;; lr  out 	 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  19 [29.0%] 
;; Succ edge  15 [71.0%]  (fallthru)

;; Start of basic block ( 14 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  14 [71.0%]  (fallthru)
;; Pred edge  11 [71.0%] 
(code_label 59 56 60 15 27 "" [1 uses])

(note 60 59 61 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 124 15 arch/arm/kernel/hw_breakpoint.c:511 (set (reg:SI 0 r0 [orig:134 D.23917 ] [134])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(jump_insn 124 61 125 15 (set (pc)
        (label_ref 90)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 20)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  20 [100.0%] 

(barrier 125 124 64)

;; Start of basic block ( 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  12 [100.0%] 
(code_label 64 125 65 16 28 "" [1 uses])

(note 65 64 67 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 67 65 68 16 arch/arm/kernel/hw_breakpoint.c:499 (set (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])
        (reg:SI 0 r0 [orig:133 ctrl$len ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 68 67 126 16 arch/arm/kernel/hw_breakpoint.c:514 (set (reg:SI 0 r0 [orig:134 D.23917 ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 126 68 127 16 arch/arm/kernel/hw_breakpoint.c:500 (set (pc)
        (label_ref 90)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 20)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  20 [100.0%] 

(barrier 127 126 71)

;; Start of basic block ( 9) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  9 [29.0%] 
(code_label 71 127 72 17 29 "" [1 uses])

(note 72 71 73 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 17 arch/arm/kernel/hw_breakpoint.c:502 (set (reg:SI 3 r3 [147])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))

(insn 74 73 75 17 arch/arm/kernel/hw_breakpoint.c:502 (set (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])
        (reg:SI 3 r3 [147])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn 75 74 128 17 arch/arm/kernel/hw_breakpoint.c:514 (set (reg:SI 0 r0 [orig:134 D.23917 ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 128 75 129 17 arch/arm/kernel/hw_breakpoint.c:503 (set (pc)
        (label_ref 90)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 20)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  20 [100.0%] 

(barrier 129 128 78)

;; Start of basic block ( 13) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  13 [29.0%] 
(code_label 78 129 79 18 30 "" [1 uses])

(note 79 78 80 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 18 arch/arm/kernel/hw_breakpoint.c:505 (set (reg:SI 3 r3 [148])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))

(insn 81 80 82 18 arch/arm/kernel/hw_breakpoint.c:505 (set (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])
        (reg:SI 3 r3 [148])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 82 81 130 18 arch/arm/kernel/hw_breakpoint.c:514 (set (reg:SI 0 r0 [orig:134 D.23917 ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 130 82 131 18 arch/arm/kernel/hw_breakpoint.c:506 (set (pc)
        (label_ref 90)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 20)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  20 [100.0%] 

(barrier 131 130 85)

;; Start of basic block ( 14) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 3 [r3]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3]
;; live  kill	

;; Pred edge  14 [29.0%] 
(code_label 85 131 86 19 31 "" [1 uses])

(note 86 85 89 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 89 86 87 19 arch/arm/kernel/hw_breakpoint.c:514 (set (reg:SI 0 r0 [orig:134 D.23917 ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 87 89 88 19 arch/arm/kernel/hw_breakpoint.c:508 (set (reg:SI 3 r3 [149])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 8 [0x8])
        (nil)))

(insn 88 87 90 19 arch/arm/kernel/hw_breakpoint.c:508 (set (mem:SI (reg/v/f:SI 1 r1 [orig:137 gen_len ] [137]) [0 S4 A32])
        (reg:SI 3 r3 [149])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))
;; End of basic block 19 -> ( 20)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 17 19 16 15 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  17 [100.0%] 
;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  18 [100.0%] 
(code_label 90 88 91 20 33 "" [4 uses])

(note 91 90 102 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 102 91 132 20 arch/arm/kernel/hw_breakpoint.c:515 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 20 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 132 102 133 NOTE_INSN_DELETED)

(note 133 132 0 NOTE_INSN_DELETED)


;; Function hw_breakpoint_pmu_read (hw_breakpoint_pmu_read)[0:1271]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



Compressing live ranges: from 1 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=1
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


hw_breakpoint_pmu_read

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 10{7d,3u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 13 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 13 3 14 NOTE_INSN_DELETED)

(note 14 13 0 NOTE_INSN_DELETED)


;; Function hw_breakpoint_exceptions_notify (hw_breakpoint_exceptions_notify)[0:1272]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 18(l0): point = 0
   Insn 12(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=2
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=12, live_throughout: 13, 14, dead_or_set: 0
insn=18, live_throughout: 0, 13, 14, dead_or_set: 


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


hw_breakpoint_exceptions_notify

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r12={1d} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 13{8d,5u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 12 2 NOTE_INSN_DELETED)

(insn 12 8 18 2 arch/arm/kernel/hw_breakpoint.c:976 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 18 12 22 2 arch/arm/kernel/hw_breakpoint.c:976 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 22 18 23 NOTE_INSN_DELETED)

(note 23 22 0 NOTE_INSN_DELETED)


;; Function write_wb_reg (write_wb_reg)[0:1242]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:650000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:650000
  a2(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 340(l0): point = 0
   Insn 337(l0): point = 3
   Insn 335(l0): point = 5
   Insn 336(l0): point = 7
   Insn 474(l0): point = 10
   Insn 329(l0): point = 12
   Insn 472(l0): point = 15
   Insn 324(l0): point = 17
   Insn 470(l0): point = 20
   Insn 319(l0): point = 22
   Insn 468(l0): point = 25
   Insn 314(l0): point = 27
   Insn 466(l0): point = 30
   Insn 309(l0): point = 32
   Insn 464(l0): point = 35
   Insn 304(l0): point = 37
   Insn 462(l0): point = 40
   Insn 299(l0): point = 42
   Insn 460(l0): point = 45
   Insn 294(l0): point = 47
   Insn 458(l0): point = 50
   Insn 289(l0): point = 52
   Insn 456(l0): point = 55
   Insn 284(l0): point = 57
   Insn 454(l0): point = 60
   Insn 279(l0): point = 62
   Insn 452(l0): point = 65
   Insn 274(l0): point = 67
   Insn 450(l0): point = 70
   Insn 269(l0): point = 72
   Insn 448(l0): point = 75
   Insn 264(l0): point = 77
   Insn 446(l0): point = 80
   Insn 259(l0): point = 82
   Insn 444(l0): point = 85
   Insn 254(l0): point = 87
   Insn 442(l0): point = 90
   Insn 249(l0): point = 92
   Insn 440(l0): point = 95
   Insn 244(l0): point = 97
   Insn 438(l0): point = 100
   Insn 239(l0): point = 102
   Insn 436(l0): point = 105
   Insn 234(l0): point = 107
   Insn 434(l0): point = 110
   Insn 229(l0): point = 112
   Insn 432(l0): point = 115
   Insn 224(l0): point = 117
   Insn 430(l0): point = 120
   Insn 219(l0): point = 122
   Insn 428(l0): point = 125
   Insn 214(l0): point = 127
   Insn 426(l0): point = 130
   Insn 209(l0): point = 132
   Insn 424(l0): point = 135
   Insn 204(l0): point = 137
   Insn 422(l0): point = 140
   Insn 199(l0): point = 142
   Insn 420(l0): point = 145
   Insn 194(l0): point = 147
   Insn 418(l0): point = 150
   Insn 189(l0): point = 152
   Insn 416(l0): point = 155
   Insn 184(l0): point = 157
   Insn 414(l0): point = 160
   Insn 179(l0): point = 162
   Insn 412(l0): point = 165
   Insn 174(l0): point = 167
   Insn 410(l0): point = 170
   Insn 169(l0): point = 172
   Insn 408(l0): point = 175
   Insn 164(l0): point = 177
   Insn 406(l0): point = 180
   Insn 159(l0): point = 182
   Insn 404(l0): point = 185
   Insn 154(l0): point = 187
   Insn 402(l0): point = 190
   Insn 149(l0): point = 192
   Insn 400(l0): point = 195
   Insn 144(l0): point = 197
   Insn 398(l0): point = 200
   Insn 139(l0): point = 202
   Insn 396(l0): point = 205
   Insn 134(l0): point = 207
   Insn 394(l0): point = 210
   Insn 129(l0): point = 212
   Insn 392(l0): point = 215
   Insn 124(l0): point = 217
   Insn 390(l0): point = 220
   Insn 119(l0): point = 222
   Insn 388(l0): point = 225
   Insn 114(l0): point = 227
   Insn 386(l0): point = 230
   Insn 109(l0): point = 232
   Insn 384(l0): point = 235
   Insn 104(l0): point = 237
   Insn 382(l0): point = 240
   Insn 99(l0): point = 242
   Insn 380(l0): point = 245
   Insn 94(l0): point = 247
   Insn 378(l0): point = 250
   Insn 89(l0): point = 252
   Insn 376(l0): point = 255
   Insn 84(l0): point = 257
   Insn 374(l0): point = 260
   Insn 79(l0): point = 262
   Insn 372(l0): point = 265
   Insn 74(l0): point = 267
   Insn 370(l0): point = 270
   Insn 69(l0): point = 272
   Insn 368(l0): point = 275
   Insn 64(l0): point = 277
   Insn 366(l0): point = 280
   Insn 59(l0): point = 282
   Insn 364(l0): point = 285
   Insn 54(l0): point = 287
   Insn 362(l0): point = 290
   Insn 49(l0): point = 292
   Insn 360(l0): point = 295
   Insn 44(l0): point = 297
   Insn 358(l0): point = 300
   Insn 39(l0): point = 302
   Insn 356(l0): point = 305
   Insn 34(l0): point = 307
   Insn 354(l0): point = 310
   Insn 29(l0): point = 312
   Insn 352(l0): point = 315
   Insn 24(l0): point = 317
   Insn 350(l0): point = 320
   Insn 19(l0): point = 322
   Insn 348(l0): point = 325
   Insn 14(l0): point = 327
   Insn 8(l0): point = 330
   Insn 7(l0): point = 332
   Insn 3(l0): point = 334
   Insn 2(l0): point = 336
 a0(r133): [330..336] [8..9]
 a1(r134): [328..334] [323..324] [318..319] [313..314] [308..309] [303..304] [298..299] [293..294] [288..289] [283..284] [278..279] [273..274] [268..269] [263..264] [258..259] [253..254] [248..249] [243..244] [238..239] [233..234] [228..229] [223..224] [218..219] [213..214] [208..209] [203..204] [198..199] [193..194] [188..189] [183..184] [178..179] [173..174] [168..169] [163..164] [158..159] [153..154] [148..149] [143..144] [138..139] [133..134] [128..129] [123..124] [118..119] [113..114] [108..109] [103..104] [98..99] [93..94] [88..89] [83..84] [78..79] [73..74] [68..69] [63..64] [58..59] [53..54] [48..49] [43..44] [38..39] [33..34] [28..29] [23..24] [18..19] [13..14]
 a2(r135): [331..332]
Compressing live ranges: from 339 to 134 - 39%
Ranges after the compression:
 a0(r133): [129..133] [0..1]
 a1(r134): [128..132] [126..127] [124..125] [122..123] [120..121] [118..119] [116..117] [114..115] [112..113] [110..111] [108..109] [106..107] [104..105] [102..103] [100..101] [98..99] [96..97] [94..95] [92..93] [90..91] [88..89] [86..87] [84..85] [82..83] [80..81] [78..79] [76..77] [74..75] [72..73] [70..71] [68..69] [66..67] [64..65] [62..63] [60..61] [58..59] [56..57] [54..55] [52..53] [50..51] [48..49] [46..47] [44..45] [42..43] [40..41] [38..39] [36..37] [34..35] [32..33] [30..31] [28..29] [26..27] [24..25] [22..23] [20..21] [18..19] [16..17] [14..15] [12..13] [10..11] [8..9] [6..7] [4..5] [2..3]
 a2(r135): [130..131]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r133,l0) conflicts: a1(r134,l0) a2(r135,l0)
;;     total conflict hard regs: 1 14
;;     conflict hard regs: 1 14
;; a1(r134,l0) conflicts: a0(r133,l0) a2(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r135,l0) conflicts: a0(r133,l0) a1(r134,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=69, points=134
    allocnos=3, copies=0, conflicts=0, ranges=67

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r133 1r134 2r135
    modified regnos: 133 134 135
    border:
    Pressure: GENERAL_REGS=4
    Reg 133 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
      Pushing a2(r135,l0)
      Pushing a1(r134,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 0
      Popping a1(r134,l0)  -- assign reg 1
      Popping a2(r135,l0)  -- assign reg 3
Disposition:
    0:r133 l0     0    1:r134 l0     1    2:r135 l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 1, 13, 14, dead_or_set: 0, 133
insn=3, live_throughout: 13, 14, 133, dead_or_set: 1, 134
insn=7, live_throughout: 13, 14, 133, 134, dead_or_set: 135
insn=8, live_throughout: 13, 14, 133, 134, dead_or_set: 135
insn=9, live_throughout: 13, 14, 134, dead_or_set: 
insn=10, live_throughout: 13, 14, 134, dead_or_set: 
insn=12, live_throughout: 13, 14, 134, dead_or_set: 
insn=14, live_throughout: 13, 14, dead_or_set: 134
insn=348, live_throughout: 13, 14, dead_or_set: 
insn=17, live_throughout: 13, 14, 134, dead_or_set: 
insn=19, live_throughout: 13, 14, dead_or_set: 134
insn=350, live_throughout: 13, 14, dead_or_set: 
insn=22, live_throughout: 13, 14, 134, dead_or_set: 
insn=24, live_throughout: 13, 14, dead_or_set: 134
insn=352, live_throughout: 13, 14, dead_or_set: 
insn=27, live_throughout: 13, 14, 134, dead_or_set: 
insn=29, live_throughout: 13, 14, dead_or_set: 134
insn=354, live_throughout: 13, 14, dead_or_set: 
insn=32, live_throughout: 13, 14, 134, dead_or_set: 
insn=34, live_throughout: 13, 14, dead_or_set: 134
insn=356, live_throughout: 13, 14, dead_or_set: 
insn=37, live_throughout: 13, 14, 134, dead_or_set: 
insn=39, live_throughout: 13, 14, dead_or_set: 134
insn=358, live_throughout: 13, 14, dead_or_set: 
insn=42, live_throughout: 13, 14, 134, dead_or_set: 
insn=44, live_throughout: 13, 14, dead_or_set: 134
insn=360, live_throughout: 13, 14, dead_or_set: 
insn=47, live_throughout: 13, 14, 134, dead_or_set: 
insn=49, live_throughout: 13, 14, dead_or_set: 134
insn=362, live_throughout: 13, 14, dead_or_set: 
insn=52, live_throughout: 13, 14, 134, dead_or_set: 
insn=54, live_throughout: 13, 14, dead_or_set: 134
insn=364, live_throughout: 13, 14, dead_or_set: 
insn=57, live_throughout: 13, 14, 134, dead_or_set: 
insn=59, live_throughout: 13, 14, dead_or_set: 134
insn=366, live_throughout: 13, 14, dead_or_set: 
insn=62, live_throughout: 13, 14, 134, dead_or_set: 
insn=64, live_throughout: 13, 14, dead_or_set: 134
insn=368, live_throughout: 13, 14, dead_or_set: 
insn=67, live_throughout: 13, 14, 134, dead_or_set: 
insn=69, live_throughout: 13, 14, dead_or_set: 134
insn=370, live_throughout: 13, 14, dead_or_set: 
insn=72, live_throughout: 13, 14, 134, dead_or_set: 
insn=74, live_throughout: 13, 14, dead_or_set: 134
insn=372, live_throughout: 13, 14, dead_or_set: 
insn=77, live_throughout: 13, 14, 134, dead_or_set: 
insn=79, live_throughout: 13, 14, dead_or_set: 134
insn=374, live_throughout: 13, 14, dead_or_set: 
insn=82, live_throughout: 13, 14, 134, dead_or_set: 
insn=84, live_throughout: 13, 14, dead_or_set: 134
insn=376, live_throughout: 13, 14, dead_or_set: 
insn=87, live_throughout: 13, 14, 134, dead_or_set: 
insn=89, live_throughout: 13, 14, dead_or_set: 134
insn=378, live_throughout: 13, 14, dead_or_set: 
insn=92, live_throughout: 13, 14, 134, dead_or_set: 
insn=94, live_throughout: 13, 14, dead_or_set: 134
insn=380, live_throughout: 13, 14, dead_or_set: 
insn=97, live_throughout: 13, 14, 134, dead_or_set: 
insn=99, live_throughout: 13, 14, dead_or_set: 134
insn=382, live_throughout: 13, 14, dead_or_set: 
insn=102, live_throughout: 13, 14, 134, dead_or_set: 
insn=104, live_throughout: 13, 14, dead_or_set: 134
insn=384, live_throughout: 13, 14, dead_or_set: 
insn=107, live_throughout: 13, 14, 134, dead_or_set: 
insn=109, live_throughout: 13, 14, dead_or_set: 134
insn=386, live_throughout: 13, 14, dead_or_set: 
insn=112, live_throughout: 13, 14, 134, dead_or_set: 
insn=114, live_throughout: 13, 14, dead_or_set: 134
insn=388, live_throughout: 13, 14, dead_or_set: 
insn=117, live_throughout: 13, 14, 134, dead_or_set: 
insn=119, live_throughout: 13, 14, dead_or_set: 134
insn=390, live_throughout: 13, 14, dead_or_set: 
insn=122, live_throughout: 13, 14, 134, dead_or_set: 
insn=124, live_throughout: 13, 14, dead_or_set: 134
insn=392, live_throughout: 13, 14, dead_or_set: 
insn=127, live_throughout: 13, 14, 134, dead_or_set: 
insn=129, live_throughout: 13, 14, dead_or_set: 134
insn=394, live_throughout: 13, 14, dead_or_set: 
insn=132, live_throughout: 13, 14, 134, dead_or_set: 
insn=134, live_throughout: 13, 14, dead_or_set: 134
insn=396, live_throughout: 13, 14, dead_or_set: 
insn=137, live_throughout: 13, 14, 134, dead_or_set: 
insn=139, live_throughout: 13, 14, dead_or_set: 134
insn=398, live_throughout: 13, 14, dead_or_set: 
insn=142, live_throughout: 13, 14, 134, dead_or_set: 
insn=144, live_throughout: 13, 14, dead_or_set: 134
insn=400, live_throughout: 13, 14, dead_or_set: 
insn=147, live_throughout: 13, 14, 134, dead_or_set: 
insn=149, live_throughout: 13, 14, dead_or_set: 134
insn=402, live_throughout: 13, 14, dead_or_set: 
insn=152, live_throughout: 13, 14, 134, dead_or_set: 
insn=154, live_throughout: 13, 14, dead_or_set: 134
insn=404, live_throughout: 13, 14, dead_or_set: 
insn=157, live_throughout: 13, 14, 134, dead_or_set: 
insn=159, live_throughout: 13, 14, dead_or_set: 134
insn=406, live_throughout: 13, 14, dead_or_set: 
insn=162, live_throughout: 13, 14, 134, dead_or_set: 
insn=164, live_throughout: 13, 14, dead_or_set: 134
insn=408, live_throughout: 13, 14, dead_or_set: 
insn=167, live_throughout: 13, 14, 134, dead_or_set: 
insn=169, live_throughout: 13, 14, dead_or_set: 134
insn=410, live_throughout: 13, 14, dead_or_set: 
insn=172, live_throughout: 13, 14, 134, dead_or_set: 
insn=174, live_throughout: 13, 14, dead_or_set: 134
insn=412, live_throughout: 13, 14, dead_or_set: 
insn=177, live_throughout: 13, 14, 134, dead_or_set: 
insn=179, live_throughout: 13, 14, dead_or_set: 134
insn=414, live_throughout: 13, 14, dead_or_set: 
insn=182, live_throughout: 13, 14, 134, dead_or_set: 
insn=184, live_throughout: 13, 14, dead_or_set: 134
insn=416, live_throughout: 13, 14, dead_or_set: 
insn=187, live_throughout: 13, 14, 134, dead_or_set: 
insn=189, live_throughout: 13, 14, dead_or_set: 134
insn=418, live_throughout: 13, 14, dead_or_set: 
insn=192, live_throughout: 13, 14, 134, dead_or_set: 
insn=194, live_throughout: 13, 14, dead_or_set: 134
insn=420, live_throughout: 13, 14, dead_or_set: 
insn=197, live_throughout: 13, 14, 134, dead_or_set: 
insn=199, live_throughout: 13, 14, dead_or_set: 134
insn=422, live_throughout: 13, 14, dead_or_set: 
insn=202, live_throughout: 13, 14, 134, dead_or_set: 
insn=204, live_throughout: 13, 14, dead_or_set: 134
insn=424, live_throughout: 13, 14, dead_or_set: 
insn=207, live_throughout: 13, 14, 134, dead_or_set: 
insn=209, live_throughout: 13, 14, dead_or_set: 134
insn=426, live_throughout: 13, 14, dead_or_set: 
insn=212, live_throughout: 13, 14, 134, dead_or_set: 
insn=214, live_throughout: 13, 14, dead_or_set: 134
insn=428, live_throughout: 13, 14, dead_or_set: 
insn=217, live_throughout: 13, 14, 134, dead_or_set: 
insn=219, live_throughout: 13, 14, dead_or_set: 134
insn=430, live_throughout: 13, 14, dead_or_set: 
insn=222, live_throughout: 13, 14, 134, dead_or_set: 
insn=224, live_throughout: 13, 14, dead_or_set: 134
insn=432, live_throughout: 13, 14, dead_or_set: 
insn=227, live_throughout: 13, 14, 134, dead_or_set: 
insn=229, live_throughout: 13, 14, dead_or_set: 134
insn=434, live_throughout: 13, 14, dead_or_set: 
insn=232, live_throughout: 13, 14, 134, dead_or_set: 
insn=234, live_throughout: 13, 14, dead_or_set: 134
insn=436, live_throughout: 13, 14, dead_or_set: 
insn=237, live_throughout: 13, 14, 134, dead_or_set: 
insn=239, live_throughout: 13, 14, dead_or_set: 134
insn=438, live_throughout: 13, 14, dead_or_set: 
insn=242, live_throughout: 13, 14, 134, dead_or_set: 
insn=244, live_throughout: 13, 14, dead_or_set: 134
insn=440, live_throughout: 13, 14, dead_or_set: 
insn=247, live_throughout: 13, 14, 134, dead_or_set: 
insn=249, live_throughout: 13, 14, dead_or_set: 134
insn=442, live_throughout: 13, 14, dead_or_set: 
insn=252, live_throughout: 13, 14, 134, dead_or_set: 
insn=254, live_throughout: 13, 14, dead_or_set: 134
insn=444, live_throughout: 13, 14, dead_or_set: 
insn=257, live_throughout: 13, 14, 134, dead_or_set: 
insn=259, live_throughout: 13, 14, dead_or_set: 134
insn=446, live_throughout: 13, 14, dead_or_set: 
insn=262, live_throughout: 13, 14, 134, dead_or_set: 
insn=264, live_throughout: 13, 14, dead_or_set: 134
insn=448, live_throughout: 13, 14, dead_or_set: 
insn=267, live_throughout: 13, 14, 134, dead_or_set: 
insn=269, live_throughout: 13, 14, dead_or_set: 134
insn=450, live_throughout: 13, 14, dead_or_set: 
insn=272, live_throughout: 13, 14, 134, dead_or_set: 
insn=274, live_throughout: 13, 14, dead_or_set: 134
insn=452, live_throughout: 13, 14, dead_or_set: 
insn=277, live_throughout: 13, 14, 134, dead_or_set: 
insn=279, live_throughout: 13, 14, dead_or_set: 134
insn=454, live_throughout: 13, 14, dead_or_set: 
insn=282, live_throughout: 13, 14, 134, dead_or_set: 
insn=284, live_throughout: 13, 14, dead_or_set: 134
insn=456, live_throughout: 13, 14, dead_or_set: 
insn=287, live_throughout: 13, 14, 134, dead_or_set: 
insn=289, live_throughout: 13, 14, dead_or_set: 134
insn=458, live_throughout: 13, 14, dead_or_set: 
insn=292, live_throughout: 13, 14, 134, dead_or_set: 
insn=294, live_throughout: 13, 14, dead_or_set: 134
insn=460, live_throughout: 13, 14, dead_or_set: 
insn=297, live_throughout: 13, 14, 134, dead_or_set: 
insn=299, live_throughout: 13, 14, dead_or_set: 134
insn=462, live_throughout: 13, 14, dead_or_set: 
insn=302, live_throughout: 13, 14, 134, dead_or_set: 
insn=304, live_throughout: 13, 14, dead_or_set: 134
insn=464, live_throughout: 13, 14, dead_or_set: 
insn=307, live_throughout: 13, 14, 134, dead_or_set: 
insn=309, live_throughout: 13, 14, dead_or_set: 134
insn=466, live_throughout: 13, 14, dead_or_set: 
insn=312, live_throughout: 13, 14, 134, dead_or_set: 
insn=314, live_throughout: 13, 14, dead_or_set: 134
insn=468, live_throughout: 13, 14, dead_or_set: 
insn=317, live_throughout: 13, 14, 134, dead_or_set: 
insn=319, live_throughout: 13, 14, dead_or_set: 134
insn=470, live_throughout: 13, 14, dead_or_set: 
insn=322, live_throughout: 13, 14, 134, dead_or_set: 
insn=324, live_throughout: 13, 14, dead_or_set: 134
insn=472, live_throughout: 13, 14, dead_or_set: 
insn=327, live_throughout: 13, 14, 134, dead_or_set: 
insn=329, live_throughout: 13, 14, dead_or_set: 134
insn=474, live_throughout: 13, 14, dead_or_set: 
insn=332, live_throughout: 13, 133, dead_or_set: 
insn=336, live_throughout: 13, dead_or_set: 1, 133
insn=335, live_throughout: 1, 13, dead_or_set: 0
insn=337, live_throughout: 13, dead_or_set: 0, 1, 14
insn=338, live_throughout: 13, 14, dead_or_set: 
insn=340, live_throughout: 13, 14, dead_or_set: 
changing reg in insn 2
changing reg in insn 336
changing reg in insn 7
changing reg in insn 3
changing reg in insn 329
changing reg in insn 324
changing reg in insn 319
changing reg in insn 314
changing reg in insn 309
changing reg in insn 304
changing reg in insn 299
changing reg in insn 294
changing reg in insn 289
changing reg in insn 284
changing reg in insn 279
changing reg in insn 274
changing reg in insn 269
changing reg in insn 264
changing reg in insn 259
changing reg in insn 254
changing reg in insn 249
changing reg in insn 244
changing reg in insn 239
changing reg in insn 234
changing reg in insn 229
changing reg in insn 224
changing reg in insn 219
changing reg in insn 214
changing reg in insn 209
changing reg in insn 204
changing reg in insn 199
changing reg in insn 194
changing reg in insn 189
changing reg in insn 184
changing reg in insn 179
changing reg in insn 174
changing reg in insn 169
changing reg in insn 164
changing reg in insn 159
changing reg in insn 154
changing reg in insn 149
changing reg in insn 144
changing reg in insn 139
changing reg in insn 134
changing reg in insn 129
changing reg in insn 124
changing reg in insn 119
changing reg in insn 114
changing reg in insn 109
changing reg in insn 104
changing reg in insn 99
changing reg in insn 94
changing reg in insn 89
changing reg in insn 84
changing reg in insn 79
changing reg in insn 74
changing reg in insn 69
changing reg in insn 64
changing reg in insn 59
changing reg in insn 54
changing reg in insn 49
changing reg in insn 44
changing reg in insn 39
changing reg in insn 34
changing reg in insn 29
changing reg in insn 24
changing reg in insn 19
changing reg in insn 14
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
deleting insn with uid = 2.
deleting insn with uid = 3.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 337.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 69 n_edges 132 count 136 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 69 n_edges 132 count 136 (    2)


write_wb_reg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d,65u} r2={2d} r3={3d,2u} r12={2d} r13={1d,69u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 268{128d,140u,0e} in 134{133 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/hw_breakpoint.c:122 (set (reg:SI 3 r3 [135])
        (plus:SI (reg/v:SI 0 r0 [orig:133 n ] [133])
            (const_int -64 [0xffffffffffffffc0]))) 4 {*arm_addsi3} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:122 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [135])
                        (const_int 63 [0x3f]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [135])
                                (const_int 4 [0x4]))
                            (label_ref 9)) [0 S4 A32])
                    (label_ref 332)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 9))
        ]) 265 {arm_casesi_internal} (insn_list:REG_LABEL_TARGET 332 (nil)))
;; End of basic block 2 -> ( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  67 [1.5%] 
;; Succ edge  3 [1.5%] 
;; Succ edge  4 [1.5%] 
;; Succ edge  5 [1.5%] 
;; Succ edge  6 [1.5%] 
;; Succ edge  7 [1.5%] 
;; Succ edge  8 [1.5%] 
;; Succ edge  9 [1.5%] 
;; Succ edge  10 [1.5%] 
;; Succ edge  11 [1.5%] 
;; Succ edge  12 [1.5%] 
;; Succ edge  13 [1.5%] 
;; Succ edge  14 [1.5%] 
;; Succ edge  15 [1.5%] 
;; Succ edge  16 [1.5%] 
;; Succ edge  17 [1.5%] 
;; Succ edge  18 [1.5%] 
;; Succ edge  19 [1.5%] 
;; Succ edge  20 [1.5%] 
;; Succ edge  21 [1.5%] 
;; Succ edge  22 [1.5%] 
;; Succ edge  23 [1.5%] 
;; Succ edge  24 [1.5%] 
;; Succ edge  25 [1.5%] 
;; Succ edge  26 [1.5%] 
;; Succ edge  27 [1.5%] 
;; Succ edge  28 [1.5%] 
;; Succ edge  29 [1.5%] 
;; Succ edge  30 [1.5%] 
;; Succ edge  31 [1.5%] 
;; Succ edge  32 [1.5%] 
;; Succ edge  33 [1.5%] 
;; Succ edge  34 [1.5%] 
;; Succ edge  35 [1.5%] 
;; Succ edge  36 [1.5%] 
;; Succ edge  37 [1.5%] 
;; Succ edge  38 [1.5%] 
;; Succ edge  39 [1.5%] 
;; Succ edge  40 [1.5%] 
;; Succ edge  41 [1.5%] 
;; Succ edge  42 [1.5%] 
;; Succ edge  43 [1.5%] 
;; Succ edge  44 [1.5%] 
;; Succ edge  45 [1.5%] 
;; Succ edge  46 [1.5%] 
;; Succ edge  47 [1.5%] 
;; Succ edge  48 [1.5%] 
;; Succ edge  49 [1.5%] 
;; Succ edge  50 [1.5%] 
;; Succ edge  51 [1.5%] 
;; Succ edge  52 [1.5%] 
;; Succ edge  53 [1.5%] 
;; Succ edge  54 [1.5%] 
;; Succ edge  55 [1.5%] 
;; Succ edge  56 [1.5%] 
;; Succ edge  57 [1.5%] 
;; Succ edge  58 [1.5%] 
;; Succ edge  59 [1.5%] 
;; Succ edge  60 [1.5%] 
;; Succ edge  61 [1.5%] 
;; Succ edge  62 [1.5%] 
;; Succ edge  63 [1.5%] 
;; Succ edge  64 [1.5%] 
;; Succ edge  65 [1.5%] 
;; Succ edge  66 [1.5%] 

;; Insn is not within a basic block
(code_label 9 8 10 109 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 10 9 11 arch/arm/kernel/hw_breakpoint.c:122 (addr_vec:SI [
            (label_ref:SI 12)
            (label_ref:SI 17)
            (label_ref:SI 22)
            (label_ref:SI 27)
            (label_ref:SI 32)
            (label_ref:SI 37)
            (label_ref:SI 42)
            (label_ref:SI 47)
            (label_ref:SI 52)
            (label_ref:SI 57)
            (label_ref:SI 62)
            (label_ref:SI 67)
            (label_ref:SI 72)
            (label_ref:SI 77)
            (label_ref:SI 82)
            (label_ref:SI 87)
            (label_ref:SI 92)
            (label_ref:SI 97)
            (label_ref:SI 102)
            (label_ref:SI 107)
            (label_ref:SI 112)
            (label_ref:SI 117)
            (label_ref:SI 122)
            (label_ref:SI 127)
            (label_ref:SI 132)
            (label_ref:SI 137)
            (label_ref:SI 142)
            (label_ref:SI 147)
            (label_ref:SI 152)
            (label_ref:SI 157)
            (label_ref:SI 162)
            (label_ref:SI 167)
            (label_ref:SI 172)
            (label_ref:SI 177)
            (label_ref:SI 182)
            (label_ref:SI 187)
            (label_ref:SI 192)
            (label_ref:SI 197)
            (label_ref:SI 202)
            (label_ref:SI 207)
            (label_ref:SI 212)
            (label_ref:SI 217)
            (label_ref:SI 222)
            (label_ref:SI 227)
            (label_ref:SI 232)
            (label_ref:SI 237)
            (label_ref:SI 242)
            (label_ref:SI 247)
            (label_ref:SI 252)
            (label_ref:SI 257)
            (label_ref:SI 262)
            (label_ref:SI 267)
            (label_ref:SI 272)
            (label_ref:SI 277)
            (label_ref:SI 282)
            (label_ref:SI 287)
            (label_ref:SI 292)
            (label_ref:SI 297)
            (label_ref:SI 302)
            (label_ref:SI 307)
            (label_ref:SI 312)
            (label_ref:SI 317)
            (label_ref:SI 322)
            (label_ref:SI 327)
        ]) -1 (nil))

(barrier 11 10 12)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 12 11 13 3 45 "" [1 uses])

(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 348 3 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c0, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 348 14 349 3 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 349 348 17)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 17 349 18 4 46 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 350 4 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c1, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 350 19 351 4 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 351 350 22)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 22 351 23 5 47 "" [1 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 352 5 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c2, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 352 24 353 5 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 353 352 27)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 27 353 28 6 48 "" [1 uses])

(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 354 6 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c3, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 354 29 355 6 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 355 354 32)

;; Start of basic block ( 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 32 355 33 7 49 "" [1 uses])

(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 356 7 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c4, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 356 34 357 7 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 357 356 37)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 37 357 38 8 50 "" [1 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 358 8 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c5, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 358 39 359 8 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 359 358 42)

;; Start of basic block ( 2) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 42 359 43 9 51 "" [1 uses])

(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 360 9 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c6, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 360 44 361 9 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 361 360 47)

;; Start of basic block ( 2) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 47 361 48 10 52 "" [1 uses])

(note 48 47 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 362 10 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c7, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 362 49 363 10 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 363 362 52)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 52 363 53 11 53 "" [1 uses])

(note 53 52 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 364 11 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c8, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 364 54 365 11 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 365 364 57)

;; Start of basic block ( 2) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 57 365 58 12 54 "" [1 uses])

(note 58 57 59 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 366 12 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c9, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 366 59 367 12 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 367 366 62)

;; Start of basic block ( 2) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 62 367 63 13 55 "" [1 uses])

(note 63 62 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 368 13 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c10, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 368 64 369 13 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 369 368 67)

;; Start of basic block ( 2) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 67 369 68 14 56 "" [1 uses])

(note 68 67 69 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 370 14 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c11, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 370 69 371 14 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 371 370 72)

;; Start of basic block ( 2) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 72 371 73 15 57 "" [1 uses])

(note 73 72 74 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 372 15 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c12, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 372 74 373 15 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 373 372 77)

;; Start of basic block ( 2) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 77 373 78 16 58 "" [1 uses])

(note 78 77 79 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 374 16 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c13, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 374 79 375 16 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 375 374 82)

;; Start of basic block ( 2) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 82 375 83 17 59 "" [1 uses])

(note 83 82 84 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 376 17 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c14, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 376 84 377 17 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 377 376 87)

;; Start of basic block ( 2) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 87 377 88 18 60 "" [1 uses])

(note 88 87 89 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 378 18 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c15, 4") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (nil))

(jump_insn 378 89 379 18 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 379 378 92)

;; Start of basic block ( 2) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 92 379 93 19 61 "" [1 uses])

(note 93 92 94 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 380 19 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c0, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 380 94 381 19 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 381 380 97)

;; Start of basic block ( 2) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 97 381 98 20 62 "" [1 uses])

(note 98 97 99 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 382 20 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c1, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 382 99 383 20 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 383 382 102)

;; Start of basic block ( 2) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 102 383 103 21 63 "" [1 uses])

(note 103 102 104 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 384 21 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c2, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 384 104 385 21 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 21 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 385 384 107)

;; Start of basic block ( 2) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 107 385 108 22 64 "" [1 uses])

(note 108 107 109 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 386 22 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c3, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 386 109 387 22 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 387 386 112)

;; Start of basic block ( 2) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 112 387 113 23 65 "" [1 uses])

(note 113 112 114 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 388 23 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c4, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 388 114 389 23 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 389 388 117)

;; Start of basic block ( 2) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 117 389 118 24 66 "" [1 uses])

(note 118 117 119 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 390 24 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c5, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 390 119 391 24 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 24 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 391 390 122)

;; Start of basic block ( 2) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 122 391 123 25 67 "" [1 uses])

(note 123 122 124 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 392 25 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c6, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 392 124 393 25 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 393 392 127)

;; Start of basic block ( 2) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 127 393 128 26 68 "" [1 uses])

(note 128 127 129 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 129 128 394 26 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c7, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 394 129 395 26 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 26 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 395 394 132)

;; Start of basic block ( 2) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 132 395 133 27 69 "" [1 uses])

(note 133 132 134 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 396 27 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c8, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 396 134 397 27 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 27 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 397 396 137)

;; Start of basic block ( 2) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 137 397 138 28 70 "" [1 uses])

(note 138 137 139 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 398 28 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c9, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 398 139 399 28 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 28 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 399 398 142)

;; Start of basic block ( 2) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 142 399 143 29 71 "" [1 uses])

(note 143 142 144 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 400 29 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c10, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 400 144 401 29 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 401 400 147)

;; Start of basic block ( 2) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 147 401 148 30 72 "" [1 uses])

(note 148 147 149 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 149 148 402 30 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c11, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 402 149 403 30 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 30 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 403 402 152)

;; Start of basic block ( 2) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 152 403 153 31 73 "" [1 uses])

(note 153 152 154 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 154 153 404 31 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c12, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 404 154 405 31 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 405 404 157)

;; Start of basic block ( 2) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 157 405 158 32 74 "" [1 uses])

(note 158 157 159 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 406 32 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c13, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 406 159 407 32 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 32 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 407 406 162)

;; Start of basic block ( 2) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 162 407 163 33 75 "" [1 uses])

(note 163 162 164 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 164 163 408 33 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c14, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 408 164 409 33 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 33 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 409 408 167)

;; Start of basic block ( 2) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 167 409 168 34 76 "" [1 uses])

(note 168 167 169 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 410 34 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c15, 5") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (nil))

(jump_insn 410 169 411 34 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 34 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 411 410 172)

;; Start of basic block ( 2) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 172 411 173 35 77 "" [1 uses])

(note 173 172 174 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 412 35 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c0, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 412 174 413 35 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 35 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 413 412 177)

;; Start of basic block ( 2) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 177 413 178 36 78 "" [1 uses])

(note 178 177 179 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 414 36 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c1, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 414 179 415 36 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 36 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 415 414 182)

;; Start of basic block ( 2) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 182 415 183 37 79 "" [1 uses])

(note 183 182 184 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 184 183 416 37 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c2, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 416 184 417 37 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 37 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 417 416 187)

;; Start of basic block ( 2) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 187 417 188 38 80 "" [1 uses])

(note 188 187 189 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 418 38 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c3, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 418 189 419 38 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 38 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 419 418 192)

;; Start of basic block ( 2) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 192 419 193 39 81 "" [1 uses])

(note 193 192 194 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 194 193 420 39 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c4, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 420 194 421 39 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 39 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 421 420 197)

;; Start of basic block ( 2) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 197 421 198 40 82 "" [1 uses])

(note 198 197 199 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 422 40 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c5, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 422 199 423 40 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 40 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 423 422 202)

;; Start of basic block ( 2) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 202 423 203 41 83 "" [1 uses])

(note 203 202 204 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 204 203 424 41 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c6, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 424 204 425 41 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 41 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 425 424 207)

;; Start of basic block ( 2) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 207 425 208 42 84 "" [1 uses])

(note 208 207 209 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 209 208 426 42 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c7, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 426 209 427 42 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 42 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 427 426 212)

;; Start of basic block ( 2) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 212 427 213 43 85 "" [1 uses])

(note 213 212 214 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 214 213 428 43 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c8, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 428 214 429 43 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 43 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 429 428 217)

;; Start of basic block ( 2) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 217 429 218 44 86 "" [1 uses])

(note 218 217 219 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 219 218 430 44 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c9, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 430 219 431 44 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 44 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 431 430 222)

;; Start of basic block ( 2) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 222 431 223 45 87 "" [1 uses])

(note 223 222 224 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 224 223 432 45 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c10, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 432 224 433 45 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 45 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 433 432 227)

;; Start of basic block ( 2) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 227 433 228 46 88 "" [1 uses])

(note 228 227 229 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 434 46 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c11, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 434 229 435 46 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 46 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 435 434 232)

;; Start of basic block ( 2) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 232 435 233 47 89 "" [1 uses])

(note 233 232 234 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 234 233 436 47 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c12, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 436 234 437 47 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 47 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 437 436 237)

;; Start of basic block ( 2) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 237 437 238 48 90 "" [1 uses])

(note 238 237 239 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 239 238 438 48 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c13, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 438 239 439 48 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 48 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 439 438 242)

;; Start of basic block ( 2) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 242 439 243 49 91 "" [1 uses])

(note 243 242 244 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 244 243 440 49 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c14, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 440 244 441 49 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 49 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 441 440 247)

;; Start of basic block ( 2) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 247 441 248 50 92 "" [1 uses])

(note 248 247 249 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 249 248 442 50 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c15, 6") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (nil))

(jump_insn 442 249 443 50 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 50 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 443 442 252)

;; Start of basic block ( 2) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 252 443 253 51 93 "" [1 uses])

(note 253 252 254 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 254 253 444 51 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c0, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 444 254 445 51 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 51 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 445 444 257)

;; Start of basic block ( 2) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 257 445 258 52 94 "" [1 uses])

(note 258 257 259 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 446 52 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c1, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 446 259 447 52 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 52 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 447 446 262)

;; Start of basic block ( 2) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 262 447 263 53 95 "" [1 uses])

(note 263 262 264 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 264 263 448 53 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c2, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 448 264 449 53 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 53 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 449 448 267)

;; Start of basic block ( 2) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 267 449 268 54 96 "" [1 uses])

(note 268 267 269 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 269 268 450 54 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c3, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 450 269 451 54 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 54 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 451 450 272)

;; Start of basic block ( 2) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 272 451 273 55 97 "" [1 uses])

(note 273 272 274 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 274 273 452 55 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c4, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 452 274 453 55 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 55 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 453 452 277)

;; Start of basic block ( 2) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 277 453 278 56 98 "" [1 uses])

(note 278 277 279 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 279 278 454 56 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c5, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 454 279 455 56 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 56 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 455 454 282)

;; Start of basic block ( 2) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 282 455 283 57 99 "" [1 uses])

(note 283 282 284 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 284 283 456 57 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c6, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 456 284 457 57 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 57 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 457 456 287)

;; Start of basic block ( 2) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 287 457 288 58 100 "" [1 uses])

(note 288 287 289 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 289 288 458 58 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c7, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 458 289 459 58 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 58 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 459 458 292)

;; Start of basic block ( 2) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 292 459 293 59 101 "" [1 uses])

(note 293 292 294 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 294 293 460 59 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c8, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 460 294 461 59 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 59 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 461 460 297)

;; Start of basic block ( 2) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 297 461 298 60 102 "" [1 uses])

(note 298 297 299 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 299 298 462 60 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c9, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 462 299 463 60 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 60 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 463 462 302)

;; Start of basic block ( 2) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 302 463 303 61 103 "" [1 uses])

(note 303 302 304 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 304 303 464 61 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c10, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 464 304 465 61 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 61 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 465 464 307)

;; Start of basic block ( 2) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 307 465 308 62 104 "" [1 uses])

(note 308 307 309 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 309 308 466 62 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c11, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 466 309 467 62 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 62 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 467 466 312)

;; Start of basic block ( 2) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 312 467 313 63 105 "" [1 uses])

(note 313 312 314 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 314 313 468 63 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c12, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 468 314 469 63 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 63 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 469 468 317)

;; Start of basic block ( 2) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 317 469 318 64 106 "" [1 uses])

(note 318 317 319 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 319 318 470 64 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c13, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 470 319 471 64 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 64 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 471 470 322)

;; Start of basic block ( 2) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 322 471 323 65 107 "" [1 uses])

(note 323 322 324 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 324 323 472 65 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c14, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 472 324 473 65 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 65 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 473 472 327)

;; Start of basic block ( 2) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 327 473 328 66 108 "" [1 uses])

(note 328 327 329 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 329 328 474 66 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c15, 7") ("") 0 [
            (reg/v:SI 1 r1 [orig:134 val ] [134])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (nil))

(jump_insn 474 329 475 66 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 66 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 475 474 332)

;; Start of basic block ( 2) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [1.5%] 
(code_label 332 475 333 67 44 "" [1 uses])

(note 333 332 336 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 336 333 335 67 arch/arm/kernel/hw_breakpoint.c:128 (set (reg:SI 1 r1)
        (reg/v:SI 0 r0 [orig:133 n ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 335 336 337 67 arch/arm/kernel/hw_breakpoint.c:128 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fe20c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fe20c0>)
        (nil)))

(call_insn 337 335 338 67 arch/arm/kernel/hw_breakpoint.c:128 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 67 -> ( 68)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  68 [100.0%]  (fallthru)

;; Start of basic block ( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  67 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  16 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  18 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  20 [100.0%] 
;; Pred edge  21 [100.0%] 
;; Pred edge  22 [100.0%] 
;; Pred edge  23 [100.0%] 
;; Pred edge  24 [100.0%] 
;; Pred edge  25 [100.0%] 
;; Pred edge  26 [100.0%] 
;; Pred edge  27 [100.0%] 
;; Pred edge  28 [100.0%] 
;; Pred edge  29 [100.0%] 
;; Pred edge  30 [100.0%] 
;; Pred edge  31 [100.0%] 
;; Pred edge  32 [100.0%] 
;; Pred edge  33 [100.0%] 
;; Pred edge  34 [100.0%] 
;; Pred edge  35 [100.0%] 
;; Pred edge  36 [100.0%] 
;; Pred edge  37 [100.0%] 
;; Pred edge  38 [100.0%] 
;; Pred edge  39 [100.0%] 
;; Pred edge  40 [100.0%] 
;; Pred edge  41 [100.0%] 
;; Pred edge  42 [100.0%] 
;; Pred edge  43 [100.0%] 
;; Pred edge  44 [100.0%] 
;; Pred edge  45 [100.0%] 
;; Pred edge  46 [100.0%] 
;; Pred edge  47 [100.0%] 
;; Pred edge  48 [100.0%] 
;; Pred edge  49 [100.0%] 
;; Pred edge  50 [100.0%] 
;; Pred edge  51 [100.0%] 
;; Pred edge  52 [100.0%] 
;; Pred edge  53 [100.0%] 
;; Pred edge  54 [100.0%] 
;; Pred edge  55 [100.0%] 
;; Pred edge  56 [100.0%] 
;; Pred edge  57 [100.0%] 
;; Pred edge  58 [100.0%] 
;; Pred edge  59 [100.0%] 
;; Pred edge  60 [100.0%] 
;; Pred edge  61 [100.0%] 
;; Pred edge  62 [100.0%] 
;; Pred edge  63 [100.0%] 
;; Pred edge  64 [100.0%] 
;; Pred edge  65 [100.0%] 
;; Pred edge  66 [100.0%] 
(code_label 338 337 339 68 110 "" [64 uses])

(note 339 338 340 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 340 339 476 68 arch/arm/kernel/hw_breakpoint.c:131 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8083478)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 68 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 476 340 477 NOTE_INSN_DELETED)

(note 477 476 0 NOTE_INSN_DELETED)


;; Function read_wb_reg (read_wb_reg)[0:1241]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:660000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:660000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 350(l0): point = 0
   Insn 344(l0): point = 2
   Insn 337(l0): point = 5
   Insn 336(l0): point = 7
   Insn 334(l0): point = 9
   Insn 335(l0): point = 11
   Insn 480(l0): point = 14
   Insn 328(l0): point = 16
   Insn 478(l0): point = 19
   Insn 323(l0): point = 21
   Insn 476(l0): point = 24
   Insn 318(l0): point = 26
   Insn 474(l0): point = 29
   Insn 313(l0): point = 31
   Insn 472(l0): point = 34
   Insn 308(l0): point = 36
   Insn 470(l0): point = 39
   Insn 303(l0): point = 41
   Insn 468(l0): point = 44
   Insn 298(l0): point = 46
   Insn 466(l0): point = 49
   Insn 293(l0): point = 51
   Insn 464(l0): point = 54
   Insn 288(l0): point = 56
   Insn 462(l0): point = 59
   Insn 283(l0): point = 61
   Insn 460(l0): point = 64
   Insn 278(l0): point = 66
   Insn 458(l0): point = 69
   Insn 273(l0): point = 71
   Insn 456(l0): point = 74
   Insn 268(l0): point = 76
   Insn 454(l0): point = 79
   Insn 263(l0): point = 81
   Insn 452(l0): point = 84
   Insn 258(l0): point = 86
   Insn 450(l0): point = 89
   Insn 253(l0): point = 91
   Insn 448(l0): point = 94
   Insn 248(l0): point = 96
   Insn 446(l0): point = 99
   Insn 243(l0): point = 101
   Insn 444(l0): point = 104
   Insn 238(l0): point = 106
   Insn 442(l0): point = 109
   Insn 233(l0): point = 111
   Insn 440(l0): point = 114
   Insn 228(l0): point = 116
   Insn 438(l0): point = 119
   Insn 223(l0): point = 121
   Insn 436(l0): point = 124
   Insn 218(l0): point = 126
   Insn 434(l0): point = 129
   Insn 213(l0): point = 131
   Insn 432(l0): point = 134
   Insn 208(l0): point = 136
   Insn 430(l0): point = 139
   Insn 203(l0): point = 141
   Insn 428(l0): point = 144
   Insn 198(l0): point = 146
   Insn 426(l0): point = 149
   Insn 193(l0): point = 151
   Insn 424(l0): point = 154
   Insn 188(l0): point = 156
   Insn 422(l0): point = 159
   Insn 183(l0): point = 161
   Insn 420(l0): point = 164
   Insn 178(l0): point = 166
   Insn 418(l0): point = 169
   Insn 173(l0): point = 171
   Insn 416(l0): point = 174
   Insn 168(l0): point = 176
   Insn 414(l0): point = 179
   Insn 163(l0): point = 181
   Insn 412(l0): point = 184
   Insn 158(l0): point = 186
   Insn 410(l0): point = 189
   Insn 153(l0): point = 191
   Insn 408(l0): point = 194
   Insn 148(l0): point = 196
   Insn 406(l0): point = 199
   Insn 143(l0): point = 201
   Insn 404(l0): point = 204
   Insn 138(l0): point = 206
   Insn 402(l0): point = 209
   Insn 133(l0): point = 211
   Insn 400(l0): point = 214
   Insn 128(l0): point = 216
   Insn 398(l0): point = 219
   Insn 123(l0): point = 221
   Insn 396(l0): point = 224
   Insn 118(l0): point = 226
   Insn 394(l0): point = 229
   Insn 113(l0): point = 231
   Insn 392(l0): point = 234
   Insn 108(l0): point = 236
   Insn 390(l0): point = 239
   Insn 103(l0): point = 241
   Insn 388(l0): point = 244
   Insn 98(l0): point = 246
   Insn 386(l0): point = 249
   Insn 93(l0): point = 251
   Insn 384(l0): point = 254
   Insn 88(l0): point = 256
   Insn 382(l0): point = 259
   Insn 83(l0): point = 261
   Insn 380(l0): point = 264
   Insn 78(l0): point = 266
   Insn 378(l0): point = 269
   Insn 73(l0): point = 271
   Insn 376(l0): point = 274
   Insn 68(l0): point = 276
   Insn 374(l0): point = 279
   Insn 63(l0): point = 281
   Insn 372(l0): point = 284
   Insn 58(l0): point = 286
   Insn 370(l0): point = 289
   Insn 53(l0): point = 291
   Insn 368(l0): point = 294
   Insn 48(l0): point = 296
   Insn 366(l0): point = 299
   Insn 43(l0): point = 301
   Insn 364(l0): point = 304
   Insn 38(l0): point = 306
   Insn 362(l0): point = 309
   Insn 33(l0): point = 311
   Insn 360(l0): point = 314
   Insn 28(l0): point = 316
   Insn 358(l0): point = 319
   Insn 23(l0): point = 321
   Insn 356(l0): point = 324
   Insn 18(l0): point = 326
   Insn 354(l0): point = 329
   Insn 13(l0): point = 331
   Insn 7(l0): point = 334
   Insn 6(l0): point = 336
   Insn 2(l0): point = 338
 a0(r133): [329..331] [324..326] [319..321] [314..316] [309..311] [304..306] [299..301] [294..296] [289..291] [284..286] [279..281] [274..276] [269..271] [264..266] [259..261] [254..256] [249..251] [244..246] [239..241] [234..236] [229..231] [224..226] [219..221] [214..216] [209..211] [204..206] [199..201] [194..196] [189..191] [184..186] [179..181] [174..176] [169..171] [164..166] [159..161] [154..156] [149..151] [144..146] [139..141] [134..136] [129..131] [124..126] [119..121] [114..116] [109..111] [104..106] [99..101] [94..96] [89..91] [84..86] [79..81] [74..76] [69..71] [64..66] [59..61] [54..56] [49..51] [44..46] [39..41] [34..36] [29..31] [24..26] [19..21] [14..16] [3..5]
 a1(r135): [334..338] [12..13]
 a2(r136): [335..336]
Compressing live ranges: from 341 to 136 - 39%
Ranges after the compression:
 a0(r133): [130..131] [128..129] [126..127] [124..125] [122..123] [120..121] [118..119] [116..117] [114..115] [112..113] [110..111] [108..109] [106..107] [104..105] [102..103] [100..101] [98..99] [96..97] [94..95] [92..93] [90..91] [88..89] [86..87] [84..85] [82..83] [80..81] [78..79] [76..77] [74..75] [72..73] [70..71] [68..69] [66..67] [64..65] [62..63] [60..61] [58..59] [56..57] [54..55] [52..53] [50..51] [48..49] [46..47] [44..45] [42..43] [40..41] [38..39] [36..37] [34..35] [32..33] [30..31] [28..29] [26..27] [24..25] [22..23] [20..21] [18..19] [16..17] [14..15] [12..13] [10..11] [8..9] [6..7] [4..5] [0..1]
 a1(r135): [132..135] [2..3]
 a2(r136): [133..134]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r133,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r135,l0) conflicts: a2(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=69, points=136
    allocnos=3, copies=0, conflicts=2, ranges=68

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 68 67 66 65 64 63 62 61 60 59 58 57 56 55 54 53 52 51 50 49 48 47 46 45 44 43 42 41 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r133 1r135 2r136
    modified regnos: 133 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a2(r136,l0)
      Pushing a1(r135,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 0
      Popping a1(r135,l0)  -- assign reg 1
      Popping a2(r136,l0)  -- assign reg 3
Disposition:
    0:r133 l0     0    1:r135 l0     1    2:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 135
insn=6, live_throughout: 13, 14, 135, dead_or_set: 136
insn=7, live_throughout: 13, 14, 135, dead_or_set: 136
insn=8, live_throughout: 13, 14, dead_or_set: 
insn=9, live_throughout: 13, 14, dead_or_set: 
insn=11, live_throughout: 13, 14, dead_or_set: 
insn=13, live_throughout: 13, 14, dead_or_set: 133
insn=354, live_throughout: 13, 14, 133, dead_or_set: 
insn=16, live_throughout: 13, 14, dead_or_set: 
insn=18, live_throughout: 13, 14, dead_or_set: 133
insn=356, live_throughout: 13, 14, 133, dead_or_set: 
insn=21, live_throughout: 13, 14, dead_or_set: 
insn=23, live_throughout: 13, 14, dead_or_set: 133
insn=358, live_throughout: 13, 14, 133, dead_or_set: 
insn=26, live_throughout: 13, 14, dead_or_set: 
insn=28, live_throughout: 13, 14, dead_or_set: 133
insn=360, live_throughout: 13, 14, 133, dead_or_set: 
insn=31, live_throughout: 13, 14, dead_or_set: 
insn=33, live_throughout: 13, 14, dead_or_set: 133
insn=362, live_throughout: 13, 14, 133, dead_or_set: 
insn=36, live_throughout: 13, 14, dead_or_set: 
insn=38, live_throughout: 13, 14, dead_or_set: 133
insn=364, live_throughout: 13, 14, 133, dead_or_set: 
insn=41, live_throughout: 13, 14, dead_or_set: 
insn=43, live_throughout: 13, 14, dead_or_set: 133
insn=366, live_throughout: 13, 14, 133, dead_or_set: 
insn=46, live_throughout: 13, 14, dead_or_set: 
insn=48, live_throughout: 13, 14, dead_or_set: 133
insn=368, live_throughout: 13, 14, 133, dead_or_set: 
insn=51, live_throughout: 13, 14, dead_or_set: 
insn=53, live_throughout: 13, 14, dead_or_set: 133
insn=370, live_throughout: 13, 14, 133, dead_or_set: 
insn=56, live_throughout: 13, 14, dead_or_set: 
insn=58, live_throughout: 13, 14, dead_or_set: 133
insn=372, live_throughout: 13, 14, 133, dead_or_set: 
insn=61, live_throughout: 13, 14, dead_or_set: 
insn=63, live_throughout: 13, 14, dead_or_set: 133
insn=374, live_throughout: 13, 14, 133, dead_or_set: 
insn=66, live_throughout: 13, 14, dead_or_set: 
insn=68, live_throughout: 13, 14, dead_or_set: 133
insn=376, live_throughout: 13, 14, 133, dead_or_set: 
insn=71, live_throughout: 13, 14, dead_or_set: 
insn=73, live_throughout: 13, 14, dead_or_set: 133
insn=378, live_throughout: 13, 14, 133, dead_or_set: 
insn=76, live_throughout: 13, 14, dead_or_set: 
insn=78, live_throughout: 13, 14, dead_or_set: 133
insn=380, live_throughout: 13, 14, 133, dead_or_set: 
insn=81, live_throughout: 13, 14, dead_or_set: 
insn=83, live_throughout: 13, 14, dead_or_set: 133
insn=382, live_throughout: 13, 14, 133, dead_or_set: 
insn=86, live_throughout: 13, 14, dead_or_set: 
insn=88, live_throughout: 13, 14, dead_or_set: 133
insn=384, live_throughout: 13, 14, 133, dead_or_set: 
insn=91, live_throughout: 13, 14, dead_or_set: 
insn=93, live_throughout: 13, 14, dead_or_set: 133
insn=386, live_throughout: 13, 14, 133, dead_or_set: 
insn=96, live_throughout: 13, 14, dead_or_set: 
insn=98, live_throughout: 13, 14, dead_or_set: 133
insn=388, live_throughout: 13, 14, 133, dead_or_set: 
insn=101, live_throughout: 13, 14, dead_or_set: 
insn=103, live_throughout: 13, 14, dead_or_set: 133
insn=390, live_throughout: 13, 14, 133, dead_or_set: 
insn=106, live_throughout: 13, 14, dead_or_set: 
insn=108, live_throughout: 13, 14, dead_or_set: 133
insn=392, live_throughout: 13, 14, 133, dead_or_set: 
insn=111, live_throughout: 13, 14, dead_or_set: 
insn=113, live_throughout: 13, 14, dead_or_set: 133
insn=394, live_throughout: 13, 14, 133, dead_or_set: 
insn=116, live_throughout: 13, 14, dead_or_set: 
insn=118, live_throughout: 13, 14, dead_or_set: 133
insn=396, live_throughout: 13, 14, 133, dead_or_set: 
insn=121, live_throughout: 13, 14, dead_or_set: 
insn=123, live_throughout: 13, 14, dead_or_set: 133
insn=398, live_throughout: 13, 14, 133, dead_or_set: 
insn=126, live_throughout: 13, 14, dead_or_set: 
insn=128, live_throughout: 13, 14, dead_or_set: 133
insn=400, live_throughout: 13, 14, 133, dead_or_set: 
insn=131, live_throughout: 13, 14, dead_or_set: 
insn=133, live_throughout: 13, 14, dead_or_set: 133
insn=402, live_throughout: 13, 14, 133, dead_or_set: 
insn=136, live_throughout: 13, 14, dead_or_set: 
insn=138, live_throughout: 13, 14, dead_or_set: 133
insn=404, live_throughout: 13, 14, 133, dead_or_set: 
insn=141, live_throughout: 13, 14, dead_or_set: 
insn=143, live_throughout: 13, 14, dead_or_set: 133
insn=406, live_throughout: 13, 14, 133, dead_or_set: 
insn=146, live_throughout: 13, 14, dead_or_set: 
insn=148, live_throughout: 13, 14, dead_or_set: 133
insn=408, live_throughout: 13, 14, 133, dead_or_set: 
insn=151, live_throughout: 13, 14, dead_or_set: 
insn=153, live_throughout: 13, 14, dead_or_set: 133
insn=410, live_throughout: 13, 14, 133, dead_or_set: 
insn=156, live_throughout: 13, 14, dead_or_set: 
insn=158, live_throughout: 13, 14, dead_or_set: 133
insn=412, live_throughout: 13, 14, 133, dead_or_set: 
insn=161, live_throughout: 13, 14, dead_or_set: 
insn=163, live_throughout: 13, 14, dead_or_set: 133
insn=414, live_throughout: 13, 14, 133, dead_or_set: 
insn=166, live_throughout: 13, 14, dead_or_set: 
insn=168, live_throughout: 13, 14, dead_or_set: 133
insn=416, live_throughout: 13, 14, 133, dead_or_set: 
insn=171, live_throughout: 13, 14, dead_or_set: 
insn=173, live_throughout: 13, 14, dead_or_set: 133
insn=418, live_throughout: 13, 14, 133, dead_or_set: 
insn=176, live_throughout: 13, 14, dead_or_set: 
insn=178, live_throughout: 13, 14, dead_or_set: 133
insn=420, live_throughout: 13, 14, 133, dead_or_set: 
insn=181, live_throughout: 13, 14, dead_or_set: 
insn=183, live_throughout: 13, 14, dead_or_set: 133
insn=422, live_throughout: 13, 14, 133, dead_or_set: 
insn=186, live_throughout: 13, 14, dead_or_set: 
insn=188, live_throughout: 13, 14, dead_or_set: 133
insn=424, live_throughout: 13, 14, 133, dead_or_set: 
insn=191, live_throughout: 13, 14, dead_or_set: 
insn=193, live_throughout: 13, 14, dead_or_set: 133
insn=426, live_throughout: 13, 14, 133, dead_or_set: 
insn=196, live_throughout: 13, 14, dead_or_set: 
insn=198, live_throughout: 13, 14, dead_or_set: 133
insn=428, live_throughout: 13, 14, 133, dead_or_set: 
insn=201, live_throughout: 13, 14, dead_or_set: 
insn=203, live_throughout: 13, 14, dead_or_set: 133
insn=430, live_throughout: 13, 14, 133, dead_or_set: 
insn=206, live_throughout: 13, 14, dead_or_set: 
insn=208, live_throughout: 13, 14, dead_or_set: 133
insn=432, live_throughout: 13, 14, 133, dead_or_set: 
insn=211, live_throughout: 13, 14, dead_or_set: 
insn=213, live_throughout: 13, 14, dead_or_set: 133
insn=434, live_throughout: 13, 14, 133, dead_or_set: 
insn=216, live_throughout: 13, 14, dead_or_set: 
insn=218, live_throughout: 13, 14, dead_or_set: 133
insn=436, live_throughout: 13, 14, 133, dead_or_set: 
insn=221, live_throughout: 13, 14, dead_or_set: 
insn=223, live_throughout: 13, 14, dead_or_set: 133
insn=438, live_throughout: 13, 14, 133, dead_or_set: 
insn=226, live_throughout: 13, 14, dead_or_set: 
insn=228, live_throughout: 13, 14, dead_or_set: 133
insn=440, live_throughout: 13, 14, 133, dead_or_set: 
insn=231, live_throughout: 13, 14, dead_or_set: 
insn=233, live_throughout: 13, 14, dead_or_set: 133
insn=442, live_throughout: 13, 14, 133, dead_or_set: 
insn=236, live_throughout: 13, 14, dead_or_set: 
insn=238, live_throughout: 13, 14, dead_or_set: 133
insn=444, live_throughout: 13, 14, 133, dead_or_set: 
insn=241, live_throughout: 13, 14, dead_or_set: 
insn=243, live_throughout: 13, 14, dead_or_set: 133
insn=446, live_throughout: 13, 14, 133, dead_or_set: 
insn=246, live_throughout: 13, 14, dead_or_set: 
insn=248, live_throughout: 13, 14, dead_or_set: 133
insn=448, live_throughout: 13, 14, 133, dead_or_set: 
insn=251, live_throughout: 13, 14, dead_or_set: 
insn=253, live_throughout: 13, 14, dead_or_set: 133
insn=450, live_throughout: 13, 14, 133, dead_or_set: 
insn=256, live_throughout: 13, 14, dead_or_set: 
insn=258, live_throughout: 13, 14, dead_or_set: 133
insn=452, live_throughout: 13, 14, 133, dead_or_set: 
insn=261, live_throughout: 13, 14, dead_or_set: 
insn=263, live_throughout: 13, 14, dead_or_set: 133
insn=454, live_throughout: 13, 14, 133, dead_or_set: 
insn=266, live_throughout: 13, 14, dead_or_set: 
insn=268, live_throughout: 13, 14, dead_or_set: 133
insn=456, live_throughout: 13, 14, 133, dead_or_set: 
insn=271, live_throughout: 13, 14, dead_or_set: 
insn=273, live_throughout: 13, 14, dead_or_set: 133
insn=458, live_throughout: 13, 14, 133, dead_or_set: 
insn=276, live_throughout: 13, 14, dead_or_set: 
insn=278, live_throughout: 13, 14, dead_or_set: 133
insn=460, live_throughout: 13, 14, 133, dead_or_set: 
insn=281, live_throughout: 13, 14, dead_or_set: 
insn=283, live_throughout: 13, 14, dead_or_set: 133
insn=462, live_throughout: 13, 14, 133, dead_or_set: 
insn=286, live_throughout: 13, 14, dead_or_set: 
insn=288, live_throughout: 13, 14, dead_or_set: 133
insn=464, live_throughout: 13, 14, 133, dead_or_set: 
insn=291, live_throughout: 13, 14, dead_or_set: 
insn=293, live_throughout: 13, 14, dead_or_set: 133
insn=466, live_throughout: 13, 14, 133, dead_or_set: 
insn=296, live_throughout: 13, 14, dead_or_set: 
insn=298, live_throughout: 13, 14, dead_or_set: 133
insn=468, live_throughout: 13, 14, 133, dead_or_set: 
insn=301, live_throughout: 13, 14, dead_or_set: 
insn=303, live_throughout: 13, 14, dead_or_set: 133
insn=470, live_throughout: 13, 14, 133, dead_or_set: 
insn=306, live_throughout: 13, 14, dead_or_set: 
insn=308, live_throughout: 13, 14, dead_or_set: 133
insn=472, live_throughout: 13, 14, 133, dead_or_set: 
insn=311, live_throughout: 13, 14, dead_or_set: 
insn=313, live_throughout: 13, 14, dead_or_set: 133
insn=474, live_throughout: 13, 14, 133, dead_or_set: 
insn=316, live_throughout: 13, 14, dead_or_set: 
insn=318, live_throughout: 13, 14, dead_or_set: 133
insn=476, live_throughout: 13, 14, 133, dead_or_set: 
insn=321, live_throughout: 13, 14, dead_or_set: 
insn=323, live_throughout: 13, 14, dead_or_set: 133
insn=478, live_throughout: 13, 14, 133, dead_or_set: 
insn=326, live_throughout: 13, 14, dead_or_set: 
insn=328, live_throughout: 13, 14, dead_or_set: 133
insn=480, live_throughout: 13, 14, 133, dead_or_set: 
insn=331, live_throughout: 13, 135, dead_or_set: 
insn=335, live_throughout: 13, dead_or_set: 1, 135
insn=334, live_throughout: 1, 13, dead_or_set: 0
insn=336, live_throughout: 13, dead_or_set: 0, 1, 14
insn=337, live_throughout: 13, 14, dead_or_set: 133
insn=338, live_throughout: 13, 14, 133, dead_or_set: 
insn=344, live_throughout: 13, 14, dead_or_set: 0, 133
insn=350, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 337
changing reg in insn 328
changing reg in insn 323
changing reg in insn 318
changing reg in insn 313
changing reg in insn 308
changing reg in insn 303
changing reg in insn 298
changing reg in insn 293
changing reg in insn 288
changing reg in insn 283
changing reg in insn 278
changing reg in insn 273
changing reg in insn 268
changing reg in insn 263
changing reg in insn 258
changing reg in insn 253
changing reg in insn 248
changing reg in insn 243
changing reg in insn 238
changing reg in insn 233
changing reg in insn 228
changing reg in insn 223
changing reg in insn 218
changing reg in insn 213
changing reg in insn 208
changing reg in insn 203
changing reg in insn 198
changing reg in insn 193
changing reg in insn 188
changing reg in insn 183
changing reg in insn 178
changing reg in insn 173
changing reg in insn 168
changing reg in insn 163
changing reg in insn 158
changing reg in insn 153
changing reg in insn 148
changing reg in insn 143
changing reg in insn 138
changing reg in insn 133
changing reg in insn 128
changing reg in insn 123
changing reg in insn 118
changing reg in insn 113
changing reg in insn 108
changing reg in insn 103
changing reg in insn 98
changing reg in insn 93
changing reg in insn 88
changing reg in insn 83
changing reg in insn 78
changing reg in insn 73
changing reg in insn 68
changing reg in insn 63
changing reg in insn 58
changing reg in insn 53
changing reg in insn 48
changing reg in insn 43
changing reg in insn 38
changing reg in insn 33
changing reg in insn 28
changing reg in insn 23
changing reg in insn 18
changing reg in insn 13
changing reg in insn 344
changing reg in insn 2
changing reg in insn 335
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
deleting insn with uid = 335.
deleting insn with uid = 344.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 336.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 69 n_edges 132 count 136 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 69 n_edges 132 count 136 (    2)


read_wb_reg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={68d,4u} r1={3d,2u} r2={2d} r3={3d,2u} r12={2d} r13={1d,69u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 271{193d,78u,0e} in 135{134 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 6 2 arch/arm/kernel/hw_breakpoint.c:104 (set (reg/v:SI 1 r1 [orig:135 n ] [135])
        (reg:SI 0 r0 [ n ])) 167 {*arm_movsi_insn} (nil))

(insn 6 2 7 2 arch/arm/kernel/hw_breakpoint.c:107 (set (reg:SI 3 r3 [136])
        (plus:SI (reg/v:SI 1 r1 [orig:135 n ] [135])
            (const_int -64 [0xffffffffffffffc0]))) 4 {*arm_addsi3} (nil))

(jump_insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:107 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [136])
                        (const_int 63 [0x3f]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [136])
                                (const_int 4 [0x4]))
                            (label_ref 8)) [0 S4 A32])
                    (label_ref 331)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 8))
        ]) 265 {arm_casesi_internal} (insn_list:REG_LABEL_TARGET 331 (nil)))
;; End of basic block 2 -> ( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66)
;; lr  out 	 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  67 [1.5%] 
;; Succ edge  3 [1.5%] 
;; Succ edge  4 [1.5%] 
;; Succ edge  5 [1.5%] 
;; Succ edge  6 [1.5%] 
;; Succ edge  7 [1.5%] 
;; Succ edge  8 [1.5%] 
;; Succ edge  9 [1.5%] 
;; Succ edge  10 [1.5%] 
;; Succ edge  11 [1.5%] 
;; Succ edge  12 [1.5%] 
;; Succ edge  13 [1.5%] 
;; Succ edge  14 [1.5%] 
;; Succ edge  15 [1.5%] 
;; Succ edge  16 [1.5%] 
;; Succ edge  17 [1.5%] 
;; Succ edge  18 [1.5%] 
;; Succ edge  19 [1.5%] 
;; Succ edge  20 [1.5%] 
;; Succ edge  21 [1.5%] 
;; Succ edge  22 [1.5%] 
;; Succ edge  23 [1.5%] 
;; Succ edge  24 [1.5%] 
;; Succ edge  25 [1.5%] 
;; Succ edge  26 [1.5%] 
;; Succ edge  27 [1.5%] 
;; Succ edge  28 [1.5%] 
;; Succ edge  29 [1.5%] 
;; Succ edge  30 [1.5%] 
;; Succ edge  31 [1.5%] 
;; Succ edge  32 [1.5%] 
;; Succ edge  33 [1.5%] 
;; Succ edge  34 [1.5%] 
;; Succ edge  35 [1.5%] 
;; Succ edge  36 [1.5%] 
;; Succ edge  37 [1.5%] 
;; Succ edge  38 [1.5%] 
;; Succ edge  39 [1.5%] 
;; Succ edge  40 [1.5%] 
;; Succ edge  41 [1.5%] 
;; Succ edge  42 [1.5%] 
;; Succ edge  43 [1.5%] 
;; Succ edge  44 [1.5%] 
;; Succ edge  45 [1.5%] 
;; Succ edge  46 [1.5%] 
;; Succ edge  47 [1.5%] 
;; Succ edge  48 [1.5%] 
;; Succ edge  49 [1.5%] 
;; Succ edge  50 [1.5%] 
;; Succ edge  51 [1.5%] 
;; Succ edge  52 [1.5%] 
;; Succ edge  53 [1.5%] 
;; Succ edge  54 [1.5%] 
;; Succ edge  55 [1.5%] 
;; Succ edge  56 [1.5%] 
;; Succ edge  57 [1.5%] 
;; Succ edge  58 [1.5%] 
;; Succ edge  59 [1.5%] 
;; Succ edge  60 [1.5%] 
;; Succ edge  61 [1.5%] 
;; Succ edge  62 [1.5%] 
;; Succ edge  63 [1.5%] 
;; Succ edge  64 [1.5%] 
;; Succ edge  65 [1.5%] 
;; Succ edge  66 [1.5%] 

;; Insn is not within a basic block
(code_label 8 7 9 180 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 9 8 10 arch/arm/kernel/hw_breakpoint.c:107 (addr_vec:SI [
            (label_ref:SI 11)
            (label_ref:SI 16)
            (label_ref:SI 21)
            (label_ref:SI 26)
            (label_ref:SI 31)
            (label_ref:SI 36)
            (label_ref:SI 41)
            (label_ref:SI 46)
            (label_ref:SI 51)
            (label_ref:SI 56)
            (label_ref:SI 61)
            (label_ref:SI 66)
            (label_ref:SI 71)
            (label_ref:SI 76)
            (label_ref:SI 81)
            (label_ref:SI 86)
            (label_ref:SI 91)
            (label_ref:SI 96)
            (label_ref:SI 101)
            (label_ref:SI 106)
            (label_ref:SI 111)
            (label_ref:SI 116)
            (label_ref:SI 121)
            (label_ref:SI 126)
            (label_ref:SI 131)
            (label_ref:SI 136)
            (label_ref:SI 141)
            (label_ref:SI 146)
            (label_ref:SI 151)
            (label_ref:SI 156)
            (label_ref:SI 161)
            (label_ref:SI 166)
            (label_ref:SI 171)
            (label_ref:SI 176)
            (label_ref:SI 181)
            (label_ref:SI 186)
            (label_ref:SI 191)
            (label_ref:SI 196)
            (label_ref:SI 201)
            (label_ref:SI 206)
            (label_ref:SI 211)
            (label_ref:SI 216)
            (label_ref:SI 221)
            (label_ref:SI 226)
            (label_ref:SI 231)
            (label_ref:SI 236)
            (label_ref:SI 241)
            (label_ref:SI 246)
            (label_ref:SI 251)
            (label_ref:SI 256)
            (label_ref:SI 261)
            (label_ref:SI 266)
            (label_ref:SI 271)
            (label_ref:SI 276)
            (label_ref:SI 281)
            (label_ref:SI 286)
            (label_ref:SI 291)
            (label_ref:SI 296)
            (label_ref:SI 301)
            (label_ref:SI 306)
            (label_ref:SI 311)
            (label_ref:SI 316)
            (label_ref:SI 321)
            (label_ref:SI 326)
        ]) -1 (nil))

(barrier 10 9 11)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 11 10 12 3 116 "" [1 uses])

(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 354 3 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 354 13 355 3 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 355 354 16)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 16 355 17 4 117 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 356 4 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 356 18 357 4 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 357 356 21)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 21 357 22 5 118 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 358 5 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c2, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 358 23 359 5 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 359 358 26)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 26 359 27 6 119 "" [1 uses])

(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 360 6 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c3, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 360 28 361 6 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 361 360 31)

;; Start of basic block ( 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 31 361 32 7 120 "" [1 uses])

(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 362 7 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c4, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 362 33 363 7 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 363 362 36)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 36 363 37 8 121 "" [1 uses])

(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 364 8 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c5, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 364 38 365 8 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 365 364 41)

;; Start of basic block ( 2) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 41 365 42 9 122 "" [1 uses])

(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 366 9 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c6, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 366 43 367 9 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 367 366 46)

;; Start of basic block ( 2) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 46 367 47 10 123 "" [1 uses])

(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 368 10 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c7, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 368 48 369 10 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 369 368 51)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 51 369 52 11 124 "" [1 uses])

(note 52 51 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 370 11 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c8, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 370 53 371 11 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 371 370 56)

;; Start of basic block ( 2) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 56 371 57 12 125 "" [1 uses])

(note 57 56 58 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 372 12 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c9, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 372 58 373 12 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 373 372 61)

;; Start of basic block ( 2) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 61 373 62 13 126 "" [1 uses])

(note 62 61 63 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 374 13 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c10, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 374 63 375 13 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 375 374 66)

;; Start of basic block ( 2) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 66 375 67 14 127 "" [1 uses])

(note 67 66 68 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 376 14 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c11, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 376 68 377 14 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 377 376 71)

;; Start of basic block ( 2) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 71 377 72 15 128 "" [1 uses])

(note 72 71 73 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 378 15 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c12, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 378 73 379 15 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 379 378 76)

;; Start of basic block ( 2) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 76 379 77 16 129 "" [1 uses])

(note 77 76 78 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 380 16 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c13, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 380 78 381 16 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 381 380 81)

;; Start of basic block ( 2) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 81 381 82 17 130 "" [1 uses])

(note 82 81 83 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 382 17 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c14, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 382 83 383 17 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 17 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 383 382 86)

;; Start of basic block ( 2) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 86 383 87 18 131 "" [1 uses])

(note 87 86 88 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 384 18 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c15, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 384 88 385 18 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 385 384 91)

;; Start of basic block ( 2) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 91 385 92 19 132 "" [1 uses])

(note 92 91 93 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 386 19 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 386 93 387 19 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 387 386 96)

;; Start of basic block ( 2) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 96 387 97 20 133 "" [1 uses])

(note 97 96 98 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 388 20 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 388 98 389 20 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 20 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 389 388 101)

;; Start of basic block ( 2) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 101 389 102 21 134 "" [1 uses])

(note 102 101 103 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 390 21 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c2, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 390 103 391 21 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 21 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 391 390 106)

;; Start of basic block ( 2) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 106 391 107 22 135 "" [1 uses])

(note 107 106 108 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 392 22 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c3, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 392 108 393 22 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 393 392 111)

;; Start of basic block ( 2) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 111 393 112 23 136 "" [1 uses])

(note 112 111 113 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 394 23 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c4, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 394 113 395 23 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 395 394 116)

;; Start of basic block ( 2) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 116 395 117 24 137 "" [1 uses])

(note 117 116 118 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 396 24 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c5, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 396 118 397 24 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 24 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 397 396 121)

;; Start of basic block ( 2) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 121 397 122 25 138 "" [1 uses])

(note 122 121 123 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 398 25 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c6, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 398 123 399 25 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 399 398 126)

;; Start of basic block ( 2) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 126 399 127 26 139 "" [1 uses])

(note 127 126 128 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 400 26 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c7, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 400 128 401 26 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 26 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 401 400 131)

;; Start of basic block ( 2) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 131 401 132 27 140 "" [1 uses])

(note 132 131 133 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 402 27 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c8, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 402 133 403 27 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 27 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 403 402 136)

;; Start of basic block ( 2) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 136 403 137 28 141 "" [1 uses])

(note 137 136 138 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 404 28 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c9, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 404 138 405 28 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 28 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 405 404 141)

;; Start of basic block ( 2) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 141 405 142 29 142 "" [1 uses])

(note 142 141 143 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 406 29 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c10, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 406 143 407 29 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 29 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 407 406 146)

;; Start of basic block ( 2) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 146 407 147 30 143 "" [1 uses])

(note 147 146 148 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 408 30 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c11, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 408 148 409 30 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 30 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 409 408 151)

;; Start of basic block ( 2) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 151 409 152 31 144 "" [1 uses])

(note 152 151 153 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 410 31 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c12, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 410 153 411 31 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 411 410 156)

;; Start of basic block ( 2) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 156 411 157 32 145 "" [1 uses])

(note 157 156 158 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 412 32 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c13, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 412 158 413 32 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 32 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 413 412 161)

;; Start of basic block ( 2) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 161 413 162 33 146 "" [1 uses])

(note 162 161 163 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 414 33 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c14, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 414 163 415 33 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 33 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 415 414 166)

;; Start of basic block ( 2) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 166 415 167 34 147 "" [1 uses])

(note 167 166 168 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 168 167 416 34 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c15, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 416 168 417 34 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 34 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 417 416 171)

;; Start of basic block ( 2) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 171 417 172 35 148 "" [1 uses])

(note 172 171 173 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 173 172 418 35 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 418 173 419 35 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 35 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 419 418 176)

;; Start of basic block ( 2) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 176 419 177 36 149 "" [1 uses])

(note 177 176 178 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 178 177 420 36 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 420 178 421 36 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 36 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 421 420 181)

;; Start of basic block ( 2) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 181 421 182 37 150 "" [1 uses])

(note 182 181 183 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 422 37 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c2, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 422 183 423 37 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 37 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 423 422 186)

;; Start of basic block ( 2) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 186 423 187 38 151 "" [1 uses])

(note 187 186 188 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 424 38 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c3, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 424 188 425 38 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 38 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 425 424 191)

;; Start of basic block ( 2) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 191 425 192 39 152 "" [1 uses])

(note 192 191 193 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 426 39 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c4, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 426 193 427 39 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 39 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 427 426 196)

;; Start of basic block ( 2) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 196 427 197 40 153 "" [1 uses])

(note 197 196 198 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 428 40 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c5, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 428 198 429 40 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 40 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 429 428 201)

;; Start of basic block ( 2) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 201 429 202 41 154 "" [1 uses])

(note 202 201 203 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 203 202 430 41 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c6, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 430 203 431 41 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 41 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 431 430 206)

;; Start of basic block ( 2) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 206 431 207 42 155 "" [1 uses])

(note 207 206 208 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 432 42 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c7, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 432 208 433 42 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 42 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 433 432 211)

;; Start of basic block ( 2) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 211 433 212 43 156 "" [1 uses])

(note 212 211 213 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 213 212 434 43 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c8, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 434 213 435 43 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 43 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 435 434 216)

;; Start of basic block ( 2) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 216 435 217 44 157 "" [1 uses])

(note 217 216 218 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 218 217 436 44 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c9, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 436 218 437 44 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 44 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 437 436 221)

;; Start of basic block ( 2) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 221 437 222 45 158 "" [1 uses])

(note 222 221 223 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 438 45 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c10, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 438 223 439 45 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 45 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 439 438 226)

;; Start of basic block ( 2) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 226 439 227 46 159 "" [1 uses])

(note 227 226 228 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 228 227 440 46 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c11, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 440 228 441 46 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 46 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 441 440 231)

;; Start of basic block ( 2) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 231 441 232 47 160 "" [1 uses])

(note 232 231 233 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 233 232 442 47 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c12, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 442 233 443 47 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 47 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 443 442 236)

;; Start of basic block ( 2) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 236 443 237 48 161 "" [1 uses])

(note 237 236 238 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 444 48 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c13, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 444 238 445 48 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 48 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 445 444 241)

;; Start of basic block ( 2) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 241 445 242 49 162 "" [1 uses])

(note 242 241 243 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 446 49 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c14, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 446 243 447 49 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 49 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 447 446 246)

;; Start of basic block ( 2) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 246 447 247 50 163 "" [1 uses])

(note 247 246 248 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 248 247 448 50 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c15, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 448 248 449 50 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 50 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 449 448 251)

;; Start of basic block ( 2) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 251 449 252 51 164 "" [1 uses])

(note 252 251 253 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 450 51 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 450 253 451 51 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 51 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 451 450 256)

;; Start of basic block ( 2) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 256 451 257 52 165 "" [1 uses])

(note 257 256 258 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 258 257 452 52 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 452 258 453 52 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 52 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 453 452 261)

;; Start of basic block ( 2) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 261 453 262 53 166 "" [1 uses])

(note 262 261 263 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 263 262 454 53 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c2, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 454 263 455 53 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 53 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 455 454 266)

;; Start of basic block ( 2) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 266 455 267 54 167 "" [1 uses])

(note 267 266 268 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 268 267 456 54 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c3, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 456 268 457 54 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 54 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 457 456 271)

;; Start of basic block ( 2) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 271 457 272 55 168 "" [1 uses])

(note 272 271 273 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 273 272 458 55 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c4, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 458 273 459 55 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 55 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 459 458 276)

;; Start of basic block ( 2) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 276 459 277 56 169 "" [1 uses])

(note 277 276 278 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 278 277 460 56 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c5, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 460 278 461 56 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 56 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 461 460 281)

;; Start of basic block ( 2) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 281 461 282 57 170 "" [1 uses])

(note 282 281 283 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 283 282 462 57 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c6, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 462 283 463 57 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 57 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 463 462 286)

;; Start of basic block ( 2) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 286 463 287 58 171 "" [1 uses])

(note 287 286 288 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 288 287 464 58 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c7, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 464 288 465 58 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 58 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 465 464 291)

;; Start of basic block ( 2) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 291 465 292 59 172 "" [1 uses])

(note 292 291 293 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 293 292 466 59 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c8, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 466 293 467 59 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 59 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 467 466 296)

;; Start of basic block ( 2) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 296 467 297 60 173 "" [1 uses])

(note 297 296 298 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 298 297 468 60 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c9, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 468 298 469 60 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 60 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 469 468 301)

;; Start of basic block ( 2) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 301 469 302 61 174 "" [1 uses])

(note 302 301 303 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 303 302 470 61 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c10, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 470 303 471 61 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 61 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 471 470 306)

;; Start of basic block ( 2) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 306 471 307 62 175 "" [1 uses])

(note 307 306 308 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 308 307 472 62 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c11, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 472 308 473 62 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 62 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 473 472 311)

;; Start of basic block ( 2) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 311 473 312 63 176 "" [1 uses])

(note 312 311 313 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 313 312 474 63 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c12, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 474 313 475 63 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 63 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 475 474 316)

;; Start of basic block ( 2) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 316 475 317 64 177 "" [1 uses])

(note 317 316 318 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 318 317 476 64 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c13, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 476 318 477 64 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 64 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 477 476 321)

;; Start of basic block ( 2) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 321 477 322 65 178 "" [1 uses])

(note 322 321 323 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 323 322 478 65 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c14, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 478 323 479 65 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 65 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 479 478 326)

;; Start of basic block ( 2) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [1.5%] 
(code_label 326 479 327 66 179 "" [1 uses])

(note 327 326 328 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 328 327 480 66 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c15, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 480 328 481 66 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) 242 {*arm_jump} (nil))
;; End of basic block 66 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  68 [100.0%] 

(barrier 481 480 331)

;; Start of basic block ( 2) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [1.5%] 
(code_label 331 481 332 67 115 "" [1 uses])

(note 332 331 334 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 334 332 336 67 arch/arm/kernel/hw_breakpoint.c:113 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10ffc6c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10ffc6c0>)
        (nil)))

(call_insn 336 334 337 67 arch/arm/kernel/hw_breakpoint.c:113 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 337 336 338 67 arch/arm/kernel/hw_breakpoint.c:105 (set (reg/v:SI 0 r0 [orig:133 val ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 67 -> ( 68)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  68 [100.0%]  (fallthru)

;; Start of basic block ( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  67 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  16 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  18 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  20 [100.0%] 
;; Pred edge  21 [100.0%] 
;; Pred edge  22 [100.0%] 
;; Pred edge  23 [100.0%] 
;; Pred edge  24 [100.0%] 
;; Pred edge  25 [100.0%] 
;; Pred edge  26 [100.0%] 
;; Pred edge  27 [100.0%] 
;; Pred edge  28 [100.0%] 
;; Pred edge  29 [100.0%] 
;; Pred edge  30 [100.0%] 
;; Pred edge  31 [100.0%] 
;; Pred edge  32 [100.0%] 
;; Pred edge  33 [100.0%] 
;; Pred edge  34 [100.0%] 
;; Pred edge  35 [100.0%] 
;; Pred edge  36 [100.0%] 
;; Pred edge  37 [100.0%] 
;; Pred edge  38 [100.0%] 
;; Pred edge  39 [100.0%] 
;; Pred edge  40 [100.0%] 
;; Pred edge  41 [100.0%] 
;; Pred edge  42 [100.0%] 
;; Pred edge  43 [100.0%] 
;; Pred edge  44 [100.0%] 
;; Pred edge  45 [100.0%] 
;; Pred edge  46 [100.0%] 
;; Pred edge  47 [100.0%] 
;; Pred edge  48 [100.0%] 
;; Pred edge  49 [100.0%] 
;; Pred edge  50 [100.0%] 
;; Pred edge  51 [100.0%] 
;; Pred edge  52 [100.0%] 
;; Pred edge  53 [100.0%] 
;; Pred edge  54 [100.0%] 
;; Pred edge  55 [100.0%] 
;; Pred edge  56 [100.0%] 
;; Pred edge  57 [100.0%] 
;; Pred edge  58 [100.0%] 
;; Pred edge  59 [100.0%] 
;; Pred edge  60 [100.0%] 
;; Pred edge  61 [100.0%] 
;; Pred edge  62 [100.0%] 
;; Pred edge  63 [100.0%] 
;; Pred edge  64 [100.0%] 
;; Pred edge  65 [100.0%] 
;; Pred edge  66 [100.0%] 
(code_label 338 337 339 68 181 "" [64 uses])

(note 339 338 350 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 350 339 482 68 arch/arm/kernel/hw_breakpoint.c:118 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 68 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 482 350 483 NOTE_INSN_DELETED)

(note 483 482 0 NOTE_INSN_DELETED)


;; Function dbg_reset_notify (dbg_reset_notify)[0:1269] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 29(l0): point = 0
   Insn 23(l0): point = 2
   Insn 16(l0): point = 5
   Insn 15(l0): point = 7
   Insn 14(l0): point = 9
   Insn 13(l0): point = 11
   Insn 12(l0): point = 13
   Insn 9(l0): point = 16
   Insn 4(l0): point = 18
   Insn 8(l0): point = 20
 a0(r136): [14..18]
Compressing live ranges: from 23 to 2 - 8%
Ranges after the compression:
 a0(r136): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r136,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=5, points=2
    allocnos=1, copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r136
    modified regnos: 136
    border:
    Pressure: GENERAL_REGS=5
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 2
Disposition:
    0:r136 l0     2
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=8, live_throughout: 2, 13, 14, dead_or_set: 1
insn=4, live_throughout: 13, 14, 24, dead_or_set: 2, 136
insn=9, live_throughout: 13, 14, 136, dead_or_set: 
insn=12, live_throughout: 13, dead_or_set: 0, 136
insn=13, live_throughout: 0, 13, dead_or_set: 1
insn=14, live_throughout: 0, 1, 13, dead_or_set: 2
insn=15, live_throughout: 0, 1, 2, 13, dead_or_set: 3
insn=16, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=17, live_throughout: 13, 14, dead_or_set: 
insn=23, live_throughout: 13, 14, dead_or_set: 0
insn=29, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 4
changing reg in insn 12
deleting insn with uid = 4.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


dbg_reset_notify

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={3d,2u} r3={3d,1u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{130d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 6 5 2 NOTE_INSN_DELETED)

(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/hw_breakpoint.c:896 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [ action ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:896 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8010 [0x1f4a])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  3 [19.9%]  (fallthru)
;; Succ edge  4 [80.1%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  2 [19.9%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 13 3 arch/arm/kernel/hw_breakpoint.c:897 (set (reg:SI 0 r0)
        (reg/v/f:SI 2 r2 [orig:136 cpu ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 13 12 14 3 arch/arm/kernel/hw_breakpoint.c:897 (set (reg:SI 1 r1)
        (symbol_ref:SI ("reset_ctrl_regs") [flags 0x3] <function_decl 0x1141ad80 reset_ctrl_regs>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("reset_ctrl_regs") [flags 0x3] <function_decl 0x1141ad80 reset_ctrl_regs>)
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/hw_breakpoint.c:897 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/kernel/hw_breakpoint.c:897 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 3 arch/arm/kernel/hw_breakpoint.c:897 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("smp_call_function_single") [flags 0x41] <function_decl 0x10cc8280 smp_call_function_single>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [80.1%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 186 "" [1 uses])

(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 18 29 4 arch/arm/kernel/hw_breakpoint.c:899 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 29 23 33 4 arch/arm/kernel/hw_breakpoint.c:899 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 33 29 34 NOTE_INSN_DELETED)

(note 34 33 0 NOTE_INSN_DELETED)


;; Function get_debug_arch (get_debug_arch)[0:1243]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r148: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a4(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 56(l0): point = 0
   Insn 50(l0): point = 2
   Insn 43(l0): point = 5
   Insn 40(l0): point = 7
   Insn 62(l0): point = 10
   Insn 35(l0): point = 12
   Insn 34(l0): point = 14
   Insn 32(l0): point = 16
   Insn 30(l0): point = 18
   Insn 29(l0): point = 20
   Insn 28(l0): point = 22
   Insn 27(l0): point = 24
   Insn 60(l0): point = 27
   Insn 20(l0): point = 29
   Insn 18(l0): point = 32
   Insn 17(l0): point = 34
   Insn 12(l0): point = 36
   Insn 11(l0): point = 38
   Insn 9(l0): point = 41
   Insn 8(l0): point = 43
   Insn 7(l0): point = 45
   Insn 5(l0): point = 47
 a0(r135): [27..29] [10..12] [3..5]
 a1(r134): [6..7]
 a2(r148): [13..16]
 a3(r139): [32..38] [15..26]
 a4(r141): [35..36]
 a5(r138): [44..45]
 a6(r133): [46..47]
Compressing live ranges: from 50 to 20 - 40%
Ranges after the compression:
 a0(r135): [10..11] [4..5] [0..1]
 a1(r134): [2..3]
 a2(r148): [6..8]
 a3(r139): [12..15] [7..9]
 a4(r141): [13..14]
 a5(r138): [16..17]
 a6(r133): [18..19]
+++Allocating 40 bytes for conflict table (uncompressed size 56)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r134,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r148,l0) conflicts: a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r139,l0) conflicts: a2(r148,l0) a4(r141,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a4(r141,l0) conflicts: a3(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r138,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r133,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r135)<->a1(r134)@125:shuffle
  cp1:a0(r135)<->a2(r148)@1000:move
  cp2:a5(r138)<->a6(r133)@125:shuffle
  regions=1, blocks=8, points=20
    allocnos=7, copies=3, conflicts=2, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r135 1r134 2r148 3r139 4r141 5r138 6r133
    modified regnos: 133 134 135 138 139 141 148
    border:
    Pressure: GENERAL_REGS=5
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
      Pushing a6(r133,l0)
      Pushing a5(r138,l0)
      Pushing a4(r141,l0)
      Pushing a1(r134,l0)
      Pushing a2(r148,l0)
      Pushing a0(r135,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 4
      Popping a0(r135,l0)  -- assign reg 0
      Popping a2(r148,l0)  -- assign reg 0
      Popping a1(r134,l0)  -- assign reg 0
      Popping a4(r141,l0)  -- assign reg 3
      Popping a5(r138,l0)  -- assign reg 3
      Popping a6(r133,l0)  -- assign reg 3
Disposition:
    6:r133 l0     3    1:r134 l0     0    0:r135 l0     0    5:r138 l0     3
    3:r139 l0     4    4:r141 l0     3    2:r148 l0     0
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 133
insn=7, live_throughout: 13, 14, dead_or_set: 133, 138
insn=8, live_throughout: 13, 14, dead_or_set: 138
insn=9, live_throughout: 13, 14, dead_or_set: 
insn=11, live_throughout: 13, 14, dead_or_set: 139
insn=12, live_throughout: 13, 14, 139, dead_or_set: 141
insn=17, live_throughout: 13, 14, 139, dead_or_set: 141
insn=18, live_throughout: 13, 14, 139, dead_or_set: 
insn=20, live_throughout: 13, 14, dead_or_set: 135
insn=60, live_throughout: 13, 14, 135, dead_or_set: 
insn=23, live_throughout: 13, 139, dead_or_set: 
insn=27, live_throughout: 13, 139, dead_or_set: 0
insn=28, live_throughout: 0, 13, 139, dead_or_set: 1
insn=29, live_throughout: 0, 1, 13, 139, dead_or_set: 2
insn=30, live_throughout: 13, 139, dead_or_set: 0, 1, 2, 14
insn=32, live_throughout: 13, 14, 139, dead_or_set: 148
insn=34, live_throughout: 13, 14, 148, dead_or_set: 139
insn=35, live_throughout: 13, 14, dead_or_set: 135, 148
insn=62, live_throughout: 13, 14, 135, dead_or_set: 
insn=38, live_throughout: 13, 14, dead_or_set: 
insn=40, live_throughout: 13, 14, dead_or_set: 134
insn=43, live_throughout: 13, 14, dead_or_set: 134, 135
insn=44, live_throughout: 13, 14, 135, dead_or_set: 
insn=50, live_throughout: 13, 14, dead_or_set: 0, 135
insn=56, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 139: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 32 (nil))
changing reg in insn 5
changing reg in insn 7
changing reg in insn 40
changing reg in insn 43
changing reg in insn 43
changing reg in insn 35
changing reg in insn 20
changing reg in insn 50
changing reg in insn 7
changing reg in insn 8
changing reg in insn 11
changing reg in insn 34
changing reg in insn 12
changing reg in insn 12
changing reg in insn 17
changing reg in insn 32
changing reg in insn 35
Spilling for insn 34.

Reloads for insn # 34
Reload 0: reload_out (QI) = (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [139])
                                                        (const_int 2 [0x2])) [0 __warned+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [139])
                                                        (const_int 2 [0x2])) [0 __warned+0 S1 A8])
deleting insn with uid = 35.
deleting insn with uid = 50.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 30.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)


get_debug_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,5u} r1={3d,1u} r2={3d,1u} r3={5d,3u} r4={1d,2u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 161{138d,23u,0e} in 20{19 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 5 2 NOTE_INSN_DELETED)

(insn 5 6 7 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 3 r3 [orig:133 __val ] [133])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8058056))
            (clobber (reg:QI 24 cc))
        ]) -1 (nil))

(insn 7 5 8 2 arch/arm/kernel/hw_breakpoint.c:140 (set (reg:SI 3 r3 [138])
        (zero_extract:SI (reg/v:SI 3 r3 [orig:133 __val ] [133])
            (const_int 4 [0x4])
            (const_int 16 [0x10]))) 124 {extzv_t2} (nil))

(insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:140 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [138])
            (const_int 15 [0xf]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:140 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  2 [0.0%]  (fallthru)
(note 10 9 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 10 15 3 NOTE_INSN_DELETED)

(note 15 14 16 3 NOTE_INSN_DELETED)

(note 16 15 11 3 NOTE_INSN_DELETED)

(insn 11 16 12 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (reg/f:SI 4 r4 [139])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 12 11 17 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (reg:SI 3 r3 [orig:141 __warned ] [141])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [139])
                    (const_int 2 [0x2])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 2 [0x2]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 17 12 18 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:141 __warned ] [141])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 18 17 19 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [0.0%] 
;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 60 4 arch/arm/kernel/hw_breakpoint.c:143 (set (reg:SI 0 r0 [orig:135 D.23589 ] [135])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 60 20 61 4 (set (pc)
        (label_ref 44)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 61 60 23)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%] 
(code_label 23 61 24 5 192 "" [1 uses])

(note 24 23 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 24 28 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 28 27 29 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 3 (set (reg:SI 1 r1)
        (const_int 142 [0x8e])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 3 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x110e9a20>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x110e9a20>)
        (nil)))

(call_insn 30 29 32 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 32 30 34 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 5 (set (reg:SI 0 r0 [148])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 34 32 62 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 5 (set (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [139])
                (const_int 2 [0x2])) [0 __warned+0 S1 A8])
        (reg:QI 0 r0 [148])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 62 34 63 5 (set (pc)
        (label_ref 44)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 63 62 38)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 38 63 39 6 191 "" [1 uses])

(note 39 38 41 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 41 39 42 6 NOTE_INSN_DELETED)

(note 42 41 40 6 NOTE_INSN_DELETED)

(insn 40 42 43 6 arch/arm/kernel/hw_breakpoint.c:145 (set (reg/v:SI 0 r0 [orig:134 didr ] [134])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 0") ("=r") 0 []
             [] 8085270)) -1 (nil))

(insn 43 40 44 6 arch/arm/kernel/hw_breakpoint.c:146 (set (reg:SI 0 r0 [orig:135 D.23589 ] [135])
        (zero_extract:SI (reg/v:SI 0 r0 [orig:134 didr ] [134])
            (const_int 4 [0x4])
            (const_int 16 [0x10]))) 124 {extzv_t2} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 44 43 45 7 193 "" [2 uses])

(note 45 44 56 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 56 45 64 7 arch/arm/kernel/hw_breakpoint.c:147 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 64 56 65 NOTE_INSN_DELETED)

(note 65 64 0 NOTE_INSN_DELETED)


;; Function core_has_mismatch_brps (core_has_mismatch_brps)[0:1247]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 34(l0): point = 0
   Insn 28(l0): point = 2
   Insn 41(l0): point = 5
   Insn 40(l0): point = 7
   Insn 16(l0): point = 9
   Insn 38(l0): point = 12
   Insn 11(l0): point = 14
   Insn 9(l0): point = 17
   Insn 8(l0): point = 19
   Insn 5(l0): point = 21
 a0(r135): [12..14] [3..7]
 a1(r133): [8..9]
Compressing live ranges: from 24 to 6 - 25%
Ranges after the compression:
 a0(r135): [4..5] [0..1]
 a1(r133): [2..3]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r135)<->a1(r133)@125:shuffle
  regions=1, blocks=6, points=6
    allocnos=2, copies=1, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r135 1r133
    modified regnos: 133 135
    border:
    Pressure: GENERAL_REGS=2
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
      Pushing a1(r133,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 0
      Popping a1(r133,l0)  -- assign reg 0
Disposition:
    1:r133 l0     0    0:r135 l0     0
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 0, 14
insn=8, live_throughout: 13, 14, dead_or_set: 0
insn=9, live_throughout: 13, 14, dead_or_set: 
insn=11, live_throughout: 13, 14, dead_or_set: 135
insn=38, live_throughout: 13, 14, 135, dead_or_set: 
insn=14, live_throughout: 13, 14, dead_or_set: 
insn=16, live_throughout: 13, 14, dead_or_set: 133
insn=40, live_throughout: 13, 14, dead_or_set: 133, 135
insn=41, live_throughout: 13, 14, dead_or_set: 135
insn=22, live_throughout: 13, 14, 135, dead_or_set: 
insn=28, live_throughout: 13, 14, dead_or_set: 0, 135
insn=34, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 16
changing reg in insn 40
changing reg in insn 40
changing reg in insn 41
changing reg in insn 40
changing reg in insn 11
changing reg in insn 41
changing reg in insn 28
deleting insn with uid = 28.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


core_has_mismatch_brps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={2d} r2={2d} r3={2d} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{130d,15u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 5 2 NOTE_INSN_DELETED)

(call_insn 5 6 8 2 arch/arm/kernel/hw_breakpoint.c:171 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_debug_arch") [flags 0x3] <function_decl 0x113d8480 get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 8 5 9 2 arch/arm/kernel/hw_breakpoint.c:171 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:171 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  4 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 38 3 arch/arm/kernel/hw_breakpoint.c:171 discrim 2 (set (reg:SI 0 r0 [orig:135 D.23614 ] [135])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 38 11 39 3 (set (pc)
        (label_ref 22)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 39 38 14)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 14 39 15 4 198 "" [1 uses])

(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 15 18 4 NOTE_INSN_DELETED)

(note 18 17 19 4 NOTE_INSN_DELETED)

(note 19 18 16 4 NOTE_INSN_DELETED)

(insn 16 19 40 4 arch/arm/kernel/hw_breakpoint.c:164 (set (reg/v:SI 0 r0 [orig:133 didr ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 0") ("=r") 0 []
             [] 8087702)) -1 (nil))

(insn 40 16 41 4 arch/arm/kernel/hw_breakpoint.c:171 discrim 3 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 0 r0 [orig:133 didr ] [133])
                        (const_int 251658240 [0xf000000]))
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [orig:135 D.23614 ] [135])
                (and:SI (reg/v:SI 0 r0 [orig:133 didr ] [133])
                    (const_int 251658240 [0xf000000])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 41 40 22 4 arch/arm/kernel/hw_breakpoint.c:171 discrim 3 (set (reg:SI 0 r0 [orig:135 D.23614 ] [135])
        (if_then_else:SI (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (reg:SI 0 r0 [orig:135 D.23614 ] [135])
            (const_int 1 [0x1]))) 240 {*movsicc_insn} (nil))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 22 41 23 5 199 "" [1 uses])

(note 23 22 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 23 42 5 arch/arm/kernel/hw_breakpoint.c:173 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 42 34 43 NOTE_INSN_DELETED)

(note 43 42 0 NOTE_INSN_DELETED)


;; Function get_num_wrps (get_num_wrps)[0:1248]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a0 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 38(l0): point = 0
   Insn 32(l0): point = 2
   Insn 25(l0): point = 5
   Insn 42(l0): point = 8
   Insn 18(l0): point = 10
   Insn 16(l0): point = 12
   Insn 14(l0): point = 15
   Insn 13(l0): point = 17
   Insn 10(l0): point = 19
   Insn 8(l0): point = 22
   Insn 7(l0): point = 24
   Insn 5(l0): point = 26
 a0(r135): [8..10] [3..5]
 a1(r133): [11..12]
 a2(r134): [18..19]
Compressing live ranges: from 29 to 8 - 27%
Ranges after the compression:
 a0(r135): [2..3] [0..1]
 a1(r133): [4..5]
 a2(r134): [6..7]
+++Allocating 0 bytes for conflict table (uncompressed size 24)
;; a0(r135,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r134,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a0(r135)<->a1(r133)@125:shuffle
  regions=1, blocks=7, points=8
    allocnos=3, copies=1, conflicts=0, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r135 1r133 2r134
    modified regnos: 133 134 135
    border:
    Pressure: GENERAL_REGS=2
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 134 of GENERAL_REGS has 1 regs less
      Pushing a2(r134,l0)
      Pushing a1(r133,l0)
      Pushing a0(r135,l0)
      Popping a0(r135,l0)  -- assign reg 0
      Popping a1(r133,l0)  -- assign reg 0
      Popping a2(r134,l0)  -- assign reg 3
Disposition:
    1:r133 l0     0    2:r134 l0     3    0:r135 l0     0
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 0, 14
insn=7, live_throughout: 13, 14, dead_or_set: 0
insn=8, live_throughout: 13, 14, dead_or_set: 
insn=10, live_throughout: 13, 14, dead_or_set: 134
insn=13, live_throughout: 13, 14, dead_or_set: 134
insn=14, live_throughout: 13, 14, dead_or_set: 
insn=16, live_throughout: 13, 14, dead_or_set: 133
insn=18, live_throughout: 13, 14, dead_or_set: 133, 135
insn=42, live_throughout: 13, 14, 135, dead_or_set: 
insn=23, live_throughout: 13, 14, dead_or_set: 
insn=25, live_throughout: 13, 14, dead_or_set: 135
insn=26, live_throughout: 13, 14, 135, dead_or_set: 
insn=32, live_throughout: 13, 14, dead_or_set: 0, 135
insn=38, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 16
changing reg in insn 18
changing reg in insn 10
changing reg in insn 13
changing reg in insn 18
changing reg in insn 25
changing reg in insn 32
deleting insn with uid = 32.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 5.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


get_num_wrps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,4u} r1={2d} r2={2d} r3={3d,1u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 145{130d,15u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 5 2 NOTE_INSN_DELETED)

(call_insn 5 6 7 2 arch/arm/kernel/hw_breakpoint.c:204 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("core_has_mismatch_brps") [flags 0x3] <function_decl 0x113d8880 core_has_mismatch_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 7 5 8 2 arch/arm/kernel/hw_breakpoint.c:204 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:204 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  5 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 11 9 12 3 NOTE_INSN_DELETED)

(note 12 11 10 3 NOTE_INSN_DELETED)

(insn 10 12 13 3 arch/arm/kernel/hw_breakpoint.c:164 (set (reg/v:SI 3 r3 [orig:134 didr ] [134])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 0") ("=r") 0 []
             [] 8087702)) -1 (nil))

(insn 13 10 14 3 arch/arm/kernel/hw_breakpoint.c:165 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:134 didr ] [134])
                (const_int 4 [0x4])
                (const_int 24 [0x18]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 14 13 15 3 arch/arm/kernel/hw_breakpoint.c:165 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6335 [0x18bf])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  4 [36.6%]  (fallthru)
;; Succ edge  5 [63.4%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [36.6%]  (fallthru)
(note 15 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 17 15 16 4 NOTE_INSN_DELETED)

(insn 16 17 18 4 arch/arm/kernel/hw_breakpoint.c:164 (set (reg/v:SI 0 r0 [orig:133 didr ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 0") ("=r") 0 []
             [] 8087702)) -1 (nil))

(insn 18 16 42 4 arch/arm/kernel/hw_breakpoint.c:205 (set (reg/v:SI 0 r0 [orig:135 wrps ] [135])
        (zero_extract:SI (reg/v:SI 0 r0 [orig:133 didr ] [133])
            (const_int 4 [0x4])
            (const_int 24 [0x18]))) 124 {extzv_t2} (nil))

(jump_insn 42 18 43 4 (set (pc)
        (label_ref 26)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 43 42 23)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [63.4%] 
(code_label 23 43 24 5 202 "" [2 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/kernel/hw_breakpoint.c:202 (set (reg/v:SI 0 r0 [orig:135 wrps ] [135])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 26 25 27 6 203 "" [1 uses])

(note 27 26 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 38 27 44 6 arch/arm/kernel/hw_breakpoint.c:208 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 44 38 45 NOTE_INSN_DELETED)

(note 45 44 0 NOTE_INSN_DELETED)


;; Function get_num_reserved_brps (get_num_reserved_brps)[0:1249]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 15(l0): point = 0
   Insn 30(l0): point = 3
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 5(l0): point = 10
Compressing live ranges: from 13 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=5, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=2
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 0, 14
insn=7, live_throughout: 0, 13, 14, dead_or_set: 
insn=8, live_throughout: 0, 13, 14, dead_or_set: 
insn=30, live_throughout: 0, 13, 14, dead_or_set: 
insn=13, live_throughout: 13, 14, dead_or_set: 
insn=15, live_throughout: 13, 14, dead_or_set: 0


try_optimize_cfg iteration 1

Deleting fallthru block 3.
deleting insn with uid = 9.
deleting insn with uid = 30.
deleting block 3


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 4 count 5 (  1.2)
df_worklist_dataflow_doublequeue:n_basic_blocks 4 n_edges 4 count 6 (  1.5)


get_num_reserved_brps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d} r2={3d} r3={3d} r12={3d} r13={1d,5u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 250{241d,9u,0e} in 4{2 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 5 2 NOTE_INSN_DELETED)

(call_insn 5 6 7 2 arch/arm/kernel/hw_breakpoint.c:213 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("core_has_mismatch_brps") [flags 0x3] <function_decl 0x113d8880 core_has_mismatch_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 7 5 8 2 arch/arm/kernel/hw_breakpoint.c:213 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 13 2 arch/arm/kernel/hw_breakpoint.c:213 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
        (nil)))
;; End of basic block 2 -> ( 4 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  4 [39.0%] 
;; Succ edge  EXIT [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%] 
(code_label 13 8 14 4 206 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 15 14 16 4 arch/arm/kernel/hw_breakpoint.c:214 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_wrps") [flags 0x3] <function_decl 0x113d8980 get_num_wrps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 16 15 34)

(note 34 16 0 NOTE_INSN_DELETED)


;; Function get_num_brps (get_num_brps)[0:1250]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 29(l0): point = 0
   Insn 23(l0): point = 2
   Insn 16(l0): point = 5
   Insn 14(l0): point = 7
   Insn 12(l0): point = 10
   Insn 11(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 5(l0): point = 20
 a0(r134): [3..16]
 a1(r139): [17..18]
 a2(r133): [19..20]
Compressing live ranges: from 23 to 6 - 26%
Ranges after the compression:
 a0(r134): [0..1]
 a1(r139): [2..3]
 a2(r133): [4..5]
+++Allocating 0 bytes for conflict table (uncompressed size 24)
;; a0(r134,l0) conflicts:
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r139,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a2(r133,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a1(r139)<->a2(r133)@125:shuffle
  cp1:a0(r134)<->a1(r139)@125:shuffle
  regions=1, blocks=5, points=6
    allocnos=3, copies=2, conflicts=0, ranges=3

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 4 3 2
    all: 0r134 1r139 2r133
    modified regnos: 133 134 139
    border:
    Pressure: GENERAL_REGS=3
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a2(r133,l0)
      Pushing a1(r139,l0)
      Pushing a0(r134,l0)
      Popping a0(r134,l0)  -- assign reg 4
      Popping a1(r139,l0)  -- assign reg 4
      Popping a2(r133,l0)  -- assign reg 4
Disposition:
    2:r133 l0     4    0:r134 l0     4    1:r139 l0     4
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 133
insn=7, live_throughout: 13, dead_or_set: 133, 139
insn=8, live_throughout: 13, dead_or_set: 134, 139
insn=9, live_throughout: 13, 134, dead_or_set: 0, 14
insn=11, live_throughout: 13, 14, 134, dead_or_set: 0
insn=12, live_throughout: 13, 14, 134, dead_or_set: 
insn=14, live_throughout: 13, 134, dead_or_set: 0, 14
insn=16, live_throughout: 13, 14, dead_or_set: 0, 134
insn=17, live_throughout: 13, 14, 134, dead_or_set: 
insn=23, live_throughout: 13, 14, dead_or_set: 0, 134
insn=29, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 5
changing reg in insn 7
changing reg in insn 16
changing reg in insn 8
changing reg in insn 16
changing reg in insn 23
changing reg in insn 7
changing reg in insn 8


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 14.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 7 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


get_num_brps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r3={3d} r4={4d,4u} r12={3d} r13={1d,6u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 263{247d,16u,0e} in 10{8 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 10 2 NOTE_INSN_DELETED)

(note 10 6 5 2 NOTE_INSN_DELETED)

(insn 5 10 7 2 arch/arm/kernel/hw_breakpoint.c:164 (set (reg/v:SI 4 r4 [orig:133 didr ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 0") ("=r") 0 []
             [] 8087702)) -1 (nil))

(insn 7 5 8 2 arch/arm/kernel/hw_breakpoint.c:165 (set (reg:SI 4 r4 [139])
        (zero_extract:SI (reg/v:SI 4 r4 [orig:133 didr ] [133])
            (const_int 4 [0x4])
            (const_int 24 [0x18]))) 124 {extzv_t2} (nil))

(insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:165 (set (reg/v:SI 4 r4 [orig:134 brps ] [134])
        (plus:SI (reg:SI 4 r4 [139])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(call_insn 9 8 11 2 arch/arm/kernel/hw_breakpoint.c:222 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("core_has_mismatch_brps") [flags 0x3] <function_decl 0x113d8880 core_has_mismatch_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 11 9 12 2 arch/arm/kernel/hw_breakpoint.c:222 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 13 2 arch/arm/kernel/hw_breakpoint.c:222 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 13 12 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 15 13 14 3 NOTE_INSN_DELETED)

(call_insn 14 15 16 3 arch/arm/kernel/hw_breakpoint.c:223 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_reserved_brps") [flags 0x3] <function_decl 0x113d8a80 get_num_reserved_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 16 14 17 3 arch/arm/kernel/hw_breakpoint.c:223 (set (reg/v:SI 4 r4 [orig:134 brps ] [134])
        (minus:SI (reg/v:SI 4 r4 [orig:134 brps ] [134])
            (reg:SI 0 r0))) 28 {*arm_subsi3_insn} (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 210 "" [1 uses])

(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 18 29 4 arch/arm/kernel/hw_breakpoint.c:225 (set (reg/i:SI 0 r0)
        (reg/v:SI 4 r4 [orig:134 brps ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 29 23 33 4 arch/arm/kernel/hw_breakpoint.c:225 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 33 29 34 NOTE_INSN_DELETED)

(note 34 33 0 NOTE_INSN_DELETED)


;; Function hw_breakpoint_slots (hw_breakpoint_slots)[0:1252]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS

  a0(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 54(l0): point = 0
   Insn 48(l0): point = 2
   Insn 40(l0): point = 5
   Insn 38(l0): point = 7
   Insn 39(l0): point = 9
   Insn 32(l0): point = 12
   Insn 27(l0): point = 15
   Insn 62(l0): point = 18
   Insn 22(l0): point = 21
   Insn 21(l0): point = 23
   Insn 20(l0): point = 26
   Insn 19(l0): point = 28
   Insn 12(l0): point = 31
   Insn 11(l0): point = 33
   Insn 10(l0): point = 35
   Insn 9(l0): point = 37
   Insn 6(l0): point = 39
   Insn 2(l0): point = 41
 a0(r136): [21..41] [10..11]
 a1(r139): [34..35]
 a2(r138): [36..37]
Compressing live ranges: from 44 to 8 - 18%
Ranges after the compression:
 a0(r136): [2..7] [0..1]
 a1(r139): [3..4]
 a2(r138): [5..6]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r136,l0) conflicts: a1(r139,l0) a2(r138,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r139,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r138,l0) conflicts: a0(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a1(r139)<->a2(r138)@125:shuffle
  regions=1, blocks=10, points=8
    allocnos=3, copies=1, conflicts=2, ranges=4

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 9 8 7 6 5 4 3 2
    all: 0r136 1r139 2r138
    modified regnos: 136 138 139
    border:
    Pressure: GENERAL_REGS=3
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 139 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 1 regs less
      Pushing a2(r138,l0)
      Pushing a1(r139,l0)
      Pushing a0(r136,l0)
      Popping a0(r136,l0)  -- assign reg 4
      Popping a1(r139,l0)  -- assign reg 0
      Popping a2(r138,l0)  -- assign reg 0
Disposition:
    0:r136 l0     4    2:r138 l0     0    1:r139 l0     0
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 136
insn=6, live_throughout: 13, 136, dead_or_set: 0, 14
insn=9, live_throughout: 13, 14, 136, dead_or_set: 0, 138
insn=10, live_throughout: 13, 14, 136, dead_or_set: 138, 139
insn=11, live_throughout: 13, 14, 136, dead_or_set: 139
insn=12, live_throughout: 13, 14, 136, dead_or_set: 
insn=17, live_throughout: 13, 14, 136, dead_or_set: 
insn=19, live_throughout: 13, 14, 136, dead_or_set: 
insn=20, live_throughout: 13, 14, 136, dead_or_set: 
insn=21, live_throughout: 13, 14, 136, dead_or_set: 
insn=22, live_throughout: 13, 14, 136, dead_or_set: 
insn=62, live_throughout: 13, 14, dead_or_set: 
insn=25, live_throughout: 13, 14, dead_or_set: 
insn=27, live_throughout: 13, 14, dead_or_set: 0
insn=30, live_throughout: 13, 14, dead_or_set: 
insn=32, live_throughout: 13, 14, dead_or_set: 0
insn=60, live_throughout: 13, 136, dead_or_set: 
insn=39, live_throughout: 13, dead_or_set: 1, 136
insn=38, live_throughout: 1, 13, dead_or_set: 0
insn=40, live_throughout: 13, dead_or_set: 0, 1, 14
insn=42, live_throughout: 13, 14, dead_or_set: 
insn=48, live_throughout: 13, 14, dead_or_set: 0
insn=54, live_throughout: 0, 13, 14, dead_or_set: 
changing reg in insn 2
changing reg in insn 39
changing reg in insn 21
changing reg in insn 19
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11


try_optimize_cfg iteration 1

deleting insn with uid = 17.
Deleted label in block 3.
Forwarding edge 4->5 to 7 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 40.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 15 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 18 (  1.8)


hw_breakpoint_slots

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,7u} r1={6d,1u} r2={5d} r3={5d} r4={1d,3u} r12={5d} r13={1d,13u} r14={3d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={7d,3u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 510{482d,28u,0e} in 18{14 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 2 2 NOTE_INSN_DELETED)

(insn 2 7 6 2 arch/arm/kernel/hw_breakpoint.c:275 (set (reg/v:SI 4 r4 [orig:136 type ] [136])
        (reg:SI 0 r0 [ type ])) 167 {*arm_movsi_insn} (nil))

(call_insn 6 2 9 2 arch/arm/kernel/hw_breakpoint.c:156 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_debug_arch") [flags 0x3] <function_decl 0x113d8480 get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 9 6 10 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:SI 0 r0 [138])
        (plus:SI (reg:SI 0 r0)
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 10 9 11 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:SI 0 r0 [139])
        (zero_extend:SI (reg:QI 0 r0 [138]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 11 10 12 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [139])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 18 2 arch/arm/kernel/hw_breakpoint.c:157 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 2 -> ( 9 3)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  9 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 18 12 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 3 arch/arm/kernel/hw_breakpoint.c:283 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:136 type ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 20 19 56 3 arch/arm/kernel/hw_breakpoint.c:283 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  6 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 56 20 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 56 22 4 arch/arm/kernel/hw_breakpoint.c:283 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:136 type ] [136])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 61 4 arch/arm/kernel/hw_breakpoint.c:283 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  5 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [29.0%]  (fallthru)
(note 61 22 62 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 62 61 63 5 (set (pc)
        (label_ref 30)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 63 62 25)

;; Start of basic block ( 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [50.0%] 
(code_label 25 63 26 6 216 "" [1 uses])

(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 27 26 28 6 arch/arm/kernel/hw_breakpoint.c:285 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_brps") [flags 0x3] <function_decl 0x113d8b80 get_num_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 28 27 30)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  5 [100.0%] 
(code_label 30 28 31 7 217 "" [1 uses])

(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 32 31 33 7 arch/arm/kernel/hw_breakpoint.c:287 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_wrps") [flags 0x3] <function_decl 0x113d8980 get_num_wrps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 33 32 60)

;; Start of basic block ( 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [71.0%] 
(code_label 60 33 36 8 219 "" [1 uses])

(note 36 60 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 36 38 8 arch/arm/kernel/hw_breakpoint.c:289 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:136 type ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 38 39 40 8 arch/arm/kernel/hw_breakpoint.c:289 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x11520050>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x11520050>)
        (nil)))

(call_insn 40 38 42 8 arch/arm/kernel/hw_breakpoint.c:289 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 2 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 42 40 43 9 214 "" [1 uses])

(note 43 42 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 48 43 54 9 arch/arm/kernel/hw_breakpoint.c:292 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 54 48 64 9 arch/arm/kernel/hw_breakpoint.c:292 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 64 54 65 NOTE_INSN_DELETED)

(note 65 64 0 NOTE_INSN_DELETED)


;; Function enable_monitor_mode (enable_monitor_mode)[0:1251]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a4(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r153: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a4(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 90(l0): point = 0
   Insn 84(l0): point = 2
   Insn 77(l0): point = 5
   Insn 103(l0): point = 8
   Insn 72(l0): point = 10
   Insn 69(l0): point = 13
   Insn 68(l0): point = 15
   Insn 66(l0): point = 17
   Insn 63(l0): point = 20
   Insn 62(l0): point = 22
   Insn 101(l0): point = 25
   Insn 57(l0): point = 27
   Insn 56(l0): point = 29
   Insn 99(l0): point = 32
   Insn 51(l0): point = 34
   Insn 46(l0): point = 37
   Insn 45(l0): point = 39
   Insn 44(l0): point = 42
   Insn 43(l0): point = 44
   Insn 42(l0): point = 47
   Insn 41(l0): point = 49
   Insn 38(l0): point = 51
   Insn 36(l0): point = 54
   Insn 35(l0): point = 56
   Insn 97(l0): point = 59
   Insn 29(l0): point = 61
   Insn 28(l0): point = 63
   Insn 26(l0): point = 65
   Insn 24(l0): point = 67
   Insn 23(l0): point = 69
   Insn 22(l0): point = 71
   Insn 21(l0): point = 73
   Insn 17(l0): point = 76
   Insn 16(l0): point = 78
   Insn 11(l0): point = 80
   Insn 10(l0): point = 82
   Insn 8(l0): point = 85
   Insn 7(l0): point = 87
   Insn 5(l0): point = 89
 a0(r134): [59..61] [32..34] [8..10] [3..5]
 a1(r133): [16..17]
 a2(r153): [21..22]
 a3(r135): [85..89] [37..58] [30..31] [23..24]
 a4(r152): [28..29]
 a5(r151): [40..49]
 a6(r139): [64..82]
 a7(r148): [64..65]
 a8(r141): [79..80]
Compressing live ranges: from 92 to 29 - 31%
Ranges after the compression:
 a0(r134): [20..21] [14..15] [2..3] [0..1]
 a1(r133): [4..5]
 a2(r153): [6..7]
 a3(r135): [27..28] [16..19] [12..13] [8..9]
 a4(r152): [10..11]
 a5(r151): [17..18]
 a6(r139): [22..26]
 a7(r148): [22..23]
 a8(r141): [24..25]
+++Allocating 72 bytes for conflict table (uncompressed size 72)
;; a0(r134,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r133,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r153,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r135,l0) conflicts: a5(r151,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a4(r152,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r151,l0) conflicts: a3(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r139,l0) conflicts: a7(r148,l0) a8(r141,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a7(r148,l0) conflicts: a6(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r141,l0) conflicts: a6(r139,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a2(r153)<->a3(r135)@125:shuffle
  cp1:a3(r135)<->a4(r152)@125:shuffle
  regions=1, blocks=16, points=29
    allocnos=9, copies=2, conflicts=4, ranges=15

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r134 1r133 2r153 3r135 4r152 5r151 6r139 7r148 8r141
    modified regnos: 133 134 135 139 141 148 151 152 153
    border:
    Pressure: GENERAL_REGS=5
    Reg 134 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 153 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 2 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 139 of GENERAL_REGS has 4 regs less
    Reg 148 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
      Pushing a8(r141,l0)
      Pushing a7(r148,l0)
      Pushing a4(r152,l0)
      Pushing a2(r153,l0)
      Pushing a1(r133,l0)
      Pushing a5(r151,l0)
      Pushing a0(r134,l0)
      Pushing a3(r135,l0)
      Pushing a6(r139,l0)
      Popping a6(r139,l0)  -- assign reg 4
      Popping a3(r135,l0)  -- assign reg 4
      Popping a0(r134,l0)  -- assign reg 0
      Popping a5(r151,l0)  -- assign reg 0
      Popping a1(r133,l0)  -- assign reg 3
      Popping a2(r153,l0)  -- assign reg 4
      Popping a4(r152,l0)  -- assign reg 4
      Popping a7(r148,l0)  -- assign reg 3
      Popping a8(r141,l0)  -- assign reg 3
Disposition:
    1:r133 l0     3    0:r134 l0     0    3:r135 l0     4    6:r139 l0     4
    8:r141 l0     3    7:r148 l0     3    5:r151 l0     0    4:r152 l0     4
    2:r153 l0     4
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, 14, dead_or_set: 135
insn=7, live_throughout: 13, 14, 135, dead_or_set: 
insn=8, live_throughout: 13, 14, 135, dead_or_set: 
insn=10, live_throughout: 13, 14, dead_or_set: 139
insn=11, live_throughout: 13, 14, 139, dead_or_set: 141
insn=16, live_throughout: 13, 14, 139, dead_or_set: 141
insn=17, live_throughout: 13, 14, 139, dead_or_set: 
insn=21, live_throughout: 13, 139, dead_or_set: 0
insn=22, live_throughout: 0, 13, 139, dead_or_set: 1
insn=23, live_throughout: 0, 1, 13, 139, dead_or_set: 2
insn=24, live_throughout: 13, 139, dead_or_set: 0, 1, 2, 14
insn=26, live_throughout: 13, 14, 139, dead_or_set: 148
insn=28, live_throughout: 13, 14, dead_or_set: 139, 148
insn=29, live_throughout: 13, 14, dead_or_set: 134
insn=97, live_throughout: 13, 14, 134, dead_or_set: 
insn=32, live_throughout: 13, 14, 135, dead_or_set: 
insn=35, live_throughout: 13, 14, 135, dead_or_set: 
insn=36, live_throughout: 13, 14, 135, dead_or_set: 
insn=38, live_throughout: 13, 135, dead_or_set: 0, 14
insn=41, live_throughout: 13, 14, 135, dead_or_set: 0, 151
insn=42, live_throughout: 13, 14, 135, 151, dead_or_set: 
insn=43, live_throughout: 13, 14, 135, 151, dead_or_set: 
insn=44, live_throughout: 13, 14, 135, 151, dead_or_set: 
insn=45, live_throughout: 13, 14, 135, dead_or_set: 151
insn=46, live_throughout: 13, 14, 135, dead_or_set: 
insn=49, live_throughout: 13, 14, dead_or_set: 
insn=51, live_throughout: 13, 14, dead_or_set: 134
insn=99, live_throughout: 13, 14, 134, dead_or_set: 
insn=54, live_throughout: 13, 14, 135, dead_or_set: 
insn=56, live_throughout: 13, 14, dead_or_set: 135, 152
insn=57, live_throughout: 13, 14, dead_or_set: 152
insn=101, live_throughout: 13, 14, dead_or_set: 
insn=60, live_throughout: 13, 14, 135, dead_or_set: 
insn=62, live_throughout: 13, 14, dead_or_set: 135, 153
insn=63, live_throughout: 13, 14, dead_or_set: 153
insn=64, live_throughout: 13, 14, dead_or_set: 
insn=66, live_throughout: 13, 14, dead_or_set: 133
insn=68, live_throughout: 13, 14, dead_or_set: 133
insn=69, live_throughout: 13, 14, dead_or_set: 
insn=70, live_throughout: 13, 14, dead_or_set: 
insn=72, live_throughout: 13, 14, dead_or_set: 134
insn=103, live_throughout: 13, 14, 134, dead_or_set: 
insn=75, live_throughout: 13, 14, dead_or_set: 
insn=77, live_throughout: 13, 14, dead_or_set: 134
insn=78, live_throughout: 13, 14, 134, dead_or_set: 
insn=84, live_throughout: 13, 14, dead_or_set: 0, 134
insn=90, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 139: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 148: (insn_list:REG_DEP_TRUE 26 (nil))
changing reg in insn 66
changing reg in insn 68
changing reg in insn 77
changing reg in insn 72
changing reg in insn 51
changing reg in insn 29
changing reg in insn 84
changing reg in insn 5
changing reg in insn 35
changing reg in insn 7
changing reg in insn 62
changing reg in insn 56
changing reg in insn 10
changing reg in insn 28
changing reg in insn 11
changing reg in insn 11
changing reg in insn 16
changing reg in insn 26
changing reg in insn 41
changing reg in insn 45
changing reg in insn 43
changing reg in insn 56
changing reg in insn 57
changing reg in insn 62
changing reg in insn 63
Spilling for insn 28.

Reloads for insn # 28
Reload 0: reload_out (QI) = (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [139])
                                                        (const_int 3 [0x3])) [0 __warned+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [139])
                                                        (const_int 3 [0x3])) [0 __warned+0 S1 A8])
deleting insn with uid = 84.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 30 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 30 (  1.9)


enable_monitor_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,7u} r1={4d,1u} r2={4d,1u} r3={6d,3u} r4={4d,8u} r12={3d} r13={1d,17u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={9d,7u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 308{263d,45u,0e} in 38{36 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 6 2 NOTE_INSN_FUNCTION_BEG)

(note 6 2 5 2 NOTE_INSN_DELETED)

(insn 5 6 7 2 arch/arm/kernel/hw_breakpoint.c:238 (set (reg/v:SI 4 r4 [orig:135 dscr ] [135])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 0") ("=r") 0 []
             [] 8097174)) -1 (nil))

(insn 7 5 8 2 arch/arm/kernel/hw_breakpoint.c:241 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:135 dscr ] [135])
                (const_int 1 [0x1])
                (const_int 14 [0xe]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:241 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 13 9 14 3 NOTE_INSN_DELETED)

(note 14 13 15 3 NOTE_INSN_DELETED)

(note 15 14 10 3 NOTE_INSN_DELETED)

(insn 10 15 11 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (reg/f:SI 4 r4 [139])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 11 10 16 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (reg:SI 3 r3 [orig:141 __warned ] [141])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [139])
                    (const_int 3 [0x3])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 3 [0x3]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 16 11 17 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:141 __warned ] [141])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 13)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  13 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru)
(note 18 17 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 18 22 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 22 21 23 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 3 (set (reg:SI 1 r1)
        (const_int 242 [0xf2])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 3 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x111b3420>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x111b3420>)
        (nil)))

(call_insn 24 23 26 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 26 24 28 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 5 (set (reg:SI 3 r3 [148])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 28 26 29 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 5 (set (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [139])
                (const_int 3 [0x3])) [0 __warned+0 S1 A8])
        (reg:QI 3 r3 [148])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 29 28 97 4 arch/arm/kernel/hw_breakpoint.c:243 (set (reg/v:SI 0 r0 [orig:134 ret ] [134])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(jump_insn 97 29 98 4 (set (pc)
        (label_ref 78)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 15)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 98 97 32)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 32 98 33 5 225 "" [1 uses])

(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 34 33 35 5 NOTE_INSN_DELETED)

(insn 35 34 36 5 arch/arm/kernel/hw_breakpoint.c:248 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 4 r4 [orig:135 dscr ] [135])
                (const_int 1 [0x1])
                (const_int 15 [0xf]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 36 35 37 5 arch/arm/kernel/hw_breakpoint.c:248 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9833 [0x2669])
        (nil)))
;; End of basic block 5 -> ( 14 6)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  14 [98.3%] 
;; Succ edge  6 [1.7%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [1.7%]  (fallthru)
(note 37 36 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 39 37 38 6 NOTE_INSN_DELETED)

(call_insn 38 39 41 6 arch/arm/kernel/hw_breakpoint.c:252 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_debug_arch") [flags 0x3] <function_decl 0x113d8480 get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 41 38 42 6 arch/arm/kernel/hw_breakpoint.c:252 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 0 r0 [151])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 42 41 92 6 arch/arm/kernel/hw_breakpoint.c:252 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 6 -> ( 9 7)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  9 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  6 [50.0%]  (fallthru)
(note 92 42 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 92 44 7 arch/arm/kernel/hw_breakpoint.c:252 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [151])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 93 7 arch/arm/kernel/hw_breakpoint.c:252 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 10 8)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp]


;; Succ edge  10 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 93 44 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 45 93 46 8 arch/arm/kernel/hw_breakpoint.c:252 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [151])
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 46 45 49 8 arch/arm/kernel/hw_breakpoint.c:252 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 8 -> ( 11 9)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  11 [29.0%] 
;; Succ edge  9 [71.0%]  (fallthru)

;; Start of basic block ( 8 6) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  8 [71.0%]  (fallthru)
;; Pred edge  6 [50.0%] 
(code_label 49 46 50 9 229 "" [1 uses])

(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 99 9 arch/arm/kernel/hw_breakpoint.c:261 (set (reg/v:SI 0 r0 [orig:134 ret ] [134])
        (const_int -19 [0xffffffffffffffed])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -19 [0xffffffffffffffed])
        (nil)))

(jump_insn 99 51 100 9 (set (pc)
        (label_ref 78)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 100 99 54)

;; Start of basic block ( 7) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 54 100 55 10 230 "" [1 uses])

(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 10 arch/arm/kernel/hw_breakpoint.c:255 (set (reg:SI 4 r4 [152])
        (ior:SI (reg/v:SI 4 r4 [orig:135 dscr ] [135])
            (const_int 32768 [0x8000]))) 89 {*arm_iorsi3} (nil))

(insn 57 56 101 10 arch/arm/kernel/hw_breakpoint.c:255 (asm_operands/v ("mcr p14, 0, %0, c0,c1, 0") ("") 0 [
            (reg:SI 4 r4 [152])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8099351) -1 (nil))

(jump_insn 101 57 102 10 arch/arm/kernel/hw_breakpoint.c:256 (set (pc)
        (label_ref 64)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  12 [100.0%] 

(barrier 102 101 60)

;; Start of basic block ( 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  8 [29.0%] 
(code_label 60 102 61 11 231 "" [1 uses])

(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 11 arch/arm/kernel/hw_breakpoint.c:258 (set (reg:SI 4 r4 [153])
        (ior:SI (reg/v:SI 4 r4 [orig:135 dscr ] [135])
            (const_int 32768 [0x8000]))) 89 {*arm_iorsi3} (nil))

(insn 63 62 64 11 arch/arm/kernel/hw_breakpoint.c:258 (asm_operands/v ("mcr p14, 0, %0, c0,c2, 2") ("") 0 [
            (reg:SI 4 r4 [153])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8099735) -1 (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 64 63 65 12 232 "" [1 uses])

(note 65 64 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 67 65 66 12 NOTE_INSN_DELETED)

(insn 66 67 68 12 arch/arm/kernel/hw_breakpoint.c:266 (set (reg/v:SI 3 r3 [orig:133 dscr.773 ] [133])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 0") ("=r") 0 []
             [] 8100758)) -1 (nil))

(insn 68 66 69 12 arch/arm/kernel/hw_breakpoint.c:267 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:133 dscr.773 ] [133])
                (const_int 1 [0x1])
                (const_int 15 [0xf]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 69 68 70 12 arch/arm/kernel/hw_breakpoint.c:267 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  13 [4.0%]  (fallthru)
;; Succ edge  14 [96.0%] 

;; Start of basic block ( 3 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  3 [100.0%] 
;; Pred edge  12 [4.0%]  (fallthru)
(code_label 70 69 71 13 226 ("out") [1 uses])

(note 71 70 72 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 103 13 arch/arm/kernel/hw_breakpoint.c:243 (set (reg/v:SI 0 r0 [orig:134 ret ] [134])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(jump_insn 103 72 104 13 (set (pc)
        (label_ref 78)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  15 [100.0%] 

(barrier 104 103 75)

;; Start of basic block ( 12 5) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  12 [96.0%] 
;; Pred edge  5 [98.3%] 
(code_label 75 104 76 14 228 "" [2 uses])

(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 14 arch/arm/kernel/hw_breakpoint.c:236 (set (reg/v:SI 0 r0 [orig:134 ret ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 14 -> ( 15)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 9 4 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  13 [100.0%] 
(code_label 78 77 79 15 227 "" [3 uses])

(note 79 78 90 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 90 79 105 15 arch/arm/kernel/hw_breakpoint.c:272 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 105 90 106 NOTE_INSN_DELETED)

(note 106 105 0 NOTE_INSN_DELETED)


;; Function reset_ctrl_regs (reset_ctrl_regs)[0:1268]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 23 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 28 (    2)
scanning new insn with uid = 125.
verify found no changes in insn with uid = 125.
deleting insn with uid = 29.
scanning new insn with uid = 126.
verify found no changes in insn with uid = 126.
deleting insn with uid = 11.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 23 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 28 (    2)

Pass 0 for finding allocno costs

    a27 (r176,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r174,l2) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r173,l2) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r167,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r154,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r134,l2) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a8(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a19(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r145,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a22(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r134,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a24(r174,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r173,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a27(r176,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r176: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS

  a0(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a2(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a3(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a8(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r154,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a19(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r145,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a22(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r134,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a24(r174,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a25(r173,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a27(r176,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 120(l0): point = 1
   Insn 97(l0): point = 3
   Insn 80(l0): point = 5
   Insn 118(l0): point = 8
   Insn 72(l0): point = 10
   Insn 55(l0): point = 12
   Insn 53(l0): point = 15
   Insn 52(l0): point = 17
   Insn 50(l0): point = 19
   Insn 47(l0): point = 22
   Insn 46(l0): point = 24
   Insn 45(l0): point = 26
   Insn 44(l0): point = 28
   Insn 43(l0): point = 30
   Insn 42(l0): point = 32
   Insn 116(l0): point = 35
   Insn 37(l0): point = 37
   Insn 36(l0): point = 39
   Insn 35(l0): point = 41
   Insn 30(l0): point = 43
   Insn 125(l0): point = 45
   Insn 34(l0): point = 47
   Insn 33(l0): point = 49
   Insn 32(l0): point = 51
   Insn 27(l0): point = 53
   Insn 26(l0): point = 55
   Insn 31(l0): point = 57
   Insn 25(l0): point = 59
   Insn 24(l0): point = 61
   Insn 23(l0): point = 63
   Insn 19(l0): point = 66
   Insn 18(l0): point = 68
   Insn 16(l0): point = 70
   Insn 14(l0): point = 73
   Insn 13(l0): point = 75
   Insn 10(l0): point = 77
   Insn 12(l0): point = 79
   Insn 126(l0): point = 81
   Insn 3(l0): point = 83
   Insn 123(l0): point = 85
   Insn 122(l0): point = 87
   Insn 100(l2): point = 90
   Insn 99(l2): point = 92
   Insn 98(l2): point = 94
   Insn 111(l2): point = 96
   Insn 86(l2): point = 98
   Insn 92(l2): point = 101
   Insn 93(l2): point = 103
   Insn 112(l2): point = 105
   Insn 90(l2): point = 107
   Insn 88(l2): point = 109
   Insn 78(l1): point = 112
   Insn 77(l1): point = 114
   Insn 76(l1): point = 116
   Insn 114(l1): point = 118
   Insn 61(l1): point = 120
   Insn 67(l1): point = 123
   Insn 68(l1): point = 125
   Insn 115(l1): point = 127
   Insn 65(l1): point = 129
   Insn 63(l1): point = 131
 a0(r174): [1..3]
 a1(r134): [1..5]
 a2(r176): [8..10]
 a3(r141): [8..12]
 a4(r142): [13..17]
 a5(r162): [25..26]
 a6(r161): [31..32]
 a7(r144): [38..83]
 a8(r160): [38..39]
 a9(r159): [40..41]
 a10(r158): [40..47]
 a11(r157): [42..49]
 a12(r137): [42..43]
 a13(r154): [44..45]
 a14(r152): [44..53]
 a15(r156): [50..51]
 a16(r155): [52..57]
 a17(r151): [54..55]
 a18(r143): [56..77]
 a19(r140): [69..70]
 a20(r148): [76..79]
 a21(r145): [78..87]
 a22(r147): [80..81]
 a23(r134): [90..111]
 a24(r174): [90..111]
 a25(r173): [93..94]
 a26(r141): [112..133]
 a27(r176): [112..133]
 a28(r167): [115..116]
 Rebuilding regno allocno list for 173
 Rebuilding regno allocno list for 167
Compressing live ranges: from 134 to 48 - 35%
Ranges after the compression:
 a0(r174): [40..43] [0..1]
 a1(r134): [40..43] [0..2]
 a2(r176): [44..47] [3..4]
 a3(r141): [44..47] [3..5]
 a4(r142): [6..7]
 a5(r162): [8..9]
 a6(r161): [10..11]
 a7(r144): [12..38]
 a8(r160): [12..13]
 a9(r159): [14..15]
 a10(r158): [14..20]
 a11(r157): [16..21]
 a12(r137): [16..17]
 a13(r154): [18..19]
 a14(r152): [18..25]
 a15(r156): [22..23]
 a16(r155): [24..29]
 a17(r151): [26..27]
 a18(r143): [28..33]
 a19(r140): [30..31]
 a20(r148): [32..35]
 a21(r145): [34..39]
 a22(r147): [36..37]
 a25(r173): [41..42]
 a28(r167): [45..46]
+++Allocating 200 bytes for conflict table (uncompressed size 232)
;; a0(r174,l0) conflicts: a1(r134,l0) a25(r173,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r134,l0) conflicts: a0(r174,l0) a25(r173,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r176,l0) conflicts: a3(r141,l0) a28(r167,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r141,l0) conflicts: a2(r176,l0) a28(r167,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a4(r142,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r162,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r161,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a7(r144,l0) conflicts: a8(r160,l0) a9(r159,l0) a10(r158,l0) a12(r137,l0) a11(r157,l0) a13(r154,l0) a14(r152,l0) a15(r156,l0) a16(r155,l0) a17(r151,l0) a18(r143,l0) a19(r140,l0) a20(r148,l0) a21(r145,l0) a22(r147,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a8(r160,l0) conflicts: a7(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r159,l0) conflicts: a7(r144,l0) a10(r158,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r158,l0) conflicts: a7(r144,l0) a9(r159,l0) a12(r137,l0) a11(r157,l0) a13(r154,l0) a14(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r157,l0) conflicts: a7(r144,l0) a10(r158,l0) a12(r137,l0) a13(r154,l0) a14(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r137,l0) conflicts: a7(r144,l0) a10(r158,l0) a11(r157,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r154,l0) conflicts: a7(r144,l0) a10(r158,l0) a11(r157,l0) a14(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r152,l0) conflicts: a7(r144,l0) a10(r158,l0) a11(r157,l0) a13(r154,l0) a15(r156,l0) a16(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r156,l0) conflicts: a7(r144,l0) a14(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r155,l0) conflicts: a7(r144,l0) a14(r152,l0) a17(r151,l0) a18(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r151,l0) conflicts: a7(r144,l0) a16(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r143,l0) conflicts: a7(r144,l0) a16(r155,l0) a19(r140,l0) a20(r148,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a19(r140,l0) conflicts: a7(r144,l0) a18(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a20(r148,l0) conflicts: a7(r144,l0) a18(r143,l0) a21(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a21(r145,l0) conflicts: a7(r144,l0) a20(r148,l0) a22(r147,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a22(r147,l0) conflicts: a7(r144,l0) a21(r145,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a25(r173,l0) conflicts: a0(r174,l0) a1(r134,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a28(r167,l0) conflicts: a2(r176,l0) a3(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  cp0:a3(r141)<->a4(r142)@1000:move
  cp1:a17(r151)<->a18(r143)@125:shuffle
  cp2:a14(r152)<->a17(r151)@125:shuffle
  cp3:a15(r156)<->a16(r155)@125:shuffle
  cp4:a11(r157)<->a15(r156)@125:shuffle
  cp5:a12(r137)<->a13(r154)@125:shuffle
  cp6:a12(r137)<->a14(r152)@125:shuffle
  cp7:a8(r160)<->a10(r158)@125:shuffle
  cp8:a8(r160)<->a9(r159)@125:shuffle
  regions=3, blocks=14, points=48
    allocnos=29, copies=9, conflicts=1, ranges=29

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r174 1r134 2r176 3r141 4r142 5r162 6r161 7r144 8r160 9r159 10r158 11r157 12r137 13r154 14r152 15r156 16r155 17r151 18r143 19r140 20r148 21r145 22r147 25r173 28r167
    modified regnos: 134 137 140 141 142 143 144 145 147 148 151 152 154 155 156 157 158 159 160 161 162 167 173 174 176
    border:
    Pressure: GENERAL_REGS=6
    Reg 174 of GENERAL_REGS has 3 regs less
    Reg 134 of GENERAL_REGS has 3 regs less
    Reg 176 of GENERAL_REGS has 3 regs less
    Reg 141 of GENERAL_REGS has 3 regs less
    Reg 142 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 3 regs less
    Reg 160 of GENERAL_REGS has 1 regs less
    Reg 159 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 154 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 3 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 173 of GENERAL_REGS has 3 regs less
    Reg 167 of GENERAL_REGS has 3 regs less
      Pushing a22(r147,l0)
      Pushing a20(r148,l0)
      Pushing a19(r140,l0)
      Pushing a6(r161,l0)
      Pushing a5(r162,l0)
      Pushing a17(r151,l0)
      Pushing a16(r155,l0)
      Pushing a15(r156,l0)
      Pushing a14(r152,l0)
      Pushing a13(r154,l0)
      Pushing a12(r137,l0)
      Pushing a11(r157,l0)
      Pushing a10(r158,l0)
      Pushing a9(r159,l0)
      Pushing a8(r160,l0)
      Pushing a4(r142,l0)
      Pushing a21(r145,l0)
      Pushing a28(r167,l0)
      Pushing a25(r173,l0)
      Pushing a0(r174,l0)
      Pushing a7(r144,l0)
      Pushing a2(r176,l0)
      Pushing a18(r143,l0)
      Pushing a3(r141,l0)
      Pushing a1(r134,l0)
      Popping a1(r134,l0)  -- assign reg 4
      Popping a3(r141,l0)  -- assign reg 4
      Popping a18(r143,l0)  -- assign reg 4
      Popping a2(r176,l0)  -- assign reg 5
      Popping a7(r144,l0)  -- assign reg 5
      Popping a0(r174,l0)  -- assign reg 5
      Popping a25(r173,l0)  -- assign reg 3
      Popping a28(r167,l0)  -- assign reg 3
      Popping a21(r145,l0)  -- assign reg 3
      Popping a4(r142,l0)  -- assign reg 4
      Popping a8(r160,l0)  -- assign reg 3
      Popping a9(r159,l0)  -- assign reg 3
      Popping a10(r158,l0)  -- assign reg 2
      Popping a11(r157,l0)  -- assign reg 3
      Popping a12(r137,l0)  -- assign reg 4
      Popping a13(r154,l0)  -- assign reg 1
      Popping a14(r152,l0)  -- assign reg 4
      Popping a15(r156,l0)  -- assign reg 3
      Popping a16(r155,l0)  -- assign reg 3
      Popping a17(r151,l0)  -- assign reg 4
      Popping a5(r162,l0)  -- assign reg 3
      Popping a6(r161,l0)  -- assign reg 3
      Popping a19(r140,l0)  -- assign reg 3
      Popping a20(r148,l0)  -- assign reg 2
      Popping a22(r147,l0)  -- assign reg 2
Disposition:
    1:r134 l0     4   12:r137 l0     4   19:r140 l0     3    3:r141 l0     4
    4:r142 l0     4   18:r143 l0     4    7:r144 l0     5   21:r145 l0     3
   22:r147 l0     2   20:r148 l0     2   17:r151 l0     4   14:r152 l0     4
   13:r154 l0     1   16:r155 l0     3   15:r156 l0     3   11:r157 l0     3
   10:r158 l0     2    9:r159 l0     3    8:r160 l0     3    6:r161 l0     3
    5:r162 l0     3   28:r167 l0     3   25:r173 l0     3    0:r174 l0     5
    2:r176 l0     5
New iteration of spill/restore move
+++Costs: overall 2000, reg 2000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=122, live_throughout: 0, 13, dead_or_set: 145
insn=123, live_throughout: 0, 13, dead_or_set: 145
insn=3, live_throughout: 13, 145, dead_or_set: 0, 144
insn=126, live_throughout: 13, 144, 145, dead_or_set: 147
insn=12, live_throughout: 13, 144, 145, dead_or_set: 147, 148
insn=10, live_throughout: 13, 144, 148, dead_or_set: 143, 145
insn=13, live_throughout: 13, 143, 144, dead_or_set: 148
insn=14, live_throughout: 13, 143, 144, dead_or_set: 
insn=16, live_throughout: 13, 143, 144, dead_or_set: 140
insn=18, live_throughout: 13, 143, 144, dead_or_set: 140
insn=19, live_throughout: 13, 143, 144, dead_or_set: 
insn=23, live_throughout: 13, 143, 144, dead_or_set: 0
insn=24, live_throughout: 0, 13, 143, 144, dead_or_set: 1
insn=25, live_throughout: 13, 143, 144, dead_or_set: 0, 1, 14
insn=31, live_throughout: 13, 14, 143, 144, dead_or_set: 155
insn=26, live_throughout: 13, 14, 144, 155, dead_or_set: 143, 151
insn=27, live_throughout: 13, 14, 144, 155, dead_or_set: 151, 152
insn=32, live_throughout: 13, 14, 144, 152, dead_or_set: 155, 156
insn=33, live_throughout: 13, 14, 144, 152, dead_or_set: 156, 157
insn=34, live_throughout: 13, 14, 144, 152, 157, dead_or_set: 158
insn=125, live_throughout: 13, 14, 144, 152, 157, 158, dead_or_set: 154
insn=30, live_throughout: 13, 14, 144, 157, 158, dead_or_set: 137, 152, 154
insn=35, live_throughout: 13, 14, 144, 158, dead_or_set: 137, 157, 159
insn=36, live_throughout: 13, 14, 144, dead_or_set: 158, 159, 160
insn=37, live_throughout: 13, 14, dead_or_set: 144, 160
insn=116, live_throughout: 13, 14, dead_or_set: 
insn=40, live_throughout: 13, dead_or_set: 
insn=42, live_throughout: 13, dead_or_set: 161
insn=43, live_throughout: 13, dead_or_set: 161
insn=44, live_throughout: 13, dead_or_set: 
insn=45, live_throughout: 13, dead_or_set: 162
insn=46, live_throughout: 13, dead_or_set: 162
insn=47, live_throughout: 13, dead_or_set: 
insn=48, live_throughout: 13, dead_or_set: 
insn=50, live_throughout: 13, dead_or_set: 0, 14
insn=52, live_throughout: 13, 14, dead_or_set: 0, 142
insn=53, live_throughout: 13, 14, 142, dead_or_set: 
insn=55, live_throughout: 13, 14, dead_or_set: 141, 142
insn=72, live_throughout: 13, 14, 141, dead_or_set: 176
insn=118, live_throughout: 13, 14, 141, 176, dead_or_set: 
insn=71, live_throughout: 0, 1, 13, 141, 176, dead_or_set: 
insn=63, live_throughout: 13, 141, 176, dead_or_set: 0, 1, 14
insn=65, live_throughout: 13, 141, 176, dead_or_set: 0
insn=115, live_throughout: 0, 13, 141, 176, dead_or_set: 1
insn=68, live_throughout: 0, 1, 13, 176, dead_or_set: 141
insn=67, live_throughout: 13, 141, 176, dead_or_set: 0, 1, 14
insn=69, live_throughout: 13, 14, 141, 176, dead_or_set: 
insn=61, live_throughout: 13, 14, 141, 176, dead_or_set: 0
insn=114, live_throughout: 0, 13, 14, 141, 176, dead_or_set: 1
insn=76, live_throughout: 0, 1, 13, 14, 141, 176, dead_or_set: 167
insn=77, live_throughout: 0, 1, 13, 14, 141, 176, dead_or_set: 167
insn=78, live_throughout: 0, 1, 13, 14, 141, 176, dead_or_set: 
insn=80, live_throughout: 13, 14, dead_or_set: 134
insn=97, live_throughout: 13, 14, 134, dead_or_set: 174
insn=120, live_throughout: 13, 14, 134, 174, dead_or_set: 
insn=96, live_throughout: 0, 1, 13, 134, 174, dead_or_set: 
insn=88, live_throughout: 13, 134, 174, dead_or_set: 0, 1, 14
insn=90, live_throughout: 13, 134, 174, dead_or_set: 0
insn=112, live_throughout: 0, 13, 134, 174, dead_or_set: 1
insn=93, live_throughout: 0, 1, 13, 174, dead_or_set: 134
insn=92, live_throughout: 13, 134, 174, dead_or_set: 0, 1, 14
insn=94, live_throughout: 13, 14, 134, 174, dead_or_set: 
insn=86, live_throughout: 13, 14, 134, 174, dead_or_set: 0
insn=111, live_throughout: 0, 13, 14, 134, 174, dead_or_set: 1
insn=98, live_throughout: 0, 1, 13, 14, 134, 174, dead_or_set: 173
insn=99, live_throughout: 0, 1, 13, 14, 134, 174, dead_or_set: 173
insn=100, live_throughout: 0, 1, 13, 14, 134, 174, dead_or_set: 
insn=106, live_throughout: 13, 14, dead_or_set: 
init_insns for 147: (insn_list:REG_DEP_TRUE 126 (nil))
init_insns for 154: (insn_list:REG_DEP_TRUE 125 (nil))
init_insns for 158: (insn_list:REG_DEP_TRUE 34 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 37 (nil))
init_insns for 161: (insn_list:REG_DEP_TRUE 42 (nil))
init_insns for 162: (insn_list:REG_DEP_TRUE 45 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 98 (nil))
init_insns for 174: (insn_list:REG_DEP_TRUE 97 (nil))
init_insns for 176: (insn_list:REG_DEP_TRUE 72 (nil))
changing reg in insn 93
changing reg in insn 80
changing reg in insn 90
changing reg in insn 86
changing reg in insn 99
changing reg in insn 93
changing reg in insn 30
changing reg in insn 35
changing reg in insn 16
changing reg in insn 18
changing reg in insn 55
changing reg in insn 68
changing reg in insn 65
changing reg in insn 61
changing reg in insn 77
changing reg in insn 68
changing reg in insn 52
changing reg in insn 55
changing reg in insn 10
changing reg in insn 31
changing reg in insn 26
changing reg in insn 24
changing reg in insn 3
changing reg in insn 37
changing reg in insn 34
changing reg in insn 36
changing reg in insn 34
changing reg in insn 123
changing reg in insn 122
changing reg in insn 123
changing reg in insn 10
changing reg in insn 126
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 30
changing reg in insn 125
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 35
changing reg in insn 34
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 37
changing reg in insn 42
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 76
changing reg in insn 77
changing reg in insn 98
changing reg in insn 99
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 72
changing reg in insn 76
changing reg in insn 76
Spilling for insn 122.
Using reg 2 for reload 0
Spilling for insn 37.
Spilling for insn 76.
Using reg 2 for reload 0

Reloads for insn # 122
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 37
Reload 0: reload_out (SI) = (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:144 info ] [144]) [0 <variable>.bits+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:144 info ] [144]) [0 <variable>.bits+0 S4 A32])

Reloads for insn # 76
Reload 0: reload_out (SI) = (scratch:SI)
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 4)
	reload_out_reg: (scratch:SI)
	reload_reg_rtx: (reg:SI 2 r2)
deleting insn with uid = 55.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 50.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 92.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 23 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 28 (    2)


reset_ctrl_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,8u} r1={13d,6u} r2={12d,4u} r3={19d,12u} r4={8d,14u} r5={3d,5u,3d} r12={7d} r13={1d,20u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={11d,5u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 831{753d,75u,3e} in 61{55 regular + 6 call} insns.
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 4 128 2 NOTE_INSN_DELETED)

(insn 128 8 122 2 arch/arm/kernel/hw_breakpoint.c:839 (set (reg:SI 2 r2)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 122 128 123 2 arch/arm/kernel/hw_breakpoint.c:839 (set (reg:SI 3 r3 [145])
        (and:SI (reg:SI 2 r2)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 123 122 3 2 arch/arm/kernel/hw_breakpoint.c:839 (set (reg:SI 3 r3 [145])
        (and:SI (reg:SI 3 r3 [145])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 3 123 126 2 arch/arm/kernel/hw_breakpoint.c:838 (set (reg/v/f:SI 5 r5 [orig:144 info ] [144])
        (reg:SI 0 r0 [ info ])) 167 {*arm_movsi_insn} (nil))

(insn 126 3 12 2 arch/arm/kernel/hw_breakpoint.c:851 (set (reg/f:SI 2 r2 [147])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 12 126 10 2 arch/arm/kernel/hw_breakpoint.c:851 (set (reg:SI 2 r2 [orig:148 debug_arch ] [148])
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 2 r2 [147]) [0 debug_arch+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_arch+0 S1 A8]))
        (nil)))

(insn 10 12 13 2 arch/arm/kernel/hw_breakpoint.c:839 (set (reg:SI 4 r4 [orig:143 D.24209 ] [143])
        (mem/s/j:SI (plus:SI (reg:SI 3 r3 [145])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 10 14 2 arch/arm/kernel/hw_breakpoint.c:851 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:148 debug_arch ] [148])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 2 arch/arm/kernel/hw_breakpoint.c:851 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [71.0%]  (fallthru)
;; Succ edge  6 [29.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [71.0%]  (fallthru)
(note 15 14 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 17 15 16 3 NOTE_INSN_DELETED)

(insn 16 17 18 3 arch/arm/kernel/hw_breakpoint.c:856 (set (reg/v:SI 3 r3 [orig:140 dbg_power ] [140])
        (asm_operands/v:SI ("mrc p14, 0, %0, c1, c5, 4") ("=r") 0 []
             [] 8176279)) -1 (nil))

(insn 18 16 19 3 arch/arm/kernel/hw_breakpoint.c:857 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg/v:SI 3 r3 [orig:140 dbg_power ] [140])
                (const_int 1 [0x1])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 19 18 20 3 arch/arm/kernel/hw_breakpoint.c:857 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru)
(note 20 19 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 28 20 23 4 NOTE_INSN_DELETED)

(insn 23 28 24 4 arch/arm/kernel/hw_breakpoint.c:858 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11520280>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11520280>)
        (nil)))

(insn 24 23 25 4 arch/arm/kernel/hw_breakpoint.c:858 (set (reg:SI 1 r1)
        (reg:SI 4 r4 [orig:143 D.24209 ] [143])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 31 4 arch/arm/kernel/hw_breakpoint.c:858 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 31 25 26 4 include/linux/bitmap.h:202 (set (reg:SI 3 r3 [155])
        (lshiftrt:SI (reg:SI 4 r4 [orig:143 D.24209 ] [143])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 26 31 27 4 include/linux/cpumask.h:738 (set (reg:SI 4 r4 [151])
        (and:SI (reg:SI 4 r4 [orig:143 D.24209 ] [143])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 27 26 32 4 include/linux/cpumask.h:738 (set (reg:SI 4 r4 [152])
        (plus:SI (reg:SI 4 r4 [151])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 32 27 33 4 include/linux/bitmap.h:202 (set (reg:SI 3 r3 [156])
        (ashift:SI (reg:SI 3 r3 [155])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (nil))

(insn 33 32 34 4 include/linux/bitmap.h:202 (set (reg:SI 3 r3 [157])
        (neg:SI (reg:SI 3 r3 [156]))) 127 {*arm_negsi2} (nil))

(insn 34 33 125 4 include/linux/bitmap.h:202 (set (reg:SI 2 r2 [orig:158 <variable>.bits ] [158])
        (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:144 info ] [144]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:144 info ] [144]) [0 <variable>.bits+0 S4 A32])
        (nil)))

(insn 125 34 30 4 include/linux/cpumask.h:738 (set (reg/f:SI 1 r1 [154])
        (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c42120 cpu_bit_bitmap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c42120 cpu_bit_bitmap>)
        (nil)))

(insn 30 125 35 4 include/linux/cpumask.h:738 (set (reg/v/f:SI 4 r4 [orig:137 p ] [137])
        (plus:SI (mult:SI (reg:SI 4 r4 [152])
                (const_int 4 [0x4]))
            (reg/f:SI 1 r1 [154]))) 270 {*arith_shiftsi} (nil))

(insn 35 30 36 4 include/linux/bitmap.h:202 (set (reg:SI 3 r3 [orig:159 <variable>.bits ] [159])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:137 p ] [137])
                (reg:SI 3 r3 [157])) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 36 35 37 4 include/linux/bitmap.h:202 (set (reg:SI 3 r3 [160])
        (ior:SI (reg:SI 2 r2 [orig:158 <variable>.bits ] [158])
            (reg:SI 3 r3 [orig:159 <variable>.bits ] [159]))) 89 {*arm_iorsi3} (expr_list:REG_EQUIV (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:144 info ] [144]) [0 <variable>.bits+0 S4 A32])
        (nil)))

(insn 37 36 116 4 include/linux/bitmap.h:202 (set (mem/s/j:SI (reg/v/f:SI 5 r5 [orig:144 info ] [144]) [0 <variable>.bits+0 S4 A32])
        (reg:SI 3 r3 [160])) 167 {*arm_movsi_insn} (nil))

(jump_insn 116 37 117 4 (set (pc)
        (label_ref 106)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 13)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 117 116 40)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 40 117 41 5 238 "" [1 uses])

(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 5 arch/arm/kernel/hw_breakpoint.c:867 (set (reg:SI 3 r3 [161])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 43 42 44 5 arch/arm/kernel/hw_breakpoint.c:867 (asm_operands/v ("mcr p14, 0, %0, c1, c0, 4") ("") 0 [
            (reg:SI 3 r3 [161])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8177687) -1 (nil))

(insn 44 43 45 5 arch/arm/kernel/hw_breakpoint.c:868 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8177815)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 45 44 46 5 arch/arm/kernel/hw_breakpoint.c:874 (set (reg:SI 3 r3 [162])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 46 45 47 5 arch/arm/kernel/hw_breakpoint.c:874 (asm_operands/v ("mcr p14, 0, %0, c0, c7, 0") ("") 0 [
            (reg:SI 3 r3 [162])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8178583) -1 (nil))

(insn 47 46 48 5 arch/arm/kernel/hw_breakpoint.c:875 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8178711)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 48 47 49 6 237 "" [1 uses])

(note 49 48 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 51 49 50 6 NOTE_INSN_DELETED)

(call_insn 50 51 52 6 arch/arm/kernel/hw_breakpoint.c:878 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enable_monitor_mode") [flags 0x3] <function_decl 0x113d8c80 enable_monitor_mode>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 52 50 53 6 arch/arm/kernel/hw_breakpoint.c:878 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 4 r4 [orig:142 D.24218 ] [142])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 53 52 54 6 arch/arm/kernel/hw_breakpoint.c:878 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 106)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil)))
;; End of basic block 6 -> ( 13 7)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  13 [39.0%] 
;; Succ edge  7 [61.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  6 [61.0%]  (fallthru)
(note 54 53 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 72 54 118 7 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (reg/f:SI 5 r5 [176])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(jump_insn 118 72 119 7 (set (pc)
        (label_ref 69)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  9 [100.0%] 

(barrier 119 118 71)

;; Start of basic block ( 9) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  9 [91.0%] 
(code_label 71 119 58 8 241 "" [1 uses])

(note 58 71 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 60 58 64 8 NOTE_INSN_DELETED)

(note 64 60 63 8 NOTE_INSN_DELETED)

(call_insn 63 64 65 8 arch/arm/kernel/hw_breakpoint.c:883 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 65 63 115 8 arch/arm/kernel/hw_breakpoint.c:884 (set (reg:SI 0 r0)
        (plus:SI (reg/v:SI 4 r4 [orig:141 i ] [141])
            (const_int 64 [0x40]))) 4 {*arm_addsi3} (nil))

(insn 115 65 68 8 arch/arm/kernel/hw_breakpoint.c:884 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 68 115 67 8 arch/arm/kernel/hw_breakpoint.c:882 discrim 2 (set (reg/v:SI 4 r4 [orig:141 i ] [141])
        (plus:SI (reg/v:SI 4 r4 [orig:141 i ] [141])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(call_insn 67 68 69 8 arch/arm/kernel/hw_breakpoint.c:884 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  9 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 8 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 2 [r2]

;; Pred edge  8 [100.0%]  (fallthru,dfs_back)
;; Pred edge  7 [100.0%] 
(code_label 69 67 70 9 240 "" [1 uses])

(note 70 69 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 74 70 75 9 NOTE_INSN_DELETED)

(note 75 74 61 9 NOTE_INSN_DELETED)

(insn 61 75 114 9 arch/arm/kernel/hw_breakpoint.c:883 (set (reg:SI 0 r0)
        (plus:SI (reg/v:SI 4 r4 [orig:141 i ] [141])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 114 61 76 9 arch/arm/kernel/hw_breakpoint.c:883 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 76 114 77 9 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (parallel [
            (set (reg:SI 3 r3 [167])
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 5 r5 [176])
                            (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])
                    (mem/c/i:SI (plus:SI (reg/f:SI 5 r5 [176])
                            (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])))
            (clobber (reg:SI 2 r2))
        ]) 321 {*arith_adjacentmem} (nil))

(insn 77 76 78 9 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:141 i ] [141])
            (reg:SI 3 r3 [167]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 78 77 79 9 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 9 -> ( 8 10)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  8 [91.0%] 
;; Succ edge  10 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5]
;; live  in  	 13 [sp]
;; live  gen 	 4 [r4] 5 [r5]
;; live  kill	

;; Pred edge  9 [9.0%]  (fallthru,loop_exit)
(note 79 78 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 97 10 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (reg/v:SI 4 r4 [orig:134 i.816 ] [134])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 97 80 120 10 arch/arm/kernel/hw_breakpoint.c:887 discrim 1 (set (reg/f:SI 5 r5 [174])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(jump_insn 120 97 121 10 (set (pc)
        (label_ref 94)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  12 [100.0%] 

(barrier 121 120 96)

;; Start of basic block ( 12) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  12 [91.0%] 
(code_label 96 121 83 11 243 "" [1 uses])

(note 83 96 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 85 83 89 11 NOTE_INSN_DELETED)

(note 89 85 88 11 NOTE_INSN_DELETED)

(call_insn 88 89 90 11 arch/arm/kernel/hw_breakpoint.c:888 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 90 88 112 11 arch/arm/kernel/hw_breakpoint.c:889 (set (reg:SI 0 r0)
        (plus:SI (reg/v:SI 4 r4 [orig:134 i.816 ] [134])
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(insn 112 90 93 11 arch/arm/kernel/hw_breakpoint.c:889 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 93 112 92 11 arch/arm/kernel/hw_breakpoint.c:887 discrim 2 (set (reg/v:SI 4 r4 [orig:134 i.816 ] [134])
        (plus:SI (reg/v:SI 4 r4 [orig:134 i.816 ] [134])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(call_insn 92 93 94 11 arch/arm/kernel/hw_breakpoint.c:889 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 11 -> ( 12)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru,dfs_back)
;; Pred edge  10 [100.0%] 
(code_label 94 92 95 12 242 "" [1 uses])

(note 95 94 86 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 86 95 111 12 arch/arm/kernel/hw_breakpoint.c:888 (set (reg:SI 0 r0)
        (plus:SI (reg/v:SI 4 r4 [orig:134 i.816 ] [134])
            (const_int 112 [0x70]))) 4 {*arm_addsi3} (nil))

(insn 111 86 98 12 arch/arm/kernel/hw_breakpoint.c:888 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 98 111 99 12 arch/arm/kernel/hw_breakpoint.c:887 discrim 1 (set (reg:SI 3 r3 [orig:173 core_num_wrps ] [173])
        (mem/c/i:SI (plus:SI (reg/f:SI 5 r5 [174])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 5 r5 [174])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 core_num_wrps+0 S4 A32])
            (nil))))

(insn 99 98 100 12 arch/arm/kernel/hw_breakpoint.c:887 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:134 i.816 ] [134])
            (reg:SI 3 r3 [orig:173 core_num_wrps ] [173]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 100 99 106 12 arch/arm/kernel/hw_breakpoint.c:887 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 96)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 12 -> ( 11 13)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  11 [91.0%] 
;; Succ edge  13 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 12 6 4) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  12 [9.0%]  (fallthru,loop_exit)
;; Pred edge  6 [39.0%] 
;; Pred edge  4 [100.0%] 
(code_label 106 100 109 13 244 "" [2 uses])

(note 109 106 124 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 13 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 124 109 127 NOTE_INSN_DELETED)

(note 127 124 0 NOTE_INSN_DELETED)


;; Function arch_validate_hwbkpt_settings (arch_validate_hwbkpt_settings)[0:1261]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 315.
verify found no changes in insn with uid = 315.
deleting insn with uid = 162.
scanning new insn with uid = 316.
verify found no changes in insn with uid = 316.
deleting insn with uid = 131.
scanning new insn with uid = 317.
verify found no changes in insn with uid = 317.
deleting insn with uid = 49.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 58 count 62 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 58 count 66 (  1.9)

Pass 0 for finding allocno costs

    a2 (r231,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r223,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r221,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r220,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r219,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r217,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r216,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r215,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r213,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r211,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r206,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r205,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r203,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r201,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r197,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r191,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r173,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r171,l0) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r160,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r153,l0) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r151,l0) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r231,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r220,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:440000
  a6(r217,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a7(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r211,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a14(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:32000
  a15(r141,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a16(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a17(r206,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a18(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a20(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a25(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a28(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a34(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a36(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a38(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a39(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a40(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a42(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a47(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a48(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a49(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a50(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a51(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a52(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r231: preferred GENERAL_REGS, alternative NO_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS
    r221: preferred GENERAL_REGS, alternative NO_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS
    r217: preferred GENERAL_REGS, alternative NO_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS
    r206: preferred GENERAL_REGS, alternative NO_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r221,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r231,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r220,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:440000
  a6(r217,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a7(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a9(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r211,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a14(r135,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:32000
  a15(r141,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a16(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a17(r206,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:22000
  a18(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a20(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r193,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a25(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r191,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a28(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r171,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a34(r173,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a36(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a38(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a39(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a40(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a42(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r160,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r151,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a47(r153,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a48(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a49(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a50(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a51(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a52(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 273(l0): point = 0
   Insn 267(l0): point = 2
   Insn 260(l0): point = 5
   Insn 304(l0): point = 8
   Insn 255(l0): point = 10
   Insn 302(l0): point = 13
   Insn 250(l0): point = 15
   Insn 249(l0): point = 17
   Insn 247(l0): point = 19
   Insn 245(l0): point = 21
   Insn 244(l0): point = 23
   Insn 243(l0): point = 25
   Insn 242(l0): point = 27
   Insn 237(l0): point = 30
   Insn 236(l0): point = 32
   Insn 231(l0): point = 34
   Insn 230(l0): point = 36
   Insn 227(l0): point = 39
   Insn 226(l0): point = 41
   Insn 225(l0): point = 43
   Insn 223(l0): point = 46
   Insn 222(l0): point = 48
   Insn 220(l0): point = 50
   Insn 218(l0): point = 53
   Insn 217(l0): point = 55
   Insn 215(l0): point = 57
   Insn 214(l0): point = 59
   Insn 212(l0): point = 62
   Insn 209(l0): point = 64
   Insn 208(l0): point = 66
   Insn 205(l0): point = 68
   Insn 200(l0): point = 70
   Insn 211(l0): point = 72
   Insn 207(l0): point = 74
   Insn 204(l0): point = 76
   Insn 210(l0): point = 78
   Insn 199(l0): point = 80
   Insn 201(l0): point = 82
   Insn 195(l0): point = 85
   Insn 194(l0): point = 87
   Insn 191(l0): point = 90
   Insn 190(l0): point = 92
   Insn 300(l0): point = 95
   Insn 185(l0): point = 98
   Insn 184(l0): point = 100
   Insn 183(l0): point = 103
   Insn 181(l0): point = 106
   Insn 180(l0): point = 108
   Insn 160(l0): point = 110
   Insn 179(l0): point = 112
   Insn 159(l0): point = 114
   Insn 282(l0): point = 116
   Insn 315(l0): point = 118
   Insn 309(l0): point = 120
   Insn 158(l0): point = 122
   Insn 161(l0): point = 124
   Insn 156(l0): point = 126
   Insn 155(l0): point = 128
   Insn 178(l0): point = 130
   Insn 150(l0): point = 132
   Insn 154(l0): point = 134
   Insn 308(l0): point = 136
   Insn 148(l0): point = 138
   Insn 145(l0): point = 141
   Insn 143(l0): point = 143
   Insn 140(l0): point = 145
   Insn 138(l0): point = 148
   Insn 137(l0): point = 150
   Insn 135(l0): point = 152
   Insn 133(l0): point = 154
   Insn 128(l0): point = 156
   Insn 132(l0): point = 158
   Insn 316(l0): point = 160
   Insn 134(l0): point = 162
   Insn 130(l0): point = 164
   Insn 127(l0): point = 166
   Insn 124(l0): point = 169
   Insn 123(l0): point = 171
   Insn 121(l0): point = 174
   Insn 120(l0): point = 176
   Insn 312(l0): point = 178
   Insn 311(l0): point = 180
   Insn 117(l0): point = 182
   Insn 115(l0): point = 185
   Insn 114(l0): point = 187
   Insn 109(l0): point = 189
   Insn 106(l0): point = 192
   Insn 105(l0): point = 194
   Insn 104(l0): point = 196
   Insn 103(l0): point = 198
   Insn 101(l0): point = 201
   Insn 100(l0): point = 203
   Insn 95(l0): point = 205
   Insn 94(l0): point = 207
   Insn 93(l0): point = 209
   Insn 92(l0): point = 211
   Insn 91(l0): point = 213
   Insn 297(l0): point = 216
   Insn 85(l0): point = 218
   Insn 84(l0): point = 220
   Insn 83(l0): point = 222
   Insn 82(l0): point = 224
   Insn 295(l0): point = 227
   Insn 76(l0): point = 229
   Insn 75(l0): point = 231
   Insn 74(l0): point = 233
   Insn 73(l0): point = 235
   Insn 293(l0): point = 238
   Insn 67(l0): point = 240
   Insn 66(l0): point = 242
   Insn 65(l0): point = 244
   Insn 64(l0): point = 246
   Insn 57(l0): point = 249
   Insn 56(l0): point = 252
   Insn 55(l0): point = 254
   Insn 54(l0): point = 256
   Insn 53(l0): point = 258
   Insn 51(l0): point = 260
   Insn 50(l0): point = 262
   Insn 317(l0): point = 268
   Insn 52(l0): point = 270
   Insn 48(l0): point = 272
   Insn 45(l0): point = 275
   Insn 43(l0): point = 277
   Insn 40(l0): point = 279
   Insn 291(l0): point = 282
   Insn 35(l0): point = 284
   Insn 34(l0): point = 286
   Insn 33(l0): point = 288
   Insn 32(l0): point = 290
   Insn 289(l0): point = 293
   Insn 26(l0): point = 295
   Insn 25(l0): point = 297
   Insn 24(l0): point = 299
   Insn 23(l0): point = 301
   Insn 287(l0): point = 304
   Insn 17(l0): point = 306
   Insn 16(l0): point = 308
   Insn 15(l0): point = 310
   Insn 8(l0): point = 313
   Insn 7(l0): point = 315
   Insn 6(l0): point = 317
   Insn 2(l0): point = 319
 a0(r137): [13..15] [8..10] [3..5]
 a1(r221): [18..36]
 a2(r231): [18..19]
 a3(r223): [33..34]
 a4(r220): [42..43]
 a5(r143): [44..319]
 a6(r217): [65..74]
 a7(r216): [67..68]
 a8(r136): [69..112]
 a9(r215): [69..76]
 a10(r211): [71..80]
 a11(r219): [73..78]
 a12(r213): [75..82]
 a13(r140): [81..130]
 a14(r135): [81..116]
 a15(r141): [88..136]
 a16(r203): [111..122]
 a17(r206): [117..118]
 a18(r205): [121..124]
 a19(r201): [127..134]
 a20(r198): [129..132]
 a21(r197): [133..138]
 a22(r194): [142..143]
 a23(r193): [144..145]
 a24(r189): [155..164]
 a25(r188): [157..166]
 a26(r191): [159..160]
 a27(r133): [172..180]
 a28(r186): [179..182]
 a29(r182): [188..189]
 a30(r180): [195..196]
 a31(r179): [197..198]
 a32(r175): [204..205]
 a33(r171): [206..213]
 a34(r173): [210..211]
 a35(r168): [219..224]
 a36(r170): [221..222]
 a37(r165): [230..235]
 a38(r167): [232..233]
 a39(r162): [241..246]
 a40(r164): [243..244]
 a41(r158): [250..272]
 a42(r161): [255..256]
 a43(r160): [263..268]
 a44(r156): [276..277]
 a45(r155): [278..279]
 a46(r151): [285..290]
 a47(r153): [287..288]
 a48(r148): [296..301]
 a49(r150): [298..299]
 a50(r146): [307..310]
 a51(r145): [314..315]
 a52(r144): [316..317]
Compressing live ranges: from 322 to 107 - 33%
Ranges after the compression:
 a0(r137): [4..5] [2..3] [0..1]
 a1(r221): [6..10]
 a2(r231): [6..7]
 a3(r223): [8..9]
 a4(r220): [11..12]
 a5(r143): [13..106]
 a6(r217): [14..20]
 a7(r216): [15..16]
 a8(r136): [17..29]
 a9(r215): [17..22]
 a10(r211): [18..24]
 a11(r219): [19..23]
 a12(r213): [21..26]
 a13(r140): [25..38]
 a14(r135): [25..30]
 a15(r141): [27..42]
 a16(r203): [28..34]
 a17(r206): [31..32]
 a18(r205): [33..35]
 a19(r201): [36..41]
 a20(r198): [37..39]
 a21(r197): [40..43]
 a22(r194): [44..45]
 a23(r193): [46..47]
 a24(r189): [48..52]
 a25(r188): [49..53]
 a26(r191): [50..51]
 a27(r133): [54..56]
 a28(r186): [55..57]
 a29(r182): [58..59]
 a30(r180): [60..61]
 a31(r179): [62..63]
 a32(r175): [64..65]
 a33(r171): [66..69]
 a34(r173): [67..68]
 a35(r168): [70..73]
 a36(r170): [71..72]
 a37(r165): [74..77]
 a38(r167): [75..76]
 a39(r162): [78..81]
 a40(r164): [79..80]
 a41(r158): [82..87]
 a42(r161): [83..84]
 a43(r160): [85..86]
 a44(r156): [88..89]
 a45(r155): [90..91]
 a46(r151): [92..95]
 a47(r153): [93..94]
 a48(r148): [96..99]
 a49(r150): [97..98]
 a50(r146): [100..101]
 a51(r145): [102..103]
 a52(r144): [104..105]
+++Allocating 408 bytes for conflict table (uncompressed size 424)
;; a0(r137,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r221,l0) conflicts: a2(r231,l0) a3(r223,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a2(r231,l0) conflicts: a1(r221,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r223,l0) conflicts: a1(r221,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r220,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r143,l0) conflicts: a6(r217,l0) a7(r216,l0) a9(r215,l0) a8(r136,l0) a10(r211,l0) a11(r219,l0) a12(r213,l0) a14(r135,l0) a13(r140,l0) a15(r141,l0) a16(r203,l0) a17(r206,l0) a18(r205,l0) a19(r201,l0) a20(r198,l0) a21(r197,l0) a22(r194,l0) a23(r193,l0) a24(r189,l0) a25(r188,l0) a26(r191,l0) a27(r133,l0) a28(r186,l0) a29(r182,l0) a30(r180,l0) a31(r179,l0) a32(r175,l0) a33(r171,l0) a34(r173,l0) a35(r168,l0) a36(r170,l0) a37(r165,l0) a38(r167,l0) a39(r162,l0) a40(r164,l0) a41(r158,l0) a42(r161,l0) a43(r160,l0) a44(r156,l0) a45(r155,l0) a46(r151,l0) a47(r153,l0) a48(r148,l0) a49(r150,l0) a50(r146,l0) a51(r145,l0) a52(r144,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a6(r217,l0) conflicts: a5(r143,l0) a7(r216,l0) a9(r215,l0) a8(r136,l0) a10(r211,l0) a11(r219,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r216,l0) conflicts: a5(r143,l0) a6(r217,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r136,l0) conflicts: a5(r143,l0) a6(r217,l0) a9(r215,l0) a10(r211,l0) a11(r219,l0) a12(r213,l0) a14(r135,l0) a13(r140,l0) a15(r141,l0) a16(r203,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r215,l0) conflicts: a5(r143,l0) a6(r217,l0) a8(r136,l0) a10(r211,l0) a11(r219,l0) a12(r213,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r211,l0) conflicts: a5(r143,l0) a6(r217,l0) a9(r215,l0) a8(r136,l0) a11(r219,l0) a12(r213,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r219,l0) conflicts: a5(r143,l0) a6(r217,l0) a9(r215,l0) a8(r136,l0) a10(r211,l0) a12(r213,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r213,l0) conflicts: a5(r143,l0) a9(r215,l0) a8(r136,l0) a10(r211,l0) a11(r219,l0) a14(r135,l0) a13(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r140,l0) conflicts: a5(r143,l0) a8(r136,l0) a12(r213,l0) a14(r135,l0) a15(r141,l0) a16(r203,l0) a17(r206,l0) a18(r205,l0) a19(r201,l0) a20(r198,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r135,l0) conflicts: a5(r143,l0) a8(r136,l0) a12(r213,l0) a13(r140,l0) a15(r141,l0) a16(r203,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r141,l0) conflicts: a5(r143,l0) a8(r136,l0) a14(r135,l0) a13(r140,l0) a16(r203,l0) a17(r206,l0) a18(r205,l0) a19(r201,l0) a20(r198,l0) a21(r197,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r203,l0) conflicts: a5(r143,l0) a8(r136,l0) a14(r135,l0) a13(r140,l0) a15(r141,l0) a17(r206,l0) a18(r205,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r206,l0) conflicts: a5(r143,l0) a13(r140,l0) a15(r141,l0) a16(r203,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r205,l0) conflicts: a5(r143,l0) a13(r140,l0) a15(r141,l0) a16(r203,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r201,l0) conflicts: a5(r143,l0) a13(r140,l0) a15(r141,l0) a20(r198,l0) a21(r197,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r198,l0) conflicts: a5(r143,l0) a13(r140,l0) a15(r141,l0) a19(r201,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a21(r197,l0) conflicts: a5(r143,l0) a15(r141,l0) a19(r201,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a22(r194,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a23(r193,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a24(r189,l0) conflicts: a5(r143,l0) a25(r188,l0) a26(r191,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a25(r188,l0) conflicts: a5(r143,l0) a24(r189,l0) a26(r191,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a26(r191,l0) conflicts: a5(r143,l0) a24(r189,l0) a25(r188,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a27(r133,l0) conflicts: a5(r143,l0) a28(r186,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a28(r186,l0) conflicts: a5(r143,l0) a27(r133,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a29(r182,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a30(r180,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a31(r179,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a32(r175,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a33(r171,l0) conflicts: a5(r143,l0) a34(r173,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a34(r173,l0) conflicts: a5(r143,l0) a33(r171,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a35(r168,l0) conflicts: a5(r143,l0) a36(r170,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a36(r170,l0) conflicts: a5(r143,l0) a35(r168,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a37(r165,l0) conflicts: a5(r143,l0) a38(r167,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a38(r167,l0) conflicts: a5(r143,l0) a37(r165,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a39(r162,l0) conflicts: a5(r143,l0) a40(r164,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a40(r164,l0) conflicts: a5(r143,l0) a39(r162,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a41(r158,l0) conflicts: a5(r143,l0) a42(r161,l0) a43(r160,l0)
;;     total conflict hard regs: 0-3 14
;;     conflict hard regs: 0-3 14
;; a42(r161,l0) conflicts: a5(r143,l0) a41(r158,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a43(r160,l0) conflicts: a5(r143,l0) a41(r158,l0)
;;     total conflict hard regs: 2 3
;;     conflict hard regs: 2 3
;; a44(r156,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a45(r155,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a46(r151,l0) conflicts: a5(r143,l0) a47(r153,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a47(r153,l0) conflicts: a5(r143,l0) a46(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a48(r148,l0) conflicts: a5(r143,l0) a49(r150,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a49(r150,l0) conflicts: a5(r143,l0) a48(r148,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a50(r146,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a51(r145,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a52(r144,l0) conflicts: a5(r143,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a10(r211)<->a13(r140)@125:shuffle
  cp1:a10(r211)<->a14(r135)@125:shuffle
  cp2:a6(r217)<->a12(r213)@1000:move
  cp3:a7(r216)<->a9(r215)@125:shuffle
  cp4:a7(r216)<->a8(r136)@125:shuffle
  cp5:a20(r198)<->a21(r197)@125:shuffle
  cp6:a14(r135)<->a17(r206)@125:shuffle
  cp7:a22(r194)<->a23(r193)@125:shuffle
  cp8:a32(r175)<->a33(r171)@125:shuffle
  cp9:a44(r156)<->a45(r155)@125:shuffle
  cp10:a51(r145)<->a52(r144)@125:shuffle
  regions=1, blocks=34, points=107
    allocnos=53, copies=11, conflicts=13, ranges=55

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r137 1r221 2r231 3r223 4r220 5r143 6r217 7r216 8r136 9r215 10r211 11r219 12r213 13r140 14r135 15r141 16r203 17r206 18r205 19r201 20r198 21r197 22r194 23r193 24r189 25r188 26r191 27r133 28r186 29r182 30r180 31r179 32r175 33r171 34r173 35r168 36r170 37r165 38r167 39r162 40r164 41r158 42r161 43r160 44r156 45r155 46r151 47r153 48r148 49r150 50r146 51r145 52r144
    modified regnos: 133 135 136 137 140 141 143 144 145 146 148 150 151 153 155 156 158 160 161 162 164 165 167 168 170 171 173 175 179 180 182 186 188 189 191 193 194 197 198 201 203 205 206 211 213 215 216 217 219 220 221 223 231
    border:
    Pressure: GENERAL_REGS=8
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 221 of GENERAL_REGS has 4 regs less
    Reg 231 of GENERAL_REGS has 1 regs less
    Reg 223 of GENERAL_REGS has 1 regs less
    Reg 220 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 5 regs less
    Reg 217 of GENERAL_REGS has 1 regs less
    Reg 216 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 215 of GENERAL_REGS has 1 regs less
    Reg 211 of GENERAL_REGS has 1 regs less
    Reg 219 of GENERAL_REGS has 1 regs less
    Reg 213 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 203 of GENERAL_REGS has 1 regs less
    Reg 206 of GENERAL_REGS has 1 regs less
    Reg 205 of GENERAL_REGS has 1 regs less
    Reg 201 of GENERAL_REGS has 1 regs less
    Reg 198 of GENERAL_REGS has 1 regs less
    Reg 197 of GENERAL_REGS has 1 regs less
    Reg 194 of GENERAL_REGS has 1 regs less
    Reg 193 of GENERAL_REGS has 1 regs less
    Reg 189 of GENERAL_REGS has 1 regs less
    Reg 188 of GENERAL_REGS has 1 regs less
    Reg 191 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 186 of GENERAL_REGS has 1 regs less
    Reg 182 of GENERAL_REGS has 1 regs less
    Reg 180 of GENERAL_REGS has 1 regs less
    Reg 179 of GENERAL_REGS has 1 regs less
    Reg 175 of GENERAL_REGS has 1 regs less
    Reg 171 of GENERAL_REGS has 1 regs less
    Reg 173 of GENERAL_REGS has 1 regs less
    Reg 168 of GENERAL_REGS has 1 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
    Reg 165 of GENERAL_REGS has 1 regs less
    Reg 167 of GENERAL_REGS has 1 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 5 regs less
    Reg 161 of GENERAL_REGS has 1 regs less
    Reg 160 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
      Pushing a49(r150,l0)
      Pushing a47(r153,l0)
      Pushing a45(r155,l0)
      Pushing a44(r156,l0)
      Pushing a50(r146,l0)
      Pushing a48(r148,l0)
      Pushing a46(r151,l0)
      Pushing a52(r144,l0)
      Pushing a42(r161,l0)
      Pushing a40(r164,l0)
      Pushing a38(r167,l0)
      Pushing a36(r170,l0)
      Pushing a34(r173,l0)
      Pushing a32(r175,l0)
      Pushing a31(r179,l0)
      Pushing a30(r180,l0)
      Pushing a29(r182,l0)
      Pushing a28(r186,l0)
      Pushing a26(r191,l0)
      Pushing a25(r188,l0)
      Pushing a23(r193,l0)
      Pushing a22(r194,l0)
      Pushing a21(r197,l0)
      Pushing a20(r198,l0)
      Pushing a18(r205,l0)
      Pushing a17(r206,l0)
      Pushing a11(r219,l0)
      Pushing a10(r211,l0)
      Pushing a9(r215,l0)
      Pushing a7(r216,l0)
      Pushing a4(r220,l0)
      Pushing a3(r223,l0)
      Pushing a2(r231,l0)
      Pushing a51(r145,l0)
      Pushing a39(r162,l0)
      Pushing a37(r165,l0)
      Pushing a35(r168,l0)
      Pushing a24(r189,l0)
      Pushing a19(r201,l0)
      Pushing a16(r203,l0)
      Pushing a14(r135,l0)
      Pushing a13(r140,l0)
      Pushing a12(r213,l0)
      Pushing a6(r217,l0)
      Pushing a33(r171,l0)
      Pushing a8(r136,l0)
      Pushing a0(r137,l0)
      Pushing a27(r133,l0)
      Pushing a15(r141,l0)
      Pushing a43(r160,l0)
      Pushing a1(r221,l0)
      Pushing a41(r158,l0)
      Pushing a5(r143,l0)
      Popping a5(r143,l0)  -- assign reg 4
      Popping a41(r158,l0)  -- assign reg 6
      Popping a1(r221,l0)  -- assign reg 4
      Popping a43(r160,l0)  -- assign reg 0
      Popping a15(r141,l0)  -- assign reg 3
      Popping a27(r133,l0)  -- assign reg 3
      Popping a0(r137,l0)  -- assign reg 0
      Popping a8(r136,l0)  -- assign reg 2
      Popping a33(r171,l0)  -- assign reg 3
      Popping a6(r217,l0)  -- assign reg 3
      Popping a12(r213,l0)  -- assign reg 3
      Popping a13(r140,l0)  -- assign reg 1
      Popping a14(r135,l0)  -- assign reg 0
      Popping a16(r203,l0)  -- assign reg 12
      Popping a19(r201,l0)  -- assign reg 2
      Popping a24(r189,l0)  -- assign reg 3
      Popping a35(r168,l0)  -- assign reg 3
      Popping a37(r165,l0)  -- assign reg 3
      Popping a39(r162,l0)  -- assign reg 3
      Popping a51(r145,l0)  -- assign reg 3
      Popping a2(r231,l0)  -- assign reg 3
      Popping a3(r223,l0)  -- assign reg 3
      Popping a4(r220,l0)  -- assign reg 3
      Popping a7(r216,l0)  -- assign reg 2
      Popping a9(r215,l0)  -- assign reg 12
      Popping a10(r211,l0)  -- assign reg 1
      Popping a11(r219,l0)  -- assign reg 0
      Popping a17(r206,l0)  -- assign reg 0
      Popping a18(r205,l0)  -- assign reg 2
      Popping a20(r198,l0)  -- assign reg 0
      Popping a21(r197,l0)  -- assign reg 0
      Popping a22(r194,l0)  -- assign reg 3
      Popping a23(r193,l0)  -- assign reg 3
      Popping a25(r188,l0)  -- assign reg 2
      Popping a26(r191,l0)  -- assign reg 1
      Popping a28(r186,l0)  -- assign reg 2
      Popping a29(r182,l0)  -- assign reg 3
      Popping a30(r180,l0)  -- assign reg 3
      Popping a31(r179,l0)  -- assign reg 3
      Popping a32(r175,l0)  -- assign reg 3
      Popping a34(r173,l0)  -- assign reg 2
      Popping a36(r170,l0)  -- assign reg 2
      Popping a38(r167,l0)  -- assign reg 2
      Popping a40(r164,l0)  -- assign reg 2
      Popping a42(r161,l0)  -- assign reg 0
      Popping a52(r144,l0)  -- assign reg 3
      Popping a46(r151,l0)  -- assign reg 3
      Popping a48(r148,l0)  -- assign reg 3
      Popping a50(r146,l0)  -- assign reg 3
      Popping a44(r156,l0)  -- assign reg 3
      Popping a45(r155,l0)  -- assign reg 3
      Popping a47(r153,l0)  -- assign reg 2
      Popping a49(r150,l0)  -- assign reg 2
Disposition:
   27:r133 l0     3   14:r135 l0     0    8:r136 l0     2    0:r137 l0     0
   13:r140 l0     1   15:r141 l0     3    5:r143 l0     4   52:r144 l0     3
   51:r145 l0     3   50:r146 l0     3   48:r148 l0     3   49:r150 l0     2
   46:r151 l0     3   47:r153 l0     2   45:r155 l0     3   44:r156 l0     3
   41:r158 l0     6   43:r160 l0     0   42:r161 l0     0   39:r162 l0     3
   40:r164 l0     2   37:r165 l0     3   38:r167 l0     2   35:r168 l0     3
   36:r170 l0     2   33:r171 l0     3   34:r173 l0     2   32:r175 l0     3
   31:r179 l0     3   30:r180 l0     3   29:r182 l0     3   28:r186 l0     2
   25:r188 l0     2   24:r189 l0     3   26:r191 l0     1   23:r193 l0     3
   22:r194 l0     3   21:r197 l0     0   20:r198 l0     0   19:r201 l0     2
   16:r203 l0    12   18:r205 l0     2   17:r206 l0     0   10:r211 l0     1
   12:r213 l0     3    9:r215 l0    12    7:r216 l0     2    6:r217 l0     3
   11:r219 l0     0    4:r220 l0     3    1:r221 l0     4    3:r223 l0     3
    2:r231 l0     3
New iteration of spill/restore move
+++Costs: overall 1750, reg 1750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 143
insn=6, live_throughout: 13, 14, 143, dead_or_set: 144
insn=7, live_throughout: 13, 14, 143, dead_or_set: 144, 145
insn=8, live_throughout: 13, 14, 143, dead_or_set: 145
insn=9, live_throughout: 13, 143, dead_or_set: 
insn=10, live_throughout: 13, 143, dead_or_set: 
insn=12, live_throughout: 13, 143, dead_or_set: 
insn=15, live_throughout: 13, 143, dead_or_set: 146
insn=16, live_throughout: 13, 143, 146, dead_or_set: 146
insn=17, live_throughout: 13, 143, dead_or_set: 146
insn=287, live_throughout: 13, 143, dead_or_set: 
insn=20, live_throughout: 13, 143, dead_or_set: 
insn=23, live_throughout: 13, 143, dead_or_set: 148
insn=24, live_throughout: 13, 143, 148, dead_or_set: 150
insn=25, live_throughout: 13, 143, 148, dead_or_set: 148, 150
insn=26, live_throughout: 13, 143, dead_or_set: 148
insn=289, live_throughout: 13, 143, dead_or_set: 
insn=29, live_throughout: 13, 143, dead_or_set: 
insn=32, live_throughout: 13, 143, dead_or_set: 151
insn=33, live_throughout: 13, 143, 151, dead_or_set: 153
insn=34, live_throughout: 13, 143, 151, dead_or_set: 151, 153
insn=35, live_throughout: 13, 143, dead_or_set: 151
insn=291, live_throughout: 13, 143, dead_or_set: 
insn=38, live_throughout: 13, 143, dead_or_set: 
insn=40, live_throughout: 13, 143, dead_or_set: 155
insn=43, live_throughout: 13, 143, dead_or_set: 155, 156
insn=45, live_throughout: 13, 143, dead_or_set: 156
insn=46, live_throughout: 13, 143, dead_or_set: 
insn=48, live_throughout: 13, 143, dead_or_set: 158
insn=52, live_throughout: 13, 143, 158, dead_or_set: 2, 3
insn=317, live_throughout: 2, 3, 13, 143, 158, dead_or_set: 160
insn=50, live_throughout: 2, 3, 13, 143, dead_or_set: 158, 160
insn=51, live_throughout: 2, 3, 13, 143, 158, dead_or_set: 0, 1
insn=53, live_throughout: 13, 143, 158, dead_or_set: 0, 1, 2, 3, 14
insn=54, live_throughout: 13, 14, 143, 158, dead_or_set: 0, 161
insn=55, live_throughout: 13, 14, 143, 158, dead_or_set: 161
insn=56, live_throughout: 13, 14, 143, 158, dead_or_set: 
insn=57, live_throughout: 13, 14, 143, dead_or_set: 158
insn=58, live_throughout: 13, 14, 143, dead_or_set: 
insn=59, live_throughout: 13, 14, 143, dead_or_set: 
insn=61, live_throughout: 13, 14, 143, dead_or_set: 
insn=64, live_throughout: 13, 14, 143, dead_or_set: 162
insn=65, live_throughout: 13, 14, 143, 162, dead_or_set: 164
insn=66, live_throughout: 13, 14, 143, 162, dead_or_set: 162, 164
insn=67, live_throughout: 13, 14, 143, dead_or_set: 162
insn=293, live_throughout: 13, 14, 143, dead_or_set: 
insn=70, live_throughout: 13, 14, 143, dead_or_set: 
insn=73, live_throughout: 13, 14, 143, dead_or_set: 165
insn=74, live_throughout: 13, 14, 143, 165, dead_or_set: 167
insn=75, live_throughout: 13, 14, 143, 165, dead_or_set: 165, 167
insn=76, live_throughout: 13, 14, 143, dead_or_set: 165
insn=295, live_throughout: 13, 14, 143, dead_or_set: 
insn=79, live_throughout: 13, 14, 143, dead_or_set: 
insn=82, live_throughout: 13, 14, 143, dead_or_set: 168
insn=83, live_throughout: 13, 14, 143, 168, dead_or_set: 170
insn=84, live_throughout: 13, 14, 143, 168, dead_or_set: 168, 170
insn=85, live_throughout: 13, 14, 143, dead_or_set: 168
insn=297, live_throughout: 13, 14, 143, dead_or_set: 
insn=88, live_throughout: 13, 14, 143, dead_or_set: 
insn=91, live_throughout: 13, 14, 143, dead_or_set: 171
insn=92, live_throughout: 13, 14, 143, 171, dead_or_set: 173
insn=93, live_throughout: 13, 14, 143, 171, dead_or_set: 171, 173
insn=94, live_throughout: 13, 14, 143, 171, dead_or_set: 
insn=95, live_throughout: 13, 14, 143, dead_or_set: 171, 175
insn=100, live_throughout: 13, 14, 143, dead_or_set: 175
insn=101, live_throughout: 13, 14, 143, dead_or_set: 
insn=103, live_throughout: 13, 14, 143, dead_or_set: 179
insn=104, live_throughout: 13, 14, 143, dead_or_set: 179, 180
insn=105, live_throughout: 13, 14, 143, dead_or_set: 180
insn=106, live_throughout: 13, 14, 143, dead_or_set: 
insn=107, live_throughout: 13, 14, 143, dead_or_set: 
insn=109, live_throughout: 13, 14, 143, dead_or_set: 182
insn=114, live_throughout: 13, 14, 143, dead_or_set: 182
insn=115, live_throughout: 13, 14, 143, dead_or_set: 
insn=117, live_throughout: 13, 14, 143, dead_or_set: 186
insn=311, live_throughout: 13, 14, 143, 186, dead_or_set: 133
insn=312, live_throughout: 13, 14, 143, dead_or_set: 133, 186
insn=120, live_throughout: 13, 14, 133, 143, dead_or_set: 
insn=121, live_throughout: 13, 14, 133, 143, dead_or_set: 
insn=123, live_throughout: 13, 14, 143, dead_or_set: 133
insn=124, live_throughout: 13, 14, 143, dead_or_set: 
insn=125, live_throughout: 13, 143, dead_or_set: 
insn=127, live_throughout: 13, 143, dead_or_set: 188
insn=130, live_throughout: 13, 143, 188, dead_or_set: 189
insn=134, live_throughout: 13, 143, 188, 189, dead_or_set: 0
insn=316, live_throughout: 0, 13, 143, 188, 189, dead_or_set: 191
insn=132, live_throughout: 0, 13, 143, 188, 189, dead_or_set: 189, 191
insn=128, live_throughout: 0, 13, 143, 189, dead_or_set: 188
insn=133, live_throughout: 0, 13, 143, dead_or_set: 189
insn=135, live_throughout: 13, 143, dead_or_set: 0, 14
insn=137, live_throughout: 13, 14, 143, dead_or_set: 0
insn=138, live_throughout: 13, 14, 143, dead_or_set: 
insn=140, live_throughout: 13, 14, 143, dead_or_set: 193
insn=143, live_throughout: 13, 14, 143, dead_or_set: 193, 194
insn=145, live_throughout: 13, 14, 143, dead_or_set: 194
insn=146, live_throughout: 13, 14, 143, dead_or_set: 
insn=148, live_throughout: 13, 14, 143, dead_or_set: 197
insn=308, live_throughout: 13, 14, 143, 197, dead_or_set: 141
insn=154, live_throughout: 13, 14, 141, 143, 197, dead_or_set: 201
insn=150, live_throughout: 13, 14, 141, 143, 201, dead_or_set: 197, 198
insn=178, live_throughout: 13, 14, 141, 143, 198, 201, dead_or_set: 140
insn=155, live_throughout: 13, 14, 140, 141, 143, 201, dead_or_set: 198, 201
insn=156, live_throughout: 13, 14, 140, 141, 143, dead_or_set: 201
insn=161, live_throughout: 13, 14, 140, 141, 143, dead_or_set: 205
insn=158, live_throughout: 13, 14, 140, 141, 143, 205, dead_or_set: 203
insn=309, live_throughout: 13, 14, 140, 143, 203, dead_or_set: 141, 205
insn=315, live_throughout: 13, 14, 140, 141, 143, 203, dead_or_set: 206
insn=282, live_throughout: 13, 14, 140, 141, 143, 203, dead_or_set: 135, 206
insn=159, live_throughout: 13, 14, 135, 140, 141, 143, 203, dead_or_set: 203
insn=179, live_throughout: 13, 14, 135, 140, 141, 143, 203, dead_or_set: 136
insn=160, live_throughout: 13, 14, 135, 136, 140, 141, 143, dead_or_set: 203
insn=180, live_throughout: 13, 14, 135, 136, 140, 141, 143, dead_or_set: 
insn=181, live_throughout: 13, 14, 24, 135, 136, 140, 141, 143, dead_or_set: 
insn=183, live_throughout: 13, 14, 135, 136, 140, 141, 143, dead_or_set: 
insn=184, live_throughout: 13, 14, 135, 136, 140, 141, 143, dead_or_set: 
insn=185, live_throughout: 13, 14, 135, 136, 140, 141, 143, dead_or_set: 
insn=300, live_throughout: 13, 14, 135, 136, 140, 141, 143, dead_or_set: 
insn=188, live_throughout: 13, 14, 135, 136, 140, 141, 143, dead_or_set: 
insn=190, live_throughout: 13, 14, 135, 136, 140, 141, 143, dead_or_set: 
insn=191, live_throughout: 13, 14, 135, 136, 140, 141, 143, dead_or_set: 
insn=192, live_throughout: 13, 14, 135, 136, 140, 141, 143, dead_or_set: 
insn=194, live_throughout: 13, 14, 135, 136, 140, 143, dead_or_set: 141
insn=195, live_throughout: 13, 14, 135, 136, 140, 143, dead_or_set: 
insn=196, live_throughout: 13, 14, 135, 136, 140, 143, dead_or_set: 
insn=201, live_throughout: 13, 14, 135, 136, 140, 143, dead_or_set: 213
insn=199, live_throughout: 13, 14, 136, 143, 213, dead_or_set: 135, 140, 211
insn=210, live_throughout: 13, 14, 136, 143, 211, 213, dead_or_set: 219
insn=204, live_throughout: 13, 14, 136, 143, 211, 213, 219, dead_or_set: 215
insn=207, live_throughout: 13, 14, 136, 143, 211, 215, 219, dead_or_set: 213, 217
insn=211, live_throughout: 13, 14, 136, 143, 211, 215, 217, dead_or_set: 219
insn=200, live_throughout: 13, 14, 24, 136, 143, 215, 217, dead_or_set: 211
insn=205, live_throughout: 13, 14, 24, 143, 217, dead_or_set: 136, 215, 216
insn=208, live_throughout: 13, 14, 24, 143, 217, dead_or_set: 216, 217
insn=209, live_throughout: 13, 14, 24, 143, dead_or_set: 217
insn=212, live_throughout: 13, 14, 143, dead_or_set: 
insn=214, live_throughout: 13, 143, dead_or_set: 0
insn=215, live_throughout: 13, 143, dead_or_set: 0, 14
insn=217, live_throughout: 13, 14, 143, dead_or_set: 0
insn=218, live_throughout: 13, 14, 143, dead_or_set: 
insn=220, live_throughout: 13, 143, dead_or_set: 0, 14
insn=222, live_throughout: 13, 14, 143, dead_or_set: 0
insn=223, live_throughout: 13, 14, 143, dead_or_set: 
insn=225, live_throughout: 13, 14, dead_or_set: 143, 220
insn=226, live_throughout: 13, 14, dead_or_set: 220
insn=227, live_throughout: 13, 14, dead_or_set: 
insn=228, live_throughout: 13, 14, dead_or_set: 
insn=230, live_throughout: 13, 14, dead_or_set: 221
insn=231, live_throughout: 13, 14, 221, dead_or_set: 223
insn=236, live_throughout: 13, 14, 221, dead_or_set: 223
insn=237, live_throughout: 13, 14, 221, dead_or_set: 
insn=242, live_throughout: 13, 221, dead_or_set: 0
insn=243, live_throughout: 0, 13, 221, dead_or_set: 1
insn=244, live_throughout: 0, 1, 13, 221, dead_or_set: 2
insn=245, live_throughout: 13, 221, dead_or_set: 0, 1, 2, 14
insn=247, live_throughout: 13, 14, 221, dead_or_set: 231
insn=249, live_throughout: 13, 14, dead_or_set: 221, 231
insn=250, live_throughout: 13, 14, dead_or_set: 137
insn=302, live_throughout: 13, 14, 137, dead_or_set: 
insn=253, live_throughout: 13, 14, dead_or_set: 
insn=255, live_throughout: 13, 14, dead_or_set: 137
insn=304, live_throughout: 13, 14, 137, dead_or_set: 
insn=258, live_throughout: 13, 14, dead_or_set: 
insn=260, live_throughout: 13, 14, dead_or_set: 137
insn=261, live_throughout: 13, 14, 137, dead_or_set: 
insn=267, live_throughout: 13, 14, dead_or_set: 0, 137
insn=273, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 144: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 150: (insn_list:REG_DEP_TRUE 24 (nil))
init_insns for 153: (insn_list:REG_DEP_TRUE 33 (nil))
init_insns for 160: (insn_list:REG_DEP_TRUE 317 (nil))
init_insns for 164: (insn_list:REG_DEP_TRUE 65 (nil))
init_insns for 167: (insn_list:REG_DEP_TRUE 74 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 83 (nil))
init_insns for 173: (insn_list:REG_DEP_TRUE 92 (nil))
init_insns for 179: (insn_list:REG_DEP_TRUE 103 (nil))
init_insns for 188: (insn_list:REG_DEP_TRUE 127 (nil))
init_insns for 191: (insn_list:REG_DEP_TRUE 316 (nil))
init_insns for 206: (insn_list:REG_DEP_TRUE 315 (nil))
init_insns for 211: (insn_list:REG_DEP_TRUE 200 (nil))
init_insns for 219: (insn_list:REG_DEP_TRUE 210 (nil))
init_insns for 221: (insn_list:REG_DEP_TRUE 230 (nil))
init_insns for 231: (insn_list:REG_DEP_TRUE 247 (nil))
changing reg in insn 312
changing reg in insn 311
changing reg in insn 312
changing reg in insn 123
changing reg in insn 120
changing reg in insn 282
changing reg in insn 199
changing reg in insn 179
changing reg in insn 179
changing reg in insn 205
changing reg in insn 184
changing reg in insn 180
changing reg in insn 260
changing reg in insn 255
changing reg in insn 250
changing reg in insn 267
changing reg in insn 178
changing reg in insn 199
changing reg in insn 179
changing reg in insn 309
changing reg in insn 308
changing reg in insn 309
changing reg in insn 282
changing reg in insn 194
changing reg in insn 190
changing reg in insn 2
changing reg in insn 48
changing reg in insn 158
changing reg in insn 154
changing reg in insn 130
changing reg in insn 91
changing reg in insn 82
changing reg in insn 73
changing reg in insn 64
changing reg in insn 32
changing reg in insn 23
changing reg in insn 15
changing reg in insn 145
changing reg in insn 45
changing reg in insn 225
changing reg in insn 214
changing reg in insn 210
changing reg in insn 209
changing reg in insn 201
changing reg in insn 200
changing reg in insn 178
changing reg in insn 161
changing reg in insn 160
changing reg in insn 156
changing reg in insn 148
changing reg in insn 140
changing reg in insn 134
changing reg in insn 133
changing reg in insn 128
changing reg in insn 127
changing reg in insn 117
changing reg in insn 109
changing reg in insn 94
changing reg in insn 85
changing reg in insn 76
changing reg in insn 67
changing reg in insn 40
changing reg in insn 35
changing reg in insn 26
changing reg in insn 17
changing reg in insn 6
changing reg in insn 199
changing reg in insn 210
changing reg in insn 127
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
changing reg in insn 8
changing reg in insn 15
changing reg in insn 17
changing reg in insn 23
changing reg in insn 26
changing reg in insn 24
changing reg in insn 25
changing reg in insn 32
changing reg in insn 35
changing reg in insn 33
changing reg in insn 34
changing reg in insn 40
changing reg in insn 43
changing reg in insn 43
changing reg in insn 48
changing reg in insn 50
changing reg in insn 50
changing reg in insn 51
changing reg in insn 317
changing reg in insn 50
changing reg in insn 54
changing reg in insn 55
changing reg in insn 64
changing reg in insn 67
changing reg in insn 65
changing reg in insn 66
changing reg in insn 73
changing reg in insn 76
changing reg in insn 74
changing reg in insn 75
changing reg in insn 82
changing reg in insn 85
changing reg in insn 83
changing reg in insn 84
changing reg in insn 91
changing reg in insn 94
changing reg in insn 92
changing reg in insn 93
changing reg in insn 95
changing reg in insn 100
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 105
changing reg in insn 109
changing reg in insn 114
changing reg in insn 117
changing reg in insn 312
changing reg in insn 127
changing reg in insn 128
changing reg in insn 130
changing reg in insn 133
changing reg in insn 316
changing reg in insn 132
changing reg in insn 140
changing reg in insn 143
changing reg in insn 143
changing reg in insn 148
changing reg in insn 150
changing reg in insn 150
changing reg in insn 155
changing reg in insn 154
changing reg in insn 156
changing reg in insn 158
changing reg in insn 160
changing reg in insn 161
changing reg in insn 309
changing reg in insn 315
changing reg in insn 282
changing reg in insn 199
changing reg in insn 200
changing reg in insn 201
changing reg in insn 204
changing reg in insn 204
changing reg in insn 205
changing reg in insn 205
changing reg in insn 208
changing reg in insn 207
changing reg in insn 209
changing reg in insn 210
changing reg in insn 211
changing reg in insn 225
changing reg in insn 226
changing reg in insn 230
changing reg in insn 249
changing reg in insn 231
changing reg in insn 231
changing reg in insn 236
changing reg in insn 247
Spilling for insn 17.
Spilling for insn 26.
Spilling for insn 35.
Spilling for insn 45.
Spilling for insn 67.
Spilling for insn 76.
Spilling for insn 85.
Spilling for insn 94.
Spilling for insn 128.
Spilling for insn 133.
Spilling for insn 145.
Spilling for insn 156.
Spilling for insn 160.
Spilling for insn 200.
Spilling for insn 209.
Spilling for insn 249.

Reloads for insn # 17
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])

Reloads for insn # 26
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])

Reloads for insn # 35
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])

Reloads for insn # 45
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])

Reloads for insn # 67
Reload 0: reload_out (HI) = (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 214 [0xd6])) [0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 214 [0xd6])) [0 S2 A16])

Reloads for insn # 76
Reload 0: reload_out (HI) = (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 214 [0xd6])) [0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 214 [0xd6])) [0 S2 A16])

Reloads for insn # 85
Reload 0: reload_out (HI) = (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 214 [0xd6])) [0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 214 [0xd6])) [0 S2 A16])

Reloads for insn # 94
Reload 0: reload_out (HI) = (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 214 [0xd6])) [0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 214 [0xd6])) [0 S2 A16])

Reloads for insn # 128
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])

Reloads for insn # 133
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])

Reloads for insn # 145
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])

Reloads for insn # 156
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 215 [0xd7])) [0 S1 A8])

Reloads for insn # 160
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 213 [0xd5])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 213 [0xd5])) [0 S1 A8])

Reloads for insn # 200
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])

Reloads for insn # 209
Reload 0: reload_out (HI) = (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 214 [0xd6])) [0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                                                        (const_int 214 [0xd6])) [0 S2 A16])

Reloads for insn # 249
Reload 0: reload_out (QI) = (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [221])
                                                        (const_int 16 [0x10])) [0 __warned+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [221])
                                                        (const_int 16 [0x10])) [0 __warned+0 S1 A8])
deleting insn with uid = 267.


try_optimize_cfg iteration 1

Forwarding edge 21->22 to 24 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 53.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 215.
verify found no changes in insn with uid = 220.
verify found no changes in insn with uid = 245.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 58 count 62 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 58 count 66 (  1.9)


arch_validate_hwbkpt_settings

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 6[r6] 7[r7] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={20d,19u} r1={12d,7u} r2={21d,17u} r3={43d,43u} r4={2d,42u,4d} r6={2d,4u} r7={2d,2u} r12={9d,3u} r13={1d,38u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={25d,17u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r159={1d} 
;;    total ref usage 891{693d,193u,5e} in 142{137 regular + 5 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4]
;; live  kill	 24 [cc]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 6 2 arch/arm/kernel/hw_breakpoint.c:594 (set (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (nil))

(insn 6 2 7 2 arch/arm/kernel/hw_breakpoint.c:525 (set (reg:SI 3 r3 [orig:144 <variable>.attr.bp_type ] [144])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 172 [0xac])) [0 <variable>.attr.bp_type+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 172 [0xac])) [0 <variable>.attr.bp_type+0 S4 A32])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:525 (set (reg:SI 3 r3 [145])
        (plus:SI (reg:SI 3 r3 [orig:144 <variable>.attr.bp_type ] [144])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:525 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 3 r3 [145])
                        (const_int 3 [0x3]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 3 r3 [145])
                                (const_int 4 [0x4]))
                            (label_ref 9)) [0 S4 A32])
                    (label_ref 253)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 9))
        ]) 265 {arm_casesi_internal} (insn_list:REG_LABEL_TARGET 253 (nil)))
;; End of basic block 2 -> ( 31 4 5 6 3)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  31 [20.0%] 
;; Succ edge  4 [20.0%] 
;; Succ edge  5 [20.0%] 
;; Succ edge  6 [20.0%] 
;; Succ edge  3 [20.0%] 

;; Insn is not within a basic block
(code_label 9 8 10 253 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 10 9 11 arch/arm/kernel/hw_breakpoint.c:525 (addr_vec:SI [
            (label_ref:SI 20)
            (label_ref:SI 29)
            (label_ref:SI 38)
            (label_ref:SI 12)
        ]) -1 (nil))

(barrier 11 10 12)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [20.0%] 
(code_label 12 11 13 3 252 "" [1 uses])

(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 13 15 3 NOTE_INSN_DELETED)

(insn 15 14 16 3 arch/arm/kernel/hw_breakpoint.c:527 (set (reg:QI 3 r3 [146])
        (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])) 178 {*arm_movqi_insn} (nil))

(insn 16 15 17 3 arch/arm/kernel/hw_breakpoint.c:527 (set (zero_extract:SI (reg:SI 3 r3 [146])
            (const_int 2 [0x2])
            (const_int 3 [0x3]))
        (const_int 0 [0x0])) 76 {insv_zero} (nil))

(insn 17 16 287 3 arch/arm/kernel/hw_breakpoint.c:527 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 3 r3 [146])) 178 {*arm_movqi_insn} (nil))

(jump_insn 287 17 288 3 (set (pc)
        (label_ref 46)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 288 287 20)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [20.0%] 
(code_label 20 288 21 4 249 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 22 21 23 4 NOTE_INSN_DELETED)

(insn 23 22 24 4 arch/arm/kernel/hw_breakpoint.c:530 (set (reg:QI 3 r3 [148])
        (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])) 178 {*arm_movqi_insn} (nil))

(insn 24 23 25 4 arch/arm/kernel/hw_breakpoint.c:530 (set (reg:SI 2 r2 [150])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 25 24 26 4 arch/arm/kernel/hw_breakpoint.c:530 (set (zero_extract:SI (reg:SI 3 r3 [148])
            (const_int 2 [0x2])
            (const_int 3 [0x3]))
        (reg:SI 2 r2 [150])) 77 {insv_t2} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 26 25 289 4 arch/arm/kernel/hw_breakpoint.c:530 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 3 r3 [148])) 178 {*arm_movqi_insn} (nil))

(jump_insn 289 26 290 4 (set (pc)
        (label_ref 46)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 290 289 29)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  2 [20.0%] 
(code_label 29 290 30 5 250 "" [1 uses])

(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 31 30 32 5 NOTE_INSN_DELETED)

(insn 32 31 33 5 arch/arm/kernel/hw_breakpoint.c:533 (set (reg:QI 3 r3 [151])
        (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])) 178 {*arm_movqi_insn} (nil))

(insn 33 32 34 5 arch/arm/kernel/hw_breakpoint.c:533 (set (reg:SI 2 r2 [153])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))

(insn 34 33 35 5 arch/arm/kernel/hw_breakpoint.c:533 (set (zero_extract:SI (reg:SI 3 r3 [151])
            (const_int 2 [0x2])
            (const_int 3 [0x3]))
        (reg:SI 2 r2 [153])) 77 {insv_t2} (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn 35 34 291 5 arch/arm/kernel/hw_breakpoint.c:533 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 3 r3 [151])) 178 {*arm_movqi_insn} (nil))

(jump_insn 291 35 292 5 (set (pc)
        (label_ref 46)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 292 291 38)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  2 [20.0%] 
(code_label 38 292 39 6 251 "" [1 uses])

(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 43 6 arch/arm/kernel/hw_breakpoint.c:536 (set (reg:SI 3 r3 [155])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 43 40 45 6 arch/arm/kernel/hw_breakpoint.c:536 (set (reg:SI 3 r3 [156])
        (ior:SI (reg:SI 3 r3 [155])
            (const_int 24 [0x18]))) 89 {*arm_iorsi3} (nil))

(insn 45 43 46 6 arch/arm/kernel/hw_breakpoint.c:536 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 3 r3 [156])) 178 {*arm_movqi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 4 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 14 [lr] 24 [cc]

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%] 
(code_label 46 45 47 7 254 "" [3 uses])

(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 52 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:DI 6 r6 [158])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 184 [0xb8])) [0 <variable>.attr.D.4027.bp_len+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 52 48 317 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:DI 2 r2)
        (const_int 7 [0x7])) 163 {*arm_movdi} (nil))

(insn 317 52 50 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:DI 0 r0 [160])
        (const_int -1 [0xffffffffffffffff])) 163 {*arm_movdi} (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 50 317 51 7 arch/arm/kernel/hw_breakpoint.c:543 (parallel [
            (set (reg:DI 6 r6 [158])
                (plus:DI (reg:DI 6 r6 [158])
                    (reg:DI 0 r0 [160])))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_EQUAL (plus:DI (reg:DI 159 [ <variable>.attr.D.4027.bp_len ])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 51 50 53 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:DI 0 r0)
        (reg:DI 6 r6 [158])) 163 {*arm_movdi} (nil))

(call_insn/u 53 51 54 7 arch/arm/kernel/hw_breakpoint.c:543 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 54 53 55 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:SI 0 r0 [161])
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 55 54 56 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [161])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 275 7 arch/arm/kernel/hw_breakpoint.c:543 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 31 8)
;; lr  out 	 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 13 [sp]


;; Succ edge  31 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 13 [sp]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  7 [50.0%]  (fallthru)
(note 275 56 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 57 275 58 8 arch/arm/kernel/hw_breakpoint.c:543 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 6 r6 [158])
                        (const_int 7 [0x7]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 6 r6 [158])
                                (const_int 4 [0x4]))
                            (label_ref 58)) [0 S4 A32])
                    (label_ref 253)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 58))
        ]) 265 {arm_casesi_internal} (insn_list:REG_LABEL_TARGET 253 (nil)))
;; End of basic block 8 -> ( 31 9 10 11 12)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  31 [20.0%] 
;; Succ edge  9 [20.0%] 
;; Succ edge  10 [20.0%] 
;; Succ edge  11 [20.0%] 
;; Succ edge  12 [20.0%] 

;; Insn is not within a basic block
(code_label 58 57 59 259 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 59 58 60 arch/arm/kernel/hw_breakpoint.c:543 (addr_vec:SI [
            (label_ref:SI 61)
            (label_ref:SI 70)
            (label_ref:SI 253)
            (label_ref:SI 79)
            (label_ref:SI 253)
            (label_ref:SI 253)
            (label_ref:SI 253)
            (label_ref:SI 88)
        ]) -1 (nil))

(barrier 60 59 61)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  8 [20.0%] 
(code_label 61 60 62 9 255 "" [1 uses])

(note 62 61 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 63 62 64 9 NOTE_INSN_DELETED)

(insn 64 63 65 9 arch/arm/kernel/hw_breakpoint.c:545 (set (reg:HI 3 r3 [162])
        (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 214 [0xd6])) [0 S2 A16])) 176 {*movhi_insn_arch4} (nil))

(insn 65 64 66 9 arch/arm/kernel/hw_breakpoint.c:545 (set (reg:SI 2 r2 [164])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 66 65 67 9 arch/arm/kernel/hw_breakpoint.c:545 (set (zero_extract:SI (reg:SI 3 r3 [162])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 2 r2 [164])) 77 {insv_t2} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 67 66 293 9 arch/arm/kernel/hw_breakpoint.c:545 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 214 [0xd6])) [0 S2 A16])
        (reg:HI 3 r3 [162])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 293 67 294 9 (set (pc)
        (label_ref 107)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 14)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 294 293 70)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  8 [20.0%] 
(code_label 70 294 71 10 256 "" [1 uses])

(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 72 71 73 10 NOTE_INSN_DELETED)

(insn 73 72 74 10 arch/arm/kernel/hw_breakpoint.c:548 (set (reg:HI 3 r3 [165])
        (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 214 [0xd6])) [0 S2 A16])) 176 {*movhi_insn_arch4} (nil))

(insn 74 73 75 10 arch/arm/kernel/hw_breakpoint.c:548 (set (reg:SI 2 r2 [167])
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 3 [0x3])
        (nil)))

(insn 75 74 76 10 arch/arm/kernel/hw_breakpoint.c:548 (set (zero_extract:SI (reg:SI 3 r3 [165])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 2 r2 [167])) 77 {insv_t2} (expr_list:REG_EQUAL (const_int 3 [0x3])
        (nil)))

(insn 76 75 295 10 arch/arm/kernel/hw_breakpoint.c:548 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 214 [0xd6])) [0 S2 A16])
        (reg:HI 3 r3 [165])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 295 76 296 10 (set (pc)
        (label_ref 107)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 14)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 296 295 79)

;; Start of basic block ( 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  8 [20.0%] 
(code_label 79 296 80 11 257 "" [1 uses])

(note 80 79 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 81 80 82 11 NOTE_INSN_DELETED)

(insn 82 81 83 11 arch/arm/kernel/hw_breakpoint.c:551 (set (reg:HI 3 r3 [168])
        (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 214 [0xd6])) [0 S2 A16])) 176 {*movhi_insn_arch4} (nil))

(insn 83 82 84 11 arch/arm/kernel/hw_breakpoint.c:551 (set (reg:SI 2 r2 [170])
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 15 [0xf])
        (nil)))

(insn 84 83 85 11 arch/arm/kernel/hw_breakpoint.c:551 (set (zero_extract:SI (reg:SI 3 r3 [168])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 2 r2 [170])) 77 {insv_t2} (expr_list:REG_EQUAL (const_int 15 [0xf])
        (nil)))

(insn 85 84 297 11 arch/arm/kernel/hw_breakpoint.c:551 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 214 [0xd6])) [0 S2 A16])
        (reg:HI 3 r3 [168])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 297 85 298 11 (set (pc)
        (label_ref 107)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 14)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 298 297 88)

;; Start of basic block ( 8) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [20.0%] 
(code_label 88 298 89 12 258 "" [1 uses])

(note 89 88 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(note 90 89 284 12 NOTE_INSN_DELETED)

(note 284 90 285 12 NOTE_INSN_DELETED)

(note 285 284 283 12 NOTE_INSN_DELETED)

(note 283 285 286 12 NOTE_INSN_DELETED)

(note 286 283 97 12 NOTE_INSN_DELETED)

(note 97 286 98 12 NOTE_INSN_DELETED)

(note 98 97 99 12 NOTE_INSN_DELETED)

(note 99 98 91 12 NOTE_INSN_DELETED)

(insn 91 99 92 12 arch/arm/kernel/hw_breakpoint.c:554 (set (reg:HI 3 r3 [171])
        (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 214 [0xd6])) [0 S2 A16])) 176 {*movhi_insn_arch4} (nil))

(insn 92 91 93 12 arch/arm/kernel/hw_breakpoint.c:554 (set (reg:SI 2 r2 [173])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 93 92 94 12 arch/arm/kernel/hw_breakpoint.c:554 (set (zero_extract:SI (reg:SI 3 r3 [171])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 2 r2 [173])) 77 {insv_t2} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 94 93 95 12 arch/arm/kernel/hw_breakpoint.c:554 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 214 [0xd6])) [0 S2 A16])
        (reg:HI 3 r3 [171])) 176 {*movhi_insn_arch4} (nil))

(insn 95 94 100 12 arch/arm/kernel/hw_breakpoint.c:555 (set (reg:SI 3 r3 [175])
        (zero_extract:SI (reg:SI 3 r3 [171])
            (const_int 8 [0x8])
            (const_int 8 [0x8]))) 124 {extzv_t2} (nil))

(insn 100 95 101 12 arch/arm/kernel/hw_breakpoint.c:555 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 3 r3 [175])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 101 100 102 12 arch/arm/kernel/hw_breakpoint.c:555 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 12 -> ( 13 31)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  12 [50.0%]  (fallthru)
(note 102 101 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 13 arch/arm/kernel/hw_breakpoint.c:555 discrim 1 (set (reg/f:SI 3 r3 [179])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 104 103 105 13 arch/arm/kernel/hw_breakpoint.c:555 discrim 1 (set (reg:SI 3 r3 [orig:180 max_watchpoint_len ] [180])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [179])
                    (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 1 [0x1]))) [0 max_watchpoint_len+0 S1 A8]))
        (nil)))

(insn 105 104 106 13 arch/arm/kernel/hw_breakpoint.c:555 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:180 max_watchpoint_len ] [180])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 106 105 107 13 arch/arm/kernel/hw_breakpoint.c:555 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 13 -> ( 14 31)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 13 9 10 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 107 106 108 14 260 "" [3 uses])

(note 108 107 111 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 111 108 112 14 NOTE_INSN_DELETED)

(note 112 111 113 14 NOTE_INSN_DELETED)

(note 113 112 109 14 NOTE_INSN_DELETED)

(insn 109 113 114 14 arch/arm/kernel/hw_breakpoint.c:568 (set (reg:SI 3 r3 [182])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 114 109 115 14 arch/arm/kernel/hw_breakpoint.c:568 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 3 r3 [182])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 115 114 116 14 arch/arm/kernel/hw_breakpoint.c:568 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 14 -> ( 15 17)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  15 [71.0%]  (fallthru)
;; Succ edge  17 [29.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  14 [71.0%]  (fallthru)
(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 311 15 arch/arm/kernel/hw_breakpoint.c:569 (set (reg:SI 2 r2 [186])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 311 117 312 15 arch/arm/kernel/hw_breakpoint.c:569 (set (reg:SI 3 r3 [orig:133 D.24404 ] [133])
        (const_int 2040 [0x7f8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2040 [0x7f8])
        (nil)))

(insn 312 311 120 15 arch/arm/kernel/hw_breakpoint.c:569 (set (reg:SI 3 r3 [orig:133 D.24404 ] [133])
        (and:SI (reg:SI 2 r2 [186])
            (reg:SI 3 r3 [orig:133 D.24404 ] [133]))) 67 {*arm_andsi3_insn} (nil))

(insn 120 312 121 15 arch/arm/kernel/hw_breakpoint.c:568 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:133 D.24404 ] [133])
            (const_int 24 [0x18]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 121 120 122 15 arch/arm/kernel/hw_breakpoint.c:568 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
        (nil)))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  16 [72.0%]  (fallthru)
;; Succ edge  17 [28.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [72.0%]  (fallthru)
(note 122 121 123 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 16 arch/arm/kernel/hw_breakpoint.c:568 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:133 D.24404 ] [133])
            (const_int 120 [0x78]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 124 123 125 16 arch/arm/kernel/hw_breakpoint.c:568 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 16 -> ( 31 17)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  31 [72.0%] 
;; Succ edge  17 [28.0%]  (fallthru)

;; Start of basic block ( 14 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  14 [29.0%] 
;; Pred edge  15 [28.0%] 
;; Pred edge  16 [28.0%]  (fallthru)
(code_label 125 124 126 17 261 "" [2 uses])

(note 126 125 129 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 129 126 136 17 NOTE_INSN_DELETED)

(note 136 129 127 17 NOTE_INSN_DELETED)

(insn 127 136 130 17 arch/arm/kernel/hw_breakpoint.c:574 (set (reg:SI 2 r2 [orig:188 <variable>.attr.D.4023.bp_addr ] [188])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 176 [0xb0])) [0 <variable>.attr.D.4023.bp_addr+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 176 [0xb0])) [0 <variable>.attr.D.4023.bp_addr+0 S4 A64])
        (nil)))

(insn 130 127 134 17 arch/arm/kernel/hw_breakpoint.c:577 (set (reg:QI 3 r3 [189])
        (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])) 178 {*arm_movqi_insn} (nil))

(insn 134 130 316 17 arch/arm/kernel/hw_breakpoint.c:578 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:143 bp ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 316 134 132 17 arch/arm/kernel/hw_breakpoint.c:577 (set (reg:SI 1 r1 [191])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2 [0x2])
        (nil)))

(insn 132 316 128 17 arch/arm/kernel/hw_breakpoint.c:577 (set (zero_extract:SI (reg:SI 3 r3 [189])
            (const_int 2 [0x2])
            (const_int 5 [0x5]))
        (reg:SI 1 r1 [191])) 77 {insv_t2} (expr_list:REG_EQUAL (const_int 2 [0x2])
        (nil)))

(insn 128 132 133 17 arch/arm/kernel/hw_breakpoint.c:574 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])
        (reg:SI 2 r2 [orig:188 <variable>.attr.D.4023.bp_addr ] [188])) 167 {*arm_movsi_insn} (nil))

(insn 133 128 135 17 arch/arm/kernel/hw_breakpoint.c:577 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 3 r3 [189])) 178 {*arm_movqi_insn} (nil))

(call_insn/i 135 133 137 17 arch/arm/kernel/hw_breakpoint.c:578 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_check_bp_in_kernelspace") [flags 0x3] <function_decl 0x10b14000 arch_check_bp_in_kernelspace>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 137 135 138 17 arch/arm/kernel/hw_breakpoint.c:578 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 138 137 139 17 arch/arm/kernel/hw_breakpoint.c:578 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 146)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  18 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  17 [50.0%]  (fallthru)
(note 139 138 140 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 143 18 arch/arm/kernel/hw_breakpoint.c:579 (set (reg:SI 3 r3 [193])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 143 140 145 18 arch/arm/kernel/hw_breakpoint.c:579 (set (reg:SI 3 r3 [194])
        (ior:SI (reg:SI 3 r3 [193])
            (const_int 96 [0x60]))) 89 {*arm_iorsi3} (nil))

(insn 145 143 146 18 arch/arm/kernel/hw_breakpoint.c:579 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 3 r3 [194])) 178 {*arm_movqi_insn} (nil))
;; End of basic block 18 -> ( 19)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 17 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	 24 [cc]

;; Pred edge  17 [50.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 146 145 147 19 262 "" [1 uses])

(note 147 146 152 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(note 152 147 153 19 NOTE_INSN_DELETED)

(note 153 152 157 19 NOTE_INSN_DELETED)

(note 157 153 167 19 NOTE_INSN_DELETED)

(note 167 157 148 19 NOTE_INSN_DELETED)

(insn 148 167 308 19 arch/arm/kernel/hw_breakpoint.c:582 (set (reg:SI 0 r0 [197])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                    (const_int 160 [0xa0])) [0 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 308 148 154 19 arch/arm/kernel/hw_breakpoint.c:605 (set (reg:SI 3 r3 [orig:141 D.23989 ] [141])
        (const_int 2040 [0x7f8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 2040 [0x7f8])
        (nil)))

(insn 154 308 150 19 arch/arm/kernel/hw_breakpoint.c:582 (set (reg:QI 2 r2 [201])
        (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])) 178 {*arm_movqi_insn} (nil))

(insn 150 154 178 19 arch/arm/kernel/hw_breakpoint.c:582 (set (reg:SI 0 r0 [198])
        (xor:SI (reg:SI 0 r0 [197])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (nil))

(insn 178 150 155 19 arch/arm/kernel/hw_breakpoint.c:607 (set (reg:SI 1 r1 [orig:140 D.23992 ] [140])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 155 178 156 19 arch/arm/kernel/hw_breakpoint.c:582 (set (zero_extract:SI (reg:SI 2 r2 [201])
            (const_int 1 [0x1])
            (const_int 7 [0x7]))
        (reg:SI 0 r0 [198])) 77 {insv_t2} (nil))

(insn 156 155 161 19 arch/arm/kernel/hw_breakpoint.c:582 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 2 r2 [201])) 178 {*arm_movqi_insn} (nil))

(insn 161 156 158 19 arch/arm/kernel/hw_breakpoint.c:605 (set (reg:SI 2 r2 [205])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 158 161 309 19 arch/arm/kernel/hw_breakpoint.c:585 (set (reg:QI 12 ip [203])
        (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 213 [0xd5])) [0 S1 A8])) 178 {*arm_movqi_insn} (nil))

(insn 309 158 315 19 arch/arm/kernel/hw_breakpoint.c:605 (set (reg:SI 3 r3 [orig:141 D.23989 ] [141])
        (and:SI (reg:SI 2 r2 [205])
            (reg:SI 3 r3 [orig:141 D.23989 ] [141]))) 67 {*arm_andsi3_insn} (nil))

(insn 315 309 282 19 arch/arm/kernel/hw_breakpoint.c:606 (set (reg:SI 0 r0 [206])
        (const_int 2040 [0x7f8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 2040 [0x7f8])
        (nil)))

(insn 282 315 159 19 arch/arm/kernel/hw_breakpoint.c:606 (parallel [
            (set (reg/v:SI 0 r0 [orig:135 alignment_mask ] [135])
                (if_then_else:SI (ne (reg:SI 3 r3 [orig:141 D.23989 ] [141])
                        (reg:SI 0 r0 [206]))
                    (const_int 3 [0x3])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 24 cc))
        ]) 292 {movcond} (nil))

(insn 159 282 179 19 arch/arm/kernel/hw_breakpoint.c:585 (set (zero_extract:SI (reg:SI 12 ip [203])
            (const_int 1 [0x1])
            (const_int 1 [0x1]))
        (const_int 0 [0x0])) 76 {insv_zero} (nil))

(insn 179 159 160 19 arch/arm/kernel/hw_breakpoint.c:607 (set (reg/v:SI 2 r2 [orig:136 offset ] [136])
        (and:SI (reg/v:SI 0 r0 [orig:135 alignment_mask ] [135])
            (reg:SI 1 r1 [orig:140 D.23992 ] [140]))) 67 {*arm_andsi3_insn} (nil))

(insn 160 179 180 19 arch/arm/kernel/hw_breakpoint.c:585 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 213 [0xd5])) [0 S1 A8])
        (reg:QI 12 ip [203])) 178 {*arm_movqi_insn} (nil))

(insn 180 160 181 19 arch/arm/kernel/hw_breakpoint.c:608 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 2 r2 [orig:136 offset ] [136])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 181 180 276 19 arch/arm/kernel/hw_breakpoint.c:608 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 19 -> ( 23 20)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr] 24 [cc]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]


;; Succ edge  23 [29.0%] 
;; Succ edge  20 [71.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  19 [71.0%]  (fallthru)
(note 276 181 183 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn 183 276 277 20 arch/arm/kernel/hw_breakpoint.c:608 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 196)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20 -> ( 25 21)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  25 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 277 183 184 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 184 277 185 21 arch/arm/kernel/hw_breakpoint.c:608 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 2 r2 [orig:136 offset ] [136])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 185 184 299 21 arch/arm/kernel/hw_breakpoint.c:608 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 21 -> ( 22 31)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  22 [29.0%]  (fallthru)
;; Succ edge  31 [71.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  21 [29.0%]  (fallthru)
(note 299 185 300 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 300 299 301 22 (set (pc)
        (label_ref 192)) 242 {*arm_jump} (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  24 [100.0%] 

(barrier 301 300 188)

;; Start of basic block ( 19) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [29.0%] 
(code_label 188 301 189 23 266 "" [1 uses])

(note 189 188 190 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 190 189 191 23 arch/arm/kernel/hw_breakpoint.c:614 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:141 D.23989 ] [141])
            (const_int 8 [0x8]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 191 190 192 23 arch/arm/kernel/hw_breakpoint.c:614 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 196)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9032 [0x2348])
        (nil)))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  25 [90.3%] 
;; Succ edge  24 [9.7%]  (fallthru)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  23 [9.7%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 192 191 193 24 267 "" [1 uses])

(note 193 192 194 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 194 193 195 24 arch/arm/kernel/hw_breakpoint.c:618 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:141 D.23989 ] [141])
            (const_int 24 [0x18]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 195 194 196 24 arch/arm/kernel/hw_breakpoint.c:618 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
        (nil)))
;; End of basic block 24 -> ( 25 31)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]


;; Succ edge  25 [37.8%]  (fallthru)
;; Succ edge  31 [62.2%] 

;; Start of basic block ( 24 23 20) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  24 [37.8%]  (fallthru)
;; Pred edge  23 [90.3%] 
;; Pred edge  20 [50.0%] 
(code_label 196 195 197 25 265 "" [2 uses])

(note 197 196 198 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(note 198 197 203 25 NOTE_INSN_DELETED)

(note 203 198 201 25 NOTE_INSN_DELETED)

(insn 201 203 199 25 arch/arm/kernel/hw_breakpoint.c:626 (set (reg:SI 3 r3 [213])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 199 201 210 25 arch/arm/kernel/hw_breakpoint.c:625 (set (reg:SI 1 r1 [211])
        (and:SI (not:SI (reg/v:SI 0 r0 [orig:135 alignment_mask ] [135]))
            (reg:SI 1 r1 [orig:140 D.23992 ] [140]))) 81 {andsi_notsi_si} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])
        (nil)))

(insn 210 199 204 25 arch/arm/kernel/hw_breakpoint.c:635 (set (reg/f:SI 0 r0 [orig:219 <variable>.overflow_handler ] [219])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 528 [0x210])) [0 <variable>.overflow_handler+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 528 [0x210])) [0 <variable>.overflow_handler+0 S4 A64])
        (nil)))

(insn 204 210 207 25 arch/arm/kernel/hw_breakpoint.c:626 (set (reg:SI 12 ip [215])
        (zero_extract:SI (reg:SI 3 r3 [213])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))) 124 {extzv_t2} (nil))

(insn 207 204 211 25 arch/arm/kernel/hw_breakpoint.c:626 (set (reg:HI 3 r3 [217])
        (reg:HI 3 r3 [213])) 176 {*movhi_insn_arch4} (nil))

(insn 211 207 200 25 arch/arm/kernel/hw_breakpoint.c:635 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:219 <variable>.overflow_handler ] [219])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 200 211 205 25 arch/arm/kernel/hw_breakpoint.c:625 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])
        (reg:SI 1 r1 [211])) 167 {*arm_movsi_insn} (nil))

(insn 205 200 208 25 arch/arm/kernel/hw_breakpoint.c:626 (set (reg:SI 2 r2 [216])
        (ashift:SI (reg:SI 12 ip [215])
            (reg/v:SI 2 r2 [orig:136 offset ] [136]))) 117 {*arm_shiftsi3} (nil))

(insn 208 205 209 25 arch/arm/kernel/hw_breakpoint.c:626 (set (zero_extract:SI (reg:SI 3 r3 [217])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 2 r2 [216])) 77 {insv_t2} (nil))

(insn 209 208 212 25 arch/arm/kernel/hw_breakpoint.c:626 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 214 [0xd6])) [0 S2 A16])
        (reg:HI 3 r3 [217])) 176 {*movhi_insn_arch4} (nil))

(jump_insn 212 209 213 25 arch/arm/kernel/hw_breakpoint.c:635 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 258)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))
;; End of basic block 25 -> ( 26 32)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  26 [6.7%]  (fallthru)
;; Succ edge  32 [93.3%] 

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  25 [6.7%]  (fallthru)
(note 213 212 216 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(note 216 213 214 26 NOTE_INSN_DELETED)

(insn 214 216 215 26 arch/arm/kernel/hw_breakpoint.c:635 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:143 bp ] [143])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 215 214 217 26 arch/arm/kernel/hw_breakpoint.c:635 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_check_bp_in_kernelspace") [flags 0x3] <function_decl 0x10b14000 arch_check_bp_in_kernelspace>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 217 215 218 26 arch/arm/kernel/hw_breakpoint.c:635 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 218 217 219 26 arch/arm/kernel/hw_breakpoint.c:635 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 228)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 26 -> ( 29 27)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  29 [71.0%] 
;; Succ edge  27 [29.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  26 [29.0%]  (fallthru)
(note 219 218 221 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 221 219 220 27 NOTE_INSN_DELETED)

(call_insn 220 221 222 27 arch/arm/kernel/hw_breakpoint.c:635 discrim 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("core_has_mismatch_brps") [flags 0x3] <function_decl 0x113d8880 core_has_mismatch_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 222 220 223 27 arch/arm/kernel/hw_breakpoint.c:635 discrim 4 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 223 222 224 27 arch/arm/kernel/hw_breakpoint.c:635 discrim 4 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 228)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 27 -> ( 29 28)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  29 [50.0%] 
;; Succ edge  28 [50.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  27 [50.0%]  (fallthru)
(note 224 223 225 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 225 224 226 28 arch/arm/kernel/hw_breakpoint.c:635 (set (reg/f:SI 3 r3 [orig:220 <variable>.hw.D.22650.D.22649.bp_target ] [220])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:143 bp ] [143])
                (const_int 224 [0xe0])) [0 <variable>.hw.D.22650.D.22649.bp_target+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 226 225 227 28 arch/arm/kernel/hw_breakpoint.c:635 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:220 <variable>.hw.D.22650.D.22649.bp_target ] [220])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 227 226 228 28 arch/arm/kernel/hw_breakpoint.c:635 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 258)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 28 -> ( 29 32)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  29 [15.0%]  (fallthru)
;; Succ edge  32 [85.0%] 

;; Start of basic block ( 27 28 26) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  27 [50.0%] 
;; Pred edge  28 [15.0%]  (fallthru)
;; Pred edge  26 [71.0%] 
(code_label 228 227 229 29 269 "" [2 uses])

(note 229 228 233 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(note 233 229 234 29 NOTE_INSN_DELETED)

(note 234 233 235 29 NOTE_INSN_DELETED)

(note 235 234 230 29 NOTE_INSN_DELETED)

(insn 230 235 231 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (reg/f:SI 4 r4 [221])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 231 230 236 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (reg:SI 3 r3 [orig:223 __warned ] [223])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [221])
                    (const_int 16 [0x10])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 16 [0x10]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 236 231 237 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:223 __warned ] [223])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 237 236 238 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  30 [0.0%]  (fallthru)
;; Succ edge  31 [100.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  29 [0.0%]  (fallthru)
(note 238 237 242 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 242 238 243 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 9 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 243 242 244 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 9 (set (reg:SI 1 r1)
        (const_int 638 [0x27e])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 638 [0x27e])
        (nil)))

(insn 244 243 245 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 9 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11520690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11520690>)
        (nil)))

(call_insn 245 244 247 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 247 245 249 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 11 (set (reg:SI 3 r3 [231])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 249 247 250 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 11 (set (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [221])
                (const_int 16 [0x10])) [0 __warned+0 S1 A8])
        (reg:QI 3 r3 [231])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 250 249 302 30 arch/arm/kernel/hw_breakpoint.c:639 (set (reg/v:SI 0 r0 [orig:137 ret ] [137])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(jump_insn 302 250 303 30 (set (pc)
        (label_ref 261)) 242 {*arm_jump} (nil))
;; End of basic block 30 -> ( 33)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  33 [100.0%] 

(barrier 303 302 253)

;; Start of basic block ( 8 24 12 29 21 13 16 2 7) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  8 [20.0%] 
;; Pred edge  24 [62.2%] 
;; Pred edge  12 [50.0%] 
;; Pred edge  29 [100.0%] 
;; Pred edge  21 [71.0%] 
;; Pred edge  13 [50.0%] 
;; Pred edge  16 [72.0%] 
;; Pred edge  2 [20.0%] 
;; Pred edge  7 [50.0%] 
(code_label 253 303 254 31 248 ("out") [13 uses])

(note 254 253 255 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 255 254 304 31 arch/arm/kernel/hw_breakpoint.c:639 (set (reg/v:SI 0 r0 [orig:137 ret ] [137])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(jump_insn 304 255 305 31 (set (pc)
        (label_ref 261)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 33)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  33 [100.0%] 

(barrier 305 304 258)

;; Start of basic block ( 25 28) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  25 [93.3%] 
;; Pred edge  28 [85.0%] 
(code_label 258 305 259 32 268 "" [2 uses])

(note 259 258 260 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 261 32 arch/arm/kernel/hw_breakpoint.c:639 (set (reg/v:SI 0 r0 [orig:137 ret ] [137])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 32 -> ( 33)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 32 30 31) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%] 
;; Pred edge  31 [100.0%] 
(code_label 261 260 262 33 270 "" [2 uses])

(note 262 261 273 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 273 262 314 33 arch/arm/kernel/hw_breakpoint.c:643 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 33 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 314 273 318 NOTE_INSN_DELETED)

(note 318 314 0 NOTE_INSN_DELETED)


;; Function arch_uninstall_hw_breakpoint (arch_uninstall_hw_breakpoint)[0:1256]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 171.
verify found no changes in insn with uid = 171.
deleting insn with uid = 80.
scanning new insn with uid = 172.
verify found no changes in insn with uid = 172.
deleting insn with uid = 86.
scanning new insn with uid = 173.
verify found no changes in insn with uid = 173.
deleting insn with uid = 45.
scanning new insn with uid = 174.
verify found no changes in insn with uid = 174.
deleting insn with uid = 51.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 34 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 36 (    2)

Pass 0 for finding allocno costs

    a3 (r210,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r202,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r200,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r199,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r198,l1) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r197,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r195,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r193,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r182,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r178,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r170,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r168,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r167,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r166,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r166,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r165,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r161,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r193,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a16(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a21(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r178,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a25(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r161,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a28(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a29(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a30(r170,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r198,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r210: preferred GENERAL_REGS, alternative NO_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS
    r193: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS

  a0(r166,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a3(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a6(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a9(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r195,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r193,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a16(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a19(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r165,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a21(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r182,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r178,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a25(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r161,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r166,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a28(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a29(r168,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a30(r170,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a31(r198,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 144(l0): point = 1
   Insn 143(l0): point = 3
   Insn 142(l0): point = 5
   Insn 163(l0): point = 8
   Insn 136(l0): point = 10
   Insn 134(l0): point = 12
   Insn 132(l0): point = 14
   Insn 131(l0): point = 16
   Insn 130(l0): point = 18
   Insn 129(l0): point = 20
   Insn 124(l0): point = 23
   Insn 123(l0): point = 25
   Insn 118(l0): point = 27
   Insn 117(l0): point = 29
   Insn 115(l0): point = 32
   Insn 114(l0): point = 34
   Insn 161(l0): point = 37
   Insn 101(l0): point = 39
   Insn 100(l0): point = 41
   Insn 159(l0): point = 44
   Insn 91(l0): point = 46
   Insn 90(l0): point = 48
   Insn 85(l0): point = 51
   Insn 84(l0): point = 53
   Insn 171(l0): point = 55
   Insn 78(l0): point = 57
   Insn 87(l0): point = 59
   Insn 172(l0): point = 61
   Insn 83(l0): point = 63
   Insn 77(l0): point = 65
   Insn 167(l0): point = 67
   Insn 166(l0): point = 69
   Insn 73(l0): point = 72
   Insn 72(l0): point = 74
   Insn 71(l0): point = 76
   Insn 157(l0): point = 79
   Insn 66(l0): point = 81
   Insn 64(l0): point = 84
   Insn 63(l0): point = 86
   Insn 58(l0): point = 88
   Insn 155(l0): point = 91
   Insn 50(l0): point = 93
   Insn 49(l0): point = 95
   Insn 173(l0): point = 97
   Insn 52(l0): point = 99
   Insn 174(l0): point = 101
   Insn 43(l0): point = 103
   Insn 48(l0): point = 105
   Insn 53(l0): point = 107
   Insn 42(l0): point = 109
   Insn 169(l0): point = 111
   Insn 168(l0): point = 113
   Insn 40(l0): point = 116
   Insn 39(l0): point = 118
   Insn 34(l0): point = 120
   Insn 30(l0): point = 122
   Insn 111(l1): point = 125
   Insn 110(l1): point = 127
   Insn 106(l1): point = 130
   Insn 98(l1): point = 133
   Insn 97(l1): point = 135
   Insn 96(l1): point = 137
 a0(r166): [91..107] [79..81] [32..72] [6..7]
 a1(r168): [32..46] [6..7]
 a2(r200): [11..29]
 a3(r210): [11..12]
 a4(r202): [26..27]
 a5(r167): [91..99] [35..59]
 a6(r161): [40..48]
 a7(r199): [40..41]
 a8(r169): [91..93] [49..51]
 a9(r170): [44..122]
 a10(r196): [52..53]
 a11(r164): [52..65]
 a12(r192): [54..55]
 a13(r195): [54..63]
 a14(r197): [60..61]
 a15(r193): [64..69]
 a16(r189): [73..74]
 a17(r188): [75..76]
 a18(r184): [87..88]
 a19(r181): [94..95]
 a20(r165): [94..109]
 a21(r177): [96..97]
 a22(r180): [96..105]
 a23(r182): [100..101]
 a24(r178): [106..113]
 a25(r172): [119..120]
 a26(r161): [125..139]
 a27(r166): [125..139]
 a28(r167): [125..139]
 a29(r168): [125..139]
 a30(r170): [125..139]
 a31(r198): [136..137]
 Rebuilding regno allocno list for 198
Compressing live ranges: from 140 to 57 - 40%
Ranges after the compression:
 a0(r166): [53..56] [36..47] [32..33] [7..27] [0..1]
 a1(r168): [53..56] [7..12] [0..1]
 a2(r200): [2..6]
 a3(r210): [2..3]
 a4(r202): [4..5]
 a5(r167): [53..56] [36..42] [8..20]
 a6(r161): [53..56] [9..13]
 a7(r199): [9..10]
 a8(r169): [36..37] [14..15]
 a9(r170): [53..56] [11..52]
 a10(r196): [16..17]
 a11(r164): [16..25]
 a12(r192): [18..19]
 a13(r195): [18..23]
 a14(r197): [21..22]
 a15(r193): [24..26]
 a16(r189): [28..29]
 a17(r188): [30..31]
 a18(r184): [34..35]
 a19(r181): [38..39]
 a20(r165): [38..48]
 a21(r177): [40..41]
 a22(r180): [40..45]
 a23(r182): [43..44]
 a24(r178): [46..49]
 a25(r172): [50..51]
 a31(r198): [54..55]
+++Allocating 216 bytes for conflict table (uncompressed size 256)
;; a0(r166,l0) conflicts: a1(r168,l0) a5(r167,l0) a7(r199,l0) a6(r161,l0) a9(r170,l0) a8(r169,l0) a10(r196,l0) a11(r164,l0) a12(r192,l0) a13(r195,l0) a14(r197,l0) a15(r193,l0) a19(r181,l0) a20(r165,l0) a21(r177,l0) a22(r180,l0) a23(r182,l0) a24(r178,l0) a31(r198,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r168,l0) conflicts: a0(r166,l0) a5(r167,l0) a7(r199,l0) a6(r161,l0) a9(r170,l0) a31(r198,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r200,l0) conflicts: a3(r210,l0) a4(r202,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a3(r210,l0) conflicts: a2(r200,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r202,l0) conflicts: a2(r200,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r167,l0) conflicts: a0(r166,l0) a1(r168,l0) a7(r199,l0) a6(r161,l0) a9(r170,l0) a8(r169,l0) a10(r196,l0) a11(r164,l0) a12(r192,l0) a13(r195,l0) a19(r181,l0) a20(r165,l0) a21(r177,l0) a22(r180,l0) a31(r198,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r161,l0) conflicts: a0(r166,l0) a1(r168,l0) a5(r167,l0) a7(r199,l0) a9(r170,l0) a31(r198,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a7(r199,l0) conflicts: a0(r166,l0) a1(r168,l0) a5(r167,l0) a6(r161,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r169,l0) conflicts: a0(r166,l0) a5(r167,l0) a9(r170,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r170,l0) conflicts: a0(r166,l0) a1(r168,l0) a5(r167,l0) a6(r161,l0) a8(r169,l0) a10(r196,l0) a11(r164,l0) a12(r192,l0) a13(r195,l0) a14(r197,l0) a15(r193,l0) a16(r189,l0) a17(r188,l0) a18(r184,l0) a19(r181,l0) a20(r165,l0) a21(r177,l0) a22(r180,l0) a23(r182,l0) a24(r178,l0) a25(r172,l0) a31(r198,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r196,l0) conflicts: a0(r166,l0) a5(r167,l0) a9(r170,l0) a11(r164,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r164,l0) conflicts: a0(r166,l0) a5(r167,l0) a9(r170,l0) a10(r196,l0) a12(r192,l0) a13(r195,l0) a14(r197,l0) a15(r193,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r192,l0) conflicts: a0(r166,l0) a5(r167,l0) a9(r170,l0) a11(r164,l0) a13(r195,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r195,l0) conflicts: a0(r166,l0) a5(r167,l0) a9(r170,l0) a11(r164,l0) a12(r192,l0) a14(r197,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r197,l0) conflicts: a0(r166,l0) a9(r170,l0) a11(r164,l0) a13(r195,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r193,l0) conflicts: a0(r166,l0) a9(r170,l0) a11(r164,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r189,l0) conflicts: a9(r170,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r188,l0) conflicts: a9(r170,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r184,l0) conflicts: a9(r170,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r181,l0) conflicts: a0(r166,l0) a5(r167,l0) a9(r170,l0) a20(r165,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r165,l0) conflicts: a0(r166,l0) a5(r167,l0) a9(r170,l0) a19(r181,l0) a21(r177,l0) a22(r180,l0) a23(r182,l0) a24(r178,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a21(r177,l0) conflicts: a0(r166,l0) a5(r167,l0) a9(r170,l0) a20(r165,l0) a22(r180,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a22(r180,l0) conflicts: a0(r166,l0) a5(r167,l0) a9(r170,l0) a20(r165,l0) a21(r177,l0) a23(r182,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a23(r182,l0) conflicts: a0(r166,l0) a9(r170,l0) a20(r165,l0) a22(r180,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a24(r178,l0) conflicts: a0(r166,l0) a9(r170,l0) a20(r165,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a25(r172,l0) conflicts: a9(r170,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a31(r198,l0) conflicts: a0(r166,l0) a1(r168,l0) a5(r167,l0) a6(r161,l0) a9(r170,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a6(r161)<->a8(r169)@1000:move
  cp1:a8(r169)<->a11(r164)@125:shuffle
  cp2:a8(r169)<->a10(r196)@125:shuffle
  cp3:a0(r166)<->a16(r189)@125:shuffle
  cp4:a8(r169)<->a20(r165)@125:shuffle
  cp5:a8(r169)<->a19(r181)@125:shuffle
  regions=2, blocks=18, points=57
    allocnos=32, copies=6, conflicts=6, ranges=38

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 17 16 15 14 13 10 12 11 9 8 7 6 5 4 3 2
    all: 0r166 1r168 2r200 3r210 4r202 5r167 6r161 7r199 8r169 9r170 10r196 11r164 12r192 13r195 14r197 15r193 16r189 17r188 18r184 19r181 20r165 21r177 22r180 23r182 24r178 25r172 31r198
    modified regnos: 161 164 165 166 167 168 169 170 172 177 178 180 181 182 184 188 189 192 193 195 196 197 198 199 200 202 210
    border:
    Pressure: GENERAL_REGS=7
    Reg 166 of GENERAL_REGS has 1 regs less
    Reg 168 of GENERAL_REGS has 1 regs less
    Reg 200 of GENERAL_REGS has 4 regs less
    Reg 210 of GENERAL_REGS has 1 regs less
    Reg 202 of GENERAL_REGS has 1 regs less
    Reg 167 of GENERAL_REGS has 1 regs less
    Reg 161 of GENERAL_REGS has 1 regs less
    Reg 199 of GENERAL_REGS has 1 regs less
    Reg 169 of GENERAL_REGS has 1 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
    Reg 196 of GENERAL_REGS has 1 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 192 of GENERAL_REGS has 1 regs less
    Reg 195 of GENERAL_REGS has 1 regs less
    Reg 197 of GENERAL_REGS has 1 regs less
    Reg 193 of GENERAL_REGS has 1 regs less
    Reg 189 of GENERAL_REGS has 1 regs less
    Reg 188 of GENERAL_REGS has 1 regs less
    Reg 184 of GENERAL_REGS has 1 regs less
    Reg 181 of GENERAL_REGS has 1 regs less
    Reg 165 of GENERAL_REGS has 1 regs less
    Reg 177 of GENERAL_REGS has 1 regs less
    Reg 180 of GENERAL_REGS has 1 regs less
    Reg 182 of GENERAL_REGS has 1 regs less
    Reg 178 of GENERAL_REGS has 1 regs less
    Reg 172 of GENERAL_REGS has 1 regs less
    Reg 198 of GENERAL_REGS has 1 regs less
      Pushing a31(r198,l0)
      Pushing a25(r172,l0)
      Pushing a23(r182,l0)
      Pushing a22(r180,l0)
      Pushing a21(r177,l0)
      Pushing a19(r181,l0)
      Pushing a18(r184,l0)
      Pushing a17(r188,l0)
      Pushing a16(r189,l0)
      Pushing a14(r197,l0)
      Pushing a13(r195,l0)
      Pushing a12(r192,l0)
      Pushing a10(r196,l0)
      Pushing a7(r199,l0)
      Pushing a4(r202,l0)
      Pushing a3(r210,l0)
      Pushing a8(r169,l0)
      Pushing a24(r178,l0)
      Pushing a20(r165,l0)
      Pushing a15(r193,l0)
      Pushing a11(r164,l0)
      Pushing a9(r170,l0)
      Pushing a6(r161,l0)
      Pushing a5(r167,l0)
      Pushing a0(r166,l0)
      Pushing a1(r168,l0)
      Pushing a2(r200,l0)
      Popping a2(r200,l0)  -- assign reg 4
      Popping a1(r168,l0)  -- assign reg 3
      Popping a0(r166,l0)  -- assign reg 2
      Popping a5(r167,l0)  -- assign reg 1
      Popping a6(r161,l0)  -- assign reg 12
      Popping a9(r170,l0)  -- assign reg 0
      Popping a11(r164,l0)  -- assign reg 3
      Popping a15(r193,l0)  -- assign reg 1
      Popping a20(r165,l0)  -- assign reg 3
      Popping a24(r178,l0)  -- assign reg 1
      Popping a8(r169,l0)  -- assign reg 12
      Popping a3(r210,l0)  -- assign reg 3
      Popping a4(r202,l0)  -- assign reg 3
      Popping a7(r199,l0)  -- assign reg 0
      Popping a10(r196,l0)  -- assign reg 12
      Popping a12(r192,l0)  -- assign reg 12
      Popping a13(r195,l0)  -- assign reg 4
      Popping a14(r197,l0)  -- assign reg 1
      Popping a16(r189,l0)  -- assign reg 2
      Popping a17(r188,l0)  -- assign reg 3
      Popping a18(r184,l0)  -- assign reg 3
      Popping a19(r181,l0)  -- assign reg 12
      Popping a21(r177,l0)  -- assign reg 12
      Popping a22(r180,l0)  -- assign reg 4
      Popping a23(r182,l0)  -- assign reg 1
      Popping a25(r172,l0)  -- assign reg 3
      Popping a31(r198,l0)  -- assign reg 4
Disposition:
    6:r161 l0    12   11:r164 l0     3   20:r165 l0     3    0:r166 l0     2
    5:r167 l0     1    1:r168 l0     3    8:r169 l0    12    9:r170 l0     0
   25:r172 l0     3   21:r177 l0    12   24:r178 l0     1   22:r180 l0     4
   19:r181 l0    12   23:r182 l0     1   18:r184 l0     3   17:r188 l0     3
   16:r189 l0     2   12:r192 l0    12   15:r193 l0     1   13:r195 l0     4
   10:r196 l0    12   14:r197 l0     1   31:r198 l0     4    7:r199 l0     0
    2:r200 l0     4    4:r202 l0     3    3:r210 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=30, live_throughout: 13, 14, dead_or_set: 0, 170
insn=34, live_throughout: 13, 14, 170, dead_or_set: 172
insn=39, live_throughout: 13, 14, 170, dead_or_set: 172
insn=40, live_throughout: 13, 14, 170, dead_or_set: 
insn=168, live_throughout: 13, 14, 170, dead_or_set: 178
insn=169, live_throughout: 13, 14, 170, dead_or_set: 178
insn=42, live_throughout: 13, 14, 170, 178, dead_or_set: 165
insn=53, live_throughout: 13, 14, 165, 170, 178, dead_or_set: 166
insn=48, live_throughout: 13, 14, 165, 166, 170, dead_or_set: 178, 180
insn=43, live_throughout: 13, 14, 166, 170, 180, dead_or_set: 165
insn=174, live_throughout: 13, 14, 165, 166, 170, 180, dead_or_set: 182
insn=52, live_throughout: 13, 14, 165, 166, 170, 180, dead_or_set: 167, 182
insn=173, live_throughout: 13, 14, 165, 166, 167, 170, 180, dead_or_set: 177
insn=49, live_throughout: 13, 14, 165, 166, 167, 170, dead_or_set: 177, 180, 181
insn=50, live_throughout: 13, 14, 166, 167, 170, dead_or_set: 165, 169, 181
insn=155, live_throughout: 13, 14, 166, 167, 169, 170, dead_or_set: 
insn=56, live_throughout: 13, 14, 170, dead_or_set: 
insn=58, live_throughout: 13, 14, 170, dead_or_set: 184
insn=63, live_throughout: 13, 14, 170, dead_or_set: 184
insn=64, live_throughout: 13, 14, 170, dead_or_set: 
insn=66, live_throughout: 13, 14, 170, dead_or_set: 166
insn=157, live_throughout: 13, 14, 166, 170, dead_or_set: 
insn=69, live_throughout: 13, 14, 170, dead_or_set: 
insn=71, live_throughout: 13, 14, 170, dead_or_set: 188
insn=72, live_throughout: 13, 14, 170, dead_or_set: 188, 189
insn=73, live_throughout: 13, 14, 170, dead_or_set: 166, 189
insn=74, live_throughout: 13, 14, 166, 170, dead_or_set: 
insn=166, live_throughout: 13, 14, 166, 170, dead_or_set: 193
insn=167, live_throughout: 13, 14, 166, 170, dead_or_set: 193
insn=77, live_throughout: 13, 14, 166, 170, 193, dead_or_set: 164
insn=83, live_throughout: 13, 14, 164, 166, 170, dead_or_set: 193, 195
insn=172, live_throughout: 13, 14, 164, 166, 170, 195, dead_or_set: 197
insn=87, live_throughout: 13, 14, 164, 166, 170, 195, dead_or_set: 167, 197
insn=78, live_throughout: 13, 14, 166, 167, 170, 195, dead_or_set: 164
insn=171, live_throughout: 13, 14, 164, 166, 167, 170, 195, dead_or_set: 192
insn=84, live_throughout: 13, 14, 164, 166, 167, 170, dead_or_set: 192, 195, 196
insn=85, live_throughout: 13, 14, 166, 167, 170, dead_or_set: 164, 169, 196
insn=88, live_throughout: 13, 14, 166, 167, 169, 170, dead_or_set: 
insn=90, live_throughout: 13, 14, 166, 167, 170, dead_or_set: 161, 169
insn=91, live_throughout: 13, 14, 161, 166, 167, 170, dead_or_set: 168
insn=159, live_throughout: 13, 14, 161, 166, 167, 168, 170, dead_or_set: 
insn=109, live_throughout: 13, 14, 161, 166, 167, 168, 170, dead_or_set: 
insn=96, live_throughout: 13, 14, 166, 167, 168, 170, dead_or_set: 161, 198
insn=97, live_throughout: 13, 14, 161, 166, 167, 168, 170, dead_or_set: 198
insn=98, live_throughout: 13, 14, 161, 166, 167, 168, 170, dead_or_set: 
insn=100, live_throughout: 13, 14, 161, 166, 167, 168, dead_or_set: 199
insn=101, live_throughout: 13, 14, 166, 167, 168, dead_or_set: 161, 199
insn=161, live_throughout: 13, 14, 166, 167, 168, dead_or_set: 
insn=104, live_throughout: 13, 14, 161, 166, 167, 168, 170, dead_or_set: 
insn=106, live_throughout: 13, 14, 161, 166, 167, 170, dead_or_set: 168
insn=107, live_throughout: 13, 14, 161, 166, 167, 168, 170, dead_or_set: 
insn=110, live_throughout: 13, 14, 161, 166, 167, 168, 170, dead_or_set: 
insn=111, live_throughout: 13, 14, 161, 166, 167, 168, 170, dead_or_set: 
insn=112, live_throughout: 13, 14, 166, 167, 168, dead_or_set: 
insn=114, live_throughout: 13, 14, 166, 168, dead_or_set: 167
insn=115, live_throughout: 13, 14, 166, 168, dead_or_set: 
insn=117, live_throughout: 13, 14, dead_or_set: 200
insn=118, live_throughout: 13, 14, 200, dead_or_set: 202
insn=123, live_throughout: 13, 14, 200, dead_or_set: 202
insn=124, live_throughout: 13, 14, 200, dead_or_set: 
insn=129, live_throughout: 13, 200, dead_or_set: 0
insn=130, live_throughout: 0, 13, 200, dead_or_set: 1
insn=131, live_throughout: 0, 1, 13, 200, dead_or_set: 2
insn=132, live_throughout: 13, 200, dead_or_set: 0, 1, 2, 14
insn=134, live_throughout: 13, 14, 200, dead_or_set: 210
insn=136, live_throughout: 13, 14, dead_or_set: 200, 210
insn=163, live_throughout: 13, 14, dead_or_set: 
insn=139, live_throughout: 13, 14, 166, 168, dead_or_set: 
insn=142, live_throughout: 13, 14, dead_or_set: 0, 166, 168
insn=143, live_throughout: 0, 13, 14, dead_or_set: 1
insn=144, live_throughout: 13, 14, dead_or_set: 0, 1
insn=151, live_throughout: 13, 14, dead_or_set: 
init_insns for 177: (insn_list:REG_DEP_TRUE 173 (nil))
init_insns for 182: (insn_list:REG_DEP_TRUE 174 (nil))
init_insns for 188: (insn_list:REG_DEP_TRUE 71 (nil))
init_insns for 192: (insn_list:REG_DEP_TRUE 171 (nil))
init_insns for 197: (insn_list:REG_DEP_TRUE 172 (nil))
init_insns for 199: (insn_list:REG_DEP_TRUE 100 (nil))
init_insns for 200: (insn_list:REG_DEP_TRUE 117 (nil))
init_insns for 210: (insn_list:REG_DEP_TRUE 134 (nil))
changing reg in insn 96
changing reg in insn 90
changing reg in insn 96
changing reg in insn 101
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 85
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 50
changing reg in insn 73
changing reg in insn 66
changing reg in insn 53
changing reg in insn 142
changing reg in insn 87
changing reg in insn 52
changing reg in insn 114
changing reg in insn 110
changing reg in insn 106
changing reg in insn 91
changing reg in insn 142
changing reg in insn 114
changing reg in insn 110
changing reg in insn 106
changing reg in insn 85
changing reg in insn 50
changing reg in insn 90
changing reg in insn 30
changing reg in insn 97
changing reg in insn 58
changing reg in insn 34
changing reg in insn 34
changing reg in insn 39
changing reg in insn 173
changing reg in insn 49
changing reg in insn 169
changing reg in insn 168
changing reg in insn 169
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 49
changing reg in insn 50
changing reg in insn 174
changing reg in insn 52
changing reg in insn 58
changing reg in insn 63
changing reg in insn 71
changing reg in insn 72
changing reg in insn 72
changing reg in insn 73
changing reg in insn 171
changing reg in insn 84
changing reg in insn 167
changing reg in insn 166
changing reg in insn 167
changing reg in insn 83
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 172
changing reg in insn 87
changing reg in insn 96
changing reg in insn 97
changing reg in insn 100
changing reg in insn 101
changing reg in insn 117
changing reg in insn 136
changing reg in insn 118
changing reg in insn 118
changing reg in insn 123
changing reg in insn 134
Spilling for insn 168.
Using reg 3 for reload 0
Spilling for insn 166.
Using reg 3 for reload 0
Spilling for insn 101.
Spilling for insn 136.

Reloads for insn # 168
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 166
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 101
Reload 0: reload_out (SI) = (mem/f:SI (plus:SI (reg:SI 12 ip [orig:161 ivtmp.880 ] [161])
                                                        (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f:SI (plus:SI (reg:SI 12 ip [orig:161 ivtmp.880 ] [161])
                                                        (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])

Reloads for insn # 136
Reload 0: reload_out (QI) = (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [200])
                                                        (const_int 17 [0x11])) [0 __warned+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [200])
                                                        (const_int 17 [0x11])) [0 __warned+0 S1 A8])
deleting insn with uid = 30.
deleting insn with uid = 90.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 132.
verify found no changes in insn with uid = 144.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 34 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 36 (    2)


arch_uninstall_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u} r1={13d,10u} r2={8d,3u} r3={16d,15u} r4={4d,5u,2d} r12={10d,6u} r13={1d,21u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={8d,6u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 363{288d,73u,2e} in 62{60 regular + 2 call} insns.
(note 29 0 32 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 32 29 31 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 31 32 36 2 NOTE_INSN_FUNCTION_BEG)

(note 36 31 37 2 NOTE_INSN_DELETED)

(note 37 36 38 2 NOTE_INSN_DELETED)

(note 38 37 34 2 NOTE_INSN_DELETED)

(insn 34 38 39 2 arch/arm/kernel/hw_breakpoint.c:401 (set (reg:SI 3 r3 [172])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 0 r0 [orig:170 bp ] [170])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 39 34 40 2 arch/arm/kernel/hw_breakpoint.c:401 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 3 r3 [172])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 40 39 41 2 arch/arm/kernel/hw_breakpoint.c:401 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 41 40 46 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 46 41 176 3 NOTE_INSN_DELETED)

(insn 176 46 168 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 168 176 169 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg:SI 1 r1 [178])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 169 168 42 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg:SI 1 r1 [178])
        (and:SI (reg:SI 1 r1 [178])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 42 169 53 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg/v:SI 3 r3 [orig:165 __ptr ] [165])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 53 42 48 3 arch/arm/kernel/hw_breakpoint.c:403 (set (reg/v:SI 2 r2 [orig:166 base ] [166])
        (const_int 80 [0x50])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 80 [0x50])
        (nil)))

(insn 48 53 43 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg:SI 4 r4 [orig:180 <variable>.cpu ] [180])
        (mem/s/j:SI (plus:SI (reg:SI 1 r1 [178])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 43 48 174 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg/v:SI 3 r3 [orig:165 __ptr ] [165])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:165 __ptr ] [165])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8118453)) -1 (nil))

(insn 174 43 52 3 arch/arm/kernel/hw_breakpoint.c:405 (set (reg/f:SI 1 r1 [182])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 52 174 173 3 arch/arm/kernel/hw_breakpoint.c:405 (set (reg/v:SI 1 r1 [orig:167 max_slots ] [167])
        (mem/c/i:SI (plus:SI (reg/f:SI 1 r1 [182])
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
        (nil)))

(insn 173 52 49 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg/f:SI 12 ip [177])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)
        (nil)))

(insn 49 173 50 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg:SI 12 ip [181])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 4 r4 [orig:180 <variable>.cpu ] [180])
                    (const_int 4 [0x4]))
                (reg/f:SI 12 ip [177])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 4 r4 [orig:180 <variable>.cpu ] [180])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 50 49 155 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg/v/f:SI 12 ip [orig:169 slots ] [169])
        (plus:SI (reg/v:SI 3 r3 [orig:165 __ptr ] [165])
            (reg:SI 12 ip [181]))) 4 {*arm_addsi3} (nil))

(jump_insn 155 50 156 3 (set (pc)
        (label_ref 88)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%] 

(barrier 156 155 56)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
(code_label 56 156 57 4 278 "" [1 uses])

(note 57 56 60 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 60 57 61 4 NOTE_INSN_DELETED)

(note 61 60 62 4 NOTE_INSN_DELETED)

(note 62 61 58 4 NOTE_INSN_DELETED)

(insn 58 62 63 4 arch/arm/kernel/hw_breakpoint.c:408 (set (reg:SI 3 r3 [184])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 0 r0 [orig:170 bp ] [170])
                    (const_int 211 [0xd3])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 63 58 64 4 arch/arm/kernel/hw_breakpoint.c:408 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [184])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 64 63 65 4 arch/arm/kernel/hw_breakpoint.c:408 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 157 5 arch/arm/kernel/hw_breakpoint.c:411 (set (reg/v:SI 2 r2 [orig:166 base ] [166])
        (const_int 112 [0x70])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 112 [0x70])
        (nil)))

(jump_insn 157 66 158 5 (set (pc)
        (label_ref 74)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%] 

(barrier 158 157 69)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  4 [50.0%] 
(code_label 69 158 70 6 280 "" [1 uses])

(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 6 arch/arm/kernel/hw_breakpoint.c:409 (set (reg/f:SI 3 r3 [188])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 72 71 73 6 arch/arm/kernel/hw_breakpoint.c:409 (set (reg:SI 2 r2 [orig:189 core_num_brps ] [189])
        (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [188])
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
        (nil)))

(insn 73 72 74 6 arch/arm/kernel/hw_breakpoint.c:409 (set (reg/v:SI 2 r2 [orig:166 base ] [166])
        (plus:SI (reg:SI 2 r2 [orig:189 core_num_brps ] [189])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 2 [r2] 13 [sp] 14 [lr]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 4 [r4] 12 [ip]
;; live  in  	 0 [r0] 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 4 [r4] 12 [ip]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 74 73 75 7 281 "" [1 uses])

(note 75 74 81 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 81 75 177 7 NOTE_INSN_DELETED)

(insn 177 81 166 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 166 177 167 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg:SI 1 r1 [193])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 167 166 77 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg:SI 1 r1 [193])
        (and:SI (reg:SI 1 r1 [193])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 77 167 83 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg/v:SI 3 r3 [orig:164 __ptr ] [164])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))
        (nil)))

(insn 83 77 172 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg:SI 4 r4 [orig:195 <variable>.cpu ] [195])
        (mem/s/j:SI (plus:SI (reg:SI 1 r1 [193])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 172 83 87 7 arch/arm/kernel/hw_breakpoint.c:413 (set (reg/f:SI 1 r1 [197])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 87 172 78 7 arch/arm/kernel/hw_breakpoint.c:413 (set (reg/v:SI 1 r1 [orig:167 max_slots ] [167])
        (mem/c/i:SI (plus:SI (reg/f:SI 1 r1 [197])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 core_num_wrps+0 S4 A32])
        (nil)))

(insn 78 87 171 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg/v:SI 3 r3 [orig:164 __ptr ] [164])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:164 __ptr ] [164])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8119477)) -1 (nil))

(insn 171 78 84 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg/f:SI 12 ip [192])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)
        (nil)))

(insn 84 171 85 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg:SI 12 ip [196])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 4 r4 [orig:195 <variable>.cpu ] [195])
                    (const_int 4 [0x4]))
                (reg/f:SI 12 ip [192])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 4 r4 [orig:195 <variable>.cpu ] [195])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 85 84 88 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg/v/f:SI 12 ip [orig:169 slots ] [169])
        (plus:SI (reg/v:SI 3 r3 [orig:164 __ptr ] [164])
            (reg:SI 12 ip [196]))) 4 {*arm_addsi3} (nil))
;; End of basic block 7 -> ( 8)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 88 85 89 8 279 "" [1 uses])

(note 89 88 91 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 91 89 159 8 arch/arm/kernel/hw_breakpoint.c:417 (set (reg/v:SI 3 r3 [orig:168 i ] [168])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 159 91 160 8 arch/arm/kernel/hw_breakpoint.c:417 (set (pc)
        (label_ref 107)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 12)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 

(barrier 160 159 109)

;; Start of basic block ( 12) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 12 [ip] 13 [sp]
;; lr  def 	 4 [r4] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 4 [r4] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  12 [95.5%] 
(code_label 109 160 94 9 285 "" [1 uses])

(note 94 109 96 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 96 94 97 9 arch/arm/kernel/hw_breakpoint.c:420 (set (reg/f:SI 4 r4 [198])
        (mem/f:SI (post_inc:SI (reg:SI 12 ip [orig:161 ivtmp.880 ] [161])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 12 ip [orig:161 ivtmp.880 ] [161])
        (nil)))

(insn 97 96 98 9 arch/arm/kernel/hw_breakpoint.c:420 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 4 r4 [198])
            (reg/v/f:SI 0 r0 [orig:170 bp ] [170]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 98 97 99 9 arch/arm/kernel/hw_breakpoint.c:420 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  10 [4.5%]  (fallthru,loop_exit)
;; Succ edge  11 [95.5%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  9 [4.5%]  (fallthru,loop_exit)
(note 99 98 100 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 101 10 arch/arm/kernel/hw_breakpoint.c:421 (set (reg:SI 0 r0 [199])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 101 100 161 10 arch/arm/kernel/hw_breakpoint.c:421 (set (mem/f:SI (plus:SI (reg:SI 12 ip [orig:161 ivtmp.880 ] [161])
                (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])
        (reg:SI 0 r0 [199])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 161 101 162 10 arch/arm/kernel/hw_breakpoint.c:422 (set (pc)
        (label_ref 112)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 13)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  13 [100.0%] 

(barrier 162 161 104)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  9 [95.5%] 
(code_label 104 162 105 11 283 "" [1 uses])

(note 105 104 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 11 arch/arm/kernel/hw_breakpoint.c:417 (set (reg/v:SI 3 r3 [orig:168 i ] [168])
        (plus:SI (reg/v:SI 3 r3 [orig:168 i ] [168])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 11 8) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru,dfs_back)
;; Pred edge  8 [100.0%] 
(code_label 107 106 108 12 282 "" [1 uses])

(note 108 107 110 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 110 108 111 12 arch/arm/kernel/hw_breakpoint.c:417 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:168 i ] [168])
            (reg/v:SI 1 r1 [orig:167 max_slots ] [167]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 111 110 112 12 arch/arm/kernel/hw_breakpoint.c:417 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 12 -> ( 9 13)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]


;; Succ edge  9 [95.5%] 
;; Succ edge  13 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 12 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  12 [4.5%]  (fallthru,loop_exit)
;; Pred edge  10 [100.0%] 
(code_label 112 111 113 13 284 "" [1 uses])

(note 113 112 114 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 13 arch/arm/kernel/hw_breakpoint.c:426 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 3 r3 [orig:168 i ] [168])
            (reg/v:SI 1 r1 [orig:167 max_slots ] [167]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 115 114 116 13 arch/arm/kernel/hw_breakpoint.c:426 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 13 -> ( 14 16)
;; lr  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  14 [0.0%]  (fallthru)
;; Succ edge  16 [100.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  13 [0.0%]  (fallthru)
(note 116 115 120 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 120 116 121 14 NOTE_INSN_DELETED)

(note 121 120 122 14 NOTE_INSN_DELETED)

(note 122 121 117 14 NOTE_INSN_DELETED)

(insn 117 122 118 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (reg/f:SI 4 r4 [200])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 118 117 123 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (reg:SI 3 r3 [orig:202 __warned ] [202])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [200])
                    (const_int 17 [0x11])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 17 [0x11]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 123 118 124 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:202 __warned ] [202])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 124 123 125 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 14 -> ( 15 17)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  15 [0.0%]  (fallthru)
;; Succ edge  17 [100.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  14 [0.0%]  (fallthru)
(note 125 124 129 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 129 125 130 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 130 129 131 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 3 (set (reg:SI 1 r1)
        (const_int 426 [0x1aa])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 426 [0x1aa])
        (nil)))

(insn 131 130 132 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 3 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11585c00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11585c00>)
        (nil)))

(call_insn 132 131 134 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 134 132 136 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 5 (set (reg:SI 3 r3 [210])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 136 134 163 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 5 (set (mem/c/i:QI (plus:SI (reg/f:SI 4 r4 [200])
                (const_int 17 [0x11])) [0 __warned+0 S1 A8])
        (reg:QI 3 r3 [210])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 163 136 164 15 (set (pc)
        (label_ref 151)) 242 {*arm_jump} (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  17 [100.0%] 

(barrier 164 163 139)

;; Start of basic block ( 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  13 [100.0%] 
(code_label 139 164 140 16 286 "" [1 uses])

(note 140 139 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(note 141 140 142 16 NOTE_INSN_DELETED)

(insn 142 141 143 16 arch/arm/kernel/hw_breakpoint.c:430 (set (reg:SI 0 r0)
        (plus:SI (reg/v:SI 3 r3 [orig:168 i ] [168])
            (reg/v:SI 2 r2 [orig:166 base ] [166]))) 4 {*arm_addsi3} (nil))

(insn 143 142 144 16 arch/arm/kernel/hw_breakpoint.c:430 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 144 143 145 16 arch/arm/kernel/hw_breakpoint.c:430 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 16 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 145 144 151)

;; Start of basic block ( 14 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  14 [100.0%] 
;; Pred edge  15 [100.0%] 
(code_label 151 145 154 17 288 "" [2 uses])

(note 154 151 170 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 17 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 170 154 175 NOTE_INSN_DELETED)

(note 175 170 0 NOTE_INSN_DELETED)


;; Function arch_install_hw_breakpoint (arch_install_hw_breakpoint)[0:1255]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 275.
verify found no changes in insn with uid = 275.
deleting insn with uid = 164.
scanning new insn with uid = 276.
verify found no changes in insn with uid = 276.
deleting insn with uid = 170.
scanning new insn with uid = 277.
verify found no changes in insn with uid = 277.
deleting insn with uid = 124.
scanning new insn with uid = 278.
verify found no changes in insn with uid = 278.
deleting insn with uid = 52.
scanning new insn with uid = 279.
verify found no changes in insn with uid = 279.
deleting insn with uid = 58.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 42 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 44 (    2)

Pass 0 for finding allocno costs

    a26 (r279,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r274,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r267,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r265,l0) best GENERAL_REGS, cover GENERAL_REGS
    a71 (r264,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r263,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r262,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r261,l0) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r259,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r258,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r254,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r250,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r249,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r244,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r239,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r238,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r237,l0) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r235,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r232,l0) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r230,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r228,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r227,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r220,l0) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r216,l0) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r215,l0) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r210,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r205,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r204,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r203,l0) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r201,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r198,l0) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r196,l0) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r186,l0) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a53 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a54 (r164,l0) best GENERAL_REGS, cover GENERAL_REGS
    a55 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a56 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a57 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a59 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a61 (r155,l0) best GENERAL_REGS, cover GENERAL_REGS
    a58 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a60 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a70 (r148,l1) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r148,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a69 (r144,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a68 (r143,l1) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r143,l0) best GENERAL_REGS, cover GENERAL_REGS
    a67 (r142,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a66 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a65 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a64 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a63 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a62 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a6(r265,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r274,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r267,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:150000
  a12(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r262,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a15(r258,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r261,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r263,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r259,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a19(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a20(r250,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r254,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r249,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r244,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r228,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r239,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r279,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a27(r227,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r238,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r232,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r237,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r230,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r235,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r220,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a36(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a38(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a39(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a40(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a42(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a46(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a47(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a48(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a49(r184,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a50(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a51(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a52(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a53(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a54(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a55(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a56(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a57(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a58(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a59(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a60(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a61(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a62(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a63(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a64(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a65(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a66(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a67(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a68(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a69(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a70(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a71(r264,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r279: preferred GENERAL_REGS, alternative NO_REGS
    r274: preferred GENERAL_REGS, alternative NO_REGS
    r267: preferred GENERAL_REGS, alternative NO_REGS
    r265: preferred GENERAL_REGS, alternative NO_REGS
    r264: preferred GENERAL_REGS, alternative NO_REGS
    r263: preferred GENERAL_REGS, alternative NO_REGS
    r262: preferred GENERAL_REGS, alternative NO_REGS
    r261: preferred GENERAL_REGS, alternative NO_REGS
    r259: preferred GENERAL_REGS, alternative NO_REGS
    r258: preferred GENERAL_REGS, alternative NO_REGS
    r254: preferred GENERAL_REGS, alternative NO_REGS
    r250: preferred GENERAL_REGS, alternative NO_REGS
    r249: preferred GENERAL_REGS, alternative NO_REGS
    r244: preferred GENERAL_REGS, alternative NO_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS
    r238: preferred GENERAL_REGS, alternative NO_REGS
    r237: preferred GENERAL_REGS, alternative NO_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS
    r228: preferred GENERAL_REGS, alternative NO_REGS
    r227: preferred GENERAL_REGS, alternative NO_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS
    r216: preferred GENERAL_REGS, alternative NO_REGS
    r215: preferred GENERAL_REGS, alternative NO_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a3(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a6(r265,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a7(r274,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r267,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r143,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a10(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r148,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:150000
  a12(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a13(r262,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a15(r258,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r261,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r263,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r259,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a19(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a20(r250,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r254,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a22(r249,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a23(r244,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a24(r228,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a25(r239,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a26(r279,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a27(r227,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r238,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r232,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r237,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r230,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a32(r235,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a33(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r220,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a35(r215,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a36(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a37(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a38(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a39(r198,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a40(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a41(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a42(r196,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a43(r201,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a44(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a46(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a47(r186,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a48(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a49(r184,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a50(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a51(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a52(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a53(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a54(r164,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a55(r161,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a56(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a57(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a58(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a59(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a60(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a61(r155,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a62(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a63(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a64(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a65(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a66(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a67(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a68(r143,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a69(r144,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a70(r148,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:0
  a71(r264,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 249(l0): point = 0
   Insn 243(l0): point = 2
   Insn 236(l0): point = 5
   Insn 235(l0): point = 7
   Insn 234(l0): point = 9
   Insn 232(l0): point = 11
   Insn 231(l0): point = 13
   Insn 230(l0): point = 15
   Insn 268(l0): point = 18
   Insn 223(l0): point = 20
   Insn 221(l0): point = 22
   Insn 219(l0): point = 24
   Insn 224(l0): point = 26
   Insn 218(l0): point = 28
   Insn 217(l0): point = 30
   Insn 216(l0): point = 32
   Insn 266(l0): point = 35
   Insn 209(l0): point = 37
   Insn 207(l0): point = 40
   Insn 206(l0): point = 42
   Insn 201(l0): point = 44
   Insn 200(l0): point = 46
   Insn 198(l0): point = 49
   Insn 197(l0): point = 51
   Insn 264(l0): point = 54
   Insn 184(l0): point = 56
   Insn 262(l0): point = 59
   Insn 175(l0): point = 61
   Insn 174(l0): point = 63
   Insn 169(l0): point = 66
   Insn 168(l0): point = 68
   Insn 275(l0): point = 70
   Insn 162(l0): point = 72
   Insn 171(l0): point = 74
   Insn 276(l0): point = 76
   Insn 167(l0): point = 78
   Insn 161(l0): point = 80
   Insn 271(l0): point = 82
   Insn 270(l0): point = 84
   Insn 126(l0): point = 87
   Insn 157(l0): point = 89
   Insn 127(l0): point = 91
   Insn 151(l0): point = 93
   Insn 129(l0): point = 95
   Insn 145(l0): point = 97
   Insn 125(l0): point = 99
   Insn 277(l0): point = 101
   Insn 140(l0): point = 103
   Insn 139(l0): point = 105
   Insn 128(l0): point = 107
   Insn 133(l0): point = 109
   Insn 138(l0): point = 111
   Insn 150(l0): point = 113
   Insn 130(l0): point = 115
   Insn 155(l0): point = 117
   Insn 135(l0): point = 119
   Insn 260(l0): point = 122
   Insn 119(l0): point = 124
   Insn 118(l0): point = 126
   Insn 116(l0): point = 129
   Insn 115(l0): point = 131
   Insn 258(l0): point = 134
   Insn 103(l0): point = 136
   Insn 97(l0): point = 138
   Insn 91(l0): point = 140
   Insn 105(l0): point = 142
   Insn 86(l0): point = 144
   Insn 75(l0): point = 146
   Insn 85(l0): point = 148
   Insn 104(l0): point = 150
   Insn 79(l0): point = 152
   Insn 74(l0): point = 154
   Insn 84(l0): point = 156
   Insn 96(l0): point = 158
   Insn 76(l0): point = 160
   Insn 101(l0): point = 162
   Insn 81(l0): point = 164
   Insn 256(l0): point = 167
   Insn 69(l0): point = 169
   Insn 68(l0): point = 171
   Insn 66(l0): point = 174
   Insn 57(l0): point = 176
   Insn 56(l0): point = 178
   Insn 278(l0): point = 180
   Insn 59(l0): point = 182
   Insn 279(l0): point = 184
   Insn 50(l0): point = 186
   Insn 55(l0): point = 188
   Insn 49(l0): point = 190
   Insn 65(l0): point = 192
   Insn 273(l0): point = 194
   Insn 272(l0): point = 196
   Insn 47(l0): point = 199
   Insn 40(l0): point = 201
   Insn 39(l0): point = 203
   Insn 254(l0): point = 205
   Insn 33(l0): point = 207
   Insn 46(l0): point = 209
   Insn 27(l0): point = 211
   Insn 37(l0): point = 213
   Insn 22(l0): point = 215
   Insn 32(l0): point = 217
   Insn 21(l0): point = 219
   Insn 11(l0): point = 221
   Insn 15(l0): point = 223
   Insn 23(l0): point = 225
   Insn 20(l0): point = 227
   Insn 12(l0): point = 229
   Insn 17(l0): point = 231
   Insn 9(l0): point = 234
   Insn 8(l0): point = 236
   Insn 6(l0): point = 238
   Insn 2(l0): point = 240
   Insn 194(l1): point = 243
   Insn 193(l1): point = 245
   Insn 189(l1): point = 248
   Insn 182(l1): point = 251
   Insn 181(l1): point = 253
   Insn 180(l1): point = 255
 a0(r140): [49..236] [35..37] [3..26]
 a1(r138): [167..201] [122..136] [49..89] [8..17]
 a2(r142): [167..169] [134..142] [122..124] [49..87] [10..17]
 a3(r144): [49..61] [10..17]
 a4(r139): [167..221] [122..146] [49..95] [14..17]
 a5(r141): [167..171] [134..150] [122..126] [49..91] [16..17]
 a6(r265): [40..46] [21..34]
 a7(r274): [21..22]
 a8(r267): [43..44]
 a9(r143): [134..182] [52..74]
 a10(r133): [57..63]
 a11(r148): [57..240]
 a12(r145): [134..176] [64..66]
 a13(r262): [67..68]
 a14(r136): [67..80]
 a15(r258): [69..70]
 a16(r261): [69..78]
 a17(r263): [75..76]
 a18(r259): [79..84]
 a19(r146): [88..99]
 a20(r250): [90..93]
 a21(r254): [90..117]
 a22(r249): [94..113]
 a23(r244): [94..97]
 a24(r228): [96..107]
 a25(r239): [98..103]
 a26(r279): [174..205] [141..166] [129..133] [98..121]
 a27(r227): [100..101]
 a28(r238): [104..105]
 a29(r232): [104..109]
 a30(r237): [106..111]
 a31(r230): [110..115]
 a32(r235): [112..119]
 a33(r216): [137..138]
 a34(r220): [137..162]
 a35(r215): [139..158]
 a36(r210): [139..140]
 a37(r205): [141..144]
 a38(r204): [145..148]
 a39(r198): [145..152]
 a40(r194): [147..154]
 a41(r203): [149..156]
 a42(r196): [153..160]
 a43(r201): [157..164]
 a44(r187): [177..178]
 a45(r137): [177..190]
 a46(r183): [179..180]
 a47(r186): [179..188]
 a48(r188): [183..184]
 a49(r184): [189..196]
 a50(r176): [202..203]
 a51(r170): [204..207]
 a52(r174): [204..213]
 a53(r169): [208..217]
 a54(r164): [208..211]
 a55(r161): [210..225]
 a56(r159): [212..215]
 a57(r158): [216..219]
 a58(r152): [216..223]
 a59(r157): [220..227]
 a60(r150): [224..229]
 a61(r155): [228..231]
 a62(r133): [243..257]
 a63(r138): [243..257]
 a64(r139): [243..257]
 a65(r140): [243..257]
 a66(r141): [243..257]
 a67(r142): [243..257]
 a68(r143): [243..257]
 a69(r144): [243..257]
 a70(r148): [243..257]
 a71(r264): [254..255]
 Rebuilding regno allocno list for 264
Compressing live ranges: from 258 to 138 - 53%
Ranges after the compression:
 a0(r140): [134..137] [16..132] [10..11] [0..8]
 a1(r138): [134..137] [92..108] [62..68] [16..36] [1..5]
 a2(r142): [134..137] [92..93] [67..74] [62..63] [16..34] [2..5]
 a3(r144): [134..137] [16..19] [2..5]
 a4(r139): [134..137] [92..124] [62..77] [16..41] [3..5]
 a5(r141): [134..137] [92..94] [67..81] [62..64] [16..38] [4..5]
 a6(r265): [12..15] [6..9]
 a7(r274): [6..7]
 a8(r267): [13..14]
 a9(r143): [134..137] [67..101] [17..27]
 a10(r133): [134..137] [18..20]
 a11(r148): [134..137] [18..133]
 a12(r145): [67..96] [21..22]
 a13(r262): [23..24]
 a14(r136): [23..32]
 a15(r258): [25..26]
 a16(r261): [25..30]
 a17(r263): [28..29]
 a18(r259): [31..33]
 a19(r146): [35..45]
 a20(r250): [37..39]
 a21(r254): [37..59]
 a22(r249): [40..57]
 a23(r244): [40..43]
 a24(r228): [42..52]
 a25(r239): [44..48]
 a26(r279): [95..112] [73..91] [65..66] [44..61]
 a27(r227): [46..47]
 a28(r238): [49..50]
 a29(r232): [49..53]
 a30(r237): [51..55]
 a31(r230): [54..58]
 a32(r235): [56..60]
 a33(r216): [69..70]
 a34(r220): [69..89]
 a35(r215): [71..87]
 a36(r210): [71..72]
 a37(r205): [73..75]
 a38(r204): [76..79]
 a39(r198): [76..82]
 a40(r194): [78..84]
 a41(r203): [80..85]
 a42(r196): [83..88]
 a43(r201): [86..90]
 a44(r187): [97..98]
 a45(r137): [97..106]
 a46(r183): [99..100]
 a47(r186): [99..104]
 a48(r188): [102..103]
 a49(r184): [105..107]
 a50(r176): [109..110]
 a51(r170): [111..113]
 a52(r174): [111..118]
 a53(r169): [114..121]
 a54(r164): [114..116]
 a55(r161): [115..127]
 a56(r159): [117..119]
 a57(r158): [120..122]
 a58(r152): [120..125]
 a59(r157): [123..128]
 a60(r150): [126..130]
 a61(r155): [129..131]
 a71(r264): [135..136]
+++Allocating 504 bytes for conflict table (uncompressed size 1152)
;; a0(r140,l0) conflicts: a1(r138,l0) a2(r142,l0) a3(r144,l0) a4(r139,l0) a5(r141,l0) a7(r274,l0) a6(r265,l0) a9(r143,l0) a10(r133,l0) a11(r148,l0) a12(r145,l0) a13(r262,l0) a14(r136,l0) a15(r258,l0) a16(r261,l0) a17(r263,l0) a18(r259,l0) a19(r146,l0) a20(r250,l0) a21(r254,l0) a23(r244,l0) a22(r249,l0) a24(r228,l0) a25(r239,l0) a26(r279,l0) a27(r227,l0) a28(r238,l0) a29(r232,l0) a30(r237,l0) a31(r230,l0) a32(r235,l0) a33(r216,l0) a34(r220,l0) a36(r210,l0) a35(r215,l0) a37(r205,l0) a38(r204,l0) a39(r198,l0) a40(r194,l0) a41(r203,l0) a42(r196,l0) a43(r201,l0) a44(r187,l0) a45(r137,l0) a46(r183,l0) a47(r186,l0) a48(r188,l0) a49(r184,l0) a50(r176,l0) a51(r170,l0) a52(r174,l0) a54(r164,l0) a53(r169,l0) a55(r161,l0) a56(r159,l0) a57(r158,l0) a58(r152,l0) a59(r157,l0) a60(r150,l0) a61(r155,l0) a71(r264,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r138,l0) conflicts: a0(r140,l0) a2(r142,l0) a3(r144,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a10(r133,l0) a11(r148,l0) a12(r145,l0) a13(r262,l0) a14(r136,l0) a15(r258,l0) a16(r261,l0) a17(r263,l0) a18(r259,l0) a19(r146,l0) a26(r279,l0) a44(r187,l0) a45(r137,l0) a46(r183,l0) a47(r186,l0) a48(r188,l0) a49(r184,l0) a71(r264,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r142,l0) conflicts: a0(r140,l0) a1(r138,l0) a3(r144,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a10(r133,l0) a11(r148,l0) a12(r145,l0) a13(r262,l0) a14(r136,l0) a15(r258,l0) a16(r261,l0) a17(r263,l0) a18(r259,l0) a26(r279,l0) a33(r216,l0) a34(r220,l0) a36(r210,l0) a35(r215,l0) a37(r205,l0) a71(r264,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r144,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a10(r133,l0) a11(r148,l0) a71(r264,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a4(r139,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a3(r144,l0) a5(r141,l0) a9(r143,l0) a10(r133,l0) a11(r148,l0) a12(r145,l0) a13(r262,l0) a14(r136,l0) a15(r258,l0) a16(r261,l0) a17(r263,l0) a18(r259,l0) a19(r146,l0) a20(r250,l0) a21(r254,l0) a23(r244,l0) a22(r249,l0) a26(r279,l0) a33(r216,l0) a34(r220,l0) a36(r210,l0) a35(r215,l0) a37(r205,l0) a38(r204,l0) a39(r198,l0) a44(r187,l0) a45(r137,l0) a46(r183,l0) a47(r186,l0) a48(r188,l0) a49(r184,l0) a50(r176,l0) a51(r170,l0) a52(r174,l0) a54(r164,l0) a53(r169,l0) a55(r161,l0) a56(r159,l0) a57(r158,l0) a58(r152,l0) a59(r157,l0) a71(r264,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a5(r141,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a3(r144,l0) a4(r139,l0) a9(r143,l0) a10(r133,l0) a11(r148,l0) a12(r145,l0) a13(r262,l0) a14(r136,l0) a15(r258,l0) a16(r261,l0) a17(r263,l0) a18(r259,l0) a19(r146,l0) a20(r250,l0) a21(r254,l0) a26(r279,l0) a33(r216,l0) a34(r220,l0) a36(r210,l0) a35(r215,l0) a37(r205,l0) a38(r204,l0) a39(r198,l0) a40(r194,l0) a41(r203,l0) a71(r264,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a6(r265,l0) conflicts: a0(r140,l0) a7(r274,l0) a8(r267,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a7(r274,l0) conflicts: a0(r140,l0) a6(r265,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r267,l0) conflicts: a6(r265,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a9(r143,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a3(r144,l0) a4(r139,l0) a5(r141,l0) a10(r133,l0) a11(r148,l0) a12(r145,l0) a13(r262,l0) a14(r136,l0) a15(r258,l0) a16(r261,l0) a26(r279,l0) a33(r216,l0) a34(r220,l0) a36(r210,l0) a35(r215,l0) a37(r205,l0) a38(r204,l0) a39(r198,l0) a40(r194,l0) a41(r203,l0) a42(r196,l0) a43(r201,l0) a44(r187,l0) a45(r137,l0) a46(r183,l0) a47(r186,l0) a71(r264,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a10(r133,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a3(r144,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a71(r264,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r148,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a3(r144,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a10(r133,l0) a12(r145,l0) a13(r262,l0) a14(r136,l0) a15(r258,l0) a16(r261,l0) a17(r263,l0) a18(r259,l0) a19(r146,l0) a20(r250,l0) a21(r254,l0) a23(r244,l0) a22(r249,l0) a24(r228,l0) a25(r239,l0) a26(r279,l0) a27(r227,l0) a28(r238,l0) a29(r232,l0) a30(r237,l0) a31(r230,l0) a32(r235,l0) a33(r216,l0) a34(r220,l0) a36(r210,l0) a35(r215,l0) a37(r205,l0) a38(r204,l0) a39(r198,l0) a40(r194,l0) a41(r203,l0) a42(r196,l0) a43(r201,l0) a44(r187,l0) a45(r137,l0) a46(r183,l0) a47(r186,l0) a48(r188,l0) a49(r184,l0) a50(r176,l0) a51(r170,l0) a52(r174,l0) a54(r164,l0) a53(r169,l0) a55(r161,l0) a56(r159,l0) a57(r158,l0) a58(r152,l0) a59(r157,l0) a60(r150,l0) a61(r155,l0) a71(r264,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a12(r145,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a26(r279,l0) a33(r216,l0) a34(r220,l0) a36(r210,l0) a35(r215,l0) a37(r205,l0) a38(r204,l0) a39(r198,l0) a40(r194,l0) a41(r203,l0) a42(r196,l0) a43(r201,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r262,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a14(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r136,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a13(r262,l0) a15(r258,l0) a16(r261,l0) a17(r263,l0) a18(r259,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r258,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a14(r136,l0) a16(r261,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r261,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a14(r136,l0) a15(r258,l0) a17(r263,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a17(r263,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a11(r148,l0) a14(r136,l0) a16(r261,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r259,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a11(r148,l0) a14(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r146,l0) conflicts: a0(r140,l0) a1(r138,l0) a4(r139,l0) a5(r141,l0) a11(r148,l0) a20(r250,l0) a21(r254,l0) a23(r244,l0) a22(r249,l0) a24(r228,l0) a25(r239,l0) a26(r279,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r250,l0) conflicts: a0(r140,l0) a4(r139,l0) a5(r141,l0) a11(r148,l0) a19(r146,l0) a21(r254,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a21(r254,l0) conflicts: a0(r140,l0) a4(r139,l0) a5(r141,l0) a11(r148,l0) a19(r146,l0) a20(r250,l0) a23(r244,l0) a22(r249,l0) a24(r228,l0) a25(r239,l0) a26(r279,l0) a27(r227,l0) a28(r238,l0) a29(r232,l0) a30(r237,l0) a31(r230,l0) a32(r235,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a22(r249,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a19(r146,l0) a21(r254,l0) a23(r244,l0) a24(r228,l0) a25(r239,l0) a26(r279,l0) a27(r227,l0) a28(r238,l0) a29(r232,l0) a30(r237,l0) a31(r230,l0) a32(r235,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a23(r244,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a19(r146,l0) a21(r254,l0) a22(r249,l0) a24(r228,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a24(r228,l0) conflicts: a0(r140,l0) a11(r148,l0) a19(r146,l0) a21(r254,l0) a23(r244,l0) a22(r249,l0) a25(r239,l0) a26(r279,l0) a27(r227,l0) a28(r238,l0) a29(r232,l0) a30(r237,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a25(r239,l0) conflicts: a0(r140,l0) a11(r148,l0) a19(r146,l0) a21(r254,l0) a22(r249,l0) a24(r228,l0) a26(r279,l0) a27(r227,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a26(r279,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a19(r146,l0) a21(r254,l0) a22(r249,l0) a24(r228,l0) a25(r239,l0) a27(r227,l0) a28(r238,l0) a29(r232,l0) a30(r237,l0) a31(r230,l0) a32(r235,l0) a34(r220,l0) a35(r215,l0) a37(r205,l0) a38(r204,l0) a39(r198,l0) a40(r194,l0) a41(r203,l0) a42(r196,l0) a43(r201,l0) a44(r187,l0) a45(r137,l0) a46(r183,l0) a47(r186,l0) a48(r188,l0) a49(r184,l0) a50(r176,l0) a51(r170,l0) a52(r174,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a27(r227,l0) conflicts: a0(r140,l0) a11(r148,l0) a21(r254,l0) a22(r249,l0) a24(r228,l0) a25(r239,l0) a26(r279,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a28(r238,l0) conflicts: a0(r140,l0) a11(r148,l0) a21(r254,l0) a22(r249,l0) a24(r228,l0) a26(r279,l0) a29(r232,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a29(r232,l0) conflicts: a0(r140,l0) a11(r148,l0) a21(r254,l0) a22(r249,l0) a24(r228,l0) a26(r279,l0) a28(r238,l0) a30(r237,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a30(r237,l0) conflicts: a0(r140,l0) a11(r148,l0) a21(r254,l0) a22(r249,l0) a24(r228,l0) a26(r279,l0) a29(r232,l0) a31(r230,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a31(r230,l0) conflicts: a0(r140,l0) a11(r148,l0) a21(r254,l0) a22(r249,l0) a26(r279,l0) a30(r237,l0) a32(r235,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a32(r235,l0) conflicts: a0(r140,l0) a11(r148,l0) a21(r254,l0) a22(r249,l0) a26(r279,l0) a31(r230,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a33(r216,l0) conflicts: a0(r140,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a34(r220,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a34(r220,l0) conflicts: a0(r140,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a26(r279,l0) a33(r216,l0) a36(r210,l0) a35(r215,l0) a37(r205,l0) a38(r204,l0) a39(r198,l0) a40(r194,l0) a41(r203,l0) a42(r196,l0) a43(r201,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a35(r215,l0) conflicts: a0(r140,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a26(r279,l0) a34(r220,l0) a36(r210,l0) a37(r205,l0) a38(r204,l0) a39(r198,l0) a40(r194,l0) a41(r203,l0) a42(r196,l0) a43(r201,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a36(r210,l0) conflicts: a0(r140,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a34(r220,l0) a35(r215,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a37(r205,l0) conflicts: a0(r140,l0) a2(r142,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a26(r279,l0) a34(r220,l0) a35(r215,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a38(r204,l0) conflicts: a0(r140,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a26(r279,l0) a34(r220,l0) a35(r215,l0) a39(r198,l0) a40(r194,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a39(r198,l0) conflicts: a0(r140,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a26(r279,l0) a34(r220,l0) a35(r215,l0) a38(r204,l0) a40(r194,l0) a41(r203,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a40(r194,l0) conflicts: a0(r140,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a26(r279,l0) a34(r220,l0) a35(r215,l0) a38(r204,l0) a39(r198,l0) a41(r203,l0) a42(r196,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a41(r203,l0) conflicts: a0(r140,l0) a5(r141,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a26(r279,l0) a34(r220,l0) a35(r215,l0) a39(r198,l0) a40(r194,l0) a42(r196,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a42(r196,l0) conflicts: a0(r140,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a26(r279,l0) a34(r220,l0) a35(r215,l0) a40(r194,l0) a41(r203,l0) a43(r201,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a43(r201,l0) conflicts: a0(r140,l0) a9(r143,l0) a11(r148,l0) a12(r145,l0) a26(r279,l0) a34(r220,l0) a35(r215,l0) a42(r196,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a44(r187,l0) conflicts: a0(r140,l0) a1(r138,l0) a4(r139,l0) a9(r143,l0) a11(r148,l0) a26(r279,l0) a45(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a45(r137,l0) conflicts: a0(r140,l0) a1(r138,l0) a4(r139,l0) a9(r143,l0) a11(r148,l0) a26(r279,l0) a44(r187,l0) a46(r183,l0) a47(r186,l0) a48(r188,l0) a49(r184,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a46(r183,l0) conflicts: a0(r140,l0) a1(r138,l0) a4(r139,l0) a9(r143,l0) a11(r148,l0) a26(r279,l0) a45(r137,l0) a47(r186,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a47(r186,l0) conflicts: a0(r140,l0) a1(r138,l0) a4(r139,l0) a9(r143,l0) a11(r148,l0) a26(r279,l0) a45(r137,l0) a46(r183,l0) a48(r188,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a48(r188,l0) conflicts: a0(r140,l0) a1(r138,l0) a4(r139,l0) a11(r148,l0) a26(r279,l0) a45(r137,l0) a47(r186,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a49(r184,l0) conflicts: a0(r140,l0) a1(r138,l0) a4(r139,l0) a11(r148,l0) a26(r279,l0) a45(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a50(r176,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a26(r279,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a51(r170,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a26(r279,l0) a52(r174,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a52(r174,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a26(r279,l0) a51(r170,l0) a54(r164,l0) a53(r169,l0) a55(r161,l0) a56(r159,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a53(r169,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a52(r174,l0) a54(r164,l0) a55(r161,l0) a56(r159,l0) a57(r158,l0) a58(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a54(r164,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a52(r174,l0) a53(r169,l0) a55(r161,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a55(r161,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a52(r174,l0) a54(r164,l0) a53(r169,l0) a56(r159,l0) a57(r158,l0) a58(r152,l0) a59(r157,l0) a60(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a56(r159,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a52(r174,l0) a53(r169,l0) a55(r161,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a57(r158,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a53(r169,l0) a55(r161,l0) a58(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a58(r152,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a53(r169,l0) a55(r161,l0) a57(r158,l0) a59(r157,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a59(r157,l0) conflicts: a0(r140,l0) a4(r139,l0) a11(r148,l0) a55(r161,l0) a58(r152,l0) a60(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a60(r150,l0) conflicts: a0(r140,l0) a11(r148,l0) a55(r161,l0) a59(r157,l0) a61(r155,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a61(r155,l0) conflicts: a0(r140,l0) a11(r148,l0) a60(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a71(r264,l0) conflicts: a0(r140,l0) a1(r138,l0) a2(r142,l0) a3(r144,l0) a4(r139,l0) a5(r141,l0) a9(r143,l0) a10(r133,l0) a11(r148,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  cp0:a10(r133)<->a12(r145)@1000:move
  cp1:a12(r145)<->a14(r136)@125:shuffle
  cp2:a12(r145)<->a13(r262)@125:shuffle
  cp3:a30(r237)<->a32(r235)@125:shuffle
  cp4:a29(r232)<->a31(r230)@125:shuffle
  cp5:a28(r238)<->a30(r237)@125:shuffle
  cp6:a25(r239)<->a28(r238)@125:shuffle
  cp7:a25(r239)<->a29(r232)@125:shuffle
  cp8:a23(r244)<->a25(r239)@125:shuffle
  cp9:a23(r244)<->a26(r279)@125:shuffle
  cp10:a4(r139)<->a24(r228)@125:shuffle
  cp11:a20(r250)<->a23(r244)@125:shuffle
  cp12:a20(r250)<->a22(r249)@125:shuffle
  cp13:a1(r138)<->a20(r250)@125:shuffle
  cp14:a1(r138)<->a21(r254)@125:shuffle
  cp15:a2(r142)<->a19(r146)@125:shuffle
  cp16:a41(r203)<->a43(r201)@125:shuffle
  cp17:a39(r198)<->a42(r196)@125:shuffle
  cp18:a38(r204)<->a41(r203)@125:shuffle
  cp19:a4(r139)<->a40(r194)@125:shuffle
  cp20:a37(r205)<->a38(r204)@125:shuffle
  cp21:a37(r205)<->a39(r198)@125:shuffle
  cp22:a36(r210)<->a37(r205)@125:shuffle
  cp23:a26(r279)<->a36(r210)@125:shuffle
  cp24:a33(r216)<->a36(r210)@125:shuffle
  cp25:a33(r216)<->a35(r215)@125:shuffle
  cp26:a1(r138)<->a33(r216)@125:shuffle
  cp27:a1(r138)<->a34(r220)@125:shuffle
  cp28:a12(r145)<->a45(r137)@125:shuffle
  cp29:a12(r145)<->a44(r187)@125:shuffle
  cp30:a59(r157)<->a61(r155)@125:shuffle
  cp31:a58(r152)<->a60(r150)@125:shuffle
  cp32:a57(r158)<->a59(r157)@125:shuffle
  cp33:a56(r159)<->a57(r158)@125:shuffle
  cp34:a56(r159)<->a58(r152)@125:shuffle
  cp35:a54(r164)<->a56(r159)@125:shuffle
  cp36:a51(r170)<->a54(r164)@125:shuffle
  cp37:a51(r170)<->a53(r169)@125:shuffle
  cp38:a50(r176)<->a51(r170)@125:shuffle
  cp39:a50(r176)<->a52(r174)@125:shuffle
  cp40:a1(r138)<->a50(r176)@125:shuffle
  regions=2, blocks=22, points=138
    allocnos=72, copies=41, conflicts=1, ranges=95

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 21 20 19 18 17 16 13 15 14 12 11 10 9 8 7 6 5 4 3 2
    all: 0r140 1r138 2r142 3r144 4r139 5r141 6r265 7r274 8r267 9r143 10r133 11r148 12r145 13r262 14r136 15r258 16r261 17r263 18r259 19r146 20r250 21r254 22r249 23r244 24r228 25r239 26r279 27r227 28r238 29r232 30r237 31r230 32r235 33r216 34r220 35r215 36r210 37r205 38r204 39r198 40r194 41r203 42r196 43r201 44r187 45r137 46r183 47r186 48r188 49r184 50r176 51r170 52r174 53r169 54r164 55r161 56r159 57r158 58r152 59r157 60r150 61r155 71r264
    modified regnos: 133 136 137 138 139 140 141 142 143 144 145 146 148 150 152 155 157 158 159 161 164 169 170 174 176 183 184 186 187 188 194 196 198 201 203 204 205 210 215 216 220 227 228 230 232 235 237 238 239 244 249 250 254 258 259 261 262 263 264 265 267 274 279
    border:
    Pressure: GENERAL_REGS=12
    Reg 140 of GENERAL_REGS has 4 regs less
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 142 of GENERAL_REGS has 3 regs less
    Reg 144 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 265 of GENERAL_REGS has 4 regs less
    Reg 274 of GENERAL_REGS has 1 regs less
    Reg 267 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 1 regs less
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 148 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 262 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 258 of GENERAL_REGS has 1 regs less
    Reg 261 of GENERAL_REGS has 1 regs less
    Reg 263 of GENERAL_REGS has 1 regs less
    Reg 259 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
    Reg 250 of GENERAL_REGS has 1 regs less
    Reg 254 of GENERAL_REGS has 1 regs less
    Reg 249 of GENERAL_REGS has 1 regs less
    Reg 244 of GENERAL_REGS has 1 regs less
    Reg 228 of GENERAL_REGS has 1 regs less
    Reg 239 of GENERAL_REGS has 1 regs less
    Reg 279 of GENERAL_REGS has 1 regs less
    Reg 227 of GENERAL_REGS has 1 regs less
    Reg 238 of GENERAL_REGS has 1 regs less
    Reg 232 of GENERAL_REGS has 1 regs less
    Reg 237 of GENERAL_REGS has 1 regs less
    Reg 230 of GENERAL_REGS has 1 regs less
    Reg 235 of GENERAL_REGS has 1 regs less
    Reg 216 of GENERAL_REGS has 1 regs less
    Reg 220 of GENERAL_REGS has 1 regs less
    Reg 215 of GENERAL_REGS has 1 regs less
    Reg 210 of GENERAL_REGS has 1 regs less
    Reg 205 of GENERAL_REGS has 1 regs less
    Reg 204 of GENERAL_REGS has 1 regs less
    Reg 198 of GENERAL_REGS has 1 regs less
    Reg 194 of GENERAL_REGS has 1 regs less
    Reg 203 of GENERAL_REGS has 1 regs less
    Reg 196 of GENERAL_REGS has 1 regs less
    Reg 201 of GENERAL_REGS has 1 regs less
    Reg 187 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 183 of GENERAL_REGS has 1 regs less
    Reg 186 of GENERAL_REGS has 1 regs less
    Reg 188 of GENERAL_REGS has 1 regs less
    Reg 184 of GENERAL_REGS has 1 regs less
    Reg 176 of GENERAL_REGS has 1 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
    Reg 174 of GENERAL_REGS has 1 regs less
    Reg 169 of GENERAL_REGS has 1 regs less
    Reg 164 of GENERAL_REGS has 1 regs less
    Reg 161 of GENERAL_REGS has 1 regs less
    Reg 159 of GENERAL_REGS has 1 regs less
    Reg 158 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 157 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 155 of GENERAL_REGS has 1 regs less
    Reg 264 of GENERAL_REGS has 1 regs less
      Pushing a71(r264,l0)
      Pushing a61(r155,l0)
      Pushing a60(r150,l0)
      Pushing a59(r157,l0)
      Pushing a58(r152,l0)
      Pushing a57(r158,l0)
      Pushing a56(r159,l0)
      Pushing a54(r164,l0)
      Pushing a53(r169,l0)
      Pushing a52(r174,l0)
      Pushing a51(r170,l0)
      Pushing a50(r176,l0)
      Pushing a48(r188,l0)
      Pushing a47(r186,l0)
      Pushing a46(r183,l0)
      Pushing a44(r187,l0)
      Pushing a43(r201,l0)
      Pushing a42(r196,l0)
      Pushing a41(r203,l0)
      Pushing a40(r194,l0)
      Pushing a39(r198,l0)
      Pushing a38(r204,l0)
      Pushing a37(r205,l0)
      Pushing a36(r210,l0)
      Pushing a35(r215,l0)
      Pushing a34(r220,l0)
      Pushing a33(r216,l0)
      Pushing a32(r235,l0)
      Pushing a31(r230,l0)
      Pushing a30(r237,l0)
      Pushing a29(r232,l0)
      Pushing a28(r238,l0)
      Pushing a27(r227,l0)
      Pushing a25(r239,l0)
      Pushing a24(r228,l0)
      Pushing a23(r244,l0)
      Pushing a22(r249,l0)
      Pushing a21(r254,l0)
      Pushing a20(r250,l0)
      Pushing a17(r263,l0)
      Pushing a16(r261,l0)
      Pushing a15(r258,l0)
      Pushing a13(r262,l0)
      Pushing a8(r267,l0)
      Pushing a7(r274,l0)
      Pushing a19(r146,l0)
      Pushing a12(r145,l0)
      Pushing a49(r184,l0)
      Pushing a45(r137,l0)
      Pushing a18(r259,l0)
      Pushing a14(r136,l0)
      Pushing a10(r133,l0)
      Pushing a9(r143,l0)
      Pushing a55(r161,l0)
      Pushing a5(r141,l0)
      Pushing a26(r279,l0)
      Pushing a4(r139,l0)
      Pushing a11(r148,l0)
      Pushing a1(r138,l0)
      Pushing a2(r142,l0)
      Pushing a3(r144,l0)
      Pushing a6(r265,l0)
      Pushing a0(r140,l0)
      Popping a0(r140,l0)  -- assign reg 4
      Popping a6(r265,l0)  -- assign reg 5
      Popping a3(r144,l0)  -- assign reg 5
      Popping a2(r142,l0)  -- assign reg 6
      Popping a1(r138,l0)  -- assign reg 7
      Popping a11(r148,l0)  -- assign reg 8
      Popping a4(r139,l0)  -- assign reg 1
      Popping a26(r279,l0)  -- assign reg 3
      Popping a5(r141,l0)  -- assign reg 0
      Popping a55(r161,l0)  -- assign reg 3
      Popping a9(r143,l0)  -- assign reg 2
      Popping a10(r133,l0)  -- assign reg 3
      Popping a14(r136,l0)  -- assign reg 3
      Popping a18(r259,l0)  -- assign reg 2
      Popping a45(r137,l0)  -- assign reg 0
      Popping a49(r184,l0)  -- assign reg 2
      Popping a12(r145,l0)  -- assign reg 12
      Popping a19(r146,l0)  -- assign reg 6
      Popping a7(r274,l0)  -- assign reg 3
      Popping a8(r267,l0)  -- assign reg 3
      Popping a13(r262,l0)  -- assign reg 12
      Popping a15(r258,l0)  -- assign reg 12
      Popping a16(r261,l0)  -- assign reg 5
      Popping a17(r263,l0)  -- assign reg 2
      Popping a20(r250,l0)  -- assign reg 3
      Popping a21(r254,l0)  -- assign reg 7
      Popping a22(r249,l0)  -- assign reg 2
      Popping a23(r244,l0)  -- assign reg 3
      Popping a24(r228,l0)  -- assign reg 1
      Popping a25(r239,l0)  -- assign reg 0
      Popping a27(r227,l0)  -- assign reg 12
      Popping a28(r238,l0)  -- assign reg 0
      Popping a29(r232,l0)  -- assign reg 12
      Popping a30(r237,l0)  -- assign reg 0
      Popping a31(r230,l0)  -- assign reg 12
      Popping a32(r235,l0)  -- assign reg 0
      Popping a33(r216,l0)  -- assign reg 3
      Popping a34(r220,l0)  -- assign reg 7
      Popping a35(r215,l0)  -- assign reg 5
      Popping a36(r210,l0)  -- assign reg 3
      Popping a37(r205,l0)  -- assign reg 10
      Popping a38(r204,l0)  -- assign reg 10
      Popping a39(r198,l0)  -- assign reg 6
      Popping a40(r194,l0)  -- assign reg 1
      Popping a41(r203,l0)  -- assign reg 10
      Popping a42(r196,l0)  -- assign reg 6
      Popping a43(r201,l0)  -- assign reg 10
      Popping a44(r187,l0)  -- assign reg 12
      Popping a46(r183,l0)  -- assign reg 12
      Popping a47(r186,l0)  -- assign reg 5
      Popping a48(r188,l0)  -- assign reg 2
      Popping a50(r176,l0)  -- assign reg 7
      Popping a51(r170,l0)  -- assign reg 7
      Popping a52(r174,l0)  -- assign reg 2
      Popping a53(r169,l0)  -- assign reg 0
      Popping a54(r164,l0)  -- assign reg 7
      Popping a56(r159,l0)  -- assign reg 7
      Popping a57(r158,l0)  -- assign reg 2
      Popping a58(r152,l0)  -- assign reg 7
      Popping a59(r157,l0)  -- assign reg 2
      Popping a60(r150,l0)  -- assign reg 7
      Popping a61(r155,l0)  -- assign reg 2
      Popping a71(r264,l0)  -- assign reg 12
Disposition:
   10:r133 l0     3   14:r136 l0     3   45:r137 l0     0    1:r138 l0     7
    4:r139 l0     1    0:r140 l0     4    5:r141 l0     0    2:r142 l0     6
    9:r143 l0     2    3:r144 l0     5   12:r145 l0    12   19:r146 l0     6
   11:r148 l0     8   60:r150 l0     7   58:r152 l0     7   61:r155 l0     2
   59:r157 l0     2   57:r158 l0     2   56:r159 l0     7   55:r161 l0     3
   54:r164 l0     7   53:r169 l0     0   51:r170 l0     7   52:r174 l0     2
   50:r176 l0     7   46:r183 l0    12   49:r184 l0     2   47:r186 l0     5
   44:r187 l0    12   48:r188 l0     2   40:r194 l0     1   42:r196 l0     6
   39:r198 l0     6   43:r201 l0    10   41:r203 l0    10   38:r204 l0    10
   37:r205 l0    10   36:r210 l0     3   35:r215 l0     5   33:r216 l0     3
   34:r220 l0     7   27:r227 l0    12   24:r228 l0     1   31:r230 l0    12
   29:r232 l0    12   32:r235 l0     0   30:r237 l0     0   28:r238 l0     0
   25:r239 l0     0   23:r244 l0     3   22:r249 l0     2   20:r250 l0     3
   21:r254 l0     7   15:r258 l0    12   18:r259 l0     2   16:r261 l0     5
   13:r262 l0    12   17:r263 l0     2   71:r264 l0    12    6:r265 l0     5
    8:r267 l0     3    7:r274 l0     3   26:r279 l0     3
New iteration of spill/restore move
+++Costs: overall -250, reg -250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, dead_or_set: 0, 148
insn=6, live_throughout: 13, 148, dead_or_set: 0, 14
insn=8, live_throughout: 13, 14, 148, dead_or_set: 0, 140
insn=9, live_throughout: 13, 14, 140, 148, dead_or_set: 
insn=17, live_throughout: 13, 14, 140, 148, dead_or_set: 155
insn=12, live_throughout: 13, 14, 140, 148, 155, dead_or_set: 150
insn=20, live_throughout: 13, 14, 140, 148, 150, dead_or_set: 155, 157
insn=23, live_throughout: 13, 14, 140, 148, 150, 157, dead_or_set: 161
insn=15, live_throughout: 13, 14, 140, 148, 157, 161, dead_or_set: 150, 152
insn=11, live_throughout: 13, 14, 140, 148, 152, 157, 161, dead_or_set: 139
insn=21, live_throughout: 13, 14, 139, 140, 148, 152, 161, dead_or_set: 157, 158
insn=32, live_throughout: 13, 14, 139, 140, 148, 152, 158, 161, dead_or_set: 169
insn=22, live_throughout: 13, 14, 139, 140, 148, 161, 169, dead_or_set: 152, 158, 159
insn=37, live_throughout: 13, 14, 139, 140, 148, 159, 161, 169, dead_or_set: 174
insn=27, live_throughout: 13, 14, 139, 140, 148, 161, 169, 174, dead_or_set: 159, 164
insn=46, live_throughout: 13, 14, 139, 140, 148, 164, 169, 174, dead_or_set: 161
insn=33, live_throughout: 13, 14, 24, 139, 140, 148, 174, dead_or_set: 164, 169, 170
insn=254, live_throughout: 13, 14, 24, 139, 140, 148, 170, 174, dead_or_set: 279
insn=39, live_throughout: 13, 14, 24, 139, 140, 148, 279, dead_or_set: 170, 174, 176
insn=40, live_throughout: 13, 14, 24, 139, 140, 148, 279, dead_or_set: 138, 176
insn=47, live_throughout: 13, 14, 138, 139, 140, 148, 279, dead_or_set: 
insn=272, live_throughout: 13, 14, 138, 139, 140, 148, 279, dead_or_set: 184
insn=273, live_throughout: 13, 14, 138, 139, 140, 148, 279, dead_or_set: 184
insn=65, live_throughout: 13, 14, 138, 139, 140, 148, 184, 279, dead_or_set: 
insn=49, live_throughout: 13, 14, 24, 138, 139, 140, 148, 184, 279, dead_or_set: 137
insn=55, live_throughout: 13, 14, 24, 137, 138, 139, 140, 148, 279, dead_or_set: 184, 186
insn=50, live_throughout: 13, 14, 24, 138, 139, 140, 148, 186, 279, dead_or_set: 137
insn=279, live_throughout: 13, 14, 24, 137, 138, 139, 140, 148, 186, 279, dead_or_set: 188
insn=59, live_throughout: 13, 14, 24, 137, 138, 139, 140, 148, 186, 279, dead_or_set: 143, 188
insn=278, live_throughout: 13, 14, 24, 137, 138, 139, 140, 143, 148, 186, 279, dead_or_set: 183
insn=56, live_throughout: 13, 14, 24, 137, 138, 139, 140, 143, 148, 279, dead_or_set: 183, 186, 187
insn=57, live_throughout: 13, 14, 24, 138, 139, 140, 143, 148, 279, dead_or_set: 137, 145, 187
insn=66, live_throughout: 13, 14, 138, 139, 140, 143, 145, 148, 279, dead_or_set: 
insn=68, live_throughout: 13, 14, 138, 139, 140, 143, 145, 148, dead_or_set: 141
insn=69, live_throughout: 13, 14, 138, 139, 140, 141, 143, 145, 148, dead_or_set: 142
insn=256, live_throughout: 13, 14, 138, 139, 140, 141, 142, 143, 145, 148, dead_or_set: 
insn=72, live_throughout: 13, 14, 140, 143, 145, 148, 279, dead_or_set: 
insn=81, live_throughout: 13, 14, 140, 143, 145, 148, 279, dead_or_set: 201
insn=101, live_throughout: 13, 14, 140, 143, 145, 148, 201, 279, dead_or_set: 220
insn=76, live_throughout: 13, 14, 140, 143, 145, 148, 201, 220, 279, dead_or_set: 196
insn=96, live_throughout: 13, 14, 140, 143, 145, 148, 196, 201, 220, 279, dead_or_set: 215
insn=84, live_throughout: 13, 14, 140, 143, 145, 148, 196, 215, 220, 279, dead_or_set: 201, 203
insn=74, live_throughout: 13, 14, 140, 143, 145, 148, 196, 203, 215, 220, 279, dead_or_set: 194
insn=79, live_throughout: 13, 14, 140, 143, 145, 148, 194, 203, 215, 220, 279, dead_or_set: 196, 198
insn=104, live_throughout: 13, 14, 140, 143, 145, 148, 194, 198, 203, 215, 220, 279, dead_or_set: 141
insn=85, live_throughout: 13, 14, 140, 141, 143, 145, 148, 194, 198, 215, 220, 279, dead_or_set: 203, 204
insn=75, live_throughout: 13, 14, 140, 141, 143, 145, 148, 198, 204, 215, 220, 279, dead_or_set: 139, 194
insn=86, live_throughout: 13, 14, 139, 140, 141, 143, 145, 148, 215, 220, 279, dead_or_set: 198, 204, 205
insn=105, live_throughout: 13, 14, 139, 140, 141, 143, 145, 148, 205, 215, 220, 279, dead_or_set: 142
insn=91, live_throughout: 13, 14, 139, 140, 141, 142, 143, 145, 148, 215, 220, dead_or_set: 205, 210, 279
insn=97, live_throughout: 13, 14, 139, 140, 141, 142, 143, 145, 148, 220, dead_or_set: 210, 215, 216
insn=103, live_throughout: 13, 14, 139, 140, 141, 142, 143, 145, 148, dead_or_set: 138, 216, 220
insn=258, live_throughout: 13, 14, 138, 139, 140, 141, 142, 143, 145, 148, dead_or_set: 
insn=108, live_throughout: 13, 14, 138, 139, 140, 148, 279, dead_or_set: 
insn=115, live_throughout: 13, 14, 138, 139, 140, 148, 279, dead_or_set: 
insn=116, live_throughout: 13, 14, 138, 139, 140, 148, 279, dead_or_set: 
insn=118, live_throughout: 13, 14, 138, 139, 140, 148, dead_or_set: 141
insn=119, live_throughout: 13, 14, 138, 139, 140, 141, 148, dead_or_set: 142
insn=260, live_throughout: 13, 14, 138, 139, 140, 141, 142, 148, dead_or_set: 
insn=122, live_throughout: 13, 14, 140, 148, 279, dead_or_set: 
insn=135, live_throughout: 13, 14, 140, 148, 279, dead_or_set: 235
insn=155, live_throughout: 13, 14, 140, 148, 235, 279, dead_or_set: 254
insn=130, live_throughout: 13, 14, 140, 148, 235, 254, 279, dead_or_set: 230
insn=150, live_throughout: 13, 14, 140, 148, 230, 235, 254, 279, dead_or_set: 249
insn=138, live_throughout: 13, 14, 140, 148, 230, 249, 254, 279, dead_or_set: 235, 237
insn=133, live_throughout: 13, 14, 140, 148, 237, 249, 254, 279, dead_or_set: 230, 232
insn=128, live_throughout: 13, 14, 140, 148, 232, 237, 249, 254, 279, dead_or_set: 228
insn=139, live_throughout: 13, 14, 140, 148, 228, 232, 249, 254, 279, dead_or_set: 237, 238
insn=140, live_throughout: 13, 14, 140, 148, 228, 249, 254, 279, dead_or_set: 232, 238, 239
insn=277, live_throughout: 13, 14, 140, 148, 228, 239, 249, 254, 279, dead_or_set: 227
insn=125, live_throughout: 13, 14, 140, 148, 228, 239, 249, 254, 279, dead_or_set: 146, 227
insn=145, live_throughout: 13, 14, 140, 146, 148, 228, 249, 254, dead_or_set: 239, 244, 279
insn=129, live_throughout: 13, 14, 140, 146, 148, 244, 249, 254, dead_or_set: 139, 228
insn=151, live_throughout: 13, 14, 139, 140, 146, 148, 254, dead_or_set: 244, 249, 250
insn=127, live_throughout: 13, 14, 139, 140, 146, 148, 250, 254, dead_or_set: 141
insn=157, live_throughout: 13, 14, 139, 140, 141, 146, 148, dead_or_set: 138, 250, 254
insn=126, live_throughout: 13, 14, 138, 139, 140, 141, 148, dead_or_set: 142, 146
insn=158, live_throughout: 13, 14, 138, 139, 140, 141, 142, 148, dead_or_set: 
insn=270, live_throughout: 13, 14, 138, 139, 140, 141, 142, 148, dead_or_set: 259
insn=271, live_throughout: 13, 14, 138, 139, 140, 141, 142, 148, dead_or_set: 259
insn=161, live_throughout: 13, 14, 138, 139, 140, 141, 142, 148, 259, dead_or_set: 136
insn=167, live_throughout: 13, 14, 136, 138, 139, 140, 141, 142, 148, dead_or_set: 259, 261
insn=276, live_throughout: 13, 14, 136, 138, 139, 140, 141, 142, 148, 261, dead_or_set: 263
insn=171, live_throughout: 13, 14, 136, 138, 139, 140, 141, 142, 148, 261, dead_or_set: 143, 263
insn=162, live_throughout: 13, 14, 138, 139, 140, 141, 142, 143, 148, 261, dead_or_set: 136
insn=275, live_throughout: 13, 14, 136, 138, 139, 140, 141, 142, 143, 148, 261, dead_or_set: 258
insn=168, live_throughout: 13, 14, 136, 138, 139, 140, 141, 142, 143, 148, dead_or_set: 258, 261, 262
insn=169, live_throughout: 13, 14, 138, 139, 140, 141, 142, 143, 148, dead_or_set: 136, 145, 262
insn=172, live_throughout: 13, 14, 138, 139, 140, 141, 142, 143, 145, 148, dead_or_set: 
insn=174, live_throughout: 13, 14, 138, 139, 140, 141, 142, 143, 148, dead_or_set: 133, 145
insn=175, live_throughout: 13, 14, 133, 138, 139, 140, 141, 142, 143, 148, dead_or_set: 144
insn=262, live_throughout: 13, 14, 133, 138, 139, 140, 141, 142, 143, 144, 148, dead_or_set: 
insn=192, live_throughout: 13, 14, 133, 138, 139, 140, 141, 142, 143, 144, 148, dead_or_set: 
insn=180, live_throughout: 13, 14, 138, 139, 140, 141, 142, 143, 144, 148, dead_or_set: 133, 264
insn=181, live_throughout: 13, 14, 133, 138, 139, 140, 141, 142, 143, 144, 148, dead_or_set: 264
insn=182, live_throughout: 13, 14, 133, 138, 139, 140, 141, 142, 143, 144, 148, dead_or_set: 
insn=184, live_throughout: 13, 14, 138, 139, 140, 141, 142, 143, 144, dead_or_set: 133, 148
insn=264, live_throughout: 13, 14, 138, 139, 140, 141, 142, 143, 144, dead_or_set: 
insn=187, live_throughout: 13, 14, 133, 138, 139, 140, 141, 142, 143, 144, 148, dead_or_set: 
insn=189, live_throughout: 13, 14, 133, 138, 139, 140, 141, 142, 143, 148, dead_or_set: 144
insn=190, live_throughout: 13, 14, 133, 138, 139, 140, 141, 142, 143, 144, 148, dead_or_set: 
insn=193, live_throughout: 13, 14, 133, 138, 139, 140, 141, 142, 143, 144, 148, dead_or_set: 
insn=194, live_throughout: 13, 14, 133, 138, 139, 140, 141, 142, 143, 144, 148, dead_or_set: 
insn=195, live_throughout: 13, 14, 138, 139, 140, 141, 142, 143, 144, dead_or_set: 
insn=197, live_throughout: 13, 14, 138, 139, 140, 141, 142, 144, dead_or_set: 143
insn=198, live_throughout: 13, 14, 138, 139, 140, 141, 142, 144, dead_or_set: 
insn=200, live_throughout: 13, 14, dead_or_set: 265
insn=201, live_throughout: 13, 14, 265, dead_or_set: 267
insn=206, live_throughout: 13, 14, 265, dead_or_set: 267
insn=207, live_throughout: 13, 14, 265, dead_or_set: 
insn=209, live_throughout: 13, 14, dead_or_set: 140
insn=266, live_throughout: 13, 14, 140, dead_or_set: 
insn=212, live_throughout: 13, 265, dead_or_set: 
insn=216, live_throughout: 13, 265, dead_or_set: 0
insn=217, live_throughout: 0, 13, 265, dead_or_set: 1
insn=218, live_throughout: 0, 1, 13, 265, dead_or_set: 2
insn=224, live_throughout: 0, 1, 2, 13, 265, dead_or_set: 140
insn=219, live_throughout: 13, 140, 265, dead_or_set: 0, 1, 2, 14
insn=221, live_throughout: 13, 14, 140, 265, dead_or_set: 274
insn=223, live_throughout: 13, 14, 140, dead_or_set: 265, 274
insn=268, live_throughout: 13, 14, 140, dead_or_set: 
insn=227, live_throughout: 13, 138, 139, 140, 141, 142, 144, dead_or_set: 
insn=230, live_throughout: 13, 138, 139, 140, 142, 144, dead_or_set: 0, 141
insn=231, live_throughout: 0, 13, 138, 140, 142, 144, dead_or_set: 1, 139
insn=232, live_throughout: 13, 138, 140, 142, 144, dead_or_set: 0, 1, 14
insn=234, live_throughout: 13, 138, 140, dead_or_set: 0, 142, 144
insn=235, live_throughout: 0, 13, 140, dead_or_set: 1, 138
insn=236, live_throughout: 13, 140, dead_or_set: 0, 1, 14
insn=237, live_throughout: 13, 14, 140, dead_or_set: 
insn=243, live_throughout: 13, 14, dead_or_set: 0, 140
insn=249, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 183: (insn_list:REG_DEP_TRUE 278 (nil))
init_insns for 188: (insn_list:REG_DEP_TRUE 279 (nil))
init_insns for 194: (insn_list:REG_DEP_TRUE 74 (nil))
init_insns for 227: (insn_list:REG_DEP_TRUE 277 (nil))
init_insns for 228: (insn_list:REG_DEP_TRUE 128 (nil))
init_insns for 258: (insn_list:REG_DEP_TRUE 275 (nil))
init_insns for 263: (insn_list:REG_DEP_TRUE 276 (nil))
init_insns for 265: (insn_list:REG_DEP_TRUE 200 (nil))
init_insns for 274: (insn_list:REG_DEP_TRUE 221 (nil))
changing reg in insn 180
changing reg in insn 174
changing reg in insn 180
changing reg in insn 184
changing reg in insn 161
changing reg in insn 162
changing reg in insn 162
changing reg in insn 169
changing reg in insn 49
changing reg in insn 50
changing reg in insn 50
changing reg in insn 57
changing reg in insn 157
changing reg in insn 103
changing reg in insn 40
changing reg in insn 235
changing reg in insn 129
changing reg in insn 75
changing reg in insn 11
changing reg in insn 231
changing reg in insn 8
changing reg in insn 224
changing reg in insn 209
changing reg in insn 243
changing reg in insn 127
changing reg in insn 118
changing reg in insn 104
changing reg in insn 68
changing reg in insn 230
changing reg in insn 126
changing reg in insn 119
changing reg in insn 105
changing reg in insn 69
changing reg in insn 234
changing reg in insn 171
changing reg in insn 59
changing reg in insn 197
changing reg in insn 193
changing reg in insn 189
changing reg in insn 175
changing reg in insn 234
changing reg in insn 230
changing reg in insn 197
changing reg in insn 193
changing reg in insn 189
changing reg in insn 169
changing reg in insn 57
changing reg in insn 174
changing reg in insn 125
changing reg in insn 127
changing reg in insn 126
changing reg in insn 2
changing reg in insn 254
changing reg in insn 184
changing reg in insn 135
changing reg in insn 130
changing reg in insn 128
changing reg in insn 81
changing reg in insn 76
changing reg in insn 74
changing reg in insn 23
changing reg in insn 17
changing reg in insn 12
changing reg in insn 11
changing reg in insn 128
changing reg in insn 74
changing reg in insn 12
changing reg in insn 15
changing reg in insn 15
changing reg in insn 22
changing reg in insn 17
changing reg in insn 20
changing reg in insn 20
changing reg in insn 21
changing reg in insn 21
changing reg in insn 22
changing reg in insn 22
changing reg in insn 27
changing reg in insn 23
changing reg in insn 46
changing reg in insn 37
changing reg in insn 32
changing reg in insn 27
changing reg in insn 27
changing reg in insn 33
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 39
changing reg in insn 37
changing reg in insn 39
changing reg in insn 39
changing reg in insn 40
changing reg in insn 278
changing reg in insn 56
changing reg in insn 273
changing reg in insn 272
changing reg in insn 273
changing reg in insn 55
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 56
changing reg in insn 57
changing reg in insn 279
changing reg in insn 59
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 79
changing reg in insn 79
changing reg in insn 86
changing reg in insn 81
changing reg in insn 84
changing reg in insn 84
changing reg in insn 85
changing reg in insn 85
changing reg in insn 86
changing reg in insn 86
changing reg in insn 91
changing reg in insn 91
changing reg in insn 97
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 103
changing reg in insn 101
changing reg in insn 103
changing reg in insn 277
changing reg in insn 125
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 133
changing reg in insn 133
changing reg in insn 140
changing reg in insn 135
changing reg in insn 138
changing reg in insn 138
changing reg in insn 139
changing reg in insn 139
changing reg in insn 140
changing reg in insn 140
changing reg in insn 145
changing reg in insn 145
changing reg in insn 151
changing reg in insn 150
changing reg in insn 151
changing reg in insn 151
changing reg in insn 157
changing reg in insn 155
changing reg in insn 157
changing reg in insn 275
changing reg in insn 168
changing reg in insn 271
changing reg in insn 270
changing reg in insn 271
changing reg in insn 167
changing reg in insn 167
changing reg in insn 168
changing reg in insn 168
changing reg in insn 168
changing reg in insn 169
changing reg in insn 276
changing reg in insn 171
changing reg in insn 180
changing reg in insn 181
changing reg in insn 200
changing reg in insn 223
changing reg in insn 201
changing reg in insn 201
changing reg in insn 206
changing reg in insn 221
changing reg in insn 254
changing reg in insn 155
changing reg in insn 150
changing reg in insn 145
changing reg in insn 115
changing reg in insn 101
changing reg in insn 96
changing reg in insn 91
changing reg in insn 65
Spilling for insn 272.
Using reg 0 for reload 0
Spilling for insn 270.
Using reg 3 for reload 0
Spilling for insn 184.
Spilling for insn 223.

Reloads for insn # 272
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 0 r0)

Reloads for insn # 270
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 184
Reload 0: reload_out (SI) = (mem/f:SI (plus:SI (reg:SI 3 r3 [orig:133 ivtmp.908 ] [133])
                                                        (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/f:SI (plus:SI (reg:SI 3 r3 [orig:133 ivtmp.908 ] [133])
                                                        (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])

Reloads for insn # 223
Reload 0: reload_out (QI) = (mem/c/i:QI (plus:SI (reg/f:SI 5 r5 [265])
                                                        (const_int 18 [0x12])) [0 __warned+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (plus:SI (reg/f:SI 5 r5 [265])
                                                        (const_int 18 [0x12])) [0 __warned+0 S1 A8])
deleting insn with uid = 231.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 219.
verify found no changes in insn with uid = 232.
verify found no changes in insn with uid = 236.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 42 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 44 (    2)


arch_install_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 10[sl] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={21d,17u} r1={12d,5u} r2={19d,14u} r3={18d,23u} r4={3d,1u} r5={6d,10u,2d} r6={7d,5u} r7={11d,9u} r8={1d,12u,2d} r10={4d,4u} r12={15d,9u} r13={1d,27u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={12d,8u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 724{575d,145u,4e} in 120{116 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4] 8 [r8] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 7 2 NOTE_INSN_FUNCTION_BEG)

(note 7 3 2 2 NOTE_INSN_DELETED)

(insn 2 7 6 2 arch/arm/kernel/hw_breakpoint.c:329 (set (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (nil))

(call_insn 6 2 8 2 arch/arm/kernel/hw_breakpoint.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enable_monitor_mode") [flags 0x3] <function_decl 0x113d8c80 enable_monitor_mode>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 8 6 9 2 arch/arm/kernel/hw_breakpoint.c:337 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 4 r4 [orig:140 ret ] [140])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 237)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
        (nil)))
;; End of basic block 2 -> ( 21 3)
;; lr  out 	 4 [r4] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 8 [r8] 13 [sp]


;; Succ edge  21 [96.0%] 
;; Succ edge  3 [4.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 24 [cc]
;; live  in  	 4 [r4] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  2 [4.0%]  (fallthru)
(note 10 9 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 14 10 16 3 NOTE_INSN_DELETED)

(note 16 14 19 3 NOTE_INSN_DELETED)

(note 19 16 25 3 NOTE_INSN_DELETED)

(note 25 19 26 3 NOTE_INSN_DELETED)

(note 26 25 30 3 NOTE_INSN_DELETED)

(note 30 26 31 3 NOTE_INSN_DELETED)

(note 31 30 36 3 NOTE_INSN_DELETED)

(note 36 31 38 3 NOTE_INSN_DELETED)

(note 38 36 43 3 NOTE_INSN_DELETED)

(note 43 38 44 3 NOTE_INSN_DELETED)

(note 44 43 45 3 NOTE_INSN_DELETED)

(note 45 44 17 3 NOTE_INSN_DELETED)

(insn 17 45 12 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 2 r2 [155])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 12 17 20 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 7 r7 [150])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                    (const_int 213 [0xd5])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 20 12 23 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 2 r2 [157])
        (zero_extract:SI (reg:SI 2 r2 [155])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))) 124 {extzv_t2} (nil))

(insn 23 20 15 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 3 r3 [161])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 15 23 11 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 7 r7 [152])
        (zero_extract:SI (reg:SI 7 r7 [150])
            (const_int 1 [0x1])
            (const_int 1 [0x1]))) 124 {extzv_t2} (nil))

(insn 11 15 21 3 arch/arm/kernel/hw_breakpoint.c:340 (set (reg/v:SI 1 r1 [orig:139 addr ] [139])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 21 11 32 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 2 r2 [158])
        (ashift:SI (reg:SI 2 r2 [157])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 32 21 22 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 0 r0 [169])
        (and:SI (reg:SI 3 r3 [161])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 22 32 37 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 7 r7 [159])
        (ior:SI (ashift:SI (reg:SI 7 r7 [152])
                (const_int 22 [0x16]))
            (reg:SI 2 r2 [158]))) 270 {*arith_shiftsi} (nil))

(insn 37 22 27 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 2 r2 [174])
        (zero_extract:SI (reg:SI 3 r3 [161])
            (const_int 2 [0x2])
            (const_int 5 [0x5]))) 124 {extzv_t2} (nil))

(insn 27 37 46 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 7 r7 [164])
        (ior:SI (lshiftrt:SI (reg:SI 3 r3 [161])
                (const_int 7 [0x7]))
            (reg:SI 7 r7 [159]))) 270 {*arith_shiftsi} (nil))

(insn 46 27 33 3 arch/arm/kernel/hw_breakpoint.c:343 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 3 r3 [161])
                        (const_int 24 [0x18]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(insn 33 46 254 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 7 r7 [170])
        (ior:SI (reg:SI 7 r7 [164])
            (reg:SI 0 r0 [169]))) 89 {*arm_iorsi3} (nil))

(insn 254 33 39 3 (set (reg:SI 3 r3 [279])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                    (const_int 211 [0xd3])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 39 254 40 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 7 r7 [176])
        (ior:SI (ashift:SI (reg:SI 2 r2 [174])
                (const_int 1 [0x1]))
            (reg:SI 7 r7 [170]))) 270 {*arith_shiftsi} (nil))

(insn 40 39 47 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg/v:SI 7 r7 [orig:138 ctrl ] [138])
        (ior:SI (reg:SI 7 r7 [176])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (nil))

(jump_insn 47 40 48 3 arch/arm/kernel/hw_breakpoint.c:343 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 2 [r2] 5 [r5] 12 [ip] 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 2 [r2] 5 [r5] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%]  (fallthru)
(note 48 47 53 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 53 48 62 4 NOTE_INSN_DELETED)

(note 62 53 63 4 NOTE_INSN_DELETED)

(note 63 62 64 4 NOTE_INSN_DELETED)

(note 64 63 281 4 NOTE_INSN_DELETED)

(insn 281 64 272 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg:SI 0 r0)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 272 281 273 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg:SI 2 r2 [184])
        (and:SI (reg:SI 0 r0)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 273 272 65 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg:SI 2 r2 [184])
        (and:SI (reg:SI 2 r2 [184])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 65 273 49 4 arch/arm/kernel/hw_breakpoint.c:349 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [279])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(insn 49 65 55 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg/v:SI 0 r0 [orig:137 __ptr ] [137])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 55 49 50 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg:SI 5 r5 [orig:186 <variable>.cpu ] [186])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [184])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 50 55 279 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg/v:SI 0 r0 [orig:137 __ptr ] [137])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 0 r0 [orig:137 __ptr ] [137])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8111157)) -1 (nil))

(insn 279 50 59 4 arch/arm/kernel/hw_breakpoint.c:348 (set (reg/f:SI 2 r2 [188])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 59 279 278 4 arch/arm/kernel/hw_breakpoint.c:348 (set (reg/v:SI 2 r2 [orig:143 max_slots ] [143])
        (mem/c/i:SI (plus:SI (reg/f:SI 2 r2 [188])
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
        (nil)))

(insn 278 59 56 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg/f:SI 12 ip [183])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)
        (nil)))

(insn 56 278 57 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg:SI 12 ip [187])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 5 r5 [orig:186 <variable>.cpu ] [186])
                    (const_int 4 [0x4]))
                (reg/f:SI 12 ip [183])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 5 r5 [orig:186 <variable>.cpu ] [186])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 57 56 66 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg/v/f:SI 12 ip [orig:145 slots ] [145])
        (plus:SI (reg/v:SI 0 r0 [orig:137 __ptr ] [137])
            (reg:SI 12 ip [187]))) 4 {*arm_addsi3} (nil))

(jump_insn 66 57 67 4 arch/arm/kernel/hw_breakpoint.c:349 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 7 [r7] 8 [r8] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 6 [r6]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 6 [r6]
;; live  kill	

;; Pred edge  4 [50.0%]  (fallthru)
(note 67 66 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 5 arch/arm/kernel/hw_breakpoint.c:346 (set (reg/v:SI 0 r0 [orig:141 val_base ] [141])
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 64 [0x40])
        (nil)))

(insn 69 68 256 5 arch/arm/kernel/hw_breakpoint.c:345 (set (reg/v:SI 6 r6 [orig:142 ctrl_base ] [142])
        (const_int 80 [0x50])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 80 [0x50])
        (nil)))

(jump_insn 256 69 257 5 (set (pc)
        (label_ref 172)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 257 256 72)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 3 [r3] 4 [r4] 8 [r8] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 10 [sl]
;; live  in  	 2 [r2] 3 [r3] 4 [r4] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 5 [r5] 6 [r6] 7 [r7] 10 [sl]
;; live  kill	

;; Pred edge  4 [50.0%] 
(code_label 72 257 73 6 295 "" [1 uses])

(note 73 72 78 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 78 73 80 6 NOTE_INSN_DELETED)

(note 80 78 83 6 NOTE_INSN_DELETED)

(note 83 80 89 6 NOTE_INSN_DELETED)

(note 89 83 90 6 NOTE_INSN_DELETED)

(note 90 89 94 6 NOTE_INSN_DELETED)

(note 94 90 95 6 NOTE_INSN_DELETED)

(note 95 94 100 6 NOTE_INSN_DELETED)

(note 100 95 102 6 NOTE_INSN_DELETED)

(note 102 100 81 6 NOTE_INSN_DELETED)

(insn 81 102 101 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 10 sl [201])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                    (const_int 210 [0xd2])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 101 81 76 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 7 r7 [220])
        (zero_extract:SI (reg:SI 3 r3 [279])
            (const_int 2 [0x2])
            (const_int 5 [0x5]))) 124 {extzv_t2} (nil))

(insn 76 101 96 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 6 r6 [196])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                    (const_int 209 [0xd1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 96 76 84 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 5 r5 [215])
        (and:SI (reg:SI 3 r3 [279])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 84 96 74 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 10 sl [203])
        (zero_extract:SI (reg:SI 10 sl [201])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))) 124 {extzv_t2} (nil))

(insn 74 84 79 6 arch/arm/kernel/hw_breakpoint.c:351 (set (reg:SI 1 r1 [orig:194 <variable>.hw.D.22650.D.22649.info.trigger ] [194])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
        (nil)))

(insn 79 74 104 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 6 r6 [198])
        (zero_extract:SI (reg:SI 6 r6 [196])
            (const_int 1 [0x1])
            (const_int 1 [0x1]))) 124 {extzv_t2} (nil))

(insn 104 79 85 6 arch/arm/kernel/hw_breakpoint.c:346 (set (reg/v:SI 0 r0 [orig:141 val_base ] [141])
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 64 [0x40])
        (nil)))

(insn 85 104 75 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 10 sl [204])
        (ashift:SI (reg:SI 10 sl [203])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 75 85 86 6 arch/arm/kernel/hw_breakpoint.c:351 (set (reg/v:SI 1 r1 [orig:139 addr ] [139])
        (and:SI (reg:SI 1 r1 [orig:194 <variable>.hw.D.22650.D.22649.info.trigger ] [194])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 86 75 105 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 10 sl [205])
        (ior:SI (ashift:SI (reg:SI 6 r6 [198])
                (const_int 22 [0x16]))
            (reg:SI 10 sl [204]))) 270 {*arith_shiftsi} (nil))

(insn 105 86 91 6 arch/arm/kernel/hw_breakpoint.c:345 (set (reg/v:SI 6 r6 [orig:142 ctrl_base ] [142])
        (const_int 80 [0x50])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 80 [0x50])
        (nil)))

(insn 91 105 97 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 3 r3 [210])
        (ior:SI (lshiftrt:SI (reg:SI 3 r3 [279])
                (const_int 7 [0x7]))
            (reg:SI 10 sl [205]))) 270 {*arith_shiftsi} (nil))

(insn 97 91 103 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 3 r3 [216])
        (ior:SI (reg:SI 3 r3 [210])
            (reg:SI 5 r5 [215]))) 89 {*arm_iorsi3} (nil))

(insn 103 97 258 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg/v:SI 7 r7 [orig:138 ctrl ] [138])
        (ior:SI (ashift:SI (reg:SI 7 r7 [220])
                (const_int 1 [0x1]))
            (reg:SI 3 r3 [216]))) 270 {*arith_shiftsi} (nil))

(jump_insn 258 103 259 6 (set (pc)
        (label_ref 172)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  11 [100.0%] 

(barrier 259 258 108)

;; Start of basic block ( 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 1 [r1] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  3 [50.0%] 
(code_label 108 259 109 7 294 "" [1 uses])

(note 109 108 112 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 112 109 113 7 NOTE_INSN_DELETED)

(note 113 112 114 7 NOTE_INSN_DELETED)

(note 114 113 115 7 NOTE_INSN_DELETED)

(insn 115 114 116 7 arch/arm/kernel/hw_breakpoint.c:356 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [279])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 116 115 117 7 arch/arm/kernel/hw_breakpoint.c:356 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 1 [r1] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 6 [r6]
;; live  in  	 1 [r1] 4 [r4] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 6 [r6]
;; live  kill	

;; Pred edge  7 [50.0%]  (fallthru)
(note 117 116 118 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 8 arch/arm/kernel/hw_breakpoint.c:365 (set (reg/v:SI 0 r0 [orig:141 val_base ] [141])
        (const_int 96 [0x60])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 96 [0x60])
        (nil)))

(insn 119 118 260 8 arch/arm/kernel/hw_breakpoint.c:364 (set (reg/v:SI 6 r6 [orig:142 ctrl_base ] [142])
        (const_int 112 [0x70])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 112 [0x70])
        (nil)))

(jump_insn 260 119 261 8 (set (pc)
        (label_ref 158)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  10 [100.0%] 

(barrier 261 260 122)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip]
;; live  in  	 3 [r3] 4 [r4] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip]
;; live  kill	

;; Pred edge  7 [50.0%] 
(code_label 122 261 123 9 297 "" [1 uses])

(note 123 122 132 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 132 123 134 9 NOTE_INSN_DELETED)

(note 134 132 137 9 NOTE_INSN_DELETED)

(note 137 134 143 9 NOTE_INSN_DELETED)

(note 143 137 144 9 NOTE_INSN_DELETED)

(note 144 143 148 9 NOTE_INSN_DELETED)

(note 148 144 149 9 NOTE_INSN_DELETED)

(note 149 148 154 9 NOTE_INSN_DELETED)

(note 154 149 156 9 NOTE_INSN_DELETED)

(note 156 154 135 9 NOTE_INSN_DELETED)

(insn 135 156 155 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 0 r0 [235])
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                    (const_int 210 [0xd2])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 155 135 130 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 7 r7 [254])
        (zero_extract:SI (reg:SI 3 r3 [279])
            (const_int 2 [0x2])
            (const_int 5 [0x5]))) 124 {extzv_t2} (nil))

(insn 130 155 150 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 12 ip [230])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                    (const_int 209 [0xd1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 150 130 138 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 2 r2 [249])
        (and:SI (reg:SI 3 r3 [279])
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (nil))

(insn 138 150 133 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 0 r0 [237])
        (zero_extract:SI (reg:SI 0 r0 [235])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))) 124 {extzv_t2} (nil))

(insn 133 138 128 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 12 ip [232])
        (zero_extract:SI (reg:SI 12 ip [230])
            (const_int 1 [0x1])
            (const_int 1 [0x1]))) 124 {extzv_t2} (nil))

(insn 128 133 139 9 arch/arm/kernel/hw_breakpoint.c:361 (set (reg:SI 1 r1 [orig:228 <variable>.hw.D.22650.D.22649.info.trigger ] [228])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 8 r8 [orig:148 bp ] [148])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
        (nil)))

(insn 139 128 140 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 0 r0 [238])
        (ashift:SI (reg:SI 0 r0 [237])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 140 139 277 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 0 r0 [239])
        (ior:SI (ashift:SI (reg:SI 12 ip [232])
                (const_int 22 [0x16]))
            (reg:SI 0 r0 [238]))) 270 {*arith_shiftsi} (nil))

(insn 277 140 125 9 arch/arm/kernel/hw_breakpoint.c:358 (set (reg/f:SI 12 ip [227])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 125 277 145 9 arch/arm/kernel/hw_breakpoint.c:358 (set (reg:SI 6 r6 [orig:146 core_num_brps.318 ] [146])
        (mem/c/i:SI (plus:SI (reg/f:SI 12 ip [227])
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
        (nil)))

(insn 145 125 129 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 3 r3 [244])
        (ior:SI (lshiftrt:SI (reg:SI 3 r3 [279])
                (const_int 7 [0x7]))
            (reg:SI 0 r0 [239]))) 270 {*arith_shiftsi} (nil))

(insn 129 145 151 9 arch/arm/kernel/hw_breakpoint.c:361 (set (reg/v:SI 1 r1 [orig:139 addr ] [139])
        (and:SI (reg:SI 1 r1 [orig:228 <variable>.hw.D.22650.D.22649.info.trigger ] [228])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 151 129 127 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 3 r3 [250])
        (ior:SI (reg:SI 3 r3 [244])
            (reg:SI 2 r2 [249]))) 89 {*arm_iorsi3} (nil))

(insn 127 151 157 9 arch/arm/kernel/hw_breakpoint.c:359 (set (reg/v:SI 0 r0 [orig:141 val_base ] [141])
        (plus:SI (reg:SI 6 r6 [orig:146 core_num_brps.318 ] [146])
            (const_int 64 [0x40]))) 4 {*arm_addsi3} (nil))

(insn 157 127 126 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg/v:SI 7 r7 [orig:138 ctrl ] [138])
        (ior:SI (ashift:SI (reg:SI 7 r7 [254])
                (const_int 1 [0x1]))
            (reg:SI 3 r3 [250]))) 270 {*arith_shiftsi} (nil))

(insn 126 157 158 9 arch/arm/kernel/hw_breakpoint.c:358 (set (reg/v:SI 6 r6 [orig:142 ctrl_base ] [142])
        (plus:SI (reg:SI 6 r6 [orig:146 core_num_brps.318 ] [146])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))
;; End of basic block 9 -> ( 10)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3] 5 [r5] 12 [ip]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 2 [r2] 3 [r3] 5 [r5] 12 [ip]
;; live  kill	

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 158 126 159 10 298 "" [1 uses])

(note 159 158 165 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 165 159 282 10 NOTE_INSN_DELETED)

(insn 282 165 270 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 270 282 271 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg:SI 2 r2 [259])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 271 270 161 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg:SI 2 r2 [259])
        (and:SI (reg:SI 2 r2 [259])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 161 271 167 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg/v:SI 3 r3 [orig:136 __ptr ] [136])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))
        (nil)))

(insn 167 161 276 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg:SI 5 r5 [orig:261 <variable>.cpu ] [261])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [259])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 276 167 171 10 arch/arm/kernel/hw_breakpoint.c:368 (set (reg/f:SI 2 r2 [263])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 171 276 162 10 arch/arm/kernel/hw_breakpoint.c:368 (set (reg/v:SI 2 r2 [orig:143 max_slots ] [143])
        (mem/c/i:SI (plus:SI (reg/f:SI 2 r2 [263])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 core_num_wrps+0 S4 A32])
        (nil)))

(insn 162 171 275 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg/v:SI 3 r3 [orig:136 __ptr ] [136])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:136 __ptr ] [136])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8113717)) -1 (nil))

(insn 275 162 168 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg/f:SI 12 ip [258])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)
        (nil)))

(insn 168 275 169 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg:SI 12 ip [262])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 5 r5 [orig:261 <variable>.cpu ] [261])
                    (const_int 4 [0x4]))
                (reg/f:SI 12 ip [258])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 5 r5 [orig:261 <variable>.cpu ] [261])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 169 168 172 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg/v/f:SI 12 ip [orig:145 slots ] [145])
        (plus:SI (reg/v:SI 3 r3 [orig:136 __ptr ] [136])
            (reg:SI 12 ip [262]))) 4 {*arm_addsi3} (nil))
;; End of basic block 10 -> ( 11)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 5 10 6) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp] 14 [lr]
;; lr  use 	 12 [ip] 13 [sp]
;; lr  def 	 3 [r3] 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 12 [ip] 13 [sp]
;; live  gen 	 3 [r3] 5 [r5]
;; live  kill	

;; Pred edge  5 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 172 169 173 11 296 "" [2 uses])

(note 173 172 174 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 175 11 arch/arm/kernel/hw_breakpoint.c:368 (set (reg:SI 3 r3 [orig:133 ivtmp.908 ] [133])
        (reg/v/f:SI 12 ip [orig:145 slots ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 262 11 arch/arm/kernel/hw_breakpoint.c:371 (set (reg/v:SI 5 r5 [orig:144 i ] [144])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 262 175 263 11 arch/arm/kernel/hw_breakpoint.c:371 (set (pc)
        (label_ref 190)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 263 262 192)

;; Start of basic block ( 15) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 12 [ip] 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 3 [r3] 12 [ip] 24 [cc]
;; live  kill	

;; Pred edge  15 [95.5%] 
(code_label 192 263 178 12 302 "" [1 uses])

(note 178 192 180 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 180 178 181 12 arch/arm/kernel/hw_breakpoint.c:374 (set (reg/f:SI 12 ip [264])
        (mem/f:SI (post_inc:SI (reg:SI 3 r3 [orig:133 ivtmp.908 ] [133])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 3 r3 [orig:133 ivtmp.908 ] [133])
        (nil)))

(insn 181 180 182 12 arch/arm/kernel/hw_breakpoint.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 12 ip [264])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 182 181 183 12 arch/arm/kernel/hw_breakpoint.c:374 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  13 [4.5%]  (fallthru,loop_exit)
;; Succ edge  14 [95.5%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 8 [r8] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  12 [4.5%]  (fallthru,loop_exit)
(note 183 182 184 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 184 183 264 13 arch/arm/kernel/hw_breakpoint.c:375 (set (mem/f:SI (plus:SI (reg:SI 3 r3 [orig:133 ivtmp.908 ] [133])
                (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])
        (reg/v/f:SI 8 r8 [orig:148 bp ] [148])) 167 {*arm_movsi_insn} (nil))

(jump_insn 264 184 265 13 arch/arm/kernel/hw_breakpoint.c:376 (set (pc)
        (label_ref 195)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 16)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 265 264 187)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  12 [95.5%] 
(code_label 187 265 188 14 300 "" [1 uses])

(note 188 187 189 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 190 14 arch/arm/kernel/hw_breakpoint.c:371 (set (reg/v:SI 5 r5 [orig:144 i ] [144])
        (plus:SI (reg/v:SI 5 r5 [orig:144 i ] [144])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  11 [100.0%] 
(code_label 190 189 191 15 299 "" [1 uses])

(note 191 190 193 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 193 191 194 15 arch/arm/kernel/hw_breakpoint.c:371 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:144 i ] [144])
            (reg/v:SI 2 r2 [orig:143 max_slots ] [143]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 194 193 195 15 arch/arm/kernel/hw_breakpoint.c:371 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 192)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 15 -> ( 12 16)
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  12 [95.5%] 
;; Succ edge  16 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 15 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 5 [r5] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  15 [4.5%]  (fallthru,loop_exit)
;; Pred edge  13 [100.0%] 
(code_label 195 194 196 16 301 "" [1 uses])

(note 196 195 197 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 197 196 198 16 arch/arm/kernel/hw_breakpoint.c:380 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:144 i ] [144])
            (reg/v:SI 2 r2 [orig:143 max_slots ] [143]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 198 197 199 16 arch/arm/kernel/hw_breakpoint.c:380 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 227)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 16 -> ( 17 20)
;; lr  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  17 [0.0%]  (fallthru)
;; Succ edge  20 [100.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 5 [r5] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  16 [0.0%]  (fallthru)
(note 199 198 203 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(note 203 199 204 17 NOTE_INSN_DELETED)

(note 204 203 205 17 NOTE_INSN_DELETED)

(note 205 204 200 17 NOTE_INSN_DELETED)

(insn 200 205 201 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (reg/f:SI 5 r5 [265])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 201 200 206 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (reg:SI 3 r3 [orig:267 __warned ] [267])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 5 r5 [265])
                    (const_int 18 [0x12])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 18 [0x12]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 206 201 207 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:267 __warned ] [267])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 207 206 208 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 212)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 13 [sp]


;; Succ edge  19 [0.0%] 
;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  17 [100.0%]  (fallthru)
(note 208 207 209 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 209 208 266 18 arch/arm/kernel/hw_breakpoint.c:381 (set (reg/v:SI 4 r4 [orig:140 ret ] [140])
        (const_int -16 [0xfffffffffffffff0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 266 209 267 18 (set (pc)
        (label_ref 237)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 21)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 267 266 212)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  17 [0.0%] 
(code_label 212 267 213 19 304 "" [1 uses])

(note 213 212 216 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 216 213 217 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 217 216 218 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 3 (set (reg:SI 1 r1)
        (const_int 380 [0x17c])) 167 {*arm_movsi_insn} (nil))

(insn 218 217 224 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 3 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11585c00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11585c00>)
        (nil)))

(insn 224 218 219 19 arch/arm/kernel/hw_breakpoint.c:381 (set (reg/v:SI 4 r4 [orig:140 ret ] [140])
        (const_int -16 [0xfffffffffffffff0])) 167 {*arm_movsi_insn} (nil))

(call_insn 219 224 221 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 221 219 223 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 5 (set (reg:SI 3 r3 [274])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 223 221 268 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 5 (set (mem/c/i:QI (plus:SI (reg/f:SI 5 r5 [265])
                (const_int 18 [0x12])) [0 __warned+0 S1 A8])
        (reg:QI 3 r3 [274])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 268 223 269 19 (set (pc)
        (label_ref 237)) 242 {*arm_jump} (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  21 [100.0%] 

(barrier 269 268 227)

;; Start of basic block ( 16) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  16 [100.0%] 
(code_label 227 269 228 20 303 "" [1 uses])

(note 228 227 229 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 229 228 233 20 NOTE_INSN_DELETED)

(note 233 229 230 20 NOTE_INSN_DELETED)

(insn 230 233 232 20 arch/arm/kernel/hw_breakpoint.c:386 (set (reg:SI 0 r0)
        (plus:SI (reg/v:SI 5 r5 [orig:144 i ] [144])
            (reg/v:SI 0 r0 [orig:141 val_base ] [141]))) 4 {*arm_addsi3} (nil))

(call_insn 232 230 234 20 arch/arm/kernel/hw_breakpoint.c:386 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 234 232 235 20 arch/arm/kernel/hw_breakpoint.c:389 (set (reg:SI 0 r0)
        (plus:SI (reg/v:SI 5 r5 [orig:144 i ] [144])
            (reg/v:SI 6 r6 [orig:142 ctrl_base ] [142]))) 4 {*arm_addsi3} (nil))

(insn 235 234 236 20 arch/arm/kernel/hw_breakpoint.c:389 (set (reg:SI 1 r1)
        (reg/v:SI 7 r7 [orig:138 ctrl ] [138])) 167 {*arm_movsi_insn} (nil))

(call_insn 236 235 237 20 arch/arm/kernel/hw_breakpoint.c:389 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 20 -> ( 21)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 2 18 20 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [96.0%] 
;; Pred edge  18 [100.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%] 
(code_label 237 236 238 21 293 ("out") [3 uses])

(note 238 237 243 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 243 238 249 21 arch/arm/kernel/hw_breakpoint.c:393 (set (reg/i:SI 0 r0)
        (reg/v:SI 4 r4 [orig:140 ret ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 249 243 274 21 arch/arm/kernel/hw_breakpoint.c:393 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 21 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 274 249 280 NOTE_INSN_DELETED)

(note 280 274 0 NOTE_INSN_DELETED)


;; Function enable_single_step (enable_single_step)[0:1262]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 57.
verify found no changes in insn with uid = 57.
deleting insn with uid = 17.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

Pass 0 for finding allocno costs

    a1 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a1(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a4(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r152: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a1(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:70000
  a4(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a5(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 40(l0): point = 0
   Insn 37(l0): point = 2
   Insn 56(l0): point = 4
   Insn 55(l0): point = 6
   Insn 19(l0): point = 8
   Insn 30(l0): point = 10
   Insn 14(l0): point = 12
   Insn 28(l0): point = 14
   Insn 12(l0): point = 16
   Insn 21(l0): point = 18
   Insn 38(l0): point = 20
   Insn 29(l0): point = 22
   Insn 9(l0): point = 24
   Insn 18(l0): point = 26
   Insn 57(l0): point = 28
   Insn 24(l0): point = 30
   Insn 39(l0): point = 32
   Insn 16(l0): point = 34
   Insn 8(l0): point = 36
   Insn 3(l0): point = 38
   Insn 2(l0): point = 40
 a0(r133): [3..40]
 a1(r152): [3..6]
 a2(r147): [7..14]
 a3(r139): [9..34]
 a4(r149): [11..22]
 a5(r137): [13..16]
 a6(r142): [15..18]
 a7(r136): [17..24]
 a8(r134): [21..38]
 a9(r145): [23..30]
 a10(r141): [27..28]
Compressing live ranges: from 43 to 21 - 48%
Ranges after the compression:
 a0(r133): [0..20]
 a1(r152): [0..1]
 a2(r147): [2..6]
 a3(r139): [3..18]
 a4(r149): [4..12]
 a5(r137): [5..8]
 a6(r142): [7..10]
 a7(r136): [9..14]
 a8(r134): [11..19]
 a9(r145): [13..17]
 a10(r141): [15..16]
+++Allocating 88 bytes for conflict table (uncompressed size 88)
;; a0(r133,l0) conflicts: a1(r152,l0) a2(r147,l0) a3(r139,l0) a4(r149,l0) a5(r137,l0) a6(r142,l0) a7(r136,l0) a8(r134,l0) a9(r145,l0) a10(r141,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a1(r152,l0) conflicts: a0(r133,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a2(r147,l0) conflicts: a0(r133,l0) a3(r139,l0) a4(r149,l0) a5(r137,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a3(r139,l0) conflicts: a0(r133,l0) a2(r147,l0) a4(r149,l0) a5(r137,l0) a6(r142,l0) a7(r136,l0) a8(r134,l0) a9(r145,l0) a10(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a4(r149,l0) conflicts: a0(r133,l0) a2(r147,l0) a3(r139,l0) a5(r137,l0) a6(r142,l0) a7(r136,l0) a8(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a5(r137,l0) conflicts: a0(r133,l0) a2(r147,l0) a3(r139,l0) a4(r149,l0) a6(r142,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a6(r142,l0) conflicts: a0(r133,l0) a3(r139,l0) a4(r149,l0) a5(r137,l0) a7(r136,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a7(r136,l0) conflicts: a0(r133,l0) a3(r139,l0) a4(r149,l0) a6(r142,l0) a8(r134,l0) a9(r145,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a8(r134,l0) conflicts: a0(r133,l0) a3(r139,l0) a4(r149,l0) a7(r136,l0) a9(r145,l0) a10(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a9(r145,l0) conflicts: a0(r133,l0) a3(r139,l0) a7(r136,l0) a8(r134,l0) a10(r141,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a10(r141,l0) conflicts: a0(r133,l0) a3(r139,l0) a8(r134,l0) a9(r145,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  cp0:a4(r149)<->a9(r145)@125:shuffle
  cp1:a5(r137)<->a7(r136)@125:shuffle
  cp2:a2(r147)<->a6(r142)@125:shuffle
  cp3:a1(r152)<->a2(r147)@125:shuffle
  regions=1, blocks=3, points=21
    allocnos=11, copies=4, conflicts=1, ranges=11

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r133 1r152 2r147 3r139 4r149 5r137 6r142 7r136 8r134 9r145 10r141
    modified regnos: 133 134 136 137 139 141 142 145 147 149 152
    border:
    Pressure: GENERAL_REGS=7
    Reg 133 of GENERAL_REGS has 3 regs less
    Reg 152 of GENERAL_REGS has 2 regs less
    Reg 147 of GENERAL_REGS has 2 regs less
    Reg 139 of GENERAL_REGS has 2 regs less
    Reg 149 of GENERAL_REGS has 2 regs less
    Reg 137 of GENERAL_REGS has 2 regs less
    Reg 142 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
    Reg 145 of GENERAL_REGS has 2 regs less
    Reg 141 of GENERAL_REGS has 2 regs less
      Pushing a10(r141,l0)
      Pushing a9(r145,l0)
      Pushing a8(r134,l0)
      Pushing a7(r136,l0)
      Pushing a6(r142,l0)
      Pushing a5(r137,l0)
      Pushing a4(r149,l0)
      Pushing a2(r147,l0)
      Pushing a3(r139,l0)
      Pushing a1(r152,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 4
      Popping a1(r152,l0)  -- assign reg 3
      Popping a3(r139,l0)  -- assign reg 2
      Popping a2(r147,l0)  -- assign reg 3
      Popping a4(r149,l0)  -- assign reg 12
      Popping a5(r137,l0)  -- assign reg 1
      Popping a6(r142,l0)  -- assign reg 3
      Popping a7(r136,l0)  -- assign reg 5
      Popping a8(r134,l0)  -- assign reg 6
      Popping a9(r145,l0)  -- assign reg 12
      Popping a10(r141,l0)  -- assign reg 3
Disposition:
    0:r133 l0     4    8:r134 l0     6    7:r136 l0     5    5:r137 l0     1
    3:r139 l0     2   10:r141 l0     3    6:r142 l0     3    9:r145 l0    12
    2:r147 l0     3    4:r149 l0    12    1:r152 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 0, 1, 13, dead_or_set: 133
insn=3, live_throughout: 0, 13, 133, dead_or_set: 1, 134
insn=8, live_throughout: 13, 133, 134, dead_or_set: 0, 14
insn=16, live_throughout: 13, 14, 133, 134, dead_or_set: 139
insn=39, live_throughout: 13, 14, 133, 134, 139, dead_or_set: 0
insn=24, live_throughout: 0, 13, 14, 133, 134, 139, dead_or_set: 145
insn=57, live_throughout: 0, 13, 14, 133, 134, 139, 145, dead_or_set: 141
insn=18, live_throughout: 0, 13, 14, 133, 134, 139, 145, dead_or_set: 139, 141
insn=9, live_throughout: 0, 13, 14, 133, 134, 139, 145, dead_or_set: 136
insn=29, live_throughout: 0, 13, 14, 133, 134, 136, 139, dead_or_set: 145, 149
insn=38, live_throughout: 0, 13, 14, 133, 136, 139, 149, dead_or_set: 134
insn=21, live_throughout: 0, 13, 14, 133, 136, 139, 149, dead_or_set: 142
insn=12, live_throughout: 0, 13, 14, 133, 139, 142, 149, dead_or_set: 136, 137
insn=28, live_throughout: 0, 13, 14, 133, 137, 139, 149, dead_or_set: 142, 147
insn=14, live_throughout: 0, 13, 14, 133, 139, 147, 149, dead_or_set: 137
insn=30, live_throughout: 0, 13, 14, 133, 139, 147, dead_or_set: 147, 149
insn=19, live_throughout: 0, 13, 14, 133, 147, dead_or_set: 139
insn=55, live_throughout: 0, 13, 14, 133, dead_or_set: 147, 152
insn=56, live_throughout: 0, 13, 14, 133, dead_or_set: 152
insn=37, live_throughout: 0, 13, 14, dead_or_set: 133, 152
insn=40, live_throughout: 13, 14, dead_or_set: 0
init_insns for 141: (insn_list:REG_DEP_TRUE 57 (nil))
changing reg in insn 2
changing reg in insn 37
changing reg in insn 16
changing reg in insn 14
changing reg in insn 39
changing reg in insn 38
changing reg in insn 24
changing reg in insn 19
changing reg in insn 9
changing reg in insn 3
changing reg in insn 38
changing reg in insn 9
changing reg in insn 12
changing reg in insn 12
changing reg in insn 16
changing reg in insn 19
changing reg in insn 57
changing reg in insn 18
changing reg in insn 24
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 56
changing reg in insn 55
changing reg in insn 56
Spilling for insn 38.
Spilling for insn 14.
Spilling for insn 19.
Spilling for insn 37.

Reloads for insn # 38
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                                                        (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                                                        (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])

Reloads for insn # 14
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                                                        (const_int 209 [0xd1])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                                                        (const_int 209 [0xd1])) [0 S1 A8])

Reloads for insn # 19
Reload 0: reload_out (HI) = (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                                                        (const_int 210 [0xd2])) [0 S2 A16])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                                                        (const_int 210 [0xd2])) [0 S2 A16])

Reloads for insn # 37
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                                                        (const_int 211 [0xd3])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                                                        (const_int 211 [0xd3])) [0 S1 A8])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 40.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


enable_single_step

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 12[ip] 13[sp] 14[lr]
;;  ref usage 	r0={4d,3u} r1={4d,2u} r2={5d,3u} r3={9d,6u} r4={1d,8u} r5={1d,1u} r6={1d,1u} r12={5d,2u} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 286{255d,31u,0e} in 21{19 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 4 5 15 2 NOTE_INSN_FUNCTION_BEG)

(note 15 4 50 2 NOTE_INSN_DELETED)

(note 50 15 51 2 NOTE_INSN_DELETED)

(note 51 50 49 2 NOTE_INSN_DELETED)

(note 49 51 52 2 NOTE_INSN_DELETED)

(note 52 49 20 2 NOTE_INSN_DELETED)

(note 20 52 22 2 NOTE_INSN_DELETED)

(note 22 20 53 2 NOTE_INSN_DELETED)

(note 53 22 26 2 NOTE_INSN_DELETED)

(note 26 53 27 2 NOTE_INSN_DELETED)

(note 27 26 54 2 NOTE_INSN_DELETED)

(note 54 27 32 2 NOTE_INSN_DELETED)

(note 32 54 2 2 NOTE_INSN_DELETED)

(insn 2 32 3 2 arch/arm/kernel/hw_breakpoint.c:649 (set (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 8 2 arch/arm/kernel/hw_breakpoint.c:649 (set (reg/v:SI 6 r6 [orig:134 addr ] [134])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 8 3 16 2 arch/arm/kernel/hw_breakpoint.c:652 (parallel [
            (call (mem:SI (symbol_ref:SI ("arch_uninstall_hw_breakpoint") [flags 0x3] <function_decl 0x10b14380 arch_uninstall_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 16 8 39 2 arch/arm/kernel/hw_breakpoint.c:654 (set (reg:HI 2 r2 [139])
        (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                (const_int 210 [0xd2])) [0 S2 A16])) 176 {*movhi_insn_arch4} (nil))

(insn 39 16 24 2 arch/arm/kernel/hw_breakpoint.c:659 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:133 bp ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 24 39 57 2 arch/arm/kernel/hw_breakpoint.c:656 (set (reg:SI 12 ip [145])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 57 24 18 2 arch/arm/kernel/hw_breakpoint.c:654 (set (reg:SI 3 r3 [141])
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 15 [0xf])
        (nil)))

(insn 18 57 9 2 arch/arm/kernel/hw_breakpoint.c:654 (set (zero_extract:SI (reg:SI 2 r2 [139])
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 3 r3 [141])) 77 {insv_t2} (expr_list:REG_EQUAL (const_int 15 [0xf])
        (nil)))

(insn 9 18 29 2 arch/arm/kernel/hw_breakpoint.c:653 (set (reg:SI 5 r5 [136])
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                    (const_int 209 [0xd1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 29 9 38 2 arch/arm/kernel/hw_breakpoint.c:656 (set (reg:SI 12 ip [149])
        (zero_extract:SI (reg:SI 12 ip [145])
            (const_int 2 [0x2])
            (const_int 5 [0x5]))) 124 {extzv_t2} (nil))

(insn 38 29 21 2 arch/arm/kernel/hw_breakpoint.c:658 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
        (reg/v:SI 6 r6 [orig:134 addr ] [134])) 167 {*arm_movsi_insn} (nil))

(insn 21 38 12 2 arch/arm/kernel/hw_breakpoint.c:655 (set (reg:SI 3 r3 [142])
        (lshiftrt:SI (reg:SI 2 r2 [139])
            (const_int 8 [0x8]))) 117 {*arm_shiftsi3} (nil))

(insn 12 21 28 2 arch/arm/kernel/hw_breakpoint.c:653 (set (reg:SI 1 r1 [137])
        (ior:SI (reg:SI 5 r5 [136])
            (const_int 2 [0x2]))) 89 {*arm_iorsi3} (nil))

(insn 28 12 14 2 arch/arm/kernel/hw_breakpoint.c:656 (set (reg:SI 3 r3 [147])
        (and:SI (reg:SI 3 r3 [142])
            (const_int 231 [0xe7]))) 67 {*arm_andsi3_insn} (nil))

(insn 14 28 30 2 arch/arm/kernel/hw_breakpoint.c:653 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                (const_int 209 [0xd1])) [0 S1 A8])
        (reg:QI 1 r1 [137])) 178 {*arm_movqi_insn} (nil))

(insn 30 14 19 2 arch/arm/kernel/hw_breakpoint.c:656 (set (zero_extract:SI (reg:SI 3 r3 [147])
            (const_int 2 [0x2])
            (const_int 5 [0x5]))
        (reg:SI 12 ip [149])) 77 {insv_t2} (nil))

(insn 19 30 55 2 arch/arm/kernel/hw_breakpoint.c:654 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                (const_int 210 [0xd2])) [0 S2 A16])
        (reg:HI 2 r2 [139])) 176 {*movhi_insn_arch4} (nil))

(insn 55 19 56 2 arch/arm/kernel/hw_breakpoint.c:657 (set (reg:SI 3 r3 [152])
        (not:SI (ashift:SI (reg:SI 3 r3 [147])
                (const_int 25 [0x19])))) 120 {*arm_notsi_shiftsi} (nil))

(insn 56 55 37 2 arch/arm/kernel/hw_breakpoint.c:657 (set (reg:SI 3 r3 [152])
        (not:SI (lshiftrt:SI (reg:SI 3 r3 [152])
                (const_int 25 [0x19])))) 120 {*arm_notsi_shiftsi} (nil))

(insn 37 56 40 2 arch/arm/kernel/hw_breakpoint.c:657 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                (const_int 211 [0xd3])) [0 S1 A8])
        (reg:QI 3 r3 [152])) 178 {*arm_movqi_insn} (nil))

(call_insn/j 40 37 41 2 arch/arm/kernel/hw_breakpoint.c:659 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_install_hw_breakpoint") [flags 0x3] <function_decl 0x10b14300 arch_install_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 41 40 58)

(note 58 41 0 NOTE_INSN_DELETED)


;; Function disable_single_step (disable_single_step)[0:1263]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000


Pass 1 for finding allocno costs

    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000

   Insn 13(l0): point = 0
   Insn 11(l0): point = 2
   Insn 10(l0): point = 4
   Insn 9(l0): point = 6
   Insn 12(l0): point = 8
   Insn 7(l0): point = 10
   Insn 2(l0): point = 12
 a0(r133): [3..12]
 a1(r134): [3..6]
Compressing live ranges: from 15 to 3 - 20%
Ranges after the compression:
 a0(r133): [0..2]
 a1(r134): [0..1]
+++Allocating 16 bytes for conflict table (uncompressed size 16)
;; a0(r133,l0) conflicts: a1(r134,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a1(r134,l0) conflicts: a0(r133,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14

  regions=1, blocks=3, points=3
    allocnos=2, copies=0, conflicts=2, ranges=2

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all: 0r133 1r134
    modified regnos: 133 134
    border:
    Pressure: GENERAL_REGS=4
    Reg 133 of GENERAL_REGS has 2 regs less
    Reg 134 of GENERAL_REGS has 2 regs less
      Pushing a1(r134,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 4
      Popping a1(r134,l0)  -- assign reg 3
Disposition:
    0:r133 l0     4    1:r134 l0     3
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 0, 13, dead_or_set: 133
insn=7, live_throughout: 13, 133, dead_or_set: 0, 14
insn=12, live_throughout: 13, 14, 133, dead_or_set: 0
insn=9, live_throughout: 0, 13, 14, 133, dead_or_set: 134
insn=10, live_throughout: 0, 13, 14, 133, 134, dead_or_set: 134
insn=11, live_throughout: 0, 13, 14, dead_or_set: 133, 134
insn=13, live_throughout: 13, 14, dead_or_set: 0
changing reg in insn 2
changing reg in insn 9
changing reg in insn 12
changing reg in insn 11
changing reg in insn 9
changing reg in insn 11
Spilling for insn 11.

Reloads for insn # 11
Reload 0: reload_out (QI) = (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                                                        (const_int 211 [0xd3])) [0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                                                        (const_int 211 [0xd3])) [0 S1 A8])


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


disable_single_step

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d} r3={5d,2u} r4={1d,3u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 257{244d,13u,0e} in 7{5 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 2 2 NOTE_INSN_DELETED)

(insn 2 8 7 2 arch/arm/kernel/hw_breakpoint.c:663 (set (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (nil))

(call_insn 7 2 12 2 arch/arm/kernel/hw_breakpoint.c:664 (parallel [
            (call (mem:SI (symbol_ref:SI ("arch_uninstall_hw_breakpoint") [flags 0x3] <function_decl 0x10b14380 arch_uninstall_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 12 7 9 2 arch/arm/kernel/hw_breakpoint.c:666 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:133 bp ] [133])) 167 {*arm_movsi_insn} (nil))

(insn 9 12 10 2 arch/arm/kernel/hw_breakpoint.c:665 (set (reg:QI 3 r3 [134])
        (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                (const_int 211 [0xd3])) [0 S1 A8])) 178 {*arm_movqi_insn} (nil))

(insn 10 9 11 2 arch/arm/kernel/hw_breakpoint.c:665 (set (zero_extract:SI (reg:SI 3 r3 [134])
            (const_int 1 [0x1])
            (const_int 7 [0x7]))
        (const_int 0 [0x0])) 76 {insv_zero} (nil))

(insn 11 10 13 2 arch/arm/kernel/hw_breakpoint.c:665 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 4 r4 [orig:133 bp ] [133])
                (const_int 211 [0xd3])) [0 S1 A8])
        (reg:QI 3 r3 [134])) 178 {*arm_movqi_insn} (nil))

(call_insn/j 13 11 14 2 arch/arm/kernel/hw_breakpoint.c:666 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_install_hw_breakpoint") [flags 0x3] <function_decl 0x10b14300 arch_install_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 22)

(note 22 14 0 NOTE_INSN_DELETED)


;; Function arch_hw_breakpoint_init (arch_hw_breakpoint_init)[0:1270] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 219.
verify found no changes in insn with uid = 219.
deleting insn with uid = 179.
scanning new insn with uid = 220.
verify found no changes in insn with uid = 220.
deleting insn with uid = 170.
scanning new insn with uid = 221.
verify found no changes in insn with uid = 221.
deleting insn with uid = 159.
scanning new insn with uid = 222.
verify found no changes in insn with uid = 222.
deleting insn with uid = 115.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 22 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 32 (  1.9)

Pass 0 for finding allocno costs

    a18 (r216,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r213,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r210,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r205,l0) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r204,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r202,l0) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r199,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r197,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r194,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r192,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r189,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r188,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r187,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r184,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r183,l0) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r175,l0) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r168,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r149,l0) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a14(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a19(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a20(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a22(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a23(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a26(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a27(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r216: preferred GENERAL_REGS, alternative NO_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS
    r210: preferred GENERAL_REGS, alternative NO_REGS
    r205: preferred GENERAL_REGS, alternative NO_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r187: preferred GENERAL_REGS, alternative NO_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r213,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a1(r210,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r205,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r199,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a7(r202,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r194,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a9(r197,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a10(r188,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r192,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a12(r189,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a13(r183,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:100000
  a14(r187,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r184,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r175,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r216,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a19(r177,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a20(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a22(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a23(r168,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a24(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a26(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a27(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a28(r149,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a29(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 201(l0): point = 0
   Insn 195(l0): point = 2
   Insn 188(l0): point = 5
   Insn 187(l0): point = 7
   Insn 185(l0): point = 9
   Insn 180(l0): point = 11
   Insn 219(l0): point = 13
   Insn 184(l0): point = 15
   Insn 183(l0): point = 17
   Insn 182(l0): point = 19
   Insn 181(l0): point = 21
   Insn 176(l0): point = 23
   Insn 171(l0): point = 25
   Insn 220(l0): point = 27
   Insn 175(l0): point = 29
   Insn 174(l0): point = 31
   Insn 173(l0): point = 33
   Insn 172(l0): point = 35
   Insn 165(l0): point = 38
   Insn 161(l0): point = 40
   Insn 221(l0): point = 42
   Insn 163(l0): point = 44
   Insn 164(l0): point = 46
   Insn 156(l0): point = 49
   Insn 214(l0): point = 52
   Insn 151(l0): point = 54
   Insn 149(l0): point = 57
   Insn 148(l0): point = 59
   Insn 147(l0): point = 61
   Insn 145(l0): point = 63
   Insn 144(l0): point = 65
   Insn 143(l0): point = 67
   Insn 142(l0): point = 69
   Insn 141(l0): point = 71
   Insn 140(l0): point = 73
   Insn 137(l0): point = 75
   Insn 132(l0): point = 77
   Insn 127(l0): point = 79
   Insn 122(l0): point = 81
   Insn 117(l0): point = 83
   Insn 121(l0): point = 85
   Insn 135(l0): point = 87
   Insn 120(l0): point = 89
   Insn 130(l0): point = 91
   Insn 125(l0): point = 93
   Insn 138(l0): point = 95
   Insn 116(l0): point = 97
   Insn 222(l0): point = 99
   Insn 139(l0): point = 101
   Insn 114(l0): point = 103
   Insn 113(l0): point = 105
   Insn 112(l0): point = 107
   Insn 111(l0): point = 109
   Insn 108(l0): point = 112
   Insn 107(l0): point = 114
   Insn 106(l0): point = 116
   Insn 212(l0): point = 119
   Insn 100(l0): point = 121
   Insn 96(l0): point = 123
   Insn 99(l0): point = 125
   Insn 98(l0): point = 127
   Insn 94(l0): point = 129
   Insn 91(l0): point = 132
   Insn 206(l0): point = 134
   Insn 90(l0): point = 136
   Insn 88(l0): point = 138
   Insn 210(l0): point = 141
   Insn 80(l0): point = 143
   Insn 77(l0): point = 145
   Insn 83(l0): point = 147
   Insn 76(l0): point = 149
   Insn 75(l0): point = 151
   Insn 73(l0): point = 154
   Insn 72(l0): point = 156
   Insn 70(l0): point = 158
   Insn 69(l0): point = 160
   Insn 68(l0): point = 162
   Insn 67(l0): point = 164
   Insn 66(l0): point = 166
   Insn 61(l0): point = 169
   Insn 59(l0): point = 171
   Insn 60(l0): point = 173
   Insn 56(l0): point = 176
   Insn 55(l0): point = 178
   Insn 54(l0): point = 180
   Insn 52(l0): point = 182
   Insn 42(l0): point = 184
   Insn 49(l0): point = 186
   Insn 51(l0): point = 188
   Insn 50(l0): point = 190
   Insn 40(l0): point = 192
   Insn 39(l0): point = 194
   Insn 38(l0): point = 196
   Insn 35(l0): point = 198
   Insn 34(l0): point = 200
   Insn 31(l0): point = 202
   Insn 208(l0): point = 205
   Insn 26(l0): point = 207
   Insn 24(l0): point = 209
   Insn 25(l0): point = 211
   Insn 19(l0): point = 214
   Insn 18(l0): point = 216
   Insn 17(l0): point = 218
   Insn 16(l0): point = 220
   Insn 13(l0): point = 222
   Insn 12(l0): point = 224
   Insn 10(l0): point = 226
   Insn 7(l0): point = 228
   Insn 6(l0): point = 230
   Insn 5(l0): point = 232
 a0(r213): [12..13]
 a1(r210): [26..27]
 a2(r205): [41..42]
 a3(r136): [52..54] [41..49]
 a4(r135): [60..75]
 a5(r204): [60..61]
 a6(r199): [76..77]
 a7(r202): [76..87]
 a8(r194): [78..79]
 a9(r197): [78..91]
 a10(r188): [80..81]
 a11(r192): [80..93]
 a12(r189): [82..85]
 a13(r183): [84..103]
 a14(r187): [86..89]
 a15(r184): [98..99]
 a16(r175): [132..136] [102..118]
 a17(r181): [115..116]
 a18(r216): [124..134] [117..118]
 a19(r177): [124..129]
 a20(r138): [137..138]
 a21(r169): [144..151]
 a22(r170): [144..149]
 a23(r168): [157..158]
 a24(r133): [174..180]
 a25(r146): [212..226] [181..204]
 a26(r139): [185..192]
 a27(r150): [217..218]
 a28(r149): [219..220]
 a29(r144): [231..232]
Compressing live ranges: from 235 to 60 - 25%
Ranges after the compression:
 a0(r213): [0..1]
 a1(r210): [2..3]
 a2(r205): [4..5]
 a3(r136): [7..8] [4..6]
 a4(r135): [9..11]
 a5(r204): [9..10]
 a6(r199): [12..13]
 a7(r202): [12..22]
 a8(r194): [14..15]
 a9(r197): [14..24]
 a10(r188): [16..17]
 a11(r192): [16..25]
 a12(r189): [18..20]
 a13(r183): [19..29]
 a14(r187): [21..23]
 a15(r184): [26..27]
 a16(r175): [36..38] [28..33]
 a17(r181): [30..31]
 a18(r216): [34..37] [32..33]
 a19(r177): [34..35]
 a20(r138): [39..40]
 a21(r169): [41..43]
 a22(r170): [41..42]
 a23(r168): [44..45]
 a24(r133): [46..47]
 a25(r146): [52..57] [48..51]
 a26(r139): [49..50]
 a27(r150): [53..54]
 a28(r149): [55..56]
 a29(r144): [58..59]
+++Allocating 192 bytes for conflict table (uncompressed size 240)
;; a0(r213,l0) conflicts:
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a1(r210,l0) conflicts:
;;     total conflict hard regs: 0-3
;;     conflict hard regs: 0-3
;; a2(r205,l0) conflicts: a3(r136,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a3(r136,l0) conflicts: a2(r205,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a4(r135,l0) conflicts: a5(r204,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r204,l0) conflicts: a4(r135,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a6(r199,l0) conflicts: a7(r202,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a7(r202,l0) conflicts: a6(r199,l0) a8(r194,l0) a9(r197,l0) a10(r188,l0) a11(r192,l0) a12(r189,l0) a13(r183,l0) a14(r187,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a8(r194,l0) conflicts: a7(r202,l0) a9(r197,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a9(r197,l0) conflicts: a7(r202,l0) a8(r194,l0) a10(r188,l0) a11(r192,l0) a12(r189,l0) a13(r183,l0) a14(r187,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a10(r188,l0) conflicts: a7(r202,l0) a9(r197,l0) a11(r192,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a11(r192,l0) conflicts: a7(r202,l0) a9(r197,l0) a10(r188,l0) a12(r189,l0) a13(r183,l0) a14(r187,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a12(r189,l0) conflicts: a7(r202,l0) a9(r197,l0) a11(r192,l0) a13(r183,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a13(r183,l0) conflicts: a7(r202,l0) a9(r197,l0) a11(r192,l0) a12(r189,l0) a14(r187,l0) a15(r184,l0) a16(r175,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a14(r187,l0) conflicts: a7(r202,l0) a9(r197,l0) a11(r192,l0) a13(r183,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a15(r184,l0) conflicts: a13(r183,l0)
;;     total conflict hard regs: 1
;;     conflict hard regs: 1
;; a16(r175,l0) conflicts: a13(r183,l0) a17(r181,l0) a18(r216,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a17(r181,l0) conflicts: a16(r175,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a18(r216,l0) conflicts: a16(r175,l0) a19(r177,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a19(r177,l0) conflicts: a18(r216,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a20(r138,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a21(r169,l0) conflicts: a22(r170,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a22(r170,l0) conflicts: a21(r169,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a23(r168,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a24(r133,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:
;; a25(r146,l0) conflicts: a26(r139,l0) a27(r150,l0) a28(r149,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a26(r139,l0) conflicts: a25(r146,l0)
;;     total conflict hard regs: 0-2
;;     conflict hard regs: 0-2
;; a27(r150,l0) conflicts: a25(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a28(r149,l0) conflicts: a25(r146,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a29(r144,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a12(r189)<->a14(r187)@125:shuffle
  cp1:a10(r188)<->a12(r189)@125:shuffle
  cp2:a8(r194)<->a10(r188)@125:shuffle
  cp3:a8(r194)<->a11(r192)@125:shuffle
  cp4:a6(r199)<->a8(r194)@125:shuffle
  cp5:a6(r199)<->a9(r197)@125:shuffle
  cp6:a4(r135)<->a6(r199)@125:shuffle
  cp7:a4(r135)<->a7(r202)@125:shuffle
  cp8:a16(r175)<->a20(r138)@125:shuffle
  cp9:a27(r150)<->a28(r149)@125:shuffle
  regions=1, blocks=17, points=60
    allocnos=30, copies=10, conflicts=13, ranges=34

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r213 1r210 2r205 3r136 4r135 5r204 6r199 7r202 8r194 9r197 10r188 11r192 12r189 13r183 14r187 15r184 16r175 17r181 18r216 19r177 20r138 21r169 22r170 23r168 24r133 25r146 26r139 27r150 28r149 29r144
    modified regnos: 133 135 136 138 139 144 146 149 150 168 169 170 175 177 181 183 184 187 188 189 192 194 197 199 202 204 205 210 213 216
    border:
    Pressure: GENERAL_REGS=7
    Reg 213 of GENERAL_REGS has 4 regs less
    Reg 210 of GENERAL_REGS has 4 regs less
    Reg 205 of GENERAL_REGS has 2 regs less
    Reg 136 of GENERAL_REGS has 2 regs less
    Reg 135 of GENERAL_REGS has 3 regs less
    Reg 199 of GENERAL_REGS has 2 regs less
    Reg 202 of GENERAL_REGS has 2 regs less
    Reg 194 of GENERAL_REGS has 2 regs less
    Reg 197 of GENERAL_REGS has 2 regs less
    Reg 188 of GENERAL_REGS has 2 regs less
    Reg 192 of GENERAL_REGS has 2 regs less
    Reg 189 of GENERAL_REGS has 2 regs less
    Reg 183 of GENERAL_REGS has 2 regs less
    Reg 187 of GENERAL_REGS has 2 regs less
    Reg 184 of GENERAL_REGS has 1 regs less
    Reg 175 of GENERAL_REGS has 3 regs less
    Reg 216 of GENERAL_REGS has 2 regs less
    Reg 177 of GENERAL_REGS has 2 regs less
    Reg 169 of GENERAL_REGS has 1 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
    Reg 168 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 4 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
      Pushing a29(r144,l0)
      Pushing a28(r149,l0)
      Pushing a27(r150,l0)
      Pushing a17(r181,l0)
      Pushing a5(r204,l0)
      Pushing a24(r133,l0)
      Pushing a20(r138,l0)
      Pushing a23(r168,l0)
      Pushing a15(r184,l0)
      Pushing a22(r170,l0)
      Pushing a21(r169,l0)
      Pushing a14(r187,l0)
      Pushing a12(r189,l0)
      Pushing a11(r192,l0)
      Pushing a10(r188,l0)
      Pushing a9(r197,l0)
      Pushing a8(r194,l0)
      Pushing a7(r202,l0)
      Pushing a6(r199,l0)
      Pushing a2(r205,l0)
      Pushing a19(r177,l0)
      Pushing a18(r216,l0)
      Pushing a3(r136,l0)
      Pushing a13(r183,l0)
      Pushing a16(r175,l0)
      Pushing a26(r139,l0)
      Pushing a4(r135,l0)
      Pushing a1(r210,l0)
      Pushing a0(r213,l0)
      Pushing a25(r146,l0)
      Popping a25(r146,l0)  -- assign reg 4
      Popping a0(r213,l0)  -- assign reg 12
      Popping a1(r210,l0)  -- assign reg 12
      Popping a4(r135,l0)  -- assign reg 4
      Popping a26(r139,l0)  -- assign reg 3
      Popping a16(r175,l0)  -- assign reg 4
      Popping a13(r183,l0)  -- assign reg 3
      Popping a3(r136,l0)  -- assign reg 3
      Popping a18(r216,l0)  -- assign reg 3
      Popping a19(r177,l0)  -- assign reg 2
      Popping a2(r205,l0)  -- assign reg 2
      Popping a6(r199,l0)  -- assign reg 4
      Popping a7(r202,l0)  -- assign reg 2
      Popping a8(r194,l0)  -- assign reg 4
      Popping a9(r197,l0)  -- assign reg 12
      Popping a10(r188,l0)  -- assign reg 4
      Popping a11(r192,l0)  -- assign reg 14
      Popping a12(r189,l0)  -- assign reg 4
      Popping a14(r187,l0)  -- assign reg 4
      Popping a21(r169,l0)  -- assign reg 3
      Popping a22(r170,l0)  -- assign reg 2
      Popping a15(r184,l0)  -- assign reg 2
      Popping a23(r168,l0)  -- assign reg 3
      Popping a20(r138,l0)  -- assign reg 4
      Popping a24(r133,l0)  -- assign reg 1
      Popping a5(r204,l0)  -- assign reg 0
      Popping a17(r181,l0)  -- assign reg 3
      Popping a27(r150,l0)  -- assign reg 0
      Popping a28(r149,l0)  -- assign reg 0
      Popping a29(r144,l0)  -- assign reg 3
Disposition:
   24:r133 l0     1    4:r135 l0     4    3:r136 l0     3   20:r138 l0     4
   26:r139 l0     3   29:r144 l0     3   25:r146 l0     4   28:r149 l0     0
   27:r150 l0     0   23:r168 l0     3   21:r169 l0     3   22:r170 l0     2
   16:r175 l0     4   19:r177 l0     2   17:r181 l0     3   13:r183 l0     3
   15:r184 l0     2   14:r187 l0     4   10:r188 l0     4   12:r189 l0     4
   11:r192 l0    14    8:r194 l0     4    9:r197 l0    12    6:r199 l0     4
    7:r202 l0     2    5:r204 l0     0    2:r205 l0     2    1:r210 l0    12
    0:r213 l0    12   18:r216 l0     3
New iteration of spill/restore move
+++Costs: overall -4500, reg -4500, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=5, live_throughout: 13, dead_or_set: 144
insn=6, live_throughout: 13, dead_or_set: 144
insn=7, live_throughout: 13, dead_or_set: 0, 14
insn=10, live_throughout: 0, 13, dead_or_set: 146
insn=12, live_throughout: 13, 146, dead_or_set: 0
insn=13, live_throughout: 13, 146, dead_or_set: 0, 14
insn=16, live_throughout: 13, 146, dead_or_set: 0, 149
insn=17, live_throughout: 13, 146, dead_or_set: 149, 150
insn=18, live_throughout: 13, 146, dead_or_set: 150
insn=19, live_throughout: 13, 146, dead_or_set: 
insn=25, live_throughout: 13, dead_or_set: 1, 146
insn=24, live_throughout: 1, 13, dead_or_set: 0
insn=26, live_throughout: 13, dead_or_set: 0, 1, 14
insn=208, live_throughout: 13, 14, dead_or_set: 
insn=29, live_throughout: 13, 146, dead_or_set: 
insn=31, live_throughout: 13, 146, dead_or_set: 0, 14
insn=34, live_throughout: 13, 146, dead_or_set: 0
insn=35, live_throughout: 13, 146, dead_or_set: 0, 14
insn=38, live_throughout: 13, 146, dead_or_set: 0
insn=39, live_throughout: 13, 146, dead_or_set: 0, 14
insn=40, live_throughout: 13, 146, dead_or_set: 0, 139
insn=50, live_throughout: 13, 139, 146, dead_or_set: 1
insn=51, live_throughout: 1, 13, 139, 146, dead_or_set: 2
insn=49, live_throughout: 1, 2, 13, 139, 146, dead_or_set: 0
insn=42, live_throughout: 0, 1, 2, 13, 146, dead_or_set: 139
insn=52, live_throughout: 13, 146, dead_or_set: 0, 1, 2, 14
insn=54, live_throughout: 13, dead_or_set: 133, 146
insn=55, live_throughout: 13, 133, dead_or_set: 
insn=56, live_throughout: 13, 133, dead_or_set: 
insn=60, live_throughout: 13, dead_or_set: 1, 133
insn=59, live_throughout: 1, 13, dead_or_set: 0
insn=61, live_throughout: 13, dead_or_set: 0, 1, 14
insn=62, live_throughout: 13, dead_or_set: 
insn=66, live_throughout: 13, dead_or_set: 0
insn=67, live_throughout: 0, 13, dead_or_set: 1
insn=68, live_throughout: 0, 1, 13, dead_or_set: 2
insn=69, live_throughout: 13, dead_or_set: 0, 1, 2, 14
insn=70, live_throughout: 13, 14, dead_or_set: 168
insn=72, live_throughout: 13, 14, dead_or_set: 168
insn=73, live_throughout: 13, 14, dead_or_set: 
insn=75, live_throughout: 13, 14, dead_or_set: 169
insn=76, live_throughout: 13, 14, 169, dead_or_set: 170
insn=83, live_throughout: 13, 14, 169, 170, dead_or_set: 
insn=77, live_throughout: 13, 14, 169, 170, dead_or_set: 
insn=80, live_throughout: 13, 14, dead_or_set: 169, 170
insn=210, live_throughout: 13, 14, dead_or_set: 
insn=86, live_throughout: 13, dead_or_set: 
insn=88, live_throughout: 13, dead_or_set: 138
insn=90, live_throughout: 13, dead_or_set: 138, 175
insn=206, live_throughout: 13, 24, 175, dead_or_set: 216
insn=91, live_throughout: 13, 175, 216, dead_or_set: 
insn=94, live_throughout: 13, 216, dead_or_set: 177
insn=98, live_throughout: 13, 177, 216, dead_or_set: 0
insn=99, live_throughout: 0, 13, 177, 216, dead_or_set: 1
insn=96, live_throughout: 0, 1, 13, dead_or_set: 177, 216
insn=100, live_throughout: 13, dead_or_set: 0, 1, 14
insn=212, live_throughout: 13, dead_or_set: 
insn=103, live_throughout: 13, 175, 216, dead_or_set: 
insn=106, live_throughout: 13, 175, dead_or_set: 181, 216
insn=107, live_throughout: 13, 175, dead_or_set: 181
insn=108, live_throughout: 13, 175, dead_or_set: 
insn=111, live_throughout: 13, 175, dead_or_set: 0
insn=112, live_throughout: 0, 13, 175, dead_or_set: 1
insn=113, live_throughout: 13, 175, dead_or_set: 0, 1, 14
insn=114, live_throughout: 13, 175, dead_or_set: 183
insn=139, live_throughout: 13, 183, dead_or_set: 1, 175
insn=222, live_throughout: 1, 13, 183, dead_or_set: 184
insn=116, live_throughout: 1, 13, 183, dead_or_set: 183, 184
insn=138, live_throughout: 1, 13, 183, dead_or_set: 0
insn=125, live_throughout: 0, 1, 13, 183, dead_or_set: 192
insn=130, live_throughout: 0, 1, 13, 183, 192, dead_or_set: 197
insn=120, live_throughout: 0, 1, 13, 183, 192, 197, dead_or_set: 187
insn=135, live_throughout: 0, 1, 13, 183, 187, 192, 197, dead_or_set: 202
insn=121, live_throughout: 0, 1, 13, 183, 192, 197, 202, dead_or_set: 187, 189
insn=117, live_throughout: 0, 1, 13, 189, 192, 197, 202, dead_or_set: 183
insn=122, live_throughout: 0, 1, 13, 192, 197, 202, dead_or_set: 188, 189
insn=127, live_throughout: 0, 1, 13, 197, 202, dead_or_set: 188, 192, 194
insn=132, live_throughout: 0, 1, 13, 202, dead_or_set: 194, 197, 199
insn=137, live_throughout: 0, 1, 13, dead_or_set: 135, 199, 202
insn=140, live_throughout: 13, 135, dead_or_set: 0, 1, 14
insn=141, live_throughout: 13, 135, dead_or_set: 0
insn=142, live_throughout: 0, 13, 135, dead_or_set: 1
insn=143, live_throughout: 13, 135, dead_or_set: 0, 1, 14
insn=144, live_throughout: 13, 135, dead_or_set: 0
insn=145, live_throughout: 13, 135, dead_or_set: 0, 14
insn=147, live_throughout: 13, 135, dead_or_set: 0, 204
insn=148, live_throughout: 13, dead_or_set: 135, 204
insn=149, live_throughout: 13, dead_or_set: 
insn=151, live_throughout: 13, dead_or_set: 136
insn=214, live_throughout: 13, 136, dead_or_set: 
insn=154, live_throughout: 13, dead_or_set: 
insn=156, live_throughout: 13, dead_or_set: 136
insn=157, live_throughout: 13, 136, dead_or_set: 
insn=164, live_throughout: 13, 136, dead_or_set: 1
insn=163, live_throughout: 1, 13, 136, dead_or_set: 0
insn=221, live_throughout: 0, 1, 13, 136, dead_or_set: 205
insn=161, live_throughout: 0, 1, 13, dead_or_set: 136, 205
insn=165, live_throughout: 13, dead_or_set: 0, 1, 14
insn=166, live_throughout: 13, dead_or_set: 
insn=172, live_throughout: 13, dead_or_set: 0
insn=173, live_throughout: 0, 13, dead_or_set: 1
insn=174, live_throughout: 0, 1, 13, dead_or_set: 2
insn=175, live_throughout: 0, 1, 2, 13, dead_or_set: 3
insn=220, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 210
insn=171, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 210
insn=176, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=181, live_throughout: 13, dead_or_set: 0
insn=182, live_throughout: 0, 13, dead_or_set: 1
insn=183, live_throughout: 0, 1, 13, dead_or_set: 2
insn=184, live_throughout: 0, 1, 2, 13, dead_or_set: 3
insn=219, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 213
insn=180, live_throughout: 0, 1, 2, 3, 13, dead_or_set: 213
insn=185, live_throughout: 13, dead_or_set: 0, 1, 2, 3, 14
insn=187, live_throughout: 13, dead_or_set: 0
insn=188, live_throughout: 13, dead_or_set: 0, 14
insn=189, live_throughout: 13, 14, dead_or_set: 
insn=195, live_throughout: 13, 14, dead_or_set: 0
insn=201, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 139: (insn_list:REG_DEP_TRUE 42 (nil))
init_insns for 144: (insn_list:REG_DEP_TRUE 5 (nil))
init_insns for 146: (insn_list:REG_DEP_TRUE 10 (nil))
init_insns for 168: (insn_list:REG_DEP_TRUE 70 (nil))
init_insns for 169: (insn_list:REG_DEP_TRUE 75 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 76 (nil))
init_insns for 177: (insn_list:REG_DEP_TRUE 94 (nil))
init_insns for 184: (insn_list:REG_DEP_TRUE 222 (nil))
init_insns for 205: (insn_list:REG_DEP_TRUE 221 (nil))
init_insns for 210: (insn_list:REG_DEP_TRUE 220 (nil))
init_insns for 213: (insn_list:REG_DEP_TRUE 219 (nil))
init_insns for 216: (insn_list:REG_DEP_TRUE 206 (nil))
changing reg in insn 54
changing reg in insn 60
changing reg in insn 55
changing reg in insn 137
changing reg in insn 147
changing reg in insn 148
changing reg in insn 142
changing reg in insn 156
changing reg in insn 151
changing reg in insn 164
changing reg in insn 88
changing reg in insn 90
changing reg in insn 90
changing reg in insn 40
changing reg in insn 42
changing reg in insn 51
changing reg in insn 5
changing reg in insn 6
changing reg in insn 10
changing reg in insn 50
changing reg in insn 50
changing reg in insn 38
changing reg in insn 34
changing reg in insn 25
changing reg in insn 12
changing reg in insn 54
changing reg in insn 42
changing reg in insn 40
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 70
changing reg in insn 72
changing reg in insn 75
changing reg in insn 83
changing reg in insn 80
changing reg in insn 77
changing reg in insn 76
changing reg in insn 83
changing reg in insn 80
changing reg in insn 77
changing reg in insn 90
changing reg in insn 139
changing reg in insn 94
changing reg in insn 99
changing reg in insn 106
changing reg in insn 107
changing reg in insn 116
changing reg in insn 114
changing reg in insn 135
changing reg in insn 130
changing reg in insn 125
changing reg in insn 120
changing reg in insn 117
changing reg in insn 116
changing reg in insn 222
changing reg in insn 116
changing reg in insn 120
changing reg in insn 121
changing reg in insn 122
changing reg in insn 122
changing reg in insn 127
changing reg in insn 121
changing reg in insn 122
changing reg in insn 125
changing reg in insn 127
changing reg in insn 127
changing reg in insn 132
changing reg in insn 130
changing reg in insn 132
changing reg in insn 132
changing reg in insn 137
changing reg in insn 135
changing reg in insn 137
changing reg in insn 147
changing reg in insn 148
changing reg in insn 221
changing reg in insn 161
changing reg in insn 220
changing reg in insn 171
changing reg in insn 219
changing reg in insn 180
changing reg in insn 206
changing reg in insn 106
changing reg in insn 96
Spilling for insn 6.
Spilling for insn 12.
Spilling for insn 34.
Spilling for insn 38.
Spilling for insn 50.
Using reg 2 for reload 0
Spilling for insn 42.
Spilling for insn 83.
Spilling for insn 77.
Spilling for insn 80.
Spilling for insn 96.
Spilling for insn 117.
Spilling for insn 161.
Spilling for insn 171.
Spilling for insn 180.

Reloads for insn # 6
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 cpumask.bits+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 12 [0xc])) [0 cpumask.bits+0 S4 A32])

Reloads for insn # 12
Reload 0: reload_out (QI) = (mem/c/i:QI (reg/f:SI 4 r4 [146]) [0 debug_arch+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (reg/f:SI 4 r4 [146]) [0 debug_arch+0 S1 A8])

Reloads for insn # 34
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                                                        (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                                                        (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])

Reloads for insn # 38
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                                                        (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                                                        (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])

Reloads for insn # 50
Reload 0: reload_out (SI) = (scratch:SI)
	GENERAL_REGS, RELOAD_FOR_OUTPUT (opnum = 4)
	reload_out_reg: (scratch:SI)
	reload_reg_rtx: (reg:SI 2 r2)

Reloads for insn # 42
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                                                        (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                                                        (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])

Reloads for insn # 83
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [169])
                                                        (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [169])
                                                        (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])

Reloads for insn # 77
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [169])
                                                        (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [169])
                                                        (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])

Reloads for insn # 80
Reload 0: reload_out (SI) = (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [169])
                                                        (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [169])
                                                        (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])

Reloads for insn # 96
Reload 0: reload_out (QI) = (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [216])
                                                        (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [216])
                                                        (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8])

Reloads for insn # 117
Reload 0: reload_out (SI) = (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0+0 S1 A64])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                                                        (const_int 8 [0x8])) [0+0 S1 A64])

Reloads for insn # 161
Reload 0: reload_out (QI) = (mem/c/i:QI (plus:SI (reg/f:SI 2 r2 [205])
                                                        (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/c/i:QI (plus:SI (reg/f:SI 2 r2 [205])
                                                        (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8])

Reloads for insn # 171
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])

Reloads for insn # 180
Reload 0: reload_out (SI) = (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
deleting insn with uid = 60.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 52.
verify found no changes in insn with uid = 61.
verify found no changes in insn with uid = 69.
verify found no changes in insn with uid = 100.
verify found no changes in insn with uid = 113.
verify found no changes in insn with uid = 140.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 145.
verify found no changes in insn with uid = 165.
verify found no changes in insn with uid = 176.
verify found no changes in insn with uid = 185.
verify found no changes in insn with uid = 188.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 22 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 32 (  1.9)


arch_hw_breakpoint_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={36d,24u} r1={30d,12u} r2={29d,12u} r3={31d,20u} r4={9d,19u,2d} r12={22d,3u} r13={1d,42u,1d} r14={20d,2u} r15={18d} r16={18d} r17={18d} r18={18d} r19={18d} r20={18d} r21={18d} r22={18d} r23={18d} r24={24d,6u} r27={18d} r28={18d} r29={18d} r30={18d} r31={18d} r32={18d} r33={18d} r34={18d} r35={18d} r36={18d} r37={18d} r38={18d} r39={18d} r40={18d} r41={18d} r42={18d} r43={18d} r44={18d} r45={18d} r46={18d} r47={18d} r48={18d} r49={18d} r50={18d} r51={18d} r52={18d} r53={18d} r54={18d} r55={18d} r56={18d} r57={18d} r58={18d} r59={18d} r60={18d} r61={18d} r62={18d} r63={18d} r64={18d} r65={18d} r66={18d} r67={18d} r68={18d} r69={18d} r70={18d} r71={18d} r72={18d} r73={18d} r74={18d} r75={18d} r76={18d} r77={18d} r78={18d} r79={18d} r80={18d} r81={18d} r82={18d} r83={18d} r84={18d} r85={18d} r86={18d} r87={18d} r88={18d} r89={18d} r90={18d} r91={18d} r92={18d} r93={18d} r94={18d} r95={18d} r96={18d} r97={18d} r98={18d} r99={18d} r100={18d} r101={18d} r102={18d} r103={18d} r104={18d} r105={18d} r106={18d} r107={18d} r108={18d} r109={18d} r110={18d} r111={18d} r112={18d} r113={18d} r114={18d} r115={18d} r116={18d} r117={18d} r118={18d} r119={18d} r120={18d} r121={18d} r122={18d} r123={18d} r124={18d} r125={18d} r126={18d} r127={18d} 
;;    total ref usage 2325{2182d,140u,3e} in 109{91 regular + 18 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 2 14 2 NOTE_INSN_DELETED)

(note 14 8 5 2 NOTE_INSN_DELETED)

(insn 5 14 6 2 arch/arm/kernel/hw_breakpoint.c:908 (set (reg:SI 3 r3 [144])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/hw_breakpoint.c:908 (set (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 cpumask.bits+0 S4 A32])
        (reg:SI 3 r3 [144])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 7 6 10 2 arch/arm/kernel/hw_breakpoint.c:910 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_debug_arch") [flags 0x3] <function_decl 0x113d8480 get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 10 7 12 2 arch/arm/kernel/hw_breakpoint.c:910 (set (reg/f:SI 4 r4 [146])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 12 10 13 2 arch/arm/kernel/hw_breakpoint.c:910 (set (mem/c/i:QI (reg/f:SI 4 r4 [146]) [0 debug_arch+0 S1 A8])
        (reg:QI 0 r0)) 178 {*arm_movqi_insn} (nil))

(call_insn 13 12 16 2 arch/arm/kernel/hw_breakpoint.c:156 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_debug_arch") [flags 0x3] <function_decl 0x113d8480 get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 16 13 17 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:SI 0 r0 [149])
        (plus:SI (reg:SI 0 r0)
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (nil))

(insn 17 16 18 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:SI 0 r0 [150])
        (zero_extend:SI (reg:QI 0 r0 [149]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 18 17 19 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [150])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 2 arch/arm/kernel/hw_breakpoint.c:157 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6000 [0x1770])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  3 [40.0%]  (fallthru)
;; Succ edge  4 [60.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [40.0%]  (fallthru)
(note 20 19 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 23 20 25 3 NOTE_INSN_DELETED)

(insn 25 23 24 3 arch/arm/kernel/hw_breakpoint.c:913 (set (reg:SI 1 r1)
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 4 r4 [146]) [0 debug_arch+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 24 25 26 3 arch/arm/kernel/hw_breakpoint.c:913 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x113a5360>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x113a5360>)
        (nil)))

(call_insn 26 24 208 3 arch/arm/kernel/hw_breakpoint.c:913 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 208 26 209 3 arch/arm/kernel/hw_breakpoint.c:914 (set (pc)
        (label_ref 189)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 16)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 209 208 29)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 2 [r2] 14 [lr]

;; Pred edge  2 [60.0%] 
(code_label 29 209 30 4 313 "" [1 uses])

(note 30 29 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 32 30 36 4 NOTE_INSN_DELETED)

(note 36 32 46 4 NOTE_INSN_DELETED)

(note 46 36 47 4 NOTE_INSN_DELETED)

(note 47 46 48 4 NOTE_INSN_DELETED)

(note 48 47 31 4 NOTE_INSN_DELETED)

(call_insn 31 48 34 4 arch/arm/kernel/hw_breakpoint.c:918 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_brps") [flags 0x3] <function_decl 0x113d8b80 get_num_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 34 31 35 4 arch/arm/kernel/hw_breakpoint.c:918 (set (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(call_insn 35 34 38 4 arch/arm/kernel/hw_breakpoint.c:919 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_reserved_brps") [flags 0x3] <function_decl 0x113d8a80 get_num_reserved_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 38 35 39 4 arch/arm/kernel/hw_breakpoint.c:919 (set (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(call_insn 39 38 40 4 arch/arm/kernel/hw_breakpoint.c:920 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_wrps") [flags 0x3] <function_decl 0x113d8980 get_num_wrps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 40 39 50 4 arch/arm/kernel/hw_breakpoint.c:920 (set (reg:SI 3 r3 [orig:139 core_num_wrps.358 ] [139])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])
        (nil)))

(insn 50 40 51 4 arch/arm/kernel/hw_breakpoint.c:922 (parallel [
            (set (reg:SI 1 r1)
                (plus:SI (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                            (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])
                    (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                            (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])))
            (clobber (reg:SI 2 r2))
        ]) 321 {*arith_adjacentmem} (nil))

(insn 51 50 49 4 arch/arm/kernel/hw_breakpoint.c:922 (set (reg:SI 2 r2)
        (reg:SI 3 r3 [orig:139 core_num_wrps.358 ] [139])) 167 {*arm_movsi_insn} (nil))

(insn 49 51 42 4 arch/arm/kernel/hw_breakpoint.c:922 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x113a5540>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x113a5540>)
        (nil)))

(insn 42 49 52 4 arch/arm/kernel/hw_breakpoint.c:920 (set (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])
        (reg:SI 3 r3 [orig:139 core_num_wrps.358 ] [139])) 167 {*arm_movsi_insn} (nil))

(call_insn 52 42 54 4 arch/arm/kernel/hw_breakpoint.c:922 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 54 52 55 4 arch/arm/kernel/hw_breakpoint.c:925 (set (reg:SI 1 r1 [orig:133 core_num_reserved_brps.986 ] [133])
        (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [146])
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 core_num_reserved_brps+0 S4 A32])
        (nil)))

(insn 55 54 56 4 arch/arm/kernel/hw_breakpoint.c:925 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 1 r1 [orig:133 core_num_reserved_brps.986 ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 57 4 arch/arm/kernel/hw_breakpoint.c:925 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 1 [r1] 13 [sp]
;; live  out 	 1 [r1] 13 [sp]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 57 56 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 59 57 61 5 arch/arm/kernel/hw_breakpoint.c:926 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115c8620>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115c8620>)
        (nil)))

(call_insn 61 59 62 5 arch/arm/kernel/hw_breakpoint.c:926 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 62 61 63 6 315 "" [1 uses])

(note 63 62 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 65 63 71 6 NOTE_INSN_DELETED)

(note 71 65 66 6 NOTE_INSN_DELETED)

(insn 66 71 67 6 arch/arm/kernel/hw_breakpoint.c:933 (set (reg:SI 0 r0)
        (symbol_ref:SI ("reset_ctrl_regs") [flags 0x3] <function_decl 0x1141ad80 reset_ctrl_regs>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("reset_ctrl_regs") [flags 0x3] <function_decl 0x1141ad80 reset_ctrl_regs>)
        (nil)))

(insn 67 66 68 6 arch/arm/kernel/hw_breakpoint.c:933 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 12 [0xc]))) 4 {*arm_addsi3} (nil))

(insn 68 67 69 6 arch/arm/kernel/hw_breakpoint.c:933 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 69 68 70 6 arch/arm/kernel/hw_breakpoint.c:933 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10cd2480 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 70 69 72 6 include/linux/bitmap.h:263 (set (reg:SI 3 r3 [orig:168 cpumask.bits ] [168])
        (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 cpumask.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 12 [0xc])) [0 cpumask.bits+0 S4 A32])
        (nil)))

(insn 72 70 73 6 include/linux/bitmap.h:263 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:168 cpumask.bits ] [168])
                (const_int 2 [0x2])
                (const_int 0 [0x0]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 73 72 74 6 include/linux/bitmap.h:263 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 2 [r2] 3 [r3]
;; live  in  	 13 [sp]
;; live  gen 	 2 [r2] 3 [r3]
;; live  kill	

;; Pred edge  6 [39.0%]  (fallthru)
(note 74 73 75 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 7 arch/arm/kernel/hw_breakpoint.c:935 (set (reg/f:SI 3 r3 [169])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 76 75 83 7 arch/arm/kernel/hw_breakpoint.c:935 (set (reg:SI 2 r2 [170])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 83 76 77 7 arch/arm/kernel/hw_breakpoint.c:937 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [169])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])
        (reg:SI 2 r2 [170])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 77 83 80 7 arch/arm/kernel/hw_breakpoint.c:935 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [169])
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])
        (reg:SI 2 r2 [170])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 80 77 210 7 arch/arm/kernel/hw_breakpoint.c:936 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [169])
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])
        (reg:SI 2 r2 [170])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 210 80 211 7 arch/arm/kernel/hw_breakpoint.c:938 (set (pc)
        (label_ref 189)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 16)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 211 210 86)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  6 [61.0%] 
(code_label 86 211 87 8 316 "" [1 uses])

(note 87 86 89 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 89 87 88 8 NOTE_INSN_DELETED)

(insn 88 89 90 8 arch/arm/kernel/hw_breakpoint.c:941 (set (reg/v:SI 4 r4 [orig:138 dscr ] [138])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 0") ("=r") 0 []
             [] 8187158)) -1 (nil))

(insn 90 88 206 8 arch/arm/kernel/hw_breakpoint.c:942 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg/v:SI 4 r4 [orig:138 dscr ] [138])
                        (const_int 16384 [0x4000]))
                    (const_int 0 [0x0])))
            (set (reg:SI 4 r4 [175])
                (and:SI (reg/v:SI 4 r4 [orig:138 dscr ] [138])
                    (const_int 16384 [0x4000])))
        ]) 69 {*andsi3_compare0} (nil))

(insn 206 90 91 8 (set (reg/f:SI 3 r3 [216])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(jump_insn 91 206 92 8 arch/arm/kernel/hw_breakpoint.c:942 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7144 [0x1be8])
        (nil)))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  9 [28.6%]  (fallthru)
;; Succ edge  10 [71.4%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  8 [28.6%]  (fallthru)
(note 92 91 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 94 92 98 9 arch/arm/kernel/hw_breakpoint.c:943 (set (reg:SI 2 r2 [177])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 4 [0x4])
        (nil)))

(insn 98 94 99 9 arch/arm/kernel/hw_breakpoint.c:944 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114c4400>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114c4400>)
        (nil)))

(insn 99 98 96 9 arch/arm/kernel/hw_breakpoint.c:944 (set (reg:SI 1 r1)
        (reg:SI 2 r2 [177])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(insn 96 99 100 9 arch/arm/kernel/hw_breakpoint.c:943 (set (mem/c/i:QI (plus:SI (reg/f:SI 3 r3 [216])
                (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8])
        (reg:QI 2 r2 [177])) 178 {*arm_movqi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))

(call_insn 100 96 212 9 arch/arm/kernel/hw_breakpoint.c:944 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 212 100 213 9 (set (pc)
        (label_ref 166)) 242 {*arm_jump} (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 213 212 103)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 3 [r3] 4 [r4] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [71.4%] 
(code_label 103 213 104 10 317 "" [1 uses])

(note 104 103 106 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 106 104 107 10 arch/arm/kernel/hw_breakpoint.c:304 (set (reg:SI 3 r3 [orig:181 debug_arch ] [181])
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 3 r3 [216]) [0 debug_arch+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_arch+0 S1 A8]))
        (nil)))

(insn 107 106 108 10 arch/arm/kernel/hw_breakpoint.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:181 debug_arch ] [181])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 108 107 109 10 arch/arm/kernel/hw_breakpoint.c:304 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 10 -> ( 13 11)
;; lr  out 	 4 [r4] 13 [sp]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  13 [71.0%] 
;; Succ edge  11 [29.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [29.0%]  (fallthru)
(note 109 108 110 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 110 109 119 11 NOTE_INSN_DELETED)

(note 119 110 124 11 NOTE_INSN_DELETED)

(note 124 119 126 11 NOTE_INSN_DELETED)

(note 126 124 129 11 NOTE_INSN_DELETED)

(note 129 126 131 11 NOTE_INSN_DELETED)

(note 131 129 134 11 NOTE_INSN_DELETED)

(note 134 131 136 11 NOTE_INSN_DELETED)

(note 136 134 146 11 NOTE_INSN_DELETED)

(note 146 136 111 11 NOTE_INSN_DELETED)

(insn 111 146 112 11 arch/arm/kernel/hw_breakpoint.c:307 discrim 1 (set (reg:SI 0 r0)
        (plus:SI (reg/f:SI 13 sp)
            (const_int 8 [0x8]))) 4 {*arm_addsi3} (nil))

(insn 112 111 113 11 arch/arm/kernel/hw_breakpoint.c:307 discrim 1 (set (reg:SI 1 r1)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(call_insn 113 112 114 11 arch/arm/kernel/hw_breakpoint.c:307 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10be9e00 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 114 113 139 11 arch/arm/kernel/hw_breakpoint.c:308 (set (reg:SI 3 r3 [183])
        (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0+0 S1 A64])) 167 {*arm_movsi_insn} (nil))

(insn 139 114 222 11 arch/arm/kernel/hw_breakpoint.c:311 (set (reg:SI 1 r1)
        (reg:SI 4 r4 [175])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 222 139 116 11 arch/arm/kernel/hw_breakpoint.c:308 (set (reg:SI 2 r2 [184])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 116 222 138 11 arch/arm/kernel/hw_breakpoint.c:308 (set (zero_extract:SI (reg:SI 3 r3 [183])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))
        (reg:SI 2 r2 [184])) 77 {insv_t2} (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 138 116 125 11 arch/arm/kernel/hw_breakpoint.c:311 (set (reg:SI 0 r0)
        (const_int 96 [0x60])) 167 {*arm_movsi_insn} (nil))

(insn 125 138 130 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 14 lr [192])
        (zero_extract:SI (reg:SI 3 r3 [183])
            (const_int 1 [0x1])
            (const_int 9 [0x9]))) 124 {extzv_t2} (nil))

(insn 130 125 120 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 12 ip [197])
        (zero_extract:SI (reg:SI 3 r3 [183])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))) 124 {extzv_t2} (nil))

(insn 120 130 135 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 4 r4 [187])
        (lshiftrt:SI (reg:SI 3 r3 [183])
            (const_int 31 [0x1f]))) 117 {*arm_shiftsi3} (nil))

(insn 135 120 121 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 2 r2 [202])
        (zero_extract:SI (reg:SI 3 r3 [183])
            (const_int 2 [0x2])
            (const_int 29 [0x1d]))) 124 {extzv_t2} (nil))

(insn 121 135 117 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 4 r4 [189])
        (ior:SI (reg:SI 4 r4 [187])
            (const_int 8128 [0x1fc0]))) 89 {*arm_iorsi3} (nil))

(insn 117 121 122 11 arch/arm/kernel/hw_breakpoint.c:308 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 13 sp)
                (const_int 8 [0x8])) [0+0 S1 A64])
        (reg:SI 3 r3 [183])) 167 {*arm_movsi_insn} (nil))

(insn 122 117 127 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 4 r4 [188])
        (ior:SI (reg:SI 4 r4 [189])
            (const_int 32 [0x20]))) 89 {*arm_iorsi3} (expr_list:REG_EQUAL (ior:SI (reg:SI 4 r4 [187])
            (const_int 8160 [0x1fe0]))
        (nil)))

(insn 127 122 132 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 4 r4 [194])
        (ior:SI (ashift:SI (reg:SI 14 lr [192])
                (const_int 22 [0x16]))
            (reg:SI 4 r4 [188]))) 270 {*arith_shiftsi} (nil))

(insn 132 127 137 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 4 r4 [199])
        (ior:SI (ashift:SI (reg:SI 12 ip [197])
                (const_int 3 [0x3]))
            (reg:SI 4 r4 [194]))) 270 {*arith_shiftsi} (nil))

(insn 137 132 140 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg/v:SI 4 r4 [orig:135 ctrl_reg ] [135])
        (ior:SI (ashift:SI (reg:SI 2 r2 [202])
                (const_int 1 [0x1]))
            (reg:SI 4 r4 [199]))) 270 {*arith_shiftsi} (nil))

(call_insn 140 137 141 11 arch/arm/kernel/hw_breakpoint.c:311 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 141 140 142 11 arch/arm/kernel/hw_breakpoint.c:312 (set (reg:SI 0 r0)
        (const_int 112 [0x70])) 167 {*arm_movsi_insn} (nil))

(insn 142 141 143 11 arch/arm/kernel/hw_breakpoint.c:312 (set (reg:SI 1 r1)
        (reg/v:SI 4 r4 [orig:135 ctrl_reg ] [135])) 167 {*arm_movsi_insn} (nil))

(call_insn 143 142 144 11 arch/arm/kernel/hw_breakpoint.c:312 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 144 143 145 11 arch/arm/kernel/hw_breakpoint.c:313 (set (reg:SI 0 r0)
        (const_int 112 [0x70])) 167 {*arm_movsi_insn} (nil))

(call_insn 145 144 147 11 arch/arm/kernel/hw_breakpoint.c:313 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("read_wb_reg") [flags 0x3] <function_decl 0x113d8280 read_wb_reg>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 147 145 148 11 arch/arm/kernel/hw_breakpoint.c:313 (set (reg:SI 0 r0 [204])
        (and:SI (reg:SI 0 r0)
            (reg/v:SI 4 r4 [orig:135 ctrl_reg ] [135]))) 67 {*arm_andsi3_insn} (nil))

(insn 148 147 149 11 arch/arm/kernel/hw_breakpoint.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [204])
            (reg/v:SI 4 r4 [orig:135 ctrl_reg ] [135]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 149 148 150 11 arch/arm/kernel/hw_breakpoint.c:313 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
        (nil)))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  13 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  11 [28.0%]  (fallthru)
(note 150 149 151 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 214 12 arch/arm/kernel/hw_breakpoint.c:314 (set (reg/v:SI 3 r3 [orig:136 size ] [136])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 8 [0x8])
        (nil)))

(jump_insn 214 151 215 12 (set (pc)
        (label_ref 157)) 242 {*arm_jump} (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 3 [r3] 13 [sp]
;; live  out 	 3 [r3] 13 [sp]


;; Succ edge  14 [100.0%] 

(barrier 215 214 154)

;; Start of basic block ( 10 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  10 [71.0%] 
;; Pred edge  11 [72.0%] 
(code_label 154 215 155 13 319 ("out") [2 uses])

(note 155 154 156 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 156 155 157 13 arch/arm/kernel/hw_breakpoint.c:302 (set (reg/v:SI 3 r3 [orig:136 size ] [136])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 4 [0x4])
        (nil)))
;; End of basic block 13 -> ( 14)
;; lr  out 	 3 [r3] 13 [sp]
;; live  out 	 3 [r3] 13 [sp]


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 3 [r3] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 157 156 158 14 320 "" [1 uses])

(note 158 157 164 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 164 158 163 14 arch/arm/kernel/hw_breakpoint.c:949 (set (reg:SI 1 r1)
        (reg/v:SI 3 r3 [orig:136 size ] [136])) 167 {*arm_movsi_insn} (nil))

(insn 163 164 221 14 arch/arm/kernel/hw_breakpoint.c:949 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x113a55a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x113a55a0>)
        (nil)))

(insn 221 163 161 14 arch/arm/kernel/hw_breakpoint.c:948 (set (reg/f:SI 2 r2 [205])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 161 221 165 14 arch/arm/kernel/hw_breakpoint.c:948 (set (mem/c/i:QI (plus:SI (reg/f:SI 2 r2 [205])
                (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8])
        (reg:QI 3 r3 [orig:136 size ] [136])) 178 {*arm_movqi_insn} (nil))

(call_insn 165 161 166 14 arch/arm/kernel/hw_breakpoint.c:949 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 9) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	 14 [lr]

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 166 165 167 15 318 "" [1 uses])

(note 167 166 172 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 172 167 173 15 arch/arm/kernel/hw_breakpoint.c:954 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 174 15 arch/arm/kernel/hw_breakpoint.c:954 (set (reg:SI 1 r1)
        (symbol_ref:SI ("hw_breakpoint_pending") [flags 0x3] <function_decl 0x1141ac80 hw_breakpoint_pending>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("hw_breakpoint_pending") [flags 0x3] <function_decl 0x1141ac80 hw_breakpoint_pending>)
        (nil)))

(insn 174 173 175 15 arch/arm/kernel/hw_breakpoint.c:954 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 220 15 arch/arm/kernel/hw_breakpoint.c:954 (set (reg:SI 3 r3)
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196612 [0x30004])
        (nil)))

(insn 220 175 171 15 arch/arm/kernel/hw_breakpoint.c:954 (set (reg/f:SI 12 ip [210])
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x114c9d40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x114c9d40>)
        (nil)))

(insn 171 220 176 15 arch/arm/kernel/hw_breakpoint.c:954 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [210])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x114c9d40>)
        (nil)))

(call_insn 176 171 181 15 arch/arm/kernel/hw_breakpoint.c:954 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x41] <function_decl 0x512b6000 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 181 176 182 15 arch/arm/kernel/hw_breakpoint.c:956 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 182 181 183 15 arch/arm/kernel/hw_breakpoint.c:956 (set (reg:SI 1 r1)
        (symbol_ref:SI ("hw_breakpoint_pending") [flags 0x3] <function_decl 0x1141ac80 hw_breakpoint_pending>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("hw_breakpoint_pending") [flags 0x3] <function_decl 0x1141ac80 hw_breakpoint_pending>)
        (nil)))

(insn 183 182 184 15 arch/arm/kernel/hw_breakpoint.c:956 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 184 183 219 15 arch/arm/kernel/hw_breakpoint.c:956 (set (reg:SI 3 r3)
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196612 [0x30004])
        (nil)))

(insn 219 184 180 15 arch/arm/kernel/hw_breakpoint.c:956 (set (reg/f:SI 12 ip [213])
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115cd600>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115cd600>)
        (nil)))

(insn 180 219 185 15 arch/arm/kernel/hw_breakpoint.c:956 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 12 ip [213])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115cd600>)
        (nil)))

(call_insn 185 180 187 15 arch/arm/kernel/hw_breakpoint.c:956 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_ifault_code") [flags 0x41] <function_decl 0x512b6080 hook_ifault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 187 185 188 15 arch/arm/kernel/hw_breakpoint.c:960 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(call_insn 188 187 189 15 arch/arm/kernel/hw_breakpoint.c:960 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_cpu_notifier") [flags 0x41] <function_decl 0x1137ca00 register_cpu_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 15 -> ( 16)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 3 7) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 189 188 190 16 314 "" [2 uses])

(note 190 189 195 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 195 190 201 16 arch/arm/kernel/hw_breakpoint.c:962 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 201 195 218 16 arch/arm/kernel/hw_breakpoint.c:962 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 218 201 223 NOTE_INSN_DELETED)

(note 223 218 0 NOTE_INSN_DELETED)


;; Function hw_breakpoint_pending (hw_breakpoint_pending)[0:1267]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
scanning new insn with uid = 317.
verify found no changes in insn with uid = 317.
deleting insn with uid = 185.
scanning new insn with uid = 318.
verify found no changes in insn with uid = 318.
deleting insn with uid = 126.
scanning new insn with uid = 319.
verify found no changes in insn with uid = 319.
deleting insn with uid = 44.
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 58 count 95 (  2.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 58 count 103 (  2.5)

Pass 0 for finding allocno costs

    a64 (r242,l1) best GENERAL_REGS, cover GENERAL_REGS
    a28 (r242,l0) best GENERAL_REGS, cover GENERAL_REGS
    a63 (r241,l1) best GENERAL_REGS, cover GENERAL_REGS
    a31 (r241,l0) best GENERAL_REGS, cover GENERAL_REGS
    a53 (r240,l2) best GENERAL_REGS, cover GENERAL_REGS
    a21 (r240,l0) best GENERAL_REGS, cover GENERAL_REGS
    a45 (r239,l3) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r239,l0) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r235,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r234,l0) best GENERAL_REGS, cover GENERAL_REGS
    a46 (r232,l3) best GENERAL_REGS, cover GENERAL_REGS
    a48 (r230,l3) best GENERAL_REGS, cover GENERAL_REGS
    a49 (r229,l3) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r225,l0) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r224,l0) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r223,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r222,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r220,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r219,l0) best GENERAL_REGS, cover GENERAL_REGS
    a54 (r213,l2) best GENERAL_REGS, cover GENERAL_REGS
    a56 (r211,l2) best GENERAL_REGS, cover GENERAL_REGS
    a57 (r207,l2) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r204,l0) best GENERAL_REGS, cover GENERAL_REGS
    a20 (r203,l0) best GENERAL_REGS, cover GENERAL_REGS
    a23 (r201,l0) best GENERAL_REGS, cover GENERAL_REGS
    a19 (r200,l0) best GENERAL_REGS, cover GENERAL_REGS
    a65 (r197,l1) best GENERAL_REGS, cover GENERAL_REGS
    a67 (r192,l1) best GENERAL_REGS, cover GENERAL_REGS
    a68 (r190,l1) best GENERAL_REGS, cover GENERAL_REGS
    a69 (r188,l1) best GENERAL_REGS, cover GENERAL_REGS
    a33 (r181,l0) best GENERAL_REGS, cover GENERAL_REGS
    a26 (r180,l0) best GENERAL_REGS, cover GENERAL_REGS
    a30 (r179,l0) best GENERAL_REGS, cover GENERAL_REGS
    a35 (r177,l0) best GENERAL_REGS, cover GENERAL_REGS
    a29 (r176,l0) best GENERAL_REGS, cover GENERAL_REGS
    a34 (r174,l0) best GENERAL_REGS, cover GENERAL_REGS
    a38 (r172,l0) best GENERAL_REGS, cover GENERAL_REGS
    a40 (r170,l0) best GENERAL_REGS, cover GENERAL_REGS
    a41 (r169,l0) best GENERAL_REGS, cover GENERAL_REGS
    a62 (r167,l1) best GENERAL_REGS, cover GENERAL_REGS
    a44 (r167,l3) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r167,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r163,l0) best GENERAL_REGS, cover GENERAL_REGS
    a37 (r162,l0) best GENERAL_REGS, cover GENERAL_REGS
    a39 (r161,l0) best GENERAL_REGS, cover GENERAL_REGS
    a52 (r159,l2) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r159,l0) best GENERAL_REGS, cover GENERAL_REGS
    a51 (r158,l2) best GENERAL_REGS, cover GENERAL_REGS
    a22 (r158,l0) best GENERAL_REGS, cover GENERAL_REGS
    a55 (r157,l2) best GENERAL_REGS, cover GENERAL_REGS
    a18 (r156,l0) best GENERAL_REGS, cover GENERAL_REGS
    a27 (r152,l0) best GENERAL_REGS, cover GENERAL_REGS
    a66 (r151,l1) best GENERAL_REGS, cover GENERAL_REGS
    a61 (r150,l1) best GENERAL_REGS, cover GENERAL_REGS
    a50 (r150,l2) best GENERAL_REGS, cover GENERAL_REGS
    a24 (r150,l0) best GENERAL_REGS, cover GENERAL_REGS
    a60 (r147,l1) best GENERAL_REGS, cover GENERAL_REGS
    a36 (r147,l0) best GENERAL_REGS, cover GENERAL_REGS
    a59 (r146,l1) best GENERAL_REGS, cover GENERAL_REGS
    a25 (r146,l0) best GENERAL_REGS, cover GENERAL_REGS
    a11 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a47 (r143,l3) best GENERAL_REGS, cover GENERAL_REGS
    a43 (r142,l3) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a42 (r141,l3) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r141,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a58 (r133,l1) best GENERAL_REGS, cover GENERAL_REGS
    a32 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r140,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a3(r235,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r234,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r239,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a8(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a10(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r225,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r222,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r220,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a16(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a19(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r240,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r201,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a24(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a28(r242,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a29(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r241,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a32(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a33(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a35(r177,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a36(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a37(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a38(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a39(r161,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a40(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a42(r141,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a43(r142,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a44(r167,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r239,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r232,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a47(r143,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a48(r230,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a49(r229,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a50(r150,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a51(r158,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a52(r159,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a53(r240,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a54(r213,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a55(r157,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a56(r211,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a57(r207,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a58(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a59(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a60(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a61(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a62(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a63(r241,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a64(r242,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a65(r197,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a66(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a67(r192,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a68(r190,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a69(r188,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r242: preferred GENERAL_REGS, alternative NO_REGS
    r241: preferred GENERAL_REGS, alternative NO_REGS
    r240: preferred GENERAL_REGS, alternative NO_REGS
    r239: preferred GENERAL_REGS, alternative NO_REGS
    r235: preferred GENERAL_REGS, alternative NO_REGS
    r234: preferred GENERAL_REGS, alternative NO_REGS
    r232: preferred GENERAL_REGS, alternative NO_REGS
    r230: preferred GENERAL_REGS, alternative NO_REGS
    r229: preferred GENERAL_REGS, alternative NO_REGS
    r225: preferred GENERAL_REGS, alternative NO_REGS
    r224: preferred GENERAL_REGS, alternative NO_REGS
    r223: preferred GENERAL_REGS, alternative NO_REGS
    r222: preferred GENERAL_REGS, alternative NO_REGS
    r220: preferred GENERAL_REGS, alternative NO_REGS
    r219: preferred GENERAL_REGS, alternative NO_REGS
    r213: preferred GENERAL_REGS, alternative NO_REGS
    r211: preferred GENERAL_REGS, alternative NO_REGS
    r207: preferred GENERAL_REGS, alternative NO_REGS
    r204: preferred GENERAL_REGS, alternative NO_REGS
    r203: preferred GENERAL_REGS, alternative NO_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS
    r192: preferred GENERAL_REGS, alternative NO_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS
    r188: preferred GENERAL_REGS, alternative NO_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r163,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a2(r140,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:72000
  a3(r235,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a4(r234,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a5(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a6(r239,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r224,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a8(r141,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a9(r167,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a10(r223,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a11(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a12(r225,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r219,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a14(r222,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r220,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a16(r159,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a17(r204,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a18(r156,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a19(r200,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a20(r203,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a21(r240,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a22(r158,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a23(r201,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a24(r150,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a25(r146,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a26(r180,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a27(r152,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a28(r242,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a29(r176,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a30(r179,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a31(r241,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a32(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a33(r181,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a34(r174,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a35(r177,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:42000
  a36(r147,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a37(r162,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a38(r172,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a39(r161,l0) costs: LO_REGS:2000,2000 BASE_REGS:2000,2000 HI_REGS:2000,2000 GENERAL_REGS:2000,2000 MEM:62000
  a40(r170,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a41(r169,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a42(r141,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a43(r142,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a44(r167,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a45(r239,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a46(r232,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a47(r143,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a48(r230,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a49(r229,l3) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a50(r150,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a51(r158,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a52(r159,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a53(r240,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a54(r213,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a55(r157,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a56(r211,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a57(r207,l2) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a58(r133,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a59(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a60(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a61(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a62(r167,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a63(r241,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a64(r242,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a65(r197,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a66(r151,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:90000
  a67(r192,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a68(r190,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a69(r188,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 278(l0): point = 0
   Insn 272(l0): point = 2
   Insn 265(l0): point = 5
   Insn 263(l0): point = 8
   Insn 262(l0): point = 10
   Insn 260(l0): point = 12
   Insn 256(l0): point = 14
   Insn 255(l0): point = 16
   Insn 254(l0): point = 18
   Insn 253(l0): point = 20
   Insn 305(l0): point = 22
   Insn 304(l0): point = 24
   Insn 249(l0): point = 26
   Insn 246(l0): point = 29
   Insn 205(l0): point = 32
   Insn 204(l0): point = 34
   Insn 203(l0): point = 36
   Insn 300(l0): point = 39
   Insn 196(l0): point = 41
   Insn 240(l0): point = 43
   Insn 194(l0): point = 46
   Insn 190(l0): point = 48
   Insn 193(l0): point = 50
   Insn 189(l0): point = 52
   Insn 317(l0): point = 54
   Insn 183(l0): point = 56
   Insn 192(l0): point = 58
   Insn 188(l0): point = 60
   Insn 182(l0): point = 62
   Insn 308(l0): point = 64
   Insn 191(l0): point = 66
   Insn 307(l0): point = 68
   Insn 178(l0): point = 71
   Insn 177(l0): point = 73
   Insn 176(l0): point = 75
   Insn 175(l0): point = 77
   Insn 298(l0): point = 80
   Insn 295(l0): point = 83
   Insn 131(l0): point = 85
   Insn 130(l0): point = 87
   Insn 318(l0): point = 89
   Insn 163(l0): point = 91
   Insn 132(l0): point = 93
   Insn 129(l0): point = 95
   Insn 124(l0): point = 97
   Insn 123(l0): point = 99
   Insn 311(l0): point = 101
   Insn 310(l0): point = 103
   Insn 291(l0): point = 106
   Insn 49(l0): point = 108
   Insn 69(l0): point = 110
   Insn 48(l0): point = 112
   Insn 319(l0): point = 114
   Insn 42(l0): point = 116
   Insn 117(l0): point = 118
   Insn 53(l0): point = 120
   Insn 51(l0): point = 122
   Insn 47(l0): point = 124
   Insn 54(l0): point = 126
   Insn 41(l0): point = 128
   Insn 50(l0): point = 130
   Insn 313(l0): point = 132
   Insn 312(l0): point = 134
   Insn 289(l0): point = 137
   Insn 36(l0): point = 139
   Insn 31(l0): point = 142
   Insn 30(l0): point = 144
   Insn 29(l0): point = 147
   Insn 28(l0): point = 149
   Insn 27(l0): point = 152
   Insn 26(l0): point = 154
   Insn 25(l0): point = 156
   Insn 23(l0): point = 158
   Insn 20(l0): point = 161
   Insn 18(l0): point = 164
   Insn 17(l0): point = 166
   Insn 15(l0): point = 168
   Insn 14(l0): point = 170
   Insn 13(l0): point = 172
   Insn 12(l0): point = 174
   Insn 11(l0): point = 176
   Insn 315(l0): point = 178
   Insn 4(l0): point = 180
   Insn 314(l0): point = 182
   Insn 243(l3): point = 185
   Insn 242(l3): point = 187
   Insn 241(l3): point = 189
   Insn 236(l3): point = 192
   Insn 233(l3): point = 195
   Insn 230(l3): point = 198
   Insn 229(l3): point = 200
   Insn 228(l3): point = 202
   Insn 226(l3): point = 205
   Insn 225(l3): point = 207
   Insn 224(l3): point = 209
   Insn 223(l3): point = 211
   Insn 220(l3): point = 213
   Insn 222(l3): point = 215
   Insn 221(l3): point = 217
   Insn 219(l3): point = 219
   Insn 302(l3): point = 222
   Insn 214(l3): point = 224
   Insn 212(l3): point = 227
   Insn 211(l3): point = 229
   Insn 210(l3): point = 231
   Insn 208(l3): point = 233
   Insn 166(l2): point = 236
   Insn 165(l2): point = 238
   Insn 164(l2): point = 240
   Insn 159(l2): point = 243
   Insn 158(l2): point = 245
   Insn 155(l2): point = 248
   Insn 154(l2): point = 250
   Insn 152(l2): point = 253
   Insn 151(l2): point = 255
   Insn 150(l2): point = 257
   Insn 148(l2): point = 260
   Insn 147(l2): point = 262
   Insn 142(l2): point = 264
   Insn 140(l2): point = 267
   Insn 139(l2): point = 269
   Insn 138(l2): point = 271
   Insn 136(l2): point = 273
   Insn 120(l1): point = 276
   Insn 119(l1): point = 278
   Insn 118(l1): point = 280
   Insn 113(l1): point = 283
   Insn 112(l1): point = 285
   Insn 109(l1): point = 288
   Insn 108(l1): point = 290
   Insn 106(l1): point = 293
   Insn 105(l1): point = 295
   Insn 100(l1): point = 297
   Insn 293(l1): point = 300
   Insn 95(l1): point = 302
   Insn 94(l1): point = 304
   Insn 93(l1): point = 306
   Insn 91(l1): point = 309
   Insn 90(l1): point = 311
   Insn 89(l1): point = 313
   Insn 88(l1): point = 315
   Insn 87(l1): point = 317
   Insn 86(l1): point = 319
   Insn 85(l1): point = 321
   Insn 83(l1): point = 324
   Insn 82(l1): point = 326
   Insn 80(l1): point = 328
   Insn 75(l1): point = 330
   Insn 74(l1): point = 332
   Insn 71(l1): point = 335
   Insn 70(l1): point = 337
   Insn 67(l1): point = 339
   Insn 66(l1): point = 341
   Insn 63(l1): point = 344
   Insn 62(l1): point = 346
   Insn 61(l1): point = 348
   Insn 58(l1): point = 350
 a0(r163): [137..139] [3..29]
 a1(r137): [11..12]
 a2(r140): [13..24]
 a3(r235): [17..18]
 a4(r234): [19..20]
 a5(r142): [39..41]
 a6(r239): [39..43]
 a7(r224): [44..66]
 a8(r141): [39..48]
 a9(r167): [142..180] [106..136] [39..79]
 a10(r223): [49..52]
 a11(r144): [49..62]
 a12(r225): [51..58]
 a13(r219): [53..54]
 a14(r222): [53..60]
 a15(r220): [61..68]
 a16(r159): [83..85]
 a17(r204): [86..87]
 a18(r156): [86..99]
 a19(r200): [88..89]
 a20(r203): [88..95]
 a21(r240): [83..91]
 a22(r158): [83..93]
 a23(r201): [96..103]
 a24(r150): [83..130]
 a25(r146): [106..108]
 a26(r180): [109..112]
 a27(r152): [109..128]
 a28(r242): [106..110]
 a29(r176): [113..114]
 a30(r179): [113..124]
 a31(r241): [106..118]
 a32(r133): [106..120]
 a33(r181): [121..122]
 a34(r174): [142..156] [121..136]
 a35(r177): [125..134]
 a36(r147): [106..126]
 a37(r162): [157..158]
 a38(r172): [167..168]
 a39(r161): [173..182]
 a40(r170): [173..174]
 a41(r169): [175..176]
 a42(r141): [185..235]
 a43(r142): [185..235]
 a44(r167): [185..235]
 a45(r239): [185..235]
 a46(r232): [188..189]
 a47(r143): [227..231] [203..221]
 a48(r230): [208..209]
 a49(r229): [214..219]
 a50(r150): [236..275]
 a51(r158): [236..275]
 a52(r159): [236..275]
 a53(r240): [236..275]
 a54(r213): [239..240]
 a55(r157): [251..271]
 a56(r211): [256..257]
 a57(r207): [263..264]
 a58(r133): [276..352]
 a59(r146): [276..352]
 a60(r147): [276..352]
 a61(r150): [276..352]
 a62(r167): [276..352]
 a63(r241): [276..352]
 a64(r242): [276..352]
 a65(r197): [279..280]
 a66(r151): [307..348] [291..299]
 a67(r192): [296..297]
 a68(r190): [312..313]
 a69(r188): [327..328]
 Rebuilding regno allocno list for 232
 Rebuilding regno allocno list for 230
 Rebuilding regno allocno list for 229
 Rebuilding regno allocno list for 213
 Rebuilding regno allocno list for 211
 Rebuilding regno allocno list for 207
 Rebuilding regno allocno list for 197
 Rebuilding regno allocno list for 192
 Rebuilding regno allocno list for 190
 Rebuilding regno allocno list for 188
 Rebuilding regno allocno list for 157
 Rebuilding regno allocno list for 151
 Rebuilding regno allocno list for 143
Compressing live ranges: from 353 to 107 - 30%
Ranges after the compression:
 a0(r163): [57..58] [0..9]
 a1(r137): [1..2]
 a2(r140): [3..8]
 a3(r235): [4..5]
 a4(r234): [6..7]
 a5(r142): [71..82] [10..11]
 a6(r239): [71..82] [10..12]
 a7(r224): [13..24]
 a8(r141): [71..82] [10..14]
 a9(r167): [93..106] [71..82] [59..69] [39..56] [10..26]
 a10(r223): [15..17]
 a11(r144): [15..23]
 a12(r225): [16..20]
 a13(r219): [18..19]
 a14(r222): [18..21]
 a15(r220): [22..25]
 a16(r159): [83..92] [27..28]
 a17(r204): [29..30]
 a18(r156): [29..37]
 a19(r200): [31..32]
 a20(r203): [31..35]
 a21(r240): [83..92] [27..33]
 a22(r158): [83..92] [27..34]
 a23(r201): [36..38]
 a24(r150): [83..106] [27..54]
 a25(r146): [93..106] [39..40]
 a26(r180): [41..43]
 a27(r152): [41..53]
 a28(r242): [93..106] [39..42]
 a29(r176): [44..45]
 a30(r179): [44..50]
 a31(r241): [93..106] [39..46]
 a32(r133): [93..106] [39..47]
 a33(r181): [48..49]
 a34(r174): [59..60] [48..56]
 a35(r177): [51..55]
 a36(r147): [93..106] [39..52]
 a37(r162): [61..62]
 a38(r172): [63..64]
 a39(r161): [65..70]
 a40(r170): [65..66]
 a41(r169): [67..68]
 a46(r232): [72..73]
 a47(r143): [80..81] [74..79]
 a48(r230): [75..76]
 a49(r229): [77..78]
 a54(r213): [84..85]
 a55(r157): [86..91]
 a56(r211): [87..88]
 a57(r207): [89..90]
 a65(r197): [94..95]
 a66(r151): [100..105] [96..99]
 a67(r192): [97..98]
 a68(r190): [101..102]
 a69(r188): [103..104]
+++Allocating 440 bytes for conflict table (uncompressed size 1120)
;; a0(r163,l0) conflicts: a1(r137,l0) a2(r140,l0) a3(r235,l0) a4(r234,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r137,l0) conflicts: a0(r163,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r140,l0) conflicts: a0(r163,l0) a3(r235,l0) a4(r234,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a3(r235,l0) conflicts: a0(r163,l0) a2(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a4(r234,l0) conflicts: a0(r163,l0) a2(r140,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a5(r142,l0) conflicts: a6(r239,l0) a8(r141,l0) a9(r167,l0) a46(r232,l0) a47(r143,l0) a48(r230,l0) a49(r229,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a6(r239,l0) conflicts: a5(r142,l0) a8(r141,l0) a9(r167,l0) a46(r232,l0) a47(r143,l0) a48(r230,l0) a49(r229,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a7(r224,l0) conflicts: a8(r141,l0) a9(r167,l0) a10(r223,l0) a11(r144,l0) a12(r225,l0) a13(r219,l0) a14(r222,l0) a15(r220,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a8(r141,l0) conflicts: a5(r142,l0) a6(r239,l0) a9(r167,l0) a7(r224,l0) a46(r232,l0) a47(r143,l0) a48(r230,l0) a49(r229,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a9(r167,l0) conflicts: a5(r142,l0) a6(r239,l0) a8(r141,l0) a7(r224,l0) a10(r223,l0) a11(r144,l0) a12(r225,l0) a13(r219,l0) a14(r222,l0) a15(r220,l0) a24(r150,l0) a25(r146,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a26(r180,l0) a27(r152,l0) a29(r176,l0) a30(r179,l0) a33(r181,l0) a34(r174,l0) a35(r177,l0) a37(r162,l0) a38(r172,l0) a40(r170,l0) a39(r161,l0) a41(r169,l0) a46(r232,l0) a47(r143,l0) a48(r230,l0) a49(r229,l0) a65(r197,l0) a66(r151,l0) a67(r192,l0) a68(r190,l0) a69(r188,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a10(r223,l0) conflicts: a9(r167,l0) a7(r224,l0) a11(r144,l0) a12(r225,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a11(r144,l0) conflicts: a9(r167,l0) a7(r224,l0) a10(r223,l0) a12(r225,l0) a13(r219,l0) a14(r222,l0) a15(r220,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a12(r225,l0) conflicts: a9(r167,l0) a7(r224,l0) a10(r223,l0) a11(r144,l0) a13(r219,l0) a14(r222,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a13(r219,l0) conflicts: a9(r167,l0) a7(r224,l0) a11(r144,l0) a12(r225,l0) a14(r222,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r222,l0) conflicts: a9(r167,l0) a7(r224,l0) a11(r144,l0) a12(r225,l0) a13(r219,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a15(r220,l0) conflicts: a9(r167,l0) a7(r224,l0) a11(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a16(r159,l0) conflicts: a21(r240,l0) a22(r158,l0) a24(r150,l0) a54(r213,l0) a55(r157,l0) a56(r211,l0) a57(r207,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a17(r204,l0) conflicts: a21(r240,l0) a22(r158,l0) a24(r150,l0) a18(r156,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a18(r156,l0) conflicts: a21(r240,l0) a22(r158,l0) a24(r150,l0) a17(r204,l0) a19(r200,l0) a20(r203,l0) a23(r201,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a19(r200,l0) conflicts: a21(r240,l0) a22(r158,l0) a24(r150,l0) a18(r156,l0) a20(r203,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a20(r203,l0) conflicts: a21(r240,l0) a22(r158,l0) a24(r150,l0) a18(r156,l0) a19(r200,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a21(r240,l0) conflicts: a16(r159,l0) a22(r158,l0) a24(r150,l0) a17(r204,l0) a18(r156,l0) a19(r200,l0) a20(r203,l0) a54(r213,l0) a55(r157,l0) a56(r211,l0) a57(r207,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a22(r158,l0) conflicts: a16(r159,l0) a21(r240,l0) a24(r150,l0) a17(r204,l0) a18(r156,l0) a19(r200,l0) a20(r203,l0) a54(r213,l0) a55(r157,l0) a56(r211,l0) a57(r207,l0)
;;     total conflict hard regs: 0 14
;;     conflict hard regs: 0 14
;; a23(r201,l0) conflicts: a24(r150,l0) a18(r156,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a24(r150,l0) conflicts: a9(r167,l0) a16(r159,l0) a21(r240,l0) a22(r158,l0) a17(r204,l0) a18(r156,l0) a19(r200,l0) a20(r203,l0) a23(r201,l0) a25(r146,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a26(r180,l0) a27(r152,l0) a29(r176,l0) a30(r179,l0) a33(r181,l0) a34(r174,l0) a35(r177,l0) a54(r213,l0) a55(r157,l0) a56(r211,l0) a57(r207,l0) a65(r197,l0) a66(r151,l0) a67(r192,l0) a68(r190,l0) a69(r188,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a25(r146,l0) conflicts: a9(r167,l0) a24(r150,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a65(r197,l0) a66(r151,l0) a67(r192,l0) a68(r190,l0) a69(r188,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a26(r180,l0) conflicts: a9(r167,l0) a24(r150,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a27(r152,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a27(r152,l0) conflicts: a9(r167,l0) a24(r150,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a26(r180,l0) a29(r176,l0) a30(r179,l0) a33(r181,l0) a34(r174,l0) a35(r177,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a28(r242,l0) conflicts: a9(r167,l0) a24(r150,l0) a25(r146,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a26(r180,l0) a27(r152,l0) a65(r197,l0) a66(r151,l0) a67(r192,l0) a68(r190,l0) a69(r188,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a29(r176,l0) conflicts: a9(r167,l0) a24(r150,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a27(r152,l0) a30(r179,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a30(r179,l0) conflicts: a9(r167,l0) a24(r150,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a27(r152,l0) a29(r176,l0) a33(r181,l0) a34(r174,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a31(r241,l0) conflicts: a9(r167,l0) a24(r150,l0) a25(r146,l0) a28(r242,l0) a32(r133,l0) a36(r147,l0) a26(r180,l0) a27(r152,l0) a29(r176,l0) a30(r179,l0) a65(r197,l0) a66(r151,l0) a67(r192,l0) a68(r190,l0) a69(r188,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a32(r133,l0) conflicts: a9(r167,l0) a24(r150,l0) a25(r146,l0) a28(r242,l0) a31(r241,l0) a36(r147,l0) a26(r180,l0) a27(r152,l0) a29(r176,l0) a30(r179,l0) a65(r197,l0) a66(r151,l0) a67(r192,l0) a68(r190,l0) a69(r188,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a33(r181,l0) conflicts: a9(r167,l0) a24(r150,l0) a36(r147,l0) a27(r152,l0) a30(r179,l0) a34(r174,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a34(r174,l0) conflicts: a9(r167,l0) a24(r150,l0) a36(r147,l0) a27(r152,l0) a30(r179,l0) a33(r181,l0) a35(r177,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a35(r177,l0) conflicts: a9(r167,l0) a24(r150,l0) a36(r147,l0) a27(r152,l0) a34(r174,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a36(r147,l0) conflicts: a9(r167,l0) a24(r150,l0) a25(r146,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a26(r180,l0) a27(r152,l0) a29(r176,l0) a30(r179,l0) a33(r181,l0) a34(r174,l0) a35(r177,l0) a65(r197,l0) a66(r151,l0) a67(r192,l0) a68(r190,l0) a69(r188,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a37(r162,l0) conflicts: a9(r167,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a38(r172,l0) conflicts: a9(r167,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a39(r161,l0) conflicts: a9(r167,l0) a40(r170,l0) a41(r169,l0)
;;     total conflict hard regs: 2 14
;;     conflict hard regs: 2 14
;; a40(r170,l0) conflicts: a9(r167,l0) a39(r161,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a41(r169,l0) conflicts: a9(r167,l0) a39(r161,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a46(r232,l0) conflicts: a5(r142,l0) a6(r239,l0) a8(r141,l0) a9(r167,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a47(r143,l0) conflicts: a5(r142,l0) a6(r239,l0) a8(r141,l0) a9(r167,l0) a48(r230,l0) a49(r229,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a48(r230,l0) conflicts: a5(r142,l0) a6(r239,l0) a8(r141,l0) a9(r167,l0) a47(r143,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a49(r229,l0) conflicts: a5(r142,l0) a6(r239,l0) a8(r141,l0) a9(r167,l0) a47(r143,l0)
;;     total conflict hard regs: 0 1
;;     conflict hard regs: 0 1
;; a54(r213,l0) conflicts: a16(r159,l0) a21(r240,l0) a22(r158,l0) a24(r150,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a55(r157,l0) conflicts: a16(r159,l0) a21(r240,l0) a22(r158,l0) a24(r150,l0) a56(r211,l0) a57(r207,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a56(r211,l0) conflicts: a16(r159,l0) a21(r240,l0) a22(r158,l0) a24(r150,l0) a55(r157,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a57(r207,l0) conflicts: a16(r159,l0) a21(r240,l0) a22(r158,l0) a24(r150,l0) a55(r157,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a65(r197,l0) conflicts: a9(r167,l0) a24(r150,l0) a25(r146,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a66(r151,l0) conflicts: a9(r167,l0) a24(r150,l0) a25(r146,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a67(r192,l0) a68(r190,l0) a69(r188,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a67(r192,l0) conflicts: a9(r167,l0) a24(r150,l0) a25(r146,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a66(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a68(r190,l0) conflicts: a9(r167,l0) a24(r150,l0) a25(r146,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a66(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:
;; a69(r188,l0) conflicts: a9(r167,l0) a24(r150,l0) a25(r146,l0) a28(r242,l0) a31(r241,l0) a32(r133,l0) a36(r147,l0) a66(r151,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a3(r235)<->a4(r234)@125:shuffle
  cp1:a6(r239)<->a7(r224)@1000:move
  cp2:a8(r141)<->a11(r144)@125:shuffle
  cp3:a8(r141)<->a10(r223)@125:shuffle
  cp4:a16(r159)<->a18(r156)@125:shuffle
  cp5:a16(r159)<->a17(r204)@125:shuffle
  cp6:a32(r133)<->a34(r174)@125:shuffle
  cp7:a32(r133)<->a33(r181)@125:shuffle
  cp8:a25(r146)<->a27(r152)@125:shuffle
  cp9:a25(r146)<->a26(r180)@125:shuffle
  cp10:a34(r174)<->a37(r162)@125:shuffle
  cp11:a40(r170)<->a41(r169)@125:shuffle
  regions=4, blocks=41, points=107
    allocnos=70, copies=12, conflicts=3, ranges=75

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 40 39 38 37 36 35 34 33 32 31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2
    all: 0r163 1r137 2r140 3r235 4r234 5r142 6r239 7r224 8r141 9r167 10r223 11r144 12r225 13r219 14r222 15r220 16r159 17r204 18r156 19r200 20r203 21r240 22r158 23r201 24r150 25r146 26r180 27r152 28r242 29r176 30r179 31r241 32r133 33r181 34r174 35r177 36r147 37r162 38r172 39r161 40r170 41r169 46r232 47r143 48r230 49r229 54r213 55r157 56r211 57r207 65r197 66r151 67r192 68r190 69r188
    modified regnos: 133 137 140 141 142 143 144 146 147 150 151 152 156 157 158 159 161 162 163 167 169 170 172 174 176 177 179 180 181 188 190 192 197 200 201 203 204 207 211 213 219 220 222 223 224 225 229 230 232 234 235 239 240 241 242
    border:
    Pressure: GENERAL_REGS=11
    Reg 163 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
    Reg 140 of GENERAL_REGS has 1 regs less
    Reg 235 of GENERAL_REGS has 1 regs less
    Reg 234 of GENERAL_REGS has 1 regs less
    Reg 142 of GENERAL_REGS has 3 regs less
    Reg 239 of GENERAL_REGS has 3 regs less
    Reg 224 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 3 regs less
    Reg 167 of GENERAL_REGS has 4 regs less
    Reg 223 of GENERAL_REGS has 1 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 225 of GENERAL_REGS has 1 regs less
    Reg 219 of GENERAL_REGS has 1 regs less
    Reg 222 of GENERAL_REGS has 1 regs less
    Reg 220 of GENERAL_REGS has 1 regs less
    Reg 159 of GENERAL_REGS has 2 regs less
    Reg 204 of GENERAL_REGS has 1 regs less
    Reg 156 of GENERAL_REGS has 1 regs less
    Reg 200 of GENERAL_REGS has 1 regs less
    Reg 203 of GENERAL_REGS has 1 regs less
    Reg 240 of GENERAL_REGS has 2 regs less
    Reg 158 of GENERAL_REGS has 2 regs less
    Reg 201 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 3 regs less
    Reg 146 of GENERAL_REGS has 3 regs less
    Reg 180 of GENERAL_REGS has 1 regs less
    Reg 152 of GENERAL_REGS has 1 regs less
    Reg 242 of GENERAL_REGS has 3 regs less
    Reg 176 of GENERAL_REGS has 1 regs less
    Reg 179 of GENERAL_REGS has 1 regs less
    Reg 241 of GENERAL_REGS has 3 regs less
    Reg 133 of GENERAL_REGS has 3 regs less
    Reg 181 of GENERAL_REGS has 1 regs less
    Reg 174 of GENERAL_REGS has 1 regs less
    Reg 177 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 3 regs less
    Reg 162 of GENERAL_REGS has 1 regs less
    Reg 172 of GENERAL_REGS has 1 regs less
    Reg 161 of GENERAL_REGS has 2 regs less
    Reg 170 of GENERAL_REGS has 1 regs less
    Reg 169 of GENERAL_REGS has 1 regs less
    Reg 232 of GENERAL_REGS has 1 regs less
    Reg 143 of GENERAL_REGS has 3 regs less
    Reg 229 of GENERAL_REGS has 2 regs less
    Reg 213 of GENERAL_REGS has 1 regs less
    Reg 197 of GENERAL_REGS has 1 regs less
    Reg 151 of GENERAL_REGS has 3 regs less
      Pushing a69(r188,l0)
      Pushing a68(r190,l0)
      Pushing a67(r192,l0)
      Pushing a57(r207,l0)
      Pushing a56(r211,l0)
      Pushing a48(r230,l0)
      Pushing a55(r157,l0)
      Pushing a65(r197,l0)
      Pushing a54(r213,l0)
      Pushing a46(r232,l0)
      Pushing a41(r169,l0)
      Pushing a40(r170,l0)
      Pushing a38(r172,l0)
      Pushing a37(r162,l0)
      Pushing a33(r181,l0)
      Pushing a30(r179,l0)
      Pushing a29(r176,l0)
      Pushing a26(r180,l0)
      Pushing a20(r203,l0)
      Pushing a19(r200,l0)
      Pushing a17(r204,l0)
      Pushing a14(r222,l0)
      Pushing a13(r219,l0)
      Pushing a12(r225,l0)
      Pushing a10(r223,l0)
      Pushing a4(r234,l0)
      Pushing a3(r235,l0)
      Pushing a1(r137,l0)
      Pushing a7(r224,l0)
      Pushing a0(r163,l0)
      Pushing a35(r177,l0)
      Pushing a27(r152,l0)
      Pushing a23(r201,l0)
      Pushing a18(r156,l0)
      Pushing a15(r220,l0)
      Pushing a11(r144,l0)
      Pushing a34(r174,l0)
      Pushing a2(r140,l0)
      Pushing a49(r229,l0)
      Pushing a21(r240,l0)
      Pushing a16(r159,l0)
      Pushing a39(r161,l0)
      Pushing a22(r158,l0)
      Pushing a32(r133,l0)
      Pushing a31(r241,l0)
      Pushing a28(r242,l0)
      Pushing a25(r146,l0)
      Pushing a8(r141,l0)
      Pushing a6(r239,l0)
      Pushing a5(r142,l0)
      Pushing a24(r150,l0)
      Pushing a47(r143,l0)
      Pushing a36(r147,l0)
      Pushing a66(r151,l0)
      Pushing a9(r167,l0)
      Popping a9(r167,l0)  -- assign reg 4
      Popping a66(r151,l0)  -- assign reg 5
      Popping a36(r147,l0)  -- assign reg 6
      Popping a47(r143,l0)  -- assign reg 5
      Popping a24(r150,l0)  -- assign reg 7
      Popping a5(r142,l0)  -- assign reg 6
      Popping a6(r239,l0)  -- assign reg 7
      Popping a8(r141,l0)  -- assign reg 8
      Popping a25(r146,l0)  -- assign reg 8
      Popping a28(r242,l0)  -- assign reg 10
      Popping a31(r241,l0)  -- assign reg 9
      Popping a32(r133,l0)  -- assign reg 11
      Popping a22(r158,l0)  -- assign reg 4
      Popping a39(r161,l0)  -- assign reg 3
      Popping a16(r159,l0)  -- assign reg 5
      Popping a21(r240,l0)  -- assign reg 6
      Popping a49(r229,l0)  -- assign reg 3
      Popping a2(r140,l0)  -- assign reg 3
      Popping a34(r174,l0)  -- assign reg 11
      Popping a11(r144,l0)  -- assign reg 3
      Popping a15(r220,l0)  -- assign reg 2
      Popping a18(r156,l0)  -- assign reg 3
      Popping a23(r201,l0)  -- assign reg 2
      Popping a27(r152,l0)  -- assign reg 3
      Popping a35(r177,l0)  -- assign reg 2
      Popping a0(r163,l0)  -- assign reg 4
      Popping a7(r224,l0)  -- assign reg 7
      Popping a1(r137,l0)  -- assign reg 3
      Popping a3(r235,l0)  -- assign reg 2
      Popping a4(r234,l0)  -- assign reg 2
      Popping a10(r223,l0)  -- assign reg 8
      Popping a12(r225,l0)  -- assign reg 2
      Popping a13(r219,l0)  -- assign reg 1
      Popping a14(r222,l0)  -- assign reg 0
      Popping a17(r204,l0)  -- assign reg 5
      Popping a19(r200,l0)  -- assign reg 2
      Popping a20(r203,l0)  -- assign reg 1
      Popping a26(r180,l0)  -- assign reg 8
      Popping a29(r176,l0)  -- assign reg 2
      Popping a30(r179,l0)  -- assign reg 1
      Popping a33(r181,l0)  -- assign reg 2
      Popping a37(r162,l0)  -- assign reg 11
      Popping a38(r172,l0)  -- assign reg 3
      Popping a40(r170,l0)  -- assign reg 2
      Popping a41(r169,l0)  -- assign reg 2
      Popping a46(r232,l0)  -- assign reg 3
      Popping a54(r213,l0)  -- assign reg 3
      Popping a65(r197,l0)  -- assign reg 3
      Popping a55(r157,l0)  -- assign reg 0
      Popping a48(r230,l0)  -- assign reg 3
      Popping a56(r211,l0)  -- assign reg 3
      Popping a57(r207,l0)  -- assign reg 3
      Popping a67(r192,l0)  -- assign reg 3
      Popping a68(r190,l0)  -- assign reg 3
      Popping a69(r188,l0)  -- assign reg 0
Disposition:
   32:r133 l0    11    1:r137 l0     3    2:r140 l0     3    8:r141 l0     8
    5:r142 l0     6   47:r143 l0     5   11:r144 l0     3   25:r146 l0     8
   36:r147 l0     6   24:r150 l0     7   66:r151 l0     5   27:r152 l0     3
   18:r156 l0     3   55:r157 l0     0   22:r158 l0     4   16:r159 l0     5
   39:r161 l0     3   37:r162 l0    11    0:r163 l0     4    9:r167 l0     4
   41:r169 l0     2   40:r170 l0     2   38:r172 l0     3   34:r174 l0    11
   29:r176 l0     2   35:r177 l0     2   30:r179 l0     1   26:r180 l0     8
   33:r181 l0     2   69:r188 l0     0   68:r190 l0     3   67:r192 l0     3
   65:r197 l0     3   19:r200 l0     2   23:r201 l0     2   20:r203 l0     1
   17:r204 l0     5   57:r207 l0     3   56:r211 l0     3   54:r213 l0     3
   13:r219 l0     1   15:r220 l0     2   14:r222 l0     0   10:r223 l0     8
    7:r224 l0     7   12:r225 l0     2   49:r229 l0     3   48:r230 l0     3
   46:r232 l0     3    4:r234 l0     2    3:r235 l0     2    6:r239 l0     7
   21:r240 l0     6   31:r241 l0     9   28:r242 l0    10
New iteration of spill/restore move
+++Costs: overall 5750, reg 5750, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=314, live_throughout: 2, 13, 14, dead_or_set: 161
insn=4, live_throughout: 13, 14, 161, dead_or_set: 2, 167
insn=315, live_throughout: 13, 14, 167, dead_or_set: 161
insn=11, live_throughout: 13, 14, 161, 167, dead_or_set: 169
insn=12, live_throughout: 13, 14, 161, 167, dead_or_set: 169, 170
insn=13, live_throughout: 13, 14, 167, dead_or_set: 161, 170
insn=14, live_throughout: 13, 14, 167, dead_or_set: 
insn=15, live_throughout: 13, 14, 167, dead_or_set: 172
insn=17, live_throughout: 13, 14, 167, dead_or_set: 172
insn=18, live_throughout: 13, 14, 167, dead_or_set: 
insn=20, live_throughout: 13, 14, 167, dead_or_set: 
insn=21, live_throughout: 13, 14, 167, dead_or_set: 
insn=23, live_throughout: 13, 14, 167, dead_or_set: 162
insn=25, live_throughout: 13, 14, 167, dead_or_set: 162, 174
insn=26, live_throughout: 13, 14, 167, 174, dead_or_set: 
insn=27, live_throughout: 13, 14, 167, 174, dead_or_set: 
insn=28, live_throughout: 13, 14, 167, 174, dead_or_set: 
insn=29, live_throughout: 13, 14, 167, 174, dead_or_set: 
insn=30, live_throughout: 13, 14, 167, 174, dead_or_set: 
insn=31, live_throughout: 13, 14, 167, 174, dead_or_set: 
insn=36, live_throughout: 13, 14, dead_or_set: 163
insn=289, live_throughout: 13, 14, 163, dead_or_set: 
insn=39, live_throughout: 13, 14, 167, 174, dead_or_set: 
insn=312, live_throughout: 13, 14, 167, 174, dead_or_set: 177
insn=313, live_throughout: 13, 14, 167, 174, dead_or_set: 177
insn=50, live_throughout: 13, 14, 167, 174, 177, dead_or_set: 150
insn=41, live_throughout: 13, 14, 150, 167, 174, 177, dead_or_set: 152
insn=54, live_throughout: 13, 14, 150, 152, 167, 174, 177, dead_or_set: 147
insn=47, live_throughout: 13, 14, 147, 150, 152, 167, 174, dead_or_set: 177, 179
insn=51, live_throughout: 13, 14, 147, 150, 152, 167, 174, 179, dead_or_set: 181
insn=53, live_throughout: 13, 14, 147, 150, 152, 167, 179, dead_or_set: 133, 174, 181
insn=117, live_throughout: 13, 14, 133, 147, 150, 152, 167, 179, dead_or_set: 241
insn=42, live_throughout: 13, 14, 133, 147, 150, 167, 179, 241, dead_or_set: 152
insn=319, live_throughout: 13, 14, 133, 147, 150, 152, 167, 179, 241, dead_or_set: 176
insn=48, live_throughout: 13, 14, 133, 147, 150, 152, 167, 241, dead_or_set: 176, 179, 180
insn=69, live_throughout: 13, 14, 133, 147, 150, 152, 167, 180, 241, dead_or_set: 242
insn=49, live_throughout: 13, 14, 133, 147, 150, 167, 241, 242, dead_or_set: 146, 152, 180
insn=291, live_throughout: 13, 14, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 
insn=116, live_throughout: 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 
insn=58, live_throughout: 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 14
insn=61, live_throughout: 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 151
insn=62, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 
insn=63, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 
insn=66, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 0
insn=67, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 0, 14
insn=70, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 0
insn=71, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 
insn=74, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 0
insn=75, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 0, 14
insn=80, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 0, 188
insn=82, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 188
insn=83, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 
insn=85, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 
insn=86, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 0
insn=87, live_throughout: 0, 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 1
insn=88, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 0, 1, 14
insn=89, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 190
insn=90, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 190
insn=91, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 
insn=93, live_throughout: 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 0, 151
insn=94, live_throughout: 0, 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 1
insn=95, live_throughout: 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 0, 1, 14
insn=293, live_throughout: 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 
insn=98, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 
insn=100, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 192
insn=105, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 192
insn=106, live_throughout: 13, 133, 146, 147, 150, 151, 167, 241, 242, dead_or_set: 
insn=108, live_throughout: 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 0, 151
insn=109, live_throughout: 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 0, 14
insn=110, live_throughout: 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 
insn=112, live_throughout: 13, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 14
insn=113, live_throughout: 13, 14, 133, 146, 150, 167, 241, 242, dead_or_set: 147
insn=114, live_throughout: 13, 14, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 
insn=118, live_throughout: 13, 14, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 197
insn=119, live_throughout: 13, 14, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 197
insn=120, live_throughout: 13, 14, 133, 146, 147, 150, 167, 241, 242, dead_or_set: 
insn=310, live_throughout: 13, 14, 150, dead_or_set: 201
insn=311, live_throughout: 13, 14, 150, dead_or_set: 201
insn=123, live_throughout: 13, 14, 150, 201, dead_or_set: 156
insn=124, live_throughout: 13, 14, 150, 201, dead_or_set: 156
insn=129, live_throughout: 13, 14, 150, 156, dead_or_set: 201, 203
insn=132, live_throughout: 13, 14, 150, 156, 203, dead_or_set: 158
insn=163, live_throughout: 13, 14, 150, 156, 158, 203, dead_or_set: 240
insn=318, live_throughout: 13, 14, 150, 156, 158, 203, 240, dead_or_set: 200
insn=130, live_throughout: 13, 14, 150, 156, 158, 240, dead_or_set: 200, 203, 204
insn=131, live_throughout: 13, 14, 150, 158, 240, dead_or_set: 156, 159, 204
insn=295, live_throughout: 13, 14, 150, 158, 159, 240, dead_or_set: 
insn=162, live_throughout: 13, 150, 158, 159, 240, dead_or_set: 
insn=136, live_throughout: 13, 150, 158, 159, 240, dead_or_set: 14
insn=138, live_throughout: 13, 150, 158, 159, 240, dead_or_set: 157
insn=139, live_throughout: 13, 150, 157, 158, 159, 240, dead_or_set: 
insn=140, live_throughout: 13, 150, 157, 158, 159, 240, dead_or_set: 
insn=142, live_throughout: 13, 150, 157, 158, 159, 240, dead_or_set: 207
insn=147, live_throughout: 13, 150, 157, 158, 159, 240, dead_or_set: 207
insn=148, live_throughout: 13, 150, 157, 158, 159, 240, dead_or_set: 
insn=150, live_throughout: 13, 150, 157, 158, 159, 240, dead_or_set: 211
insn=151, live_throughout: 13, 150, 157, 158, 159, 240, dead_or_set: 211
insn=152, live_throughout: 13, 150, 157, 158, 159, 240, dead_or_set: 
insn=154, live_throughout: 13, 150, 158, 159, 240, dead_or_set: 0, 157
insn=155, live_throughout: 13, 150, 158, 159, 240, dead_or_set: 0, 14
insn=156, live_throughout: 13, 150, 158, 159, 240, dead_or_set: 
insn=158, live_throughout: 13, 150, 158, 159, 240, dead_or_set: 14
insn=159, live_throughout: 13, 14, 150, 159, 240, dead_or_set: 158
insn=160, live_throughout: 13, 14, 150, 158, 159, 240, dead_or_set: 
insn=164, live_throughout: 13, 14, 150, 158, 159, 240, dead_or_set: 213
insn=165, live_throughout: 13, 14, 150, 158, 159, 240, dead_or_set: 213
insn=166, live_throughout: 13, 14, 150, 158, 159, 240, dead_or_set: 
insn=298, live_throughout: 13, 14, dead_or_set: 
insn=170, live_throughout: 13, 167, dead_or_set: 
insn=175, live_throughout: 13, 167, dead_or_set: 0
insn=176, live_throughout: 0, 13, 167, dead_or_set: 1
insn=177, live_throughout: 0, 1, 13, 167, dead_or_set: 2
insn=178, live_throughout: 13, 167, dead_or_set: 0, 1, 2, 14
insn=179, live_throughout: 13, 14, 167, dead_or_set: 
insn=307, live_throughout: 13, 14, 167, dead_or_set: 220
insn=191, live_throughout: 13, 14, 167, 220, dead_or_set: 224
insn=308, live_throughout: 13, 14, 167, 224, dead_or_set: 220
insn=182, live_throughout: 13, 14, 167, 220, 224, dead_or_set: 144
insn=188, live_throughout: 13, 14, 144, 167, 224, dead_or_set: 220, 222
insn=192, live_throughout: 13, 14, 144, 167, 222, 224, dead_or_set: 225
insn=183, live_throughout: 13, 14, 167, 222, 224, 225, dead_or_set: 144
insn=317, live_throughout: 13, 14, 144, 167, 222, 224, 225, dead_or_set: 219
insn=189, live_throughout: 13, 14, 144, 167, 224, 225, dead_or_set: 219, 222, 223
insn=193, live_throughout: 13, 14, 144, 167, 223, 224, dead_or_set: 225
insn=190, live_throughout: 13, 14, 24, 167, 224, dead_or_set: 141, 144, 223
insn=194, live_throughout: 13, 14, 141, 167, 224, dead_or_set: 
insn=240, live_throughout: 13, 14, 141, 167, dead_or_set: 224, 239
insn=196, live_throughout: 13, 14, 141, 167, 239, dead_or_set: 142
insn=300, live_throughout: 13, 14, 141, 142, 167, 239, dead_or_set: 
insn=199, live_throughout: 13, dead_or_set: 
insn=203, live_throughout: 13, dead_or_set: 0
insn=204, live_throughout: 0, 13, dead_or_set: 1
insn=205, live_throughout: 13, dead_or_set: 0, 1, 14
insn=239, live_throughout: 13, 141, 142, 167, 239, dead_or_set: 
insn=208, live_throughout: 13, 141, 142, 167, 239, dead_or_set: 14
insn=210, live_throughout: 13, 141, 142, 167, 239, dead_or_set: 143
insn=211, live_throughout: 13, 141, 142, 143, 167, 239, dead_or_set: 
insn=212, live_throughout: 13, 141, 142, 143, 167, 239, dead_or_set: 
insn=214, live_throughout: 13, 141, 142, 167, 239, dead_or_set: 14
insn=302, live_throughout: 13, 14, 141, 142, 167, 239, dead_or_set: 
insn=217, live_throughout: 13, 141, 142, 143, 167, 239, dead_or_set: 
insn=219, live_throughout: 13, 141, 142, 143, 167, 239, dead_or_set: 229
insn=221, live_throughout: 13, 141, 142, 143, 167, 229, 239, dead_or_set: 0
insn=222, live_throughout: 0, 13, 141, 142, 143, 167, 229, 239, dead_or_set: 1
insn=220, live_throughout: 0, 1, 13, 141, 142, 143, 167, 239, dead_or_set: 229
insn=223, live_throughout: 13, 141, 142, 143, 167, 239, dead_or_set: 0, 1, 14
insn=224, live_throughout: 13, 141, 142, 143, 167, 239, dead_or_set: 230
insn=225, live_throughout: 13, 141, 142, 143, 167, 239, dead_or_set: 230
insn=226, live_throughout: 13, 141, 142, 143, 167, 239, dead_or_set: 
insn=228, live_throughout: 13, 141, 142, 167, 239, dead_or_set: 0, 143
insn=229, live_throughout: 0, 13, 141, 142, 167, 239, dead_or_set: 1
insn=230, live_throughout: 13, 141, 142, 167, 239, dead_or_set: 0, 1, 14
insn=231, live_throughout: 13, 141, 142, 167, 239, dead_or_set: 
insn=233, live_throughout: 13, 141, 142, 167, 239, dead_or_set: 14
insn=234, live_throughout: 13, 14, 141, 142, 167, 239, dead_or_set: 
insn=236, live_throughout: 13, 14, 141, 167, 239, dead_or_set: 142
insn=237, live_throughout: 13, 14, 141, 142, 167, 239, dead_or_set: 
insn=241, live_throughout: 13, 14, 141, 142, 167, 239, dead_or_set: 232
insn=242, live_throughout: 13, 14, 141, 142, 167, 239, dead_or_set: 232
insn=243, live_throughout: 13, 14, 141, 142, 167, 239, dead_or_set: 
insn=244, live_throughout: 13, 14, dead_or_set: 
insn=246, live_throughout: 13, 14, dead_or_set: 163
insn=247, live_throughout: 13, 14, 163, dead_or_set: 
insn=249, live_throughout: 13, 14, 163, dead_or_set: 
insn=304, live_throughout: 13, 14, 163, dead_or_set: 140
insn=305, live_throughout: 13, 14, 163, dead_or_set: 140
insn=253, live_throughout: 13, 14, 140, 163, dead_or_set: 234
insn=254, live_throughout: 13, 14, 140, 163, dead_or_set: 234, 235
insn=255, live_throughout: 13, 14, 140, 163, dead_or_set: 235
insn=256, live_throughout: 13, 14, 140, 163, dead_or_set: 
insn=260, live_throughout: 13, 14, 163, dead_or_set: 137, 140
insn=262, live_throughout: 13, 14, 163, dead_or_set: 137
insn=263, live_throughout: 13, 14, 163, dead_or_set: 
insn=265, live_throughout: 13, 163, dead_or_set: 14
insn=266, live_throughout: 13, 14, 163, dead_or_set: 
insn=272, live_throughout: 13, 14, dead_or_set: 0, 163
insn=278, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 169: (insn_list:REG_DEP_TRUE 11 (nil))
init_insns for 170: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 172: (insn_list:REG_DEP_TRUE 15 (nil))
init_insns for 176: (insn_list:REG_DEP_TRUE 319 (nil))
init_insns for 190: (insn_list:REG_DEP_TRUE 89 (nil))
init_insns for 197: (insn_list:REG_DEP_TRUE 118 (nil))
init_insns for 200: (insn_list:REG_DEP_TRUE 318 (nil))
init_insns for 211: (insn_list:REG_DEP_TRUE 150 (nil))
init_insns for 213: (insn_list:REG_DEP_TRUE 164 (nil))
init_insns for 219: (insn_list:REG_DEP_TRUE 317 (nil))
init_insns for 224: (insn_list:REG_DEP_TRUE 191 (nil))
init_insns for 225: (insn_list:REG_DEP_TRUE 192 (nil))
init_insns for 229: (insn_list:REG_DEP_TRUE 219 (nil))
init_insns for 230: (insn_list:REG_DEP_TRUE 224 (nil))
init_insns for 232: (insn_list:REG_DEP_TRUE 241 (nil))
init_insns for 234: (insn_list:REG_DEP_TRUE 253 (nil))
init_insns for 235: (insn_list:REG_DEP_TRUE 255 (nil))
init_insns for 239: (insn_list:REG_DEP_TRUE 240 (nil))
init_insns for 240: (insn_list:REG_DEP_TRUE 163 (nil))
init_insns for 241: (insn_list:REG_DEP_TRUE 117 (nil))
changing reg in insn 53
changing reg in insn 82
changing reg in insn 260
changing reg in insn 262
changing reg in insn 305
changing reg in insn 304
changing reg in insn 305
changing reg in insn 260
changing reg in insn 255
changing reg in insn 253
changing reg in insn 254
changing reg in insn 253
changing reg in insn 190
changing reg in insn 210
changing reg in insn 236
changing reg in insn 196
changing reg in insn 210
changing reg in insn 242
changing reg in insn 236
changing reg in insn 210
changing reg in insn 228
changing reg in insn 224
changing reg in insn 221
changing reg in insn 220
changing reg in insn 219
changing reg in insn 211
changing reg in insn 224
changing reg in insn 219
changing reg in insn 182
changing reg in insn 183
changing reg in insn 183
changing reg in insn 190
changing reg in insn 49
changing reg in insn 61
changing reg in insn 113
changing reg in insn 54
changing reg in insn 74
changing reg in insn 66
changing reg in insn 61
changing reg in insn 119
changing reg in insn 113
changing reg in insn 50
changing reg in insn 69
changing reg in insn 151
changing reg in insn 94
changing reg in insn 85
changing reg in insn 51
changing reg in insn 61
changing reg in insn 108
changing reg in insn 100
changing reg in insn 93
changing reg in insn 89
changing reg in insn 86
changing reg in insn 85
changing reg in insn 62
changing reg in insn 89
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 49
changing reg in insn 123
changing reg in insn 124
changing reg in insn 124
changing reg in insn 131
changing reg in insn 138
changing reg in insn 154
changing reg in insn 150
changing reg in insn 142
changing reg in insn 139
changing reg in insn 150
changing reg in insn 159
changing reg in insn 132
changing reg in insn 138
changing reg in insn 165
changing reg in insn 159
changing reg in insn 131
changing reg in insn 138
changing reg in insn 315
changing reg in insn 314
changing reg in insn 315
changing reg in insn 13
changing reg in insn 11
changing reg in insn 12
changing reg in insn 11
changing reg in insn 23
changing reg in insn 25
changing reg in insn 246
changing reg in insn 36
changing reg in insn 272
changing reg in insn 4
changing reg in insn 229
changing reg in insn 222
changing reg in insn 87
changing reg in insn 50
changing reg in insn 15
changing reg in insn 15
changing reg in insn 11
changing reg in insn 12
changing reg in insn 12
changing reg in insn 13
changing reg in insn 15
changing reg in insn 17
changing reg in insn 25
changing reg in insn 53
changing reg in insn 30
changing reg in insn 28
changing reg in insn 26
changing reg in insn 319
changing reg in insn 48
changing reg in insn 313
changing reg in insn 312
changing reg in insn 313
changing reg in insn 47
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 48
changing reg in insn 49
changing reg in insn 51
changing reg in insn 53
changing reg in insn 80
changing reg in insn 82
changing reg in insn 89
changing reg in insn 90
changing reg in insn 100
changing reg in insn 105
changing reg in insn 118
changing reg in insn 119
changing reg in insn 318
changing reg in insn 130
changing reg in insn 311
changing reg in insn 310
changing reg in insn 311
changing reg in insn 129
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 130
changing reg in insn 131
changing reg in insn 142
changing reg in insn 147
changing reg in insn 150
changing reg in insn 151
changing reg in insn 164
changing reg in insn 165
changing reg in insn 317
changing reg in insn 189
changing reg in insn 308
changing reg in insn 307
changing reg in insn 308
changing reg in insn 188
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 189
changing reg in insn 190
changing reg in insn 191
changing reg in insn 240
changing reg in insn 192
changing reg in insn 192
changing reg in insn 192
changing reg in insn 193
changing reg in insn 219
changing reg in insn 220
changing reg in insn 224
changing reg in insn 225
changing reg in insn 241
changing reg in insn 242
changing reg in insn 253
changing reg in insn 254
changing reg in insn 254
changing reg in insn 255
changing reg in insn 240
changing reg in insn 241
changing reg in insn 241
changing reg in insn 163
changing reg in insn 164
changing reg in insn 164
changing reg in insn 117
changing reg in insn 118
changing reg in insn 118
changing reg in insn 69
changing reg in insn 70
Spilling for insn 314.
Using reg 1 for reload 0
Spilling for insn 13.
Spilling for insn 312.
Using reg 3 for reload 0
Spilling for insn 85.
Spilling for insn 310.
Using reg 3 for reload 0
Spilling for insn 307.
Using reg 3 for reload 0
Spilling for insn 220.
Spilling for insn 304.
Using reg 2 for reload 0
Spilling for insn 255.

Reloads for insn # 314
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 13
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:161 D.24724 ] [161])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:161 D.24724 ] [161])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])

Reloads for insn # 312
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 85
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 bp ] [151])
                                                        (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 bp ] [151])
                                                        (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])

Reloads for insn # 310
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 307
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 3 r3)

Reloads for insn # 220
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 wp ] [143])
                                                        (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 wp ] [143])
                                                        (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])

Reloads for insn # 304
Reload 0: reload_in (SI) = (reg/f:SI 13 sp)
	GENERAL_REGS, RELOAD_FOR_INPUT (opnum = 1)
	reload_in_reg: (reg/f:SI 13 sp)
	reload_reg_rtx: (reg:SI 1 r1)

Reloads for insn # 255
Reload 0: reload_out (SI) = (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.24829 ] [140])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.24829 ] [140])
                                                        (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
deleting insn with uid = 154.
deleting insn with uid = 240.


try_optimize_cfg iteration 1

Forwarding edge 24->25 to 37 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 58.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 75.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 109.
verify found no changes in insn with uid = 112.
verify found no changes in insn with uid = 136.
verify found no changes in insn with uid = 155.
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 208.
verify found no changes in insn with uid = 214.
verify found no changes in insn with uid = 223.
verify found no changes in insn with uid = 230.
verify found no changes in insn with uid = 233.
verify found no changes in insn with uid = 265.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 58 count 95 (  2.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 58 count 103 (  2.5)


hw_breakpoint_pending

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 11[fp] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={32d,19u,2d} r1={31d,12u,2d} r2={34d,16u} r3={42d,26u,4d} r4={5d,9u,1d} r5={4d,15u,3d} r6={5d,9u,1d} r7={2d,7u,2d} r8={4d,4u} r9={1d,1u,1d} r10={1d,1u} r11={3d,6u} r12={19d} r13={1d,63u} r14={19d,1u} r15={18d} r16={18d} r17={18d} r18={18d} r19={18d} r20={18d} r21={18d} r22={18d} r23={18d} r24={38d,19u} r27={18d} r28={18d} r29={18d} r30={18d} r31={18d} r32={18d} r33={18d} r34={18d} r35={18d} r36={18d} r37={18d} r38={18d} r39={18d} r40={18d} r41={18d} r42={18d} r43={18d} r44={18d} r45={18d} r46={18d} r47={18d} r48={18d} r49={18d} r50={18d} r51={18d} r52={18d} r53={18d} r54={18d} r55={18d} r56={18d} r57={18d} r58={18d} r59={18d} r60={18d} r61={18d} r62={18d} r63={18d} r64={18d} r65={18d} r66={18d} r67={18d} r68={18d} r69={18d} r70={18d} r71={18d} r72={18d} r73={18d} r74={18d} r75={18d} r76={18d} r77={18d} r78={18d} r79={18d} r80={18d} r81={18d} r82={18d} r83={18d} r84={18d} r85={18d} r86={18d} r87={18d} r88={18d} r89={18d} r90={18d} r91={18d} r92={18d} r93={18d} r94={18d} r95={18d} r96={18d} r97={18d} r98={18d} r99={18d} r100={18d} r101={18d} r102={18d} r103={18d} r104={18d} r105={18d} r106={18d} r107={18d} r108={18d} r109={18d} r110={18d} r111={18d} r112={18d} r113={18d} r114={18d} r115={18d} r116={18d} r117={18d} r118={18d} r119={18d} r120={18d} r121={18d} r122={18d} r123={18d} r124={18d} r125={18d} r126={18d} r127={18d} 
;;    total ref usage 2445{2221d,208u,16e} in 160{142 regular + 18 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 13 [sp] 14 [lr]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  in  	 2 [r2] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 9 2 NOTE_INSN_FUNCTION_BEG)

(note 9 5 16 2 NOTE_INSN_DELETED)

(note 16 9 321 2 NOTE_INSN_DELETED)

(insn 321 16 314 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 314 321 4 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:161 D.24724 ] [161])
        (and:SI (reg:SI 1 r1)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 4 314 315 2 arch/arm/kernel/hw_breakpoint.c:803 (set (reg/v/f:SI 4 r4 [orig:167 regs ] [167])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (nil))

(insn 315 4 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:161 D.24724 ] [161])
        (and:SI (reg/f:SI 3 r3 [orig:161 D.24724 ] [161])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 315 12 2 arch/arm/kernel/hw_breakpoint.c:807 (set (reg:SI 2 r2 [orig:169 <variable>.preempt_count ] [169])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:161 D.24724 ] [161])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:161 D.24724 ] [161])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/hw_breakpoint.c:807 (set (reg:SI 2 r2 [170])
        (plus:SI (reg:SI 2 r2 [orig:169 <variable>.preempt_count ] [169])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:161 D.24724 ] [161])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/hw_breakpoint.c:807 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:161 D.24724 ] [161])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [170])) 167 {*arm_movsi_insn} (nil))

(insn 14 13 15 2 arch/arm/kernel/hw_breakpoint.c:807 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8170006)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 15 14 17 2 arch/arm/kernel/hw_breakpoint.c:809 (set (reg:SI 3 r3 [orig:172 <variable>.uregs+64 ] [172])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:167 regs ] [167])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:167 regs ] [167])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])
        (nil)))

(insn 17 15 18 2 arch/arm/kernel/hw_breakpoint.c:809 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:172 <variable>.uregs+64 ] [172])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 18 17 19 2 arch/arm/kernel/hw_breakpoint.c:809 (set (pc)
        (if_then_else (ne (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	 24 [cc]

;; Pred edge  2 [50.0%]  (fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 987086)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 11 [fp] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 11 [fp] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 21 20 22 4 326 "" [1 uses])

(note 22 21 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 24 22 23 4 NOTE_INSN_DELETED)

(insn 23 24 25 4 arch/arm/kernel/hw_breakpoint.c:813 (set (reg/v:SI 11 fp [orig:162 dscr ] [162])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 0") ("=r") 0 []
             [] 8170774)) -1 (nil))

(insn 25 23 26 4 arch/arm/kernel/hw_breakpoint.c:816 (set (reg:SI 11 fp [174])
        (zero_extract:SI (reg/v:SI 11 fp [orig:162 dscr ] [162])
            (const_int 4 [0x4])
            (const_int 2 [0x2]))) 124 {extzv_t2} (nil))

(insn 26 25 27 4 arch/arm/kernel/hw_breakpoint.c:816 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [174])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 27 26 280 4 arch/arm/kernel/hw_breakpoint.c:816 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 170)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 4 -> ( 26 5)
;; lr  out 	 4 [r4] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  26 [29.0%] 
;; Succ edge  5 [71.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  4 [71.0%]  (fallthru)
(note 280 27 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 280 29 5 arch/arm/kernel/hw_breakpoint.c:816 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [174])
            (const_int 10 [0xa]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 281 5 arch/arm/kernel/hw_breakpoint.c:816 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 5 -> ( 27 6)
;; lr  out 	 4 [r4] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  27 [29.0%] 
;; Succ edge  6 [71.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 11 [fp] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 4 [r4] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  5 [71.0%]  (fallthru)
(note 281 29 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 281 31 6 arch/arm/kernel/hw_breakpoint.c:816 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 11 fp [174])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 35 6 arch/arm/kernel/hw_breakpoint.c:816 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 4 [r4] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  8 [29.0%] 
;; Succ edge  7 [71.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  6 [71.0%]  (fallthru)
(note 35 31 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 289 7 arch/arm/kernel/hw_breakpoint.c:826 (set (reg/v:SI 4 r4 [orig:163 ret ] [163])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(jump_insn 289 36 290 7 (set (pc)
        (label_ref 247)) 242 {*arm_jump} (nil))
;; End of basic block 7 -> ( 38)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  38 [100.0%] 

(barrier 290 289 39)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 11 [fp] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp]
;; live  in  	 4 [r4] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp]
;; live  kill	

;; Pred edge  6 [29.0%] 
(code_label 39 290 40 8 328 "" [1 uses])

(note 40 39 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(note 45 40 322 8 NOTE_INSN_DELETED)

(insn 322 45 312 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 312 322 313 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 2 r2 [177])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 313 312 50 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 2 r2 [177])
        (and:SI (reg:SI 2 r2 [177])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 50 313 41 8 arch/arm/kernel/hw_breakpoint.c:755 (set (reg/v:SI 7 r7 [orig:150 addr ] [150])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:167 regs ] [167])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 41 50 54 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg/v:SI 3 r3 [orig:152 __ptr ] [152])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 54 41 47 8 arch/arm/kernel/hw_breakpoint.c:758 (set (reg/v:SI 6 r6 [orig:147 i ] [147])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 47 54 51 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 1 r1 [orig:179 <variable>.cpu ] [179])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [177])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 51 47 53 8 arch/arm/kernel/hw_breakpoint.c:755 (set (reg:SI 2 r2 [181])
        (and:SI (reg/v:SI 7 r7 [orig:150 addr ] [150])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 51 117 8 arch/arm/kernel/hw_breakpoint.c:755 (set (reg:SI 11 fp [orig:133 shifttmp.1031 ] [133])
        (ashift:SI (reg:SI 11 fp [174])
            (reg:SI 2 r2 [181]))) 117 {*arm_shiftsi3} (nil))

(insn 117 53 42 8 arch/arm/kernel/hw_breakpoint.c:758 discrim 1 (set (reg/f:SI 9 r9 [241])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 42 117 319 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg/v:SI 3 r3 [orig:152 __ptr ] [152])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:152 __ptr ] [152])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8162996)) -1 (nil))

(insn 319 42 48 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg/f:SI 2 r2 [176])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)
        (nil)))

(insn 48 319 69 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 8 r8 [180])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:179 <variable>.cpu ] [179])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [176])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:179 <variable>.cpu ] [179])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 69 48 49 8 arch/arm/kernel/hw_breakpoint.c:770 (set (reg:SI 10 sl [242])
        (and:SI (reg/v:SI 7 r7 [orig:150 addr ] [150])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(insn 49 69 291 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 8 r8 [orig:146 D.24794 ] [146])
        (plus:SI (reg/v:SI 3 r3 [orig:152 __ptr ] [152])
            (reg:SI 8 r8 [180]))) 4 {*arm_addsi3} (nil))

(jump_insn 291 49 292 8 (set (pc)
        (label_ref 114)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 17)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  17 [100.0%] 

(barrier 292 291 116)

;; Start of basic block ( 17) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  17 [91.0%] 
(code_label 116 292 57 9 335 "" [1 uses])

(note 57 116 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(call_insn 58 57 61 9 include/linux/rcupdate.h:592 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_lock") [flags 0x41] <function_decl 0x10ce8580 __rcu_read_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 61 58 62 9 arch/arm/kernel/hw_breakpoint.c:761 (set (reg/v/f:SI 5 r5 [orig:151 bp ] [151])
        (mem/f:SI (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:147 i ] [147])
                    (const_int 4 [0x4]))
                (reg:SI 8 r8 [orig:146 D.24794 ] [146])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 9 arch/arm/kernel/hw_breakpoint.c:763 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:151 bp ] [151])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 63 62 64 9 arch/arm/kernel/hw_breakpoint.c:763 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
        (nil)))
;; End of basic block 9 -> ( 16 10)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [30.2%] 
;; Succ edge  10 [69.8%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  9 [69.8%]  (fallthru)
(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(note 65 64 68 10 NOTE_INSN_DELETED)

(note 68 65 66 10 NOTE_INSN_DELETED)

(insn 66 68 67 10 arch/arm/kernel/hw_breakpoint.c:769 (set (reg:SI 0 r0)
        (plus:SI (reg/v:SI 6 r6 [orig:147 i ] [147])
            (const_int 64 [0x40]))) 4 {*arm_addsi3} (nil))

(call_insn 67 66 70 10 arch/arm/kernel/hw_breakpoint.c:769 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("read_wb_reg") [flags 0x3] <function_decl 0x113d8280 read_wb_reg>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 70 67 71 10 arch/arm/kernel/hw_breakpoint.c:770 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (reg:SI 10 sl [242]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 71 70 72 10 arch/arm/kernel/hw_breakpoint.c:770 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
        (nil)))
;; End of basic block 10 -> ( 14 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  14 [86.3%] 
;; Succ edge  11 [13.7%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 11 [fp] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [13.7%]  (fallthru)
(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 73 72 76 11 NOTE_INSN_DELETED)

(note 76 73 79 11 NOTE_INSN_DELETED)

(note 79 76 81 11 NOTE_INSN_DELETED)

(note 81 79 74 11 NOTE_INSN_DELETED)

(insn 74 81 75 11 arch/arm/kernel/hw_breakpoint.c:774 (set (reg:SI 0 r0)
        (plus:SI (reg/v:SI 6 r6 [orig:147 i ] [147])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(call_insn 75 74 80 11 arch/arm/kernel/hw_breakpoint.c:774 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("read_wb_reg") [flags 0x3] <function_decl 0x113d8280 read_wb_reg>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 80 75 82 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (reg:SI 0 r0 [188])
        (zero_extract:SI (reg:SI 0 r0)
            (const_int 8 [0x8])
            (const_int 5 [0x5]))) 124 {extzv_t2} (nil))

(insn 82 80 83 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (parallel [
            (set (reg:CC_NOOV 24 cc)
                (compare:CC_NOOV (and:SI (reg:SI 0 r0 [188])
                        (reg:SI 11 fp [orig:133 shifttmp.1031 ] [133]))
                    (const_int 0 [0x0])))
            (clobber (scratch:SI))
        ]) 70 {*andsi3_compare0_scratch} (nil))

(jump_insn 83 82 84 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 11 -> ( 12 14)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  14 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  11 [29.0%]  (fallthru)
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 12 arch/arm/kernel/hw_breakpoint.c:777 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 bp ] [151])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
        (reg/v:SI 7 r7 [orig:150 addr ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 12 arch/arm/kernel/hw_breakpoint.c:779 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:151 bp ] [151])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 12 arch/arm/kernel/hw_breakpoint.c:779 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:167 regs ] [167])) 167 {*arm_movsi_insn} (nil))

(call_insn 88 87 89 12 arch/arm/kernel/hw_breakpoint.c:779 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_bp_event") [flags 0x41] <function_decl 0x113b1280 perf_bp_event>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 89 88 90 12 arch/arm/kernel/hw_breakpoint.c:780 (set (reg/f:SI 3 r3 [orig:190 <variable>.overflow_handler ] [190])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 bp ] [151])
                (const_int 528 [0x210])) [0 <variable>.overflow_handler+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:151 bp ] [151])
                (const_int 528 [0x210])) [0 <variable>.overflow_handler+0 S4 A64])
        (nil)))

(insn 90 89 91 12 arch/arm/kernel/hw_breakpoint.c:780 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:190 <variable>.overflow_handler ] [190])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 91 90 92 12 arch/arm/kernel/hw_breakpoint.c:780 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))
;; End of basic block 12 -> ( 13 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  13 [6.7%]  (fallthru)
;; Succ edge  16 [93.3%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  12 [6.7%]  (fallthru)
(note 92 91 93 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 13 arch/arm/kernel/hw_breakpoint.c:781 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:151 bp ] [151])) 167 {*arm_movsi_insn} (nil))

(insn 94 93 95 13 arch/arm/kernel/hw_breakpoint.c:781 (set (reg:SI 1 r1)
        (reg/v:SI 7 r7 [orig:150 addr ] [150])) 167 {*arm_movsi_insn} (nil))

(call_insn 95 94 293 13 arch/arm/kernel/hw_breakpoint.c:781 (parallel [
            (call (mem:SI (symbol_ref:SI ("enable_single_step") [flags 0x3] <function_decl 0x1141a780 enable_single_step>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 293 95 294 13 (set (pc)
        (label_ref 110)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 16)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 294 293 98)

;; Start of basic block ( 10 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  10 [86.3%] 
;; Pred edge  11 [71.0%] 
(code_label 98 294 99 14 334 ("mismatch") [2 uses])

(note 99 98 102 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(note 102 99 103 14 NOTE_INSN_DELETED)

(note 103 102 104 14 NOTE_INSN_DELETED)

(note 104 103 100 14 NOTE_INSN_DELETED)

(insn 100 104 105 14 arch/arm/kernel/hw_breakpoint.c:787 (set (reg:SI 3 r3 [192])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 5 r5 [orig:151 bp ] [151])
                    (const_int 211 [0xd3])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 105 100 106 14 arch/arm/kernel/hw_breakpoint.c:787 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [192])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 106 105 107 14 arch/arm/kernel/hw_breakpoint.c:787 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil)))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  15 [29.0%]  (fallthru)
;; Succ edge  16 [71.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  14 [29.0%]  (fallthru)
(note 107 106 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 15 arch/arm/kernel/hw_breakpoint.c:788 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:151 bp ] [151])) 167 {*arm_movsi_insn} (nil))

(call_insn 109 108 110 15 arch/arm/kernel/hw_breakpoint.c:788 (parallel [
            (call (mem:SI (symbol_ref:SI ("disable_single_step") [flags 0x3] <function_decl 0x1141a880 disable_single_step>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 15 -> ( 16)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 9 12 15 14 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	 14 [lr]

;; Pred edge  9 [30.2%] 
;; Pred edge  12 [93.3%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [71.0%] 
;; Pred edge  13 [100.0%] 
(code_label 110 109 111 16 333 "" [4 uses])

(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn 112 111 113 16 include/linux/rcupdate.h:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_unlock") [flags 0x41] <function_decl 0x10ce8600 __rcu_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 113 112 114 16 arch/arm/kernel/hw_breakpoint.c:758 (set (reg/v:SI 6 r6 [orig:147 i ] [147])
        (plus:SI (reg/v:SI 6 r6 [orig:147 i ] [147])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp]


;; Succ edge  17 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 16 8) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 9 [r9] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  16 [100.0%]  (fallthru,dfs_back)
;; Pred edge  8 [100.0%] 
(code_label 114 113 115 17 332 "" [1 uses])

(note 115 114 118 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 118 115 119 17 arch/arm/kernel/hw_breakpoint.c:758 discrim 1 (set (reg:SI 3 r3 [orig:197 core_num_brps ] [197])
        (mem/c/i:SI (plus:SI (reg/f:SI 9 r9 [241])
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 9 r9 [241])
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
            (nil))))

(insn 119 118 120 17 arch/arm/kernel/hw_breakpoint.c:758 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:147 i ] [147])
            (reg:SI 3 r3 [orig:197 core_num_brps ] [197]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 120 119 121 17 arch/arm/kernel/hw_breakpoint.c:758 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 116)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 17 -> ( 9 18)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 11 [fp] 13 [sp] 14 [lr]


;; Succ edge  9 [91.0%] 
;; Succ edge  18 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6]
;; live  in  	 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6]
;; live  kill	

;; Pred edge  17 [9.0%]  (fallthru,loop_exit)
(note 121 120 127 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 127 121 323 18 NOTE_INSN_DELETED)

(insn 323 127 310 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 310 323 311 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 2 r2 [201])
        (and:SI (reg:SI 1 r1)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 311 310 123 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 2 r2 [201])
        (and:SI (reg:SI 2 r2 [201])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 123 311 124 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg/v:SI 3 r3 [orig:156 __ptr ] [156])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))
        (nil)))

(insn 124 123 129 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg/v:SI 3 r3 [orig:156 __ptr ] [156])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:156 __ptr ] [156])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8158644)) -1 (nil))

(insn 129 124 132 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 1 r1 [orig:203 <variable>.cpu ] [203])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [201])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 132 129 163 18 arch/arm/kernel/hw_breakpoint.c:720 (set (reg/v:SI 4 r4 [orig:158 i ] [158])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 163 132 318 18 arch/arm/kernel/hw_breakpoint.c:720 discrim 1 (set (reg/f:SI 6 r6 [240])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 318 163 130 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg/f:SI 2 r2 [200])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)
        (nil)))

(insn 130 318 131 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 5 r5 [204])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:203 <variable>.cpu ] [203])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [200])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 1 r1 [orig:203 <variable>.cpu ] [203])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 131 130 295 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 5 r5 [orig:159 D.24759 ] [159])
        (plus:SI (reg/v:SI 3 r3 [orig:156 __ptr ] [156])
            (reg:SI 5 r5 [204]))) 4 {*arm_addsi3} (nil))

(jump_insn 295 131 296 18 (set (pc)
        (label_ref 160)) 242 {*arm_jump} (nil))
;; End of basic block 18 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  24 [100.0%] 

(barrier 296 295 162)

;; Start of basic block ( 24) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  24 [91.0%] 
(code_label 162 296 135 19 338 "" [1 uses])

(note 135 162 136 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(call_insn 136 135 138 19 include/linux/rcupdate.h:592 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_lock") [flags 0x41] <function_decl 0x10ce8580 __rcu_read_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 138 136 139 19 arch/arm/kernel/hw_breakpoint.c:723 (set (reg/v/f:SI 0 r0 [orig:157 wp ] [157])
        (mem/f:SI (plus:SI (mult:SI (reg/v:SI 4 r4 [orig:158 i ] [158])
                    (const_int 4 [0x4]))
                (reg:SI 5 r5 [orig:159 D.24759 ] [159])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 139 138 140 19 arch/arm/kernel/hw_breakpoint.c:725 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:157 wp ] [157])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 140 139 141 19 arch/arm/kernel/hw_breakpoint.c:725 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
        (nil)))
;; End of basic block 19 -> ( 23 20)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  23 [15.0%] 
;; Succ edge  20 [85.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  19 [85.0%]  (fallthru)
(note 141 140 144 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(note 144 141 145 20 NOTE_INSN_DELETED)

(note 145 144 146 20 NOTE_INSN_DELETED)

(note 146 145 142 20 NOTE_INSN_DELETED)

(insn 142 146 147 20 arch/arm/kernel/hw_breakpoint.c:729 (set (reg:SI 3 r3 [207])
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 0 r0 [orig:157 wp ] [157])
                    (const_int 211 [0xd3])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 147 142 148 20 arch/arm/kernel/hw_breakpoint.c:729 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [207])
                (const_int 1 [0x1])
                (const_int 7 [0x7]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 148 147 149 20 arch/arm/kernel/hw_breakpoint.c:729 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  23 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  20 [50.0%]  (fallthru)
(note 149 148 150 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 21 arch/arm/kernel/hw_breakpoint.c:736 (set (reg:SI 3 r3 [orig:211 <variable>.hw.D.22650.D.22649.info.trigger ] [211])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:157 wp ] [157])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:157 wp ] [157])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
        (nil)))

(insn 151 150 152 21 arch/arm/kernel/hw_breakpoint.c:736 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:211 <variable>.hw.D.22650.D.22649.info.trigger ] [211])
            (reg/v:SI 7 r7 [orig:150 addr ] [150]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 152 151 153 21 arch/arm/kernel/hw_breakpoint.c:736 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4877 [0x130d])
        (nil)))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  22 [51.2%]  (fallthru)
;; Succ edge  23 [48.8%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  21 [51.2%]  (fallthru)
(note 153 152 155 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(call_insn 155 153 156 22 arch/arm/kernel/hw_breakpoint.c:737 (parallel [
            (call (mem:SI (symbol_ref:SI ("disable_single_step") [flags 0x3] <function_decl 0x1141a880 disable_single_step>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 22 -> ( 23)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 19 20 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  19 [15.0%] 
;; Pred edge  20 [50.0%] 
;; Pred edge  21 [48.8%] 
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 156 155 157 23 337 "" [3 uses])

(note 157 156 158 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(call_insn 158 157 159 23 include/linux/rcupdate.h:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_unlock") [flags 0x41] <function_decl 0x10ce8600 __rcu_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 159 158 160 23 arch/arm/kernel/hw_breakpoint.c:720 (set (reg/v:SI 4 r4 [orig:158 i ] [158])
        (plus:SI (reg/v:SI 4 r4 [orig:158 i ] [158])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  24 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 23 18) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 6 [r6] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  23 [100.0%]  (fallthru,dfs_back)
;; Pred edge  18 [100.0%] 
(code_label 160 159 161 24 336 "" [1 uses])

(note 161 160 164 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 164 161 165 24 arch/arm/kernel/hw_breakpoint.c:720 discrim 1 (set (reg:SI 3 r3 [orig:213 core_num_reserved_brps ] [213])
        (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [240])
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 6 r6 [240])
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 core_num_reserved_brps+0 S4 A32])
            (nil))))

(insn 165 164 166 24 arch/arm/kernel/hw_breakpoint.c:720 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 4 r4 [orig:158 i ] [158])
            (reg:SI 3 r3 [orig:213 core_num_reserved_brps ] [213]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 166 165 297 24 arch/arm/kernel/hw_breakpoint.c:720 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 24 -> ( 19 25)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  19 [91.0%] 
;; Succ edge  25 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  24 [9.0%]  (fallthru,loop_exit)
(note 297 166 298 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(jump_insn 298 297 299 25 (set (pc)
        (label_ref 244)) 242 {*arm_jump} (nil))
;; End of basic block 25 -> ( 37)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  37 [100.0%] 

(barrier 299 298 170)

;; Start of basic block ( 4) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  4 [29.0%] 
(code_label 170 299 171 26 329 "" [1 uses])

(note 171 170 175 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 175 171 176 26 arch/arm/kernel/hw_breakpoint.c:821 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 176 175 177 26 arch/arm/kernel/hw_breakpoint.c:821 discrim 1 (set (reg:SI 1 r1)
        (const_int 821 [0x335])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 821 [0x335])
        (nil)))

(insn 177 176 178 26 arch/arm/kernel/hw_breakpoint.c:821 discrim 1 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x115f0620>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x115f0620>)
        (nil)))

(call_insn 178 177 179 26 arch/arm/kernel/hw_breakpoint.c:821 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 26 -> ( 27)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 26 5) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 7 [r7] 8 [r8] 24 [cc]
;; live  kill	

;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  5 [29.0%] 
(code_label 179 178 180 27 330 "" [1 uses])

(note 180 179 186 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(note 186 180 324 27 NOTE_INSN_DELETED)

(insn 324 186 307 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 307 324 191 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 2 r2 [220])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 191 307 308 27 arch/arm/kernel/hw_breakpoint.c:678 (set (reg/f:SI 7 r7 [224])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 308 191 182 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 2 r2 [220])
        (and:SI (reg:SI 2 r2 [220])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 182 308 188 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg/v:SI 3 r3 [orig:144 __ptr ] [144])
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))
        (nil)))

(insn 188 182 192 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 0 r0 [orig:222 <variable>.cpu ] [222])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [220])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 192 188 183 27 arch/arm/kernel/hw_breakpoint.c:678 (set (reg:SI 2 r2 [orig:225 core_num_wrps ] [225])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 r7 [224])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 7 r7 [224])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 core_num_wrps+0 S4 A32])
            (nil))))

(insn 183 192 317 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg/v:SI 3 r3 [orig:144 __ptr ] [144])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:144 __ptr ] [144])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8153140)) -1 (nil))

(insn 317 183 189 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg/f:SI 1 r1 [219])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)
        (nil)))

(insn 189 317 193 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 8 r8 [223])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 0 r0 [orig:222 <variable>.cpu ] [222])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [219])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 0 r0 [orig:222 <variable>.cpu ] [222])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
        (nil)))

(insn 193 189 190 27 arch/arm/kernel/hw_breakpoint.c:678 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 2 r2 [orig:225 core_num_wrps ] [225])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(insn 190 193 194 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 8 r8 [orig:141 D.24819 ] [141])
        (plus:SI (reg/v:SI 3 r3 [orig:144 __ptr ] [144])
            (reg:SI 8 r8 [223]))) 4 {*arm_addsi3} (nil))

(jump_insn 194 190 195 27 arch/arm/kernel/hw_breakpoint.c:678 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 199)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 4 [0x4])
        (nil)))
;; End of basic block 27 -> ( 29 28)
;; lr  out 	 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  29 [0.0%] 
;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  27 [100.0%]  (fallthru)
(note 195 194 196 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 196 195 300 28 arch/arm/kernel/hw_breakpoint.c:678 (set (reg/v:SI 6 r6 [orig:142 i ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(jump_insn 300 196 301 28 (set (pc)
        (label_ref 237)) 242 {*arm_jump} (nil))
;; End of basic block 28 -> ( 36)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  36 [100.0%] 

(barrier 301 300 199)

;; Start of basic block ( 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  27 [0.0%] 
(code_label 199 301 200 29 340 "" [1 uses])

(note 200 199 203 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 203 200 204 29 arch/arm/kernel/hw_breakpoint.c:678 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 204 203 205 29 arch/arm/kernel/hw_breakpoint.c:678 discrim 1 (set (reg:SI 1 r1)
        (const_int 678 [0x2a6])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 678 [0x2a6])
        (nil)))

(call_insn 205 204 206 29 arch/arm/kernel/hw_breakpoint.c:678 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a7a780 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 29 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 206 205 239)

;; Start of basic block ( 36) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 6 [r6] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  36 [91.0%] 
(code_label 239 206 207 30 345 "" [1 uses])

(note 207 239 208 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(call_insn 208 207 210 30 include/linux/rcupdate.h:592 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_lock") [flags 0x41] <function_decl 0x10ce8580 __rcu_read_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 210 208 211 30 arch/arm/kernel/hw_breakpoint.c:683 (set (reg/v/f:SI 5 r5 [orig:143 wp ] [143])
        (mem/f:SI (plus:SI (mult:SI (reg/v:SI 6 r6 [orig:142 i ] [142])
                    (const_int 4 [0x4]))
                (reg:SI 8 r8 [orig:141 D.24819 ] [141])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 211 210 212 30 arch/arm/kernel/hw_breakpoint.c:685 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:143 wp ] [143])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 212 211 213 30 arch/arm/kernel/hw_breakpoint.c:685 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
        (nil)))
;; End of basic block 30 -> ( 31 32)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  31 [15.0%]  (fallthru)
;; Succ edge  32 [85.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  30 [15.0%]  (fallthru)
(note 213 212 214 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(call_insn 214 213 302 31 include/linux/rcupdate.h:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_unlock") [flags 0x41] <function_decl 0x10ce8600 __rcu_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 302 214 303 31 (set (pc)
        (label_ref 234)) 242 {*arm_jump} (nil))
;; End of basic block 31 -> ( 35)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  35 [100.0%] 

(barrier 303 302 217)

;; Start of basic block ( 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  30 [85.0%] 
(code_label 217 303 218 32 342 "" [1 uses])

(note 218 217 219 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 219 218 221 32 arch/arm/kernel/hw_breakpoint.c:696 (set (reg:SI 3 r3 [orig:229 <variable>.attr.D.4023.bp_addr ] [229])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 wp ] [143])
                (const_int 176 [0xb0])) [0 <variable>.attr.D.4023.bp_addr+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 wp ] [143])
                (const_int 176 [0xb0])) [0 <variable>.attr.D.4023.bp_addr+0 S4 A64])
        (nil)))

(insn 221 219 222 32 arch/arm/kernel/hw_breakpoint.c:698 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:143 wp ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 222 221 220 32 arch/arm/kernel/hw_breakpoint.c:698 (set (reg:SI 1 r1)
        (reg/v/f:SI 4 r4 [orig:167 regs ] [167])) 167 {*arm_movsi_insn} (nil))

(insn 220 222 223 32 arch/arm/kernel/hw_breakpoint.c:696 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 wp ] [143])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
        (reg:SI 3 r3 [orig:229 <variable>.attr.D.4023.bp_addr ] [229])) 167 {*arm_movsi_insn} (nil))

(call_insn 223 220 224 32 arch/arm/kernel/hw_breakpoint.c:698 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_bp_event") [flags 0x41] <function_decl 0x113b1280 perf_bp_event>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 224 223 225 32 arch/arm/kernel/hw_breakpoint.c:705 (set (reg/f:SI 3 r3 [orig:230 <variable>.overflow_handler ] [230])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 wp ] [143])
                (const_int 528 [0x210])) [0 <variable>.overflow_handler+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 5 r5 [orig:143 wp ] [143])
                (const_int 528 [0x210])) [0 <variable>.overflow_handler+0 S4 A64])
        (nil)))

(insn 225 224 226 32 arch/arm/kernel/hw_breakpoint.c:705 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:230 <variable>.overflow_handler ] [230])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 226 225 227 32 arch/arm/kernel/hw_breakpoint.c:705 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 231)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
        (nil)))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  33 [6.7%]  (fallthru)
;; Succ edge  34 [93.3%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  32 [6.7%]  (fallthru)
(note 227 226 228 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 228 227 229 33 arch/arm/kernel/hw_breakpoint.c:706 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:143 wp ] [143])) 167 {*arm_movsi_insn} (nil))

(insn 229 228 230 33 arch/arm/kernel/hw_breakpoint.c:706 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:167 regs ] [167])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 230 229 231 33 arch/arm/kernel/hw_breakpoint.c:706 (parallel [
            (call (mem:SI (symbol_ref:SI ("enable_single_step") [flags 0x3] <function_decl 0x1141a780 enable_single_step>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 33 -> ( 34)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 32 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  32 [93.3%] 
;; Pred edge  33 [100.0%]  (fallthru)
(code_label 231 230 232 34 344 "" [1 uses])

(note 232 231 233 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(call_insn 233 232 234 34 include/linux/rcupdate.h:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_unlock") [flags 0x41] <function_decl 0x10ce8600 __rcu_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 34 -> ( 35)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 34 31) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 6 [r6]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]
;; live  gen 	 6 [r6]
;; live  kill	

;; Pred edge  34 [100.0%]  (fallthru)
;; Pred edge  31 [100.0%] 
(code_label 234 233 235 35 343 "" [1 uses])

(note 235 234 236 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 35 arch/arm/kernel/hw_breakpoint.c:680 (set (reg/v:SI 6 r6 [orig:142 i ] [142])
        (plus:SI (reg/v:SI 6 r6 [orig:142 i ] [142])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 35 -> ( 36)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp]


;; Succ edge  36 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 35 28) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  35 [100.0%]  (fallthru,dfs_back)
;; Pred edge  28 [100.0%] 
(code_label 237 236 238 36 341 "" [1 uses])

(note 238 237 241 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 241 238 242 36 arch/arm/kernel/hw_breakpoint.c:680 discrim 1 (set (reg:SI 3 r3 [orig:232 core_num_wrps ] [232])
        (mem/c/i:SI (plus:SI (reg/f:SI 7 r7 [239])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/c/i:SI (plus:SI (reg/f:SI 7 r7 [239])
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 core_num_wrps+0 S4 A32])
            (nil))))

(insn 242 241 243 36 arch/arm/kernel/hw_breakpoint.c:680 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 6 r6 [orig:142 i ] [142])
            (reg:SI 3 r3 [orig:232 core_num_wrps ] [232]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 243 242 244 36 arch/arm/kernel/hw_breakpoint.c:680 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 239)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil)))
;; End of basic block 36 -> ( 30 37)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 13 [sp] 14 [lr]


;; Succ edge  30 [91.0%] 
;; Succ edge  37 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 36 25) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  36 [9.0%]  (fallthru,loop_exit)
;; Pred edge  25 [100.0%] 
(code_label 244 243 245 37 339 "" [1 uses])

(note 245 244 246 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 246 245 247 37 arch/arm/kernel/hw_breakpoint.c:804 (set (reg/v:SI 4 r4 [orig:163 ret ] [163])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 37 -> ( 38)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 37 7) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
(code_label 247 246 248 38 331 "" [1 uses])

(note 248 247 251 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(note 251 248 261 38 NOTE_INSN_DELETED)

(note 261 251 249 38 NOTE_INSN_DELETED)

(insn 249 261 325 38 arch/arm/kernel/hw_breakpoint.c:829 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8172822)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 325 249 304 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 1 r1)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 304 325 305 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:140 D.24829 ] [140])
        (and:SI (reg:SI 1 r1)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 305 304 253 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 3 r3 [orig:140 D.24829 ] [140])
        (and:SI (reg/f:SI 3 r3 [orig:140 D.24829 ] [140])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 253 305 254 38 arch/arm/kernel/hw_breakpoint.c:829 (set (reg:SI 2 r2 [orig:234 <variable>.preempt_count ] [234])
        (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.24829 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.24829 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 254 253 255 38 arch/arm/kernel/hw_breakpoint.c:829 (set (reg:SI 2 r2 [235])
        (plus:SI (reg:SI 2 r2 [orig:234 <variable>.preempt_count ] [234])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_EQUIV (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.24829 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (nil)))

(insn 255 254 256 38 arch/arm/kernel/hw_breakpoint.c:829 (set (mem/s/j:SI (plus:SI (reg/f:SI 3 r3 [orig:140 D.24829 ] [140])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 2 r2 [235])) 167 {*arm_movsi_insn} (nil))

(insn 256 255 260 38 arch/arm/kernel/hw_breakpoint.c:829 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8172822)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 260 256 262 38 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 3 r3 [orig:137 D.24847 ] [137])
        (mem/v:SI (reg/f:SI 3 r3 [orig:140 D.24829 ] [140]) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 262 260 263 38 arch/arm/kernel/hw_breakpoint.c:829 (set (reg:CC_NOOV 24 cc)
        (compare:CC_NOOV (zero_extract:SI (reg:SI 3 r3 [orig:137 D.24847 ] [137])
                (const_int 1 [0x1])
                (const_int 1 [0x1]))
            (const_int 0 [0x0]))) 71 {*zeroextractsi_compare0_scratch} (nil))

(jump_insn 263 262 264 38 arch/arm/kernel/hw_breakpoint.c:829 (set (pc)
        (if_then_else (eq (reg:CC_NOOV 24 cc)
                (const_int 0 [0x0]))
            (label_ref 266)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 38 -> ( 39 40)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  39 [0.0%]  (fallthru)
;; Succ edge  40 [100.0%] 

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  38 [0.0%]  (fallthru)
(note 264 263 265 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(call_insn 265 264 266 39 arch/arm/kernel/hw_breakpoint.c:829 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a59380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 39 -> ( 40)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 38 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  38 [100.0%] 
;; Pred edge  39 [100.0%]  (fallthru)
(code_label 266 265 267 40 346 "" [1 uses])

(note 267 266 272 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 272 267 278 40 arch/arm/kernel/hw_breakpoint.c:832 (set (reg/i:SI 0 r0)
        (reg/v:SI 4 r4 [orig:163 ret ] [163])) 167 {*arm_movsi_insn} (nil))

(insn 278 272 316 40 arch/arm/kernel/hw_breakpoint.c:832 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 40 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 316 278 320 NOTE_INSN_DELETED)

(note 320 316 0 NOTE_INSN_DELETED)

