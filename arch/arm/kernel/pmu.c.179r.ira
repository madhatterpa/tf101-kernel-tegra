
;; Function register_pmu_driver (register_pmu_driver)[0:698] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs




Pass 1 for finding allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
Compressing live ranges: from 5 to 0 - 0%
Ranges after the compression:
+++Allocating 0 bytes for conflict table (uncompressed size 0)

  regions=1, blocks=3, points=0
    allocnos=0, copies=0, conflicts=0, ranges=0

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 2
    all:
    modified regnos:
    border:
    Pressure: GENERAL_REGS=2
Disposition:
New iteration of spill/restore move
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 13, 14, dead_or_set: 0
insn=7, live_throughout: 13, 14, dead_or_set: 0


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


register_pmu_driver

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 13[sp]
;;  ref usage 	r0={3d,2u} r1={2d} r2={2d} r3={2d} r12={2d} r13={1d,3u} r14={1d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 130{124d,6u,0e} in 2{1 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(note 5 2 6 2 NOTE_INSN_DELETED)

(insn 6 5 7 2 arch/arm/kernel/pmu.c:110 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(call_insn/j 7 6 8 2 arch/arm/kernel/pmu.c:110 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_driver_register") [flags 0x41] <function_decl 0x10f21b80 platform_driver_register>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 8 7 21)

(note 21 8 0 NOTE_INSN_DELETED)


;; Function init_pmu (init_pmu)[0:703]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 33 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 36 (  2.1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a11 (r157,l1) best GENERAL_REGS, cover GENERAL_REGS
    a6 (r157,l0) best GENERAL_REGS, cover GENERAL_REGS
    a14 (r150,l1) best GENERAL_REGS, cover GENERAL_REGS
    a16 (r147,l1) best GENERAL_REGS, cover GENERAL_REGS
    a17 (r146,l1) best GENERAL_REGS, cover GENERAL_REGS
    a7 (r145,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r144,l0) best GENERAL_REGS, cover GENERAL_REGS
    a13 (r142,l1) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r142,l0) best GENERAL_REGS, cover GENERAL_REGS
    a15 (r141,l1) best GENERAL_REGS, cover GENERAL_REGS
    a10 (r140,l1) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r140,l0) best GENERAL_REGS, cover GENERAL_REGS
    a9 (r139,l1) best GENERAL_REGS, cover GENERAL_REGS
    a5 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a8 (r138,l1) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a12 (r137,l1) best GENERAL_REGS, cover GENERAL_REGS
    a3 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a9(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r157,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000


Pass 1 for finding allocno costs

    r157: preferred GENERAL_REGS, alternative NO_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS

  a0(r142,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r144,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a4(r140,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a5(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a6(r157,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a7(r145,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a8(r138,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:60000
  a9(r139,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a10(r140,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a11(r157,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a12(r137,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a13(r142,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000
  a14(r150,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a15(r141,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a16(r147,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a17(r146,l1) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000

   Insn 109(l0): point = 0
   Insn 103(l0): point = 2
   Insn 96(l0): point = 5
   Insn 147(l0): point = 8
   Insn 91(l0): point = 10
   Insn 90(l0): point = 12
   Insn 88(l0): point = 14
   Insn 89(l0): point = 16
   Insn 145(l0): point = 19
   Insn 142(l0): point = 22
   Insn 71(l0): point = 24
   Insn 68(l0): point = 26
   Insn 70(l0): point = 28
   Insn 69(l0): point = 30
   Insn 140(l0): point = 33
   Insn 40(l0): point = 36
   Insn 39(l0): point = 38
   Insn 37(l0): point = 40
   Insn 34(l0): point = 42
   Insn 32(l0): point = 44
   Insn 33(l0): point = 46
   Insn 137(l0): point = 49
   Insn 54(l0): point = 51
   Insn 27(l0): point = 53
   Insn 25(l0): point = 56
   Insn 24(l0): point = 58
   Insn 23(l0): point = 60
   Insn 135(l0): point = 63
   Insn 18(l0): point = 65
   Insn 16(l0): point = 68
   Insn 15(l0): point = 70
   Insn 14(l0): point = 72
   Insn 13(l0): point = 74
   Insn 8(l0): point = 77
   Insn 7(l0): point = 79
   Insn 81(l1): point = 82
   Insn 80(l1): point = 84
   Insn 47(l1): point = 86
   Insn 48(l1): point = 88
   Insn 76(l1): point = 91
   Insn 65(l1): point = 94
   Insn 64(l1): point = 96
   Insn 62(l1): point = 98
   Insn 61(l1): point = 100
   Insn 55(l1): point = 102
   Insn 52(l1): point = 104
   Insn 56(l1): point = 106
   Insn 51(l1): point = 108
   Insn 50(l1): point = 110
   Insn 49(l1): point = 112
 a0(r142): [63..65] [22..32] [8..10] [3..5]
 a1(r144): [68..79] [56..62] [47..48] [17..18]
 a2(r138): [49..53] [29..32]
 a3(r137): [31..32]
 a4(r140): [68..72] [36..62]
 a5(r139): [36..60]
 a6(r157): [49..51]
 a7(r145): [73..74]
 a8(r138): [82..114]
 a9(r139): [82..114]
 a10(r140): [82..114]
 a11(r157): [82..114]
 a12(r137): [94..110]
 a13(r142): [94..96]
 a14(r150): [101..106]
 a15(r141): [101..102]
 a16(r147): [103..104]
 a17(r146): [105..108]
 Rebuilding regno allocno list for 150
 Rebuilding regno allocno list for 147
 Rebuilding regno allocno list for 146
 Rebuilding regno allocno list for 141
Compressing live ranges: from 115 to 38 - 33%
Ranges after the compression:
 a0(r142): [27..28] [19..20] [6..9] [2..3] [0..1]
 a1(r144): [21..25] [16..18] [11..12] [4..5]
 a2(r138): [26..37] [13..15] [7..9]
 a3(r137): [27..36] [8..9]
 a4(r140): [26..37] [21..22] [10..18]
 a5(r139): [26..37] [10..17]
 a6(r157): [26..37] [13..14]
 a7(r145): [23..24]
 a14(r150): [29..34]
 a15(r141): [29..30]
 a16(r147): [31..32]
 a17(r146): [33..35]
+++Allocating 96 bytes for conflict table (uncompressed size 144)
;; a0(r142,l0) conflicts: a2(r138,l0) a3(r137,l0) a4(r140,l0) a5(r139,l0) a6(r157,l0)
;;     total conflict hard regs: 0-2 14
;;     conflict hard regs: 0-2 14
;; a1(r144,l0) conflicts: a4(r140,l0) a5(r139,l0) a7(r145,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r138,l0) conflicts: a0(r142,l0) a3(r137,l0) a4(r140,l0) a5(r139,l0) a6(r157,l0) a15(r141,l0) a14(r150,l0) a16(r147,l0) a17(r146,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r137,l0) conflicts: a0(r142,l0) a2(r138,l0) a4(r140,l0) a5(r139,l0) a6(r157,l0) a15(r141,l0) a14(r150,l0) a16(r147,l0) a17(r146,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a4(r140,l0) conflicts: a0(r142,l0) a1(r144,l0) a2(r138,l0) a3(r137,l0) a5(r139,l0) a6(r157,l0) a15(r141,l0) a14(r150,l0) a16(r147,l0) a17(r146,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a5(r139,l0) conflicts: a0(r142,l0) a1(r144,l0) a2(r138,l0) a3(r137,l0) a4(r140,l0) a6(r157,l0) a15(r141,l0) a14(r150,l0) a16(r147,l0) a17(r146,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a6(r157,l0) conflicts: a0(r142,l0) a2(r138,l0) a3(r137,l0) a4(r140,l0) a5(r139,l0) a15(r141,l0) a14(r150,l0) a16(r147,l0) a17(r146,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a7(r145,l0) conflicts: a1(r144,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a14(r150,l0) conflicts: a2(r138,l0) a3(r137,l0) a4(r140,l0) a5(r139,l0) a6(r157,l0) a15(r141,l0) a16(r147,l0) a17(r146,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a15(r141,l0) conflicts: a2(r138,l0) a3(r137,l0) a4(r140,l0) a5(r139,l0) a6(r157,l0) a14(r150,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a16(r147,l0) conflicts: a2(r138,l0) a3(r137,l0) a4(r140,l0) a5(r139,l0) a6(r157,l0) a14(r150,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a17(r146,l0) conflicts: a2(r138,l0) a3(r137,l0) a4(r140,l0) a5(r139,l0) a6(r157,l0) a14(r150,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

  cp0:a16(r147)<->a17(r146)@125:shuffle
  cp1:a15(r141)<->a16(r147)@125:shuffle
  regions=2, blocks=17, points=38
    allocnos=18, copies=2, conflicts=1, ranges=26

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 16 15 14 13 10 12 11 9 8 7 6 5 4 3 2
    all: 0r142 1r144 2r138 3r137 4r140 5r139 6r157 7r145 14r150 15r141 16r147 17r146
    modified regnos: 137 138 139 140 141 142 144 145 146 147 150 157
    border:
    Pressure: GENERAL_REGS=8
    Reg 142 of GENERAL_REGS has 4 regs less
    Reg 144 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 137 of GENERAL_REGS has 3 regs less
    Reg 140 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
    Reg 157 of GENERAL_REGS has 3 regs less
    Reg 145 of GENERAL_REGS has 1 regs less
    Reg 150 of GENERAL_REGS has 1 regs less
    Reg 141 of GENERAL_REGS has 1 regs less
    Reg 147 of GENERAL_REGS has 1 regs less
    Reg 146 of GENERAL_REGS has 1 regs less
      Pushing a17(r146,l0)
      Pushing a16(r147,l0)
      Pushing a15(r141,l0)
      Pushing a14(r150,l0)
      Pushing a7(r145,l0)
      Pushing a1(r144,l0)
      Pushing a6(r157,l0)
      Pushing a3(r137,l0)
      Pushing a5(r139,l0)
      Pushing a4(r140,l0)
      Pushing a2(r138,l0)
      Pushing a0(r142,l0)
      Popping a0(r142,l0)  -- assign reg 4
      Popping a2(r138,l0)  -- assign reg 5
      Popping a4(r140,l0)  -- assign reg 6
      Popping a5(r139,l0)  -- assign reg 7
      Popping a3(r137,l0)  -- assign reg 8
      Popping a6(r157,l0)  -- assign reg 10
      Popping a1(r144,l0)  -- assign reg 1
      Popping a7(r145,l0)  -- assign reg 3
      Popping a14(r150,l0)  -- assign reg 3
      Popping a15(r141,l0)  -- assign reg 1
      Popping a16(r147,l0)  -- assign reg 1
      Popping a17(r146,l0)  -- assign reg 1
Disposition:
    3:r137 l0     8    2:r138 l0     5    5:r139 l0     7    4:r140 l0     6
   15:r141 l0     1    0:r142 l0     4    1:r144 l0     1    7:r145 l0     3
   17:r146 l0     1   16:r147 l0     1   14:r150 l0     3    6:r157 l0    10
New iteration of spill/restore move
+++Costs: overall -8250, reg -8250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 13, 14, dead_or_set: 0, 144
insn=8, live_throughout: 13, 14, 144, dead_or_set: 
insn=11, live_throughout: 13, 14, 144, dead_or_set: 
insn=13, live_throughout: 13, 14, 144, dead_or_set: 145
insn=14, live_throughout: 13, 14, 144, dead_or_set: 140, 145
insn=15, live_throughout: 13, 14, 140, 144, dead_or_set: 
insn=16, live_throughout: 13, 14, 140, 144, dead_or_set: 
insn=18, live_throughout: 13, 14, dead_or_set: 142
insn=135, live_throughout: 13, 14, 142, dead_or_set: 
insn=21, live_throughout: 13, 14, 140, 144, dead_or_set: 
insn=23, live_throughout: 13, 14, 140, 144, dead_or_set: 139
insn=24, live_throughout: 13, 14, 139, 140, 144, dead_or_set: 
insn=25, live_throughout: 13, 14, 139, 140, 144, dead_or_set: 
insn=41, live_throughout: 13, 14, 139, 140, dead_or_set: 
insn=27, live_throughout: 13, 14, 139, 140, dead_or_set: 138
insn=54, live_throughout: 13, 14, 138, 139, 140, dead_or_set: 157
insn=137, live_throughout: 13, 14, 138, 139, 140, 157, dead_or_set: 
insn=30, live_throughout: 13, 139, 140, 144, dead_or_set: 
insn=33, live_throughout: 13, 139, 140, dead_or_set: 1, 144
insn=32, live_throughout: 1, 13, 139, 140, dead_or_set: 0
insn=34, live_throughout: 13, 139, 140, dead_or_set: 0, 1, 14
insn=37, live_throughout: 13, 139, 140, dead_or_set: 0, 14
insn=39, live_throughout: 13, 14, 139, 140, dead_or_set: 0
insn=40, live_throughout: 13, 14, 139, 140, dead_or_set: 
insn=140, live_throughout: 13, 14, dead_or_set: 
insn=79, live_throughout: 0, 1, 13, 138, 139, 140, 157, dead_or_set: 
insn=49, live_throughout: 13, 138, 139, 140, 157, dead_or_set: 0, 1, 14
insn=50, live_throughout: 0, 13, 138, 139, 140, 157, dead_or_set: 137
insn=51, live_throughout: 0, 13, 137, 138, 139, 140, 157, dead_or_set: 146
insn=56, live_throughout: 0, 13, 137, 138, 139, 140, 146, 157, dead_or_set: 150
insn=52, live_throughout: 0, 13, 137, 138, 139, 140, 150, 157, dead_or_set: 146, 147
insn=55, live_throughout: 0, 13, 137, 138, 139, 140, 150, 157, dead_or_set: 141, 147
insn=61, live_throughout: 0, 13, 137, 138, 139, 140, 157, dead_or_set: 1, 141, 150
insn=62, live_throughout: 13, 137, 138, 139, 140, 157, dead_or_set: 0, 1, 14
insn=64, live_throughout: 13, 14, 137, 138, 139, 140, 157, dead_or_set: 0, 142
insn=65, live_throughout: 13, 14, 137, 138, 139, 140, 142, 157, dead_or_set: 
insn=69, live_throughout: 13, 138, 142, dead_or_set: 1, 137
insn=70, live_throughout: 1, 13, 142, dead_or_set: 2, 138
insn=68, live_throughout: 1, 2, 13, 142, dead_or_set: 0
insn=71, live_throughout: 13, 142, dead_or_set: 0, 1, 2, 14
insn=142, live_throughout: 13, 14, 142, dead_or_set: 
insn=74, live_throughout: 13, 14, 138, 139, 140, 157, dead_or_set: 
insn=76, live_throughout: 13, 14, 139, 140, 157, dead_or_set: 138
insn=77, live_throughout: 13, 14, 138, 139, 140, 157, dead_or_set: 
insn=48, live_throughout: 13, 14, 138, 139, 140, 157, dead_or_set: 1
insn=47, live_throughout: 1, 13, 14, 138, 139, 140, 157, dead_or_set: 0
insn=80, live_throughout: 0, 1, 13, 14, 138, 139, 140, 157, dead_or_set: 
insn=81, live_throughout: 0, 1, 13, 14, 138, 139, 140, 157, dead_or_set: 
insn=145, live_throughout: 13, 14, dead_or_set: 
insn=134, live_throughout: 13, 144, dead_or_set: 
insn=89, live_throughout: 13, dead_or_set: 1, 144
insn=88, live_throughout: 1, 13, dead_or_set: 0
insn=90, live_throughout: 13, dead_or_set: 0, 1, 14
insn=91, live_throughout: 13, 14, dead_or_set: 142
insn=147, live_throughout: 13, 14, 142, dead_or_set: 
insn=94, live_throughout: 13, 14, dead_or_set: 
insn=96, live_throughout: 13, 14, dead_or_set: 142
insn=97, live_throughout: 13, 14, 142, dead_or_set: 
insn=103, live_throughout: 13, 14, dead_or_set: 0, 142
insn=109, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 145: (insn_list:REG_DEP_TRUE 13 (nil))
init_insns for 157: (insn_list:REG_DEP_TRUE 54 (nil))
changing reg in insn 50
changing reg in insn 69
changing reg in insn 76
changing reg in insn 27
changing reg in insn 70
changing reg in insn 56
changing reg in insn 51
changing reg in insn 48
changing reg in insn 80
changing reg in insn 76
changing reg in insn 23
changing reg in insn 80
changing reg in insn 24
changing reg in insn 14
changing reg in insn 47
changing reg in insn 32
changing reg in insn 23
changing reg in insn 15
changing reg in insn 55
changing reg in insn 61
changing reg in insn 64
changing reg in insn 96
changing reg in insn 91
changing reg in insn 18
changing reg in insn 103
changing reg in insn 7
changing reg in insn 33
changing reg in insn 89
changing reg in insn 13
changing reg in insn 14
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 55
changing reg in insn 56
changing reg in insn 61
changing reg in insn 54
changing reg in insn 55
deleting insn with uid = 33.
deleting insn with uid = 89.


try_optimize_cfg iteration 1

deleting insn with uid = 11.
Deleted label in block 3.
Forwarding edge 7->8 to 15 failed.
Forwarding edge 12->13 to 15 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 37.
verify found no changes in insn with uid = 49.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 90.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 33 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 36 (  2.1)


init_pmu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 10[sl] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,14u} r1={14d,8u} r2={8d,1u} r3={9d,2u} r4={4d,1u} r5={2d,6u} r6={1d,4u} r7={1d,2u} r8={1d,1u} r10={1d,1u} r12={7d} r13={1d,22u} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={12d,6u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} 
;;    total ref usage 809{740d,69u,0e} in 48{42 regular + 6 call} insns.
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 5 4 2 NOTE_INSN_DELETED)

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/pmu.c:189 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0 [ type ])
                    (const_int 0 [0x0])))
            (set (reg/v:SI 1 r1 [orig:144 type ] [144])
                (reg:SI 0 r0 [ type ]))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 8 7 12 2 arch/arm/kernel/pmu.c:189 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 134)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 2 -> ( 3 14)
;; lr  out 	 1 [r1] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 13 [sp] 14 [lr]


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  14 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 6 [r6] 24 [cc]
;; live  in  	 1 [r1] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 6 [r6] 24 [cc]
;; live  kill	

;; Pred edge  2 [50.0%]  (fallthru)
(note 12 8 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 3 arch/arm/kernel/pmu.c:161 (set (reg/f:SI 3 r3 [145])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/pmu.c:161 (set (reg/v/f:SI 6 r6 [orig:140 pdev ] [140])
        (mem/s/f/j:SI (reg/f:SI 3 r3 [145]) [0 pmu_devices+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 pmu_devices+0 S4 A32])
        (nil)))

(insn 15 14 16 3 arch/arm/kernel/pmu.c:163 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 6 r6 [orig:140 pdev ] [140])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 17 3 arch/arm/kernel/pmu.c:163 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8986 [0x231a])
        (nil)))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 6 [r6] 13 [sp] 14 [lr]


;; Succ edge  4 [10.1%]  (fallthru)
;; Succ edge  5 [89.9%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  3 [10.1%]  (fallthru)
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 135 4 arch/arm/kernel/pmu.c:164 (set (reg/v:SI 4 r4 [orig:142 err ] [142])
        (const_int -19 [0xffffffffffffffed])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -19 [0xffffffffffffffed])
        (nil)))

(jump_insn 135 18 136 4 (set (pc)
        (label_ref 97)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  16 [100.0%] 

(barrier 136 135 21)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; lr  use 	 6 [r6] 13 [sp]
;; lr  def 	 7 [r7] 24 [cc]
;; live  in  	 1 [r1] 6 [r6] 13 [sp] 14 [lr]
;; live  gen 	 7 [r7] 24 [cc]
;; live  kill	

;; Pred edge  3 [89.9%] 
(code_label 21 136 22 5 8 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 5 arch/arm/kernel/pmu.c:166 (set (reg/v:SI 7 r7 [orig:139 irqs ] [139])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 6 r6 [orig:140 pdev ] [140])
                (const_int 368 [0x170])) [0 <variable>.num_resources+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 24 23 25 5 arch/arm/kernel/pmu.c:172 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 7 r7 [orig:139 irqs ] [139])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 25 24 41 5 arch/arm/kernel/pmu.c:172 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 30)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 1371 [0x55b])
        (nil)))
;; End of basic block 5 -> ( 7 6)
;; lr  out 	 1 [r1] 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 1 [r1] 6 [r6] 7 [r7] 13 [sp] 14 [lr]


;; Succ edge  7 [13.7%] 
;; Succ edge  6 [86.3%]  (fallthru)

;; Start of basic block ( 5 7) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 5 [r5] 10 [sl]
;; live  in  	 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  gen 	 5 [r5] 10 [sl]
;; live  kill	

;; Pred edge  5 [86.3%]  (fallthru)
;; Pred edge  7 [61.0%] 
(code_label 41 25 26 6 13 "" [1 uses])

(note 26 41 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 54 6 arch/arm/kernel/pmu.c:172 (set (reg/v:SI 5 r5 [orig:138 i ] [138])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 54 27 137 6 include/linux/cpumask.h:738 (set (reg/f:SI 10 sl [157])
        (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10ac7240 cpu_bit_bitmap>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10ac7240 cpu_bit_bitmap>)
        (nil)))

(jump_insn 137 54 138 6 (set (pc)
        (label_ref 77)) 242 {*arm_jump} (nil))
;; End of basic block 6 -> ( 12)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  12 [100.0%] 

(barrier 138 137 30)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 7 [r7] 13 [sp]
;; lr  use 	 1 [r1] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 6 [r6] 7 [r7] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  5 [13.7%] 
(code_label 30 138 31 7 10 "" [1 uses])

(note 31 30 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(note 38 31 32 7 NOTE_INSN_DELETED)

(insn 32 38 34 7 arch/arm/kernel/pmu.c:172 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:140 pdev ] [140])) 167 {*arm_movsi_insn} (nil))

(call_insn 34 32 37 7 arch/arm/kernel/pmu.c:172 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_get_irq") [flags 0x41] <function_decl 0x10f21400 platform_get_irq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(call_insn 37 34 39 7 arch/arm/kernel/pmu.c:172 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("irq_can_set_affinity") [flags 0x41] <function_decl 0x10cfa500 irq_can_set_affinity>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 39 37 40 7 arch/arm/kernel/pmu.c:172 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 40 39 139 7 arch/arm/kernel/pmu.c:172 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 7 -> ( 8 6)
;; lr  out 	 6 [r6] 7 [r7] 13 [sp] 14 [lr]
;; live  out 	 6 [r6] 7 [r7] 13 [sp]


;; Succ edge  8 [39.0%]  (fallthru)
;; Succ edge  6 [61.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  7 [39.0%]  (fallthru)
(note 139 40 140 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 140 139 141 8 (set (pc)
        (label_ref 94)) 242 {*arm_jump} (nil))
;; End of basic block 8 -> ( 15)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp]


;; Succ edge  15 [100.0%] 

(barrier 141 140 79)

;; Start of basic block ( 12) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 5 [r5] 10 [sl] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 8 [r8] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4] 8 [r8] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  12 [95.5%] 
(code_label 79 141 45 9 15 "" [1 uses])

(note 45 79 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(note 53 45 57 9 NOTE_INSN_DELETED)

(note 57 53 58 9 NOTE_INSN_DELETED)

(note 58 57 59 9 NOTE_INSN_DELETED)

(note 59 58 63 9 NOTE_INSN_DELETED)

(note 63 59 49 9 NOTE_INSN_DELETED)

(call_insn 49 63 50 9 arch/arm/kernel/pmu.c:176 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("platform_get_irq") [flags 0x41] <function_decl 0x10f21400 platform_get_irq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 50 49 51 9 arch/arm/kernel/pmu.c:176 (set (reg:SI 8 r8 [orig:137 D.13599 ] [137])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 51 50 56 9 include/linux/cpumask.h:738 (set (reg:SI 1 r1 [146])
        (and:SI (reg/v:SI 5 r5 [orig:138 i ] [138])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 56 51 52 9 arch/arm/kernel/pmu.c:147 (set (reg:SI 3 r3 [150])
        (lshiftrt:SI (reg/v:SI 5 r5 [orig:138 i ] [138])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (nil))

(insn 52 56 55 9 include/linux/cpumask.h:738 (set (reg:SI 1 r1 [147])
        (plus:SI (reg:SI 1 r1 [146])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))

(insn 55 52 61 9 include/linux/cpumask.h:738 (set (reg/v/f:SI 1 r1 [orig:141 p ] [141])
        (plus:SI (mult:SI (reg:SI 1 r1 [147])
                (const_int 4 [0x4]))
            (reg/f:SI 10 sl [157]))) 270 {*arith_shiftsi} (nil))

(insn 61 55 62 9 arch/arm/kernel/pmu.c:147 (set (reg:SI 1 r1)
        (minus:SI (reg/v/f:SI 1 r1 [orig:141 p ] [141])
            (mult:SI (reg:SI 3 r3 [150])
                (const_int 4 [0x4])))) 273 {*sub_shiftsi} (nil))

(call_insn 62 61 64 9 arch/arm/kernel/pmu.c:147 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("irq_set_affinity") [flags 0x41] <function_decl 0x10cfa480 irq_set_affinity>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 64 62 65 9 arch/arm/kernel/pmu.c:148 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 4 r4 [orig:142 err ] [142])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 65 64 66 9 arch/arm/kernel/pmu.c:148 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 74)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 10 [sl] 13 [sp]


;; Succ edge  10 [0.0%]  (fallthru,loop_exit)
;; Succ edge  11 [100.0%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; lr  use 	 5 [r5] 8 [r8] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 8 [r8] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]

;; Pred edge  9 [0.0%]  (fallthru,loop_exit)
(note 66 65 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 69 66 70 10 arch/arm/kernel/pmu.c:149 (set (reg:SI 1 r1)
        (reg:SI 8 r8 [orig:137 D.13599 ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 70 69 68 10 arch/arm/kernel/pmu.c:149 (set (reg:SI 2 r2)
        (reg/v:SI 5 r5 [orig:138 i ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 68 70 71 10 arch/arm/kernel/pmu.c:149 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10f7b0a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10f7b0a0>)
        (nil)))

(call_insn 71 68 142 10 arch/arm/kernel/pmu.c:149 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(jump_insn 142 71 143 10 (set (pc)
        (label_ref 97)) 242 {*arm_jump} (nil))
;; End of basic block 10 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 143 142 74)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 5 [r5]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 5 [r5]
;; live  kill	

;; Pred edge  9 [100.0%] 
(code_label 74 143 75 11 14 "" [1 uses])

(note 75 74 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 76 75 77 11 arch/arm/kernel/pmu.c:175 (set (reg/v:SI 5 r5 [orig:138 i ] [138])
        (plus:SI (reg/v:SI 5 r5 [orig:138 i ] [138])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  12 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 11 6) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 5 [r5] 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 24 [cc]
;; live  in  	 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 24 [cc]
;; live  kill	

;; Pred edge  11 [100.0%]  (fallthru,dfs_back)
;; Pred edge  6 [100.0%] 
(code_label 77 76 78 12 11 "" [1 uses])

(note 78 77 48 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 48 78 47 12 arch/arm/kernel/pmu.c:176 (set (reg:SI 1 r1)
        (reg/v:SI 5 r5 [orig:138 i ] [138])) 167 {*arm_movsi_insn} (nil))

(insn 47 48 80 12 arch/arm/kernel/pmu.c:176 (set (reg:SI 0 r0)
        (reg/v/f:SI 6 r6 [orig:140 pdev ] [140])) 167 {*arm_movsi_insn} (nil))

(insn 80 47 81 12 arch/arm/kernel/pmu.c:175 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 5 r5 [orig:138 i ] [138])
            (reg/v:SI 7 r7 [orig:139 irqs ] [139]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 81 80 144 12 arch/arm/kernel/pmu.c:175 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 79)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
        (nil)))
;; End of basic block 12 -> ( 9 13)
;; lr  out 	 0 [r0] 1 [r1] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 1 [r1] 5 [r5] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  9 [95.5%] 
;; Succ edge  13 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  12 [4.5%]  (fallthru,loop_exit)
(note 144 81 145 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(jump_insn 145 144 146 13 (set (pc)
        (label_ref 94)) 242 {*arm_jump} (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  15 [100.0%] 

(barrier 146 145 134)

;; Start of basic block ( 2) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  2 [50.0%] 
(code_label 134 146 86 14 17 "" [1 uses])

(note 86 134 88 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 88 86 90 14 arch/arm/kernel/pmu.c:194 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10f7b0f0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10f7b0f0>)
        (nil)))

(call_insn 90 88 91 14 arch/arm/kernel/pmu.c:194 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 91 90 147 14 arch/arm/kernel/pmu.c:196 (set (reg/v:SI 4 r4 [orig:142 err ] [142])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 147 91 148 14 (set (pc)
        (label_ref 97)) 242 {*arm_jump} (nil))
;; End of basic block 14 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  16 [100.0%] 

(barrier 148 147 94)

;; Start of basic block ( 8 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 4 [r4]
;; live  kill	

;; Pred edge  8 [100.0%] 
;; Pred edge  13 [100.0%] 
(code_label 94 148 95 15 12 "" [2 uses])

(note 95 94 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 96 95 97 15 arch/arm/kernel/pmu.c:173 (set (reg/v:SI 4 r4 [orig:142 err ] [142])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 15 -> ( 16)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 10 4 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  14 [100.0%] 
(code_label 97 96 98 16 9 "" [3 uses])

(note 98 97 103 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 103 98 109 16 arch/arm/kernel/pmu.c:200 (set (reg/i:SI 0 r0)
        (reg/v:SI 4 r4 [orig:142 err ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 109 103 149 16 arch/arm/kernel/pmu.c:200 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 149 109 150 NOTE_INSN_DELETED)

(note 150 149 0 NOTE_INSN_DELETED)


;; Function release_pmu (release_pmu)[0:700]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r137: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 39(l0): point = 0
   Insn 33(l0): point = 2
   Insn 26(l0): point = 5
   Insn 25(l0): point = 7
   Insn 24(l0): point = 9
   Insn 20(l0): point = 11
   Insn 43(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 9(l0): point = 25
   Insn 8(l0): point = 27
   Insn 7(l0): point = 29
   Insn 6(l0): point = 31
 a0(r133): [14..16] [3..5]
 a1(r136): [25..31] [10..13]
 a2(r137): [28..29]
Compressing live ranges: from 34 to 10 - 29%
Ranges after the compression:
 a0(r133): [4..5] [0..1]
 a1(r136): [6..9] [2..3]
 a2(r137): [7..8]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r133,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r136,l0) conflicts: a2(r137,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0
;; a2(r137,l0) conflicts: a1(r136,l0)
;;     total conflict hard regs: 0
;;     conflict hard regs: 0

  regions=1, blocks=6, points=10
    allocnos=3, copies=0, conflicts=2, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 5 4 3 2
    all: 0r133 1r136 2r137
    modified regnos: 133 136 137
    border:
    Pressure: GENERAL_REGS=3
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
    Reg 137 of GENERAL_REGS has 1 regs less
      Pushing a2(r137,l0)
      Pushing a1(r136,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 0
      Popping a1(r136,l0)  -- assign reg 1
      Popping a2(r137,l0)  -- assign reg 3
Disposition:
    0:r133 l0     0    1:r136 l0     1    2:r137 l0     3
New iteration of spill/restore move
+++Costs: overall -4250, reg -4250, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=6, live_throughout: 0, 13, dead_or_set: 136
insn=7, live_throughout: 0, 13, 136, dead_or_set: 137
insn=8, live_throughout: 0, 13, 136, dead_or_set: 137
insn=9, live_throughout: 0, 13, 136, dead_or_set: 
insn=12, live_throughout: 13, dead_or_set: 0
insn=13, live_throughout: 0, 13, dead_or_set: 1
insn=14, live_throughout: 13, dead_or_set: 0, 1, 14
insn=15, live_throughout: 13, 14, dead_or_set: 133
insn=43, live_throughout: 13, 14, 133, dead_or_set: 
insn=18, live_throughout: 0, 13, 136, dead_or_set: 
insn=20, live_throughout: 0, 13, 136, dead_or_set: 
insn=24, live_throughout: 0, 13, dead_or_set: 1, 136
insn=25, live_throughout: 13, dead_or_set: 0, 1, 14
insn=26, live_throughout: 13, 14, dead_or_set: 133
insn=27, live_throughout: 13, 14, 133, dead_or_set: 
insn=33, live_throughout: 13, 14, dead_or_set: 0, 133
insn=39, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 6 (nil))
init_insns for 137: (insn_list:REG_DEP_TRUE 7 (nil))
changing reg in insn 26
changing reg in insn 15
changing reg in insn 33
changing reg in insn 6
changing reg in insn 7
changing reg in insn 24
changing reg in insn 7
changing reg in insn 7
changing reg in insn 8
deleting insn with uid = 33.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 25.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 8 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


release_pmu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,5u,1d} r1={6d,4u,1d} r2={3d} r3={4d,1u} r12={3d} r13={1d,7u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 270{249d,19u,2e} in 14{12 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 1 [r1] 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 1 [r1] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 4 3 2 NOTE_INSN_DELETED)

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/pmu.c:135 (set (reg/f:SI 1 r1 [136])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/pmu.c:135 (set (reg/f:SI 3 r3 [137])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 0 r0 [ type ])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [136])) [0 pmu_devices S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (mult:SI (reg:SI 0 r0 [ type ])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [136])) [0 pmu_devices S4 A32])
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/pmu.c:135 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [137])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/pmu.c:135 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 18)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 1 [r1] 13 [sp]
;; live  out 	 0 [r0] 1 [r1] 13 [sp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 13 3 arch/arm/kernel/pmu.c:135 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/pmu.c:135 discrim 1 (set (reg:SI 1 r1)
        (const_int 135 [0x87])) 167 {*arm_movsi_insn} (nil))

(call_insn 14 13 15 3 arch/arm/kernel/pmu.c:135 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_null") [flags 0x41] <function_decl 0x10a2ed80 warn_slowpath_null>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 14 43 3 arch/arm/kernel/pmu.c:136 (set (reg:SI 0 r0 [orig:133 D.13490 ] [133])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(jump_insn 43 15 44 3 (set (pc)
        (label_ref 27)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  5 [100.0%] 

(barrier 44 43 18)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 1 [r1] 13 [sp]
;; lr  use 	 0 [r0] 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 1 [r1] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [100.0%] 
(code_label 18 44 19 4 22 "" [1 uses])

(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 24 4 arch/arm/kernel/pmu.c:137 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 5334266)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 24 20 25 4 arch/arm/kernel/pmu.c:137 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 1 r1 [136])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 25 24 26 4 arch/arm/kernel/pmu.c:137 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 25 27 4 arch/arm/kernel/pmu.c:138 (set (reg:SI 0 r0 [orig:133 D.13490 ] [133])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 27 26 28 5 23 "" [1 uses])

(note 28 27 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 39 28 45 5 arch/arm/kernel/pmu.c:139 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 45 39 46 NOTE_INSN_DELETED)

(note 46 45 0 NOTE_INSN_DELETED)


;; Function reserve_pmu (reserve_pmu)[0:699]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r137,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r138: preferred GENERAL_REGS, alternative NO_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:50000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r137,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 45(l0): point = 0
   Insn 39(l0): point = 2
   Insn 32(l0): point = 5
   Insn 31(l0): point = 7
   Insn 30(l0): point = 9
   Insn 29(l0): point = 11
   Insn 26(l0): point = 13
   Insn 24(l0): point = 16
   Insn 23(l0): point = 18
   Insn 22(l0): point = 20
   Insn 49(l0): point = 23
   Insn 16(l0): point = 25
   Insn 14(l0): point = 28
   Insn 13(l0): point = 30
   Insn 11(l0): point = 32
   Insn 10(l0): point = 34
   Insn 2(l0): point = 36
   Insn 7(l0): point = 38
 a0(r133): [23..25] [16..20] [3..5]
 a1(r138): [28..38] [10..22]
 a2(r137): [28..36] [12..22]
Compressing live ranges: from 41 to 12 - 29%
Ranges after the compression:
 a0(r133): [7..8] [4..5] [0..1]
 a1(r138): [9..11] [2..6]
 a2(r137): [9..10] [3..6]
+++Allocating 24 bytes for conflict table (uncompressed size 24)
;; a0(r133,l0) conflicts: a1(r138,l0) a2(r137,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r138,l0) conflicts: a0(r133,l0) a2(r137,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r137,l0) conflicts: a0(r133,l0) a1(r138,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14

  regions=1, blocks=7, points=12
    allocnos=3, copies=0, conflicts=0, ranges=7

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r133 1r138 2r137
    modified regnos: 133 137 138
    border:
    Pressure: GENERAL_REGS=5
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 137 of GENERAL_REGS has 3 regs less
      Pushing a0(r133,l0)
      Pushing a2(r137,l0)
      Pushing a1(r138,l0)
      Popping a1(r138,l0)  -- assign reg 4
      Popping a2(r137,l0)  -- assign reg 5
      Popping a0(r133,l0)  -- assign reg 0
Disposition:
    0:r133 l0     0    2:r137 l0     5    1:r138 l0     4
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=7, live_throughout: 0, 13, dead_or_set: 138
insn=2, live_throughout: 0, 13, 138, dead_or_set: 137
insn=10, live_throughout: 0, 13, 137, 138, dead_or_set: 1
insn=11, live_throughout: 13, 137, 138, dead_or_set: 0, 1, 14
insn=13, live_throughout: 13, 14, 137, 138, dead_or_set: 0
insn=14, live_throughout: 13, 14, 137, 138, dead_or_set: 
insn=16, live_throughout: 13, 14, dead_or_set: 133
insn=49, live_throughout: 13, 14, 133, dead_or_set: 
insn=19, live_throughout: 13, 14, 137, 138, dead_or_set: 
insn=22, live_throughout: 13, 14, 137, 138, dead_or_set: 133
insn=23, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 
insn=24, live_throughout: 13, 14, 133, 137, 138, dead_or_set: 
insn=26, live_throughout: 13, 137, 138, dead_or_set: 
insn=29, live_throughout: 13, 138, dead_or_set: 0, 137
insn=30, live_throughout: 0, 13, dead_or_set: 1, 138
insn=31, live_throughout: 13, dead_or_set: 0, 1, 14
insn=32, live_throughout: 13, 14, dead_or_set: 133
insn=33, live_throughout: 13, 14, 133, dead_or_set: 
insn=39, live_throughout: 13, 14, dead_or_set: 0, 133
insn=45, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 7 (nil))
changing reg in insn 22
changing reg in insn 32
changing reg in insn 16
changing reg in insn 39
changing reg in insn 23
changing reg in insn 2
changing reg in insn 29
changing reg in insn 22
changing reg in insn 22
changing reg in insn 7
changing reg in insn 30
changing reg in insn 10
changing reg in insn 22
deleting insn with uid = 39.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


reserve_pmu

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 4[r4] 5[r5] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,7u} r1={5d,2u} r2={3d} r3={3d} r4={1d,3u} r5={1d,2u,1d} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 277{251d,25u,1e} in 17{15 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 4 [r4] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 12 2 NOTE_INSN_FUNCTION_BEG)

(note 12 3 7 2 NOTE_INSN_DELETED)

(insn 7 12 2 2 arch/arm/kernel/pmu.c:119 (set (reg/f:SI 4 r4 [138])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 2 7 10 2 arch/arm/kernel/pmu.c:116 (set (reg/v:SI 5 r5 [orig:137 type ] [137])
        (reg:SI 0 r0 [ type ])) 167 {*arm_movsi_insn} (nil))

(insn 10 2 11 2 arch/arm/kernel/pmu.c:119 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 4 r4 [138])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 11 10 13 2 arch/arm/kernel/pmu.c:119 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("_test_and_set_bit") [flags 0x41] <function_decl 0x512e0180 _test_and_set_bit>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 13 11 14 2 arch/arm/kernel/pmu.c:119 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 14 13 15 2 arch/arm/kernel/pmu.c:119 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [39.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 49 3 arch/arm/kernel/pmu.c:120 (set (reg/v/f:SI 0 r0 [orig:133 pdev ] [133])
        (const_int -16 [0xfffffffffffffff0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -16 [0xfffffffffffffff0])
        (nil)))

(jump_insn 49 16 50 3 (set (pc)
        (label_ref 33)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 6)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  6 [100.0%] 

(barrier 50 49 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 24 [cc]
;; live  kill	

;; Pred edge  2 [61.0%] 
(code_label 19 50 20 4 28 "" [1 uses])

(note 20 19 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 4 arch/arm/kernel/pmu.c:121 (set (reg/v/f:SI 0 r0 [orig:133 pdev ] [133])
        (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:137 type ] [137])
                    (const_int 4 [0x4]))
                (reg/f:SI 4 r4 [138])) [0 pmu_devices S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (plus:SI (mult:SI (reg/v:SI 5 r5 [orig:137 type ] [137])
                    (const_int 4 [0x4]))
                (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) [0 pmu_devices S4 A32])
        (nil)))

(insn 23 22 24 4 arch/arm/kernel/pmu.c:121 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 0 r0 [orig:133 pdev ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 arch/arm/kernel/pmu.c:121 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9559 [0x2557])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 13 [sp]


;; Succ edge  5 [4.4%]  (fallthru)
;; Succ edge  6 [95.6%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [4.4%]  (fallthru)
(note 25 24 26 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 29 5 arch/arm/kernel/pmu.c:122 (parallel [
            (asm_operands/v ("dmb") ("") 0 []
                 [] 5332347)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 29 26 30 5 arch/arm/kernel/pmu.c:122 (set (reg:SI 0 r0)
        (reg/v:SI 5 r5 [orig:137 type ] [137])) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 5 arch/arm/kernel/pmu.c:122 (set (reg:SI 1 r1)
        (plus:SI (reg/f:SI 4 r4 [138])
            (const_int 4 [0x4]))) 4 {*arm_addsi3} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 4 [0x4])))
        (nil)))

(call_insn 31 30 32 5 arch/arm/kernel/pmu.c:122 (parallel [
            (call (mem:SI (symbol_ref:SI ("_clear_bit") [flags 0x41] <function_decl 0x512e0080 _clear_bit>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 32 31 33 5 arch/arm/kernel/pmu.c:123 (set (reg/v/f:SI 0 r0 [orig:133 pdev ] [133])
        (const_int -19 [0xffffffffffffffed])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  4 [95.6%] 
;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 33 32 34 6 29 "" [2 uses])

(note 34 33 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 45 34 51 6 arch/arm/kernel/pmu.c:129 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 51 45 52 NOTE_INSN_DELETED)

(note 52 51 0 NOTE_INSN_DELETED)


;; Function armpmu_device_type (armpmu_device_type)[0:696]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r135,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000


Pass 1 for finding allocno costs

    r136: preferred GENERAL_REGS, alternative NO_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a1(r135,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:10000

   Insn 39(l0): point = 0
   Insn 33(l0): point = 2
   Insn 24(l0): point = 5
   Insn 23(l0): point = 7
   Insn 22(l0): point = 9
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 13(l0): point = 19
   Insn 12(l0): point = 21
   Insn 11(l0): point = 23
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 6(l0): point = 30
   Insn 2(l0): point = 32
 a0(r133): [12..16] [3..4]
 a1(r135): [26..32] [17..18]
 a2(r136): [29..30]
Compressing live ranges: from 35 to 10 - 28%
Ranges after the compression:
 a0(r133): [2..3] [0..1]
 a1(r135): [6..9] [4..5]
 a2(r136): [7..8]
+++Allocating 16 bytes for conflict table (uncompressed size 24)
;; a0(r133,l0) conflicts:
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r135,l0) conflicts: a2(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a2(r136,l0) conflicts: a1(r135,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14

  regions=1, blocks=7, points=10
    allocnos=3, copies=0, conflicts=2, ranges=5

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 6 5 4 3 2
    all: 0r133 1r135 2r136
    modified regnos: 133 135 136
    border:
    Pressure: GENERAL_REGS=3
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 135 of GENERAL_REGS has 1 regs less
    Reg 136 of GENERAL_REGS has 1 regs less
      Pushing a2(r136,l0)
      Pushing a1(r135,l0)
      Pushing a0(r133,l0)
      Popping a0(r133,l0)  -- assign reg 3
      Popping a1(r135,l0)  -- assign reg 0
      Popping a2(r136,l0)  -- assign reg 3
Disposition:
    0:r133 l0     3    1:r135 l0     0    2:r136 l0     3
New iteration of spill/restore move
+++Costs: overall -4000, reg -4000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 13, 14, dead_or_set: 0, 135
insn=6, live_throughout: 13, 14, 135, dead_or_set: 136
insn=7, live_throughout: 13, 14, 135, dead_or_set: 136
insn=8, live_throughout: 13, 14, 135, dead_or_set: 
insn=11, live_throughout: 13, dead_or_set: 0
insn=12, live_throughout: 0, 13, dead_or_set: 1
insn=13, live_throughout: 13, dead_or_set: 0, 1, 14
insn=15, live_throughout: 13, 14, 135, dead_or_set: 
insn=17, live_throughout: 13, 14, dead_or_set: 133, 135
insn=18, live_throughout: 13, 14, 133, dead_or_set: 
insn=19, live_throughout: 13, 14, 133, dead_or_set: 
insn=22, live_throughout: 13, dead_or_set: 0
insn=23, live_throughout: 0, 13, dead_or_set: 1
insn=24, live_throughout: 13, dead_or_set: 0, 1, 14
insn=26, live_throughout: 13, 14, 133, dead_or_set: 
insn=33, live_throughout: 13, 14, dead_or_set: 0, 133
insn=39, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 136: (insn_list:REG_DEP_TRUE 6 (nil))
changing reg in insn 17
changing reg in insn 33
changing reg in insn 18
changing reg in insn 2
changing reg in insn 17
changing reg in insn 6
changing reg in insn 6
changing reg in insn 6
changing reg in insn 7
deleting insn with uid = 2.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 24.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 6 count 10 (  1.4)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 6 count 12 (  1.7)


armpmu_device_type

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={6d,6u,1d} r1={5d,2u} r2={3d} r3={5d,3u} r12={3d} r13={1d,8u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={4d,2u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 273{250d,22u,1e} in 14{12 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/pmu.c:82 (set (reg/f:SI 3 r3 [orig:136 <variable>.dev.of_node ] [136])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:135 pdev ] [135])
                (const_int 312 [0x138])) [0 <variable>.dev.of_node+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/s/f/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:135 pdev ] [135])
                (const_int 312 [0x138])) [0 <variable>.dev.of_node+0 S4 A64])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/pmu.c:82 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:136 <variable>.dev.of_node ] [136])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/pmu.c:82 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 15)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 9 12 3 arch/arm/kernel/pmu.c:84 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)
        (nil)))

(insn 12 11 13 3 arch/arm/kernel/pmu.c:84 discrim 1 (set (reg:SI 1 r1)
        (const_int 84 [0x54])) 167 {*arm_movsi_insn} (nil))

(call_insn 13 12 14 3 arch/arm/kernel/pmu.c:84 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 3 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 14 13 15)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 15 14 16 4 34 "" [1 uses])

(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 4 arch/arm/kernel/pmu.c:89 (set (reg/v/f:SI 3 r3 [orig:133 pdev_id ] [133])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 0 r0 [orig:135 pdev ] [135])
                (const_int 376 [0x178])) [0 <variable>.id_entry+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 19 4 arch/arm/kernel/pmu.c:90 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 3 r3 [orig:133 pdev_id ] [133])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 19 18 20 4 arch/arm/kernel/pmu.c:90 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [0.0%]  (fallthru)
(note 20 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 5 arch/arm/kernel/pmu.c:90 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10f8ef00>)
        (nil)))

(insn 23 22 24 5 arch/arm/kernel/pmu.c:90 discrim 1 (set (reg:SI 1 r1)
        (const_int 90 [0x5a])) 167 {*arm_movsi_insn} (nil))

(call_insn 24 23 25 5 arch/arm/kernel/pmu.c:90 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a2ec00 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_NORETURN (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ()
;; lr  out 	 13 [sp]
;; live  out 	 13 [sp]



(barrier 25 24 26)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  4 [100.0%] 
(code_label 26 25 27 6 35 "" [1 uses])

(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(note 28 27 33 6 NOTE_INSN_DELETED)

(insn 33 28 39 6 arch/arm/kernel/pmu.c:92 (set (reg/i:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 3 r3 [orig:133 pdev_id ] [133])
                (const_int 20 [0x14])) [0 <variable>.driver_data+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 39 33 43 6 arch/arm/kernel/pmu.c:92 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 43 39 44 NOTE_INSN_DELETED)

(note 44 43 0 NOTE_INSN_DELETED)


;; Function armpmu_device_probe (armpmu_device_probe)[0:697] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding allocno costs

    a3 (r139,l0) best GENERAL_REGS, cover GENERAL_REGS
    a1 (r138,l0) best GENERAL_REGS, cover GENERAL_REGS
    a2 (r136,l0) best GENERAL_REGS, cover GENERAL_REGS
    a4 (r134,l0) best GENERAL_REGS, cover GENERAL_REGS
    a0 (r133,l0) best GENERAL_REGS, cover GENERAL_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000


Pass 1 for finding allocno costs

    r139: preferred GENERAL_REGS, alternative NO_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS

  a0(r133,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a1(r138,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000
  a2(r136,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:20000
  a3(r139,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:40000
  a4(r134,l0) costs: LO_REGS:0,0 BASE_REGS:0,0 HI_REGS:0,0 GENERAL_REGS:0,0 MEM:30000

   Insn 54(l0): point = 0
   Insn 48(l0): point = 2
   Insn 40(l0): point = 5
   Insn 41(l0): point = 7
   Insn 38(l0): point = 9
   Insn 37(l0): point = 11
   Insn 36(l0): point = 13
   Insn 60(l0): point = 16
   Insn 30(l0): point = 18
   Insn 29(l0): point = 20
   Insn 27(l0): point = 22
   Insn 28(l0): point = 24
   Insn 24(l0): point = 27
   Insn 23(l0): point = 29
   Insn 22(l0): point = 31
   Insn 21(l0): point = 33
   Insn 58(l0): point = 36
   Insn 16(l0): point = 38
   Insn 15(l0): point = 40
   Insn 13(l0): point = 42
   Insn 14(l0): point = 44
   Insn 10(l0): point = 47
   Insn 9(l0): point = 49
   Insn 7(l0): point = 51
   Insn 2(l0): point = 53
 a0(r133): [36..38] [16..18] [3..7]
 a1(r138): [27..33] [6..15]
 a2(r136): [47..53] [27..35] [6..15]
 a3(r139): [27..31] [8..15]
 a4(r134): [45..49] [25..35]
Compressing live ranges: from 56 to 18 - 32%
Ranges after the compression:
 a0(r133): [12..13] [5..6] [0..2]
 a1(r138): [8..10] [1..4]
 a2(r136): [15..17] [8..11] [1..4]
 a3(r139): [8..9] [3..4]
 a4(r134): [14..16] [7..11]
+++Allocating 40 bytes for conflict table (uncompressed size 40)
;; a0(r133,l0) conflicts: a1(r138,l0) a2(r136,l0)
;;     total conflict hard regs: 14
;;     conflict hard regs: 14
;; a1(r138,l0) conflicts: a0(r133,l0) a2(r136,l0) a3(r139,l0) a4(r134,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a2(r136,l0) conflicts: a0(r133,l0) a1(r138,l0) a3(r139,l0) a4(r134,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a3(r139,l0) conflicts: a1(r138,l0) a2(r136,l0) a4(r134,l0)
;;     total conflict hard regs: 0 1 14
;;     conflict hard regs: 0 1 14
;; a4(r134,l0) conflicts: a1(r138,l0) a2(r136,l0) a3(r139,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

  cp0:a0(r133)<->a3(r139)@1000:move
  regions=1, blocks=8, points=18
    allocnos=5, copies=1, conflicts=0, ranges=12

**** Allocnos coloring:


  Loop 0 (parent -1, header bb0, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r133 1r138 2r136 3r139 4r134
    modified regnos: 133 134 136 138 139
    border:
    Pressure: GENERAL_REGS=6
    Reg 133 of GENERAL_REGS has 1 regs less
    Reg 138 of GENERAL_REGS has 3 regs less
    Reg 136 of GENERAL_REGS has 3 regs less
    Reg 139 of GENERAL_REGS has 3 regs less
      Pushing a4(r134,l0)
      Pushing a0(r133,l0)
      Pushing a2(r136,l0)
      Pushing a1(r138,l0)
      Pushing a3(r139,l0)
      Popping a3(r139,l0)  -- assign reg 4
      Popping a1(r138,l0)  -- assign reg 5
      Popping a2(r136,l0)  -- assign reg 6
      Popping a0(r133,l0)  -- assign reg 0
      Popping a4(r134,l0)  -- assign reg 1
Disposition:
    0:r133 l0     0    4:r134 l0     1    2:r136 l0     6    1:r138 l0     5
    3:r139 l0     4
New iteration of spill/restore move
+++Costs: overall -12000, reg -12000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0
insn=2, live_throughout: 0, 13, dead_or_set: 136
insn=7, live_throughout: 13, 136, dead_or_set: 0, 14
insn=9, live_throughout: 13, 136, dead_or_set: 0, 134
insn=10, live_throughout: 13, 134, 136, dead_or_set: 
insn=14, live_throughout: 13, dead_or_set: 1, 134
insn=13, live_throughout: 1, 13, dead_or_set: 0
insn=15, live_throughout: 13, dead_or_set: 0, 1, 14
insn=16, live_throughout: 13, 14, dead_or_set: 133
insn=58, live_throughout: 13, 14, 133, dead_or_set: 
insn=19, live_throughout: 13, 134, 136, dead_or_set: 
insn=21, live_throughout: 13, 134, 136, dead_or_set: 138
insn=22, live_throughout: 13, 134, 136, 138, dead_or_set: 139
insn=23, live_throughout: 13, 134, 136, 138, 139, dead_or_set: 
insn=24, live_throughout: 13, 134, 136, 138, 139, dead_or_set: 
insn=28, live_throughout: 13, dead_or_set: 1, 134
insn=27, live_throughout: 1, 13, dead_or_set: 0
insn=29, live_throughout: 13, dead_or_set: 0, 1, 14
insn=30, live_throughout: 13, 14, dead_or_set: 133
insn=60, live_throughout: 13, 14, 133, dead_or_set: 
insn=33, live_throughout: 13, 136, 138, 139, dead_or_set: 
insn=36, live_throughout: 13, 136, 138, 139, dead_or_set: 0
insn=37, live_throughout: 0, 13, 136, 138, 139, dead_or_set: 1
insn=38, live_throughout: 13, 136, 138, 139, dead_or_set: 0, 1, 14
insn=41, live_throughout: 13, 14, 136, 138, dead_or_set: 133, 139
insn=40, live_throughout: 13, 14, 133, dead_or_set: 136, 138
insn=42, live_throughout: 13, 14, 133, dead_or_set: 
insn=48, live_throughout: 13, 14, dead_or_set: 0, 133
insn=54, live_throughout: 0, 13, 14, dead_or_set: 
init_insns for 138: (insn_list:REG_DEP_TRUE 21 (nil))
changing reg in insn 41
changing reg in insn 30
changing reg in insn 16
changing reg in insn 48
changing reg in insn 9
changing reg in insn 28
changing reg in insn 14
changing reg in insn 2
changing reg in insn 40
changing reg in insn 21
changing reg in insn 40
changing reg in insn 22
changing reg in insn 22
changing reg in insn 41
changing reg in insn 37
changing reg in insn 23
Spilling for insn 40.

Reloads for insn # 40
Reload 0: reload_out (SI) = (mem/s/f/j:SI (reg/f:SI 5 r5 [138]) [0 pmu_devices+0 S4 A32])
	NO_REGS, RELOAD_FOR_OUTPUT (opnum = 0), optional
	reload_out_reg: (mem/s/f/j:SI (reg/f:SI 5 r5 [138]) [0 pmu_devices+0 S4 A32])
deleting insn with uid = 14.
deleting insn with uid = 28.
deleting insn with uid = 48.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 29.
verify found no changes in insn with uid = 38.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 12 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)


armpmu_device_probe

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 4[r4] 5[r5] 6[r6] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,9u} r1={7d,3u} r2={5d} r3={5d} r4={1d,3u} r5={1d,2u} r6={1d,1u} r12={5d} r13={1d,11u} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={6d,2u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} 
;;    total ref usage 520{488d,32u,0e} in 22{18 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 6 [r6] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 3 2 2 NOTE_INSN_DELETED)

(insn 2 8 7 2 arch/arm/kernel/pmu.c:95 (set (reg/v/f:SI 6 r6 [orig:136 pdev ] [136])
        (reg:SI 0 r0 [ pdev ])) 167 {*arm_movsi_insn} (nil))

(call_insn 7 2 9 2 arch/arm/kernel/pmu.c:96 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("armpmu_device_type") [flags 0x3] <function_decl 0x10f49d00 armpmu_device_type>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 7 10 2 arch/arm/kernel/pmu.c:32 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg:SI 1 r1 [orig:134 D.13446 ] [134])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (nil))

(jump_insn 10 9 11 2 arch/arm/kernel/pmu.c:32 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil)))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 1 [r1] 6 [r6] 13 [sp]
;; live  out 	 1 [r1] 6 [r6] 13 [sp]


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  4 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  2 [0.0%]  (fallthru)
(note 11 10 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 11 15 3 arch/arm/kernel/pmu.c:33 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10af14e0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10af14e0>)
        (nil)))

(call_insn 15 13 16 3 arch/arm/kernel/pmu.c:33 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 16 15 58 3 arch/arm/kernel/pmu.c:35 (set (reg:SI 0 r0 [orig:133 D.13617 ] [133])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -22 [0xffffffffffffffea])
        (nil)))

(jump_insn 58 16 59 3 (set (pc)
        (label_ref 42)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 59 58 19)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 6 [r6] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 4 [r4] 5 [r5] 24 [cc]
;; live  in  	 1 [r1] 6 [r6] 13 [sp]
;; live  gen 	 4 [r4] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  2 [100.0%] 
(code_label 19 59 20 4 41 "" [1 uses])

(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 20 22 4 arch/arm/kernel/pmu.c:38 (set (reg/f:SI 5 r5 [138])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 22 21 23 4 arch/arm/kernel/pmu.c:38 (set (reg/f:SI 4 r4 [orig:139 pmu_devices ] [139])
        (mem/s/f/j:SI (reg/f:SI 5 r5 [138]) [0 pmu_devices+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/s/f/j:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182]) [0 pmu_devices+0 S4 A32])
        (nil)))

(insn 23 22 24 4 arch/arm/kernel/pmu.c:38 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 4 r4 [orig:139 pmu_devices ] [139])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 24 23 25 4 arch/arm/kernel/pmu.c:38 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 33)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 8571 [0x217b])
        (nil)))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 5 [r5] 6 [r6] 13 [sp]


;; Succ edge  5 [14.3%]  (fallthru)
;; Succ edge  6 [85.7%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  4 [14.3%]  (fallthru)
(note 25 24 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 25 29 5 arch/arm/kernel/pmu.c:39 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10af16c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10af16c0>)
        (nil)))

(call_insn 29 27 30 5 arch/arm/kernel/pmu.c:39 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 30 29 60 5 arch/arm/kernel/pmu.c:41 (set (reg:SI 0 r0 [orig:133 D.13617 ] [133])
        (const_int -28 [0xffffffffffffffe4])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int -28 [0xffffffffffffffe4])
        (nil)))

(jump_insn 60 30 61 5 (set (pc)
        (label_ref 42)) 242 {*arm_jump} (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 61 60 33)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  use 	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  4 [85.7%] 
(code_label 33 61 34 6 43 "" [1 uses])

(note 34 33 36 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 36 34 37 6 arch/arm/kernel/pmu.c:44 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10f7b140>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10f7b140>)
        (nil)))

(insn 37 36 38 6 arch/arm/kernel/pmu.c:44 (set (reg:SI 1 r1)
        (reg/f:SI 4 r4 [orig:139 pmu_devices ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(call_insn 38 37 41 6 arch/arm/kernel/pmu.c:44 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 41 38 40 6 arch/arm/kernel/pmu.c:46 (set (reg:SI 0 r0 [orig:133 D.13617 ] [133])
        (reg/f:SI 4 r4 [orig:139 pmu_devices ] [139])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 40 41 42 6 arch/arm/kernel/pmu.c:45 (set (mem/s/f/j:SI (reg/f:SI 5 r5 [138]) [0 pmu_devices+0 S4 A32])
        (reg/v/f:SI 6 r6 [orig:136 pdev ] [136])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp]
;; live  gen 	
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  5 [100.0%] 
(code_label 42 40 43 7 42 "" [2 uses])

(note 43 42 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 54 43 62 7 arch/arm/kernel/pmu.c:97 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp]


;; Succ edge  EXIT [100.0%]  (fallthru)

(note 62 54 63 NOTE_INSN_DELETED)

(note 63 62 0 NOTE_INSN_DELETED)

