
;; Function arch_get_debug_arch (arch_get_debug_arch)[0:1244]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


arch_get_debug_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 29{15d,14u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(5)
0, 11, 12, 13, 14
;; rd  kill	(6)
0, 1, 11, 12, 13, 14
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 135 { d11(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d13(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 136 { d12(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 13
;;      reg 138 { d14(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 19
;;      reg 0 { d0(bb 2 insn 13) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ d0(bb 2 insn 13) }u10(11){ d5(bb 0 insn -1) }u11(13){ d7(bb 0 insn -1) }u12(14){ d8(bb 0 insn -1) }u13(25){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 13) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
Finished finding needed instructions:
  Adding insn 13 to worklist
Processing use of (reg 138 [ debug_arch ]) in insn 13:
  Adding insn 8 to worklist
Processing use of (reg 136 [ debug_arch ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (subreg (reg 137 [ debug_arch ]) 0) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 0 r0) in insn 19:


arch_get_debug_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 29{15d,14u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(5)
0, 11, 12, 13, 14
;; rd  kill	(6)
0, 1, 11, 12, 13, 14

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/hw_breakpoint.c:152 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/hw_breakpoint.c:152 (set (reg:SI 137 [ debug_arch ])
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 135) [0 debug_arch+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/f:SI 135)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:152 (set (reg:QI 136 [ debug_arch ])
        (subreg:QI (reg:SI 137 [ debug_arch ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 137 [ debug_arch ])
        (nil)))

(insn 8 7 13 2 arch/arm/kernel/hw_breakpoint.c:152 (set (reg:SI 138 [ debug_arch ])
        (zero_extend:SI (reg:QI 136 [ debug_arch ]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 136 [ debug_arch ])
        (nil)))

(insn 13 8 19 2 arch/arm/kernel/hw_breakpoint.c:152 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ debug_arch ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ debug_arch ])
        (nil)))

(insn 19 13 0 2 arch/arm/kernel/hw_breakpoint.c:152 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_get_max_wp_len (arch_get_max_wp_len)[0:1254]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


arch_get_max_wp_len

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 29{15d,14u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(5)
0, 11, 12, 13, 14
;; rd  kill	(6)
0, 1, 11, 12, 13, 14
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 135 { d11(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d13(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 136 { d12(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 13
;;      reg 138 { d14(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 19
;;      reg 0 { d0(bb 2 insn 13) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u9(0){ d0(bb 2 insn 13) }u10(11){ d5(bb 0 insn -1) }u11(13){ d7(bb 0 insn -1) }u12(14){ d8(bb 0 insn -1) }u13(25){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 13) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
Finished finding needed instructions:
  Adding insn 13 to worklist
Processing use of (reg 138 [ max_watchpoint_len ]) in insn 13:
  Adding insn 8 to worklist
Processing use of (reg 136 [ max_watchpoint_len ]) in insn 8:
  Adding insn 7 to worklist
Processing use of (subreg (reg 137 [ max_watchpoint_len ]) 0) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 0 r0) in insn 19:


arch_get_max_wp_len

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} 
;;    total ref usage 29{15d,14u,0e} in 6{6 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 135[11,1] 136[12,1] 137[13,1] 138[14,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 135 136 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 135 136 137 138
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(5)
0, 11, 12, 13, 14
;; rd  kill	(6)
0, 1, 11, 12, 13, 14

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/hw_breakpoint.c:323 (set (reg/f:SI 135)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/hw_breakpoint.c:323 (set (reg:SI 137 [ max_watchpoint_len ])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 135)
                    (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/f:SI 135)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:323 (set (reg:QI 136 [ max_watchpoint_len ])
        (subreg:QI (reg:SI 137 [ max_watchpoint_len ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 137 [ max_watchpoint_len ])
        (nil)))

(insn 8 7 13 2 arch/arm/kernel/hw_breakpoint.c:323 (set (reg:SI 138 [ max_watchpoint_len ])
        (zero_extend:SI (reg:QI 136 [ max_watchpoint_len ]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 136 [ max_watchpoint_len ])
        (nil)))

(insn 13 8 19 2 arch/arm/kernel/hw_breakpoint.c:323 (set (reg/i:SI 0 r0)
        (reg:SI 138 [ max_watchpoint_len ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ max_watchpoint_len ])
        (nil)))

(insn 19 13 0 2 arch/arm/kernel/hw_breakpoint.c:323 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_check_bp_in_kernelspace (arch_check_bp_in_kernelspace)[0:1258]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 34 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 34 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 34 (  1.9)


arch_check_bp_in_kernelspace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,17u} r12={1d} r13={1d,17u} r14={1d,1u} r24={6d,7u} r25={1d,17u} r26={1d,16u} r133={5d,1u} r134={1d,2u,1d} r135={2d,1u} r137={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,5u} r142={1d,2u} r143={1d,1u} r144={1d,1u,1d} 
;;    total ref usage 129{32d,95u,2e} in 36{36 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,6] 25[15,1] 26[16,1] 133[17,5] 134[22,1] 135[23,2] 137[25,1] 139[26,1] 140[27,1] 141[28,1] 142[29,1] 143[30,1] 144[31,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d15(25){ }d16(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16

( 0 )->[2]->( 11 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d15(bb 0 insn -1) }u3(26){ d16(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 137 139 140 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 137 139 140 141
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16
;; rd  gen 	(6)
14, 22, 25, 26, 27, 28
;; rd  kill	(11)
9, 10, 11, 12, 13, 14, 22, 25, 26, 27, 28
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 137 { d25(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d25(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 9
;;      reg 139 { d26(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 10
;;      reg 140 { d27(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 141 { d28(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 24 { d14(bb 2 insn 11) }

( 2 )->[3]->( 6 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d5(bb 0 insn -1) }u12(13){ d7(bb 0 insn -1) }u13(25){ d15(bb 0 insn -1) }u14(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 141
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 24 { d14(bb 2 insn 11) }

( 3 )->[4]->( 5 10 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d5(bb 0 insn -1) }u17(13){ d7(bb 0 insn -1) }u18(25){ d15(bb 0 insn -1) }u19(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
13
;; rd  kill	(6)
9, 10, 11, 12, 13, 14
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 16, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 141 { d28(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 16
;;      reg 24 { d13(bb 4 insn 15) }

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ d5(bb 0 insn -1) }u-1(13){ d7(bb 0 insn -1) }u-1(25){ d15(bb 0 insn -1) }u-1(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 16, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }

( 3 )->[6]->( 12 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u22(11){ d5(bb 0 insn -1) }u23(13){ d7(bb 0 insn -1) }u24(25){ d15(bb 0 insn -1) }u25(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
12
;; rd  kill	(6)
9, 10, 11, 12, 13, 14
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 12, 15, 16, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 20
;;      reg 141 { d28(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 21
;;      reg 24 { d12(bb 6 insn 20) }

( 6 )->[7]->( 8 10 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u28(11){ d5(bb 0 insn -1) }u29(13){ d7(bb 0 insn -1) }u30(25){ d15(bb 0 insn -1) }u31(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 12, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
11
;; rd  kill	(6)
9, 10, 11, 12, 13, 14
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 141 { d28(bb 2 insn 10) }
;;   UD chains for insn luid 1 uid 23
;;      reg 24 { d11(bb 7 insn 22) }

( 7 )->[8]->( 13 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ d5(bb 0 insn -1) }u-1(13){ d7(bb 0 insn -1) }u-1(25){ d15(bb 0 insn -1) }u-1(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }

( 5 )->[9]->( 14 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u34(11){ d5(bb 0 insn -1) }u35(13){ d7(bb 0 insn -1) }u36(25){ d15(bb 0 insn -1) }u37(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
17
;; rd  kill	(5)
17, 18, 19, 20, 21
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 16, 17, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 141 { d28(bb 2 insn 10) }

( 7 4 )->[10]->( 14 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u39(11){ d5(bb 0 insn -1) }u40(13){ d7(bb 0 insn -1) }u41(25){ d15(bb 0 insn -1) }u42(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
21
;; rd  kill	(5)
17, 18, 19, 20, 21
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 21, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }

( 2 )->[11]->( 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u43(11){ d5(bb 0 insn -1) }u44(13){ d7(bb 0 insn -1) }u45(25){ d15(bb 0 insn -1) }u46(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
20
;; rd  kill	(5)
17, 18, 19, 20, 21
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 20, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }

( 6 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u47(11){ d5(bb 0 insn -1) }u48(13){ d7(bb 0 insn -1) }u49(25){ d15(bb 0 insn -1) }u50(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 12, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
19
;; rd  kill	(5)
17, 18, 19, 20, 21
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 12, 15, 16, 19, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }

( 8 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u51(11){ d5(bb 0 insn -1) }u52(13){ d7(bb 0 insn -1) }u53(25){ d15(bb 0 insn -1) }u54(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
18
;; rd  kill	(5)
17, 18, 19, 20, 21
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 18, 22, 25, 26, 27, 28
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }

( 9 13 10 11 12 )->[14]->( 16 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u55(11){ d5(bb 0 insn -1) }u56(13){ d7(bb 0 insn -1) }u57(25){ d15(bb 0 insn -1) }u58(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(24)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28
;; rd  gen 	(2)
10, 29
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 29
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 142
;; rd  out 	(22)
1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 52
;;      reg 134 { d22(bb 2 insn 6) }
;;      reg 142 { d29(bb 14 insn 51) }
;;   eq_note reg 134 { }
;;   UD chains for insn luid 2 uid 53
;;      reg 24 { d10(bb 14 insn 52) }

( 14 )->[15]->( 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u63(11){ d5(bb 0 insn -1) }u64(13){ d7(bb 0 insn -1) }u65(25){ d15(bb 0 insn -1) }u66(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(22)
1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29
;; rd  gen 	(1)
24
;; rd  kill	(2)
23, 24
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(23)
1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }

( 14 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u67(11){ d5(bb 0 insn -1) }u68(13){ d7(bb 0 insn -1) }u69(25){ d15(bb 0 insn -1) }u70(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142
;; lr  def 	 24 [cc] 135 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 142
;; live  gen 	 24 [cc] 135 143 144
;; live  kill	
;; rd  in  	(22)
1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29
;; rd  gen 	(4)
9, 23, 30, 31
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 23, 24, 30, 31
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(25)
1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 134 { d22(bb 2 insn 6) }
;;   UD chains for insn luid 1 uid 61
;;      reg 133 { d21(bb 10 insn 33) d20(bb 11 insn 38) d19(bb 12 insn 43) d18(bb 13 insn 48) d17(bb 9 insn 28) }
;;      reg 143 { d30(bb 16 insn 60) }
;;   UD chains for insn luid 2 uid 63
;;      reg 142 { d29(bb 14 insn 51) }
;;      reg 144 { d31(bb 16 insn 61) }
;;   eq_note reg 144 { }
;;   UD chains for insn luid 3 uid 64
;;      reg 24 { d9(bb 16 insn 63) }

( 16 15 )->[17]->( 1 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u78(11){ d5(bb 0 insn -1) }u79(13){ d7(bb 0 insn -1) }u80(25){ d15(bb 0 insn -1) }u81(26){ d16(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(27)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(27)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }
;;   reg 26 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 135 { d24(bb 15 insn 55) d23(bb 16 insn 64) }
;;   UD chains for insn luid 1 uid 78
;;      reg 0 { d0(bb 17 insn 72) }

( 17 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u84(0){ d0(bb 17 insn 72) }u85(11){ d5(bb 0 insn -1) }u86(13){ d7(bb 0 insn -1) }u87(14){ d8(bb 0 insn -1) }u88(25){ d15(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(27)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 17 insn 72) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d15(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 14 to worklist
  Adding insn 16 to worklist
  Adding insn 108 to worklist
  Adding insn 21 to worklist
  Adding insn 23 to worklist
  Adding insn 111 to worklist
  Adding insn 113 to worklist
  Adding insn 115 to worklist
  Adding insn 117 to worklist
  Adding insn 119 to worklist
  Adding insn 53 to worklist
  Adding insn 121 to worklist
  Adding insn 78 to worklist
Finished finding needed instructions:
  Adding insn 72 to worklist
Processing use of (reg 135 [ D.23890 ]) in insn 72:
  Adding insn 55 to worklist
  Adding insn 64 to worklist
Processing use of (reg 24 cc) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 142) in insn 63:
  Adding insn 51 to worklist
Processing use of (reg 144) in insn 63:
  Adding insn 61 to worklist
Processing use of (reg 133 [ len_in_bytes ]) in insn 61:
  Adding insn 33 to worklist
  Adding insn 38 to worklist
  Adding insn 43 to worklist
  Adding insn 48 to worklist
  Adding insn 28 to worklist
Processing use of (reg 143) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 134 [ va ]) in insn 60:
  Adding insn 6 to worklist
Processing use of (reg 137 [ bp ]) in insn 6:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 141) in insn 28:
  Adding insn 10 to worklist
Processing use of (reg 140) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 139) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 137 [ bp ]) in insn 7:
Processing use of (reg 0 r0) in insn 78:
Processing use of (reg 24 cc) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 134 [ va ]) in insn 52:
Processing use of (reg 142) in insn 52:
Processing use of (reg 24 cc) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 141) in insn 22:
Processing use of (reg 24 cc) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 141) in insn 20:
Processing use of (reg 24 cc) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 141) in insn 15:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 11 to worklist
Processing use of (reg 141) in insn 11:
Processing use of (reg 24 cc) in insn 12:


arch_check_bp_in_kernelspace

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d} r2={1d} r3={1d} r11={1d,17u} r12={1d} r13={1d,17u} r14={1d,1u} r24={6d,7u} r25={1d,17u} r26={1d,16u} r133={5d,1u} r134={1d,2u,1d} r135={2d,1u} r137={1d,2u} r139={1d,1u} r140={1d,1u} r141={1d,5u} r142={1d,2u} r143={1d,1u} r144={1d,1u,1d} 
;;    total ref usage 129{32d,95u,2e} in 36{36 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,6] 25[15,1] 26[16,1] 133[17,5] 134[22,1] 135[23,2] 137[25,1] 139[26,1] 140[27,1] 141[28,1] 142[29,1] 143[30,1] 144[31,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 137 139 140 141
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 137 139 140 141
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16
;; rd  gen 	(6)
14, 22, 25, 26, 27, 28
;; rd  kill	(11)
9, 10, 11, 12, 13, 14, 22, 25, 26, 27, 28

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/hw_breakpoint.c:459 (set (reg/v/f:SI 137 [ bp ])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ bp ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/hw_breakpoint.c:464 (set (reg/v:SI 134 [ va ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ bp ])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 9 2 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:SI 139)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 137 [ bp ])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (expr_list:REG_DEAD (reg/v/f:SI 137 [ bp ])
        (nil)))

(insn 9 7 10 2 arch/arm/kernel/hw_breakpoint.c:437 (set (subreg:SI (reg:QI 140) 0)
        (zero_extract:SI (reg:SI 139)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:SI 141)
        (zero_extend:SI (reg:QI 140))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 140)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 12 11 80 2 arch/arm/kernel/hw_breakpoint.c:437 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 2 -> ( 11 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28


;; Succ edge  11 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 134 141
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [71.0%]  (fallthru)
(note 80 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(jump_insn 14 80 81 3 arch/arm/kernel/hw_breakpoint.c:437 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28


;; Succ edge  6 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
13
;; rd  kill	(6)
9, 10, 11, 12, 13, 14

;; Pred edge  3 [50.0%]  (fallthru)
(note 81 14 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 15 81 16 4 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 16 15 107 4 arch/arm/kernel/hw_breakpoint.c:437 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 4 -> ( 5 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 16, 22, 25, 26, 27, 28


;; Succ edge  5 [29.0%]  (fallthru)
;; Succ edge  10 [71.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [29.0%]  (fallthru)
(note 107 16 108 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 108 107 109 5 (set (pc)
        (label_ref 26)) -1 (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 16, 22, 25, 26, 27, 28


;; Succ edge  9 [100.0%] 

(barrier 109 108 19)

;; Start of basic block ( 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
12
;; rd  kill	(6)
9, 10, 11, 12, 13, 14

;; Pred edge  3 [50.0%] 
(code_label 19 109 83 6 15 "" [1 uses])

(note 83 19 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 20 83 21 6 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 15 [0xf]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 21 20 84 6 arch/arm/kernel/hw_breakpoint.c:437 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 41)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 6 -> ( 12 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 12, 15, 16, 22, 25, 26, 27, 28


;; Succ edge  12 [29.0%] 
;; Succ edge  7 [71.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 12, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
11
;; rd  kill	(6)
9, 10, 11, 12, 13, 14

;; Pred edge  6 [71.0%]  (fallthru)
(note 84 21 22 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 22 84 23 7 arch/arm/kernel/hw_breakpoint.c:437 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (nil)))

(jump_insn 23 22 110 7 arch/arm/kernel/hw_breakpoint.c:437 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 31)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 7 -> ( 8 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 22, 25, 26, 27, 28


;; Succ edge  8 [29.0%]  (fallthru)
;; Succ edge  10 [71.0%] 

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  7 [29.0%]  (fallthru)
(note 110 23 111 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 111 110 112 8 (set (pc)
        (label_ref 46)) -1 (nil))
;; End of basic block 8 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 22, 25, 26, 27, 28


;; Succ edge  13 [100.0%] 

(barrier 112 111 26)

;; Start of basic block ( 5) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 141
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
17
;; rd  kill	(5)
17, 18, 19, 20, 21

;; Pred edge  5 [100.0%] 
(code_label 26 112 27 9 11 "" [1 uses])

(note 27 26 28 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 113 9 arch/arm/kernel/hw_breakpoint.c:439 (set (reg/v:SI 133 [ len_in_bytes ])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(jump_insn 113 28 114 9 (set (pc)
        (label_ref 49)) -1 (nil))
;; End of basic block 9 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 13, 15, 16, 17, 22, 25, 26, 27, 28


;; Succ edge  14 [100.0%] 

(barrier 114 113 31)

;; Start of basic block ( 7 4) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(17)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
21
;; rd  kill	(5)
17, 18, 19, 20, 21

;; Pred edge  7 [71.0%] 
;; Pred edge  4 [71.0%] 
(code_label 31 114 32 10 10 "" [2 uses])

(note 32 31 33 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 115 10 arch/arm/kernel/hw_breakpoint.c:435 (set (reg/v:SI 133 [ len_in_bytes ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 115 33 116 10 (set (pc)
        (label_ref 49)) -1 (nil))
;; End of basic block 10 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 15, 16, 21, 22, 25, 26, 27, 28


;; Succ edge  14 [100.0%] 

(barrier 116 115 36)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
20
;; rd  kill	(5)
17, 18, 19, 20, 21

;; Pred edge  2 [29.0%] 
(code_label 36 116 37 11 12 "" [1 uses])

(note 37 36 38 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 117 11 arch/arm/kernel/hw_breakpoint.c:442 (set (reg/v:SI 133 [ len_in_bytes ])
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(jump_insn 117 38 118 11 (set (pc)
        (label_ref 49)) -1 (nil))
;; End of basic block 11 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 20, 22, 25, 26, 27, 28


;; Succ edge  14 [100.0%] 

(barrier 118 117 41)

;; Start of basic block ( 6) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u47(11){ }u48(13){ }u49(25){ }u50(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 12, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
19
;; rd  kill	(5)
17, 18, 19, 20, 21

;; Pred edge  6 [29.0%] 
(code_label 41 118 42 12 13 "" [1 uses])

(note 42 41 43 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 119 12 arch/arm/kernel/hw_breakpoint.c:445 (set (reg/v:SI 133 [ len_in_bytes ])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(jump_insn 119 43 120 12 (set (pc)
        (label_ref 49)) -1 (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 12, 15, 16, 19, 22, 25, 26, 27, 28


;; Succ edge  14 [100.0%] 

(barrier 120 119 46)

;; Start of basic block ( 8) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u51(11){ }u52(13){ }u53(25){ }u54(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 133
;; live  kill	
;; rd  in  	(16)
1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 22, 25, 26, 27, 28
;; rd  gen 	(1)
18
;; rd  kill	(5)
17, 18, 19, 20, 21

;; Pred edge  8 [100.0%] 
(code_label 46 120 47 13 14 "" [1 uses])

(note 47 46 48 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 13 arch/arm/kernel/hw_breakpoint.c:448 (set (reg/v:SI 133 [ len_in_bytes ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(17)
1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 18, 22, 25, 26, 27, 28


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 9 13 10 11 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 24 [cc] 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  gen 	 24 [cc] 142
;; live  kill	
;; rd  in  	(24)
1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28
;; rd  gen 	(2)
10, 29
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 29

;; Pred edge  9 [100.0%] 
;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%] 
(code_label 49 48 50 14 16 "" [4 uses])

(note 50 49 51 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 14 arch/arm/kernel/hw_breakpoint.c:467 (set (reg:SI 142)
        (const_int -1090519041 [0xffffffffbeffffff])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 14 arch/arm/kernel/hw_breakpoint.c:467 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ va ])
            (reg:SI 142))) 219 {*arm_cmpsi_insn} (expr_list:REG_EQUAL (compare:CC (reg/v:SI 134 [ va ])
            (const_int -1090519041 [0xffffffffbeffffff]))
        (nil)))

(jump_insn 53 52 54 14 arch/arm/kernel/hw_breakpoint.c:467 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 142
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 142
;; rd  out 	(22)
1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29


;; Succ edge  16 [50.0%] 
;; Succ edge  15 [50.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(22)
1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29
;; rd  gen 	(1)
24
;; rd  kill	(2)
23, 24

;; Pred edge  14 [50.0%]  (fallthru)
(note 54 53 55 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 121 15 arch/arm/kernel/hw_breakpoint.c:467 discrim 2 (set (reg:SI 135 [ D.23890 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 121 55 122 15 (set (pc)
        (label_ref 66)) -1 (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(23)
1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29


;; Succ edge  17 [100.0%] 

(barrier 122 121 58)

;; Start of basic block ( 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u67(11){ }u68(13){ }u69(25){ }u70(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 134 142
;; lr  def 	 24 [cc] 135 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134 142
;; live  gen 	 24 [cc] 135 143 144
;; live  kill	
;; rd  in  	(22)
1, 2, 3, 4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29
;; rd  gen 	(4)
9, 23, 30, 31
;; rd  kill	(10)
9, 10, 11, 12, 13, 14, 23, 24, 30, 31

;; Pred edge  14 [50.0%] 
(code_label 58 122 59 16 17 "" [1 uses])

(note 59 58 60 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 16 arch/arm/kernel/hw_breakpoint.c:467 discrim 3 (set (reg:SI 143)
        (plus:SI (reg/v:SI 134 [ va ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 134 [ va ])
        (nil)))

(insn 61 60 63 16 arch/arm/kernel/hw_breakpoint.c:467 discrim 3 (set (reg:SI 144)
        (plus:SI (reg:SI 143)
            (reg/v:SI 133 [ len_in_bytes ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 143)
        (expr_list:REG_DEAD (reg/v:SI 133 [ len_in_bytes ])
            (nil))))

(insn 63 61 64 16 arch/arm/kernel/hw_breakpoint.c:467 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144)
            (reg:SI 142))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_DEAD (reg:SI 142)
            (expr_list:REG_EQUAL (compare:CC (reg:SI 144)
                    (const_int -1090519041 [0xffffffffbeffffff]))
                (nil)))))

(insn 64 63 66 16 arch/arm/kernel/hw_breakpoint.c:467 discrim 3 (set (reg:SI 135 [ D.23890 ])
        (gtu:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(25)
1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31


;; Succ edge  17 [100.0%]  (fallthru)

;; Start of basic block ( 16 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(27)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  16 [100.0%]  (fallthru)
;; Pred edge  15 [100.0%] 
(code_label 66 64 67 17 18 "" [1 uses])

(note 67 66 72 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 72 67 78 17 arch/arm/kernel/hw_breakpoint.c:468 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.23890 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.23890 ])
        (nil)))

(insn 78 72 0 17 arch/arm/kernel/hw_breakpoint.c:468 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 17 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(27)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_bp_generic_fields (arch_bp_generic_fields)[0:1259]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 28 count 40 (  1.9)


arch_bp_generic_fields

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d,1u} r3={1d} r11={1d,20u} r12={1d} r13={1d,20u} r14={1d,1u} r24={7d,8u} r25={1d,20u} r26={1d,19u} r133={1d,5u} r134={5d,1u} r136={1d,2u} r137={1d,4u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,6u} r142={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 155{34d,121u,0e} in 49{49 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,7] 25[16,1] 26[17,1] 133[18,1] 134[19,5] 136[24,1] 137[25,1] 138[26,1] 139[27,1] 140[28,1] 141[29,1] 142[30,1] 147[31,1] 148[32,1] 149[33,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d16(25){ }d17(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 16, 17
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 17
;; lr  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 16, 17

( 0 )->[2]->( 7 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d16(bb 0 insn -1) }u3(26){ d17(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 136 137 138 139 140 141
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 136 137 138 139 140 141
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 16, 17
;; rd  gen 	(8)
15, 18, 24, 25, 26, 27, 28, 29
;; rd  kill	(14)
9, 10, 11, 12, 13, 14, 15, 18, 24, 25, 26, 27, 28, 29
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d1(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 4
;;      reg 2 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 136 { d24(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 9
;;      reg 139 { d27(bb 2 insn 8) }
;;   UD chains for insn luid 5 uid 10
;;      reg 136 { d24(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 11
;;      reg 140 { d28(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 12
;;      reg 141 { d29(bb 2 insn 11) }
;;   UD chains for insn luid 8 uid 13
;;      reg 24 { d15(bb 2 insn 12) }

( 2 )->[3]->( 8 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ d5(bb 0 insn -1) }u14(13){ d7(bb 0 insn -1) }u15(25){ d16(bb 0 insn -1) }u16(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(1)
14
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 141 { d29(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 15
;;      reg 24 { d14(bb 3 insn 14) }

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d5(bb 0 insn -1) }u20(13){ d7(bb 0 insn -1) }u21(25){ d16(bb 0 insn -1) }u22(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(1)
13
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 16
;;      reg 141 { d29(bb 2 insn 11) }
;;   UD chains for insn luid 1 uid 17
;;      reg 24 { d13(bb 4 insn 16) }

( 4 )->[5]->( 9 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ d5(bb 0 insn -1) }u26(13){ d7(bb 0 insn -1) }u27(25){ d16(bb 0 insn -1) }u28(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138
;; live  gen 	 142
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(1)
30
;; rd  kill	(1)
30
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 23
;;      reg 138 { d26(bb 2 insn 4) }
;;      reg 142 { d30(bb 5 insn 22) }

( 4 )->[6]->( 9 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u31(11){ d5(bb 0 insn -1) }u32(13){ d7(bb 0 insn -1) }u33(25){ d16(bb 0 insn -1) }u34(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 138 { d26(bb 2 insn 4) }
;;      reg 141 { d29(bb 2 insn 11) }

( 2 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(11){ d5(bb 0 insn -1) }u38(13){ d7(bb 0 insn -1) }u39(25){ d16(bb 0 insn -1) }u40(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 35
;;      reg 138 { d26(bb 2 insn 4) }
;;      reg 141 { d29(bb 2 insn 11) }

( 3 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(11){ d5(bb 0 insn -1) }u44(13){ d7(bb 0 insn -1) }u45(25){ d16(bb 0 insn -1) }u46(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 41
;;      reg 138 { d26(bb 2 insn 4) }
;;      reg 141 { d29(bb 2 insn 11) }

( 8 5 6 7 )->[9]->( 17 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u49(11){ d5(bb 0 insn -1) }u50(13){ d7(bb 0 insn -1) }u51(25){ d16(bb 0 insn -1) }u52(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
12
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 44
;;      reg 133 { d18(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 45
;;      reg 24 { d12(bb 9 insn 44) }

( 9 )->[10]->( 13 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u55(11){ d5(bb 0 insn -1) }u56(13){ d7(bb 0 insn -1) }u57(25){ d16(bb 0 insn -1) }u58(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 137
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 47
;;      reg 24 { d12(bb 9 insn 44) }

( 10 )->[11]->( 12 15 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u60(11){ d5(bb 0 insn -1) }u61(13){ d7(bb 0 insn -1) }u62(25){ d16(bb 0 insn -1) }u63(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
11
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 133 { d18(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 49
;;      reg 24 { d11(bb 11 insn 48) }

( 11 )->[12]->( 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ d5(bb 0 insn -1) }u-1(13){ d7(bb 0 insn -1) }u-1(25){ d16(bb 0 insn -1) }u-1(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }

( 10 )->[13]->( 18 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u66(11){ d5(bb 0 insn -1) }u67(13){ d7(bb 0 insn -1) }u68(25){ d16(bb 0 insn -1) }u69(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
10
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 10, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 53
;;      reg 133 { d18(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 54
;;      reg 24 { d10(bb 13 insn 53) }

( 13 )->[14]->( 19 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u72(11){ d5(bb 0 insn -1) }u73(13){ d7(bb 0 insn -1) }u74(25){ d16(bb 0 insn -1) }u75(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 10, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
9
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 55
;;      reg 133 { d18(bb 2 insn 9) }
;;   UD chains for insn luid 1 uid 56
;;      reg 24 { d9(bb 14 insn 55) }

( 14 11 )->[15]->( 20 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u78(11){ d5(bb 0 insn -1) }u79(13){ d7(bb 0 insn -1) }u80(25){ d16(bb 0 insn -1) }u81(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(20)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
23
;; rd  kill	(5)
19, 20, 21, 22, 23
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }

( 12 )->[16]->( 20 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u82(11){ d5(bb 0 insn -1) }u83(13){ d7(bb 0 insn -1) }u84(25){ d16(bb 0 insn -1) }u85(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 134
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
22
;; rd  kill	(5)
19, 20, 21, 22, 23
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(20)
1, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 67
;;      reg 133 { d18(bb 2 insn 9) }
;;      reg 137 { d25(bb 2 insn 3) }

( 9 )->[17]->( 20 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u88(11){ d5(bb 0 insn -1) }u89(13){ d7(bb 0 insn -1) }u90(25){ d16(bb 0 insn -1) }u91(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 134 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 134 147
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(2)
21, 31
;; rd  kill	(6)
19, 20, 21, 22, 23, 31
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 21, 24, 25, 26, 27, 28, 29, 30, 31
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 74
;;      reg 137 { d25(bb 2 insn 3) }
;;      reg 147 { d31(bb 17 insn 73) }

( 13 )->[18]->( 20 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u94(11){ d5(bb 0 insn -1) }u95(13){ d7(bb 0 insn -1) }u96(25){ d16(bb 0 insn -1) }u97(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 134 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 134 148
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 10, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(2)
20, 32
;; rd  kill	(6)
19, 20, 21, 22, 23, 32
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 10, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 30, 32
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 81
;;      reg 137 { d25(bb 2 insn 3) }
;;      reg 148 { d32(bb 18 insn 80) }

( 14 )->[19]->( 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u100(11){ d5(bb 0 insn -1) }u101(13){ d7(bb 0 insn -1) }u102(25){ d16(bb 0 insn -1) }u103(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 134 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 134 149
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(2)
19, 33
;; rd  kill	(6)
19, 20, 21, 22, 23, 33
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 33
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 88
;;      reg 137 { d25(bb 2 insn 3) }
;;      reg 149 { d33(bb 19 insn 87) }

( 17 19 16 15 18 )->[20]->( 1 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u106(11){ d5(bb 0 insn -1) }u107(13){ d7(bb 0 insn -1) }u108(25){ d16(bb 0 insn -1) }u109(26){ d17(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(30)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(30)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }
;;   reg 26 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 96
;;      reg 134 { d23(bb 15 insn 61) d22(bb 16 insn 68) d21(bb 17 insn 75) d20(bb 18 insn 82) d19(bb 19 insn 89) }
;;   UD chains for insn luid 1 uid 102
;;      reg 0 { d0(bb 20 insn 96) }

( 20 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u112(0){ d0(bb 20 insn 96) }u113(11){ d5(bb 0 insn -1) }u114(13){ d7(bb 0 insn -1) }u115(14){ d8(bb 0 insn -1) }u116(25){ d16(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(30)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 20 insn 96) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d16(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 15 to worklist
  Adding insn 17 to worklist
  Adding insn 115 to worklist
  Adding insn 23 to worklist
  Adding insn 117 to worklist
  Adding insn 29 to worklist
  Adding insn 119 to worklist
  Adding insn 35 to worklist
  Adding insn 41 to worklist
  Adding insn 45 to worklist
  Adding insn 47 to worklist
  Adding insn 49 to worklist
  Adding insn 122 to worklist
  Adding insn 54 to worklist
  Adding insn 56 to worklist
  Adding insn 124 to worklist
  Adding insn 126 to worklist
  Adding insn 67 to worklist
  Adding insn 128 to worklist
  Adding insn 74 to worklist
  Adding insn 130 to worklist
  Adding insn 81 to worklist
  Adding insn 88 to worklist
  Adding insn 102 to worklist
Finished finding needed instructions:
  Adding insn 96 to worklist
Processing use of (reg 134 [ D.23917 ]) in insn 96:
  Adding insn 61 to worklist
  Adding insn 68 to worklist
  Adding insn 75 to worklist
  Adding insn 82 to worklist
  Adding insn 89 to worklist
Processing use of (reg 0 r0) in insn 102:
Processing use of (reg 137 [ gen_len ]) in insn 88:
  Adding insn 3 to worklist
Processing use of (reg 149) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 137 [ gen_len ]) in insn 81:
Processing use of (reg 148) in insn 81:
  Adding insn 80 to worklist
Processing use of (reg 137 [ gen_len ]) in insn 74:
Processing use of (reg 147) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 133 [ ctrl$len ]) in insn 67:
  Adding insn 9 to worklist
Processing use of (reg 137 [ gen_len ]) in insn 67:
Processing use of (reg 139) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 136 [ ctrl ]) in insn 8:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 24 cc) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 133 [ ctrl$len ]) in insn 55:
Processing use of (reg 24 cc) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 133 [ ctrl$len ]) in insn 53:
Processing use of (reg 24 cc) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 133 [ ctrl$len ]) in insn 48:
Processing use of (reg 24 cc) in insn 47:
  Adding insn 44 to worklist
Processing use of (reg 133 [ ctrl$len ]) in insn 44:
Processing use of (reg 24 cc) in insn 45:
Processing use of (reg 138 [ gen_type ]) in insn 41:
  Adding insn 4 to worklist
Processing use of (reg 141) in insn 41:
  Adding insn 11 to worklist
Processing use of (reg 140) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 136 [ ctrl ]) in insn 10:
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 138 [ gen_type ]) in insn 35:
Processing use of (reg 141) in insn 35:
Processing use of (reg 138 [ gen_type ]) in insn 29:
Processing use of (reg 141) in insn 29:
Processing use of (reg 138 [ gen_type ]) in insn 23:
Processing use of (reg 142) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 141) in insn 16:
Processing use of (reg 24 cc) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 141) in insn 14:
Processing use of (reg 24 cc) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 141) in insn 12:


arch_bp_generic_fields

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 24[cc]
;;  ref usage 	r0={2d,3u} r1={1d,1u} r2={1d,1u} r3={1d} r11={1d,20u} r12={1d} r13={1d,20u} r14={1d,1u} r24={7d,8u} r25={1d,20u} r26={1d,19u} r133={1d,5u} r134={5d,1u} r136={1d,2u} r137={1d,4u} r138={1d,4u} r139={1d,1u} r140={1d,1u} r141={1d,6u} r142={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} 
;;    total ref usage 155{34d,121u,0e} in 49{49 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 24[9,7] 25[16,1] 26[17,1] 133[18,1] 134[19,5] 136[24,1] 137[25,1] 138[26,1] 139[27,1] 140[28,1] 141[29,1] 142[30,1] 147[31,1] 148[32,1] 149[33,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 136 137 138 139 140 141
;; live  in  	 0 [r0] 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 136 137 138 139 140 141
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 16, 17
;; rd  gen 	(8)
15, 18, 24, 25, 26, 27, 28, 29
;; rd  kill	(14)
9, 10, 11, 12, 13, 14, 15, 18, 24, 25, 26, 27, 28, 29

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 6 3 2 arch/arm/kernel/hw_breakpoint.c:477 (set (reg/v:SI 136 [ ctrl ])
        (reg:SI 0 r0 [ ctrl ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ ctrl ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/hw_breakpoint.c:477 (set (reg/v/f:SI 137 [ gen_len ])
        (reg:SI 1 r1 [ gen_len ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ gen_len ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/hw_breakpoint.c:477 (set (reg/v/f:SI 138 [ gen_type ])
        (reg:SI 2 r2 [ gen_type ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ gen_type ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/hw_breakpoint.c:477 (set (subreg:SI (reg:QI 139) 0)
        (zero_extract:SI (reg/v:SI 136 [ ctrl ])
            (const_int 8 [0x8])
            (const_int 19 [0x13]))) 124 {extzv_t2} (nil))

(insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:477 (set (reg:SI 133 [ ctrl$len ])
        (zero_extend:SI (reg:QI 139))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 139)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/hw_breakpoint.c:479 (set (subreg:SI (reg:QI 140) 0)
        (zero_extract:SI (reg/v:SI 136 [ ctrl ])
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg/v:SI 136 [ ctrl ])
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/hw_breakpoint.c:479 (set (reg:SI 141)
        (zero_extend:SI (reg:QI 140))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 140)
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/hw_breakpoint.c:479 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 13 12 104 2 arch/arm/kernel/hw_breakpoint.c:479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 2 -> ( 7 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29


;; Succ edge  7 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(1)
14
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15

;; Pred edge  2 [71.0%]  (fallthru)
(note 104 13 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 104 15 3 arch/arm/kernel/hw_breakpoint.c:479 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 15 14 105 3 arch/arm/kernel/hw_breakpoint.c:479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 3 -> ( 8 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29


;; Succ edge  8 [29.0%] 
;; Succ edge  4 [71.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(1)
13
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15

;; Pred edge  3 [71.0%]  (fallthru)
(note 105 15 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 105 17 4 arch/arm/kernel/hw_breakpoint.c:479 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 21 4 arch/arm/kernel/hw_breakpoint.c:479 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29


;; Succ edge  6 [29.0%] 
;; Succ edge  5 [71.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138
;; live  gen 	 142
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(1)
30
;; rd  kill	(1)
30

;; Pred edge  4 [71.0%]  (fallthru)
(note 21 17 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 arch/arm/kernel/hw_breakpoint.c:481 (set (reg:SI 142)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 115 5 arch/arm/kernel/hw_breakpoint.c:481 (set (mem:SI (reg/v/f:SI 138 [ gen_type ]) [0 S4 A32])
        (reg:SI 142)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (expr_list:REG_DEAD (reg/v/f:SI 138 [ gen_type ])
            (expr_list:REG_EQUAL (const_int 4 [0x4])
                (nil)))))

(jump_insn 115 23 116 5 arch/arm/kernel/hw_breakpoint.c:482 (set (pc)
        (label_ref 42)) -1 (nil))
;; End of basic block 5 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30


;; Succ edge  9 [100.0%] 

(barrier 116 115 26)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u31(11){ }u32(13){ }u33(25){ }u34(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [29.0%] 
(code_label 26 116 27 6 23 "" [1 uses])

(note 27 26 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 27 117 6 arch/arm/kernel/hw_breakpoint.c:484 (set (mem:SI (reg/v/f:SI 138 [ gen_type ]) [0 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/v/f:SI 138 [ gen_type ])
            (nil))))

(jump_insn 117 29 118 6 arch/arm/kernel/hw_breakpoint.c:485 (set (pc)
        (label_ref 42)) -1 (nil))
;; End of basic block 6 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 13, 16, 17, 18, 24, 25, 26, 27, 28, 29


;; Succ edge  9 [100.0%] 

(barrier 118 117 32)

;; Start of basic block ( 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u37(11){ }u38(13){ }u39(25){ }u40(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [29.0%] 
(code_label 32 118 33 7 24 "" [1 uses])

(note 33 32 35 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 35 33 119 7 arch/arm/kernel/hw_breakpoint.c:487 (set (mem:SI (reg/v/f:SI 138 [ gen_type ]) [0 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/v/f:SI 138 [ gen_type ])
            (nil))))

(jump_insn 119 35 120 7 arch/arm/kernel/hw_breakpoint.c:488 (set (pc)
        (label_ref 42)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29


;; Succ edge  9 [100.0%] 

(barrier 120 119 38)

;; Start of basic block ( 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 141
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137 138 141
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  3 [29.0%] 
(code_label 38 120 39 8 25 "" [1 uses])

(note 39 38 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 41 39 42 8 arch/arm/kernel/hw_breakpoint.c:490 (set (mem:SI (reg/v/f:SI 138 [ gen_type ]) [0 S4 A32])
        (reg:SI 141)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_DEAD (reg/v/f:SI 138 [ gen_type ])
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(18)
1, 2, 3, 4, 5, 6, 7, 8, 14, 16, 17, 18, 24, 25, 26, 27, 28, 29


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 8 5 6 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
12
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15

;; Pred edge  8 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 42 41 43 9 26 "" [3 uses])

(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 9 arch/arm/kernel/hw_breakpoint.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ ctrl$len ])
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 45 44 107 9 arch/arm/kernel/hw_breakpoint.c:497 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 9 -> ( 17 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30


;; Succ edge  17 [29.0%] 
;; Succ edge  10 [71.0%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u55(11){ }u56(13){ }u57(25){ }u58(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 133 137
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  9 [71.0%]  (fallthru)
(note 107 45 47 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 47 107 108 10 arch/arm/kernel/hw_breakpoint.c:497 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 52)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 10 -> ( 13 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30


;; Succ edge  13 [50.0%] 
;; Succ edge  11 [50.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
11
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15

;; Pred edge  10 [50.0%]  (fallthru)
(note 108 47 48 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 48 108 49 11 arch/arm/kernel/hw_breakpoint.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ ctrl$len ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 49 48 121 11 arch/arm/kernel/hw_breakpoint.c:497 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 59)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 12 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  15 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  11 [29.0%]  (fallthru)
(note 121 49 122 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(jump_insn 122 121 123 12 (set (pc)
        (label_ref 64)) -1 (nil))
;; End of basic block 12 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30


;; Succ edge  16 [100.0%] 

(barrier 123 122 52)

;; Start of basic block ( 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
10
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15

;; Pred edge  10 [50.0%] 
(code_label 52 123 110 13 32 "" [1 uses])

(note 110 52 53 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 53 110 54 13 arch/arm/kernel/hw_breakpoint.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ ctrl$len ])
            (const_int 15 [0xf]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 54 53 111 13 arch/arm/kernel/hw_breakpoint.c:497 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 78)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 13 -> ( 18 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 10, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30


;; Succ edge  18 [29.0%] 
;; Succ edge  14 [71.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 10, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
9
;; rd  kill	(7)
9, 10, 11, 12, 13, 14, 15

;; Pred edge  13 [71.0%]  (fallthru)
(note 111 54 55 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 55 111 56 14 arch/arm/kernel/hw_breakpoint.c:497 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ ctrl$len ])
            (const_int 255 [0xff]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ ctrl$len ])
        (nil)))

(jump_insn 56 55 59 14 arch/arm/kernel/hw_breakpoint.c:497 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 85)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 14 -> ( 19 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30


;; Succ edge  19 [29.0%] 
;; Succ edge  15 [71.0%]  (fallthru)

;; Start of basic block ( 14 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u78(11){ }u79(13){ }u80(25){ }u81(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(20)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
23
;; rd  kill	(5)
19, 20, 21, 22, 23

;; Pred edge  14 [71.0%]  (fallthru)
;; Pred edge  11 [71.0%] 
(code_label 59 56 60 15 27 "" [1 uses])

(note 60 59 61 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 61 60 124 15 arch/arm/kernel/hw_breakpoint.c:511 (set (reg:SI 134 [ D.23917 ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 124 61 125 15 (set (pc)
        (label_ref 90)) -1 (nil))
;; End of basic block 15 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30


;; Succ edge  20 [100.0%] 

(barrier 125 124 64)

;; Start of basic block ( 12) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u82(11){ }u83(13){ }u84(25){ }u85(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 137
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 137
;; live  gen 	 134
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(1)
22
;; rd  kill	(5)
19, 20, 21, 22, 23

;; Pred edge  12 [100.0%] 
(code_label 64 125 65 16 28 "" [1 uses])

(note 65 64 67 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 67 65 68 16 arch/arm/kernel/hw_breakpoint.c:499 (set (mem:SI (reg/v/f:SI 137 [ gen_len ]) [0 S4 A32])
        (reg:SI 133 [ ctrl$len ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 137 [ gen_len ])
        (expr_list:REG_DEAD (reg:SI 133 [ ctrl$len ])
            (nil))))

(insn 68 67 126 16 arch/arm/kernel/hw_breakpoint.c:514 (set (reg:SI 134 [ D.23917 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 126 68 127 16 arch/arm/kernel/hw_breakpoint.c:500 (set (pc)
        (label_ref 90)) -1 (nil))
;; End of basic block 16 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(20)
1, 2, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 22, 24, 25, 26, 27, 28, 29, 30


;; Succ edge  20 [100.0%] 

(barrier 127 126 71)

;; Start of basic block ( 9) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 134 147
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 134 147
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(2)
21, 31
;; rd  kill	(6)
19, 20, 21, 22, 23, 31

;; Pred edge  9 [29.0%] 
(code_label 71 127 72 17 29 "" [1 uses])

(note 72 71 73 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 17 arch/arm/kernel/hw_breakpoint.c:502 (set (reg:SI 147)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 74 73 75 17 arch/arm/kernel/hw_breakpoint.c:502 (set (mem:SI (reg/v/f:SI 137 [ gen_len ]) [0 S4 A32])
        (reg:SI 147)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (expr_list:REG_DEAD (reg/v/f:SI 137 [ gen_len ])
            (expr_list:REG_EQUAL (const_int 2 [0x2])
                (nil)))))

(insn 75 74 128 17 arch/arm/kernel/hw_breakpoint.c:514 (set (reg:SI 134 [ D.23917 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 128 75 129 17 arch/arm/kernel/hw_breakpoint.c:503 (set (pc)
        (label_ref 90)) -1 (nil))
;; End of basic block 17 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 12, 16, 17, 18, 21, 24, 25, 26, 27, 28, 29, 30, 31


;; Succ edge  20 [100.0%] 

(barrier 129 128 78)

;; Start of basic block ( 13) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 134 148
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 134 148
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 10, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(2)
20, 32
;; rd  kill	(6)
19, 20, 21, 22, 23, 32

;; Pred edge  13 [29.0%] 
(code_label 78 129 79 18 30 "" [1 uses])

(note 79 78 80 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 81 18 arch/arm/kernel/hw_breakpoint.c:505 (set (reg:SI 148)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 18 arch/arm/kernel/hw_breakpoint.c:505 (set (mem:SI (reg/v/f:SI 137 [ gen_len ]) [0 S4 A32])
        (reg:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_DEAD (reg/v/f:SI 137 [ gen_len ])
            (expr_list:REG_EQUAL (const_int 4 [0x4])
                (nil)))))

(insn 82 81 130 18 arch/arm/kernel/hw_breakpoint.c:514 (set (reg:SI 134 [ D.23917 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 130 82 131 18 arch/arm/kernel/hw_breakpoint.c:506 (set (pc)
        (label_ref 90)) -1 (nil))
;; End of basic block 18 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 10, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 30, 32


;; Succ edge  20 [100.0%] 

(barrier 131 130 85)

;; Start of basic block ( 14) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 134 149
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 134 149
;; live  kill	
;; rd  in  	(19)
1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 24, 25, 26, 27, 28, 29, 30
;; rd  gen 	(2)
19, 33
;; rd  kill	(6)
19, 20, 21, 22, 23, 33

;; Pred edge  14 [29.0%] 
(code_label 85 131 86 19 31 "" [1 uses])

(note 86 85 87 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 87 86 88 19 arch/arm/kernel/hw_breakpoint.c:508 (set (reg:SI 149)
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(insn 88 87 89 19 arch/arm/kernel/hw_breakpoint.c:508 (set (mem:SI (reg/v/f:SI 137 [ gen_len ]) [0 S4 A32])
        (reg:SI 149)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (expr_list:REG_DEAD (reg/v/f:SI 137 [ gen_len ])
            (expr_list:REG_EQUAL (const_int 8 [0x8])
                (nil)))))

(insn 89 88 90 19 arch/arm/kernel/hw_breakpoint.c:514 (set (reg:SI 134 [ D.23917 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 19 -> ( 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(21)
1, 2, 3, 4, 5, 6, 7, 8, 9, 16, 17, 18, 19, 24, 25, 26, 27, 28, 29, 30, 33


;; Succ edge  20 [100.0%]  (fallthru)

;; Start of basic block ( 17 19 16 15 18) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u106(11){ }u107(13){ }u108(25){ }u109(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(30)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
;; rd  gen 	(1)
0
;; rd  kill	(2)
0, 1

;; Pred edge  17 [100.0%] 
;; Pred edge  19 [100.0%]  (fallthru)
;; Pred edge  16 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  18 [100.0%] 
(code_label 90 89 91 20 33 "" [4 uses])

(note 91 90 96 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 96 91 102 20 arch/arm/kernel/hw_breakpoint.c:515 (set (reg/i:SI 0 r0)
        (reg:SI 134 [ D.23917 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.23917 ])
        (nil)))

(insn 102 96 0 20 arch/arm/kernel/hw_breakpoint.c:515 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 20 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(30)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hw_breakpoint_pmu_read (hw_breakpoint_pmu_read)[0:1271]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


hw_breakpoint_pmu_read

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d0(0){ }d1(1){ }d2(2){ }d3(3){ }d4(11){ }d5(12){ }d6(13){ }d7(14){ }d8(25){ }d9(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d4(bb 0 insn -1) }u1(13){ d6(bb 0 insn -1) }u2(25){ d8(bb 0 insn -1) }u3(26){ d9(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }
;;   reg 26 { d9(bb 0 insn -1) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u4(11){ d4(bb 0 insn -1) }u5(13){ d6(bb 0 insn -1) }u6(14){ d7(bb 0 insn -1) }u7(25){ d8(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;;  UD chains for artificial uses
;;   reg 11 { d4(bb 0 insn -1) }
;;   reg 13 { d6(bb 0 insn -1) }
;;   reg 14 { d7(bb 0 insn -1) }
;;   reg 25 { d8(bb 0 insn -1) }

Finding needed instructions:
Finished finding needed instructions:


hw_breakpoint_pmu_read

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} 
;;    total ref usage 18{10d,8u,0e} in 0{0 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 5, 7
0[0,1] 1[1,1] 2[2,1] 3[3,1] 11[4,1] 12[5,1] 13[6,1] 14[7,1] 25[8,1] 26[9,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hw_breakpoint_exceptions_notify (hw_breakpoint_exceptions_notify)[0:1272]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


hw_breakpoint_exceptions_notify

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d1(0){ }d2(1){ }d3(2){ }d4(3){ }d5(11){ }d6(12){ }d7(13){ }d8(14){ }d9(25){ }d10(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d5(bb 0 insn -1) }u1(13){ d7(bb 0 insn -1) }u2(25){ d9(bb 0 insn -1) }u3(26){ d10(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(2)
0, 11
;; rd  kill	(3)
0, 1, 11
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;;  UD chains for artificial uses
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }
;;   reg 26 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 133 { d11(bb 2 insn 8) }
;;   UD chains for insn luid 2 uid 18
;;      reg 0 { d0(bb 2 insn 12) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u6(0){ d0(bb 2 insn 12) }u7(11){ d5(bb 0 insn -1) }u8(13){ d7(bb 0 insn -1) }u9(14){ d8(bb 0 insn -1) }u10(25){ d9(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 2 insn 12) }
;;   reg 11 { d5(bb 0 insn -1) }
;;   reg 13 { d7(bb 0 insn -1) }
;;   reg 14 { d8(bb 0 insn -1) }
;;   reg 25 { d9(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
Finished finding needed instructions:
  Adding insn 12 to worklist
Processing use of (reg 133 [ <result> ]) in insn 12:
  Adding insn 8 to worklist
Processing use of (reg 0 r0) in insn 18:


hw_breakpoint_exceptions_notify

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r3={1d} r11={1d,2u} r12={1d} r13={1d,2u} r14={1d,1u} r25={1d,2u} r26={1d,1u} r133={1d,1u} 
;;    total ref usage 23{12d,11u,0e} in 3{3 regular + 0 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 6, 8
0[0,2] 1[2,1] 2[3,1] 3[4,1] 11[5,1] 12[6,1] 13[7,1] 14[8,1] 25[9,1] 26[10,1] 133[11,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133
;; live  kill	
;; rd  in  	(10)
1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; rd  gen 	(2)
0, 11
;; rd  kill	(3)
0, 1, 11

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 5 6 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 12 2 arch/arm/kernel/hw_breakpoint.c:976 (set (reg:SI 133 [ <result> ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 12 8 18 2 arch/arm/kernel/hw_breakpoint.c:976 (set (reg/i:SI 0 r0)
        (reg:SI 133 [ <result> ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ <result> ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 18 12 0 2 arch/arm/kernel/hw_breakpoint.c:976 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function write_wb_reg (write_wb_reg)[0:1242]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 69 n_edges 132 count 136 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 69 n_edges 132 count 136 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 69 n_edges 132 count 136 (    2)


write_wb_reg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d} r3={2d} r11={1d,68u} r12={2d} r13={1d,69u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d} r25={1d,68u} r26={1d,67u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,64u} r135={1d,2u} 
;;    total ref usage 478{133d,345u,0e} in 136{135 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d7(2){ }d9(3){ }d10(11){ }d12(12){ }d13(13){ }d15(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  kill	(18)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 27, 28
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28

( 0 )->[2]->( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d10(bb 0 insn -1) }u1(13){ d13(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 135
;; live  kill	 24 [cc]
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  gen 	(3)
130, 131, 132
;; rd  kill	(5)
25, 26, 130, 131, 132
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d2(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d5(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 8
;;      reg 135 { d132(bb 2 insn 7) }
;;      reg 135 { d132(bb 2 insn 7) }

( 2 )->[3]->( 68 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d10(bb 0 insn -1) }u10(13){ d13(bb 0 insn -1) }u11(25){ d27(bb 0 insn -1) }u12(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[4]->( 68 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ d10(bb 0 insn -1) }u15(13){ d13(bb 0 insn -1) }u16(25){ d27(bb 0 insn -1) }u17(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 19
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[5]->( 68 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ d10(bb 0 insn -1) }u20(13){ d13(bb 0 insn -1) }u21(25){ d27(bb 0 insn -1) }u22(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 24
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[6]->( 68 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u24(11){ d10(bb 0 insn -1) }u25(13){ d13(bb 0 insn -1) }u26(25){ d27(bb 0 insn -1) }u27(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 29
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[7]->( 68 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u29(11){ d10(bb 0 insn -1) }u30(13){ d13(bb 0 insn -1) }u31(25){ d27(bb 0 insn -1) }u32(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[8]->( 68 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u34(11){ d10(bb 0 insn -1) }u35(13){ d13(bb 0 insn -1) }u36(25){ d27(bb 0 insn -1) }u37(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 39
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[9]->( 68 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u39(11){ d10(bb 0 insn -1) }u40(13){ d13(bb 0 insn -1) }u41(25){ d27(bb 0 insn -1) }u42(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 44
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[10]->( 68 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u44(11){ d10(bb 0 insn -1) }u45(13){ d13(bb 0 insn -1) }u46(25){ d27(bb 0 insn -1) }u47(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 49
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[11]->( 68 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u49(11){ d10(bb 0 insn -1) }u50(13){ d13(bb 0 insn -1) }u51(25){ d27(bb 0 insn -1) }u52(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 54
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[12]->( 68 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u54(11){ d10(bb 0 insn -1) }u55(13){ d13(bb 0 insn -1) }u56(25){ d27(bb 0 insn -1) }u57(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 59
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[13]->( 68 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u59(11){ d10(bb 0 insn -1) }u60(13){ d13(bb 0 insn -1) }u61(25){ d27(bb 0 insn -1) }u62(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 64
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[14]->( 68 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u64(11){ d10(bb 0 insn -1) }u65(13){ d13(bb 0 insn -1) }u66(25){ d27(bb 0 insn -1) }u67(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 69
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[15]->( 68 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u69(11){ d10(bb 0 insn -1) }u70(13){ d13(bb 0 insn -1) }u71(25){ d27(bb 0 insn -1) }u72(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 74
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[16]->( 68 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u74(11){ d10(bb 0 insn -1) }u75(13){ d13(bb 0 insn -1) }u76(25){ d27(bb 0 insn -1) }u77(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 79
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[17]->( 68 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u79(11){ d10(bb 0 insn -1) }u80(13){ d13(bb 0 insn -1) }u81(25){ d27(bb 0 insn -1) }u82(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 84
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[18]->( 68 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u84(11){ d10(bb 0 insn -1) }u85(13){ d13(bb 0 insn -1) }u86(25){ d27(bb 0 insn -1) }u87(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 89
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[19]->( 68 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u89(11){ d10(bb 0 insn -1) }u90(13){ d13(bb 0 insn -1) }u91(25){ d27(bb 0 insn -1) }u92(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 94
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[20]->( 68 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u94(11){ d10(bb 0 insn -1) }u95(13){ d13(bb 0 insn -1) }u96(25){ d27(bb 0 insn -1) }u97(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 99
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[21]->( 68 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u99(11){ d10(bb 0 insn -1) }u100(13){ d13(bb 0 insn -1) }u101(25){ d27(bb 0 insn -1) }u102(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 104
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[22]->( 68 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u104(11){ d10(bb 0 insn -1) }u105(13){ d13(bb 0 insn -1) }u106(25){ d27(bb 0 insn -1) }u107(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 109
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[23]->( 68 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u109(11){ d10(bb 0 insn -1) }u110(13){ d13(bb 0 insn -1) }u111(25){ d27(bb 0 insn -1) }u112(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 114
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[24]->( 68 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u114(11){ d10(bb 0 insn -1) }u115(13){ d13(bb 0 insn -1) }u116(25){ d27(bb 0 insn -1) }u117(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 119
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[25]->( 68 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u119(11){ d10(bb 0 insn -1) }u120(13){ d13(bb 0 insn -1) }u121(25){ d27(bb 0 insn -1) }u122(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 124
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[26]->( 68 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u124(11){ d10(bb 0 insn -1) }u125(13){ d13(bb 0 insn -1) }u126(25){ d27(bb 0 insn -1) }u127(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 129
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[27]->( 68 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u129(11){ d10(bb 0 insn -1) }u130(13){ d13(bb 0 insn -1) }u131(25){ d27(bb 0 insn -1) }u132(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 134
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[28]->( 68 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u134(11){ d10(bb 0 insn -1) }u135(13){ d13(bb 0 insn -1) }u136(25){ d27(bb 0 insn -1) }u137(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 139
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[29]->( 68 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u139(11){ d10(bb 0 insn -1) }u140(13){ d13(bb 0 insn -1) }u141(25){ d27(bb 0 insn -1) }u142(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 144
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[30]->( 68 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u144(11){ d10(bb 0 insn -1) }u145(13){ d13(bb 0 insn -1) }u146(25){ d27(bb 0 insn -1) }u147(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 149
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[31]->( 68 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u149(11){ d10(bb 0 insn -1) }u150(13){ d13(bb 0 insn -1) }u151(25){ d27(bb 0 insn -1) }u152(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 154
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[32]->( 68 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u154(11){ d10(bb 0 insn -1) }u155(13){ d13(bb 0 insn -1) }u156(25){ d27(bb 0 insn -1) }u157(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 159
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[33]->( 68 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u159(11){ d10(bb 0 insn -1) }u160(13){ d13(bb 0 insn -1) }u161(25){ d27(bb 0 insn -1) }u162(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 164
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[34]->( 68 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u164(11){ d10(bb 0 insn -1) }u165(13){ d13(bb 0 insn -1) }u166(25){ d27(bb 0 insn -1) }u167(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 169
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[35]->( 68 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u169(11){ d10(bb 0 insn -1) }u170(13){ d13(bb 0 insn -1) }u171(25){ d27(bb 0 insn -1) }u172(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 174
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[36]->( 68 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u174(11){ d10(bb 0 insn -1) }u175(13){ d13(bb 0 insn -1) }u176(25){ d27(bb 0 insn -1) }u177(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 179
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[37]->( 68 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u179(11){ d10(bb 0 insn -1) }u180(13){ d13(bb 0 insn -1) }u181(25){ d27(bb 0 insn -1) }u182(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 184
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[38]->( 68 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u184(11){ d10(bb 0 insn -1) }u185(13){ d13(bb 0 insn -1) }u186(25){ d27(bb 0 insn -1) }u187(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 189
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[39]->( 68 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u189(11){ d10(bb 0 insn -1) }u190(13){ d13(bb 0 insn -1) }u191(25){ d27(bb 0 insn -1) }u192(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 194
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[40]->( 68 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u194(11){ d10(bb 0 insn -1) }u195(13){ d13(bb 0 insn -1) }u196(25){ d27(bb 0 insn -1) }u197(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 199
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[41]->( 68 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u199(11){ d10(bb 0 insn -1) }u200(13){ d13(bb 0 insn -1) }u201(25){ d27(bb 0 insn -1) }u202(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 204
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[42]->( 68 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u204(11){ d10(bb 0 insn -1) }u205(13){ d13(bb 0 insn -1) }u206(25){ d27(bb 0 insn -1) }u207(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 209
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[43]->( 68 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u209(11){ d10(bb 0 insn -1) }u210(13){ d13(bb 0 insn -1) }u211(25){ d27(bb 0 insn -1) }u212(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 214
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[44]->( 68 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u214(11){ d10(bb 0 insn -1) }u215(13){ d13(bb 0 insn -1) }u216(25){ d27(bb 0 insn -1) }u217(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 219
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[45]->( 68 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u219(11){ d10(bb 0 insn -1) }u220(13){ d13(bb 0 insn -1) }u221(25){ d27(bb 0 insn -1) }u222(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 224
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[46]->( 68 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u224(11){ d10(bb 0 insn -1) }u225(13){ d13(bb 0 insn -1) }u226(25){ d27(bb 0 insn -1) }u227(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 229
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[47]->( 68 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u229(11){ d10(bb 0 insn -1) }u230(13){ d13(bb 0 insn -1) }u231(25){ d27(bb 0 insn -1) }u232(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 234
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[48]->( 68 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u234(11){ d10(bb 0 insn -1) }u235(13){ d13(bb 0 insn -1) }u236(25){ d27(bb 0 insn -1) }u237(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 239
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[49]->( 68 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u239(11){ d10(bb 0 insn -1) }u240(13){ d13(bb 0 insn -1) }u241(25){ d27(bb 0 insn -1) }u242(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 244
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[50]->( 68 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u244(11){ d10(bb 0 insn -1) }u245(13){ d13(bb 0 insn -1) }u246(25){ d27(bb 0 insn -1) }u247(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 249
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[51]->( 68 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u249(11){ d10(bb 0 insn -1) }u250(13){ d13(bb 0 insn -1) }u251(25){ d27(bb 0 insn -1) }u252(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 254
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[52]->( 68 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u254(11){ d10(bb 0 insn -1) }u255(13){ d13(bb 0 insn -1) }u256(25){ d27(bb 0 insn -1) }u257(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 259
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[53]->( 68 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u259(11){ d10(bb 0 insn -1) }u260(13){ d13(bb 0 insn -1) }u261(25){ d27(bb 0 insn -1) }u262(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 264
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[54]->( 68 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u264(11){ d10(bb 0 insn -1) }u265(13){ d13(bb 0 insn -1) }u266(25){ d27(bb 0 insn -1) }u267(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 269
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[55]->( 68 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u269(11){ d10(bb 0 insn -1) }u270(13){ d13(bb 0 insn -1) }u271(25){ d27(bb 0 insn -1) }u272(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 274
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[56]->( 68 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u274(11){ d10(bb 0 insn -1) }u275(13){ d13(bb 0 insn -1) }u276(25){ d27(bb 0 insn -1) }u277(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 279
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[57]->( 68 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u279(11){ d10(bb 0 insn -1) }u280(13){ d13(bb 0 insn -1) }u281(25){ d27(bb 0 insn -1) }u282(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 284
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[58]->( 68 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u284(11){ d10(bb 0 insn -1) }u285(13){ d13(bb 0 insn -1) }u286(25){ d27(bb 0 insn -1) }u287(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 289
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[59]->( 68 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u289(11){ d10(bb 0 insn -1) }u290(13){ d13(bb 0 insn -1) }u291(25){ d27(bb 0 insn -1) }u292(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 294
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[60]->( 68 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u294(11){ d10(bb 0 insn -1) }u295(13){ d13(bb 0 insn -1) }u296(25){ d27(bb 0 insn -1) }u297(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 299
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[61]->( 68 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u299(11){ d10(bb 0 insn -1) }u300(13){ d13(bb 0 insn -1) }u301(25){ d27(bb 0 insn -1) }u302(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 304
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[62]->( 68 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u304(11){ d10(bb 0 insn -1) }u305(13){ d13(bb 0 insn -1) }u306(25){ d27(bb 0 insn -1) }u307(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 309
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[63]->( 68 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u309(11){ d10(bb 0 insn -1) }u310(13){ d13(bb 0 insn -1) }u311(25){ d27(bb 0 insn -1) }u312(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 314
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[64]->( 68 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u314(11){ d10(bb 0 insn -1) }u315(13){ d13(bb 0 insn -1) }u316(25){ d27(bb 0 insn -1) }u317(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 319
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[65]->( 68 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u319(11){ d10(bb 0 insn -1) }u320(13){ d13(bb 0 insn -1) }u321(25){ d27(bb 0 insn -1) }u322(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 324
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[66]->( 68 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u324(11){ d10(bb 0 insn -1) }u325(13){ d13(bb 0 insn -1) }u326(25){ d27(bb 0 insn -1) }u327(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 329
;;      reg 134 { d131(bb 2 insn 3) }

( 2 )->[67]->( 68 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u329(11){ d10(bb 0 insn -1) }u330(13){ d13(bb 0 insn -1) }u331(25){ d27(bb 0 insn -1) }u332(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(1)
1
;; rd  kill	(5)
0, 1, 2, 14, 15
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
1, 5, 7, 9, 10, 12, 13, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 336
;;      reg 133 { d130(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 337
;;      reg 13 { d13(bb 0 insn -1) }
;;      reg 0 { d0(bb 67 insn 335) }
;;      reg 1 { d4(bb 67 insn 336) }

( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 )->[68]->( 1 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u337(11){ d10(bb 0 insn -1) }u338(13){ d13(bb 0 insn -1) }u339(25){ d27(bb 0 insn -1) }u340(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
1, 2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
1, 2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }

( 68 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u341(11){ d10(bb 0 insn -1) }u342(13){ d13(bb 0 insn -1) }u343(14){ d15(bb 0 insn -1) }u344(25){ d27(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
1, 2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(14)
1, 2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;;  UD chains for artificial uses
;;   reg 11 { d10(bb 0 insn -1) }
;;   reg 13 { d13(bb 0 insn -1) }
;;   reg 14 { d15(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 348 to worklist
  Adding insn 14 to worklist
  Adding insn 350 to worklist
  Adding insn 19 to worklist
  Adding insn 352 to worklist
  Adding insn 24 to worklist
  Adding insn 354 to worklist
  Adding insn 29 to worklist
  Adding insn 356 to worklist
  Adding insn 34 to worklist
  Adding insn 358 to worklist
  Adding insn 39 to worklist
  Adding insn 360 to worklist
  Adding insn 44 to worklist
  Adding insn 362 to worklist
  Adding insn 49 to worklist
  Adding insn 364 to worklist
  Adding insn 54 to worklist
  Adding insn 366 to worklist
  Adding insn 59 to worklist
  Adding insn 368 to worklist
  Adding insn 64 to worklist
  Adding insn 370 to worklist
  Adding insn 69 to worklist
  Adding insn 372 to worklist
  Adding insn 74 to worklist
  Adding insn 374 to worklist
  Adding insn 79 to worklist
  Adding insn 376 to worklist
  Adding insn 84 to worklist
  Adding insn 378 to worklist
  Adding insn 89 to worklist
  Adding insn 380 to worklist
  Adding insn 94 to worklist
  Adding insn 382 to worklist
  Adding insn 99 to worklist
  Adding insn 384 to worklist
  Adding insn 104 to worklist
  Adding insn 386 to worklist
  Adding insn 109 to worklist
  Adding insn 388 to worklist
  Adding insn 114 to worklist
  Adding insn 390 to worklist
  Adding insn 119 to worklist
  Adding insn 392 to worklist
  Adding insn 124 to worklist
  Adding insn 394 to worklist
  Adding insn 129 to worklist
  Adding insn 396 to worklist
  Adding insn 134 to worklist
  Adding insn 398 to worklist
  Adding insn 139 to worklist
  Adding insn 400 to worklist
  Adding insn 144 to worklist
  Adding insn 402 to worklist
  Adding insn 149 to worklist
  Adding insn 404 to worklist
  Adding insn 154 to worklist
  Adding insn 406 to worklist
  Adding insn 159 to worklist
  Adding insn 408 to worklist
  Adding insn 164 to worklist
  Adding insn 410 to worklist
  Adding insn 169 to worklist
  Adding insn 412 to worklist
  Adding insn 174 to worklist
  Adding insn 414 to worklist
  Adding insn 179 to worklist
  Adding insn 416 to worklist
  Adding insn 184 to worklist
  Adding insn 418 to worklist
  Adding insn 189 to worklist
  Adding insn 420 to worklist
  Adding insn 194 to worklist
  Adding insn 422 to worklist
  Adding insn 199 to worklist
  Adding insn 424 to worklist
  Adding insn 204 to worklist
  Adding insn 426 to worklist
  Adding insn 209 to worklist
  Adding insn 428 to worklist
  Adding insn 214 to worklist
  Adding insn 430 to worklist
  Adding insn 219 to worklist
  Adding insn 432 to worklist
  Adding insn 224 to worklist
  Adding insn 434 to worklist
  Adding insn 229 to worklist
  Adding insn 436 to worklist
  Adding insn 234 to worklist
  Adding insn 438 to worklist
  Adding insn 239 to worklist
  Adding insn 440 to worklist
  Adding insn 244 to worklist
  Adding insn 442 to worklist
  Adding insn 249 to worklist
  Adding insn 444 to worklist
  Adding insn 254 to worklist
  Adding insn 446 to worklist
  Adding insn 259 to worklist
  Adding insn 448 to worklist
  Adding insn 264 to worklist
  Adding insn 450 to worklist
  Adding insn 269 to worklist
  Adding insn 452 to worklist
  Adding insn 274 to worklist
  Adding insn 454 to worklist
  Adding insn 279 to worklist
  Adding insn 456 to worklist
  Adding insn 284 to worklist
  Adding insn 458 to worklist
  Adding insn 289 to worklist
  Adding insn 460 to worklist
  Adding insn 294 to worklist
  Adding insn 462 to worklist
  Adding insn 299 to worklist
  Adding insn 464 to worklist
  Adding insn 304 to worklist
  Adding insn 466 to worklist
  Adding insn 309 to worklist
  Adding insn 468 to worklist
  Adding insn 314 to worklist
  Adding insn 470 to worklist
  Adding insn 319 to worklist
  Adding insn 472 to worklist
  Adding insn 324 to worklist
  Adding insn 474 to worklist
  Adding insn 329 to worklist
  Adding insn 337 to worklist
  Adding insn 340 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 337:
Processing use of (reg 0 r0) in insn 337:
  Adding insn 335 to worklist
Processing use of (reg 1 r1) in insn 337:
  Adding insn 336 to worklist
Processing use of (reg 133 [ n ]) in insn 336:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 134 [ val ]) in insn 329:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 134 [ val ]) in insn 324:
Processing use of (reg 134 [ val ]) in insn 319:
Processing use of (reg 134 [ val ]) in insn 314:
Processing use of (reg 134 [ val ]) in insn 309:
Processing use of (reg 134 [ val ]) in insn 304:
Processing use of (reg 134 [ val ]) in insn 299:
Processing use of (reg 134 [ val ]) in insn 294:
Processing use of (reg 134 [ val ]) in insn 289:
Processing use of (reg 134 [ val ]) in insn 284:
Processing use of (reg 134 [ val ]) in insn 279:
Processing use of (reg 134 [ val ]) in insn 274:
Processing use of (reg 134 [ val ]) in insn 269:
Processing use of (reg 134 [ val ]) in insn 264:
Processing use of (reg 134 [ val ]) in insn 259:
Processing use of (reg 134 [ val ]) in insn 254:
Processing use of (reg 134 [ val ]) in insn 249:
Processing use of (reg 134 [ val ]) in insn 244:
Processing use of (reg 134 [ val ]) in insn 239:
Processing use of (reg 134 [ val ]) in insn 234:
Processing use of (reg 134 [ val ]) in insn 229:
Processing use of (reg 134 [ val ]) in insn 224:
Processing use of (reg 134 [ val ]) in insn 219:
Processing use of (reg 134 [ val ]) in insn 214:
Processing use of (reg 134 [ val ]) in insn 209:
Processing use of (reg 134 [ val ]) in insn 204:
Processing use of (reg 134 [ val ]) in insn 199:
Processing use of (reg 134 [ val ]) in insn 194:
Processing use of (reg 134 [ val ]) in insn 189:
Processing use of (reg 134 [ val ]) in insn 184:
Processing use of (reg 134 [ val ]) in insn 179:
Processing use of (reg 134 [ val ]) in insn 174:
Processing use of (reg 134 [ val ]) in insn 169:
Processing use of (reg 134 [ val ]) in insn 164:
Processing use of (reg 134 [ val ]) in insn 159:
Processing use of (reg 134 [ val ]) in insn 154:
Processing use of (reg 134 [ val ]) in insn 149:
Processing use of (reg 134 [ val ]) in insn 144:
Processing use of (reg 134 [ val ]) in insn 139:
Processing use of (reg 134 [ val ]) in insn 134:
Processing use of (reg 134 [ val ]) in insn 129:
Processing use of (reg 134 [ val ]) in insn 124:
Processing use of (reg 134 [ val ]) in insn 119:
Processing use of (reg 134 [ val ]) in insn 114:
Processing use of (reg 134 [ val ]) in insn 109:
Processing use of (reg 134 [ val ]) in insn 104:
Processing use of (reg 134 [ val ]) in insn 99:
Processing use of (reg 134 [ val ]) in insn 94:
Processing use of (reg 134 [ val ]) in insn 89:
Processing use of (reg 134 [ val ]) in insn 84:
Processing use of (reg 134 [ val ]) in insn 79:
Processing use of (reg 134 [ val ]) in insn 74:
Processing use of (reg 134 [ val ]) in insn 69:
Processing use of (reg 134 [ val ]) in insn 64:
Processing use of (reg 134 [ val ]) in insn 59:
Processing use of (reg 134 [ val ]) in insn 54:
Processing use of (reg 134 [ val ]) in insn 49:
Processing use of (reg 134 [ val ]) in insn 44:
Processing use of (reg 134 [ val ]) in insn 39:
Processing use of (reg 134 [ val ]) in insn 34:
Processing use of (reg 134 [ val ]) in insn 29:
Processing use of (reg 134 [ val ]) in insn 24:
Processing use of (reg 134 [ val ]) in insn 19:
Processing use of (reg 134 [ val ]) in insn 14:
Processing use of (reg 135) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 135) in insn 8:
Processing use of (reg 133 [ n ]) in insn 7:


write_wb_reg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,2u} r1={3d,2u} r2={2d} r3={2d} r11={1d,68u} r12={2d} r13={1d,69u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d} r25={1d,68u} r26={1d,67u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,2u} r134={1d,64u} r135={1d,2u} 
;;    total ref usage 478{133d,345u,0e} in 136{135 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,3] 2[6,2] 3[8,2] 11[10,1] 12[11,2] 13[13,1] 14[14,2] 15[16,1] 16[17,1] 17[18,1] 18[19,1] 19[20,1] 20[21,1] 21[22,1] 22[23,1] 23[24,1] 24[25,2] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 134 135
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133 134 135
;; live  kill	 24 [cc]
;; rd  in  	(10)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28
;; rd  gen 	(3)
130, 131, 132
;; rd  kill	(5)
25, 26, 130, 131, 132

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/hw_breakpoint.c:121 (set (reg/v:SI 133 [ n ])
        (reg:SI 0 r0 [ n ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ n ])
        (nil)))

(insn 3 2 4 2 arch/arm/kernel/hw_breakpoint.c:121 (set (reg/v:SI 134 [ val ])
        (reg:SI 1 r1 [ val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ val ])
        (nil)))

(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/hw_breakpoint.c:122 (set (reg:SI 135)
        (plus:SI (reg/v:SI 133 [ n ])
            (const_int -64 [0xffffffffffffffc0]))) 4 {*arm_addsi3} (nil))

(jump_insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:122 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 135)
                        (const_int 63 [0x3f]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 135)
                                (const_int 4 [0x4]))
                            (label_ref 9)) [0 S4 A32])
                    (label_ref 332)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 9))
        ]) 265 {arm_casesi_internal} (expr_list:REG_DEAD (reg:SI 135)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (insn_list:REG_LABEL_TARGET 332 (nil)))))
;; End of basic block 2 -> ( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 134
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  67 [1.5%] 
;; Succ edge  3 [1.5%] 
;; Succ edge  4 [1.5%] 
;; Succ edge  5 [1.5%] 
;; Succ edge  6 [1.5%] 
;; Succ edge  7 [1.5%] 
;; Succ edge  8 [1.5%] 
;; Succ edge  9 [1.5%] 
;; Succ edge  10 [1.5%] 
;; Succ edge  11 [1.5%] 
;; Succ edge  12 [1.5%] 
;; Succ edge  13 [1.5%] 
;; Succ edge  14 [1.5%] 
;; Succ edge  15 [1.5%] 
;; Succ edge  16 [1.5%] 
;; Succ edge  17 [1.5%] 
;; Succ edge  18 [1.5%] 
;; Succ edge  19 [1.5%] 
;; Succ edge  20 [1.5%] 
;; Succ edge  21 [1.5%] 
;; Succ edge  22 [1.5%] 
;; Succ edge  23 [1.5%] 
;; Succ edge  24 [1.5%] 
;; Succ edge  25 [1.5%] 
;; Succ edge  26 [1.5%] 
;; Succ edge  27 [1.5%] 
;; Succ edge  28 [1.5%] 
;; Succ edge  29 [1.5%] 
;; Succ edge  30 [1.5%] 
;; Succ edge  31 [1.5%] 
;; Succ edge  32 [1.5%] 
;; Succ edge  33 [1.5%] 
;; Succ edge  34 [1.5%] 
;; Succ edge  35 [1.5%] 
;; Succ edge  36 [1.5%] 
;; Succ edge  37 [1.5%] 
;; Succ edge  38 [1.5%] 
;; Succ edge  39 [1.5%] 
;; Succ edge  40 [1.5%] 
;; Succ edge  41 [1.5%] 
;; Succ edge  42 [1.5%] 
;; Succ edge  43 [1.5%] 
;; Succ edge  44 [1.5%] 
;; Succ edge  45 [1.5%] 
;; Succ edge  46 [1.5%] 
;; Succ edge  47 [1.5%] 
;; Succ edge  48 [1.5%] 
;; Succ edge  49 [1.5%] 
;; Succ edge  50 [1.5%] 
;; Succ edge  51 [1.5%] 
;; Succ edge  52 [1.5%] 
;; Succ edge  53 [1.5%] 
;; Succ edge  54 [1.5%] 
;; Succ edge  55 [1.5%] 
;; Succ edge  56 [1.5%] 
;; Succ edge  57 [1.5%] 
;; Succ edge  58 [1.5%] 
;; Succ edge  59 [1.5%] 
;; Succ edge  60 [1.5%] 
;; Succ edge  61 [1.5%] 
;; Succ edge  62 [1.5%] 
;; Succ edge  63 [1.5%] 
;; Succ edge  64 [1.5%] 
;; Succ edge  65 [1.5%] 
;; Succ edge  66 [1.5%] 

;; Insn is not within a basic block
(code_label 9 8 10 109 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 10 9 11 arch/arm/kernel/hw_breakpoint.c:122 (addr_vec:SI [
            (label_ref:SI 12)
            (label_ref:SI 17)
            (label_ref:SI 22)
            (label_ref:SI 27)
            (label_ref:SI 32)
            (label_ref:SI 37)
            (label_ref:SI 42)
            (label_ref:SI 47)
            (label_ref:SI 52)
            (label_ref:SI 57)
            (label_ref:SI 62)
            (label_ref:SI 67)
            (label_ref:SI 72)
            (label_ref:SI 77)
            (label_ref:SI 82)
            (label_ref:SI 87)
            (label_ref:SI 92)
            (label_ref:SI 97)
            (label_ref:SI 102)
            (label_ref:SI 107)
            (label_ref:SI 112)
            (label_ref:SI 117)
            (label_ref:SI 122)
            (label_ref:SI 127)
            (label_ref:SI 132)
            (label_ref:SI 137)
            (label_ref:SI 142)
            (label_ref:SI 147)
            (label_ref:SI 152)
            (label_ref:SI 157)
            (label_ref:SI 162)
            (label_ref:SI 167)
            (label_ref:SI 172)
            (label_ref:SI 177)
            (label_ref:SI 182)
            (label_ref:SI 187)
            (label_ref:SI 192)
            (label_ref:SI 197)
            (label_ref:SI 202)
            (label_ref:SI 207)
            (label_ref:SI 212)
            (label_ref:SI 217)
            (label_ref:SI 222)
            (label_ref:SI 227)
            (label_ref:SI 232)
            (label_ref:SI 237)
            (label_ref:SI 242)
            (label_ref:SI 247)
            (label_ref:SI 252)
            (label_ref:SI 257)
            (label_ref:SI 262)
            (label_ref:SI 267)
            (label_ref:SI 272)
            (label_ref:SI 277)
            (label_ref:SI 282)
            (label_ref:SI 287)
            (label_ref:SI 292)
            (label_ref:SI 297)
            (label_ref:SI 302)
            (label_ref:SI 307)
            (label_ref:SI 312)
            (label_ref:SI 317)
            (label_ref:SI 322)
            (label_ref:SI 327)
        ]) -1 (nil))

(barrier 11 10 12)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 12 11 13 3 45 "" [1 uses])

(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 348 3 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c0, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 348 14 349 3 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 3 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 349 348 17)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u14(11){ }u15(13){ }u16(25){ }u17(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 17 349 18 4 46 "" [1 uses])

(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 350 4 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c1, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 350 19 351 4 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 4 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 351 350 22)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 22 351 23 5 47 "" [1 uses])

(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 24 23 352 5 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c2, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 352 24 353 5 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 5 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 353 352 27)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 27 353 28 6 48 "" [1 uses])

(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 354 6 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c3, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 354 29 355 6 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 6 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 355 354 32)

;; Start of basic block ( 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u29(11){ }u30(13){ }u31(25){ }u32(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 32 355 33 7 49 "" [1 uses])

(note 33 32 34 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 356 7 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c4, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 356 34 357 7 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 7 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 357 356 37)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 37 357 38 8 50 "" [1 uses])

(note 38 37 39 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 39 38 358 8 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c5, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 358 39 359 8 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 8 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 359 358 42)

;; Start of basic block ( 2) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u39(11){ }u40(13){ }u41(25){ }u42(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 42 359 43 9 51 "" [1 uses])

(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 360 9 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c6, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 360 44 361 9 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 9 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 361 360 47)

;; Start of basic block ( 2) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 47 361 48 10 52 "" [1 uses])

(note 48 47 49 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 362 10 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c7, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 362 49 363 10 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 10 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 363 362 52)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 52 363 53 11 53 "" [1 uses])

(note 53 52 54 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 54 53 364 11 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c8, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 364 54 365 11 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 11 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 365 364 57)

;; Start of basic block ( 2) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 57 365 58 12 54 "" [1 uses])

(note 58 57 59 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 366 12 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c9, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 366 59 367 12 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 12 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 367 366 62)

;; Start of basic block ( 2) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u59(11){ }u60(13){ }u61(25){ }u62(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 62 367 63 13 55 "" [1 uses])

(note 63 62 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 368 13 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c10, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 368 64 369 13 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 13 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 369 368 67)

;; Start of basic block ( 2) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 67 369 68 14 56 "" [1 uses])

(note 68 67 69 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 69 68 370 14 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c11, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 370 69 371 14 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 14 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 371 370 72)

;; Start of basic block ( 2) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 72 371 73 15 57 "" [1 uses])

(note 73 72 74 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 372 15 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c12, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 372 74 373 15 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 15 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 373 372 77)

;; Start of basic block ( 2) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u74(11){ }u75(13){ }u76(25){ }u77(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 77 373 78 16 58 "" [1 uses])

(note 78 77 79 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 374 16 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c13, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 374 79 375 16 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 16 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 375 374 82)

;; Start of basic block ( 2) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 82 375 83 17 59 "" [1 uses])

(note 83 82 84 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 84 83 376 17 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c14, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 376 84 377 17 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 17 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 377 376 87)

;; Start of basic block ( 2) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 87 377 88 18 60 "" [1 uses])

(note 88 87 89 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 378 18 arch/arm/kernel/hw_breakpoint.c:123 (asm_operands/v ("mcr p14, 0, %0, c0,c15, 4") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082454) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 378 89 379 18 arch/arm/kernel/hw_breakpoint.c:123 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 18 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 379 378 92)

;; Start of basic block ( 2) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 92 379 93 19 61 "" [1 uses])

(note 93 92 94 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 94 93 380 19 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c0, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 380 94 381 19 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 19 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 381 380 97)

;; Start of basic block ( 2) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 97 381 98 20 62 "" [1 uses])

(note 98 97 99 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 99 98 382 20 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c1, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 382 99 383 20 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 20 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 383 382 102)

;; Start of basic block ( 2) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u99(11){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 102 383 103 21 63 "" [1 uses])

(note 103 102 104 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 104 103 384 21 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c2, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 384 104 385 21 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 21 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 385 384 107)

;; Start of basic block ( 2) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 107 385 108 22 64 "" [1 uses])

(note 108 107 109 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 386 22 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c3, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 386 109 387 22 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 22 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 387 386 112)

;; Start of basic block ( 2) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 112 387 113 23 65 "" [1 uses])

(note 113 112 114 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 388 23 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c4, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 388 114 389 23 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 23 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 389 388 117)

;; Start of basic block ( 2) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 117 389 118 24 66 "" [1 uses])

(note 118 117 119 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 119 118 390 24 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c5, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 390 119 391 24 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 24 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 391 390 122)

;; Start of basic block ( 2) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 122 391 123 25 67 "" [1 uses])

(note 123 122 124 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 392 25 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c6, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 392 124 393 25 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 25 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 393 392 127)

;; Start of basic block ( 2) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 127 393 128 26 68 "" [1 uses])

(note 128 127 129 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 129 128 394 26 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c7, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 394 129 395 26 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 26 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 395 394 132)

;; Start of basic block ( 2) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u129(11){ }u130(13){ }u131(25){ }u132(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 132 395 133 27 69 "" [1 uses])

(note 133 132 134 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 134 133 396 27 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c8, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 396 134 397 27 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 27 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 397 396 137)

;; Start of basic block ( 2) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u134(11){ }u135(13){ }u136(25){ }u137(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 137 397 138 28 70 "" [1 uses])

(note 138 137 139 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 398 28 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c9, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 398 139 399 28 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 28 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 399 398 142)

;; Start of basic block ( 2) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u139(11){ }u140(13){ }u141(25){ }u142(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 142 399 143 29 71 "" [1 uses])

(note 143 142 144 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 144 143 400 29 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c10, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 400 144 401 29 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 29 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 401 400 147)

;; Start of basic block ( 2) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 147 401 148 30 72 "" [1 uses])

(note 148 147 149 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 149 148 402 30 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c11, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 402 149 403 30 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 30 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 403 402 152)

;; Start of basic block ( 2) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u149(11){ }u150(13){ }u151(25){ }u152(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 152 403 153 31 73 "" [1 uses])

(note 153 152 154 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 154 153 404 31 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c12, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 404 154 405 31 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 31 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 405 404 157)

;; Start of basic block ( 2) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 157 405 158 32 74 "" [1 uses])

(note 158 157 159 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 406 32 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c13, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 406 159 407 32 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 32 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 407 406 162)

;; Start of basic block ( 2) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u159(11){ }u160(13){ }u161(25){ }u162(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 162 407 163 33 75 "" [1 uses])

(note 163 162 164 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 164 163 408 33 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c14, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 408 164 409 33 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 33 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 409 408 167)

;; Start of basic block ( 2) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u164(11){ }u165(13){ }u166(25){ }u167(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 167 409 168 34 76 "" [1 uses])

(note 168 167 169 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 169 168 410 34 arch/arm/kernel/hw_breakpoint.c:124 (asm_operands/v ("mcr p14, 0, %0, c0,c15, 5") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082582) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 410 169 411 34 arch/arm/kernel/hw_breakpoint.c:124 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 34 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 411 410 172)

;; Start of basic block ( 2) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u169(11){ }u170(13){ }u171(25){ }u172(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 172 411 173 35 77 "" [1 uses])

(note 173 172 174 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 412 35 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c0, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 412 174 413 35 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 35 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 413 412 177)

;; Start of basic block ( 2) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 177 413 178 36 78 "" [1 uses])

(note 178 177 179 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 179 178 414 36 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c1, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 414 179 415 36 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 36 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 415 414 182)

;; Start of basic block ( 2) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u179(11){ }u180(13){ }u181(25){ }u182(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 182 415 183 37 79 "" [1 uses])

(note 183 182 184 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 184 183 416 37 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c2, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 416 184 417 37 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 37 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 417 416 187)

;; Start of basic block ( 2) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 187 417 188 38 80 "" [1 uses])

(note 188 187 189 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 418 38 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c3, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 418 189 419 38 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 38 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 419 418 192)

;; Start of basic block ( 2) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u189(11){ }u190(13){ }u191(25){ }u192(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 192 419 193 39 81 "" [1 uses])

(note 193 192 194 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 194 193 420 39 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c4, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 420 194 421 39 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 39 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 421 420 197)

;; Start of basic block ( 2) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u194(11){ }u195(13){ }u196(25){ }u197(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 197 421 198 40 82 "" [1 uses])

(note 198 197 199 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 199 198 422 40 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c5, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 422 199 423 40 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 40 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 423 422 202)

;; Start of basic block ( 2) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 202 423 203 41 83 "" [1 uses])

(note 203 202 204 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 204 203 424 41 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c6, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 424 204 425 41 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 41 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 425 424 207)

;; Start of basic block ( 2) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 207 425 208 42 84 "" [1 uses])

(note 208 207 209 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 209 208 426 42 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c7, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 426 209 427 42 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 42 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 427 426 212)

;; Start of basic block ( 2) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u209(11){ }u210(13){ }u211(25){ }u212(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 212 427 213 43 85 "" [1 uses])

(note 213 212 214 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 214 213 428 43 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c8, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 428 214 429 43 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 43 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 429 428 217)

;; Start of basic block ( 2) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u214(11){ }u215(13){ }u216(25){ }u217(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 217 429 218 44 86 "" [1 uses])

(note 218 217 219 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 219 218 430 44 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c9, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 430 219 431 44 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 44 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 431 430 222)

;; Start of basic block ( 2) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 222 431 223 45 87 "" [1 uses])

(note 223 222 224 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 224 223 432 45 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c10, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 432 224 433 45 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 45 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 433 432 227)

;; Start of basic block ( 2) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 227 433 228 46 88 "" [1 uses])

(note 228 227 229 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 434 46 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c11, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 434 229 435 46 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 46 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 435 434 232)

;; Start of basic block ( 2) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u229(11){ }u230(13){ }u231(25){ }u232(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 232 435 233 47 89 "" [1 uses])

(note 233 232 234 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 234 233 436 47 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c12, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 436 234 437 47 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 47 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 437 436 237)

;; Start of basic block ( 2) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u234(11){ }u235(13){ }u236(25){ }u237(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 237 437 238 48 90 "" [1 uses])

(note 238 237 239 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 239 238 438 48 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c13, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 438 239 439 48 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 48 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 439 438 242)

;; Start of basic block ( 2) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u239(11){ }u240(13){ }u241(25){ }u242(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 242 439 243 49 91 "" [1 uses])

(note 243 242 244 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 244 243 440 49 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c14, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 440 244 441 49 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 49 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 441 440 247)

;; Start of basic block ( 2) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u244(11){ }u245(13){ }u246(25){ }u247(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 247 441 248 50 92 "" [1 uses])

(note 248 247 249 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 249 248 442 50 arch/arm/kernel/hw_breakpoint.c:125 (asm_operands/v ("mcr p14, 0, %0, c0,c15, 6") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082710) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 442 249 443 50 arch/arm/kernel/hw_breakpoint.c:125 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 50 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 443 442 252)

;; Start of basic block ( 2) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u249(11){ }u250(13){ }u251(25){ }u252(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 252 443 253 51 93 "" [1 uses])

(note 253 252 254 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 254 253 444 51 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c0, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 444 254 445 51 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 51 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 445 444 257)

;; Start of basic block ( 2) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u254(11){ }u255(13){ }u256(25){ }u257(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 257 445 258 52 94 "" [1 uses])

(note 258 257 259 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 259 258 446 52 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c1, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 446 259 447 52 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 52 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 447 446 262)

;; Start of basic block ( 2) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u259(11){ }u260(13){ }u261(25){ }u262(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 262 447 263 53 95 "" [1 uses])

(note 263 262 264 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 264 263 448 53 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c2, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 448 264 449 53 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 53 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 449 448 267)

;; Start of basic block ( 2) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 267 449 268 54 96 "" [1 uses])

(note 268 267 269 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 269 268 450 54 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c3, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 450 269 451 54 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 54 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 451 450 272)

;; Start of basic block ( 2) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u269(11){ }u270(13){ }u271(25){ }u272(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 272 451 273 55 97 "" [1 uses])

(note 273 272 274 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 274 273 452 55 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c4, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 452 274 453 55 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 55 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 453 452 277)

;; Start of basic block ( 2) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u274(11){ }u275(13){ }u276(25){ }u277(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 277 453 278 56 98 "" [1 uses])

(note 278 277 279 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 279 278 454 56 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c5, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 454 279 455 56 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 56 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 455 454 282)

;; Start of basic block ( 2) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u279(11){ }u280(13){ }u281(25){ }u282(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 282 455 283 57 99 "" [1 uses])

(note 283 282 284 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 284 283 456 57 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c6, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 456 284 457 57 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 57 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 457 456 287)

;; Start of basic block ( 2) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u284(11){ }u285(13){ }u286(25){ }u287(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 287 457 288 58 100 "" [1 uses])

(note 288 287 289 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 289 288 458 58 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c7, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 458 289 459 58 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 58 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 459 458 292)

;; Start of basic block ( 2) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u289(11){ }u290(13){ }u291(25){ }u292(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 292 459 293 59 101 "" [1 uses])

(note 293 292 294 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 294 293 460 59 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c8, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 460 294 461 59 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 59 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 461 460 297)

;; Start of basic block ( 2) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u294(11){ }u295(13){ }u296(25){ }u297(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 297 461 298 60 102 "" [1 uses])

(note 298 297 299 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 299 298 462 60 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c9, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 462 299 463 60 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 60 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 463 462 302)

;; Start of basic block ( 2) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u299(11){ }u300(13){ }u301(25){ }u302(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 302 463 303 61 103 "" [1 uses])

(note 303 302 304 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 304 303 464 61 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c10, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 464 304 465 61 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 61 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 465 464 307)

;; Start of basic block ( 2) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u304(11){ }u305(13){ }u306(25){ }u307(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 307 465 308 62 104 "" [1 uses])

(note 308 307 309 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 309 308 466 62 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c11, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 466 309 467 62 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 62 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 467 466 312)

;; Start of basic block ( 2) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u309(11){ }u310(13){ }u311(25){ }u312(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 312 467 313 63 105 "" [1 uses])

(note 313 312 314 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 314 313 468 63 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c12, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 468 314 469 63 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 63 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 469 468 317)

;; Start of basic block ( 2) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u314(11){ }u315(13){ }u316(25){ }u317(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 317 469 318 64 106 "" [1 uses])

(note 318 317 319 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 319 318 470 64 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c13, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 470 319 471 64 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 64 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 471 470 322)

;; Start of basic block ( 2) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u319(11){ }u320(13){ }u321(25){ }u322(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 322 471 323 65 107 "" [1 uses])

(note 323 322 324 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 324 323 472 65 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c14, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 472 324 473 65 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 65 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 473 472 327)

;; Start of basic block ( 2) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u324(11){ }u325(13){ }u326(25){ }u327(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 327 473 328 66 108 "" [1 uses])

(note 328 327 329 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 329 328 474 66 arch/arm/kernel/hw_breakpoint.c:126 (asm_operands/v ("mcr p14, 0, %0, c0,c15, 7") ("") 0 [
            (reg/v:SI 134 [ val ])
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8082838) -1 (expr_list:REG_DEAD (reg/v:SI 134 [ val ])
        (nil)))

(jump_insn 474 329 475 66 arch/arm/kernel/hw_breakpoint.c:126 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 66 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%] 

(barrier 475 474 332)

;; Start of basic block ( 2) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u329(11){ }u330(13){ }u331(25){ }u332(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(13)
2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(1)
1
;; rd  kill	(5)
0, 1, 2, 14, 15

;; Pred edge  2 [1.5%] 
(code_label 332 475 333 67 44 "" [1 uses])

(note 333 332 335 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 335 333 336 67 arch/arm/kernel/hw_breakpoint.c:128 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fe20c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fe20c0>)
        (nil)))

(insn 336 335 337 67 arch/arm/kernel/hw_breakpoint.c:128 (set (reg:SI 1 r1)
        (reg/v:SI 133 [ n ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ n ])
        (nil)))

(call_insn 337 336 338 67 arch/arm/kernel/hw_breakpoint.c:128 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 67 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
1, 5, 7, 9, 10, 12, 13, 27, 28, 130, 131, 132


;; Succ edge  68 [100.0%]  (fallthru)

;; Start of basic block ( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u337(11){ }u338(13){ }u339(25){ }u340(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
1, 2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  67 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  16 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  18 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  20 [100.0%] 
;; Pred edge  21 [100.0%] 
;; Pred edge  22 [100.0%] 
;; Pred edge  23 [100.0%] 
;; Pred edge  24 [100.0%] 
;; Pred edge  25 [100.0%] 
;; Pred edge  26 [100.0%] 
;; Pred edge  27 [100.0%] 
;; Pred edge  28 [100.0%] 
;; Pred edge  29 [100.0%] 
;; Pred edge  30 [100.0%] 
;; Pred edge  31 [100.0%] 
;; Pred edge  32 [100.0%] 
;; Pred edge  33 [100.0%] 
;; Pred edge  34 [100.0%] 
;; Pred edge  35 [100.0%] 
;; Pred edge  36 [100.0%] 
;; Pred edge  37 [100.0%] 
;; Pred edge  38 [100.0%] 
;; Pred edge  39 [100.0%] 
;; Pred edge  40 [100.0%] 
;; Pred edge  41 [100.0%] 
;; Pred edge  42 [100.0%] 
;; Pred edge  43 [100.0%] 
;; Pred edge  44 [100.0%] 
;; Pred edge  45 [100.0%] 
;; Pred edge  46 [100.0%] 
;; Pred edge  47 [100.0%] 
;; Pred edge  48 [100.0%] 
;; Pred edge  49 [100.0%] 
;; Pred edge  50 [100.0%] 
;; Pred edge  51 [100.0%] 
;; Pred edge  52 [100.0%] 
;; Pred edge  53 [100.0%] 
;; Pred edge  54 [100.0%] 
;; Pred edge  55 [100.0%] 
;; Pred edge  56 [100.0%] 
;; Pred edge  57 [100.0%] 
;; Pred edge  58 [100.0%] 
;; Pred edge  59 [100.0%] 
;; Pred edge  60 [100.0%] 
;; Pred edge  61 [100.0%] 
;; Pred edge  62 [100.0%] 
;; Pred edge  63 [100.0%] 
;; Pred edge  64 [100.0%] 
;; Pred edge  65 [100.0%] 
;; Pred edge  66 [100.0%] 
(code_label 338 337 339 68 110 "" [64 uses])

(note 339 338 340 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 340 339 0 68 arch/arm/kernel/hw_breakpoint.c:131 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8083478)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 68 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
1, 2, 5, 7, 9, 10, 12, 13, 15, 27, 28, 130, 131, 132


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function read_wb_reg (read_wb_reg)[0:1241]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 69 n_edges 132 count 136 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 69 n_edges 132 count 136 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 69 n_edges 132 count 136 (    2)


read_wb_reg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d} r3={2d} r11={1d,68u} r12={2d} r13={1d,69u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d} r25={1d,68u} r26={1d,67u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={65d,1u} r135={1d,2u} r136={1d,2u} 
;;    total ref usage 481{198d,283u,0e} in 137{136 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,2] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,65] 135[196,1] 136[197,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d8(2){ }d10(3){ }d11(11){ }d13(12){ }d14(13){ }d16(14){ }d28(25){ }d29(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29
;; rd  kill	(19)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28, 29
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29

( 0 )->[2]->( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d11(bb 0 insn -1) }u1(13){ d14(bb 0 insn -1) }u2(25){ d28(bb 0 insn -1) }u3(26){ d29(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	 24 [cc]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29
;; rd  gen 	(2)
196, 197
;; rd  kill	(4)
26, 27, 196, 197
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 135 { d196(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 136 { d197(bb 2 insn 6) }
;;      reg 136 { d197(bb 2 insn 6) }

( 2 )->[3]->( 68 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d11(bb 0 insn -1) }u9(13){ d14(bb 0 insn -1) }u10(25){ d28(bb 0 insn -1) }u11(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
195
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 195, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[4]->( 68 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ d11(bb 0 insn -1) }u13(13){ d14(bb 0 insn -1) }u14(25){ d28(bb 0 insn -1) }u15(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
194
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 194, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[5]->( 68 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u16(11){ d11(bb 0 insn -1) }u17(13){ d14(bb 0 insn -1) }u18(25){ d28(bb 0 insn -1) }u19(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
193
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 193, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[6]->( 68 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u20(11){ d11(bb 0 insn -1) }u21(13){ d14(bb 0 insn -1) }u22(25){ d28(bb 0 insn -1) }u23(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
192
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 192, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[7]->( 68 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u24(11){ d11(bb 0 insn -1) }u25(13){ d14(bb 0 insn -1) }u26(25){ d28(bb 0 insn -1) }u27(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
191
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 191, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[8]->( 68 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u28(11){ d11(bb 0 insn -1) }u29(13){ d14(bb 0 insn -1) }u30(25){ d28(bb 0 insn -1) }u31(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
190
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 190, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[9]->( 68 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u32(11){ d11(bb 0 insn -1) }u33(13){ d14(bb 0 insn -1) }u34(25){ d28(bb 0 insn -1) }u35(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
189
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 189, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[10]->( 68 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u36(11){ d11(bb 0 insn -1) }u37(13){ d14(bb 0 insn -1) }u38(25){ d28(bb 0 insn -1) }u39(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
188
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 188, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[11]->( 68 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u40(11){ d11(bb 0 insn -1) }u41(13){ d14(bb 0 insn -1) }u42(25){ d28(bb 0 insn -1) }u43(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
187
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 187, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[12]->( 68 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u44(11){ d11(bb 0 insn -1) }u45(13){ d14(bb 0 insn -1) }u46(25){ d28(bb 0 insn -1) }u47(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
186
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 186, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[13]->( 68 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u48(11){ d11(bb 0 insn -1) }u49(13){ d14(bb 0 insn -1) }u50(25){ d28(bb 0 insn -1) }u51(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
185
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 185, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[14]->( 68 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u52(11){ d11(bb 0 insn -1) }u53(13){ d14(bb 0 insn -1) }u54(25){ d28(bb 0 insn -1) }u55(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
184
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 184, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[15]->( 68 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u56(11){ d11(bb 0 insn -1) }u57(13){ d14(bb 0 insn -1) }u58(25){ d28(bb 0 insn -1) }u59(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
183
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 183, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[16]->( 68 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u60(11){ d11(bb 0 insn -1) }u61(13){ d14(bb 0 insn -1) }u62(25){ d28(bb 0 insn -1) }u63(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
182
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 182, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[17]->( 68 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u64(11){ d11(bb 0 insn -1) }u65(13){ d14(bb 0 insn -1) }u66(25){ d28(bb 0 insn -1) }u67(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
181
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 181, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[18]->( 68 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u68(11){ d11(bb 0 insn -1) }u69(13){ d14(bb 0 insn -1) }u70(25){ d28(bb 0 insn -1) }u71(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
180
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 180, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[19]->( 68 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u72(11){ d11(bb 0 insn -1) }u73(13){ d14(bb 0 insn -1) }u74(25){ d28(bb 0 insn -1) }u75(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
179
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 179, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[20]->( 68 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u76(11){ d11(bb 0 insn -1) }u77(13){ d14(bb 0 insn -1) }u78(25){ d28(bb 0 insn -1) }u79(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
178
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 178, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[21]->( 68 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u80(11){ d11(bb 0 insn -1) }u81(13){ d14(bb 0 insn -1) }u82(25){ d28(bb 0 insn -1) }u83(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
177
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 177, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[22]->( 68 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u84(11){ d11(bb 0 insn -1) }u85(13){ d14(bb 0 insn -1) }u86(25){ d28(bb 0 insn -1) }u87(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
176
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 176, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[23]->( 68 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u88(11){ d11(bb 0 insn -1) }u89(13){ d14(bb 0 insn -1) }u90(25){ d28(bb 0 insn -1) }u91(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
175
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 175, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[24]->( 68 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u92(11){ d11(bb 0 insn -1) }u93(13){ d14(bb 0 insn -1) }u94(25){ d28(bb 0 insn -1) }u95(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
174
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 174, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[25]->( 68 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u96(11){ d11(bb 0 insn -1) }u97(13){ d14(bb 0 insn -1) }u98(25){ d28(bb 0 insn -1) }u99(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
173
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 173, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[26]->( 68 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u100(11){ d11(bb 0 insn -1) }u101(13){ d14(bb 0 insn -1) }u102(25){ d28(bb 0 insn -1) }u103(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
172
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 172, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[27]->( 68 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u104(11){ d11(bb 0 insn -1) }u105(13){ d14(bb 0 insn -1) }u106(25){ d28(bb 0 insn -1) }u107(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
171
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 171, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[28]->( 68 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u108(11){ d11(bb 0 insn -1) }u109(13){ d14(bb 0 insn -1) }u110(25){ d28(bb 0 insn -1) }u111(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
170
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 170, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[29]->( 68 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u112(11){ d11(bb 0 insn -1) }u113(13){ d14(bb 0 insn -1) }u114(25){ d28(bb 0 insn -1) }u115(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
169
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 169, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[30]->( 68 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u116(11){ d11(bb 0 insn -1) }u117(13){ d14(bb 0 insn -1) }u118(25){ d28(bb 0 insn -1) }u119(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
168
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 168, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[31]->( 68 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u120(11){ d11(bb 0 insn -1) }u121(13){ d14(bb 0 insn -1) }u122(25){ d28(bb 0 insn -1) }u123(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
167
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 167, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[32]->( 68 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u124(11){ d11(bb 0 insn -1) }u125(13){ d14(bb 0 insn -1) }u126(25){ d28(bb 0 insn -1) }u127(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
166
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 166, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[33]->( 68 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u128(11){ d11(bb 0 insn -1) }u129(13){ d14(bb 0 insn -1) }u130(25){ d28(bb 0 insn -1) }u131(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
165
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 165, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[34]->( 68 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u132(11){ d11(bb 0 insn -1) }u133(13){ d14(bb 0 insn -1) }u134(25){ d28(bb 0 insn -1) }u135(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
164
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 164, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[35]->( 68 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u136(11){ d11(bb 0 insn -1) }u137(13){ d14(bb 0 insn -1) }u138(25){ d28(bb 0 insn -1) }u139(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
163
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 163, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[36]->( 68 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u140(11){ d11(bb 0 insn -1) }u141(13){ d14(bb 0 insn -1) }u142(25){ d28(bb 0 insn -1) }u143(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
162
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 162, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[37]->( 68 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u144(11){ d11(bb 0 insn -1) }u145(13){ d14(bb 0 insn -1) }u146(25){ d28(bb 0 insn -1) }u147(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
161
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 161, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[38]->( 68 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u148(11){ d11(bb 0 insn -1) }u149(13){ d14(bb 0 insn -1) }u150(25){ d28(bb 0 insn -1) }u151(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
160
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 160, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[39]->( 68 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u152(11){ d11(bb 0 insn -1) }u153(13){ d14(bb 0 insn -1) }u154(25){ d28(bb 0 insn -1) }u155(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
159
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 159, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[40]->( 68 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u156(11){ d11(bb 0 insn -1) }u157(13){ d14(bb 0 insn -1) }u158(25){ d28(bb 0 insn -1) }u159(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
158
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 158, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[41]->( 68 )
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u160(11){ d11(bb 0 insn -1) }u161(13){ d14(bb 0 insn -1) }u162(25){ d28(bb 0 insn -1) }u163(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
157
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 157, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[42]->( 68 )
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u164(11){ d11(bb 0 insn -1) }u165(13){ d14(bb 0 insn -1) }u166(25){ d28(bb 0 insn -1) }u167(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
156
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 156, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[43]->( 68 )
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u168(11){ d11(bb 0 insn -1) }u169(13){ d14(bb 0 insn -1) }u170(25){ d28(bb 0 insn -1) }u171(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
155
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 155, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[44]->( 68 )
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u172(11){ d11(bb 0 insn -1) }u173(13){ d14(bb 0 insn -1) }u174(25){ d28(bb 0 insn -1) }u175(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
154
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 154, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[45]->( 68 )
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u176(11){ d11(bb 0 insn -1) }u177(13){ d14(bb 0 insn -1) }u178(25){ d28(bb 0 insn -1) }u179(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
153
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 153, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[46]->( 68 )
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u180(11){ d11(bb 0 insn -1) }u181(13){ d14(bb 0 insn -1) }u182(25){ d28(bb 0 insn -1) }u183(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
152
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 152, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[47]->( 68 )
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u184(11){ d11(bb 0 insn -1) }u185(13){ d14(bb 0 insn -1) }u186(25){ d28(bb 0 insn -1) }u187(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
151
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 151, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[48]->( 68 )
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u188(11){ d11(bb 0 insn -1) }u189(13){ d14(bb 0 insn -1) }u190(25){ d28(bb 0 insn -1) }u191(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
150
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 150, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[49]->( 68 )
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u192(11){ d11(bb 0 insn -1) }u193(13){ d14(bb 0 insn -1) }u194(25){ d28(bb 0 insn -1) }u195(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
149
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 149, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[50]->( 68 )
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u196(11){ d11(bb 0 insn -1) }u197(13){ d14(bb 0 insn -1) }u198(25){ d28(bb 0 insn -1) }u199(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
148
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 148, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[51]->( 68 )
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u200(11){ d11(bb 0 insn -1) }u201(13){ d14(bb 0 insn -1) }u202(25){ d28(bb 0 insn -1) }u203(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
147
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 147, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[52]->( 68 )
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u204(11){ d11(bb 0 insn -1) }u205(13){ d14(bb 0 insn -1) }u206(25){ d28(bb 0 insn -1) }u207(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
146
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 146, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[53]->( 68 )
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u208(11){ d11(bb 0 insn -1) }u209(13){ d14(bb 0 insn -1) }u210(25){ d28(bb 0 insn -1) }u211(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
145
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 145, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[54]->( 68 )
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u212(11){ d11(bb 0 insn -1) }u213(13){ d14(bb 0 insn -1) }u214(25){ d28(bb 0 insn -1) }u215(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
144
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 144, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[55]->( 68 )
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u216(11){ d11(bb 0 insn -1) }u217(13){ d14(bb 0 insn -1) }u218(25){ d28(bb 0 insn -1) }u219(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
143
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 143, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[56]->( 68 )
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u220(11){ d11(bb 0 insn -1) }u221(13){ d14(bb 0 insn -1) }u222(25){ d28(bb 0 insn -1) }u223(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
142
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 142, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[57]->( 68 )
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u224(11){ d11(bb 0 insn -1) }u225(13){ d14(bb 0 insn -1) }u226(25){ d28(bb 0 insn -1) }u227(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
141
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 141, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[58]->( 68 )
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u228(11){ d11(bb 0 insn -1) }u229(13){ d14(bb 0 insn -1) }u230(25){ d28(bb 0 insn -1) }u231(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
140
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 140, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[59]->( 68 )
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u232(11){ d11(bb 0 insn -1) }u233(13){ d14(bb 0 insn -1) }u234(25){ d28(bb 0 insn -1) }u235(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
139
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 139, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[60]->( 68 )
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u236(11){ d11(bb 0 insn -1) }u237(13){ d14(bb 0 insn -1) }u238(25){ d28(bb 0 insn -1) }u239(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
138
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 138, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[61]->( 68 )
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u240(11){ d11(bb 0 insn -1) }u241(13){ d14(bb 0 insn -1) }u242(25){ d28(bb 0 insn -1) }u243(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
137
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 137, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[62]->( 68 )
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u244(11){ d11(bb 0 insn -1) }u245(13){ d14(bb 0 insn -1) }u246(25){ d28(bb 0 insn -1) }u247(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
136
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 136, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[63]->( 68 )
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u248(11){ d11(bb 0 insn -1) }u249(13){ d14(bb 0 insn -1) }u250(25){ d28(bb 0 insn -1) }u251(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
135
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 135, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[64]->( 68 )
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u252(11){ d11(bb 0 insn -1) }u253(13){ d14(bb 0 insn -1) }u254(25){ d28(bb 0 insn -1) }u255(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
134
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 134, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[65]->( 68 )
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u256(11){ d11(bb 0 insn -1) }u257(13){ d14(bb 0 insn -1) }u258(25){ d28(bb 0 insn -1) }u259(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
133
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 133, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[66]->( 68 )
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u260(11){ d11(bb 0 insn -1) }u261(13){ d14(bb 0 insn -1) }u262(25){ d28(bb 0 insn -1) }u263(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
132
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 132, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }

( 2 )->[67]->( 68 )
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u264(11){ d11(bb 0 insn -1) }u265(13){ d14(bb 0 insn -1) }u266(25){ d28(bb 0 insn -1) }u267(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(2)
2, 131
;; rd  kill	(6)
0, 1, 2, 3, 15, 16
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(12)
2, 6, 8, 10, 11, 13, 14, 28, 29, 131, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 335
;;      reg 135 { d196(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 336
;;      reg 13 { d14(bb 0 insn -1) }
;;      reg 0 { d0(bb 67 insn 334) }
;;      reg 1 { d5(bb 67 insn 335) }

( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 )->[68]->( 1 )
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u272(11){ d11(bb 0 insn -1) }u273(13){ d14(bb 0 insn -1) }u274(25){ d28(bb 0 insn -1) }u275(26){ d29(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(78)
2, 3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197
;; rd  gen 	(1)
1
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(77)
1, 6, 8, 10, 11, 13, 14, 16, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197
;;  UD chains for artificial uses
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }
;;   reg 26 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 344
;;      reg 133 { d195(bb 3 insn 13) d194(bb 4 insn 18) d193(bb 5 insn 23) d192(bb 6 insn 28) d191(bb 7 insn 33) d190(bb 8 insn 38) d189(bb 9 insn 43) d188(bb 10 insn 48) d187(bb 11 insn 53) d186(bb 12 insn 58) d185(bb 13 insn 63) d184(bb 14 insn 68) d183(bb 15 insn 73) d182(bb 16 insn 78) d181(bb 17 insn 83) d180(bb 18 insn 88) d179(bb 19 insn 93) d178(bb 20 insn 98) d177(bb 21 insn 103) d176(bb 22 insn 108) d175(bb 23 insn 113) d174(bb 24 insn 118) d173(bb 25 insn 123) d172(bb 26 insn 128) d171(bb 27 insn 133) d170(bb 28 insn 138) d169(bb 29 insn 143) d168(bb 30 insn 148) d167(bb 31 insn 153) d166(bb 32 insn 158) d165(bb 33 insn 163) d164(bb 34 insn 168) d163(bb 35 insn 173) d162(bb 36 insn 178) d161(bb 37 insn 183) d160(bb 38 insn 188) d159(bb 39 insn 193) d158(bb 40 insn 198) d157(bb 41 insn 203) d156(bb 42 insn 208) d155(bb 43 insn 213) d154(bb 44 insn 218) d153(bb 45 insn 223) d152(bb 46 insn 228) d151(bb 47 insn 233) d150(bb 48 insn 238) d149(bb 49 insn 243) d148(bb 50 insn 248) d147(bb 51 insn 253) d146(bb 52 insn 258) d145(bb 53 insn 263) d144(bb 54 insn 268) d143(bb 55 insn 273) d142(bb 56 insn 278) d141(bb 57 insn 283) d140(bb 58 insn 288) d139(bb 59 insn 293) d138(bb 60 insn 298) d137(bb 61 insn 303) d136(bb 62 insn 308) d135(bb 63 insn 313) d134(bb 64 insn 318) d133(bb 65 insn 323) d132(bb 66 insn 328) d131(bb 67 insn 337) }
;;   UD chains for insn luid 1 uid 350
;;      reg 0 { d1(bb 68 insn 344) }

( 68 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u278(0){ d1(bb 68 insn 344) }u279(11){ d11(bb 0 insn -1) }u280(13){ d14(bb 0 insn -1) }u281(14){ d16(bb 0 insn -1) }u282(25){ d28(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(77)
1, 6, 8, 10, 11, 13, 14, 16, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(77)
1, 6, 8, 10, 11, 13, 14, 16, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 68 insn 344) }
;;   reg 11 { d11(bb 0 insn -1) }
;;   reg 13 { d14(bb 0 insn -1) }
;;   reg 14 { d16(bb 0 insn -1) }
;;   reg 25 { d28(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 7 to worklist
  Adding insn 354 to worklist
  Adding insn 13 to worklist
  Adding insn 356 to worklist
  Adding insn 18 to worklist
  Adding insn 358 to worklist
  Adding insn 23 to worklist
  Adding insn 360 to worklist
  Adding insn 28 to worklist
  Adding insn 362 to worklist
  Adding insn 33 to worklist
  Adding insn 364 to worklist
  Adding insn 38 to worklist
  Adding insn 366 to worklist
  Adding insn 43 to worklist
  Adding insn 368 to worklist
  Adding insn 48 to worklist
  Adding insn 370 to worklist
  Adding insn 53 to worklist
  Adding insn 372 to worklist
  Adding insn 58 to worklist
  Adding insn 374 to worklist
  Adding insn 63 to worklist
  Adding insn 376 to worklist
  Adding insn 68 to worklist
  Adding insn 378 to worklist
  Adding insn 73 to worklist
  Adding insn 380 to worklist
  Adding insn 78 to worklist
  Adding insn 382 to worklist
  Adding insn 83 to worklist
  Adding insn 384 to worklist
  Adding insn 88 to worklist
  Adding insn 386 to worklist
  Adding insn 93 to worklist
  Adding insn 388 to worklist
  Adding insn 98 to worklist
  Adding insn 390 to worklist
  Adding insn 103 to worklist
  Adding insn 392 to worklist
  Adding insn 108 to worklist
  Adding insn 394 to worklist
  Adding insn 113 to worklist
  Adding insn 396 to worklist
  Adding insn 118 to worklist
  Adding insn 398 to worklist
  Adding insn 123 to worklist
  Adding insn 400 to worklist
  Adding insn 128 to worklist
  Adding insn 402 to worklist
  Adding insn 133 to worklist
  Adding insn 404 to worklist
  Adding insn 138 to worklist
  Adding insn 406 to worklist
  Adding insn 143 to worklist
  Adding insn 408 to worklist
  Adding insn 148 to worklist
  Adding insn 410 to worklist
  Adding insn 153 to worklist
  Adding insn 412 to worklist
  Adding insn 158 to worklist
  Adding insn 414 to worklist
  Adding insn 163 to worklist
  Adding insn 416 to worklist
  Adding insn 168 to worklist
  Adding insn 418 to worklist
  Adding insn 173 to worklist
  Adding insn 420 to worklist
  Adding insn 178 to worklist
  Adding insn 422 to worklist
  Adding insn 183 to worklist
  Adding insn 424 to worklist
  Adding insn 188 to worklist
  Adding insn 426 to worklist
  Adding insn 193 to worklist
  Adding insn 428 to worklist
  Adding insn 198 to worklist
  Adding insn 430 to worklist
  Adding insn 203 to worklist
  Adding insn 432 to worklist
  Adding insn 208 to worklist
  Adding insn 434 to worklist
  Adding insn 213 to worklist
  Adding insn 436 to worklist
  Adding insn 218 to worklist
  Adding insn 438 to worklist
  Adding insn 223 to worklist
  Adding insn 440 to worklist
  Adding insn 228 to worklist
  Adding insn 442 to worklist
  Adding insn 233 to worklist
  Adding insn 444 to worklist
  Adding insn 238 to worklist
  Adding insn 446 to worklist
  Adding insn 243 to worklist
  Adding insn 448 to worklist
  Adding insn 248 to worklist
  Adding insn 450 to worklist
  Adding insn 253 to worklist
  Adding insn 452 to worklist
  Adding insn 258 to worklist
  Adding insn 454 to worklist
  Adding insn 263 to worklist
  Adding insn 456 to worklist
  Adding insn 268 to worklist
  Adding insn 458 to worklist
  Adding insn 273 to worklist
  Adding insn 460 to worklist
  Adding insn 278 to worklist
  Adding insn 462 to worklist
  Adding insn 283 to worklist
  Adding insn 464 to worklist
  Adding insn 288 to worklist
  Adding insn 466 to worklist
  Adding insn 293 to worklist
  Adding insn 468 to worklist
  Adding insn 298 to worklist
  Adding insn 470 to worklist
  Adding insn 303 to worklist
  Adding insn 472 to worklist
  Adding insn 308 to worklist
  Adding insn 474 to worklist
  Adding insn 313 to worklist
  Adding insn 476 to worklist
  Adding insn 318 to worklist
  Adding insn 478 to worklist
  Adding insn 323 to worklist
  Adding insn 480 to worklist
  Adding insn 328 to worklist
  Adding insn 336 to worklist
  Adding insn 350 to worklist
Finished finding needed instructions:
  Adding insn 344 to worklist
Processing use of (reg 133 [ val ]) in insn 344:
  Adding insn 337 to worklist
Processing use of (reg 0 r0) in insn 350:
Processing use of (reg 13 sp) in insn 336:
Processing use of (reg 0 r0) in insn 336:
  Adding insn 334 to worklist
Processing use of (reg 1 r1) in insn 336:
  Adding insn 335 to worklist
Processing use of (reg 135 [ n ]) in insn 335:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 136) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 136) in insn 7:
Processing use of (reg 135 [ n ]) in insn 6:


read_wb_reg

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d,1u} r2={2d} r3={2d} r11={1d,68u} r12={2d} r13={1d,69u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d} r25={1d,68u} r26={1d,67u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={65d,1u} r135={1d,2u} r136={1d,2u} 
;;    total ref usage 481{198d,283u,0e} in 137{136 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130
0[0,4] 1[4,3] 2[7,2] 3[9,2] 11[11,1] 12[12,2] 13[14,1] 14[15,2] 15[17,1] 16[18,1] 17[19,1] 18[20,1] 19[21,1] 20[22,1] 21[23,1] 22[24,1] 23[25,1] 24[26,2] 25[28,1] 26[29,1] 27[30,1] 28[31,1] 29[32,1] 30[33,1] 31[34,1] 32[35,1] 33[36,1] 34[37,1] 35[38,1] 36[39,1] 37[40,1] 38[41,1] 39[42,1] 40[43,1] 41[44,1] 42[45,1] 43[46,1] 44[47,1] 45[48,1] 46[49,1] 47[50,1] 48[51,1] 49[52,1] 50[53,1] 51[54,1] 52[55,1] 53[56,1] 54[57,1] 55[58,1] 56[59,1] 57[60,1] 58[61,1] 59[62,1] 60[63,1] 61[64,1] 62[65,1] 63[66,1] 64[67,1] 65[68,1] 66[69,1] 67[70,1] 68[71,1] 69[72,1] 70[73,1] 71[74,1] 72[75,1] 73[76,1] 74[77,1] 75[78,1] 76[79,1] 77[80,1] 78[81,1] 79[82,1] 80[83,1] 81[84,1] 82[85,1] 83[86,1] 84[87,1] 85[88,1] 86[89,1] 87[90,1] 88[91,1] 89[92,1] 90[93,1] 91[94,1] 92[95,1] 93[96,1] 94[97,1] 95[98,1] 96[99,1] 97[100,1] 98[101,1] 99[102,1] 100[103,1] 101[104,1] 102[105,1] 103[106,1] 104[107,1] 105[108,1] 106[109,1] 107[110,1] 108[111,1] 109[112,1] 110[113,1] 111[114,1] 112[115,1] 113[116,1] 114[117,1] 115[118,1] 116[119,1] 117[120,1] 118[121,1] 119[122,1] 120[123,1] 121[124,1] 122[125,1] 123[126,1] 124[127,1] 125[128,1] 126[129,1] 127[130,1] 133[131,65] 135[196,1] 136[197,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135 136
;; live  kill	 24 [cc]
;; rd  in  	(10)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29
;; rd  gen 	(2)
196, 197
;; rd  kill	(4)
26, 27, 196, 197

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/hw_breakpoint.c:104 (set (reg/v:SI 135 [ n ])
        (reg:SI 0 r0 [ n ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ n ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/hw_breakpoint.c:107 (set (reg:SI 136)
        (plus:SI (reg/v:SI 135 [ n ])
            (const_int -64 [0xffffffffffffffc0]))) 4 {*arm_addsi3} (nil))

(jump_insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:107 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 136)
                        (const_int 63 [0x3f]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 136)
                                (const_int 4 [0x4]))
                            (label_ref 8)) [0 S4 A32])
                    (label_ref 331)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 8))
        ]) 265 {arm_casesi_internal} (expr_list:REG_DEAD (reg:SI 136)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (insn_list:REG_LABEL_TARGET 331 (nil)))))
;; End of basic block 2 -> ( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197


;; Succ edge  67 [1.5%] 
;; Succ edge  3 [1.5%] 
;; Succ edge  4 [1.5%] 
;; Succ edge  5 [1.5%] 
;; Succ edge  6 [1.5%] 
;; Succ edge  7 [1.5%] 
;; Succ edge  8 [1.5%] 
;; Succ edge  9 [1.5%] 
;; Succ edge  10 [1.5%] 
;; Succ edge  11 [1.5%] 
;; Succ edge  12 [1.5%] 
;; Succ edge  13 [1.5%] 
;; Succ edge  14 [1.5%] 
;; Succ edge  15 [1.5%] 
;; Succ edge  16 [1.5%] 
;; Succ edge  17 [1.5%] 
;; Succ edge  18 [1.5%] 
;; Succ edge  19 [1.5%] 
;; Succ edge  20 [1.5%] 
;; Succ edge  21 [1.5%] 
;; Succ edge  22 [1.5%] 
;; Succ edge  23 [1.5%] 
;; Succ edge  24 [1.5%] 
;; Succ edge  25 [1.5%] 
;; Succ edge  26 [1.5%] 
;; Succ edge  27 [1.5%] 
;; Succ edge  28 [1.5%] 
;; Succ edge  29 [1.5%] 
;; Succ edge  30 [1.5%] 
;; Succ edge  31 [1.5%] 
;; Succ edge  32 [1.5%] 
;; Succ edge  33 [1.5%] 
;; Succ edge  34 [1.5%] 
;; Succ edge  35 [1.5%] 
;; Succ edge  36 [1.5%] 
;; Succ edge  37 [1.5%] 
;; Succ edge  38 [1.5%] 
;; Succ edge  39 [1.5%] 
;; Succ edge  40 [1.5%] 
;; Succ edge  41 [1.5%] 
;; Succ edge  42 [1.5%] 
;; Succ edge  43 [1.5%] 
;; Succ edge  44 [1.5%] 
;; Succ edge  45 [1.5%] 
;; Succ edge  46 [1.5%] 
;; Succ edge  47 [1.5%] 
;; Succ edge  48 [1.5%] 
;; Succ edge  49 [1.5%] 
;; Succ edge  50 [1.5%] 
;; Succ edge  51 [1.5%] 
;; Succ edge  52 [1.5%] 
;; Succ edge  53 [1.5%] 
;; Succ edge  54 [1.5%] 
;; Succ edge  55 [1.5%] 
;; Succ edge  56 [1.5%] 
;; Succ edge  57 [1.5%] 
;; Succ edge  58 [1.5%] 
;; Succ edge  59 [1.5%] 
;; Succ edge  60 [1.5%] 
;; Succ edge  61 [1.5%] 
;; Succ edge  62 [1.5%] 
;; Succ edge  63 [1.5%] 
;; Succ edge  64 [1.5%] 
;; Succ edge  65 [1.5%] 
;; Succ edge  66 [1.5%] 

;; Insn is not within a basic block
(code_label 8 7 9 180 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 9 8 10 arch/arm/kernel/hw_breakpoint.c:107 (addr_vec:SI [
            (label_ref:SI 11)
            (label_ref:SI 16)
            (label_ref:SI 21)
            (label_ref:SI 26)
            (label_ref:SI 31)
            (label_ref:SI 36)
            (label_ref:SI 41)
            (label_ref:SI 46)
            (label_ref:SI 51)
            (label_ref:SI 56)
            (label_ref:SI 61)
            (label_ref:SI 66)
            (label_ref:SI 71)
            (label_ref:SI 76)
            (label_ref:SI 81)
            (label_ref:SI 86)
            (label_ref:SI 91)
            (label_ref:SI 96)
            (label_ref:SI 101)
            (label_ref:SI 106)
            (label_ref:SI 111)
            (label_ref:SI 116)
            (label_ref:SI 121)
            (label_ref:SI 126)
            (label_ref:SI 131)
            (label_ref:SI 136)
            (label_ref:SI 141)
            (label_ref:SI 146)
            (label_ref:SI 151)
            (label_ref:SI 156)
            (label_ref:SI 161)
            (label_ref:SI 166)
            (label_ref:SI 171)
            (label_ref:SI 176)
            (label_ref:SI 181)
            (label_ref:SI 186)
            (label_ref:SI 191)
            (label_ref:SI 196)
            (label_ref:SI 201)
            (label_ref:SI 206)
            (label_ref:SI 211)
            (label_ref:SI 216)
            (label_ref:SI 221)
            (label_ref:SI 226)
            (label_ref:SI 231)
            (label_ref:SI 236)
            (label_ref:SI 241)
            (label_ref:SI 246)
            (label_ref:SI 251)
            (label_ref:SI 256)
            (label_ref:SI 261)
            (label_ref:SI 266)
            (label_ref:SI 271)
            (label_ref:SI 276)
            (label_ref:SI 281)
            (label_ref:SI 286)
            (label_ref:SI 291)
            (label_ref:SI 296)
            (label_ref:SI 301)
            (label_ref:SI 306)
            (label_ref:SI 311)
            (label_ref:SI 316)
            (label_ref:SI 321)
            (label_ref:SI 326)
        ]) -1 (nil))

(barrier 10 9 11)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
195
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 11 10 12 3 116 "" [1 uses])

(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 354 3 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 354 13 355 3 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 3 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 195, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 355 354 16)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
194
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 16 355 17 4 117 "" [1 uses])

(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 18 17 356 4 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 356 18 357 4 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 4 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 194, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 357 356 21)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
193
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 21 357 22 5 118 "" [1 uses])

(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 358 5 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c2, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 358 23 359 5 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 5 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 193, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 359 358 26)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
192
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 26 359 27 6 119 "" [1 uses])

(note 27 26 28 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 28 27 360 6 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c3, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 360 28 361 6 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 6 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 192, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 361 360 31)

;; Start of basic block ( 2) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u24(11){ }u25(13){ }u26(25){ }u27(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
191
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 31 361 32 7 120 "" [1 uses])

(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 362 7 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c4, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 362 33 363 7 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 7 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 191, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 363 362 36)

;; Start of basic block ( 2) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
190
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 36 363 37 8 121 "" [1 uses])

(note 37 36 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 364 8 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c5, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 364 38 365 8 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 8 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 190, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 365 364 41)

;; Start of basic block ( 2) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u32(11){ }u33(13){ }u34(25){ }u35(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
189
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 41 365 42 9 122 "" [1 uses])

(note 42 41 43 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 366 9 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c6, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 366 43 367 9 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 9 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 189, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 367 366 46)

;; Start of basic block ( 2) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
188
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 46 367 47 10 123 "" [1 uses])

(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 368 10 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c7, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 368 48 369 10 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 10 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 188, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 369 368 51)

;; Start of basic block ( 2) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
187
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 51 369 52 11 124 "" [1 uses])

(note 52 51 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 370 11 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c8, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 370 53 371 11 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 11 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 187, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 371 370 56)

;; Start of basic block ( 2) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
186
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 56 371 57 12 125 "" [1 uses])

(note 57 56 58 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 372 12 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c9, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 372 58 373 12 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 12 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 186, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 373 372 61)

;; Start of basic block ( 2) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
185
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 61 373 62 13 126 "" [1 uses])

(note 62 61 63 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 374 13 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c10, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 374 63 375 13 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 13 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 185, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 375 374 66)

;; Start of basic block ( 2) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u52(11){ }u53(13){ }u54(25){ }u55(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
184
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 66 375 67 14 127 "" [1 uses])

(note 67 66 68 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 376 14 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c11, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 376 68 377 14 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 14 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 184, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 377 376 71)

;; Start of basic block ( 2) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u56(11){ }u57(13){ }u58(25){ }u59(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
183
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 71 377 72 15 128 "" [1 uses])

(note 72 71 73 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 378 15 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c12, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 378 73 379 15 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 15 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 183, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 379 378 76)

;; Start of basic block ( 2) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u60(11){ }u61(13){ }u62(25){ }u63(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
182
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 76 379 77 16 129 "" [1 uses])

(note 77 76 78 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 78 77 380 16 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c13, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 380 78 381 16 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 16 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 182, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 381 380 81)

;; Start of basic block ( 2) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
181
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 81 381 82 17 130 "" [1 uses])

(note 82 81 83 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 83 82 382 17 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c14, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 382 83 383 17 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 17 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 181, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 383 382 86)

;; Start of basic block ( 2) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u68(11){ }u69(13){ }u70(25){ }u71(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
180
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 86 383 87 18 131 "" [1 uses])

(note 87 86 88 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 384 18 arch/arm/kernel/hw_breakpoint.c:108 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c15, 4") ("=r") 0 []
             [] 8080534)) -1 (nil))

(jump_insn 384 88 385 18 arch/arm/kernel/hw_breakpoint.c:108 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 18 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 180, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 385 384 91)

;; Start of basic block ( 2) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u72(11){ }u73(13){ }u74(25){ }u75(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
179
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 91 385 92 19 132 "" [1 uses])

(note 92 91 93 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 386 19 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 386 93 387 19 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 19 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 179, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 387 386 96)

;; Start of basic block ( 2) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u76(11){ }u77(13){ }u78(25){ }u79(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
178
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 96 387 97 20 133 "" [1 uses])

(note 97 96 98 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 98 97 388 20 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 388 98 389 20 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 20 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 178, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 389 388 101)

;; Start of basic block ( 2) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u80(11){ }u81(13){ }u82(25){ }u83(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
177
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 101 389 102 21 134 "" [1 uses])

(note 102 101 103 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 390 21 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c2, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 390 103 391 21 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 21 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 177, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 391 390 106)

;; Start of basic block ( 2) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u84(11){ }u85(13){ }u86(25){ }u87(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
176
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 106 391 107 22 135 "" [1 uses])

(note 107 106 108 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 392 22 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c3, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 392 108 393 22 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 22 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 176, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 393 392 111)

;; Start of basic block ( 2) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
175
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 111 393 112 23 136 "" [1 uses])

(note 112 111 113 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 113 112 394 23 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c4, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 394 113 395 23 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 23 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 175, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 395 394 116)

;; Start of basic block ( 2) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
174
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 116 395 117 24 137 "" [1 uses])

(note 117 116 118 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 396 24 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c5, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 396 118 397 24 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 24 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 174, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 397 396 121)

;; Start of basic block ( 2) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u96(11){ }u97(13){ }u98(25){ }u99(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
173
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 121 397 122 25 138 "" [1 uses])

(note 122 121 123 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 398 25 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c6, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 398 123 399 25 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 25 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 173, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 399 398 126)

;; Start of basic block ( 2) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
172
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 126 399 127 26 139 "" [1 uses])

(note 127 126 128 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 128 127 400 26 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c7, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 400 128 401 26 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 26 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 172, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 401 400 131)

;; Start of basic block ( 2) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
171
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 131 401 132 27 140 "" [1 uses])

(note 132 131 133 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 133 132 402 27 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c8, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 402 133 403 27 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 27 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 171, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 403 402 136)

;; Start of basic block ( 2) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u108(11){ }u109(13){ }u110(25){ }u111(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
170
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 136 403 137 28 141 "" [1 uses])

(note 137 136 138 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 138 137 404 28 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c9, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 404 138 405 28 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 28 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 170, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 405 404 141)

;; Start of basic block ( 2) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u112(11){ }u113(13){ }u114(25){ }u115(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
169
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 141 405 142 29 142 "" [1 uses])

(note 142 141 143 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 406 29 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c10, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 406 143 407 29 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 29 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 169, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 407 406 146)

;; Start of basic block ( 2) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u116(11){ }u117(13){ }u118(25){ }u119(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
168
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 146 407 147 30 143 "" [1 uses])

(note 147 146 148 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 408 30 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c11, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 408 148 409 30 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 30 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 168, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 409 408 151)

;; Start of basic block ( 2) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
167
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 151 409 152 31 144 "" [1 uses])

(note 152 151 153 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 410 31 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c12, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 410 153 411 31 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 31 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 167, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 411 410 156)

;; Start of basic block ( 2) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u124(11){ }u125(13){ }u126(25){ }u127(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
166
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 156 411 157 32 145 "" [1 uses])

(note 157 156 158 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 158 157 412 32 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c13, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 412 158 413 32 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 32 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 166, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 413 412 161)

;; Start of basic block ( 2) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u128(11){ }u129(13){ }u130(25){ }u131(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
165
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 161 413 162 33 146 "" [1 uses])

(note 162 161 163 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 163 162 414 33 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c14, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 414 163 415 33 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 33 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 165, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 415 414 166)

;; Start of basic block ( 2) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u132(11){ }u133(13){ }u134(25){ }u135(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
164
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 166 415 167 34 147 "" [1 uses])

(note 167 166 168 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(insn 168 167 416 34 arch/arm/kernel/hw_breakpoint.c:109 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c15, 5") ("=r") 0 []
             [] 8080662)) -1 (nil))

(jump_insn 416 168 417 34 arch/arm/kernel/hw_breakpoint.c:109 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 34 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 164, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 417 416 171)

;; Start of basic block ( 2) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u136(11){ }u137(13){ }u138(25){ }u139(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
163
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 171 417 172 35 148 "" [1 uses])

(note 172 171 173 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 173 172 418 35 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 418 173 419 35 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 35 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 163, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 419 418 176)

;; Start of basic block ( 2) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
162
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 176 419 177 36 149 "" [1 uses])

(note 177 176 178 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 178 177 420 36 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 420 178 421 36 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 36 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 162, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 421 420 181)

;; Start of basic block ( 2) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u144(11){ }u145(13){ }u146(25){ }u147(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
161
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 181 421 182 37 150 "" [1 uses])

(note 182 181 183 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 183 182 422 37 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c2, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 422 183 423 37 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 37 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 161, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 423 422 186)

;; Start of basic block ( 2) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u148(11){ }u149(13){ }u150(25){ }u151(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
160
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 186 423 187 38 151 "" [1 uses])

(note 187 186 188 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 188 187 424 38 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c3, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 424 188 425 38 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 38 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 160, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 425 424 191)

;; Start of basic block ( 2) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u152(11){ }u153(13){ }u154(25){ }u155(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
159
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 191 425 192 39 152 "" [1 uses])

(note 192 191 193 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(insn 193 192 426 39 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c4, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 426 193 427 39 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 39 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 159, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 427 426 196)

;; Start of basic block ( 2) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u156(11){ }u157(13){ }u158(25){ }u159(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
158
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 196 427 197 40 153 "" [1 uses])

(note 197 196 198 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 428 40 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c5, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 428 198 429 40 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 40 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 158, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 429 428 201)

;; Start of basic block ( 2) -> 41
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u160(11){ }u161(13){ }u162(25){ }u163(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
157
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 201 429 202 41 154 "" [1 uses])

(note 202 201 203 41 [bb 41] NOTE_INSN_BASIC_BLOCK)

(insn 203 202 430 41 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c6, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 430 203 431 41 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 41 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 157, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 431 430 206)

;; Start of basic block ( 2) -> 42
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u164(11){ }u165(13){ }u166(25){ }u167(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
156
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 206 431 207 42 155 "" [1 uses])

(note 207 206 208 42 [bb 42] NOTE_INSN_BASIC_BLOCK)

(insn 208 207 432 42 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c7, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 432 208 433 42 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 42 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 156, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 433 432 211)

;; Start of basic block ( 2) -> 43
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
155
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 211 433 212 43 156 "" [1 uses])

(note 212 211 213 43 [bb 43] NOTE_INSN_BASIC_BLOCK)

(insn 213 212 434 43 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c8, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 434 213 435 43 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 43 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 155, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 435 434 216)

;; Start of basic block ( 2) -> 44
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u172(11){ }u173(13){ }u174(25){ }u175(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
154
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 216 435 217 44 157 "" [1 uses])

(note 217 216 218 44 [bb 44] NOTE_INSN_BASIC_BLOCK)

(insn 218 217 436 44 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c9, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 436 218 437 44 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 44 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 154, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 437 436 221)

;; Start of basic block ( 2) -> 45
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u176(11){ }u177(13){ }u178(25){ }u179(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
153
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 221 437 222 45 158 "" [1 uses])

(note 222 221 223 45 [bb 45] NOTE_INSN_BASIC_BLOCK)

(insn 223 222 438 45 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c10, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 438 223 439 45 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 45 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 153, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 439 438 226)

;; Start of basic block ( 2) -> 46
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
152
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 226 439 227 46 159 "" [1 uses])

(note 227 226 228 46 [bb 46] NOTE_INSN_BASIC_BLOCK)

(insn 228 227 440 46 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c11, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 440 228 441 46 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 46 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 152, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 441 440 231)

;; Start of basic block ( 2) -> 47
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u184(11){ }u185(13){ }u186(25){ }u187(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
151
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 231 441 232 47 160 "" [1 uses])

(note 232 231 233 47 [bb 47] NOTE_INSN_BASIC_BLOCK)

(insn 233 232 442 47 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c12, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 442 233 443 47 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 47 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 151, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 443 442 236)

;; Start of basic block ( 2) -> 48
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
150
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 236 443 237 48 161 "" [1 uses])

(note 237 236 238 48 [bb 48] NOTE_INSN_BASIC_BLOCK)

(insn 238 237 444 48 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c13, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 444 238 445 48 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 48 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 150, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 445 444 241)

;; Start of basic block ( 2) -> 49
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u192(11){ }u193(13){ }u194(25){ }u195(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
149
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 241 445 242 49 162 "" [1 uses])

(note 242 241 243 49 [bb 49] NOTE_INSN_BASIC_BLOCK)

(insn 243 242 446 49 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c14, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 446 243 447 49 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 49 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 149, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 447 446 246)

;; Start of basic block ( 2) -> 50
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u196(11){ }u197(13){ }u198(25){ }u199(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
148
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 246 447 247 50 163 "" [1 uses])

(note 247 246 248 50 [bb 50] NOTE_INSN_BASIC_BLOCK)

(insn 248 247 448 50 arch/arm/kernel/hw_breakpoint.c:110 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c15, 6") ("=r") 0 []
             [] 8080790)) -1 (nil))

(jump_insn 448 248 449 50 arch/arm/kernel/hw_breakpoint.c:110 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 50 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 148, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 449 448 251)

;; Start of basic block ( 2) -> 51
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u200(11){ }u201(13){ }u202(25){ }u203(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
147
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 251 449 252 51 164 "" [1 uses])

(note 252 251 253 51 [bb 51] NOTE_INSN_BASIC_BLOCK)

(insn 253 252 450 51 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 450 253 451 51 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 51 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 147, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 451 450 256)

;; Start of basic block ( 2) -> 52
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u204(11){ }u205(13){ }u206(25){ }u207(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
146
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 256 451 257 52 165 "" [1 uses])

(note 257 256 258 52 [bb 52] NOTE_INSN_BASIC_BLOCK)

(insn 258 257 452 52 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 452 258 453 52 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 52 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 146, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 453 452 261)

;; Start of basic block ( 2) -> 53
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
145
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 261 453 262 53 166 "" [1 uses])

(note 262 261 263 53 [bb 53] NOTE_INSN_BASIC_BLOCK)

(insn 263 262 454 53 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c2, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 454 263 455 53 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 53 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 145, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 455 454 266)

;; Start of basic block ( 2) -> 54
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u212(11){ }u213(13){ }u214(25){ }u215(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
144
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 266 455 267 54 167 "" [1 uses])

(note 267 266 268 54 [bb 54] NOTE_INSN_BASIC_BLOCK)

(insn 268 267 456 54 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c3, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 456 268 457 54 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 54 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 144, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 457 456 271)

;; Start of basic block ( 2) -> 55
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u216(11){ }u217(13){ }u218(25){ }u219(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
143
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 271 457 272 55 168 "" [1 uses])

(note 272 271 273 55 [bb 55] NOTE_INSN_BASIC_BLOCK)

(insn 273 272 458 55 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c4, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 458 273 459 55 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 55 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 143, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 459 458 276)

;; Start of basic block ( 2) -> 56
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u220(11){ }u221(13){ }u222(25){ }u223(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
142
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 276 459 277 56 169 "" [1 uses])

(note 277 276 278 56 [bb 56] NOTE_INSN_BASIC_BLOCK)

(insn 278 277 460 56 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c5, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 460 278 461 56 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 56 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 142, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 461 460 281)

;; Start of basic block ( 2) -> 57
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u224(11){ }u225(13){ }u226(25){ }u227(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
141
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 281 461 282 57 170 "" [1 uses])

(note 282 281 283 57 [bb 57] NOTE_INSN_BASIC_BLOCK)

(insn 283 282 462 57 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c6, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 462 283 463 57 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 57 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 141, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 463 462 286)

;; Start of basic block ( 2) -> 58
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u228(11){ }u229(13){ }u230(25){ }u231(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
140
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 286 463 287 58 171 "" [1 uses])

(note 287 286 288 58 [bb 58] NOTE_INSN_BASIC_BLOCK)

(insn 288 287 464 58 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c7, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 464 288 465 58 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 58 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 140, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 465 464 291)

;; Start of basic block ( 2) -> 59
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u232(11){ }u233(13){ }u234(25){ }u235(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
139
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 291 465 292 59 172 "" [1 uses])

(note 292 291 293 59 [bb 59] NOTE_INSN_BASIC_BLOCK)

(insn 293 292 466 59 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c8, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 466 293 467 59 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 59 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 139, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 467 466 296)

;; Start of basic block ( 2) -> 60
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u236(11){ }u237(13){ }u238(25){ }u239(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
138
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 296 467 297 60 173 "" [1 uses])

(note 297 296 298 60 [bb 60] NOTE_INSN_BASIC_BLOCK)

(insn 298 297 468 60 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c9, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 468 298 469 60 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 60 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 138, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 469 468 301)

;; Start of basic block ( 2) -> 61
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u240(11){ }u241(13){ }u242(25){ }u243(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
137
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 301 469 302 61 174 "" [1 uses])

(note 302 301 303 61 [bb 61] NOTE_INSN_BASIC_BLOCK)

(insn 303 302 470 61 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c10, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 470 303 471 61 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 61 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 137, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 471 470 306)

;; Start of basic block ( 2) -> 62
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u244(11){ }u245(13){ }u246(25){ }u247(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
136
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 306 471 307 62 175 "" [1 uses])

(note 307 306 308 62 [bb 62] NOTE_INSN_BASIC_BLOCK)

(insn 308 307 472 62 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c11, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 472 308 473 62 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 62 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 136, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 473 472 311)

;; Start of basic block ( 2) -> 63
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u248(11){ }u249(13){ }u250(25){ }u251(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
135
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 311 473 312 63 176 "" [1 uses])

(note 312 311 313 63 [bb 63] NOTE_INSN_BASIC_BLOCK)

(insn 313 312 474 63 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c12, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 474 313 475 63 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 63 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 135, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 475 474 316)

;; Start of basic block ( 2) -> 64
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u252(11){ }u253(13){ }u254(25){ }u255(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
134
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 316 475 317 64 177 "" [1 uses])

(note 317 316 318 64 [bb 64] NOTE_INSN_BASIC_BLOCK)

(insn 318 317 476 64 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c13, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 476 318 477 64 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 64 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 134, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 477 476 321)

;; Start of basic block ( 2) -> 65
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u256(11){ }u257(13){ }u258(25){ }u259(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
133
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 321 477 322 65 178 "" [1 uses])

(note 322 321 323 65 [bb 65] NOTE_INSN_BASIC_BLOCK)

(insn 323 322 478 65 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c14, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 478 323 479 65 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 65 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 133, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 479 478 326)

;; Start of basic block ( 2) -> 66
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u260(11){ }u261(13){ }u262(25){ }u263(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 133
;; live  kill	
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(1)
132
;; rd  kill	(0)


;; Pred edge  2 [1.5%] 
(code_label 326 479 327 66 179 "" [1 uses])

(note 327 326 328 66 [bb 66] NOTE_INSN_BASIC_BLOCK)

(insn 328 327 480 66 arch/arm/kernel/hw_breakpoint.c:111 (set (reg/v:SI 133 [ val ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c15, 7") ("=r") 0 []
             [] 8080918)) -1 (nil))

(jump_insn 480 328 481 66 arch/arm/kernel/hw_breakpoint.c:111 (set (pc)
        (label_ref 338)) -1 (nil))
;; End of basic block 66 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; rd  out 	(13)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 132, 196, 197


;; Succ edge  68 [100.0%] 

(barrier 481 480 331)

;; Start of basic block ( 2) -> 67
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 1 [r1] 133
;; live  kill	 14 [lr]
;; rd  in  	(12)
3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 196, 197
;; rd  gen 	(2)
2, 131
;; rd  kill	(6)
0, 1, 2, 3, 15, 16

;; Pred edge  2 [1.5%] 
(code_label 331 481 332 67 115 "" [1 uses])

(note 332 331 334 67 [bb 67] NOTE_INSN_BASIC_BLOCK)

(insn 334 332 335 67 arch/arm/kernel/hw_breakpoint.c:113 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10ffc6c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10ffc6c0>)
        (nil)))

(insn 335 334 336 67 arch/arm/kernel/hw_breakpoint.c:113 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ n ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ n ])
        (nil)))

(call_insn 336 335 337 67 arch/arm/kernel/hw_breakpoint.c:113 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 337 336 338 67 arch/arm/kernel/hw_breakpoint.c:105 (set (reg/v:SI 133 [ val ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 67 -> ( 68)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(12)
2, 6, 8, 10, 11, 13, 14, 28, 29, 131, 196, 197


;; Succ edge  68 [100.0%]  (fallthru)

;; Start of basic block ( 67 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66) -> 68
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u272(11){ }u273(13){ }u274(25){ }u275(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(78)
2, 3, 6, 8, 10, 11, 13, 14, 16, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197
;; rd  gen 	(1)
1
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  67 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%] 
;; Pred edge  6 [100.0%] 
;; Pred edge  7 [100.0%] 
;; Pred edge  8 [100.0%] 
;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%] 
;; Pred edge  12 [100.0%] 
;; Pred edge  13 [100.0%] 
;; Pred edge  14 [100.0%] 
;; Pred edge  15 [100.0%] 
;; Pred edge  16 [100.0%] 
;; Pred edge  17 [100.0%] 
;; Pred edge  18 [100.0%] 
;; Pred edge  19 [100.0%] 
;; Pred edge  20 [100.0%] 
;; Pred edge  21 [100.0%] 
;; Pred edge  22 [100.0%] 
;; Pred edge  23 [100.0%] 
;; Pred edge  24 [100.0%] 
;; Pred edge  25 [100.0%] 
;; Pred edge  26 [100.0%] 
;; Pred edge  27 [100.0%] 
;; Pred edge  28 [100.0%] 
;; Pred edge  29 [100.0%] 
;; Pred edge  30 [100.0%] 
;; Pred edge  31 [100.0%] 
;; Pred edge  32 [100.0%] 
;; Pred edge  33 [100.0%] 
;; Pred edge  34 [100.0%] 
;; Pred edge  35 [100.0%] 
;; Pred edge  36 [100.0%] 
;; Pred edge  37 [100.0%] 
;; Pred edge  38 [100.0%] 
;; Pred edge  39 [100.0%] 
;; Pred edge  40 [100.0%] 
;; Pred edge  41 [100.0%] 
;; Pred edge  42 [100.0%] 
;; Pred edge  43 [100.0%] 
;; Pred edge  44 [100.0%] 
;; Pred edge  45 [100.0%] 
;; Pred edge  46 [100.0%] 
;; Pred edge  47 [100.0%] 
;; Pred edge  48 [100.0%] 
;; Pred edge  49 [100.0%] 
;; Pred edge  50 [100.0%] 
;; Pred edge  51 [100.0%] 
;; Pred edge  52 [100.0%] 
;; Pred edge  53 [100.0%] 
;; Pred edge  54 [100.0%] 
;; Pred edge  55 [100.0%] 
;; Pred edge  56 [100.0%] 
;; Pred edge  57 [100.0%] 
;; Pred edge  58 [100.0%] 
;; Pred edge  59 [100.0%] 
;; Pred edge  60 [100.0%] 
;; Pred edge  61 [100.0%] 
;; Pred edge  62 [100.0%] 
;; Pred edge  63 [100.0%] 
;; Pred edge  64 [100.0%] 
;; Pred edge  65 [100.0%] 
;; Pred edge  66 [100.0%] 
(code_label 338 337 339 68 181 "" [64 uses])

(note 339 338 344 68 [bb 68] NOTE_INSN_BASIC_BLOCK)

(insn 344 339 350 68 arch/arm/kernel/hw_breakpoint.c:118 (set (reg/i:SI 0 r0)
        (reg/v:SI 133 [ val ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ val ])
        (nil)))

(insn 350 344 0 68 arch/arm/kernel/hw_breakpoint.c:118 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 68 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(77)
1, 6, 8, 10, 11, 13, 14, 16, 28, 29, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function dbg_reset_notify (dbg_reset_notify)[0:1269] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


dbg_reset_notify

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={3d,2u} r3={3d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 163{135d,28u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,2] 13[16,1] 14[17,2] 15[19,1] 16[20,1] 17[21,1] 18[22,1] 19[23,1] 20[24,1] 21[25,1] 22[26,1] 23[27,1] 24[28,2] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 135[133,1] 136[134,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d15(12){ }d16(13){ }d18(14){ }d30(25){ }d31(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 12, 13, 15, 16, 18, 30, 31
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 30, 31
;; lr  out 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 12, 13, 15, 16, 18, 30, 31

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d13(bb 0 insn -1) }u1(13){ d16(bb 0 insn -1) }u2(25){ d30(bb 0 insn -1) }u3(26){ d31(bb 0 insn -1) }}
;; lr  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 12, 13, 15, 16, 18, 30, 31
;; rd  gen 	(3)
29, 133, 134
;; rd  kill	(4)
28, 29, 133, 134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; rd  out 	(13)
3, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d16(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 1 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 4
;;      reg 2 { d9(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 135 { d133(bb 2 insn 3) }
;;   UD chains for insn luid 3 uid 9
;;      reg 24 { d29(bb 2 insn 8) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d13(bb 0 insn -1) }u9(13){ d16(bb 0 insn -1) }u10(25){ d30(bb 0 insn -1) }u11(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(13)
3, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134
;; rd  gen 	(1)
1
;; rd  kill	(6)
0, 1, 2, 3, 17, 18
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
1, 6, 9, 12, 13, 15, 16, 29, 30, 31, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d16(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 12
;;      reg 136 { d134(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 16
;;      reg 13 { d16(bb 0 insn -1) }
;;      reg 0 { d2(bb 3 insn 12) }
;;      reg 1 { d4(bb 3 insn 13) }
;;      reg 2 { d8(bb 3 insn 14) }
;;      reg 3 { d11(bb 3 insn 15) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ d13(bb 0 insn -1) }u19(13){ d16(bb 0 insn -1) }u20(25){ d30(bb 0 insn -1) }u21(26){ d31(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(14)
1, 3, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d16(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }
;;   reg 26 { d31(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 29
;;      reg 0 { d0(bb 4 insn 23) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u23(0){ d0(bb 4 insn 23) }u24(11){ d13(bb 0 insn -1) }u25(13){ d16(bb 0 insn -1) }u26(14){ d18(bb 0 insn -1) }u27(25){ d30(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(13)
0, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(13)
0, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 4 insn 23) }
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d16(bb 0 insn -1) }
;;   reg 14 { d18(bb 0 insn -1) }
;;   reg 25 { d30(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 16 to worklist
  Adding insn 29 to worklist
Finished finding needed instructions:
  Adding insn 23 to worklist
Processing use of (reg 0 r0) in insn 29:
Processing use of (reg 13 sp) in insn 16:
Processing use of (reg 0 r0) in insn 16:
  Adding insn 12 to worklist
Processing use of (reg 1 r1) in insn 16:
  Adding insn 13 to worklist
Processing use of (reg 2 r2) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 3 r3) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 136 [ cpu ]) in insn 12:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 135 [ action ]) in insn 8:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:


dbg_reset_notify

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,2u} r2={3d,2u} r3={3d,1u} r11={1d,4u} r12={2d} r13={1d,5u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r25={1d,4u} r26={1d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r135={1d,1u} r136={1d,1u} 
;;    total ref usage 163{135d,28u,0e} in 11{10 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,2] 13[16,1] 14[17,2] 15[19,1] 16[20,1] 17[21,1] 18[22,1] 19[23,1] 20[24,1] 21[25,1] 22[26,1] 23[27,1] 24[28,2] 25[30,1] 26[31,1] 27[32,1] 28[33,1] 29[34,1] 30[35,1] 31[36,1] 32[37,1] 33[38,1] 34[39,1] 35[40,1] 36[41,1] 37[42,1] 38[43,1] 39[44,1] 40[45,1] 41[46,1] 42[47,1] 43[48,1] 44[49,1] 45[50,1] 46[51,1] 47[52,1] 48[53,1] 49[54,1] 50[55,1] 51[56,1] 52[57,1] 53[58,1] 54[59,1] 55[60,1] 56[61,1] 57[62,1] 58[63,1] 59[64,1] 60[65,1] 61[66,1] 62[67,1] 63[68,1] 64[69,1] 65[70,1] 66[71,1] 67[72,1] 68[73,1] 69[74,1] 70[75,1] 71[76,1] 72[77,1] 73[78,1] 74[79,1] 75[80,1] 76[81,1] 77[82,1] 78[83,1] 79[84,1] 80[85,1] 81[86,1] 82[87,1] 83[88,1] 84[89,1] 85[90,1] 86[91,1] 87[92,1] 88[93,1] 89[94,1] 90[95,1] 91[96,1] 92[97,1] 93[98,1] 94[99,1] 95[100,1] 96[101,1] 97[102,1] 98[103,1] 99[104,1] 100[105,1] 101[106,1] 102[107,1] 103[108,1] 104[109,1] 105[110,1] 106[111,1] 107[112,1] 108[113,1] 109[114,1] 110[115,1] 111[116,1] 112[117,1] 113[118,1] 114[119,1] 115[120,1] 116[121,1] 117[122,1] 118[123,1] 119[124,1] 120[125,1] 121[126,1] 122[127,1] 123[128,1] 124[129,1] 125[130,1] 126[131,1] 127[132,1] 135[133,1] 136[134,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 136
;; live  in  	 1 [r1] 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 136
;; live  kill	
;; rd  in  	(10)
3, 6, 9, 12, 13, 15, 16, 18, 30, 31
;; rd  gen 	(3)
29, 133, 134
;; rd  kill	(4)
28, 29, 133, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 6 4 2 arch/arm/kernel/hw_breakpoint.c:895 (set (reg/v:SI 135 [ action ])
        (reg:SI 1 r1 [ action ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ action ])
        (nil)))

(insn 4 3 5 2 arch/arm/kernel/hw_breakpoint.c:895 (set (reg/v/f:SI 136 [ cpu ])
        (reg:SI 2 r2 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ cpu ])
        (nil)))

(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 5 9 2 arch/arm/kernel/hw_breakpoint.c:896 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 135 [ action ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ action ])
        (nil)))

(jump_insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:896 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8010 [0x1f4a])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; rd  out 	(13)
3, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134


;; Succ edge  3 [19.9%]  (fallthru)
;; Succ edge  4 [80.1%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]
;; rd  in  	(13)
3, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134
;; rd  gen 	(1)
1
;; rd  kill	(6)
0, 1, 2, 3, 17, 18

;; Pred edge  2 [19.9%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 13 3 arch/arm/kernel/hw_breakpoint.c:897 (set (reg:SI 0 r0)
        (reg/v/f:SI 136 [ cpu ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 136 [ cpu ])
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/hw_breakpoint.c:897 (set (reg:SI 1 r1)
        (symbol_ref:SI ("reset_ctrl_regs") [flags 0x3] <function_decl 0x1141ad80 reset_ctrl_regs>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("reset_ctrl_regs") [flags 0x3] <function_decl 0x1141ad80 reset_ctrl_regs>)
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/hw_breakpoint.c:897 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 15 14 16 3 arch/arm/kernel/hw_breakpoint.c:897 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 16 15 17 3 arch/arm/kernel/hw_breakpoint.c:897 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("smp_call_function_single") [flags 0x41] <function_decl 0x10cc8280 smp_call_function_single>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
1, 6, 9, 12, 13, 15, 16, 29, 30, 31, 133, 134


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(14)
1, 3, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  2 [80.1%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 186 "" [1 uses])

(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 18 29 4 arch/arm/kernel/hw_breakpoint.c:899 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 29 23 0 4 arch/arm/kernel/hw_breakpoint.c:899 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(13)
0, 6, 9, 12, 13, 15, 16, 18, 29, 30, 31, 133, 134


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function get_debug_arch (get_debug_arch)[0:1243]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 8 n_edges 9 count 14 (  1.8)


get_debug_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,7u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,2u} r25={1d,7u} r26={1d,6u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={3d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r148={1d,2u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 200{149d,51u,0e} in 28{27 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,4] 25[31,1] 26[32,1] 27[33,1] 28[34,1] 29[35,1] 30[36,1] 31[37,1] 32[38,1] 33[39,1] 34[40,1] 35[41,1] 36[42,1] 37[43,1] 38[44,1] 39[45,1] 40[46,1] 41[47,1] 42[48,1] 43[49,1] 44[50,1] 45[51,1] 46[52,1] 47[53,1] 48[54,1] 49[55,1] 50[56,1] 51[57,1] 52[58,1] 53[59,1] 54[60,1] 55[61,1] 56[62,1] 57[63,1] 58[64,1] 59[65,1] 60[66,1] 61[67,1] 62[68,1] 63[69,1] 64[70,1] 65[71,1] 66[72,1] 67[73,1] 68[74,1] 69[75,1] 70[76,1] 71[77,1] 72[78,1] 73[79,1] 74[80,1] 75[81,1] 76[82,1] 77[83,1] 78[84,1] 79[85,1] 80[86,1] 81[87,1] 82[88,1] 83[89,1] 84[90,1] 85[91,1] 86[92,1] 87[93,1] 88[94,1] 89[95,1] 90[96,1] 91[97,1] 92[98,1] 93[99,1] 94[100,1] 95[101,1] 96[102,1] 97[103,1] 98[104,1] 99[105,1] 100[106,1] 101[107,1] 102[108,1] 103[109,1] 104[110,1] 105[111,1] 106[112,1] 107[113,1] 108[114,1] 109[115,1] 110[116,1] 111[117,1] 112[118,1] 113[119,1] 114[120,1] 115[121,1] 116[122,1] 117[123,1] 118[124,1] 119[125,1] 120[126,1] 121[127,1] 122[128,1] 123[129,1] 124[130,1] 125[131,1] 126[132,1] 127[133,1] 133[134,1] 134[135,1] 135[136,3] 137[139,1] 138[140,1] 139[141,1] 141[142,1] 142[143,1] 143[144,1] 144[145,1] 148[146,1] 150[147,1] 151[148,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d11(3){ }d12(11){ }d14(12){ }d15(13){ }d17(14){ }d31(25){ }d32(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 11, 12, 14, 15, 17, 31, 32
;; rd  kill	(20)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 31, 32
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 11, 12, 14, 15, 17, 31, 32

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d12(bb 0 insn -1) }u1(13){ d15(bb 0 insn -1) }u2(25){ d31(bb 0 insn -1) }u3(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 137 138
;; live  kill	 24 [cc]
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 31, 32
;; rd  gen 	(4)
29, 134, 139, 140
;; rd  kill	(7)
27, 28, 29, 30, 134, 139, 140
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
3, 6, 9, 11, 12, 14, 15, 17, 29, 31, 32, 134, 139, 140
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 133 { d134(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 137 { d139(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 138 { d140(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 24 { d29(bb 2 insn 8) }

( 2 )->[3]->( 5 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d12(bb 0 insn -1) }u9(13){ d15(bb 0 insn -1) }u10(25){ d31(bb 0 insn -1) }u11(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 141 142 143 144
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 17, 29, 31, 32, 134, 139, 140
;; rd  gen 	(6)
28, 141, 142, 143, 144, 145
;; rd  kill	(9)
27, 28, 29, 30, 141, 142, 143, 144, 145
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(19)
3, 6, 9, 11, 12, 14, 15, 17, 28, 31, 32, 134, 139, 140, 141, 142, 143, 144, 145
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 12
;;      reg 139 { d141(bb 3 insn 11) }
;;   UD chains for insn luid 2 uid 14
;;      reg 141 { d142(bb 3 insn 12) }
;;   UD chains for insn luid 3 uid 15
;;      reg 142 { d143(bb 3 insn 14) }
;;   UD chains for insn luid 4 uid 16
;;      reg 143 { d144(bb 3 insn 15) }
;;   UD chains for insn luid 5 uid 17
;;      reg 144 { d145(bb 3 insn 16) }
;;   UD chains for insn luid 6 uid 18
;;      reg 24 { d28(bb 3 insn 17) }

( 3 )->[4]->( 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ d12(bb 0 insn -1) }u19(13){ d15(bb 0 insn -1) }u20(25){ d31(bb 0 insn -1) }u21(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(19)
3, 6, 9, 11, 12, 14, 15, 17, 28, 31, 32, 134, 139, 140, 141, 142, 143, 144, 145
;; rd  gen 	(1)
138
;; rd  kill	(3)
136, 137, 138
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(20)
3, 6, 9, 11, 12, 14, 15, 17, 28, 31, 32, 134, 138, 139, 140, 141, 142, 143, 144, 145
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }

( 3 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ d12(bb 0 insn -1) }u23(13){ d15(bb 0 insn -1) }u24(25){ d31(bb 0 insn -1) }u25(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 148
;; live  kill	 14 [lr]
;; rd  in  	(19)
3, 6, 9, 11, 12, 14, 15, 17, 28, 31, 32, 134, 139, 140, 141, 142, 143, 144, 145
;; rd  gen 	(2)
136, 146
;; rd  kill	(6)
16, 17, 136, 137, 138, 146
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(20)
3, 6, 9, 11, 12, 14, 15, 28, 31, 32, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 30
;;      reg 13 { d15(bb 0 insn -1) }
;;      reg 0 { d0(bb 5 insn 27) }
;;      reg 1 { d5(bb 5 insn 28) }
;;      reg 2 { d7(bb 5 insn 29) }
;;   UD chains for insn luid 5 uid 34
;;      reg 139 { d141(bb 3 insn 11) }
;;      reg 148 { d146(bb 5 insn 32) }
;;   UD chains for insn luid 6 uid 35
;;      reg 148 { d146(bb 5 insn 32) }

( 2 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u33(11){ d12(bb 0 insn -1) }u34(13){ d15(bb 0 insn -1) }u35(25){ d31(bb 0 insn -1) }u36(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 150 151
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 17, 29, 31, 32, 134, 139, 140
;; rd  gen 	(4)
135, 137, 147, 148
;; rd  kill	(6)
135, 136, 137, 138, 147, 148
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(18)
3, 6, 9, 11, 12, 14, 15, 17, 29, 31, 32, 134, 135, 137, 139, 140, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 41
;;      reg 134 { d135(bb 6 insn 40) }
;;   UD chains for insn luid 2 uid 42
;;      reg 150 { d147(bb 6 insn 41) }
;;   UD chains for insn luid 3 uid 43
;;      reg 151 { d148(bb 6 insn 42) }

( 4 6 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u40(11){ d12(bb 0 insn -1) }u41(13){ d15(bb 0 insn -1) }u42(25){ d31(bb 0 insn -1) }u43(26){ d32(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(27)
3, 6, 9, 11, 12, 14, 15, 17, 28, 29, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(1)
1
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(27)
1, 6, 9, 11, 12, 14, 15, 17, 28, 29, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }
;;   reg 26 { d32(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 135 { d138(bb 4 insn 20) d137(bb 6 insn 43) d136(bb 5 insn 35) }
;;   UD chains for insn luid 1 uid 56
;;      reg 0 { d1(bb 7 insn 50) }

( 7 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u46(0){ d1(bb 7 insn 50) }u47(11){ d12(bb 0 insn -1) }u48(13){ d15(bb 0 insn -1) }u49(14){ d17(bb 0 insn -1) }u50(25){ d31(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(27)
1, 6, 9, 11, 12, 14, 15, 17, 28, 29, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(27)
1, 6, 9, 11, 12, 14, 15, 17, 28, 29, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 7 insn 50) }
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d15(bb 0 insn -1) }
;;   reg 14 { d17(bb 0 insn -1) }
;;   reg 25 { d31(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 18 to worklist
  Adding insn 60 to worklist
  Adding insn 62 to worklist
  Adding insn 34 to worklist
  Adding insn 30 to worklist
  Adding insn 40 to worklist
  Adding insn 56 to worklist
Finished finding needed instructions:
  Adding insn 50 to worklist
Processing use of (reg 135 [ D.23589 ]) in insn 50:
  Adding insn 20 to worklist
  Adding insn 43 to worklist
  Adding insn 35 to worklist
Processing use of (reg 148) in insn 35:
  Adding insn 32 to worklist
Processing use of (reg 151) in insn 43:
  Adding insn 42 to worklist
Processing use of (subreg (reg 150) 0) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 134 [ didr ]) in insn 41:
Processing use of (reg 0 r0) in insn 56:
Processing use of (reg 13 sp) in insn 30:
Processing use of (reg 0 r0) in insn 30:
  Adding insn 27 to worklist
Processing use of (reg 1 r1) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 2 r2) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 139) in insn 34:
  Adding insn 11 to worklist
Processing use of (subreg (reg 148) 0) in insn 34:
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 144) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 143) in insn 16:
  Adding insn 15 to worklist
Processing use of (subreg (reg 142) 0) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 141 [ __warned ]) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 139) in insn 12:
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 138) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 137) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 133 [ __val ]) in insn 6:
  Adding insn 5 to worklist


get_debug_arch

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d,1u} r3={2d} r11={1d,7u} r12={2d} r13={1d,8u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={4d,2u} r25={1d,7u} r26={1d,6u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={3d,1u} r137={1d,1u} r138={1d,1u} r139={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r148={1d,2u} r150={1d,1u} r151={1d,1u} 
;;    total ref usage 200{149d,51u,0e} in 28{27 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
0[0,4] 1[4,3] 2[7,3] 3[10,2] 11[12,1] 12[13,2] 13[15,1] 14[16,2] 15[18,1] 16[19,1] 17[20,1] 18[21,1] 19[22,1] 20[23,1] 21[24,1] 22[25,1] 23[26,1] 24[27,4] 25[31,1] 26[32,1] 27[33,1] 28[34,1] 29[35,1] 30[36,1] 31[37,1] 32[38,1] 33[39,1] 34[40,1] 35[41,1] 36[42,1] 37[43,1] 38[44,1] 39[45,1] 40[46,1] 41[47,1] 42[48,1] 43[49,1] 44[50,1] 45[51,1] 46[52,1] 47[53,1] 48[54,1] 49[55,1] 50[56,1] 51[57,1] 52[58,1] 53[59,1] 54[60,1] 55[61,1] 56[62,1] 57[63,1] 58[64,1] 59[65,1] 60[66,1] 61[67,1] 62[68,1] 63[69,1] 64[70,1] 65[71,1] 66[72,1] 67[73,1] 68[74,1] 69[75,1] 70[76,1] 71[77,1] 72[78,1] 73[79,1] 74[80,1] 75[81,1] 76[82,1] 77[83,1] 78[84,1] 79[85,1] 80[86,1] 81[87,1] 82[88,1] 83[89,1] 84[90,1] 85[91,1] 86[92,1] 87[93,1] 88[94,1] 89[95,1] 90[96,1] 91[97,1] 92[98,1] 93[99,1] 94[100,1] 95[101,1] 96[102,1] 97[103,1] 98[104,1] 99[105,1] 100[106,1] 101[107,1] 102[108,1] 103[109,1] 104[110,1] 105[111,1] 106[112,1] 107[113,1] 108[114,1] 109[115,1] 110[116,1] 111[117,1] 112[118,1] 113[119,1] 114[120,1] 115[121,1] 116[122,1] 117[123,1] 118[124,1] 119[125,1] 120[126,1] 121[127,1] 122[128,1] 123[129,1] 124[130,1] 125[131,1] 126[132,1] 127[133,1] 133[134,1] 134[135,1] 135[136,3] 137[139,1] 138[140,1] 139[141,1] 141[142,1] 142[143,1] 143[144,1] 144[145,1] 148[146,1] 150[147,1] 151[148,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 137 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 137 138
;; live  kill	 24 [cc]
;; rd  in  	(10)
3, 6, 9, 11, 12, 14, 15, 17, 31, 32
;; rd  gen 	(4)
29, 134, 139, 140
;; rd  kill	(7)
27, 28, 29, 30, 134, 139, 140

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/cputype.h:60 (parallel [
            (set (reg/v:SI 133 [ __val ])
                (asm_operands:SI ("mrc	p15, 0, %0, c0, c0, 0") ("=r") 0 []
                     [] 8058056))
            (clobber (reg:QI 24 cc))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/hw_breakpoint.c:140 (set (reg:SI 137)
        (lshiftrt:SI (reg/v:SI 133 [ __val ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ __val ])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:140 (set (reg:SI 138)
        (and:SI (reg:SI 137)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:140 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138)
            (const_int 15 [0xf]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(jump_insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:140 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 38)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(14)
3, 6, 9, 11, 12, 14, 15, 17, 29, 31, 32, 134, 139, 140


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 141 142 143 144
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 17, 29, 31, 32, 134, 139, 140
;; rd  gen 	(6)
28, 141, 142, 143, 144, 145
;; rd  kill	(9)
27, 28, 29, 30, 141, 142, 143, 144, 145

;; Pred edge  2 [0.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 14 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (reg:SI 141 [ __warned ])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 139)
                    (const_int 2 [0x2])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 2 [0x2]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 14 12 15 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (reg:SI 142)
        (xor:SI (reg:SI 141 [ __warned ])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 141 [ __warned ])
        (nil)))

(insn 15 14 16 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (reg:QI 143)
        (subreg:QI (reg:SI 142) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (reg:SI 144)
        (zero_extend:SI (reg:QI 143))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 143)
        (nil)))

(insn 17 16 18 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(jump_insn 18 17 19 3 arch/arm/kernel/hw_breakpoint.c:140 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 3 -> ( 5 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(19)
3, 6, 9, 11, 12, 14, 15, 17, 28, 31, 32, 134, 139, 140, 141, 142, 143, 144, 145


;; Succ edge  5 [0.0%] 
;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(19)
3, 6, 9, 11, 12, 14, 15, 17, 28, 31, 32, 134, 139, 140, 141, 142, 143, 144, 145
;; rd  gen 	(1)
138
;; rd  kill	(3)
136, 137, 138

;; Pred edge  3 [100.0%]  (fallthru)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 60 4 arch/arm/kernel/hw_breakpoint.c:143 (set (reg:SI 135 [ D.23589 ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 60 20 61 4 (set (pc)
        (label_ref 44)) -1 (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(20)
3, 6, 9, 11, 12, 14, 15, 17, 28, 31, 32, 134, 138, 139, 140, 141, 142, 143, 144, 145


;; Succ edge  7 [100.0%] 

(barrier 61 60 23)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 135 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 135 148
;; live  kill	 14 [lr]
;; rd  in  	(19)
3, 6, 9, 11, 12, 14, 15, 17, 28, 31, 32, 134, 139, 140, 141, 142, 143, 144, 145
;; rd  gen 	(2)
136, 146
;; rd  kill	(6)
16, 17, 136, 137, 138, 146

;; Pred edge  3 [0.0%] 
(code_label 23 61 24 5 192 "" [1 uses])

(note 24 23 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 27 24 28 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 28 27 29 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 3 (set (reg:SI 1 r1)
        (const_int 142 [0x8e])) 167 {*arm_movsi_insn} (nil))

(insn 29 28 30 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 3 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x110e9a20>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x110e9a20>)
        (nil)))

(call_insn 30 29 32 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 32 30 34 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 5 (set (reg:SI 148)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 34 32 35 5 arch/arm/kernel/hw_breakpoint.c:140 discrim 5 (set (mem/c/i:QI (plus:SI (reg/f:SI 139)
                (const_int 2 [0x2])) [0 __warned+0 S1 A8])
        (subreg:QI (reg:SI 148) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg/f:SI 139)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 35 34 62 5 arch/arm/kernel/hw_breakpoint.c:143 (set (reg:SI 135 [ D.23589 ])
        (reg:SI 148)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(jump_insn 62 35 63 5 (set (pc)
        (label_ref 44)) -1 (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(20)
3, 6, 9, 11, 12, 14, 15, 28, 31, 32, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146


;; Succ edge  7 [100.0%] 

(barrier 63 62 38)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 135 150 151
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134 135 150 151
;; live  kill	
;; rd  in  	(14)
3, 6, 9, 11, 12, 14, 15, 17, 29, 31, 32, 134, 139, 140
;; rd  gen 	(4)
135, 137, 147, 148
;; rd  kill	(6)
135, 136, 137, 138, 147, 148

;; Pred edge  2 [100.0%] 
(code_label 38 63 39 6 191 "" [1 uses])

(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 6 arch/arm/kernel/hw_breakpoint.c:145 (set (reg/v:SI 134 [ didr ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 0") ("=r") 0 []
             [] 8085270)) -1 (nil))

(insn 41 40 42 6 arch/arm/kernel/hw_breakpoint.c:146 (set (reg:SI 150)
        (lshiftrt:SI (reg/v:SI 134 [ didr ])
            (const_int 16 [0x10]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 134 [ didr ])
        (nil)))

(insn 42 41 43 6 arch/arm/kernel/hw_breakpoint.c:146 (set (reg:SI 151)
        (zero_extend:SI (subreg:QI (reg:SI 150) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 43 42 44 6 arch/arm/kernel/hw_breakpoint.c:146 (set (reg:SI 135 [ D.23589 ])
        (and:SI (reg:SI 151)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(18)
3, 6, 9, 11, 12, 14, 15, 17, 29, 31, 32, 134, 135, 137, 139, 140, 147, 148


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 4 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(27)
3, 6, 9, 11, 12, 14, 15, 17, 28, 29, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148
;; rd  gen 	(1)
1
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  4 [100.0%] 
;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 44 43 45 7 193 "" [2 uses])

(note 45 44 50 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 50 45 56 7 arch/arm/kernel/hw_breakpoint.c:147 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.23589 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.23589 ])
        (nil)))

(insn 56 50 0 7 arch/arm/kernel/hw_breakpoint.c:147 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(27)
1, 6, 9, 11, 12, 14, 15, 17, 28, 29, 31, 32, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function core_has_mismatch_brps (core_has_mismatch_brps)[0:1247]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)


core_has_mismatch_brps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r135={2d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 167{136d,31u,0e} in 13{12 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 135[131,2] 137[133,1] 138[134,1] 139[135,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d14(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(3)
1, 24, 133
;; rd  kill	(9)
0, 1, 2, 13, 14, 24, 25, 26, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 133
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 5
;;      reg 13 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 0 { d1(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 8
;;      reg 137 { d133(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 9
;;      reg 24 { d24(bb 2 insn 8) }

( 2 )->[3]->( 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d9(bb 0 insn -1) }u9(13){ d12(bb 0 insn -1) }u10(25){ d27(bb 0 insn -1) }u11(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(11)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 133
;; rd  gen 	(1)
132
;; rd  kill	(2)
131, 132
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(12)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 132, 133
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }

( 2 )->[4]->( 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ d9(bb 0 insn -1) }u13(13){ d12(bb 0 insn -1) }u14(25){ d27(bb 0 insn -1) }u15(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 138 139
;; live  kill	
;; rd  in  	(11)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 133
;; rd  gen 	(5)
25, 130, 131, 134, 135
;; rd  kill	(8)
24, 25, 26, 130, 131, 132, 134, 135
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(15)
1, 4, 6, 8, 9, 11, 12, 25, 27, 28, 130, 131, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 17
;;      reg 133 { d130(bb 4 insn 16) }
;;   UD chains for insn luid 2 uid 18
;;      reg 138 { d134(bb 4 insn 17) }
;;   UD chains for insn luid 3 uid 19
;;      reg 139 { d135(bb 4 insn 18) }
;;   UD chains for insn luid 4 uid 20
;;      reg 24 { d25(bb 4 insn 19) }

( 4 3 )->[5]->( 1 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ d9(bb 0 insn -1) }u21(13){ d12(bb 0 insn -1) }u22(25){ d27(bb 0 insn -1) }u23(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(17)
1, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 135 { d132(bb 3 insn 11) d131(bb 4 insn 20) }
;;   UD chains for insn luid 1 uid 34
;;      reg 0 { d0(bb 5 insn 28) }

( 5 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u26(0){ d0(bb 5 insn 28) }u27(11){ d9(bb 0 insn -1) }u28(13){ d12(bb 0 insn -1) }u29(14){ }u30(25){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
0, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
0, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 5 insn 28) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 38 to worklist
  Adding insn 16 to worklist
  Adding insn 34 to worklist
Finished finding needed instructions:
  Adding insn 28 to worklist
Processing use of (reg 135 [ D.23614 ]) in insn 28:
  Adding insn 11 to worklist
  Adding insn 20 to worklist
Processing use of (reg 24 cc) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 139) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 138) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 133 [ didr ]) in insn 17:
Processing use of (reg 0 r0) in insn 34:
Processing use of (reg 13 sp) in insn 5:
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 137) in insn 8:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 6:


core_has_mismatch_brps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r11={1d,5u} r12={2d} r13={1d,6u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,5u} r26={1d,4u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r135={2d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 167{136d,31u,0e} in 13{12 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 135[131,2] 137[133,1] 138[134,1] 139[135,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 137
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(3)
1, 24, 133
;; rd  kill	(9)
0, 1, 2, 13, 14, 24, 25, 26, 133

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 6 2 arch/arm/kernel/hw_breakpoint.c:171 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_debug_arch") [flags 0x3] <function_decl 0x113d8480 get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 6 5 8 2 arch/arm/kernel/hw_breakpoint.c:171 (set (reg:SI 137)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 8 6 9 2 arch/arm/kernel/hw_breakpoint.c:171 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 137)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(jump_insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:171 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 133


;; Succ edge  4 [50.0%] 
;; Succ edge  3 [50.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(11)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 133
;; rd  gen 	(1)
132
;; rd  kill	(2)
131, 132

;; Pred edge  2 [50.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 38 3 arch/arm/kernel/hw_breakpoint.c:171 discrim 2 (set (reg:SI 135 [ D.23614 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 38 11 39 3 (set (pc)
        (label_ref 22)) -1 (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(12)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 132, 133


;; Succ edge  5 [100.0%] 

(barrier 39 38 14)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 135 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 135 138 139
;; live  kill	
;; rd  in  	(11)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 133
;; rd  gen 	(5)
25, 130, 131, 134, 135
;; rd  kill	(8)
24, 25, 26, 130, 131, 132, 134, 135

;; Pred edge  2 [50.0%] 
(code_label 14 39 15 4 198 "" [1 uses])

(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 arch/arm/kernel/hw_breakpoint.c:164 (set (reg/v:SI 133 [ didr ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 0") ("=r") 0 []
             [] 8087702)) -1 (nil))

(insn 17 16 18 4 arch/arm/kernel/hw_breakpoint.c:171 discrim 3 (set (reg:SI 138)
        (lshiftrt:SI (reg/v:SI 133 [ didr ])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ didr ])
        (nil)))

(insn 18 17 19 4 arch/arm/kernel/hw_breakpoint.c:171 discrim 3 (set (reg:SI 139)
        (and:SI (reg:SI 138)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 19 18 20 4 arch/arm/kernel/hw_breakpoint.c:171 discrim 3 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(insn 20 19 22 4 arch/arm/kernel/hw_breakpoint.c:171 discrim 3 (set (reg:SI 135 [ D.23614 ])
        (ne:SI (reg:CC 24 cc)
            (const_int 0 [0x0]))) 233 {*mov_scc} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(15)
1, 4, 6, 8, 9, 11, 12, 25, 27, 28, 130, 131, 133, 134, 135


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(17)
1, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 22 20 23 5 199 "" [1 uses])

(note 23 22 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 23 34 5 arch/arm/kernel/hw_breakpoint.c:173 (set (reg/i:SI 0 r0)
        (reg:SI 135 [ D.23614 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.23614 ])
        (nil)))

(insn 34 28 0 5 arch/arm/kernel/hw_breakpoint.c:173 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function get_num_wrps (get_num_wrps)[0:1248]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 11 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 7 n_edges 8 count 12 (  1.7)


get_num_wrps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={2d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 175{138d,37u,0e} in 16{15 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,2] 136[134,1] 138[135,1] 139[136,1] 140[137,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d4(1){ }d6(2){ }d8(3){ }d9(11){ }d11(12){ }d12(13){ }d14(14){ }d27(25){ }d28(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  kill	(17)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 27, 28
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d9(bb 0 insn -1) }u1(13){ d12(bb 0 insn -1) }u2(25){ d27(bb 0 insn -1) }u3(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(3)
1, 25, 134
;; rd  kill	(9)
0, 1, 2, 13, 14, 24, 25, 26, 134
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
1, 4, 6, 8, 9, 11, 12, 25, 27, 28, 134
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 5
;;      reg 13 { d12(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 0 { d1(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 136 { d134(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d25(bb 2 insn 7) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d9(bb 0 insn -1) }u9(13){ d12(bb 0 insn -1) }u10(25){ d27(bb 0 insn -1) }u11(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 138 139
;; live  kill	
;; rd  in  	(11)
1, 4, 6, 8, 9, 11, 12, 25, 27, 28, 134
;; rd  gen 	(4)
24, 131, 135, 136
;; rd  kill	(6)
24, 25, 26, 131, 135, 136
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 131, 134, 135, 136
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 11
;;      reg 134 { d131(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 12
;;      reg 138 { d135(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 13
;;      reg 139 { d136(bb 3 insn 12) }
;;   UD chains for insn luid 4 uid 14
;;      reg 24 { d24(bb 3 insn 13) }

( 3 )->[4]->( 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ d9(bb 0 insn -1) }u17(13){ d12(bb 0 insn -1) }u18(25){ d27(bb 0 insn -1) }u19(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 135 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133 135 140
;; live  kill	
;; rd  in  	(14)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 131, 134, 135, 136
;; rd  gen 	(3)
130, 132, 137
;; rd  kill	(4)
130, 132, 133, 137
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(17)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 130, 131, 132, 134, 135, 136, 137
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 17
;;      reg 133 { d130(bb 4 insn 16) }
;;   UD chains for insn luid 2 uid 18
;;      reg 140 { d137(bb 4 insn 17) }

( 2 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ d9(bb 0 insn -1) }u23(13){ d12(bb 0 insn -1) }u24(25){ d27(bb 0 insn -1) }u25(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(15)
1, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 131, 134, 135, 136
;; rd  gen 	(1)
133
;; rd  kill	(2)
132, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(16)
1, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 131, 133, 134, 135, 136
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }

( 5 4 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(11){ d9(bb 0 insn -1) }u27(13){ d12(bb 0 insn -1) }u28(25){ d27(bb 0 insn -1) }u29(26){ d28(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(19)
1, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;;  UD chains for artificial uses
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 25 { d27(bb 0 insn -1) }
;;   reg 26 { d28(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 32
;;      reg 135 { d133(bb 5 insn 25) d132(bb 4 insn 18) }
;;   UD chains for insn luid 1 uid 38
;;      reg 0 { d0(bb 6 insn 32) }

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u32(0){ d0(bb 6 insn 32) }u33(11){ d9(bb 0 insn -1) }u34(13){ d12(bb 0 insn -1) }u35(14){ }u36(25){ d27(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(19)
0, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(19)
0, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 6 insn 32) }
;;   reg 11 { d9(bb 0 insn -1) }
;;   reg 13 { d12(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d27(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 5 to worklist
  Adding insn 14 to worklist
  Adding insn 10 to worklist
  Adding insn 42 to worklist
  Adding insn 16 to worklist
  Adding insn 38 to worklist
Finished finding needed instructions:
  Adding insn 32 to worklist
Processing use of (reg 135 [ wrps ]) in insn 32:
  Adding insn 25 to worklist
  Adding insn 18 to worklist
Processing use of (reg 140) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 133 [ didr ]) in insn 17:
Processing use of (reg 0 r0) in insn 38:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 139) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 138) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 134 [ didr ]) in insn 11:
Processing use of (reg 13 sp) in insn 5:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 136 [ D.23626 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 6:


get_num_wrps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={2d} r2={2d} r3={2d} r11={1d,6u} r12={2d} r13={1d,7u} r14={2d,1u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r25={1d,6u} r26={1d,5u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} r133={1d,1u} r134={1d,1u} r135={2d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} 
;;    total ref usage 175{138d,37u,0e} in 16{15 regular + 1 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129
0[0,3] 1[3,2] 2[5,2] 3[7,2] 11[9,1] 12[10,2] 13[12,1] 14[13,2] 15[15,1] 16[16,1] 17[17,1] 18[18,1] 19[19,1] 20[20,1] 21[21,1] 22[22,1] 23[23,1] 24[24,3] 25[27,1] 26[28,1] 27[29,1] 28[30,1] 29[31,1] 30[32,1] 31[33,1] 32[34,1] 33[35,1] 34[36,1] 35[37,1] 36[38,1] 37[39,1] 38[40,1] 39[41,1] 40[42,1] 41[43,1] 42[44,1] 43[45,1] 44[46,1] 45[47,1] 46[48,1] 47[49,1] 48[50,1] 49[51,1] 50[52,1] 51[53,1] 52[54,1] 53[55,1] 54[56,1] 55[57,1] 56[58,1] 57[59,1] 58[60,1] 59[61,1] 60[62,1] 61[63,1] 62[64,1] 63[65,1] 64[66,1] 65[67,1] 66[68,1] 67[69,1] 68[70,1] 69[71,1] 70[72,1] 71[73,1] 72[74,1] 73[75,1] 74[76,1] 75[77,1] 76[78,1] 77[79,1] 78[80,1] 79[81,1] 80[82,1] 81[83,1] 82[84,1] 83[85,1] 84[86,1] 85[87,1] 86[88,1] 87[89,1] 88[90,1] 89[91,1] 90[92,1] 91[93,1] 92[94,1] 93[95,1] 94[96,1] 95[97,1] 96[98,1] 97[99,1] 98[100,1] 99[101,1] 100[102,1] 101[103,1] 102[104,1] 103[105,1] 104[106,1] 105[107,1] 106[108,1] 107[109,1] 108[110,1] 109[111,1] 110[112,1] 111[113,1] 112[114,1] 113[115,1] 114[116,1] 115[117,1] 116[118,1] 117[119,1] 118[120,1] 119[121,1] 120[122,1] 121[123,1] 122[124,1] 123[125,1] 124[126,1] 125[127,1] 126[128,1] 127[129,1] 133[130,1] 134[131,1] 135[132,2] 136[134,1] 138[135,1] 139[136,1] 140[137,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 136
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 4, 6, 8, 9, 11, 12, 14, 27, 28
;; rd  gen 	(3)
1, 25, 134
;; rd  kill	(9)
0, 1, 2, 13, 14, 24, 25, 26, 134

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 6 2 arch/arm/kernel/hw_breakpoint.c:204 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("core_has_mismatch_brps") [flags 0x3] <function_decl 0x113d8880 core_has_mismatch_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 6 5 7 2 arch/arm/kernel/hw_breakpoint.c:204 (set (reg:SI 136 [ D.23626 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:204 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.23626 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.23626 ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:204 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
1, 4, 6, 8, 9, 11, 12, 25, 27, 28, 134


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  5 [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 134 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 134 138 139
;; live  kill	
;; rd  in  	(11)
1, 4, 6, 8, 9, 11, 12, 25, 27, 28, 134
;; rd  gen 	(4)
24, 131, 135, 136
;; rd  kill	(6)
24, 25, 26, 131, 135, 136

;; Pred edge  2 [61.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/kernel/hw_breakpoint.c:164 (set (reg/v:SI 134 [ didr ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 0") ("=r") 0 []
             [] 8087702)) -1 (nil))

(insn 11 10 12 3 arch/arm/kernel/hw_breakpoint.c:165 (set (reg:SI 138)
        (lshiftrt:SI (reg/v:SI 134 [ didr ])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 134 [ didr ])
        (nil)))

(insn 12 11 13 3 arch/arm/kernel/hw_breakpoint.c:165 (set (reg:SI 139)
        (and:SI (reg:SI 138)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 13 12 14 3 arch/arm/kernel/hw_breakpoint.c:165 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(jump_insn 14 13 15 3 arch/arm/kernel/hw_breakpoint.c:165 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6335 [0x18bf])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 131, 134, 135, 136


;; Succ edge  4 [36.6%]  (fallthru)
;; Succ edge  5 [63.4%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 133 135 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 133 135 140
;; live  kill	
;; rd  in  	(14)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 131, 134, 135, 136
;; rd  gen 	(3)
130, 132, 137
;; rd  kill	(4)
130, 132, 133, 137

;; Pred edge  3 [36.6%]  (fallthru)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 4 arch/arm/kernel/hw_breakpoint.c:164 (set (reg/v:SI 133 [ didr ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 0") ("=r") 0 []
             [] 8087702)) -1 (nil))

(insn 17 16 18 4 arch/arm/kernel/hw_breakpoint.c:205 (set (reg:SI 140)
        (lshiftrt:SI (reg/v:SI 133 [ didr ])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ didr ])
        (nil)))

(insn 18 17 42 4 arch/arm/kernel/hw_breakpoint.c:205 (set (reg/v:SI 135 [ wrps ])
        (and:SI (reg:SI 140)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(jump_insn 42 18 43 4 (set (pc)
        (label_ref 26)) -1 (nil))
;; End of basic block 4 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(17)
1, 4, 6, 8, 9, 11, 12, 24, 27, 28, 130, 131, 132, 134, 135, 136, 137


;; Succ edge  6 [100.0%] 

(barrier 43 42 23)

;; Start of basic block ( 2 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u22(11){ }u23(13){ }u24(25){ }u25(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 135
;; live  kill	
;; rd  in  	(15)
1, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 131, 134, 135, 136
;; rd  gen 	(1)
133
;; rd  kill	(2)
132, 133

;; Pred edge  2 [39.0%] 
;; Pred edge  3 [63.4%] 
(code_label 23 43 24 5 202 "" [2 uses])

(note 24 23 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 25 24 26 5 arch/arm/kernel/hw_breakpoint.c:202 (set (reg/v:SI 135 [ wrps ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(16)
1, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 131, 133, 134, 135, 136


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 5 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(19)
1, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2

;; Pred edge  5 [100.0%]  (fallthru)
;; Pred edge  4 [100.0%] 
(code_label 26 25 27 6 203 "" [1 uses])

(note 27 26 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 32 27 38 6 arch/arm/kernel/hw_breakpoint.c:208 (set (reg/i:SI 0 r0)
        (reg/v:SI 135 [ wrps ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 135 [ wrps ])
        (nil)))

(insn 38 32 0 6 arch/arm/kernel/hw_breakpoint.c:208 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(19)
0, 4, 6, 8, 9, 11, 12, 24, 25, 27, 28, 130, 131, 132, 133, 134, 135, 136, 137


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function get_num_reserved_brps (get_num_reserved_brps)[0:1249]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


get_num_reserved_brps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,6u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} 
;;    total ref usage 268{245d,23u,0e} in 6{4 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
0[0,3] 1[3,3] 2[6,3] 3[9,3] 11[12,1] 12[13,3] 13[16,1] 14[17,2] 15[19,2] 16[21,2] 17[23,2] 18[25,2] 19[27,2] 20[29,2] 21[31,2] 22[33,2] 23[35,2] 24[37,3] 25[40,1] 26[41,1] 27[42,2] 28[44,2] 29[46,2] 30[48,2] 31[50,2] 32[52,2] 33[54,2] 34[56,2] 35[58,2] 36[60,2] 37[62,2] 38[64,2] 39[66,2] 40[68,2] 41[70,2] 42[72,2] 43[74,2] 44[76,2] 45[78,2] 46[80,2] 47[82,2] 48[84,2] 49[86,2] 50[88,2] 51[90,2] 52[92,2] 53[94,2] 54[96,2] 55[98,2] 56[100,2] 57[102,2] 58[104,2] 59[106,2] 60[108,2] 61[110,2] 62[112,2] 63[114,2] 64[116,2] 65[118,2] 66[120,2] 67[122,2] 68[124,2] 69[126,2] 70[128,2] 71[130,2] 72[132,2] 73[134,2] 74[136,2] 75[138,2] 76[140,2] 77[142,2] 78[144,2] 79[146,2] 80[148,2] 81[150,2] 82[152,2] 83[154,2] 84[156,2] 85[158,2] 86[160,2] 87[162,2] 88[164,2] 89[166,2] 90[168,2] 91[170,2] 92[172,2] 93[174,2] 94[176,2] 95[178,2] 96[180,2] 97[182,2] 98[184,2] 99[186,2] 100[188,2] 101[190,2] 102[192,2] 103[194,2] 104[196,2] 105[198,2] 106[200,2] 107[202,2] 108[204,2] 109[206,2] 110[208,2] 111[210,2] 112[212,2] 113[214,2] 114[216,2] 115[218,2] 116[220,2] 117[222,2] 118[224,2] 119[226,2] 120[228,2] 121[230,2] 122[232,2] 123[234,2] 124[236,2] 125[238,2] 126[240,2] 127[242,2] 134[244,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d2(0){ }d5(1){ }d8(2){ }d11(3){ }d12(11){ }d15(12){ }d16(13){ }d18(14){ }d40(25){ }d41(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
2, 5, 8, 11, 12, 15, 16, 18, 40, 41
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 40, 41
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
2, 5, 8, 11, 12, 15, 16, 18, 40, 41

( 0 )->[2]->( 4 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d12(bb 0 insn -1) }u1(13){ d16(bb 0 insn -1) }u2(25){ d40(bb 0 insn -1) }u3(26){ d41(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 11, 12, 15, 16, 18, 40, 41
;; rd  gen 	(3)
1, 38, 244
;; rd  kill	(9)
0, 1, 2, 17, 18, 37, 38, 39, 244
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
1, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d16(bb 0 insn -1) }
;;   reg 25 { d40(bb 0 insn -1) }
;;   reg 26 { d41(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 5
;;      reg 13 { d16(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 0 { d1(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 134 { d244(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d38(bb 2 insn 7) }

( 2 )->[3]->( 1 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ d12(bb 0 insn -1) }u9(13){ d16(bb 0 insn -1) }u10(25){ d40(bb 0 insn -1) }u11(26){ d41(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
1, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
1, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d16(bb 0 insn -1) }
;;   reg 25 { d40(bb 0 insn -1) }
;;   reg 26 { d41(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 0 { d1(bb 2 insn 5) }

( 2 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(11){ d12(bb 0 insn -1) }u14(13){ d16(bb 0 insn -1) }u15(25){ d40(bb 0 insn -1) }u16(26){ d41(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(11)
1, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244
;;  UD chains for artificial uses
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d16(bb 0 insn -1) }
;;   reg 25 { d40(bb 0 insn -1) }
;;   reg 26 { d41(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 15
;;      reg 13 { d16(bb 0 insn -1) }

( 4 3 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u18(0){ d1(bb 2 insn 5) d0(bb 4 insn 15) }u19(11){ d12(bb 0 insn -1) }u20(13){ d16(bb 0 insn -1) }u21(14){ }u22(25){ d40(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
0, 1, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(12)
0, 1, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 2 insn 5) d0(bb 4 insn 15) }
;;   reg 11 { d12(bb 0 insn -1) }
;;   reg 13 { d16(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d40(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 5 to worklist
  Adding insn 30 to worklist
  Adding insn 15 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 15:
Processing use of (reg 0 r0) in insn 30:
Processing use of (reg 13 sp) in insn 5:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 134 [ D.23637 ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 0 r0) in insn 6:


get_num_reserved_brps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,3u} r1={3d} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,6u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r134={1d,1u} 
;;    total ref usage 268{245d,23u,0e} in 6{4 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
0[0,3] 1[3,3] 2[6,3] 3[9,3] 11[12,1] 12[13,3] 13[16,1] 14[17,2] 15[19,2] 16[21,2] 17[23,2] 18[25,2] 19[27,2] 20[29,2] 21[31,2] 22[33,2] 23[35,2] 24[37,3] 25[40,1] 26[41,1] 27[42,2] 28[44,2] 29[46,2] 30[48,2] 31[50,2] 32[52,2] 33[54,2] 34[56,2] 35[58,2] 36[60,2] 37[62,2] 38[64,2] 39[66,2] 40[68,2] 41[70,2] 42[72,2] 43[74,2] 44[76,2] 45[78,2] 46[80,2] 47[82,2] 48[84,2] 49[86,2] 50[88,2] 51[90,2] 52[92,2] 53[94,2] 54[96,2] 55[98,2] 56[100,2] 57[102,2] 58[104,2] 59[106,2] 60[108,2] 61[110,2] 62[112,2] 63[114,2] 64[116,2] 65[118,2] 66[120,2] 67[122,2] 68[124,2] 69[126,2] 70[128,2] 71[130,2] 72[132,2] 73[134,2] 74[136,2] 75[138,2] 76[140,2] 77[142,2] 78[144,2] 79[146,2] 80[148,2] 81[150,2] 82[152,2] 83[154,2] 84[156,2] 85[158,2] 86[160,2] 87[162,2] 88[164,2] 89[166,2] 90[168,2] 91[170,2] 92[172,2] 93[174,2] 94[176,2] 95[178,2] 96[180,2] 97[182,2] 98[184,2] 99[186,2] 100[188,2] 101[190,2] 102[192,2] 103[194,2] 104[196,2] 105[198,2] 106[200,2] 107[202,2] 108[204,2] 109[206,2] 110[208,2] 111[210,2] 112[212,2] 113[214,2] 114[216,2] 115[218,2] 116[220,2] 117[222,2] 118[224,2] 119[226,2] 120[228,2] 121[230,2] 122[232,2] 123[234,2] 124[236,2] 125[238,2] 126[240,2] 127[242,2] 134[244,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 134
;; live  kill	 14 [lr]
;; rd  in  	(10)
2, 5, 8, 11, 12, 15, 16, 18, 40, 41
;; rd  gen 	(3)
1, 38, 244
;; rd  kill	(9)
0, 1, 2, 17, 18, 37, 38, 39, 244

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 5 2 6 2 arch/arm/kernel/hw_breakpoint.c:213 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("core_has_mismatch_brps") [flags 0x3] <function_decl 0x113d8880 core_has_mismatch_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 6 5 7 2 arch/arm/kernel/hw_breakpoint.c:213 (set (reg:SI 134 [ D.23637 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:213 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.23637 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.23637 ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:213 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 13)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3898 [0xf3a])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
1, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244


;; Succ edge  4 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u8(11){ }u9(13){ }u10(25){ }u11(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(11)
1, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [61.0%]  (fallthru)
(note 9 8 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 30 9 13 3 arch/arm/kernel/hw_breakpoint.c:216 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 3 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
1, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244


;; Succ edge  EXIT [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u13(11){ }u14(13){ }u15(25){ }u16(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(11)
1, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244
;; rd  gen 	(1)
0
;; rd  kill	(3)
0, 1, 2

;; Pred edge  2 [39.0%] 
(code_label 13 30 14 4 206 "" [1 uses])

(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 15 14 16 4 arch/arm/kernel/hw_breakpoint.c:214 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_wrps") [flags 0x3] <function_decl 0x113d8980 get_num_wrps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(11)
0, 5, 8, 11, 12, 15, 16, 38, 40, 41, 244


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 16 15 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function get_num_brps (get_num_brps)[0:1250]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)


get_num_brps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,6u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,2u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 283{253d,30u,0e} in 13{11 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,3] 13[17,1] 14[18,3] 15[21,2] 16[23,2] 17[25,2] 18[27,2] 19[29,2] 20[31,2] 21[33,2] 22[35,2] 23[37,2] 24[39,3] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,2] 135[249,1] 136[250,1] 138[251,1] 139[252,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d16(12){ }d17(13){ }d20(14){ }d42(25){ }d43(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 12, 13, 16, 17, 20, 42, 43
;; rd  kill	(23)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 42, 43
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 12, 13, 16, 17, 20, 42, 43

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d13(bb 0 insn -1) }u1(13){ d17(bb 0 insn -1) }u2(25){ d42(bb 0 insn -1) }u3(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 134 136 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 20, 42, 43
;; rd  gen 	(7)
2, 40, 246, 248, 250, 251, 252
;; rd  kill	(16)
0, 1, 2, 3, 18, 19, 20, 39, 40, 41, 246, 247, 248, 250, 251, 252
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(15)
2, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 248, 250, 251, 252
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 133 { d246(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 138 { d251(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 139 { d252(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 13 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 5 uid 10
;;      reg 0 { d2(bb 2 insn 9) }
;;   UD chains for insn luid 6 uid 11
;;      reg 136 { d250(bb 2 insn 10) }
;;   UD chains for insn luid 7 uid 12
;;      reg 24 { d40(bb 2 insn 11) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d13(bb 0 insn -1) }u12(13){ d17(bb 0 insn -1) }u13(25){ d42(bb 0 insn -1) }u14(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 134 135
;; live  kill	 14 [lr]
;; rd  in  	(15)
2, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 248, 250, 251, 252
;; rd  gen 	(3)
1, 247, 249
;; rd  kill	(10)
0, 1, 2, 3, 18, 19, 20, 247, 248, 249
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
1, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 247, 249, 250, 251, 252
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 13 { d17(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 15
;;      reg 0 { d1(bb 3 insn 14) }
;;   UD chains for insn luid 2 uid 16
;;      reg 134 { d248(bb 2 insn 8) }
;;      reg 135 { d249(bb 3 insn 15) }

( 2 3 )->[4]->( 1 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d13(bb 0 insn -1) }u20(13){ d17(bb 0 insn -1) }u21(25){ d42(bb 0 insn -1) }u22(26){ d43(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(18)
1, 2, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 247, 248, 249, 250, 251, 252
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 247, 248, 249, 250, 251, 252
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d42(bb 0 insn -1) }
;;   reg 26 { d43(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 23
;;      reg 134 { d248(bb 2 insn 8) d247(bb 3 insn 16) }
;;   UD chains for insn luid 1 uid 29
;;      reg 0 { d0(bb 4 insn 23) }

( 4 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u25(0){ d0(bb 4 insn 23) }u26(11){ d13(bb 0 insn -1) }u27(13){ d17(bb 0 insn -1) }u28(14){ }u29(25){ d42(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(17)
0, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 247, 248, 249, 250, 251, 252
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(17)
0, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 247, 248, 249, 250, 251, 252
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 4 insn 23) }
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d42(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 9 to worklist
  Adding insn 5 to worklist
  Adding insn 14 to worklist
  Adding insn 29 to worklist
Finished finding needed instructions:
  Adding insn 23 to worklist
Processing use of (reg 134 [ brps ]) in insn 23:
  Adding insn 8 to worklist
  Adding insn 16 to worklist
Processing use of (reg 134 [ brps ]) in insn 16:
Processing use of (reg 135 [ D.23650 ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 0 r0) in insn 15:
Processing use of (reg 139) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 138) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 133 [ didr ]) in insn 6:
Processing use of (reg 0 r0) in insn 29:
Processing use of (reg 13 sp) in insn 14:
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 136 [ D.23647 ]) in insn 11:
  Adding insn 10 to worklist
Processing use of (reg 0 r0) in insn 10:


get_num_brps

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,4u} r1={3d} r2={3d} r3={3d} r11={1d,4u} r12={3d} r13={1d,6u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={3d,1u} r25={1d,4u} r26={1d,3u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={2d,2u} r135={1d,1u} r136={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 283{253d,30u,0e} in 13{11 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,3] 13[17,1] 14[18,3] 15[21,2] 16[23,2] 17[25,2] 18[27,2] 19[29,2] 20[31,2] 21[33,2] 22[35,2] 23[37,2] 24[39,3] 25[42,1] 26[43,1] 27[44,2] 28[46,2] 29[48,2] 30[50,2] 31[52,2] 32[54,2] 33[56,2] 34[58,2] 35[60,2] 36[62,2] 37[64,2] 38[66,2] 39[68,2] 40[70,2] 41[72,2] 42[74,2] 43[76,2] 44[78,2] 45[80,2] 46[82,2] 47[84,2] 48[86,2] 49[88,2] 50[90,2] 51[92,2] 52[94,2] 53[96,2] 54[98,2] 55[100,2] 56[102,2] 57[104,2] 58[106,2] 59[108,2] 60[110,2] 61[112,2] 62[114,2] 63[116,2] 64[118,2] 65[120,2] 66[122,2] 67[124,2] 68[126,2] 69[128,2] 70[130,2] 71[132,2] 72[134,2] 73[136,2] 74[138,2] 75[140,2] 76[142,2] 77[144,2] 78[146,2] 79[148,2] 80[150,2] 81[152,2] 82[154,2] 83[156,2] 84[158,2] 85[160,2] 86[162,2] 87[164,2] 88[166,2] 89[168,2] 90[170,2] 91[172,2] 92[174,2] 93[176,2] 94[178,2] 95[180,2] 96[182,2] 97[184,2] 98[186,2] 99[188,2] 100[190,2] 101[192,2] 102[194,2] 103[196,2] 104[198,2] 105[200,2] 106[202,2] 107[204,2] 108[206,2] 109[208,2] 110[210,2] 111[212,2] 112[214,2] 113[216,2] 114[218,2] 115[220,2] 116[222,2] 117[224,2] 118[226,2] 119[228,2] 120[230,2] 121[232,2] 122[234,2] 123[236,2] 124[238,2] 125[240,2] 126[242,2] 127[244,2] 133[246,1] 134[247,2] 135[249,1] 136[250,1] 138[251,1] 139[252,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 138 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 133 134 136 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 20, 42, 43
;; rd  gen 	(7)
2, 40, 246, 248, 250, 251, 252
;; rd  kill	(16)
0, 1, 2, 3, 18, 19, 20, 39, 40, 41, 246, 247, 248, 250, 251, 252

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/hw_breakpoint.c:164 (set (reg/v:SI 133 [ didr ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c0, 0") ("=r") 0 []
             [] 8087702)) -1 (nil))

(insn 6 5 7 2 arch/arm/kernel/hw_breakpoint.c:165 (set (reg:SI 138)
        (lshiftrt:SI (reg/v:SI 133 [ didr ])
            (const_int 24 [0x18]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 133 [ didr ])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:165 (set (reg:SI 139)
        (and:SI (reg:SI 138)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:165 (set (reg/v:SI 134 [ brps ])
        (plus:SI (reg:SI 139)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(call_insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:222 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("core_has_mismatch_brps") [flags 0x3] <function_decl 0x113d8880 core_has_mismatch_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 10 9 11 2 arch/arm/kernel/hw_breakpoint.c:222 (set (reg:SI 136 [ D.23647 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/hw_breakpoint.c:222 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 136 [ D.23647 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 136 [ D.23647 ])
        (nil)))

(jump_insn 12 11 13 2 arch/arm/kernel/hw_breakpoint.c:222 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 17)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(15)
2, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 248, 250, 251, 252


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0] 134 135
;; live  kill	 14 [lr]
;; rd  in  	(15)
2, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 248, 250, 251, 252
;; rd  gen 	(3)
1, 247, 249
;; rd  kill	(10)
0, 1, 2, 3, 18, 19, 20, 247, 248, 249

;; Pred edge  2 [39.0%]  (fallthru)
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(call_insn 14 13 15 3 arch/arm/kernel/hw_breakpoint.c:223 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_reserved_brps") [flags 0x3] <function_decl 0x113d8a80 get_num_reserved_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 15 14 16 3 arch/arm/kernel/hw_breakpoint.c:223 (set (reg:SI 135 [ D.23650 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/hw_breakpoint.c:223 (set (reg/v:SI 134 [ brps ])
        (minus:SI (reg/v:SI 134 [ brps ])
            (reg:SI 135 [ D.23650 ]))) 28 {*arm_subsi3_insn} (expr_list:REG_DEAD (reg:SI 135 [ D.23650 ])
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
1, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 247, 249, 250, 251, 252


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(18)
1, 2, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 247, 248, 249, 250, 251, 252
;; rd  gen 	(1)
0
;; rd  kill	(4)
0, 1, 2, 3

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 17 16 18 4 210 "" [1 uses])

(note 18 17 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 18 29 4 arch/arm/kernel/hw_breakpoint.c:225 (set (reg/i:SI 0 r0)
        (reg/v:SI 134 [ brps ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ brps ])
        (nil)))

(insn 29 23 0 4 arch/arm/kernel/hw_breakpoint.c:225 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
0, 6, 9, 12, 13, 16, 17, 40, 42, 43, 246, 247, 248, 249, 250, 251, 252


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hw_breakpoint_slots (hw_breakpoint_slots)[0:1252]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 15 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 18 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 10 n_edges 12 count 18 (  1.8)


hw_breakpoint_slots

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,5u} r1={6d,1u} r2={5d} r3={5d} r11={1d,9u} r12={5d} r13={1d,13u} r14={3d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={7d,3u} r25={1d,9u} r26={1d,8u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r136={1d,3u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 541{486d,55u,0e} in 19{15 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
0[0,7] 1[7,6] 2[13,5] 3[18,5] 11[23,1] 12[24,5] 13[29,1] 14[30,3] 15[33,4] 16[37,4] 17[41,4] 18[45,4] 19[49,4] 20[53,4] 21[57,4] 22[61,4] 23[65,4] 24[69,7] 25[76,1] 26[77,1] 27[78,4] 28[82,4] 29[86,4] 30[90,4] 31[94,4] 32[98,4] 33[102,4] 34[106,4] 35[110,4] 36[114,4] 37[118,4] 38[122,4] 39[126,4] 40[130,4] 41[134,4] 42[138,4] 43[142,4] 44[146,4] 45[150,4] 46[154,4] 47[158,4] 48[162,4] 49[166,4] 50[170,4] 51[174,4] 52[178,4] 53[182,4] 54[186,4] 55[190,4] 56[194,4] 57[198,4] 58[202,4] 59[206,4] 60[210,4] 61[214,4] 62[218,4] 63[222,4] 64[226,4] 65[230,4] 66[234,4] 67[238,4] 68[242,4] 69[246,4] 70[250,4] 71[254,4] 72[258,4] 73[262,4] 74[266,4] 75[270,4] 76[274,4] 77[278,4] 78[282,4] 79[286,4] 80[290,4] 81[294,4] 82[298,4] 83[302,4] 84[306,4] 85[310,4] 86[314,4] 87[318,4] 88[322,4] 89[326,4] 90[330,4] 91[334,4] 92[338,4] 93[342,4] 94[346,4] 95[350,4] 96[354,4] 97[358,4] 98[362,4] 99[366,4] 100[370,4] 101[374,4] 102[378,4] 103[382,4] 104[386,4] 105[390,4] 106[394,4] 107[398,4] 108[402,4] 109[406,4] 110[410,4] 111[414,4] 112[418,4] 113[422,4] 114[426,4] 115[430,4] 116[434,4] 117[438,4] 118[442,4] 119[446,4] 120[450,4] 121[454,4] 122[458,4] 123[462,4] 124[466,4] 125[470,4] 126[474,4] 127[478,4] 136[482,1] 137[483,1] 138[484,1] 139[485,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d6(0){ }d12(1){ }d17(2){ }d22(3){ }d23(11){ }d28(12){ }d29(13){ }d32(14){ }d76(25){ }d77(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
6, 12, 17, 22, 23, 28, 29, 32, 76, 77
;; rd  kill	(35)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 76, 77
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
6, 12, 17, 22, 23, 28, 29, 32, 76, 77

( 0 )->[2]->( 9 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d23(bb 0 insn -1) }u1(13){ d29(bb 0 insn -1) }u2(25){ d76(bb 0 insn -1) }u3(26){ d77(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 136 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
6, 12, 17, 22, 23, 28, 29, 32, 76, 77
;; rd  gen 	(6)
5, 74, 482, 483, 484, 485
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 30, 31, 32, 69, 70, 71, 72, 73, 74, 75, 482, 483, 484, 485
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(14)
5, 12, 17, 22, 23, 28, 29, 74, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d76(bb 0 insn -1) }
;;   reg 26 { d77(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 13 { d29(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 0 { d5(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 9
;;      reg 137 { d483(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 10
;;      reg 138 { d484(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 139 { d485(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 24 { d74(bb 2 insn 11) }

( 2 )->[3]->( 6 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d23(bb 0 insn -1) }u12(13){ d29(bb 0 insn -1) }u13(25){ d76(bb 0 insn -1) }u14(26){ d77(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 74, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
73
;; rd  kill	(7)
69, 70, 71, 72, 73, 74, 75
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(14)
5, 12, 17, 22, 23, 28, 29, 73, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d76(bb 0 insn -1) }
;;   reg 26 { d77(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 19
;;      reg 136 { d482(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 20
;;      reg 24 { d73(bb 3 insn 19) }

( 3 )->[4]->( 5 8 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d23(bb 0 insn -1) }u18(13){ d29(bb 0 insn -1) }u19(25){ d76(bb 0 insn -1) }u20(26){ d77(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 73, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
72
;; rd  kill	(7)
69, 70, 71, 72, 73, 74, 75
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(14)
5, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d76(bb 0 insn -1) }
;;   reg 26 { d77(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 21
;;      reg 136 { d482(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 22
;;      reg 24 { d72(bb 4 insn 21) }

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ d23(bb 0 insn -1) }u-1(13){ d29(bb 0 insn -1) }u-1(25){ d76(bb 0 insn -1) }u-1(26){ d77(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
5, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d76(bb 0 insn -1) }
;;   reg 26 { d77(bb 0 insn -1) }

( 3 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u23(11){ d23(bb 0 insn -1) }u24(13){ d29(bb 0 insn -1) }u25(25){ d76(bb 0 insn -1) }u26(26){ d77(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 73, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
4
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 6
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
4, 12, 17, 22, 23, 28, 29, 73, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d76(bb 0 insn -1) }
;;   reg 26 { d77(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 27
;;      reg 13 { d29(bb 0 insn -1) }

( 5 )->[7]->( 1 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u28(11){ d23(bb 0 insn -1) }u29(13){ d29(bb 0 insn -1) }u30(25){ d76(bb 0 insn -1) }u31(26){ d77(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
3
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 6
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
3, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d76(bb 0 insn -1) }
;;   reg 26 { d77(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 32
;;      reg 13 { d29(bb 0 insn -1) }

( 4 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u33(11){ d23(bb 0 insn -1) }u34(13){ d29(bb 0 insn -1) }u35(25){ d76(bb 0 insn -1) }u36(26){ d77(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
2
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 30, 31, 32
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
2, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d76(bb 0 insn -1) }
;;   reg 26 { d77(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 39
;;      reg 136 { d482(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 40
;;      reg 13 { d29(bb 0 insn -1) }
;;      reg 0 { d0(bb 8 insn 38) }
;;      reg 1 { d8(bb 8 insn 39) }

( 2 8 )->[9]->( 1 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u41(11){ d23(bb 0 insn -1) }u42(13){ d29(bb 0 insn -1) }u43(25){ d76(bb 0 insn -1) }u44(26){ d77(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(16)
2, 5, 12, 17, 22, 23, 28, 29, 72, 74, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
1
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 6
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
1, 12, 17, 22, 23, 28, 29, 72, 74, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 25 { d76(bb 0 insn -1) }
;;   reg 26 { d77(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 54
;;      reg 0 { d1(bb 9 insn 48) }

( 7 6 9 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u46(0){ d4(bb 6 insn 27) d3(bb 7 insn 32) d1(bb 9 insn 48) }u47(11){ d23(bb 0 insn -1) }u48(13){ d29(bb 0 insn -1) }u49(14){ }u50(25){ d76(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(18)
1, 3, 4, 12, 17, 22, 23, 28, 29, 72, 73, 74, 76, 77, 482, 483, 484, 485
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(18)
1, 3, 4, 12, 17, 22, 23, 28, 29, 72, 73, 74, 76, 77, 482, 483, 484, 485
;;  UD chains for artificial uses
;;   reg 0 { d4(bb 6 insn 27) d3(bb 7 insn 32) d1(bb 9 insn 48) }
;;   reg 11 { d23(bb 0 insn -1) }
;;   reg 13 { d29(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d76(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 12 to worklist
  Adding insn 6 to worklist
  Adding insn 20 to worklist
  Adding insn 22 to worklist
  Adding insn 62 to worklist
  Adding insn 27 to worklist
  Adding insn 32 to worklist
  Adding insn 40 to worklist
  Adding insn 54 to worklist
Finished finding needed instructions:
  Adding insn 48 to worklist
Processing use of (reg 0 r0) in insn 54:
Processing use of (reg 13 sp) in insn 40:
Processing use of (reg 0 r0) in insn 40:
  Adding insn 38 to worklist
Processing use of (reg 1 r1) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 136 [ type ]) in insn 39:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 32:
Processing use of (reg 13 sp) in insn 27:
Processing use of (reg 24 cc) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 136 [ type ]) in insn 21:
Processing use of (reg 24 cc) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 136 [ type ]) in insn 19:
Processing use of (reg 13 sp) in insn 6:
Processing use of (reg 24 cc) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 139) in insn 11:
  Adding insn 10 to worklist
Processing use of (subreg (reg 138) 0) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 137) in insn 9:
  Adding insn 7 to worklist
Processing use of (reg 0 r0) in insn 7:


hw_breakpoint_slots

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={7d,5u} r1={6d,1u} r2={5d} r3={5d} r11={1d,9u} r12={5d} r13={1d,13u} r14={3d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={7d,3u} r25={1d,9u} r26={1d,8u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r136={1d,3u} r137={1d,1u} r138={1d,1u} r139={1d,1u} 
;;    total ref usage 541{486d,55u,0e} in 19{15 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481
0[0,7] 1[7,6] 2[13,5] 3[18,5] 11[23,1] 12[24,5] 13[29,1] 14[30,3] 15[33,4] 16[37,4] 17[41,4] 18[45,4] 19[49,4] 20[53,4] 21[57,4] 22[61,4] 23[65,4] 24[69,7] 25[76,1] 26[77,1] 27[78,4] 28[82,4] 29[86,4] 30[90,4] 31[94,4] 32[98,4] 33[102,4] 34[106,4] 35[110,4] 36[114,4] 37[118,4] 38[122,4] 39[126,4] 40[130,4] 41[134,4] 42[138,4] 43[142,4] 44[146,4] 45[150,4] 46[154,4] 47[158,4] 48[162,4] 49[166,4] 50[170,4] 51[174,4] 52[178,4] 53[182,4] 54[186,4] 55[190,4] 56[194,4] 57[198,4] 58[202,4] 59[206,4] 60[210,4] 61[214,4] 62[218,4] 63[222,4] 64[226,4] 65[230,4] 66[234,4] 67[238,4] 68[242,4] 69[246,4] 70[250,4] 71[254,4] 72[258,4] 73[262,4] 74[266,4] 75[270,4] 76[274,4] 77[278,4] 78[282,4] 79[286,4] 80[290,4] 81[294,4] 82[298,4] 83[302,4] 84[306,4] 85[310,4] 86[314,4] 87[318,4] 88[322,4] 89[326,4] 90[330,4] 91[334,4] 92[338,4] 93[342,4] 94[346,4] 95[350,4] 96[354,4] 97[358,4] 98[362,4] 99[366,4] 100[370,4] 101[374,4] 102[378,4] 103[382,4] 104[386,4] 105[390,4] 106[394,4] 107[398,4] 108[402,4] 109[406,4] 110[410,4] 111[414,4] 112[418,4] 113[422,4] 114[426,4] 115[430,4] 116[434,4] 117[438,4] 118[442,4] 119[446,4] 120[450,4] 121[454,4] 122[458,4] 123[462,4] 124[466,4] 125[470,4] 126[474,4] 127[478,4] 136[482,1] 137[483,1] 138[484,1] 139[485,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 136 137 138 139
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 136 137 138 139
;; live  kill	 14 [lr]
;; rd  in  	(10)
6, 12, 17, 22, 23, 28, 29, 32, 76, 77
;; rd  gen 	(6)
5, 74, 482, 483, 484, 485
;; rd  kill	(21)
0, 1, 2, 3, 4, 5, 6, 30, 31, 32, 69, 70, 71, 72, 73, 74, 75, 482, 483, 484, 485

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/hw_breakpoint.c:275 (set (reg/v:SI 136 [ type ])
        (reg:SI 0 r0 [ type ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ type ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 6 3 7 2 arch/arm/kernel/hw_breakpoint.c:156 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_debug_arch") [flags 0x3] <function_decl 0x113d8480 get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 7 6 9 2 arch/arm/kernel/hw_breakpoint.c:156 (set (reg:SI 137)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 9 7 10 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:SI 138)
        (plus:SI (reg:SI 137)
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:SI 139)
        (zero_extend:SI (subreg:QI (reg:SI 138) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139)
        (nil)))

(jump_insn 12 11 17 2 arch/arm/kernel/hw_breakpoint.c:157 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 42)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 9 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(14)
5, 12, 17, 22, 23, 28, 29, 74, 76, 77, 482, 483, 484, 485


;; Succ edge  9 [39.0%] 
;; Succ edge  3 [61.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 74, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
73
;; rd  kill	(7)
69, 70, 71, 72, 73, 74, 75

;; Pred edge  2 [61.0%]  (fallthru)
(code_label 17 12 18 3 213 "" [0 uses])

(note 18 17 19 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 19 18 20 3 arch/arm/kernel/hw_breakpoint.c:283 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ type ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 20 19 56 3 arch/arm/kernel/hw_breakpoint.c:283 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 6 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(14)
5, 12, 17, 22, 23, 28, 29, 73, 76, 77, 482, 483, 484, 485


;; Succ edge  6 [50.0%] 
;; Succ edge  4 [50.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 73, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
72
;; rd  kill	(7)
69, 70, 71, 72, 73, 74, 75

;; Pred edge  3 [50.0%]  (fallthru)
(note 56 20 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 56 22 4 arch/arm/kernel/hw_breakpoint.c:283 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ type ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 22 21 61 4 arch/arm/kernel/hw_breakpoint.c:283 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 4 -> ( 5 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(14)
5, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485


;; Succ edge  5 [29.0%]  (fallthru)
;; Succ edge  8 [71.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  4 [29.0%]  (fallthru)
(note 61 22 62 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(jump_insn 62 61 63 5 (set (pc)
        (label_ref 30)) -1 (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
5, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485


;; Succ edge  7 [100.0%] 

(barrier 63 62 25)

;; Start of basic block ( 3) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u23(11){ }u24(13){ }u25(25){ }u26(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 73, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
4
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 6

;; Pred edge  3 [50.0%] 
(code_label 25 63 26 6 216 "" [1 uses])

(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 27 26 28 6 arch/arm/kernel/hw_breakpoint.c:285 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_brps") [flags 0x3] <function_decl 0x113d8b80 get_num_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 6 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
4, 12, 17, 22, 23, 28, 29, 73, 76, 77, 482, 483, 484, 485


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 28 27 30)

;; Start of basic block ( 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
3
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 6

;; Pred edge  5 [100.0%] 
(code_label 30 28 31 7 217 "" [1 uses])

(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(call_insn/j 32 31 33 7 arch/arm/kernel/hw_breakpoint.c:287 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_wrps") [flags 0x3] <function_decl 0x113d8980 get_num_wrps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))
;; End of basic block 7 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
3, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 33 32 60)

;; Start of basic block ( 4) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u33(11){ }u34(13){ }u35(25){ }u36(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(14)
5, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
2
;; rd  kill	(10)
0, 1, 2, 3, 4, 5, 6, 30, 31, 32

;; Pred edge  4 [71.0%] 
(code_label 60 33 36 8 219 "" [1 uses])

(note 36 60 38 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 38 36 39 8 arch/arm/kernel/hw_breakpoint.c:289 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x11520050>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x11520050>)
        (nil)))

(insn 39 38 40 8 arch/arm/kernel/hw_breakpoint.c:289 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ type ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ type ])
        (nil)))

(call_insn 40 39 42 8 arch/arm/kernel/hw_breakpoint.c:289 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(14)
2, 12, 17, 22, 23, 28, 29, 72, 76, 77, 482, 483, 484, 485


;; Succ edge  9 [100.0%]  (fallthru)

;; Start of basic block ( 2 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u41(11){ }u42(13){ }u43(25){ }u44(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(16)
2, 5, 12, 17, 22, 23, 28, 29, 72, 74, 76, 77, 482, 483, 484, 485
;; rd  gen 	(1)
1
;; rd  kill	(7)
0, 1, 2, 3, 4, 5, 6

;; Pred edge  2 [39.0%] 
;; Pred edge  8 [100.0%]  (fallthru)
(code_label 42 40 43 9 214 "" [1 uses])

(note 43 42 48 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 48 43 54 9 arch/arm/kernel/hw_breakpoint.c:292 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 54 48 0 9 arch/arm/kernel/hw_breakpoint.c:292 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 9 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
1, 12, 17, 22, 23, 28, 29, 72, 74, 76, 77, 482, 483, 484, 485


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function enable_monitor_mode (enable_monitor_mode)[0:1251]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 30 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 30 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 16 n_edges 22 count 30 (  1.9)


enable_monitor_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={4d,1u} r3={3d} r11={1d,15u} r12={3d} r13={1d,17u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={9d,7u} r25={1d,15u} r26={1d,14u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={4d,1u} r135={1d,4u} r138={1d,1u} r139={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,3u} r152={1d,1u} r153={1d,1u} r154={1d,1u} 
;;    total ref usage 369{273d,96u,0e} in 46{44 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254
0[0,5] 1[5,4] 2[9,4] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,3] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,9] 25[51,1] 26[52,1] 27[53,2] 28[55,2] 29[57,2] 30[59,2] 31[61,2] 32[63,2] 33[65,2] 34[67,2] 35[69,2] 36[71,2] 37[73,2] 38[75,2] 39[77,2] 40[79,2] 41[81,2] 42[83,2] 43[85,2] 44[87,2] 45[89,2] 46[91,2] 47[93,2] 48[95,2] 49[97,2] 50[99,2] 51[101,2] 52[103,2] 53[105,2] 54[107,2] 55[109,2] 56[111,2] 57[113,2] 58[115,2] 59[117,2] 60[119,2] 61[121,2] 62[123,2] 63[125,2] 64[127,2] 65[129,2] 66[131,2] 67[133,2] 68[135,2] 69[137,2] 70[139,2] 71[141,2] 72[143,2] 73[145,2] 74[147,2] 75[149,2] 76[151,2] 77[153,2] 78[155,2] 79[157,2] 80[159,2] 81[161,2] 82[163,2] 83[165,2] 84[167,2] 85[169,2] 86[171,2] 87[173,2] 88[175,2] 89[177,2] 90[179,2] 91[181,2] 92[183,2] 93[185,2] 94[187,2] 95[189,2] 96[191,2] 97[193,2] 98[195,2] 99[197,2] 100[199,2] 101[201,2] 102[203,2] 103[205,2] 104[207,2] 105[209,2] 106[211,2] 107[213,2] 108[215,2] 109[217,2] 110[219,2] 111[221,2] 112[223,2] 113[225,2] 114[227,2] 115[229,2] 116[231,2] 117[233,2] 118[235,2] 119[237,2] 120[239,2] 121[241,2] 122[243,2] 123[245,2] 124[247,2] 125[249,2] 126[251,2] 127[253,2] 133[255,1] 134[256,4] 135[260,1] 138[261,1] 139[262,1] 141[263,1] 142[264,1] 143[265,1] 144[266,1] 148[267,1] 150[268,1] 151[269,1] 152[270,1] 153[271,1] 154[272,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d8(1){ }d12(2){ }d15(3){ }d16(11){ }d19(12){ }d20(13){ }d23(14){ }d51(25){ }d52(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 8, 12, 15, 16, 19, 20, 23, 51, 52
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 51, 52
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 8, 12, 15, 16, 19, 20, 23, 51, 52

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d16(bb 0 insn -1) }u1(13){ d20(bb 0 insn -1) }u2(25){ d51(bb 0 insn -1) }u3(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 138
;; live  kill	
;; rd  in  	(10)
4, 8, 12, 15, 16, 19, 20, 23, 51, 52
;; rd  gen 	(3)
50, 260, 261
;; rd  kill	(11)
42, 43, 44, 45, 46, 47, 48, 49, 50, 260, 261
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
4, 8, 12, 15, 16, 19, 20, 23, 50, 51, 52, 260, 261
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 135 { d260(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 138 { d261(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 24 { d50(bb 2 insn 7) }

( 2 )->[3]->( 4 13 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ d16(bb 0 insn -1) }u8(13){ d20(bb 0 insn -1) }u9(25){ d51(bb 0 insn -1) }u10(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 141 142 143 144
;; live  kill	
;; rd  in  	(13)
4, 8, 12, 15, 16, 19, 20, 23, 50, 51, 52, 260, 261
;; rd  gen 	(6)
49, 262, 263, 264, 265, 266
;; rd  kill	(14)
42, 43, 44, 45, 46, 47, 48, 49, 50, 262, 263, 264, 265, 266
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(18)
4, 8, 12, 15, 16, 19, 20, 23, 49, 51, 52, 260, 261, 262, 263, 264, 265, 266
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 11
;;      reg 139 { d262(bb 3 insn 10) }
;;   UD chains for insn luid 2 uid 13
;;      reg 141 { d263(bb 3 insn 11) }
;;   UD chains for insn luid 3 uid 14
;;      reg 142 { d264(bb 3 insn 13) }
;;   UD chains for insn luid 4 uid 15
;;      reg 143 { d265(bb 3 insn 14) }
;;   UD chains for insn luid 5 uid 16
;;      reg 144 { d266(bb 3 insn 15) }
;;   UD chains for insn luid 6 uid 17
;;      reg 24 { d49(bb 3 insn 16) }

( 3 )->[4]->( 15 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ d16(bb 0 insn -1) }u18(13){ d20(bb 0 insn -1) }u19(25){ d51(bb 0 insn -1) }u20(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 148
;; live  kill	 14 [lr]
;; rd  in  	(18)
4, 8, 12, 15, 16, 19, 20, 23, 49, 51, 52, 260, 261, 262, 263, 264, 265, 266
;; rd  gen 	(2)
259, 267
;; rd  kill	(8)
21, 22, 23, 256, 257, 258, 259, 267
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(19)
4, 8, 12, 15, 16, 19, 20, 49, 51, 52, 259, 260, 261, 262, 263, 264, 265, 266, 267
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 24
;;      reg 13 { d20(bb 0 insn -1) }
;;      reg 0 { d0(bb 4 insn 21) }
;;      reg 1 { d7(bb 4 insn 22) }
;;      reg 2 { d9(bb 4 insn 23) }
;;   UD chains for insn luid 5 uid 28
;;      reg 139 { d262(bb 3 insn 10) }
;;      reg 148 { d267(bb 4 insn 26) }

( 2 )->[5]->( 14 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ d16(bb 0 insn -1) }u28(13){ d20(bb 0 insn -1) }u29(25){ d51(bb 0 insn -1) }u30(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 150
;; live  kill	
;; rd  in  	(13)
4, 8, 12, 15, 16, 19, 20, 23, 50, 51, 52, 260, 261
;; rd  gen 	(2)
47, 268
;; rd  kill	(10)
42, 43, 44, 45, 46, 47, 48, 49, 50, 268
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(14)
4, 8, 12, 15, 16, 19, 20, 23, 47, 51, 52, 260, 261, 268
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 34
;;      reg 135 { d260(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 35
;;      reg 150 { d268(bb 5 insn 34) }
;;   UD chains for insn luid 2 uid 36
;;      reg 24 { d47(bb 5 insn 35) }

( 5 )->[6]->( 9 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ d16(bb 0 insn -1) }u35(13){ d20(bb 0 insn -1) }u36(25){ d51(bb 0 insn -1) }u37(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 24 [cc] 151
;; live  kill	 14 [lr]
;; rd  in  	(14)
4, 8, 12, 15, 16, 19, 20, 23, 47, 51, 52, 260, 261, 268
;; rd  gen 	(3)
2, 44, 269
;; rd  kill	(18)
0, 1, 2, 3, 4, 21, 22, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50, 269
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; rd  out 	(14)
2, 8, 12, 15, 16, 19, 20, 44, 51, 52, 260, 261, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 38
;;      reg 13 { d20(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 39
;;      reg 0 { d2(bb 6 insn 38) }
;;   UD chains for insn luid 2 uid 41
;;      reg 151 { d269(bb 6 insn 39) }
;;   UD chains for insn luid 3 uid 42
;;      reg 24 { d44(bb 6 insn 41) }

( 6 )->[7]->( 10 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(11){ d16(bb 0 insn -1) }u43(13){ d20(bb 0 insn -1) }u44(25){ d51(bb 0 insn -1) }u45(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
2, 8, 12, 15, 16, 19, 20, 44, 51, 52, 260, 261, 268, 269
;; rd  gen 	(1)
43
;; rd  kill	(9)
42, 43, 44, 45, 46, 47, 48, 49, 50
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; rd  out 	(14)
2, 8, 12, 15, 16, 19, 20, 43, 51, 52, 260, 261, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 43
;;      reg 151 { d269(bb 6 insn 39) }
;;   UD chains for insn luid 1 uid 44
;;      reg 24 { d43(bb 7 insn 43) }

( 7 )->[8]->( 11 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ d16(bb 0 insn -1) }u49(13){ d20(bb 0 insn -1) }u50(25){ d51(bb 0 insn -1) }u51(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
2, 8, 12, 15, 16, 19, 20, 43, 51, 52, 260, 261, 268, 269
;; rd  gen 	(1)
42
;; rd  kill	(9)
42, 43, 44, 45, 46, 47, 48, 49, 50
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(14)
2, 8, 12, 15, 16, 19, 20, 42, 51, 52, 260, 261, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 45
;;      reg 151 { d269(bb 6 insn 39) }
;;   UD chains for insn luid 1 uid 46
;;      reg 24 { d42(bb 8 insn 45) }

( 8 6 )->[9]->( 15 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(11){ d16(bb 0 insn -1) }u55(13){ d20(bb 0 insn -1) }u56(25){ d51(bb 0 insn -1) }u57(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(15)
2, 8, 12, 15, 16, 19, 20, 42, 44, 51, 52, 260, 261, 268, 269
;; rd  gen 	(1)
258
;; rd  kill	(4)
256, 257, 258, 259
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
2, 8, 12, 15, 16, 19, 20, 42, 44, 51, 52, 258, 260, 261, 268, 269
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }

( 7 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u58(11){ d16(bb 0 insn -1) }u59(13){ d20(bb 0 insn -1) }u60(25){ d51(bb 0 insn -1) }u61(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 152
;; live  kill	
;; rd  in  	(14)
2, 8, 12, 15, 16, 19, 20, 43, 51, 52, 260, 261, 268, 269
;; rd  gen 	(1)
270
;; rd  kill	(1)
270
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 8, 12, 15, 16, 19, 20, 43, 51, 52, 260, 261, 268, 269, 270
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 56
;;      reg 135 { d260(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 57
;;      reg 152 { d270(bb 10 insn 56) }

( 8 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u64(11){ d16(bb 0 insn -1) }u65(13){ d20(bb 0 insn -1) }u66(25){ d51(bb 0 insn -1) }u67(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 153
;; live  kill	
;; rd  in  	(14)
2, 8, 12, 15, 16, 19, 20, 42, 51, 52, 260, 261, 268, 269
;; rd  gen 	(1)
271
;; rd  kill	(1)
271
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 8, 12, 15, 16, 19, 20, 42, 51, 52, 260, 261, 268, 269, 271
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 62
;;      reg 135 { d260(bb 2 insn 5) }
;;   UD chains for insn luid 1 uid 63
;;      reg 153 { d271(bb 11 insn 62) }

( 11 10 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u70(11){ d16(bb 0 insn -1) }u71(13){ d20(bb 0 insn -1) }u72(25){ d51(bb 0 insn -1) }u73(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 154
;; live  kill	
;; rd  in  	(17)
2, 8, 12, 15, 16, 19, 20, 42, 43, 51, 52, 260, 261, 268, 269, 270, 271
;; rd  gen 	(3)
45, 255, 272
;; rd  kill	(11)
42, 43, 44, 45, 46, 47, 48, 49, 50, 255, 272
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
2, 8, 12, 15, 16, 19, 20, 45, 51, 52, 255, 260, 261, 268, 269, 270, 271, 272
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 67
;;      reg 133 { d255(bb 12 insn 66) }
;;   UD chains for insn luid 2 uid 68
;;      reg 154 { d272(bb 12 insn 67) }
;;   UD chains for insn luid 3 uid 69
;;      reg 24 { d45(bb 12 insn 68) }

( 3 12 )->[13]->( 15 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u77(11){ d16(bb 0 insn -1) }u78(13){ d20(bb 0 insn -1) }u79(25){ d51(bb 0 insn -1) }u80(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(26)
2, 4, 8, 12, 15, 16, 19, 20, 23, 45, 49, 51, 52, 255, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272
;; rd  gen 	(1)
257
;; rd  kill	(4)
256, 257, 258, 259
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(27)
2, 4, 8, 12, 15, 16, 19, 20, 23, 45, 49, 51, 52, 255, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }

( 12 5 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u81(11){ d16(bb 0 insn -1) }u82(13){ d20(bb 0 insn -1) }u83(25){ d51(bb 0 insn -1) }u84(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(21)
2, 4, 8, 12, 15, 16, 19, 20, 23, 45, 47, 51, 52, 255, 260, 261, 268, 269, 270, 271, 272
;; rd  gen 	(1)
256
;; rd  kill	(4)
256, 257, 258, 259
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(22)
2, 4, 8, 12, 15, 16, 19, 20, 23, 45, 47, 51, 52, 255, 256, 260, 261, 268, 269, 270, 271, 272
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }

( 14 9 4 13 )->[15]->( 1 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u85(11){ d16(bb 0 insn -1) }u86(13){ d20(bb 0 insn -1) }u87(25){ d51(bb 0 insn -1) }u88(26){ d52(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(34)
2, 4, 8, 12, 15, 16, 19, 20, 23, 42, 44, 45, 47, 49, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;; rd  gen 	(1)
1
;; rd  kill	(5)
0, 1, 2, 3, 4
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
1, 8, 12, 15, 16, 19, 20, 23, 42, 44, 45, 47, 49, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;;  UD chains for artificial uses
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }
;;   reg 26 { d52(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 84
;;      reg 134 { d259(bb 4 insn 29) d258(bb 9 insn 51) d257(bb 13 insn 72) d256(bb 14 insn 77) }
;;   UD chains for insn luid 1 uid 90
;;      reg 0 { d1(bb 15 insn 84) }

( 15 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u91(0){ d1(bb 15 insn 84) }u92(11){ d16(bb 0 insn -1) }u93(13){ d20(bb 0 insn -1) }u94(14){ d23(bb 0 insn -1) }u95(25){ d51(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(33)
1, 8, 12, 15, 16, 19, 20, 23, 42, 44, 45, 47, 49, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(33)
1, 8, 12, 15, 16, 19, 20, 23, 42, 44, 45, 47, 49, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 15 insn 84) }
;;   reg 11 { d16(bb 0 insn -1) }
;;   reg 13 { d20(bb 0 insn -1) }
;;   reg 14 { d23(bb 0 insn -1) }
;;   reg 25 { d51(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 5 to worklist
  Adding insn 17 to worklist
  Adding insn 97 to worklist
  Adding insn 28 to worklist
  Adding insn 24 to worklist
  Adding insn 36 to worklist
  Adding insn 42 to worklist
  Adding insn 38 to worklist
  Adding insn 44 to worklist
  Adding insn 46 to worklist
  Adding insn 99 to worklist
  Adding insn 101 to worklist
  Adding insn 57 to worklist
  Adding insn 63 to worklist
  Adding insn 69 to worklist
  Adding insn 66 to worklist
  Adding insn 103 to worklist
  Adding insn 90 to worklist
Finished finding needed instructions:
  Adding insn 84 to worklist
Processing use of (reg 134 [ ret ]) in insn 84:
  Adding insn 29 to worklist
  Adding insn 51 to worklist
  Adding insn 72 to worklist
  Adding insn 77 to worklist
Processing use of (reg 0 r0) in insn 90:
Processing use of (reg 24 cc) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 154) in insn 68:
  Adding insn 67 to worklist
Processing use of (reg 133 [ dscr.773 ]) in insn 67:
Processing use of (reg 153) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 135 [ dscr ]) in insn 62:
Processing use of (reg 152) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 135 [ dscr ]) in insn 56:
Processing use of (reg 24 cc) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 151) in insn 45:
  Adding insn 39 to worklist
Processing use of (reg 0 r0) in insn 39:
Processing use of (reg 24 cc) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 151) in insn 43:
Processing use of (reg 13 sp) in insn 38:
Processing use of (reg 24 cc) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 151) in insn 41:
Processing use of (reg 24 cc) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 150) in insn 35:
  Adding insn 34 to worklist
Processing use of (reg 135 [ dscr ]) in insn 34:
Processing use of (reg 13 sp) in insn 24:
Processing use of (reg 0 r0) in insn 24:
  Adding insn 21 to worklist
Processing use of (reg 1 r1) in insn 24:
  Adding insn 22 to worklist
Processing use of (reg 2 r2) in insn 24:
  Adding insn 23 to worklist
Processing use of (reg 139) in insn 28:
  Adding insn 10 to worklist
Processing use of (subreg (reg 148) 0) in insn 28:
  Adding insn 26 to worklist
Processing use of (reg 24 cc) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 144) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 143) in insn 15:
  Adding insn 14 to worklist
Processing use of (subreg (reg 142) 0) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 141 [ __warned ]) in insn 13:
  Adding insn 11 to worklist
Processing use of (reg 139) in insn 11:
Processing use of (reg 24 cc) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 138) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 135 [ dscr ]) in insn 6:


enable_monitor_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,4u} r1={4d,1u} r2={4d,1u} r3={3d} r11={1d,15u} r12={3d} r13={1d,17u} r14={3d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={9d,7u} r25={1d,15u} r26={1d,14u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,1u} r134={4d,1u} r135={1d,4u} r138={1d,1u} r139={1d,2u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r148={1d,1u} r150={1d,1u} r151={1d,3u} r152={1d,1u} r153={1d,1u} r154={1d,1u} 
;;    total ref usage 369{273d,96u,0e} in 46{44 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254
0[0,5] 1[5,4] 2[9,4] 3[13,3] 11[16,1] 12[17,3] 13[20,1] 14[21,3] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,9] 25[51,1] 26[52,1] 27[53,2] 28[55,2] 29[57,2] 30[59,2] 31[61,2] 32[63,2] 33[65,2] 34[67,2] 35[69,2] 36[71,2] 37[73,2] 38[75,2] 39[77,2] 40[79,2] 41[81,2] 42[83,2] 43[85,2] 44[87,2] 45[89,2] 46[91,2] 47[93,2] 48[95,2] 49[97,2] 50[99,2] 51[101,2] 52[103,2] 53[105,2] 54[107,2] 55[109,2] 56[111,2] 57[113,2] 58[115,2] 59[117,2] 60[119,2] 61[121,2] 62[123,2] 63[125,2] 64[127,2] 65[129,2] 66[131,2] 67[133,2] 68[135,2] 69[137,2] 70[139,2] 71[141,2] 72[143,2] 73[145,2] 74[147,2] 75[149,2] 76[151,2] 77[153,2] 78[155,2] 79[157,2] 80[159,2] 81[161,2] 82[163,2] 83[165,2] 84[167,2] 85[169,2] 86[171,2] 87[173,2] 88[175,2] 89[177,2] 90[179,2] 91[181,2] 92[183,2] 93[185,2] 94[187,2] 95[189,2] 96[191,2] 97[193,2] 98[195,2] 99[197,2] 100[199,2] 101[201,2] 102[203,2] 103[205,2] 104[207,2] 105[209,2] 106[211,2] 107[213,2] 108[215,2] 109[217,2] 110[219,2] 111[221,2] 112[223,2] 113[225,2] 114[227,2] 115[229,2] 116[231,2] 117[233,2] 118[235,2] 119[237,2] 120[239,2] 121[241,2] 122[243,2] 123[245,2] 124[247,2] 125[249,2] 126[251,2] 127[253,2] 133[255,1] 134[256,4] 135[260,1] 138[261,1] 139[262,1] 141[263,1] 142[264,1] 143[265,1] 144[266,1] 148[267,1] 150[268,1] 151[269,1] 152[270,1] 153[271,1] 154[272,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 135 138
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 135 138
;; live  kill	
;; rd  in  	(10)
4, 8, 12, 15, 16, 19, 20, 23, 51, 52
;; rd  gen 	(3)
50, 260, 261
;; rd  kill	(11)
42, 43, 44, 45, 46, 47, 48, 49, 50, 260, 261

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/hw_breakpoint.c:238 (set (reg/v:SI 135 [ dscr ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 0") ("=r") 0 []
             [] 8097174)) -1 (nil))

(insn 6 5 7 2 arch/arm/kernel/hw_breakpoint.c:241 (set (reg:SI 138)
        (and:SI (reg/v:SI 135 [ dscr ])
            (const_int 16384 [0x4000]))) 67 {*arm_andsi3_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:241 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138)
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:241 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 32)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 2 -> ( 3 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(13)
4, 8, 12, 15, 16, 19, 20, 23, 50, 51, 52, 260, 261


;; Succ edge  3 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u7(11){ }u8(13){ }u9(25){ }u10(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 139 141 142 143 144
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 139 141 142 143 144
;; live  kill	
;; rd  in  	(13)
4, 8, 12, 15, 16, 19, 20, 23, 50, 51, 52, 260, 261
;; rd  gen 	(6)
49, 262, 263, 264, 265, 266
;; rd  kill	(14)
42, 43, 44, 45, 46, 47, 48, 49, 50, 262, 263, 264, 265, 266

;; Pred edge  2 [0.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (reg/f:SI 139)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 11 10 13 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (reg:SI 141 [ __warned ])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 139)
                    (const_int 3 [0x3])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 3 [0x3]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 13 11 14 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (reg:SI 142)
        (xor:SI (reg:SI 141 [ __warned ])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 141 [ __warned ])
        (nil)))

(insn 14 13 15 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (reg:QI 143)
        (subreg:QI (reg:SI 142) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 142)
        (nil)))

(insn 15 14 16 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (reg:SI 144)
        (zero_extend:SI (reg:QI 143))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 143)
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 144)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (nil)))

(jump_insn 17 16 18 3 arch/arm/kernel/hw_breakpoint.c:241 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 70)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 139
;; rd  out 	(18)
4, 8, 12, 15, 16, 19, 20, 23, 49, 51, 52, 260, 261, 262, 263, 264, 265, 266


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  13 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u17(11){ }u18(13){ }u19(25){ }u20(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 148
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 139
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 134 148
;; live  kill	 14 [lr]
;; rd  in  	(18)
4, 8, 12, 15, 16, 19, 20, 23, 49, 51, 52, 260, 261, 262, 263, 264, 265, 266
;; rd  gen 	(2)
259, 267
;; rd  kill	(8)
21, 22, 23, 256, 257, 258, 259, 267

;; Pred edge  3 [0.0%]  (fallthru)
(note 18 17 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 18 22 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 22 21 23 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 3 (set (reg:SI 1 r1)
        (const_int 242 [0xf2])) 167 {*arm_movsi_insn} (nil))

(insn 23 22 24 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 3 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x111b3420>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x111b3420>)
        (nil)))

(call_insn 24 23 26 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 26 24 28 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 5 (set (reg:SI 148)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 28 26 29 4 arch/arm/kernel/hw_breakpoint.c:241 discrim 5 (set (mem/c/i:QI (plus:SI (reg/f:SI 139)
                (const_int 3 [0x3])) [0 __warned+0 S1 A8])
        (subreg:QI (reg:SI 148) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (expr_list:REG_DEAD (reg/f:SI 139)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 29 28 97 4 arch/arm/kernel/hw_breakpoint.c:243 (set (reg/v:SI 134 [ ret ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 97 29 98 4 (set (pc)
        (label_ref 78)) -1 (nil))
;; End of basic block 4 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(19)
4, 8, 12, 15, 16, 19, 20, 49, 51, 52, 259, 260, 261, 262, 263, 264, 265, 266, 267


;; Succ edge  15 [100.0%] 

(barrier 98 97 32)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u27(11){ }u28(13){ }u29(25){ }u30(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 24 [cc] 150
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  gen 	 24 [cc] 150
;; live  kill	
;; rd  in  	(13)
4, 8, 12, 15, 16, 19, 20, 23, 50, 51, 52, 260, 261
;; rd  gen 	(2)
47, 268
;; rd  kill	(10)
42, 43, 44, 45, 46, 47, 48, 49, 50, 268

;; Pred edge  2 [100.0%] 
(code_label 32 98 33 5 225 "" [1 uses])

(note 33 32 34 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 5 arch/arm/kernel/hw_breakpoint.c:248 (set (reg:SI 150)
        (and:SI (reg/v:SI 135 [ dscr ])
            (const_int 32768 [0x8000]))) 67 {*arm_andsi3_insn} (nil))

(insn 35 34 36 5 arch/arm/kernel/hw_breakpoint.c:248 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(jump_insn 36 35 37 5 arch/arm/kernel/hw_breakpoint.c:248 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9833 [0x2669])
            (nil))))
;; End of basic block 5 -> ( 14 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; rd  out 	(14)
4, 8, 12, 15, 16, 19, 20, 23, 47, 51, 52, 260, 261, 268


;; Succ edge  14 [98.3%] 
;; Succ edge  6 [1.7%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 0 [r0] 24 [cc] 151
;; live  kill	 14 [lr]
;; rd  in  	(14)
4, 8, 12, 15, 16, 19, 20, 23, 47, 51, 52, 260, 261, 268
;; rd  gen 	(3)
2, 44, 269
;; rd  kill	(18)
0, 1, 2, 3, 4, 21, 22, 23, 42, 43, 44, 45, 46, 47, 48, 49, 50, 269

;; Pred edge  5 [1.7%]  (fallthru)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 38 37 39 6 arch/arm/kernel/hw_breakpoint.c:252 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_debug_arch") [flags 0x3] <function_decl 0x113d8480 get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 39 38 41 6 arch/arm/kernel/hw_breakpoint.c:252 (set (reg:SI 151)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 41 39 42 6 arch/arm/kernel/hw_breakpoint.c:252 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 42 41 92 6 arch/arm/kernel/hw_breakpoint.c:252 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 49)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 6 -> ( 9 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; rd  out 	(14)
2, 8, 12, 15, 16, 19, 20, 44, 51, 52, 260, 261, 268, 269


;; Succ edge  9 [50.0%] 
;; Succ edge  7 [50.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u42(11){ }u43(13){ }u44(25){ }u45(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
2, 8, 12, 15, 16, 19, 20, 44, 51, 52, 260, 261, 268, 269
;; rd  gen 	(1)
43
;; rd  kill	(9)
42, 43, 44, 45, 46, 47, 48, 49, 50

;; Pred edge  6 [50.0%]  (fallthru)
(note 92 42 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 43 92 44 7 arch/arm/kernel/hw_breakpoint.c:252 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 44 43 93 7 arch/arm/kernel/hw_breakpoint.c:252 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 54)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 10 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 151
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; rd  out 	(14)
2, 8, 12, 15, 16, 19, 20, 43, 51, 52, 260, 261, 268, 269


;; Succ edge  10 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u48(11){ }u49(13){ }u50(25){ }u51(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 151
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 151
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(14)
2, 8, 12, 15, 16, 19, 20, 43, 51, 52, 260, 261, 268, 269
;; rd  gen 	(1)
42
;; rd  kill	(9)
42, 43, 44, 45, 46, 47, 48, 49, 50

;; Pred edge  7 [50.0%]  (fallthru)
(note 93 44 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 45 93 46 8 arch/arm/kernel/hw_breakpoint.c:252 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 151)
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(jump_insn 46 45 49 8 arch/arm/kernel/hw_breakpoint.c:252 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 60)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 8 -> ( 11 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; rd  out 	(14)
2, 8, 12, 15, 16, 19, 20, 42, 51, 52, 260, 261, 268, 269


;; Succ edge  11 [29.0%] 
;; Succ edge  9 [71.0%]  (fallthru)

;; Start of basic block ( 8 6) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(15)
2, 8, 12, 15, 16, 19, 20, 42, 44, 51, 52, 260, 261, 268, 269
;; rd  gen 	(1)
258
;; rd  kill	(4)
256, 257, 258, 259

;; Pred edge  8 [71.0%]  (fallthru)
;; Pred edge  6 [50.0%] 
(code_label 49 46 50 9 229 "" [1 uses])

(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 99 9 arch/arm/kernel/hw_breakpoint.c:261 (set (reg/v:SI 134 [ ret ])
        (const_int -19 [0xffffffffffffffed])) 167 {*arm_movsi_insn} (nil))

(jump_insn 99 51 100 9 (set (pc)
        (label_ref 78)) -1 (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; rd  out 	(16)
2, 8, 12, 15, 16, 19, 20, 42, 44, 51, 52, 258, 260, 261, 268, 269


;; Succ edge  15 [100.0%] 

(barrier 100 99 54)

;; Start of basic block ( 7) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u58(11){ }u59(13){ }u60(25){ }u61(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 152
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 152
;; live  kill	
;; rd  in  	(14)
2, 8, 12, 15, 16, 19, 20, 43, 51, 52, 260, 261, 268, 269
;; rd  gen 	(1)
270
;; rd  kill	(1)
270

;; Pred edge  7 [50.0%] 
(code_label 54 100 55 10 230 "" [1 uses])

(note 55 54 56 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 56 55 57 10 arch/arm/kernel/hw_breakpoint.c:255 (set (reg:SI 152)
        (ior:SI (reg/v:SI 135 [ dscr ])
            (const_int 32768 [0x8000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ dscr ])
        (nil)))

(insn 57 56 101 10 arch/arm/kernel/hw_breakpoint.c:255 (asm_operands/v ("mcr p14, 0, %0, c0,c1, 0") ("") 0 [
            (reg:SI 152)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8099351) -1 (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(jump_insn 101 57 102 10 arch/arm/kernel/hw_breakpoint.c:256 (set (pc)
        (label_ref 64)) -1 (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 8, 12, 15, 16, 19, 20, 43, 51, 52, 260, 261, 268, 269, 270


;; Succ edge  12 [100.0%] 

(barrier 102 101 60)

;; Start of basic block ( 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u64(11){ }u65(13){ }u66(25){ }u67(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; lr  def 	 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135
;; live  gen 	 153
;; live  kill	
;; rd  in  	(14)
2, 8, 12, 15, 16, 19, 20, 42, 51, 52, 260, 261, 268, 269
;; rd  gen 	(1)
271
;; rd  kill	(1)
271

;; Pred edge  8 [29.0%] 
(code_label 60 102 61 11 231 "" [1 uses])

(note 61 60 62 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 62 61 63 11 arch/arm/kernel/hw_breakpoint.c:258 (set (reg:SI 153)
        (ior:SI (reg/v:SI 135 [ dscr ])
            (const_int 32768 [0x8000]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 135 [ dscr ])
        (nil)))

(insn 63 62 64 11 arch/arm/kernel/hw_breakpoint.c:258 (asm_operands/v ("mcr p14, 0, %0, c0,c2, 2") ("") 0 [
            (reg:SI 153)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8099735) -1 (expr_list:REG_DEAD (reg:SI 153)
        (nil)))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(15)
2, 8, 12, 15, 16, 19, 20, 42, 51, 52, 260, 261, 268, 269, 271


;; Succ edge  12 [100.0%]  (fallthru)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 133 154
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 133 154
;; live  kill	
;; rd  in  	(17)
2, 8, 12, 15, 16, 19, 20, 42, 43, 51, 52, 260, 261, 268, 269, 270, 271
;; rd  gen 	(3)
45, 255, 272
;; rd  kill	(11)
42, 43, 44, 45, 46, 47, 48, 49, 50, 255, 272

;; Pred edge  11 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
(code_label 64 63 65 12 232 "" [1 uses])

(note 65 64 66 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 67 12 arch/arm/kernel/hw_breakpoint.c:266 (set (reg/v:SI 133 [ dscr.773 ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 0") ("=r") 0 []
             [] 8100758)) -1 (nil))

(insn 67 66 68 12 arch/arm/kernel/hw_breakpoint.c:267 (set (reg:SI 154)
        (and:SI (reg/v:SI 133 [ dscr.773 ])
            (const_int 32768 [0x8000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 133 [ dscr.773 ])
        (nil)))

(insn 68 67 69 12 arch/arm/kernel/hw_breakpoint.c:267 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 154)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 154)
        (nil)))

(jump_insn 69 68 70 12 arch/arm/kernel/hw_breakpoint.c:267 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(18)
2, 8, 12, 15, 16, 19, 20, 45, 51, 52, 255, 260, 261, 268, 269, 270, 271, 272


;; Succ edge  13 [4.0%]  (fallthru)
;; Succ edge  14 [96.0%] 

;; Start of basic block ( 3 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(26)
2, 4, 8, 12, 15, 16, 19, 20, 23, 45, 49, 51, 52, 255, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272
;; rd  gen 	(1)
257
;; rd  kill	(4)
256, 257, 258, 259

;; Pred edge  3 [100.0%] 
;; Pred edge  12 [4.0%]  (fallthru)
(code_label 70 69 71 13 226 ("out") [1 uses])

(note 71 70 72 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 103 13 arch/arm/kernel/hw_breakpoint.c:243 (set (reg/v:SI 134 [ ret ])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(jump_insn 103 72 104 13 (set (pc)
        (label_ref 78)) -1 (nil))
;; End of basic block 13 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(27)
2, 4, 8, 12, 15, 16, 19, 20, 23, 45, 49, 51, 52, 255, 257, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272


;; Succ edge  15 [100.0%] 

(barrier 104 103 75)

;; Start of basic block ( 12 5) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 134
;; live  kill	
;; rd  in  	(21)
2, 4, 8, 12, 15, 16, 19, 20, 23, 45, 47, 51, 52, 255, 260, 261, 268, 269, 270, 271, 272
;; rd  gen 	(1)
256
;; rd  kill	(4)
256, 257, 258, 259

;; Pred edge  12 [96.0%] 
;; Pred edge  5 [98.3%] 
(code_label 75 104 76 14 228 "" [2 uses])

(note 76 75 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 77 76 78 14 arch/arm/kernel/hw_breakpoint.c:236 (set (reg/v:SI 134 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; rd  out 	(22)
2, 4, 8, 12, 15, 16, 19, 20, 23, 45, 47, 51, 52, 255, 256, 260, 261, 268, 269, 270, 271, 272


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 9 4 13) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(34)
2, 4, 8, 12, 15, 16, 19, 20, 23, 42, 44, 45, 47, 49, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272
;; rd  gen 	(1)
1
;; rd  kill	(5)
0, 1, 2, 3, 4

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  13 [100.0%] 
(code_label 78 77 79 15 227 "" [3 uses])

(note 79 78 84 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 84 79 90 15 arch/arm/kernel/hw_breakpoint.c:272 (set (reg/i:SI 0 r0)
        (reg/v:SI 134 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ ret ])
        (nil)))

(insn 90 84 0 15 arch/arm/kernel/hw_breakpoint.c:272 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 15 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(33)
1, 8, 12, 15, 16, 19, 20, 23, 42, 44, 45, 47, 49, 51, 52, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function reset_ctrl_regs (reset_ctrl_regs)[0:1268]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 23 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 28 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 14 n_edges 18 count 28 (    2)


reset_ctrl_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,7u} r1={12d,5u} r2={7d} r3={7d} r11={1d,13u} r12={7d} r13={1d,20u,1d} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={11d,5u} r25={1d,13u} r26={1d,12u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r134={2d,4u} r137={1d,1u} r140={1d,1u} r141={2d,4u} r142={1d,2u} r143={1d,3u} r144={1d,2u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u,1d} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,2u} 
;;    total ref usage 886{763d,121u,2e} in 70{64 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726
0[0,12] 1[12,12] 2[24,7] 3[31,7] 11[38,1] 12[39,7] 13[46,1] 14[47,7] 15[54,6] 16[60,6] 17[66,6] 18[72,6] 19[78,6] 20[84,6] 21[90,6] 22[96,6] 23[102,6] 24[108,11] 25[119,1] 26[120,1] 27[121,6] 28[127,6] 29[133,6] 30[139,6] 31[145,6] 32[151,6] 33[157,6] 34[163,6] 35[169,6] 36[175,6] 37[181,6] 38[187,6] 39[193,6] 40[199,6] 41[205,6] 42[211,6] 43[217,6] 44[223,6] 45[229,6] 46[235,6] 47[241,6] 48[247,6] 49[253,6] 50[259,6] 51[265,6] 52[271,6] 53[277,6] 54[283,6] 55[289,6] 56[295,6] 57[301,6] 58[307,6] 59[313,6] 60[319,6] 61[325,6] 62[331,6] 63[337,6] 64[343,6] 65[349,6] 66[355,6] 67[361,6] 68[367,6] 69[373,6] 70[379,6] 71[385,6] 72[391,6] 73[397,6] 74[403,6] 75[409,6] 76[415,6] 77[421,6] 78[427,6] 79[433,6] 80[439,6] 81[445,6] 82[451,6] 83[457,6] 84[463,6] 85[469,6] 86[475,6] 87[481,6] 88[487,6] 89[493,6] 90[499,6] 91[505,6] 92[511,6] 93[517,6] 94[523,6] 95[529,6] 96[535,6] 97[541,6] 98[547,6] 99[553,6] 100[559,6] 101[565,6] 102[571,6] 103[577,6] 104[583,6] 105[589,6] 106[595,6] 107[601,6] 108[607,6] 109[613,6] 110[619,6] 111[625,6] 112[631,6] 113[637,6] 114[643,6] 115[649,6] 116[655,6] 117[661,6] 118[667,6] 119[673,6] 120[679,6] 121[685,6] 122[691,6] 123[697,6] 124[703,6] 125[709,6] 126[715,6] 127[721,6] 134[727,2] 137[729,1] 140[730,1] 141[731,2] 142[733,1] 143[734,1] 144[735,1] 145[736,1] 146[737,1] 147[738,1] 148[739,1] 149[740,1] 151[741,1] 152[742,1] 153[743,1] 154[744,1] 155[745,1] 156[746,1] 157[747,1] 158[748,1] 159[749,1] 160[750,1] 161[751,1] 162[752,1] 163[753,1] 164[754,1] 167[755,1] 168[756,1] 169[757,1] 170[758,1] 171[759,1] 173[760,1] 174[761,1] 176[762,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d11(0){ }d23(1){ }d30(2){ }d37(3){ }d38(11){ }d45(12){ }d46(13){ }d53(14){ }d119(25){ }d120(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
11, 23, 30, 37, 38, 45, 46, 53, 119, 120
;; rd  kill	(56)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 119, 120
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
11, 23, 30, 37, 38, 45, 46, 53, 119, 120

( 0 )->[2]->( 3 6 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d38(bb 0 insn -1) }u1(13){ d46(bb 0 insn -1) }u2(25){ d119(bb 0 insn -1) }u3(26){ d120(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 143 144 145 146 147 148
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 143 144 145 146 147 148
;; live  kill	
;; rd  in  	(10)
11, 23, 30, 37, 38, 45, 46, 53, 119, 120
;; rd  gen 	(7)
118, 734, 735, 736, 737, 738, 739
;; rd  kill	(17)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 734, 735, 736, 737, 738, 739
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; rd  out 	(17)
11, 23, 30, 37, 38, 45, 46, 53, 118, 119, 120, 734, 735, 736, 737, 738, 739
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 3
;;      reg 0 { d11(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 8
;;      reg 13 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 9
;;      reg 146 { d737(bb 2 insn 8) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 10
;;      reg 145 { d736(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 12
;;      reg 147 { d738(bb 2 insn 11) }
;;   UD chains for insn luid 6 uid 13
;;      reg 148 { d739(bb 2 insn 12) }
;;   UD chains for insn luid 7 uid 14
;;      reg 24 { d118(bb 2 insn 13) }

( 2 )->[3]->( 4 5 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ d38(bb 0 insn -1) }u13(13){ d46(bb 0 insn -1) }u14(25){ d119(bb 0 insn -1) }u15(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  gen 	 24 [cc] 140 149
;; live  kill	
;; rd  in  	(17)
11, 23, 30, 37, 38, 45, 46, 53, 118, 119, 120, 734, 735, 736, 737, 738, 739
;; rd  gen 	(3)
117, 730, 740
;; rd  kill	(13)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 730, 740
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; rd  out 	(19)
11, 23, 30, 37, 38, 45, 46, 53, 117, 119, 120, 730, 734, 735, 736, 737, 738, 739, 740
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 17
;;      reg 140 { d730(bb 3 insn 16) }
;;   UD chains for insn luid 2 uid 18
;;      reg 149 { d740(bb 3 insn 17) }
;;   UD chains for insn luid 3 uid 19
;;      reg 24 { d117(bb 3 insn 18) }

( 3 )->[4]->( 13 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ d38(bb 0 insn -1) }u20(13){ d46(bb 0 insn -1) }u21(25){ d119(bb 0 insn -1) }u22(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 151 152 153 154 155 156 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  gen 	 0 [r0] 1 [r1] 137 151 152 153 154 155 156 157 158 159 160
;; live  kill	 14 [lr]
;; rd  in  	(19)
11, 23, 30, 37, 38, 45, 46, 53, 117, 119, 120, 730, 734, 735, 736, 737, 738, 739, 740
;; rd  gen 	(12)
10, 729, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 47, 48, 49, 50, 51, 52, 53, 729, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
10, 23, 30, 37, 38, 45, 46, 117, 119, 120, 729, 730, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 24
;;      reg 143 { d734(bb 2 insn 10) }
;;   UD chains for insn luid 2 uid 25
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d0(bb 4 insn 23) }
;;      reg 1 { d22(bb 4 insn 24) }
;;   UD chains for insn luid 3 uid 26
;;      reg 143 { d734(bb 2 insn 10) }
;;   UD chains for insn luid 4 uid 27
;;      reg 151 { d741(bb 4 insn 26) }
;;   UD chains for insn luid 5 uid 28
;;      reg 152 { d742(bb 4 insn 27) }
;;   UD chains for insn luid 7 uid 30
;;      reg 153 { d743(bb 4 insn 28) }
;;      reg 154 { d744(bb 4 insn 29) }
;;   eq_note reg 153 { }
;;   UD chains for insn luid 8 uid 31
;;      reg 143 { d734(bb 2 insn 10) }
;;   UD chains for insn luid 9 uid 32
;;      reg 155 { d745(bb 4 insn 31) }
;;   UD chains for insn luid 10 uid 33
;;      reg 156 { d746(bb 4 insn 32) }
;;   UD chains for insn luid 11 uid 34
;;      reg 144 { d735(bb 2 insn 3) }
;;   UD chains for insn luid 12 uid 35
;;      reg 137 { d729(bb 4 insn 30) }
;;      reg 157 { d747(bb 4 insn 33) }
;;   UD chains for insn luid 13 uid 36
;;      reg 158 { d748(bb 4 insn 34) }
;;      reg 159 { d749(bb 4 insn 35) }
;;   UD chains for insn luid 14 uid 37
;;      reg 144 { d735(bb 2 insn 3) }
;;      reg 160 { d750(bb 4 insn 36) }

( 3 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ d38(bb 0 insn -1) }u44(13){ d46(bb 0 insn -1) }u45(25){ d119(bb 0 insn -1) }u46(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 161 162
;; live  kill	
;; rd  in  	(19)
11, 23, 30, 37, 38, 45, 46, 53, 117, 119, 120, 730, 734, 735, 736, 737, 738, 739, 740
;; rd  gen 	(2)
751, 752
;; rd  kill	(2)
751, 752
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
11, 23, 30, 37, 38, 45, 46, 53, 117, 119, 120, 730, 734, 735, 736, 737, 738, 739, 740, 751, 752
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 43
;;      reg 161 { d751(bb 5 insn 42) }
;;   UD chains for insn luid 4 uid 46
;;      reg 162 { d752(bb 5 insn 45) }

( 2 5 )->[6]->( 13 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ d38(bb 0 insn -1) }u50(13){ d46(bb 0 insn -1) }u51(25){ d119(bb 0 insn -1) }u52(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 142
;; live  kill	 14 [lr]
;; rd  in  	(22)
11, 23, 30, 37, 38, 45, 46, 53, 117, 118, 119, 120, 730, 734, 735, 736, 737, 738, 739, 740, 751, 752
;; rd  gen 	(3)
9, 114, 733
;; rd  kill	(31)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 47, 48, 49, 50, 51, 52, 53, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 733
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; rd  out 	(21)
9, 23, 30, 37, 38, 45, 46, 114, 119, 120, 730, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 50
;;      reg 13 { d46(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 51
;;      reg 0 { d9(bb 6 insn 50) }
;;   UD chains for insn luid 2 uid 52
;;      reg 142 { d733(bb 6 insn 51) }
;;   UD chains for insn luid 3 uid 53
;;      reg 24 { d114(bb 6 insn 52) }

( 6 )->[7]->( 9 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(11){ d38(bb 0 insn -1) }u58(13){ d46(bb 0 insn -1) }u59(25){ d119(bb 0 insn -1) }u60(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 141 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 141 176
;; live  kill	
;; rd  in  	(21)
9, 23, 30, 37, 38, 45, 46, 114, 119, 120, 730, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752
;; rd  gen 	(2)
731, 762
;; rd  kill	(3)
731, 732, 762
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; rd  out 	(23)
9, 23, 30, 37, 38, 45, 46, 114, 119, 120, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 762
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 55
;;      reg 142 { d733(bb 6 insn 51) }

( 9 )->[8]->( 9 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u62(11){ d38(bb 0 insn -1) }u63(13){ d46(bb 0 insn -1) }u64(25){ d119(bb 0 insn -1) }u65(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; live  gen 	 0 [r0] 1 [r1] 141 163 164
;; live  kill	 14 [lr]
;; rd  in  	(29)
9, 23, 30, 37, 38, 45, 46, 111, 119, 120, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 762
;; rd  gen 	(3)
732, 753, 754
;; rd  kill	(11)
47, 48, 49, 50, 51, 52, 53, 731, 732, 753, 754
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; rd  out 	(28)
9, 23, 30, 37, 38, 45, 46, 111, 119, 120, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 762
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 60
;;      reg 141 { d732(bb 8 insn 68) d731(bb 7 insn 55) }
;;   UD chains for insn luid 1 uid 61
;;      reg 163 { d753(bb 8 insn 60) }
;;   UD chains for insn luid 3 uid 63
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d8(bb 8 insn 61) }
;;      reg 1 { d15(bb 8 insn 114) }
;;   UD chains for insn luid 4 uid 64
;;      reg 141 { d732(bb 8 insn 68) d731(bb 7 insn 55) }
;;   UD chains for insn luid 5 uid 65
;;      reg 164 { d754(bb 8 insn 64) }
;;   UD chains for insn luid 7 uid 67
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d6(bb 8 insn 65) }
;;      reg 1 { d14(bb 8 insn 115) }
;;   UD chains for insn luid 8 uid 68
;;      reg 141 { d732(bb 8 insn 68) d731(bb 7 insn 55) }

( 8 7 )->[9]->( 8 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(11){ d38(bb 0 insn -1) }u78(13){ d46(bb 0 insn -1) }u79(25){ d119(bb 0 insn -1) }u80(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; lr  def 	 24 [cc] 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; live  gen 	 24 [cc] 167 168 169
;; live  kill	
;; rd  in  	(30)
9, 23, 30, 37, 38, 45, 46, 111, 114, 119, 120, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 762
;; rd  gen 	(4)
111, 755, 756, 757
;; rd  kill	(14)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 755, 756, 757
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; rd  out 	(29)
9, 23, 30, 37, 38, 45, 46, 111, 119, 120, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 762
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 74
;;      reg 176 { d762(bb 7 insn 72) }
;;   UD chains for insn luid 1 uid 75
;;      reg 176 { d762(bb 7 insn 72) }
;;   UD chains for insn luid 2 uid 76
;;      reg 168 { d756(bb 9 insn 74) }
;;      reg 169 { d757(bb 9 insn 75) }
;;   UD chains for insn luid 3 uid 77
;;      reg 141 { d732(bb 8 insn 68) d731(bb 7 insn 55) }
;;      reg 167 { d755(bb 9 insn 76) }
;;   UD chains for insn luid 4 uid 78
;;      reg 24 { d111(bb 9 insn 77) }

( 9 )->[10]->( 12 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u88(11){ d38(bb 0 insn -1) }u89(13){ d46(bb 0 insn -1) }u90(25){ d119(bb 0 insn -1) }u91(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134 174
;; live  kill	
;; rd  in  	(29)
9, 23, 30, 37, 38, 45, 46, 111, 119, 120, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 762
;; rd  gen 	(2)
728, 761
;; rd  kill	(3)
727, 728, 761
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; rd  out 	(31)
9, 23, 30, 37, 38, 45, 46, 111, 119, 120, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 761, 762
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }

( 12 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(11){ d38(bb 0 insn -1) }u93(13){ d46(bb 0 insn -1) }u94(25){ d119(bb 0 insn -1) }u95(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; live  gen 	 0 [r0] 1 [r1] 134 170 171
;; live  kill	 14 [lr]
;; rd  in  	(35)
9, 23, 30, 37, 38, 45, 46, 108, 119, 120, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(3)
727, 758, 759
;; rd  kill	(11)
47, 48, 49, 50, 51, 52, 53, 727, 728, 758, 759
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; rd  out 	(34)
9, 23, 30, 37, 38, 45, 46, 108, 119, 120, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 85
;;      reg 134 { d728(bb 10 insn 80) d727(bb 11 insn 93) }
;;   UD chains for insn luid 1 uid 86
;;      reg 170 { d758(bb 11 insn 85) }
;;   UD chains for insn luid 3 uid 88
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d4(bb 11 insn 86) }
;;      reg 1 { d13(bb 11 insn 111) }
;;   UD chains for insn luid 4 uid 89
;;      reg 134 { d728(bb 10 insn 80) d727(bb 11 insn 93) }
;;   UD chains for insn luid 5 uid 90
;;      reg 171 { d759(bb 11 insn 89) }
;;   UD chains for insn luid 7 uid 92
;;      reg 13 { d46(bb 0 insn -1) }
;;      reg 0 { d2(bb 11 insn 90) }
;;      reg 1 { d12(bb 11 insn 112) }
;;   UD chains for insn luid 8 uid 93
;;      reg 134 { d728(bb 10 insn 80) d727(bb 11 insn 93) }

( 11 10 )->[12]->( 11 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u107(11){ d38(bb 0 insn -1) }u108(13){ d46(bb 0 insn -1) }u109(25){ d119(bb 0 insn -1) }u110(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; lr  def 	 24 [cc] 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; live  gen 	 24 [cc] 173
;; live  kill	
;; rd  in  	(36)
9, 23, 30, 37, 38, 45, 46, 108, 111, 119, 120, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(2)
108, 760
;; rd  kill	(12)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 760
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; rd  out 	(35)
9, 23, 30, 37, 38, 45, 46, 108, 119, 120, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 98
;;      reg 174 { d761(bb 10 insn 97) }
;;   UD chains for insn luid 1 uid 99
;;      reg 134 { d728(bb 10 insn 80) d727(bb 11 insn 93) }
;;      reg 173 { d760(bb 12 insn 98) }
;;   UD chains for insn luid 2 uid 100
;;      reg 24 { d108(bb 12 insn 99) }

( 12 6 4 )->[13]->( 1 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(11){ d38(bb 0 insn -1) }u116(13){ d46(bb 0 insn -1) }u117(25){ d119(bb 0 insn -1) }u118(26){ d120(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(49)
9, 10, 23, 30, 37, 38, 45, 46, 108, 114, 117, 119, 120, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(49)
9, 10, 23, 30, 37, 38, 45, 46, 108, 114, 117, 119, 120, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 25 { d119(bb 0 insn -1) }
;;   reg 26 { d120(bb 0 insn -1) }

( 13 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u119(11){ d38(bb 0 insn -1) }u120(13){ d46(bb 0 insn -1) }u121(14){ }u122(25){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(49)
9, 10, 23, 30, 37, 38, 45, 46, 108, 114, 117, 119, 120, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(49)
9, 10, 23, 30, 37, 38, 45, 46, 108, 114, 117, 119, 120, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;;  UD chains for artificial uses
;;   reg 11 { d38(bb 0 insn -1) }
;;   reg 13 { d46(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d119(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 14 to worklist
  Adding insn 19 to worklist
  Adding insn 16 to worklist
  Adding insn 116 to worklist
  Adding insn 37 to worklist
  Adding insn 25 to worklist
  Adding insn 47 to worklist
  Adding insn 46 to worklist
  Adding insn 44 to worklist
  Adding insn 43 to worklist
  Adding insn 53 to worklist
  Adding insn 50 to worklist
  Adding insn 118 to worklist
  Adding insn 67 to worklist
  Adding insn 63 to worklist
  Adding insn 78 to worklist
  Adding insn 120 to worklist
  Adding insn 92 to worklist
  Adding insn 88 to worklist
  Adding insn 100 to worklist
Finished finding needed instructions:
Processing use of (reg 24 cc) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 134 [ i.816 ]) in insn 99:
  Adding insn 80 to worklist
  Adding insn 93 to worklist
Processing use of (reg 173 [ core_num_wrps ]) in insn 99:
  Adding insn 98 to worklist
Processing use of (reg 174) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 134 [ i.816 ]) in insn 93:
Processing use of (reg 13 sp) in insn 88:
Processing use of (reg 0 r0) in insn 88:
  Adding insn 86 to worklist
Processing use of (reg 1 r1) in insn 88:
  Adding insn 111 to worklist
Processing use of (reg 170) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 134 [ i.816 ]) in insn 85:
Processing use of (reg 13 sp) in insn 92:
Processing use of (reg 0 r0) in insn 92:
  Adding insn 90 to worklist
Processing use of (reg 1 r1) in insn 92:
  Adding insn 112 to worklist
Processing use of (reg 171) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 134 [ i.816 ]) in insn 89:
Processing use of (reg 24 cc) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 141 [ i ]) in insn 77:
  Adding insn 68 to worklist
  Adding insn 55 to worklist
Processing use of (reg 167) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 168 [ core_num_reserved_brps ]) in insn 76:
  Adding insn 74 to worklist
Processing use of (reg 169 [ core_num_brps ]) in insn 76:
  Adding insn 75 to worklist
Processing use of (reg 176) in insn 75:
  Adding insn 72 to worklist
Processing use of (reg 176) in insn 74:
Processing use of (reg 142 [ D.24218 ]) in insn 55:
  Adding insn 51 to worklist
Processing use of (reg 0 r0) in insn 51:
Processing use of (reg 141 [ i ]) in insn 68:
Processing use of (reg 13 sp) in insn 63:
Processing use of (reg 0 r0) in insn 63:
  Adding insn 61 to worklist
Processing use of (reg 1 r1) in insn 63:
  Adding insn 114 to worklist
Processing use of (reg 163) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 141 [ i ]) in insn 60:
Processing use of (reg 13 sp) in insn 67:
Processing use of (reg 0 r0) in insn 67:
  Adding insn 65 to worklist
Processing use of (reg 1 r1) in insn 67:
  Adding insn 115 to worklist
Processing use of (reg 164) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 141 [ i ]) in insn 64:
Processing use of (reg 13 sp) in insn 50:
Processing use of (reg 24 cc) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 142 [ D.24218 ]) in insn 52:
Processing use of (reg 161) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 162) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 13 sp) in insn 25:
Processing use of (reg 0 r0) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 1 r1) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 143 [ D.24209 ]) in insn 24:
  Adding insn 10 to worklist
Processing use of (reg 145) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 146) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 13 sp) in insn 8:
Processing use of (reg 144 [ info ]) in insn 37:
  Adding insn 3 to worklist
Processing use of (reg 160) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 158 [ <variable>.bits ]) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 159 [ <variable>.bits ]) in insn 36:
  Adding insn 35 to worklist
Processing use of (reg 137 [ p ]) in insn 35:
  Adding insn 30 to worklist
Processing use of (reg 157) in insn 35:
  Adding insn 33 to worklist
Processing use of (reg 156) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 155) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 143 [ D.24209 ]) in insn 31:
Processing use of (reg 153) in insn 30:
  Adding insn 28 to worklist
Processing use of (reg 154) in insn 30:
  Adding insn 29 to worklist
Processing use of (reg 152) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 151) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 143 [ D.24209 ]) in insn 26:
Processing use of (reg 144 [ info ]) in insn 34:
Processing use of (reg 0 r0) in insn 3:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 149) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 140 [ dbg_power ]) in insn 17:
Processing use of (reg 24 cc) in insn 14:
  Adding insn 13 to worklist
Processing use of (reg 148 [ debug_arch ]) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 147) in insn 12:
  Adding insn 11 to worklist


reset_ctrl_regs

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={12d,7u} r1={12d,5u} r2={7d} r3={7d} r11={1d,13u} r12={7d} r13={1d,20u,1d} r14={7d,1u} r15={6d} r16={6d} r17={6d} r18={6d} r19={6d} r20={6d} r21={6d} r22={6d} r23={6d} r24={11d,5u} r25={1d,13u} r26={1d,12u} r27={6d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={6d} r38={6d} r39={6d} r40={6d} r41={6d} r42={6d} r43={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} r81={6d} r82={6d} r83={6d} r84={6d} r85={6d} r86={6d} r87={6d} r88={6d} r89={6d} r90={6d} r91={6d} r92={6d} r93={6d} r94={6d} r95={6d} r96={6d} r97={6d} r98={6d} r99={6d} r100={6d} r101={6d} r102={6d} r103={6d} r104={6d} r105={6d} r106={6d} r107={6d} r108={6d} r109={6d} r110={6d} r111={6d} r112={6d} r113={6d} r114={6d} r115={6d} r116={6d} r117={6d} r118={6d} r119={6d} r120={6d} r121={6d} r122={6d} r123={6d} r124={6d} r125={6d} r126={6d} r127={6d} r134={2d,4u} r137={1d,1u} r140={1d,1u} r141={2d,4u} r142={1d,2u} r143={1d,3u} r144={1d,2u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u,1d} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r173={1d,1u} r174={1d,1u} r176={1d,2u} 
;;    total ref usage 886{763d,121u,2e} in 70{64 regular + 6 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726
0[0,12] 1[12,12] 2[24,7] 3[31,7] 11[38,1] 12[39,7] 13[46,1] 14[47,7] 15[54,6] 16[60,6] 17[66,6] 18[72,6] 19[78,6] 20[84,6] 21[90,6] 22[96,6] 23[102,6] 24[108,11] 25[119,1] 26[120,1] 27[121,6] 28[127,6] 29[133,6] 30[139,6] 31[145,6] 32[151,6] 33[157,6] 34[163,6] 35[169,6] 36[175,6] 37[181,6] 38[187,6] 39[193,6] 40[199,6] 41[205,6] 42[211,6] 43[217,6] 44[223,6] 45[229,6] 46[235,6] 47[241,6] 48[247,6] 49[253,6] 50[259,6] 51[265,6] 52[271,6] 53[277,6] 54[283,6] 55[289,6] 56[295,6] 57[301,6] 58[307,6] 59[313,6] 60[319,6] 61[325,6] 62[331,6] 63[337,6] 64[343,6] 65[349,6] 66[355,6] 67[361,6] 68[367,6] 69[373,6] 70[379,6] 71[385,6] 72[391,6] 73[397,6] 74[403,6] 75[409,6] 76[415,6] 77[421,6] 78[427,6] 79[433,6] 80[439,6] 81[445,6] 82[451,6] 83[457,6] 84[463,6] 85[469,6] 86[475,6] 87[481,6] 88[487,6] 89[493,6] 90[499,6] 91[505,6] 92[511,6] 93[517,6] 94[523,6] 95[529,6] 96[535,6] 97[541,6] 98[547,6] 99[553,6] 100[559,6] 101[565,6] 102[571,6] 103[577,6] 104[583,6] 105[589,6] 106[595,6] 107[601,6] 108[607,6] 109[613,6] 110[619,6] 111[625,6] 112[631,6] 113[637,6] 114[643,6] 115[649,6] 116[655,6] 117[661,6] 118[667,6] 119[673,6] 120[679,6] 121[685,6] 122[691,6] 123[697,6] 124[703,6] 125[709,6] 126[715,6] 127[721,6] 134[727,2] 137[729,1] 140[730,1] 141[731,2] 142[733,1] 143[734,1] 144[735,1] 145[736,1] 146[737,1] 147[738,1] 148[739,1] 149[740,1] 151[741,1] 152[742,1] 153[743,1] 154[744,1] 155[745,1] 156[746,1] 157[747,1] 158[748,1] 159[749,1] 160[750,1] 161[751,1] 162[752,1] 163[753,1] 164[754,1] 167[755,1] 168[756,1] 169[757,1] 170[758,1] 171[759,1] 173[760,1] 174[761,1] 176[762,1] 
(note 2 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 143 144 145 146 147 148
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 143 144 145 146 147 148
;; live  kill	
;; rd  in  	(10)
11, 23, 30, 37, 38, 45, 46, 53, 119, 120
;; rd  gen 	(7)
118, 734, 735, 736, 737, 738, 739
;; rd  kill	(17)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 734, 735, 736, 737, 738, 739

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 2 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 3 5 4 2 arch/arm/kernel/hw_breakpoint.c:838 (set (reg/v/f:SI 144 [ info ])
        (reg:SI 0 r0 [ info ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ info ])
        (nil)))

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(insn 8 4 9 2 arch/arm/kernel/hw_breakpoint.c:839 (set (reg:SI 146)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:839 (set (reg:SI 145)
        (and:SI (reg:SI 146)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 146)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 10 9 11 2 arch/arm/kernel/hw_breakpoint.c:839 (set (reg:SI 143 [ D.24209 ])
        (mem/s/j:SI (plus:SI (reg:SI 145)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 11 10 12 2 arch/arm/kernel/hw_breakpoint.c:851 (set (reg/f:SI 147)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/hw_breakpoint.c:851 (set (reg:SI 148 [ debug_arch ])
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 147) [0 debug_arch+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/f:SI 147)
        (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_arch+0 S1 A8]))
            (nil))))

(insn 13 12 14 2 arch/arm/kernel/hw_breakpoint.c:851 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 148 [ debug_arch ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 148 [ debug_arch ])
        (nil)))

(jump_insn 14 13 15 2 arch/arm/kernel/hw_breakpoint.c:851 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 48)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 2 -> ( 3 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; rd  out 	(17)
11, 23, 30, 37, 38, 45, 46, 53, 118, 119, 120, 734, 735, 736, 737, 738, 739


;; Succ edge  3 [71.0%]  (fallthru)
;; Succ edge  6 [29.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u12(11){ }u13(13){ }u14(25){ }u15(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 140 149
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  gen 	 24 [cc] 140 149
;; live  kill	
;; rd  in  	(17)
11, 23, 30, 37, 38, 45, 46, 53, 118, 119, 120, 734, 735, 736, 737, 738, 739
;; rd  gen 	(3)
117, 730, 740
;; rd  kill	(13)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 730, 740

;; Pred edge  2 [71.0%]  (fallthru)
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 16 15 17 3 arch/arm/kernel/hw_breakpoint.c:856 (set (reg/v:SI 140 [ dbg_power ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c1, c5, 4") ("=r") 0 []
             [] 8176279)) -1 (nil))

(insn 17 16 18 3 arch/arm/kernel/hw_breakpoint.c:857 (set (reg:SI 149)
        (and:SI (reg/v:SI 140 [ dbg_power ])
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ dbg_power ])
        (nil)))

(insn 18 17 19 3 arch/arm/kernel/hw_breakpoint.c:857 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 149)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(jump_insn 19 18 20 3 arch/arm/kernel/hw_breakpoint.c:857 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; rd  out 	(19)
11, 23, 30, 37, 38, 45, 46, 53, 117, 119, 120, 730, 734, 735, 736, 737, 738, 739, 740


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u19(11){ }u20(13){ }u21(25){ }u22(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 151 152 153 154 155 156 157 158 159 160
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; live  gen 	 0 [r0] 1 [r1] 137 151 152 153 154 155 156 157 158 159 160
;; live  kill	 14 [lr]
;; rd  in  	(19)
11, 23, 30, 37, 38, 45, 46, 53, 117, 119, 120, 730, 734, 735, 736, 737, 738, 739, 740
;; rd  gen 	(12)
10, 729, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 47, 48, 49, 50, 51, 52, 53, 729, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750

;; Pred edge  3 [0.0%]  (fallthru)
(note 20 19 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 20 24 4 arch/arm/kernel/hw_breakpoint.c:858 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11520280>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC6") [flags 0x82] <string_cst 0x11520280>)
        (nil)))

(insn 24 23 25 4 arch/arm/kernel/hw_breakpoint.c:858 (set (reg:SI 1 r1)
        (reg:SI 143 [ D.24209 ])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 26 4 arch/arm/kernel/hw_breakpoint.c:858 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 26 25 27 4 include/linux/cpumask.h:738 (set (reg:SI 151)
        (and:SI (reg:SI 143 [ D.24209 ])
            (const_int 31 [0x1f]))) 67 {*arm_andsi3_insn} (nil))

(insn 27 26 28 4 include/linux/cpumask.h:738 (set (reg:SI 152)
        (plus:SI (reg:SI 151)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 28 27 29 4 include/linux/cpumask.h:738 (set (reg:SI 153)
        (ashift:SI (reg:SI 152)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 29 28 30 4 include/linux/cpumask.h:738 (set (reg/f:SI 154)
        (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c42120 cpu_bit_bitmap>)) 167 {*arm_movsi_insn} (nil))

(insn 30 29 31 4 include/linux/cpumask.h:738 (set (reg/v/f:SI 137 [ p ])
        (plus:SI (reg:SI 153)
            (reg/f:SI 154))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/f:SI 154)
        (expr_list:REG_DEAD (reg:SI 153)
            (expr_list:REG_EQUAL (plus:SI (reg:SI 153)
                    (symbol_ref:SI ("cpu_bit_bitmap") [flags 0xc0] <var_decl 0x10c42120 cpu_bit_bitmap>))
                (nil)))))

(insn 31 30 32 4 include/linux/bitmap.h:202 (set (reg:SI 155)
        (lshiftrt:SI (reg:SI 143 [ D.24209 ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 143 [ D.24209 ])
        (nil)))

(insn 32 31 33 4 include/linux/bitmap.h:202 (set (reg:SI 156)
        (ashift:SI (reg:SI 155)
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 33 32 34 4 include/linux/bitmap.h:202 (set (reg:SI 157)
        (neg:SI (reg:SI 156))) 127 {*arm_negsi2} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 34 33 35 4 include/linux/bitmap.h:202 (set (reg:SI 158 [ <variable>.bits ])
        (mem/s/j:SI (reg/v/f:SI 144 [ info ]) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 35 34 36 4 include/linux/bitmap.h:202 (set (reg:SI 159 [ <variable>.bits ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 137 [ p ])
                (reg:SI 157)) [0 <variable>.bits+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 157)
        (expr_list:REG_DEAD (reg/v/f:SI 137 [ p ])
            (nil))))

(insn 36 35 37 4 include/linux/bitmap.h:202 (set (reg:SI 160)
        (ior:SI (reg:SI 158 [ <variable>.bits ])
            (reg:SI 159 [ <variable>.bits ]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 159 [ <variable>.bits ])
        (expr_list:REG_DEAD (reg:SI 158 [ <variable>.bits ])
            (nil))))

(insn 37 36 116 4 include/linux/bitmap.h:202 (set (mem/s/j:SI (reg/v/f:SI 144 [ info ]) [0 <variable>.bits+0 S4 A32])
        (reg:SI 160)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (expr_list:REG_DEAD (reg/v/f:SI 144 [ info ])
            (nil))))

(jump_insn 116 37 117 4 (set (pc)
        (label_ref 106)) -1 (nil))
;; End of basic block 4 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(29)
10, 23, 30, 37, 38, 45, 46, 117, 119, 120, 729, 730, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750


;; Succ edge  13 [100.0%] 

(barrier 117 116 40)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u43(11){ }u44(13){ }u45(25){ }u46(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 161 162
;; live  kill	
;; rd  in  	(19)
11, 23, 30, 37, 38, 45, 46, 53, 117, 119, 120, 730, 734, 735, 736, 737, 738, 739, 740
;; rd  gen 	(2)
751, 752
;; rd  kill	(2)
751, 752

;; Pred edge  3 [100.0%] 
(code_label 40 117 41 5 238 "" [1 uses])

(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 5 arch/arm/kernel/hw_breakpoint.c:867 (set (reg:SI 161)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 44 5 arch/arm/kernel/hw_breakpoint.c:867 (asm_operands/v ("mcr p14, 0, %0, c1, c0, 4") ("") 0 [
            (reg:SI 161)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8177687) -1 (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 44 43 45 5 arch/arm/kernel/hw_breakpoint.c:868 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8177815)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 45 44 46 5 arch/arm/kernel/hw_breakpoint.c:874 (set (reg:SI 162)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 5 arch/arm/kernel/hw_breakpoint.c:874 (asm_operands/v ("mcr p14, 0, %0, c0, c7, 0") ("") 0 [
            (reg:SI 162)
        ]
         [
            (asm_input:SI ("r") 0)
        ] 8178583) -1 (expr_list:REG_DEAD (reg:SI 162)
        (nil)))

(insn 47 46 48 5 arch/arm/kernel/hw_breakpoint.c:875 (parallel [
            (asm_operands/v ("isb") ("") 0 []
                 [] 8178711)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(21)
11, 23, 30, 37, 38, 45, 46, 53, 117, 119, 120, 730, 734, 735, 736, 737, 738, 739, 740, 751, 752


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 2 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u49(11){ }u50(13){ }u51(25){ }u52(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 142
;; live  kill	 14 [lr]
;; rd  in  	(22)
11, 23, 30, 37, 38, 45, 46, 53, 117, 118, 119, 120, 730, 734, 735, 736, 737, 738, 739, 740, 751, 752
;; rd  gen 	(3)
9, 114, 733
;; rd  kill	(31)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 47, 48, 49, 50, 51, 52, 53, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 733

;; Pred edge  2 [29.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 48 47 49 6 237 "" [1 uses])

(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(call_insn 50 49 51 6 arch/arm/kernel/hw_breakpoint.c:878 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enable_monitor_mode") [flags 0x3] <function_decl 0x113d8c80 enable_monitor_mode>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 51 50 52 6 arch/arm/kernel/hw_breakpoint.c:878 (set (reg:SI 142 [ D.24218 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 52 51 53 6 arch/arm/kernel/hw_breakpoint.c:878 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 142 [ D.24218 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 53 52 54 6 arch/arm/kernel/hw_breakpoint.c:878 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 106)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 6 -> ( 13 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; rd  out 	(21)
9, 23, 30, 37, 38, 45, 46, 114, 119, 120, 730, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752


;; Succ edge  13 [39.0%] 
;; Succ edge  7 [61.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u57(11){ }u58(13){ }u59(25){ }u60(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 142
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 141 176
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; live  gen 	 141 176
;; live  kill	
;; rd  in  	(21)
9, 23, 30, 37, 38, 45, 46, 114, 119, 120, 730, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752
;; rd  gen 	(2)
731, 762
;; rd  kill	(3)
731, 732, 762

;; Pred edge  6 [61.0%]  (fallthru)
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 72 7 arch/arm/kernel/hw_breakpoint.c:878 (set (reg/v:SI 141 [ i ])
        (reg:SI 142 [ D.24218 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 142 [ D.24218 ])
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(insn 72 55 118 7 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (reg/f:SI 176)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 118 72 119 7 (set (pc)
        (label_ref 69)) -1 (nil))
;; End of basic block 7 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; rd  out 	(23)
9, 23, 30, 37, 38, 45, 46, 114, 119, 120, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 762


;; Succ edge  9 [100.0%] 

(barrier 119 118 71)

;; Start of basic block ( 9) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 141 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; live  gen 	 0 [r0] 1 [r1] 141 163 164
;; live  kill	 14 [lr]
;; rd  in  	(29)
9, 23, 30, 37, 38, 45, 46, 111, 119, 120, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 762
;; rd  gen 	(3)
732, 753, 754
;; rd  kill	(11)
47, 48, 49, 50, 51, 52, 53, 731, 732, 753, 754

;; Pred edge  9 [91.0%] 
(code_label 71 119 58 8 241 "" [1 uses])

(note 58 71 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 60 58 61 8 arch/arm/kernel/hw_breakpoint.c:883 (set (reg:SI 163)
        (plus:SI (reg/v:SI 141 [ i ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 61 60 114 8 arch/arm/kernel/hw_breakpoint.c:883 (set (reg:SI 0 r0)
        (reg:SI 163)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 114 61 63 8 arch/arm/kernel/hw_breakpoint.c:883 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 63 114 64 8 arch/arm/kernel/hw_breakpoint.c:883 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 64 63 65 8 arch/arm/kernel/hw_breakpoint.c:884 (set (reg:SI 164)
        (plus:SI (reg/v:SI 141 [ i ])
            (const_int 64 [0x40]))) 4 {*arm_addsi3} (nil))

(insn 65 64 115 8 arch/arm/kernel/hw_breakpoint.c:884 (set (reg:SI 0 r0)
        (reg:SI 164)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 164)
        (nil)))

(insn 115 65 67 8 arch/arm/kernel/hw_breakpoint.c:884 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 67 115 68 8 arch/arm/kernel/hw_breakpoint.c:884 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 68 67 69 8 arch/arm/kernel/hw_breakpoint.c:882 discrim 2 (set (reg/v:SI 141 [ i ])
        (plus:SI (reg/v:SI 141 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 8 -> ( 9)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; rd  out 	(28)
9, 23, 30, 37, 38, 45, 46, 111, 119, 120, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 762


;; Succ edge  9 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 8 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 176
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; lr  def 	 24 [cc] 167 168 169
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; live  gen 	 24 [cc] 167 168 169
;; live  kill	
;; rd  in  	(30)
9, 23, 30, 37, 38, 45, 46, 111, 114, 119, 120, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 762
;; rd  gen 	(4)
111, 755, 756, 757
;; rd  kill	(14)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 755, 756, 757

;; Pred edge  8 [100.0%]  (fallthru,dfs_back)
;; Pred edge  7 [100.0%] 
(code_label 69 68 70 9 240 "" [1 uses])

(note 70 69 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 74 70 75 9 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (reg:SI 168 [ core_num_reserved_brps ])
        (mem/c/i:SI (plus:SI (reg/f:SI 176)
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 core_num_reserved_brps+0 S4 A32])
        (nil)))

(insn 75 74 76 9 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (reg:SI 169 [ core_num_brps ])
        (mem/c/i:SI (plus:SI (reg/f:SI 176)
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
        (nil)))

(insn 76 75 77 9 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (reg:SI 167)
        (plus:SI (reg:SI 168 [ core_num_reserved_brps ])
            (reg:SI 169 [ core_num_brps ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 169 [ core_num_brps ])
        (expr_list:REG_DEAD (reg:SI 168 [ core_num_reserved_brps ])
            (nil))))

(insn 77 76 78 9 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 141 [ i ])
            (reg:SI 167))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(jump_insn 78 77 79 9 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 71)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 9 -> ( 8 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 176
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 176
;; rd  out 	(29)
9, 23, 30, 37, 38, 45, 46, 111, 119, 120, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 762


;; Succ edge  8 [91.0%] 
;; Succ edge  10 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u88(11){ }u89(13){ }u90(25){ }u91(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 134 174
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 134 174
;; live  kill	
;; rd  in  	(29)
9, 23, 30, 37, 38, 45, 46, 111, 119, 120, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 762
;; rd  gen 	(2)
728, 761
;; rd  kill	(3)
727, 728, 761

;; Pred edge  9 [9.0%]  (fallthru,loop_exit)
(note 79 78 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 80 79 97 10 arch/arm/kernel/hw_breakpoint.c:882 discrim 1 (set (reg/v:SI 134 [ i.816 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 97 80 120 10 arch/arm/kernel/hw_breakpoint.c:887 discrim 1 (set (reg/f:SI 174)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 120 97 121 10 (set (pc)
        (label_ref 94)) -1 (nil))
;; End of basic block 10 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; rd  out 	(31)
9, 23, 30, 37, 38, 45, 46, 111, 119, 120, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 761, 762


;; Succ edge  12 [100.0%] 

(barrier 121 120 96)

;; Start of basic block ( 12) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u92(11){ }u93(13){ }u94(25){ }u95(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 170 171
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; live  gen 	 0 [r0] 1 [r1] 134 170 171
;; live  kill	 14 [lr]
;; rd  in  	(35)
9, 23, 30, 37, 38, 45, 46, 108, 119, 120, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(3)
727, 758, 759
;; rd  kill	(11)
47, 48, 49, 50, 51, 52, 53, 727, 728, 758, 759

;; Pred edge  12 [91.0%] 
(code_label 96 121 83 11 243 "" [1 uses])

(note 83 96 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 85 83 86 11 arch/arm/kernel/hw_breakpoint.c:888 (set (reg:SI 170)
        (plus:SI (reg/v:SI 134 [ i.816 ])
            (const_int 112 [0x70]))) 4 {*arm_addsi3} (nil))

(insn 86 85 111 11 arch/arm/kernel/hw_breakpoint.c:888 (set (reg:SI 0 r0)
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (nil)))

(insn 111 86 88 11 arch/arm/kernel/hw_breakpoint.c:888 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 88 111 89 11 arch/arm/kernel/hw_breakpoint.c:888 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 89 88 90 11 arch/arm/kernel/hw_breakpoint.c:889 (set (reg:SI 171)
        (plus:SI (reg/v:SI 134 [ i.816 ])
            (const_int 96 [0x60]))) 4 {*arm_addsi3} (nil))

(insn 90 89 112 11 arch/arm/kernel/hw_breakpoint.c:889 (set (reg:SI 0 r0)
        (reg:SI 171)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(insn 112 90 92 11 arch/arm/kernel/hw_breakpoint.c:889 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 92 112 93 11 arch/arm/kernel/hw_breakpoint.c:889 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 93 92 94 11 arch/arm/kernel/hw_breakpoint.c:887 discrim 2 (set (reg/v:SI 134 [ i.816 ])
        (plus:SI (reg/v:SI 134 [ i.816 ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; rd  out 	(34)
9, 23, 30, 37, 38, 45, 46, 108, 119, 120, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762


;; Succ edge  12 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 11 10) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u107(11){ }u108(13){ }u109(25){ }u110(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; lr  def 	 24 [cc] 173
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; live  gen 	 24 [cc] 173
;; live  kill	
;; rd  in  	(36)
9, 23, 30, 37, 38, 45, 46, 108, 111, 119, 120, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(2)
108, 760
;; rd  kill	(12)
108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 760

;; Pred edge  11 [100.0%]  (fallthru,dfs_back)
;; Pred edge  10 [100.0%] 
(code_label 94 93 95 12 242 "" [1 uses])

(note 95 94 98 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 98 95 99 12 arch/arm/kernel/hw_breakpoint.c:887 discrim 1 (set (reg:SI 173 [ core_num_wrps ])
        (mem/c/i:SI (plus:SI (reg/f:SI 174)
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 core_num_wrps+0 S4 A32])
        (nil)))

(insn 99 98 100 12 arch/arm/kernel/hw_breakpoint.c:887 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 134 [ i.816 ])
            (reg:SI 173 [ core_num_wrps ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 173 [ core_num_wrps ])
        (nil)))

(jump_insn 100 99 106 12 arch/arm/kernel/hw_breakpoint.c:887 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 96)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 12 -> ( 11 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 134 174
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 134 174
;; rd  out 	(35)
9, 23, 30, 37, 38, 45, 46, 108, 119, 120, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762


;; Succ edge  11 [91.0%] 
;; Succ edge  13 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 12 6 4) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u115(11){ }u116(13){ }u117(25){ }u118(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(49)
9, 10, 23, 30, 37, 38, 45, 46, 108, 114, 117, 119, 120, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  12 [9.0%]  (fallthru,loop_exit)
;; Pred edge  6 [39.0%] 
;; Pred edge  4 [100.0%] 
(code_label 106 100 109 13 244 "" [2 uses])

(note 109 106 0 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 13 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(49)
9, 10, 23, 30, 37, 38, 45, 46, 108, 114, 117, 119, 120, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_validate_hwbkpt_settings (arch_validate_hwbkpt_settings)[0:1261]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 58 count 62 (  1.8)
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 58 count 66 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 34 n_edges 58 count 66 (  1.9)


arch_validate_hwbkpt_settings

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,11u} r1={8d,2u} r2={8d,2u} r3={7d,1u} r11={1d,33u} r12={6d} r13={1d,38u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={25d,18u} r25={1d,33u} r26={1d,32u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,2u} r134={1d,1u} r135={1d,2u} r136={1d,3u} r137={3d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,3u,1d} r143={1d,40u} r144={1d,1u} r145={1d,2u} r146={2d,2u} r147={1d,1u} r148={2d,2u} r149={1d,1u} r150={1d,1u} r151={2d,2u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r158={1d,3u} r159={1d,1u,1d} r160={1d,1u} r161={1d,1u} r162={2d,2u} r163={1d,1u} r164={1d,1u} r165={2d,2u} r166={1d,1u} r167={1d,1u} r168={2d,2u} r169={1d,1u} r170={1d,1u} r171={2d,3u} r172={1d,1u} r173={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u,1d} r188={1d,1u} r189={2d,2u} r190={1d,1u} r191={1d,1u} r193={1d,1u} r194={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} r201={2d,2u} r202={1d,1u} r203={2d,2u} r204={1d,1u} r205={1d,1u,1d} r206={1d,1u} r210={1d,1u} r211={1d,1u} r213={1d,2u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={2d,2u} r219={1d,1u} r220={1d,1u} r221={1d,2u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r231={1d,1u} r235={2d,2u} r236={1d,1u} r237={1d,1u} 
;;    total ref usage 1042{721d,317u,4e} in 171{166 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624
0[0,11] 1[11,8] 2[19,8] 3[27,7] 11[34,1] 12[35,6] 13[41,1] 14[42,6] 15[48,5] 16[53,5] 17[58,5] 18[63,5] 19[68,5] 20[73,5] 21[78,5] 22[83,5] 23[88,5] 24[93,25] 25[118,1] 26[119,1] 27[120,5] 28[125,5] 29[130,5] 30[135,5] 31[140,5] 32[145,5] 33[150,5] 34[155,5] 35[160,5] 36[165,5] 37[170,5] 38[175,5] 39[180,5] 40[185,5] 41[190,5] 42[195,5] 43[200,5] 44[205,5] 45[210,5] 46[215,5] 47[220,5] 48[225,5] 49[230,5] 50[235,5] 51[240,5] 52[245,5] 53[250,5] 54[255,5] 55[260,5] 56[265,5] 57[270,5] 58[275,5] 59[280,5] 60[285,5] 61[290,5] 62[295,5] 63[300,5] 64[305,5] 65[310,5] 66[315,5] 67[320,5] 68[325,5] 69[330,5] 70[335,5] 71[340,5] 72[345,5] 73[350,5] 74[355,5] 75[360,5] 76[365,5] 77[370,5] 78[375,5] 79[380,5] 80[385,5] 81[390,5] 82[395,5] 83[400,5] 84[405,5] 85[410,5] 86[415,5] 87[420,5] 88[425,5] 89[430,5] 90[435,5] 91[440,5] 92[445,5] 93[450,5] 94[455,5] 95[460,5] 96[465,5] 97[470,5] 98[475,5] 99[480,5] 100[485,5] 101[490,5] 102[495,5] 103[500,5] 104[505,5] 105[510,5] 106[515,5] 107[520,5] 108[525,5] 109[530,5] 110[535,5] 111[540,5] 112[545,5] 113[550,5] 114[555,5] 115[560,5] 116[565,5] 117[570,5] 118[575,5] 119[580,5] 120[585,5] 121[590,5] 122[595,5] 123[600,5] 124[605,5] 125[610,5] 126[615,5] 127[620,5] 133[625,1] 134[626,1] 135[627,1] 136[628,1] 137[629,3] 138[632,1] 139[633,1] 140[634,1] 141[635,1] 143[636,1] 144[637,1] 145[638,1] 146[639,2] 147[641,1] 148[642,2] 149[644,1] 150[645,1] 151[646,2] 152[648,1] 153[649,1] 155[650,1] 156[651,1] 158[652,1] 159[653,1] 160[654,1] 161[655,1] 162[656,2] 163[658,1] 164[659,1] 165[660,2] 166[662,1] 167[663,1] 168[664,2] 169[666,1] 170[667,1] 171[668,2] 172[670,1] 173[671,1] 175[672,1] 176[673,1] 177[674,1] 178[675,1] 179[676,1] 180[677,1] 182[678,1] 183[679,1] 184[680,1] 185[681,1] 186[682,1] 188[683,1] 189[684,2] 190[686,1] 191[687,1] 193[688,1] 194[689,1] 197[690,1] 198[691,1] 200[692,1] 201[693,2] 202[695,1] 203[696,2] 204[698,1] 205[699,1] 206[700,1] 210[701,1] 211[702,1] 213[703,1] 214[704,1] 215[705,1] 216[706,1] 217[707,2] 219[709,1] 220[710,1] 221[711,1] 223[712,1] 224[713,1] 225[714,1] 226[715,1] 231[716,1] 235[717,2] 236[719,1] 237[720,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d10(0){ }d18(1){ }d26(2){ }d33(3){ }d34(11){ }d40(12){ }d41(13){ }d47(14){ }d118(25){ }d119(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119
;; rd  kill	(50)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 118, 119
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119

( 0 )->[2]->( 31 4 5 6 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d34(bb 0 insn -1) }u1(13){ d41(bb 0 insn -1) }u2(25){ d118(bb 0 insn -1) }u3(26){ d119(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 143 144 145
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 143 144 145
;; live  kill	 24 [cc]
;; rd  in  	(10)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119
;; rd  gen 	(3)
636, 637, 638
;; rd  kill	(28)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 636, 637, 638
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; rd  out 	(13)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d10(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 7
;;      reg 144 { d637(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 145 { d638(bb 2 insn 7) }
;;      reg 145 { d638(bb 2 insn 7) }

( 2 )->[3]->( 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d34(bb 0 insn -1) }u10(13){ d41(bb 0 insn -1) }u11(25){ d118(bb 0 insn -1) }u12(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 146 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 146 147
;; live  kill	
;; rd  in  	(13)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638
;; rd  gen 	(2)
639, 641
;; rd  kill	(1)
641
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(15)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638, 639, 641
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 14
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 15
;;      reg 147 { d641(bb 3 insn 14) }
;;   UD chains for insn luid 2 uid 16
;;      reg 146 read/write { d640(bb 3 insn 15) }
;;   UD chains for insn luid 3 uid 17
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 146 { d640(bb 3 insn 15) d639(bb 3 insn 16) }

( 2 )->[4]->( 7 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ d34(bb 0 insn -1) }u19(13){ d41(bb 0 insn -1) }u20(25){ d118(bb 0 insn -1) }u21(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 148 149 150
;; live  kill	
;; rd  in  	(13)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638
;; rd  gen 	(3)
642, 644, 645
;; rd  kill	(2)
644, 645
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(16)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638, 642, 644, 645
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 22
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 23
;;      reg 149 { d644(bb 4 insn 22) }
;;   UD chains for insn luid 3 uid 25
;;      reg 150 { d645(bb 4 insn 24) }
;;      reg 148 read/write { d643(bb 4 insn 23) }
;;   UD chains for insn luid 4 uid 26
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 148 { d643(bb 4 insn 23) d642(bb 4 insn 25) }

( 2 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ d34(bb 0 insn -1) }u29(13){ d41(bb 0 insn -1) }u30(25){ d118(bb 0 insn -1) }u31(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 151 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 151 152 153
;; live  kill	
;; rd  in  	(13)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638
;; rd  gen 	(3)
646, 648, 649
;; rd  kill	(2)
648, 649
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(16)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638, 646, 648, 649
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 31
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 32
;;      reg 152 { d648(bb 5 insn 31) }
;;   UD chains for insn luid 3 uid 34
;;      reg 153 { d649(bb 5 insn 33) }
;;      reg 151 read/write { d647(bb 5 insn 32) }
;;   UD chains for insn luid 4 uid 35
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 151 { d647(bb 5 insn 32) d646(bb 5 insn 34) }

( 2 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ d34(bb 0 insn -1) }u39(13){ d41(bb 0 insn -1) }u40(25){ d118(bb 0 insn -1) }u41(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 155 156
;; live  kill	
;; rd  in  	(13)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638
;; rd  gen 	(2)
650, 651
;; rd  kill	(2)
650, 651
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(15)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638, 650, 651
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 40
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 43
;;      reg 155 { d650(bb 6 insn 40) }
;;   UD chains for insn luid 2 uid 45
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 156 { d651(bb 6 insn 43) }

( 6 3 4 5 )->[7]->( 31 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u46(11){ d34(bb 0 insn -1) }u47(13){ d41(bb 0 insn -1) }u48(25){ d118(bb 0 insn -1) }u49(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 158 159 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 158 159 160 161
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(23)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651
;; rd  gen 	(6)
8, 114, 652, 653, 654, 655
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 42, 43, 44, 45, 46, 47, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 652, 653, 654, 655
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158
;; rd  out 	(27)
8, 18, 26, 33, 34, 40, 41, 114, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 48
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 50
;;      reg 159 { d653(bb 7 insn 48) }
;;      reg 160 { d654(bb 7 insn 49) }
;;   eq_note reg 159 { }
;;   UD chains for insn luid 3 uid 51
;;      reg 158 { d652(bb 7 insn 50) }
;;   UD chains for insn luid 5 uid 53
;;      reg 13 { d41(bb 0 insn -1) }
;;      reg 0 { d9(bb 7 insn 51) }
;;      reg 1 { d17(bb 7 insn 51) }
;;      reg 2 { d25(bb 7 insn 52) }
;;      reg 3 { d32(bb 7 insn 52) }
;;   UD chains for insn luid 6 uid 54
;;      reg 0 { d8(bb 7 insn 53) }
;;   UD chains for insn luid 7 uid 55
;;      reg 161 { d655(bb 7 insn 54) }
;;   UD chains for insn luid 8 uid 56
;;      reg 24 { d114(bb 7 insn 55) }

( 7 )->[8]->( 31 9 10 11 12 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u63(11){ d34(bb 0 insn -1) }u64(13){ d41(bb 0 insn -1) }u65(25){ d118(bb 0 insn -1) }u66(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158
;; live  gen 	
;; live  kill	 24 [cc]
;; rd  in  	(27)
8, 18, 26, 33, 34, 40, 41, 114, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;; rd  gen 	(0)

;; rd  kill	(25)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(26)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 57
;;      reg 158 { d652(bb 7 insn 50) }
;;      reg 158 { d652(bb 7 insn 50) }

( 8 )->[9]->( 14 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ d34(bb 0 insn -1) }u70(13){ d41(bb 0 insn -1) }u71(25){ d118(bb 0 insn -1) }u72(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 162 163 164
;; live  kill	
;; rd  in  	(26)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;; rd  gen 	(3)
656, 658, 659
;; rd  kill	(2)
658, 659
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(29)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 63
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 64
;;      reg 163 { d658(bb 9 insn 63) }
;;   UD chains for insn luid 3 uid 66
;;      reg 164 { d659(bb 9 insn 65) }
;;      reg 162 read/write { d657(bb 9 insn 64) }
;;   UD chains for insn luid 4 uid 67
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 162 { d657(bb 9 insn 64) d656(bb 9 insn 66) }

( 8 )->[10]->( 14 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(11){ d34(bb 0 insn -1) }u80(13){ d41(bb 0 insn -1) }u81(25){ d118(bb 0 insn -1) }u82(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 165 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 165 166 167
;; live  kill	
;; rd  in  	(26)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;; rd  gen 	(3)
660, 662, 663
;; rd  kill	(2)
662, 663
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(29)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 660, 662, 663
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 72
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 73
;;      reg 166 { d662(bb 10 insn 72) }
;;   UD chains for insn luid 3 uid 75
;;      reg 167 { d663(bb 10 insn 74) }
;;      reg 165 read/write { d661(bb 10 insn 73) }
;;   UD chains for insn luid 4 uid 76
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 165 { d661(bb 10 insn 73) d660(bb 10 insn 75) }

( 8 )->[11]->( 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ d34(bb 0 insn -1) }u90(13){ d41(bb 0 insn -1) }u91(25){ d118(bb 0 insn -1) }u92(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 168 169 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 168 169 170
;; live  kill	
;; rd  in  	(26)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;; rd  gen 	(3)
664, 666, 667
;; rd  kill	(2)
666, 667
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(29)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 664, 666, 667
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 81
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 82
;;      reg 169 { d666(bb 11 insn 81) }
;;   UD chains for insn luid 3 uid 84
;;      reg 170 { d667(bb 11 insn 83) }
;;      reg 168 read/write { d665(bb 11 insn 82) }
;;   UD chains for insn luid 4 uid 85
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 168 { d665(bb 11 insn 82) d664(bb 11 insn 84) }

( 8 )->[12]->( 13 31 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u99(11){ d34(bb 0 insn -1) }u100(13){ d41(bb 0 insn -1) }u101(25){ d118(bb 0 insn -1) }u102(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 171 172 173 175 176 177 178 235 236 237
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 171 172 173 175 176 177 178 235 236 237
;; live  kill	
;; rd  in  	(26)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;; rd  gen 	(11)
112, 668, 670, 671, 672, 673, 674, 675, 718, 719, 720
;; rd  kill	(35)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 670, 671, 672, 673, 674, 675, 717, 718, 719, 720
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(37)
8, 18, 26, 33, 34, 40, 41, 112, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 668, 670, 671, 672, 673, 674, 675, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 90
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 91
;;      reg 172 { d670(bb 12 insn 90) }
;;   UD chains for insn luid 3 uid 93
;;      reg 173 { d671(bb 12 insn 92) }
;;      reg 171 read/write { d669(bb 12 insn 91) }
;;   UD chains for insn luid 4 uid 284
;;      reg 171 { d669(bb 12 insn 91) d668(bb 12 insn 93) }
;;   UD chains for insn luid 5 uid 285
;;      reg 236 { d719(bb 12 insn 284) }
;;   UD chains for insn luid 6 uid 283
;;      reg 235 { d717(bb 12 insn 285) }
;;   UD chains for insn luid 7 uid 286
;;      reg 235 { d718(bb 12 insn 283) }
;;   UD chains for insn luid 8 uid 94
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 171 { d669(bb 12 insn 91) d668(bb 12 insn 93) }
;;   UD chains for insn luid 9 uid 95
;;      reg 237 { d720(bb 12 insn 286) }
;;   UD chains for insn luid 10 uid 97
;;      reg 175 { d672(bb 12 insn 95) }
;;   UD chains for insn luid 11 uid 98
;;      reg 176 { d673(bb 12 insn 97) }
;;   UD chains for insn luid 12 uid 99
;;      reg 177 { d674(bb 12 insn 98) }
;;   UD chains for insn luid 13 uid 100
;;      reg 178 { d675(bb 12 insn 99) }
;;   UD chains for insn luid 14 uid 101
;;      reg 24 { d112(bb 12 insn 100) }

( 12 )->[13]->( 14 31 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u119(11){ d34(bb 0 insn -1) }u120(13){ d41(bb 0 insn -1) }u121(25){ d118(bb 0 insn -1) }u122(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 179 180
;; live  kill	
;; rd  in  	(37)
8, 18, 26, 33, 34, 40, 41, 112, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 668, 670, 671, 672, 673, 674, 675, 718, 719, 720
;; rd  gen 	(3)
111, 676, 677
;; rd  kill	(27)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 676, 677
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(39)
8, 18, 26, 33, 34, 40, 41, 111, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 668, 670, 671, 672, 673, 674, 675, 676, 677, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 104
;;      reg 179 { d676(bb 13 insn 103) }
;;   UD chains for insn luid 2 uid 105
;;      reg 180 { d677(bb 13 insn 104) }
;;   UD chains for insn luid 3 uid 106
;;      reg 24 { d111(bb 13 insn 105) }

( 13 9 10 11 )->[14]->( 15 17 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(11){ d34(bb 0 insn -1) }u127(13){ d41(bb 0 insn -1) }u128(25){ d118(bb 0 insn -1) }u129(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 182 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 182 183 184 185
;; live  kill	
;; rd  in  	(48)
8, 18, 26, 33, 34, 40, 41, 111, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 718, 719, 720
;; rd  gen 	(5)
110, 678, 679, 680, 681
;; rd  kill	(29)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 678, 679, 680, 681
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(52)
8, 18, 26, 33, 34, 40, 41, 110, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 109
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 111
;;      reg 182 { d678(bb 14 insn 109) }
;;   UD chains for insn luid 2 uid 112
;;      reg 183 { d679(bb 14 insn 111) }
;;   UD chains for insn luid 3 uid 113
;;      reg 184 { d680(bb 14 insn 112) }
;;   UD chains for insn luid 4 uid 114
;;      reg 185 { d681(bb 14 insn 113) }
;;   UD chains for insn luid 5 uid 115
;;      reg 24 { d110(bb 14 insn 114) }

( 14 )->[15]->( 16 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u136(11){ d34(bb 0 insn -1) }u137(13){ d41(bb 0 insn -1) }u138(25){ d118(bb 0 insn -1) }u139(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 133 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 133 186
;; live  kill	
;; rd  in  	(52)
8, 18, 26, 33, 34, 40, 41, 110, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 718, 719, 720
;; rd  gen 	(3)
109, 625, 682
;; rd  kill	(27)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 625, 682
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 143
;; rd  out 	(54)
8, 18, 26, 33, 34, 40, 41, 109, 118, 119, 625, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 117
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 119
;;      reg 186 { d682(bb 15 insn 117) }
;;   eq_note reg 186 { }
;;   UD chains for insn luid 2 uid 120
;;      reg 133 { d625(bb 15 insn 119) }
;;   UD chains for insn luid 3 uid 121
;;      reg 24 { d109(bb 15 insn 120) }

( 15 )->[16]->( 31 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u145(11){ d34(bb 0 insn -1) }u146(13){ d41(bb 0 insn -1) }u147(25){ d118(bb 0 insn -1) }u148(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 143
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(54)
8, 18, 26, 33, 34, 40, 41, 109, 118, 119, 625, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 718, 719, 720
;; rd  gen 	(1)
108
;; rd  kill	(25)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(54)
8, 18, 26, 33, 34, 40, 41, 108, 118, 119, 625, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 123
;;      reg 133 { d625(bb 15 insn 119) }
;;   UD chains for insn luid 1 uid 124
;;      reg 24 { d108(bb 16 insn 123) }

( 14 15 16 )->[17]->( 18 19 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u151(11){ d34(bb 0 insn -1) }u152(13){ d41(bb 0 insn -1) }u153(25){ d118(bb 0 insn -1) }u154(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 188 189 190 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 24 [cc] 134 188 189 190 191
;; live  kill	 14 [lr]
;; rd  in  	(56)
8, 18, 26, 33, 34, 40, 41, 108, 109, 110, 118, 119, 625, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 718, 719, 720
;; rd  gen 	(7)
6, 106, 626, 683, 684, 686, 687
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 42, 43, 44, 45, 46, 47, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 626, 683, 686, 687
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(59)
6, 18, 26, 33, 34, 40, 41, 106, 118, 119, 625, 626, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 127
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 128
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 188 { d683(bb 17 insn 127) }
;;   UD chains for insn luid 2 uid 129
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 130
;;      reg 190 { d686(bb 17 insn 129) }
;;   UD chains for insn luid 5 uid 132
;;      reg 191 { d687(bb 17 insn 131) }
;;      reg 189 read/write { d685(bb 17 insn 130) }
;;   UD chains for insn luid 6 uid 133
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 189 { d685(bb 17 insn 130) d684(bb 17 insn 132) }
;;   UD chains for insn luid 7 uid 134
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 135
;;      reg 13 { d41(bb 0 insn -1) }
;;      reg 0 { d7(bb 17 insn 134) }
;;   UD chains for insn luid 9 uid 136
;;      reg 0 { d6(bb 17 insn 135) }
;;   UD chains for insn luid 10 uid 137
;;      reg 134 { d626(bb 17 insn 136) }
;;   UD chains for insn luid 11 uid 138
;;      reg 24 { d106(bb 17 insn 137) }

( 17 )->[18]->( 19 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u170(11){ d34(bb 0 insn -1) }u171(13){ d41(bb 0 insn -1) }u172(25){ d118(bb 0 insn -1) }u173(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 193 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 193 194
;; live  kill	
;; rd  in  	(59)
6, 18, 26, 33, 34, 40, 41, 106, 118, 119, 625, 626, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 718, 719, 720
;; rd  gen 	(2)
688, 689
;; rd  kill	(2)
688, 689
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(61)
6, 18, 26, 33, 34, 40, 41, 106, 118, 119, 625, 626, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 140
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 143
;;      reg 193 { d688(bb 18 insn 140) }
;;   UD chains for insn luid 2 uid 145
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 194 { d689(bb 18 insn 143) }

( 17 18 )->[19]->( 23 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u178(11){ d34(bb 0 insn -1) }u179(13){ d41(bb 0 insn -1) }u180(25){ d118(bb 0 insn -1) }u181(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 135 136 140 141 197 198 200 201 202 203 204 205 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 135 136 140 141 197 198 200 201 202 203 204 205 206
;; live  kill	
;; rd  in  	(61)
6, 18, 26, 33, 34, 40, 41, 106, 118, 119, 625, 626, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 718, 719, 720
;; rd  gen 	(14)
105, 627, 628, 634, 635, 690, 691, 692, 693, 695, 696, 698, 699, 700
;; rd  kill	(36)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 627, 628, 634, 635, 690, 691, 692, 695, 698, 699, 700
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 136 140 141 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 148
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 150
;;      reg 197 { d690(bb 19 insn 148) }
;;   UD chains for insn luid 2 uid 152
;;      reg 198 { d691(bb 19 insn 150) }
;;   UD chains for insn luid 3 uid 153
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 154
;;      reg 202 { d695(bb 19 insn 153) }
;;   UD chains for insn luid 5 uid 155
;;      reg 200 { d692(bb 19 insn 152) }
;;      reg 201 read/write { d694(bb 19 insn 154) }
;;   UD chains for insn luid 6 uid 156
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 201 { d694(bb 19 insn 154) d693(bb 19 insn 155) }
;;   UD chains for insn luid 7 uid 157
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 8 uid 158
;;      reg 204 { d698(bb 19 insn 157) }
;;   UD chains for insn luid 9 uid 159
;;      reg 203 read/write { d697(bb 19 insn 158) }
;;   UD chains for insn luid 10 uid 160
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 203 { d697(bb 19 insn 158) d696(bb 19 insn 159) }
;;   UD chains for insn luid 11 uid 161
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 13 uid 163
;;      reg 205 { d699(bb 19 insn 161) }
;;   eq_note reg 205 { }
;;   UD chains for insn luid 14 uid 167
;;      reg 141 { d635(bb 19 insn 163) }
;;      reg 206 { d700(bb 19 insn 162) }
;;   eq_note reg 141 { }
;;   UD chains for insn luid 15 uid 282
;;      reg 24 { d93(bb 19 insn 167) }
;;   UD chains for insn luid 16 uid 178
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 17 uid 179
;;      reg 135 { d627(bb 19 insn 282) }
;;      reg 140 { d634(bb 19 insn 178) }
;;   UD chains for insn luid 18 uid 180
;;      reg 136 { d628(bb 19 insn 179) }
;;   UD chains for insn luid 19 uid 181
;;      reg 24 { d105(bb 19 insn 180) }

( 19 )->[20]->( 25 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u208(11){ d34(bb 0 insn -1) }u209(13){ d41(bb 0 insn -1) }u210(25){ d118(bb 0 insn -1) }u211(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 136 140 141 143
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  gen 	
;; live  kill	
;; rd  in  	(74)
6, 18, 26, 33, 34, 40, 41, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 183
;;      reg 24 { d105(bb 19 insn 180) }

( 20 )->[21]->( 22 31 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u213(11){ d34(bb 0 insn -1) }u214(13){ d41(bb 0 insn -1) }u215(25){ d118(bb 0 insn -1) }u216(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(74)
6, 18, 26, 33, 34, 40, 41, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(1)
104
;; rd  kill	(25)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 104, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 184
;;      reg 136 { d628(bb 19 insn 179) }
;;   UD chains for insn luid 1 uid 185
;;      reg 24 { d104(bb 21 insn 184) }

( 21 )->[22]->( 24 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ d34(bb 0 insn -1) }u-1(13){ d41(bb 0 insn -1) }u-1(25){ d118(bb 0 insn -1) }u-1(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  gen 	
;; live  kill	
;; rd  in  	(74)
6, 18, 26, 33, 34, 40, 41, 104, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 104, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }

( 19 )->[23]->( 25 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u219(11){ d34(bb 0 insn -1) }u220(13){ d41(bb 0 insn -1) }u221(25){ d118(bb 0 insn -1) }u222(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(74)
6, 18, 26, 33, 34, 40, 41, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(1)
103
;; rd  kill	(25)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 103, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 190
;;      reg 141 { d635(bb 19 insn 163) }
;;   UD chains for insn luid 1 uid 191
;;      reg 24 { d103(bb 23 insn 190) }

( 23 22 )->[24]->( 25 31 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u225(11){ d34(bb 0 insn -1) }u226(13){ d41(bb 0 insn -1) }u227(25){ d118(bb 0 insn -1) }u228(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(75)
6, 18, 26, 33, 34, 40, 41, 103, 104, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(1)
102
;; rd  kill	(25)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 102, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 194
;;      reg 141 { d635(bb 19 insn 163) }
;;   UD chains for insn luid 1 uid 195
;;      reg 24 { d102(bb 24 insn 194) }

( 24 23 20 )->[25]->( 26 32 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u231(11){ d34(bb 0 insn -1) }u232(13){ d41(bb 0 insn -1) }u233(25){ d118(bb 0 insn -1) }u234(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 143
;; lr  def 	 24 [cc] 210 211 213 214 215 216 217 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 143
;; live  gen 	 24 [cc] 210 211 213 214 215 216 217 219
;; live  kill	
;; rd  in  	(76)
6, 18, 26, 33, 34, 40, 41, 102, 103, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(9)
101, 701, 702, 703, 704, 705, 706, 708, 709
;; rd  kill	(32)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 701, 702, 703, 704, 705, 706, 709
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(82)
6, 18, 26, 33, 34, 40, 41, 101, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 198
;;      reg 135 { d627(bb 19 insn 282) }
;;   UD chains for insn luid 1 uid 199
;;      reg 140 { d634(bb 19 insn 178) }
;;      reg 210 { d701(bb 25 insn 198) }
;;   UD chains for insn luid 2 uid 200
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 211 { d702(bb 25 insn 199) }
;;   UD chains for insn luid 3 uid 201
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 203
;;      reg 213 { d703(bb 25 insn 201) }
;;   UD chains for insn luid 5 uid 204
;;      reg 214 { d704(bb 25 insn 203) }
;;   UD chains for insn luid 6 uid 205
;;      reg 136 { d628(bb 19 insn 179) }
;;      reg 215 { d705(bb 25 insn 204) }
;;   UD chains for insn luid 7 uid 207
;;      reg 213 { d703(bb 25 insn 201) }
;;   UD chains for insn luid 8 uid 208
;;      reg 216 { d706(bb 25 insn 205) }
;;      reg 217 read/write { d707(bb 25 insn 207) }
;;   UD chains for insn luid 9 uid 209
;;      reg 143 { d636(bb 2 insn 2) }
;;      reg 217 { d708(bb 25 insn 208) d707(bb 25 insn 207) }
;;   UD chains for insn luid 10 uid 210
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 11 uid 211
;;      reg 219 { d709(bb 25 insn 210) }
;;   UD chains for insn luid 12 uid 212
;;      reg 24 { d101(bb 25 insn 211) }

( 25 )->[26]->( 29 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u253(11){ d34(bb 0 insn -1) }u254(13){ d41(bb 0 insn -1) }u255(25){ d118(bb 0 insn -1) }u256(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 24 [cc] 139
;; live  kill	 14 [lr]
;; rd  in  	(82)
6, 18, 26, 33, 34, 40, 41, 101, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720
;; rd  gen 	(3)
4, 99, 633
;; rd  kill	(43)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 42, 43, 44, 45, 46, 47, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 633
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(83)
4, 18, 26, 33, 34, 40, 41, 99, 118, 119, 625, 626, 627, 628, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 214
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 215
;;      reg 13 { d41(bb 0 insn -1) }
;;      reg 0 { d5(bb 26 insn 214) }
;;   UD chains for insn luid 2 uid 216
;;      reg 0 { d4(bb 26 insn 215) }
;;   UD chains for insn luid 3 uid 217
;;      reg 139 { d633(bb 26 insn 216) }
;;   UD chains for insn luid 4 uid 218
;;      reg 24 { d99(bb 26 insn 217) }

( 26 )->[27]->( 29 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u263(11){ d34(bb 0 insn -1) }u264(13){ d41(bb 0 insn -1) }u265(25){ d118(bb 0 insn -1) }u266(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 24 [cc] 138
;; live  kill	 14 [lr]
;; rd  in  	(83)
4, 18, 26, 33, 34, 40, 41, 99, 118, 119, 625, 626, 627, 628, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720
;; rd  gen 	(3)
3, 97, 632
;; rd  kill	(43)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 42, 43, 44, 45, 46, 47, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 632
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(84)
3, 18, 26, 33, 34, 40, 41, 97, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 220
;;      reg 13 { d41(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 221
;;      reg 0 { d3(bb 27 insn 220) }
;;   UD chains for insn luid 2 uid 222
;;      reg 138 { d632(bb 27 insn 221) }
;;   UD chains for insn luid 3 uid 223
;;      reg 24 { d97(bb 27 insn 222) }

( 27 )->[28]->( 29 32 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u271(11){ d34(bb 0 insn -1) }u272(13){ d41(bb 0 insn -1) }u273(25){ d118(bb 0 insn -1) }u274(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 220
;; live  kill	
;; rd  in  	(84)
3, 18, 26, 33, 34, 40, 41, 97, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720
;; rd  gen 	(2)
96, 710
;; rd  kill	(26)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 710
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(85)
3, 18, 26, 33, 34, 40, 41, 96, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 225
;;      reg 143 { d636(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 226
;;      reg 220 { d710(bb 28 insn 225) }
;;   UD chains for insn luid 2 uid 227
;;      reg 24 { d96(bb 28 insn 226) }

( 27 28 26 )->[29]->( 30 31 )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u278(11){ d34(bb 0 insn -1) }u279(13){ d41(bb 0 insn -1) }u280(25){ d118(bb 0 insn -1) }u281(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 221 223 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 221 223 224 225 226
;; live  kill	
;; rd  in  	(88)
3, 4, 18, 26, 33, 34, 40, 41, 96, 97, 99, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 718, 719, 720
;; rd  gen 	(6)
95, 711, 712, 713, 714, 715
;; rd  kill	(30)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 711, 712, 713, 714, 715
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 221
;; rd  out 	(91)
3, 4, 18, 26, 33, 34, 40, 41, 95, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 231
;;      reg 221 { d711(bb 29 insn 230) }
;;   UD chains for insn luid 2 uid 233
;;      reg 223 { d712(bb 29 insn 231) }
;;   UD chains for insn luid 3 uid 234
;;      reg 224 { d713(bb 29 insn 233) }
;;   UD chains for insn luid 4 uid 235
;;      reg 225 { d714(bb 29 insn 234) }
;;   UD chains for insn luid 5 uid 236
;;      reg 226 { d715(bb 29 insn 235) }
;;   UD chains for insn luid 6 uid 237
;;      reg 24 { d95(bb 29 insn 236) }

( 29 )->[30]->( 33 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u288(11){ d34(bb 0 insn -1) }u289(13){ d41(bb 0 insn -1) }u290(25){ d118(bb 0 insn -1) }u291(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 221
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 221
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 137 231
;; live  kill	 14 [lr]
;; rd  in  	(91)
3, 4, 18, 26, 33, 34, 40, 41, 95, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720
;; rd  gen 	(2)
631, 716
;; rd  kill	(10)
42, 43, 44, 45, 46, 47, 629, 630, 631, 716
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; rd  out 	(93)
3, 4, 18, 26, 33, 34, 40, 41, 95, 118, 119, 625, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 245
;;      reg 13 { d41(bb 0 insn -1) }
;;      reg 0 { d0(bb 30 insn 242) }
;;      reg 1 { d11(bb 30 insn 243) }
;;      reg 2 { d19(bb 30 insn 244) }
;;   UD chains for insn luid 5 uid 249
;;      reg 221 { d711(bb 29 insn 230) }
;;      reg 231 { d716(bb 30 insn 247) }

( 8 24 12 29 21 13 16 2 7 )->[31]->( 33 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u298(11){ d34(bb 0 insn -1) }u299(13){ d41(bb 0 insn -1) }u300(25){ d118(bb 0 insn -1) }u301(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 137
;; live  kill	
;; rd  in  	(101)
3, 4, 6, 8, 10, 18, 26, 33, 34, 40, 41, 47, 95, 102, 104, 108, 111, 112, 114, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720
;; rd  gen 	(1)
630
;; rd  kill	(3)
629, 630, 631
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(102)
3, 4, 6, 8, 10, 18, 26, 33, 34, 40, 41, 47, 95, 102, 104, 108, 111, 112, 114, 118, 119, 625, 626, 627, 628, 630, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }

( 25 28 )->[32]->( 33 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u302(11){ d34(bb 0 insn -1) }u303(13){ d41(bb 0 insn -1) }u304(25){ d118(bb 0 insn -1) }u305(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137
;; live  kill	
;; rd  in  	(87)
3, 6, 18, 26, 33, 34, 40, 41, 96, 101, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 718, 719, 720
;; rd  gen 	(1)
629
;; rd  kill	(3)
629, 630, 631
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; rd  out 	(88)
3, 6, 18, 26, 33, 34, 40, 41, 96, 101, 118, 119, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }

( 32 30 31 )->[33]->( 1 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u306(11){ d34(bb 0 insn -1) }u307(13){ d41(bb 0 insn -1) }u308(25){ d118(bb 0 insn -1) }u309(26){ d119(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(107)
3, 4, 6, 8, 10, 18, 26, 33, 34, 40, 41, 47, 95, 96, 101, 102, 104, 108, 111, 112, 114, 118, 119, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720
;; rd  gen 	(1)
1
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(103)
1, 18, 26, 33, 34, 40, 41, 47, 95, 96, 101, 102, 104, 108, 111, 112, 114, 118, 119, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }
;;   reg 26 { d119(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 267
;;      reg 137 { d631(bb 30 insn 250) d630(bb 31 insn 255) d629(bb 32 insn 260) }
;;   UD chains for insn luid 1 uid 273
;;      reg 0 { d1(bb 33 insn 267) }

( 33 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u312(0){ d1(bb 33 insn 267) }u313(11){ d34(bb 0 insn -1) }u314(13){ d41(bb 0 insn -1) }u315(14){ d47(bb 0 insn -1) }u316(25){ d118(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(103)
1, 18, 26, 33, 34, 40, 41, 47, 95, 96, 101, 102, 104, 108, 111, 112, 114, 118, 119, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(103)
1, 18, 26, 33, 34, 40, 41, 47, 95, 96, 101, 102, 104, 108, 111, 112, 114, 118, 119, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 33 insn 267) }
;;   reg 11 { d34(bb 0 insn -1) }
;;   reg 13 { d41(bb 0 insn -1) }
;;   reg 14 { d47(bb 0 insn -1) }
;;   reg 25 { d118(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 8 to worklist
  Adding insn 287 to worklist
  Adding insn 17 to worklist
  Adding insn 289 to worklist
  Adding insn 26 to worklist
  Adding insn 291 to worklist
  Adding insn 35 to worklist
  Adding insn 45 to worklist
  Adding insn 56 to worklist
  Adding insn 57 to worklist
  Adding insn 293 to worklist
  Adding insn 67 to worklist
  Adding insn 295 to worklist
  Adding insn 76 to worklist
  Adding insn 297 to worklist
  Adding insn 85 to worklist
  Adding insn 101 to worklist
  Adding insn 94 to worklist
  Adding insn 106 to worklist
  Adding insn 115 to worklist
  Adding insn 121 to worklist
  Adding insn 124 to worklist
  Adding insn 138 to worklist
  Adding insn 133 to worklist
  Adding insn 128 to worklist
  Adding insn 145 to worklist
  Adding insn 181 to worklist
  Adding insn 160 to worklist
  Adding insn 156 to worklist
  Adding insn 183 to worklist
  Adding insn 185 to worklist
  Adding insn 300 to worklist
  Adding insn 191 to worklist
  Adding insn 195 to worklist
  Adding insn 212 to worklist
  Adding insn 209 to worklist
  Adding insn 200 to worklist
  Adding insn 218 to worklist
  Adding insn 223 to worklist
  Adding insn 220 to worklist
  Adding insn 227 to worklist
  Adding insn 237 to worklist
  Adding insn 302 to worklist
  Adding insn 249 to worklist
  Adding insn 245 to worklist
  Adding insn 304 to worklist
  Adding insn 273 to worklist
Finished finding needed instructions:
  Adding insn 267 to worklist
Processing use of (reg 137 [ ret ]) in insn 267:
  Adding insn 250 to worklist
  Adding insn 255 to worklist
  Adding insn 260 to worklist
Processing use of (reg 0 r0) in insn 273:
Processing use of (reg 13 sp) in insn 245:
Processing use of (reg 0 r0) in insn 245:
  Adding insn 242 to worklist
Processing use of (reg 1 r1) in insn 245:
  Adding insn 243 to worklist
Processing use of (reg 2 r2) in insn 245:
  Adding insn 244 to worklist
Processing use of (reg 221) in insn 249:
  Adding insn 230 to worklist
Processing use of (subreg (reg 231) 0) in insn 249:
  Adding insn 247 to worklist
Processing use of (reg 24 cc) in insn 237:
  Adding insn 236 to worklist
Processing use of (reg 226) in insn 236:
  Adding insn 235 to worklist
Processing use of (reg 225) in insn 235:
  Adding insn 234 to worklist
Processing use of (subreg (reg 224) 0) in insn 234:
  Adding insn 233 to worklist
Processing use of (reg 223 [ __warned ]) in insn 233:
  Adding insn 231 to worklist
Processing use of (reg 221) in insn 231:
Processing use of (reg 24 cc) in insn 227:
  Adding insn 226 to worklist
Processing use of (reg 220 [ <variable>.hw.D.22650.D.22649.bp_target ]) in insn 226:
  Adding insn 225 to worklist
Processing use of (reg 143 [ bp ]) in insn 225:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 220:
Processing use of (reg 24 cc) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 138 [ D.24010 ]) in insn 222:
  Adding insn 221 to worklist
Processing use of (reg 0 r0) in insn 221:
Processing use of (reg 24 cc) in insn 218:
  Adding insn 217 to worklist
Processing use of (reg 139 [ D.24008 ]) in insn 217:
  Adding insn 216 to worklist
Processing use of (reg 0 r0) in insn 216:
  Adding insn 215 to worklist
Processing use of (reg 13 sp) in insn 215:
Processing use of (reg 0 r0) in insn 215:
  Adding insn 214 to worklist
Processing use of (reg 143 [ bp ]) in insn 214:
Processing use of (reg 143 [ bp ]) in insn 200:
Processing use of (reg 211) in insn 200:
  Adding insn 199 to worklist
Processing use of (reg 140 [ D.23992 ]) in insn 199:
  Adding insn 178 to worklist
Processing use of (reg 210) in insn 199:
  Adding insn 198 to worklist
Processing use of (reg 135 [ alignment_mask ]) in insn 198:
  Adding insn 282 to worklist
Processing use of (reg 24 cc) in insn 282:
  Adding insn 167 to worklist
Processing use of (reg 141 [ D.23989 ]) in insn 167:
  Adding insn 163 to worklist
Processing use of (reg 206) in insn 167:
  Adding insn 162 to worklist
Processing use of (reg 205) in insn 163:
  Adding insn 161 to worklist
Processing use of (reg 143 [ bp ]) in insn 161:
Processing use of (reg 143 [ bp ]) in insn 178:
Processing use of (reg 143 [ bp ]) in insn 209:
Processing use of (reg 217) in insn 209:
  Adding insn 208 to worklist
  Adding insn 207 to worklist
Processing use of (subreg (reg 213) 0) in insn 207:
  Adding insn 201 to worklist
Processing use of (reg 143 [ bp ]) in insn 201:
Processing use of (reg 216) in insn 208:
  Adding insn 205 to worklist
Processing use of (subreg (reg 217) 0) in insn 208:
Processing use of (reg 136 [ offset ]) in insn 205:
  Adding insn 179 to worklist
Processing use of (reg 215) in insn 205:
  Adding insn 204 to worklist
Processing use of (reg 214) in insn 204:
  Adding insn 203 to worklist
Processing use of (reg 213) in insn 203:
Processing use of (reg 135 [ alignment_mask ]) in insn 179:
Processing use of (reg 140 [ D.23992 ]) in insn 179:
Processing use of (reg 24 cc) in insn 212:
  Adding insn 211 to worklist
Processing use of (reg 219 [ <variable>.overflow_handler ]) in insn 211:
  Adding insn 210 to worklist
Processing use of (reg 143 [ bp ]) in insn 210:
Processing use of (reg 24 cc) in insn 195:
  Adding insn 194 to worklist
Processing use of (reg 141 [ D.23989 ]) in insn 194:
Processing use of (reg 24 cc) in insn 191:
  Adding insn 190 to worklist
Processing use of (reg 141 [ D.23989 ]) in insn 190:
Processing use of (reg 24 cc) in insn 185:
  Adding insn 184 to worklist
Processing use of (reg 136 [ offset ]) in insn 184:
Processing use of (reg 24 cc) in insn 183:
  Adding insn 180 to worklist
Processing use of (reg 136 [ offset ]) in insn 180:
Processing use of (reg 143 [ bp ]) in insn 156:
Processing use of (reg 201) in insn 156:
  Adding insn 154 to worklist
  Adding insn 155 to worklist
Processing use of (reg 200) in insn 155:
  Adding insn 152 to worklist
Processing use of (subreg (reg 201) 0) in insn 155:
Processing use of (reg 198) in insn 152:
  Adding insn 150 to worklist
Processing use of (reg 197) in insn 150:
  Adding insn 148 to worklist
Processing use of (reg 143 [ bp ]) in insn 148:
Processing use of (subreg (reg 202) 0) in insn 154:
  Adding insn 153 to worklist
Processing use of (reg 143 [ bp ]) in insn 153:
Processing use of (reg 143 [ bp ]) in insn 160:
Processing use of (reg 203) in insn 160:
  Adding insn 158 to worklist
  Adding insn 159 to worklist
Processing use of (subreg (reg 203) 0) in insn 159:
Processing use of (subreg (reg 204) 0) in insn 158:
  Adding insn 157 to worklist
Processing use of (reg 143 [ bp ]) in insn 157:
Processing use of (reg 24 cc) in insn 181:
Processing use of (reg 143 [ bp ]) in insn 145:
Processing use of (subreg (reg 194) 0) in insn 145:
  Adding insn 143 to worklist
Processing use of (reg 193) in insn 143:
  Adding insn 140 to worklist
Processing use of (reg 143 [ bp ]) in insn 140:
Processing use of (reg 143 [ bp ]) in insn 128:
Processing use of (reg 188 [ <variable>.attr.D.4023.bp_addr ]) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 143 [ bp ]) in insn 127:
Processing use of (reg 143 [ bp ]) in insn 133:
Processing use of (reg 189) in insn 133:
  Adding insn 130 to worklist
  Adding insn 132 to worklist
Processing use of (reg 191) in insn 132:
  Adding insn 131 to worklist
Processing use of (subreg (reg 189) 0) in insn 132:
Processing use of (subreg (reg 190) 0) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 143 [ bp ]) in insn 129:
Processing use of (reg 24 cc) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 134 [ D.24401 ]) in insn 137:
  Adding insn 136 to worklist
Processing use of (reg 0 r0) in insn 136:
  Adding insn 135 to worklist
Processing use of (reg 13 sp) in insn 135:
Processing use of (reg 0 r0) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 143 [ bp ]) in insn 134:
Processing use of (reg 24 cc) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 133 [ D.24404 ]) in insn 123:
  Adding insn 119 to worklist
Processing use of (reg 186) in insn 119:
  Adding insn 117 to worklist
Processing use of (reg 143 [ bp ]) in insn 117:
Processing use of (reg 24 cc) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 133 [ D.24404 ]) in insn 120:
Processing use of (reg 24 cc) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 185) in insn 114:
  Adding insn 113 to worklist
Processing use of (reg 184) in insn 113:
  Adding insn 112 to worklist
Processing use of (subreg (reg 183) 0) in insn 112:
  Adding insn 111 to worklist
Processing use of (reg 182) in insn 111:
  Adding insn 109 to worklist
Processing use of (reg 143 [ bp ]) in insn 109:
Processing use of (reg 24 cc) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 180 [ max_watchpoint_len ]) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 179) in insn 104:
  Adding insn 103 to worklist
Processing use of (reg 143 [ bp ]) in insn 94:
Processing use of (reg 171) in insn 94:
  Adding insn 91 to worklist
  Adding insn 93 to worklist
Processing use of (reg 173) in insn 93:
  Adding insn 92 to worklist
Processing use of (subreg (reg 171) 0) in insn 93:
Processing use of (subreg (reg 172) 0) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 143 [ bp ]) in insn 90:
Processing use of (reg 24 cc) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 178) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 177) in insn 99:
  Adding insn 98 to worklist
Processing use of (subreg (reg 176) 0) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 175) in insn 97:
  Adding insn 95 to worklist
Processing use of (reg 237) in insn 95:
  Adding insn 286 to worklist
Processing use of (subreg (reg 235) 0) in insn 286:
  Adding insn 283 to worklist
Processing use of (reg 235) in insn 283:
  Adding insn 285 to worklist
Processing use of (reg 236) in insn 285:
  Adding insn 284 to worklist
Processing use of (reg 171) in insn 284:
Processing use of (reg 143 [ bp ]) in insn 85:
Processing use of (reg 168) in insn 85:
  Adding insn 82 to worklist
  Adding insn 84 to worklist
Processing use of (reg 170) in insn 84:
  Adding insn 83 to worklist
Processing use of (subreg (reg 168) 0) in insn 84:
Processing use of (subreg (reg 169) 0) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 143 [ bp ]) in insn 81:
Processing use of (reg 143 [ bp ]) in insn 76:
Processing use of (reg 165) in insn 76:
  Adding insn 73 to worklist
  Adding insn 75 to worklist
Processing use of (reg 167) in insn 75:
  Adding insn 74 to worklist
Processing use of (subreg (reg 165) 0) in insn 75:
Processing use of (subreg (reg 166) 0) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 143 [ bp ]) in insn 72:
Processing use of (reg 143 [ bp ]) in insn 67:
Processing use of (reg 162) in insn 67:
  Adding insn 64 to worklist
  Adding insn 66 to worklist
Processing use of (reg 164) in insn 66:
  Adding insn 65 to worklist
Processing use of (subreg (reg 162) 0) in insn 66:
Processing use of (subreg (reg 163) 0) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 143 [ bp ]) in insn 63:
Processing use of (subreg (reg 158) 0) in insn 57:
  Adding insn 50 to worklist
Processing use of (subreg (reg 158) 0) in insn 57:
Processing use of (reg 159 [ <variable>.attr.D.4027.bp_len ]) in insn 50:
  Adding insn 48 to worklist
Processing use of (reg 160) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 143 [ bp ]) in insn 48:
Processing use of (reg 24 cc) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 161) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 0 r0) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 13 sp) in insn 53:
Processing use of (reg 0 r0) in insn 53:
  Adding insn 51 to worklist
Processing use of (reg 1 r1) in insn 53:
Processing use of (reg 2 r2) in insn 53:
  Adding insn 52 to worklist
Processing use of (reg 3 r3) in insn 53:
Processing use of (reg 158) in insn 51:
Processing use of (reg 143 [ bp ]) in insn 45:
Processing use of (subreg (reg 156) 0) in insn 45:
  Adding insn 43 to worklist
Processing use of (reg 155) in insn 43:
  Adding insn 40 to worklist
Processing use of (reg 143 [ bp ]) in insn 40:
Processing use of (reg 143 [ bp ]) in insn 35:
Processing use of (reg 151) in insn 35:
  Adding insn 32 to worklist
  Adding insn 34 to worklist
Processing use of (reg 153) in insn 34:
  Adding insn 33 to worklist
Processing use of (subreg (reg 151) 0) in insn 34:
Processing use of (subreg (reg 152) 0) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 143 [ bp ]) in insn 31:
Processing use of (reg 143 [ bp ]) in insn 26:
Processing use of (reg 148) in insn 26:
  Adding insn 23 to worklist
  Adding insn 25 to worklist
Processing use of (reg 150) in insn 25:
  Adding insn 24 to worklist
Processing use of (subreg (reg 148) 0) in insn 25:
Processing use of (subreg (reg 149) 0) in insn 23:
  Adding insn 22 to worklist
Processing use of (reg 143 [ bp ]) in insn 22:
Processing use of (reg 143 [ bp ]) in insn 17:
Processing use of (reg 146) in insn 17:
  Adding insn 15 to worklist
  Adding insn 16 to worklist
Processing use of (subreg (reg 146) 0) in insn 16:
Processing use of (subreg (reg 147) 0) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 143 [ bp ]) in insn 14:
Processing use of (reg 145) in insn 8:
  Adding insn 7 to worklist
Processing use of (reg 145) in insn 8:
Processing use of (reg 144 [ <variable>.attr.bp_type ]) in insn 7:
  Adding insn 6 to worklist
Processing use of (reg 143 [ bp ]) in insn 6:


arch_validate_hwbkpt_settings

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={11d,11u} r1={8d,2u} r2={8d,2u} r3={7d,1u} r11={1d,33u} r12={6d} r13={1d,38u} r14={6d,1u} r15={5d} r16={5d} r17={5d} r18={5d} r19={5d} r20={5d} r21={5d} r22={5d} r23={5d} r24={25d,18u} r25={1d,33u} r26={1d,32u} r27={5d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={5d} r38={5d} r39={5d} r40={5d} r41={5d} r42={5d} r43={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} r81={5d} r82={5d} r83={5d} r84={5d} r85={5d} r86={5d} r87={5d} r88={5d} r89={5d} r90={5d} r91={5d} r92={5d} r93={5d} r94={5d} r95={5d} r96={5d} r97={5d} r98={5d} r99={5d} r100={5d} r101={5d} r102={5d} r103={5d} r104={5d} r105={5d} r106={5d} r107={5d} r108={5d} r109={5d} r110={5d} r111={5d} r112={5d} r113={5d} r114={5d} r115={5d} r116={5d} r117={5d} r118={5d} r119={5d} r120={5d} r121={5d} r122={5d} r123={5d} r124={5d} r125={5d} r126={5d} r127={5d} r133={1d,2u} r134={1d,1u} r135={1d,2u} r136={1d,3u} r137={3d,1u} r138={1d,1u} r139={1d,1u} r140={1d,2u} r141={1d,3u,1d} r143={1d,40u} r144={1d,1u} r145={1d,2u} r146={2d,2u} r147={1d,1u} r148={2d,2u} r149={1d,1u} r150={1d,1u} r151={2d,2u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r158={1d,3u} r159={1d,1u,1d} r160={1d,1u} r161={1d,1u} r162={2d,2u} r163={1d,1u} r164={1d,1u} r165={2d,2u} r166={1d,1u} r167={1d,1u} r168={2d,2u} r169={1d,1u} r170={1d,1u} r171={2d,3u} r172={1d,1u} r173={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u,1d} r188={1d,1u} r189={2d,2u} r190={1d,1u} r191={1d,1u} r193={1d,1u} r194={1d,1u} r197={1d,1u} r198={1d,1u} r200={1d,1u} r201={2d,2u} r202={1d,1u} r203={2d,2u} r204={1d,1u} r205={1d,1u,1d} r206={1d,1u} r210={1d,1u} r211={1d,1u} r213={1d,2u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={2d,2u} r219={1d,1u} r220={1d,1u} r221={1d,2u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r231={1d,1u} r235={2d,2u} r236={1d,1u} r237={1d,1u} 
;;    total ref usage 1042{721d,317u,4e} in 171{166 regular + 5 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624
0[0,11] 1[11,8] 2[19,8] 3[27,7] 11[34,1] 12[35,6] 13[41,1] 14[42,6] 15[48,5] 16[53,5] 17[58,5] 18[63,5] 19[68,5] 20[73,5] 21[78,5] 22[83,5] 23[88,5] 24[93,25] 25[118,1] 26[119,1] 27[120,5] 28[125,5] 29[130,5] 30[135,5] 31[140,5] 32[145,5] 33[150,5] 34[155,5] 35[160,5] 36[165,5] 37[170,5] 38[175,5] 39[180,5] 40[185,5] 41[190,5] 42[195,5] 43[200,5] 44[205,5] 45[210,5] 46[215,5] 47[220,5] 48[225,5] 49[230,5] 50[235,5] 51[240,5] 52[245,5] 53[250,5] 54[255,5] 55[260,5] 56[265,5] 57[270,5] 58[275,5] 59[280,5] 60[285,5] 61[290,5] 62[295,5] 63[300,5] 64[305,5] 65[310,5] 66[315,5] 67[320,5] 68[325,5] 69[330,5] 70[335,5] 71[340,5] 72[345,5] 73[350,5] 74[355,5] 75[360,5] 76[365,5] 77[370,5] 78[375,5] 79[380,5] 80[385,5] 81[390,5] 82[395,5] 83[400,5] 84[405,5] 85[410,5] 86[415,5] 87[420,5] 88[425,5] 89[430,5] 90[435,5] 91[440,5] 92[445,5] 93[450,5] 94[455,5] 95[460,5] 96[465,5] 97[470,5] 98[475,5] 99[480,5] 100[485,5] 101[490,5] 102[495,5] 103[500,5] 104[505,5] 105[510,5] 106[515,5] 107[520,5] 108[525,5] 109[530,5] 110[535,5] 111[540,5] 112[545,5] 113[550,5] 114[555,5] 115[560,5] 116[565,5] 117[570,5] 118[575,5] 119[580,5] 120[585,5] 121[590,5] 122[595,5] 123[600,5] 124[605,5] 125[610,5] 126[615,5] 127[620,5] 133[625,1] 134[626,1] 135[627,1] 136[628,1] 137[629,3] 138[632,1] 139[633,1] 140[634,1] 141[635,1] 143[636,1] 144[637,1] 145[638,1] 146[639,2] 147[641,1] 148[642,2] 149[644,1] 150[645,1] 151[646,2] 152[648,1] 153[649,1] 155[650,1] 156[651,1] 158[652,1] 159[653,1] 160[654,1] 161[655,1] 162[656,2] 163[658,1] 164[659,1] 165[660,2] 166[662,1] 167[663,1] 168[664,2] 169[666,1] 170[667,1] 171[668,2] 172[670,1] 173[671,1] 175[672,1] 176[673,1] 177[674,1] 178[675,1] 179[676,1] 180[677,1] 182[678,1] 183[679,1] 184[680,1] 185[681,1] 186[682,1] 188[683,1] 189[684,2] 190[686,1] 191[687,1] 193[688,1] 194[689,1] 197[690,1] 198[691,1] 200[692,1] 201[693,2] 202[695,1] 203[696,2] 204[698,1] 205[699,1] 206[700,1] 210[701,1] 211[702,1] 213[703,1] 214[704,1] 215[705,1] 216[706,1] 217[707,2] 219[709,1] 220[710,1] 221[711,1] 223[712,1] 224[713,1] 225[714,1] 226[715,1] 231[716,1] 235[717,2] 236[719,1] 237[720,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 143 144 145
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 143 144 145
;; live  kill	 24 [cc]
;; rd  in  	(10)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119
;; rd  gen 	(3)
636, 637, 638
;; rd  kill	(28)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 636, 637, 638

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/hw_breakpoint.c:594 (set (reg/v/f:SI 143 [ bp ])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ bp ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(insn 6 3 7 2 arch/arm/kernel/hw_breakpoint.c:525 (set (reg:SI 144 [ <variable>.attr.bp_type ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 172 [0xac])) [0 <variable>.attr.bp_type+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:525 (set (reg:SI 145)
        (plus:SI (reg:SI 144 [ <variable>.attr.bp_type ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 144 [ <variable>.attr.bp_type ])
        (nil)))

(jump_insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:525 (parallel [
            (set (pc)
                (if_then_else (leu (reg:SI 145)
                        (const_int 3 [0x3]))
                    (mem:SI (plus:SI (mult:SI (reg:SI 145)
                                (const_int 4 [0x4]))
                            (label_ref 9)) [0 S4 A32])
                    (label_ref 253)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 9))
        ]) 265 {arm_casesi_internal} (expr_list:REG_DEAD (reg:SI 145)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (insn_list:REG_LABEL_TARGET 253 (nil)))))
;; End of basic block 2 -> ( 31 4 5 6 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; rd  out 	(13)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638


;; Succ edge  31 [20.0%] 
;; Succ edge  4 [20.0%] 
;; Succ edge  5 [20.0%] 
;; Succ edge  6 [20.0%] 
;; Succ edge  3 [20.0%] 

;; Insn is not within a basic block
(code_label 9 8 10 253 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 10 9 11 arch/arm/kernel/hw_breakpoint.c:525 (addr_vec:SI [
            (label_ref:SI 20)
            (label_ref:SI 29)
            (label_ref:SI 38)
            (label_ref:SI 12)
        ]) -1 (nil))

(barrier 11 10 12)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 146 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 146 147
;; live  kill	
;; rd  in  	(13)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638
;; rd  gen 	(2)
639, 641
;; rd  kill	(1)
641

;; Pred edge  2 [20.0%] 
(code_label 12 11 13 3 252 "" [1 uses])

(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 14 13 15 3 arch/arm/kernel/hw_breakpoint.c:527 (set (reg:SI 147)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 15 14 16 3 arch/arm/kernel/hw_breakpoint.c:527 (set (reg:QI 146)
        (subreg:QI (reg:SI 147) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 147)
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/hw_breakpoint.c:527 (set (zero_extract:SI (subreg:SI (reg:QI 146) 0)
            (const_int 2 [0x2])
            (const_int 3 [0x3]))
        (const_int 0 [0x0])) 76 {insv_zero} (nil))

(insn 17 16 287 3 arch/arm/kernel/hw_breakpoint.c:527 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 146)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 146)
        (nil)))

(jump_insn 287 17 288 3 (set (pc)
        (label_ref 46)) -1 (nil))
;; End of basic block 3 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(15)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638, 639, 641


;; Succ edge  7 [100.0%] 

(barrier 288 287 20)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u18(11){ }u19(13){ }u20(25){ }u21(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 148 149 150
;; live  kill	
;; rd  in  	(13)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638
;; rd  gen 	(3)
642, 644, 645
;; rd  kill	(2)
644, 645

;; Pred edge  2 [20.0%] 
(code_label 20 288 21 4 249 "" [1 uses])

(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 4 arch/arm/kernel/hw_breakpoint.c:530 (set (reg:SI 149)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 23 22 24 4 arch/arm/kernel/hw_breakpoint.c:530 (set (reg:QI 148)
        (subreg:QI (reg:SI 149) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 24 23 25 4 arch/arm/kernel/hw_breakpoint.c:530 (set (reg:SI 150)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 25 24 26 4 arch/arm/kernel/hw_breakpoint.c:530 (set (zero_extract:SI (subreg:SI (reg:QI 148) 0)
            (const_int 2 [0x2])
            (const_int 3 [0x3]))
        (reg:SI 150)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 150)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 26 25 289 4 arch/arm/kernel/hw_breakpoint.c:530 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 148)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 148)
        (nil)))

(jump_insn 289 26 290 4 (set (pc)
        (label_ref 46)) -1 (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(16)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638, 642, 644, 645


;; Succ edge  7 [100.0%] 

(barrier 290 289 29)

;; Start of basic block ( 2) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 151 152 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 151 152 153
;; live  kill	
;; rd  in  	(13)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638
;; rd  gen 	(3)
646, 648, 649
;; rd  kill	(2)
648, 649

;; Pred edge  2 [20.0%] 
(code_label 29 290 30 5 250 "" [1 uses])

(note 30 29 31 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 31 30 32 5 arch/arm/kernel/hw_breakpoint.c:533 (set (reg:SI 152)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 32 31 33 5 arch/arm/kernel/hw_breakpoint.c:533 (set (reg:QI 151)
        (subreg:QI (reg:SI 152) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 33 32 34 5 arch/arm/kernel/hw_breakpoint.c:533 (set (reg:SI 153)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 34 33 35 5 arch/arm/kernel/hw_breakpoint.c:533 (set (zero_extract:SI (subreg:SI (reg:QI 151) 0)
            (const_int 2 [0x2])
            (const_int 3 [0x3]))
        (reg:SI 153)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 153)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn 35 34 291 5 arch/arm/kernel/hw_breakpoint.c:533 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 151)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 151)
        (nil)))

(jump_insn 291 35 292 5 (set (pc)
        (label_ref 46)) -1 (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(16)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638, 646, 648, 649


;; Succ edge  7 [100.0%] 

(barrier 292 291 38)

;; Start of basic block ( 2) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u38(11){ }u39(13){ }u40(25){ }u41(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 155 156
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 155 156
;; live  kill	
;; rd  in  	(13)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638
;; rd  gen 	(2)
650, 651
;; rd  kill	(2)
650, 651

;; Pred edge  2 [20.0%] 
(code_label 38 292 39 6 251 "" [1 uses])

(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 43 6 arch/arm/kernel/hw_breakpoint.c:536 (set (reg:SI 155)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 43 40 45 6 arch/arm/kernel/hw_breakpoint.c:536 (set (reg:SI 156)
        (ior:SI (reg:SI 155)
            (const_int 24 [0x18]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 45 43 46 6 arch/arm/kernel/hw_breakpoint.c:536 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 215 [0xd7])) [0 S1 A8])
        (subreg:QI (reg:SI 156) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 156)
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(15)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638, 650, 651


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 3 4 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 158 159 160 161
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 24 [cc] 158 159 160 161
;; live  kill	 14 [lr] 24 [cc]
;; rd  in  	(23)
10, 18, 26, 33, 34, 40, 41, 47, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651
;; rd  gen 	(6)
8, 114, 652, 653, 654, 655
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 42, 43, 44, 45, 46, 47, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 652, 653, 654, 655

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%] 
(code_label 46 45 47 7 254 "" [3 uses])

(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:DI 159 [ <variable>.attr.D.4027.bp_len ])
        (mem/s/j:DI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 184 [0xb8])) [0 <variable>.attr.D.4027.bp_len+0 S8 A64])) 163 {*arm_movdi} (nil))

(insn 49 48 50 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:DI 160)
        (const_int -1 [0xffffffffffffffff])) 163 {*arm_movdi} (nil))

(insn 50 49 51 7 arch/arm/kernel/hw_breakpoint.c:543 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg:DI 159 [ <variable>.attr.D.4027.bp_len ])
                    (reg:DI 160)))
            (clobber (reg:CC 24 cc))
        ]) 1 {*arm_adddi3} (expr_list:REG_DEAD (reg:DI 160)
        (expr_list:REG_DEAD (reg:DI 159 [ <variable>.attr.D.4027.bp_len ])
            (expr_list:REG_UNUSED (reg:CC 24 cc)
                (expr_list:REG_EQUAL (plus:DI (reg:DI 159 [ <variable>.attr.D.4027.bp_len ])
                        (const_int -1 [0xffffffffffffffff]))
                    (nil))))))

(insn 51 50 52 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:DI 0 r0)
        (reg:DI 158)) 163 {*arm_movdi} (nil))

(insn 52 51 53 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:DI 2 r2)
        (const_int 7 [0x7])) 163 {*arm_movdi} (nil))

(call_insn/u 53 52 54 7 arch/arm/kernel/hw_breakpoint.c:543 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_ulcmp") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:DI 0 r0))
            (nil))))

(insn 54 53 55 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:SI 161)
        (plus:SI (reg:SI 0 r0)
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 55 54 56 7 arch/arm/kernel/hw_breakpoint.c:543 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 161)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(jump_insn 56 55 275 7 arch/arm/kernel/hw_breakpoint.c:543 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 31 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 158
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158
;; rd  out 	(27)
8, 18, 26, 33, 34, 40, 41, 114, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655


;; Succ edge  31 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143 158
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 158
;; live  gen 	
;; live  kill	 24 [cc]
;; rd  in  	(27)
8, 18, 26, 33, 34, 40, 41, 114, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;; rd  gen 	(0)

;; rd  kill	(25)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117

;; Pred edge  7 [50.0%]  (fallthru)
(note 275 56 57 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 57 275 58 8 arch/arm/kernel/hw_breakpoint.c:543 (parallel [
            (set (pc)
                (if_then_else (leu (subreg:SI (reg:DI 158) 0)
                        (const_int 7 [0x7]))
                    (mem:SI (plus:SI (mult:SI (subreg:SI (reg:DI 158) 0)
                                (const_int 4 [0x4]))
                            (label_ref 58)) [0 S4 A32])
                    (label_ref 253)))
            (clobber (reg:CC 24 cc))
            (use (label_ref 58))
        ]) 265 {arm_casesi_internal} (expr_list:REG_DEAD (reg:DI 158)
        (expr_list:REG_UNUSED (reg:CC 24 cc)
            (insn_list:REG_LABEL_TARGET 253 (nil)))))
;; End of basic block 8 -> ( 31 9 10 11 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(26)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655


;; Succ edge  31 [20.0%] 
;; Succ edge  9 [20.0%] 
;; Succ edge  10 [20.0%] 
;; Succ edge  11 [20.0%] 
;; Succ edge  12 [20.0%] 

;; Insn is not within a basic block
(code_label 58 57 59 259 "" [2 uses])

;; Insn is not within a basic block
(jump_insn 59 58 60 arch/arm/kernel/hw_breakpoint.c:543 (addr_vec:SI [
            (label_ref:SI 61)
            (label_ref:SI 70)
            (label_ref:SI 253)
            (label_ref:SI 79)
            (label_ref:SI 253)
            (label_ref:SI 253)
            (label_ref:SI 253)
            (label_ref:SI 88)
        ]) -1 (nil))

(barrier 60 59 61)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u69(11){ }u70(13){ }u71(25){ }u72(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 162 163 164
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 162 163 164
;; live  kill	
;; rd  in  	(26)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;; rd  gen 	(3)
656, 658, 659
;; rd  kill	(2)
658, 659

;; Pred edge  8 [20.0%] 
(code_label 61 60 62 9 255 "" [1 uses])

(note 62 61 63 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 9 arch/arm/kernel/hw_breakpoint.c:545 (set (reg:SI 163)
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 64 63 65 9 arch/arm/kernel/hw_breakpoint.c:545 (set (reg:HI 162)
        (subreg:HI (reg:SI 163) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 163)
        (nil)))

(insn 65 64 66 9 arch/arm/kernel/hw_breakpoint.c:545 (set (reg:SI 164)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 66 65 67 9 arch/arm/kernel/hw_breakpoint.c:545 (set (zero_extract:SI (subreg:SI (reg:HI 162) 0)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 164)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))

(insn 67 66 293 9 arch/arm/kernel/hw_breakpoint.c:545 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 214 [0xd6])) [0 S2 A16])
        (reg:HI 162)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 162)
        (nil)))

(jump_insn 293 67 294 9 (set (pc)
        (label_ref 107)) -1 (nil))
;; End of basic block 9 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(29)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659


;; Succ edge  14 [100.0%] 

(barrier 294 293 70)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u79(11){ }u80(13){ }u81(25){ }u82(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 165 166 167
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 165 166 167
;; live  kill	
;; rd  in  	(26)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;; rd  gen 	(3)
660, 662, 663
;; rd  kill	(2)
662, 663

;; Pred edge  8 [20.0%] 
(code_label 70 294 71 10 256 "" [1 uses])

(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 10 arch/arm/kernel/hw_breakpoint.c:548 (set (reg:SI 166)
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 73 72 74 10 arch/arm/kernel/hw_breakpoint.c:548 (set (reg:HI 165)
        (subreg:HI (reg:SI 166) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 166)
        (nil)))

(insn 74 73 75 10 arch/arm/kernel/hw_breakpoint.c:548 (set (reg:SI 167)
        (const_int 3 [0x3])) 167 {*arm_movsi_insn} (nil))

(insn 75 74 76 10 arch/arm/kernel/hw_breakpoint.c:548 (set (zero_extract:SI (subreg:SI (reg:HI 165) 0)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 167)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 167)
        (expr_list:REG_EQUAL (const_int 3 [0x3])
            (nil))))

(insn 76 75 295 10 arch/arm/kernel/hw_breakpoint.c:548 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 214 [0xd6])) [0 S2 A16])
        (reg:HI 165)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 165)
        (nil)))

(jump_insn 295 76 296 10 (set (pc)
        (label_ref 107)) -1 (nil))
;; End of basic block 10 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(29)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 660, 662, 663


;; Succ edge  14 [100.0%] 

(barrier 296 295 79)

;; Start of basic block ( 8) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u89(11){ }u90(13){ }u91(25){ }u92(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 168 169 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 168 169 170
;; live  kill	
;; rd  in  	(26)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;; rd  gen 	(3)
664, 666, 667
;; rd  kill	(2)
666, 667

;; Pred edge  8 [20.0%] 
(code_label 79 296 80 11 257 "" [1 uses])

(note 80 79 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 81 80 82 11 arch/arm/kernel/hw_breakpoint.c:551 (set (reg:SI 169)
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 82 81 83 11 arch/arm/kernel/hw_breakpoint.c:551 (set (reg:HI 168)
        (subreg:HI (reg:SI 169) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 169)
        (nil)))

(insn 83 82 84 11 arch/arm/kernel/hw_breakpoint.c:551 (set (reg:SI 170)
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (nil))

(insn 84 83 85 11 arch/arm/kernel/hw_breakpoint.c:551 (set (zero_extract:SI (subreg:SI (reg:HI 168) 0)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 170)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_EQUAL (const_int 15 [0xf])
            (nil))))

(insn 85 84 297 11 arch/arm/kernel/hw_breakpoint.c:551 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 214 [0xd6])) [0 S2 A16])
        (reg:HI 168)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 168)
        (nil)))

(jump_insn 297 85 298 11 (set (pc)
        (label_ref 107)) -1 (nil))
;; End of basic block 11 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(29)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 664, 666, 667


;; Succ edge  14 [100.0%] 

(barrier 298 297 88)

;; Start of basic block ( 8) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u99(11){ }u100(13){ }u101(25){ }u102(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 171 172 173 175 176 177 178 235 236 237
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 171 172 173 175 176 177 178 235 236 237
;; live  kill	
;; rd  in  	(26)
8, 18, 26, 33, 34, 40, 41, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655
;; rd  gen 	(11)
112, 668, 670, 671, 672, 673, 674, 675, 718, 719, 720
;; rd  kill	(35)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 670, 671, 672, 673, 674, 675, 717, 718, 719, 720

;; Pred edge  8 [20.0%] 
(code_label 88 298 89 12 258 "" [1 uses])

(note 89 88 90 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 12 arch/arm/kernel/hw_breakpoint.c:554 (set (reg:SI 172)
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 91 90 92 12 arch/arm/kernel/hw_breakpoint.c:554 (set (reg:HI 171)
        (subreg:HI (reg:SI 172) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 92 91 93 12 arch/arm/kernel/hw_breakpoint.c:554 (set (reg:SI 173)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 93 92 284 12 arch/arm/kernel/hw_breakpoint.c:554 (set (zero_extract:SI (subreg:SI (reg:HI 171) 0)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 173)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 173)
        (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
            (nil))))

(insn 284 93 285 12 arch/arm/kernel/hw_breakpoint.c:554 (set (reg:SI 236)
        (zero_extend:SI (reg:HI 171))) -1 (nil))

(insn 285 284 283 12 arch/arm/kernel/hw_breakpoint.c:554 (set (reg:SI 235)
        (reg:SI 236)) -1 (expr_list:REG_DEAD (reg:SI 236)
        (nil)))

(insn 283 285 286 12 arch/arm/kernel/hw_breakpoint.c:554 (set (reg:SI 235)
        (lshiftrt:SI (reg:SI 235)
            (const_int 8 [0x8]))) -1 (nil))

(insn 286 283 94 12 arch/arm/kernel/hw_breakpoint.c:554 (set (reg:QI 237)
        (subreg:QI (reg:SI 235) 0)) -1 (expr_list:REG_DEAD (reg:SI 235)
        (nil)))

(insn 94 286 95 12 arch/arm/kernel/hw_breakpoint.c:554 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 214 [0xd6])) [0 S2 A16])
        (reg:HI 171)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 171)
        (nil)))

(insn 95 94 97 12 arch/arm/kernel/hw_breakpoint.c:555 (set (reg:SI 175)
        (zero_extend:SI (reg:QI 237))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 237)
        (nil)))

(insn 97 95 98 12 arch/arm/kernel/hw_breakpoint.c:555 (set (reg:SI 176)
        (and:SI (reg:SI 175)
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(insn 98 97 99 12 arch/arm/kernel/hw_breakpoint.c:555 (set (reg:QI 177)
        (subreg:QI (reg:SI 176) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 99 98 100 12 arch/arm/kernel/hw_breakpoint.c:555 (set (reg:SI 178)
        (zero_extend:SI (reg:QI 177))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 177)
        (nil)))

(insn 100 99 101 12 arch/arm/kernel/hw_breakpoint.c:555 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 178)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(jump_insn 101 100 102 12 arch/arm/kernel/hw_breakpoint.c:555 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 12 -> ( 13 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(37)
8, 18, 26, 33, 34, 40, 41, 112, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 668, 670, 671, 672, 673, 674, 675, 718, 719, 720


;; Succ edge  13 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u119(11){ }u120(13){ }u121(25){ }u122(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 179 180
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 179 180
;; live  kill	
;; rd  in  	(37)
8, 18, 26, 33, 34, 40, 41, 112, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 668, 670, 671, 672, 673, 674, 675, 718, 719, 720
;; rd  gen 	(3)
111, 676, 677
;; rd  kill	(27)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 676, 677

;; Pred edge  12 [50.0%]  (fallthru)
(note 102 101 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 103 102 104 13 arch/arm/kernel/hw_breakpoint.c:555 discrim 1 (set (reg/f:SI 179)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 104 103 105 13 arch/arm/kernel/hw_breakpoint.c:555 discrim 1 (set (reg:SI 180 [ max_watchpoint_len ])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 179)
                    (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/f:SI 179)
        (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                            (const_int 1 [0x1]))) [0 max_watchpoint_len+0 S1 A8]))
            (nil))))

(insn 105 104 106 13 arch/arm/kernel/hw_breakpoint.c:555 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 180 [ max_watchpoint_len ])
            (const_int 7 [0x7]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 180 [ max_watchpoint_len ])
        (nil)))

(jump_insn 106 105 107 13 arch/arm/kernel/hw_breakpoint.c:555 discrim 1 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 13 -> ( 14 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(39)
8, 18, 26, 33, 34, 40, 41, 111, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 668, 670, 671, 672, 673, 674, 675, 676, 677, 718, 719, 720


;; Succ edge  14 [50.0%]  (fallthru)
;; Succ edge  31 [50.0%] 

;; Start of basic block ( 13 9 10 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u126(11){ }u127(13){ }u128(25){ }u129(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 182 183 184 185
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 182 183 184 185
;; live  kill	
;; rd  in  	(48)
8, 18, 26, 33, 34, 40, 41, 111, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 718, 719, 720
;; rd  gen 	(5)
110, 678, 679, 680, 681
;; rd  kill	(29)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 678, 679, 680, 681

;; Pred edge  13 [50.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
;; Pred edge  10 [100.0%] 
;; Pred edge  11 [100.0%] 
(code_label 107 106 108 14 260 "" [3 uses])

(note 108 107 109 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 109 108 111 14 arch/arm/kernel/hw_breakpoint.c:568 (set (reg:SI 182)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 111 109 112 14 arch/arm/kernel/hw_breakpoint.c:568 (set (reg:SI 183)
        (and:SI (reg:SI 182)
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 182)
        (nil)))

(insn 112 111 113 14 arch/arm/kernel/hw_breakpoint.c:568 (set (reg:QI 184)
        (subreg:QI (reg:SI 183) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 113 112 114 14 arch/arm/kernel/hw_breakpoint.c:568 (set (reg:SI 185)
        (zero_extend:SI (reg:QI 184))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 184)
        (nil)))

(insn 114 113 115 14 arch/arm/kernel/hw_breakpoint.c:568 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 185)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(jump_insn 115 114 116 14 arch/arm/kernel/hw_breakpoint.c:568 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 14 -> ( 15 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(52)
8, 18, 26, 33, 34, 40, 41, 110, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 718, 719, 720


;; Succ edge  15 [71.0%]  (fallthru)
;; Succ edge  17 [29.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u136(11){ }u137(13){ }u138(25){ }u139(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 133 186
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 133 186
;; live  kill	
;; rd  in  	(52)
8, 18, 26, 33, 34, 40, 41, 110, 118, 119, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 718, 719, 720
;; rd  gen 	(3)
109, 625, 682
;; rd  kill	(27)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 625, 682

;; Pred edge  14 [71.0%]  (fallthru)
(note 116 115 117 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 119 15 arch/arm/kernel/hw_breakpoint.c:569 (set (reg:SI 186)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 119 117 120 15 arch/arm/kernel/hw_breakpoint.c:569 (set (reg:SI 133 [ D.24404 ])
        (and:SI (reg:SI 186)
            (const_int 2040 [0x7f8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 186)
        (expr_list:REG_EQUAL (and:SI (reg:SI 186)
                (const_int 2040 [0x7f8]))
            (nil))))

(insn 120 119 121 15 arch/arm/kernel/hw_breakpoint.c:568 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.24404 ])
            (const_int 24 [0x18]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 121 120 122 15 arch/arm/kernel/hw_breakpoint.c:568 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 125)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2800 [0xaf0])
            (nil))))
;; End of basic block 15 -> ( 16 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 143
;; rd  out 	(54)
8, 18, 26, 33, 34, 40, 41, 109, 118, 119, 625, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 718, 719, 720


;; Succ edge  16 [72.0%]  (fallthru)
;; Succ edge  17 [28.0%] 

;; Start of basic block ( 15) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u145(11){ }u146(13){ }u147(25){ }u148(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 143
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(54)
8, 18, 26, 33, 34, 40, 41, 109, 118, 119, 625, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 718, 719, 720
;; rd  gen 	(1)
108
;; rd  kill	(25)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117

;; Pred edge  15 [72.0%]  (fallthru)
(note 122 121 123 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 124 16 arch/arm/kernel/hw_breakpoint.c:568 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ D.24404 ])
            (const_int 120 [0x78]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ D.24404 ])
        (nil)))

(jump_insn 124 123 125 16 arch/arm/kernel/hw_breakpoint.c:568 discrim 2 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 16 -> ( 31 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(54)
8, 18, 26, 33, 34, 40, 41, 108, 118, 119, 625, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 718, 719, 720


;; Succ edge  31 [72.0%] 
;; Succ edge  17 [28.0%]  (fallthru)

;; Start of basic block ( 14 15 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u151(11){ }u152(13){ }u153(25){ }u154(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 188 189 190 191
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 24 [cc] 134 188 189 190 191
;; live  kill	 14 [lr]
;; rd  in  	(56)
8, 18, 26, 33, 34, 40, 41, 108, 109, 110, 118, 119, 625, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 718, 719, 720
;; rd  gen 	(7)
6, 106, 626, 683, 684, 686, 687
;; rd  kill	(46)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 42, 43, 44, 45, 46, 47, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 626, 683, 686, 687

;; Pred edge  14 [29.0%] 
;; Pred edge  15 [28.0%] 
;; Pred edge  16 [28.0%]  (fallthru)
(code_label 125 124 126 17 261 "" [2 uses])

(note 126 125 127 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 127 126 128 17 arch/arm/kernel/hw_breakpoint.c:574 (set (reg:SI 188 [ <variable>.attr.D.4023.bp_addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 176 [0xb0])) [0 <variable>.attr.D.4023.bp_addr+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 128 127 129 17 arch/arm/kernel/hw_breakpoint.c:574 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])
        (reg:SI 188 [ <variable>.attr.D.4023.bp_addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 188 [ <variable>.attr.D.4023.bp_addr ])
        (nil)))

(insn 129 128 130 17 arch/arm/kernel/hw_breakpoint.c:577 (set (reg:SI 190)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 130 129 131 17 arch/arm/kernel/hw_breakpoint.c:577 (set (reg:QI 189)
        (subreg:QI (reg:SI 190) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 190)
        (nil)))

(insn 131 130 132 17 arch/arm/kernel/hw_breakpoint.c:577 (set (reg:SI 191)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 132 131 133 17 arch/arm/kernel/hw_breakpoint.c:577 (set (zero_extract:SI (subreg:SI (reg:QI 189) 0)
            (const_int 2 [0x2])
            (const_int 5 [0x5]))
        (reg:SI 191)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 191)
        (expr_list:REG_EQUAL (const_int 2 [0x2])
            (nil))))

(insn 133 132 134 17 arch/arm/kernel/hw_breakpoint.c:577 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 189)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 189)
        (nil)))

(insn 134 133 135 17 arch/arm/kernel/hw_breakpoint.c:578 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ bp ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 135 134 136 17 arch/arm/kernel/hw_breakpoint.c:578 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_check_bp_in_kernelspace") [flags 0x3] <function_decl 0x10b14000 arch_check_bp_in_kernelspace>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 136 135 137 17 arch/arm/kernel/hw_breakpoint.c:578 (set (reg:SI 134 [ D.24401 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 137 136 138 17 arch/arm/kernel/hw_breakpoint.c:578 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 134 [ D.24401 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.24401 ])
        (nil)))

(jump_insn 138 137 139 17 arch/arm/kernel/hw_breakpoint.c:578 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 146)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 17 -> ( 18 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(59)
6, 18, 26, 33, 34, 40, 41, 106, 118, 119, 625, 626, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 718, 719, 720


;; Succ edge  18 [50.0%]  (fallthru)
;; Succ edge  19 [50.0%] 

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 193 194
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 193 194
;; live  kill	
;; rd  in  	(59)
6, 18, 26, 33, 34, 40, 41, 106, 118, 119, 625, 626, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 718, 719, 720
;; rd  gen 	(2)
688, 689
;; rd  kill	(2)
688, 689

;; Pred edge  17 [50.0%]  (fallthru)
(note 139 138 140 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 140 139 143 18 arch/arm/kernel/hw_breakpoint.c:579 (set (reg:SI 193)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 143 140 145 18 arch/arm/kernel/hw_breakpoint.c:579 (set (reg:SI 194)
        (ior:SI (reg:SI 193)
            (const_int 96 [0x60]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(insn 145 143 146 18 arch/arm/kernel/hw_breakpoint.c:579 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 215 [0xd7])) [0 S1 A8])
        (subreg:QI (reg:SI 194) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 194)
        (nil)))
;; End of basic block 18 -> ( 19)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(61)
6, 18, 26, 33, 34, 40, 41, 106, 118, 119, 625, 626, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 718, 719, 720


;; Succ edge  19 [100.0%]  (fallthru)

;; Start of basic block ( 17 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 135 136 140 141 197 198 200 201 202 203 204 205 206
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 135 136 140 141 197 198 200 201 202 203 204 205 206
;; live  kill	
;; rd  in  	(61)
6, 18, 26, 33, 34, 40, 41, 106, 118, 119, 625, 626, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 718, 719, 720
;; rd  gen 	(14)
105, 627, 628, 634, 635, 690, 691, 692, 693, 695, 696, 698, 699, 700
;; rd  kill	(36)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 627, 628, 634, 635, 690, 691, 692, 695, 698, 699, 700

;; Pred edge  17 [50.0%] 
;; Pred edge  18 [100.0%]  (fallthru)
(code_label 146 145 147 19 262 "" [1 uses])

(note 147 146 148 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 148 147 150 19 arch/arm/kernel/hw_breakpoint.c:582 (set (reg:SI 197)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 160 [0xa0])) [0 S1 A64]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 150 148 152 19 arch/arm/kernel/hw_breakpoint.c:582 (set (reg:SI 198)
        (xor:SI (reg:SI 197)
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 197)
        (nil)))

(insn 152 150 153 19 arch/arm/kernel/hw_breakpoint.c:582 (set (reg:SI 200)
        (and:SI (reg:SI 198)
            (const_int 1 [0x1]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 198)
        (nil)))

(insn 153 152 154 19 arch/arm/kernel/hw_breakpoint.c:582 (set (reg:SI 202)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 154 153 155 19 arch/arm/kernel/hw_breakpoint.c:582 (set (reg:QI 201)
        (subreg:QI (reg:SI 202) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(insn 155 154 156 19 arch/arm/kernel/hw_breakpoint.c:582 (set (zero_extract:SI (subreg:SI (reg:QI 201) 0)
            (const_int 1 [0x1])
            (const_int 7 [0x7]))
        (reg:SI 200)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 200)
        (nil)))

(insn 156 155 157 19 arch/arm/kernel/hw_breakpoint.c:582 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 215 [0xd7])) [0 S1 A8])
        (reg:QI 201)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 201)
        (nil)))

(insn 157 156 158 19 arch/arm/kernel/hw_breakpoint.c:585 (set (reg:SI 204)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 213 [0xd5])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 158 157 159 19 arch/arm/kernel/hw_breakpoint.c:585 (set (reg:QI 203)
        (subreg:QI (reg:SI 204) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 204)
        (nil)))

(insn 159 158 160 19 arch/arm/kernel/hw_breakpoint.c:585 (set (zero_extract:SI (subreg:SI (reg:QI 203) 0)
            (const_int 1 [0x1])
            (const_int 1 [0x1]))
        (const_int 0 [0x0])) 76 {insv_zero} (nil))

(insn 160 159 161 19 arch/arm/kernel/hw_breakpoint.c:585 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 213 [0xd5])) [0 S1 A8])
        (reg:QI 203)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 203)
        (nil)))

(insn 161 160 162 19 arch/arm/kernel/hw_breakpoint.c:605 (set (reg:SI 205)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 162 161 163 19 arch/arm/kernel/hw_breakpoint.c:605 (set (reg:SI 206)
        (const_int 2040 [0x7f8])) 167 {*arm_movsi_insn} (nil))

(insn 163 162 167 19 arch/arm/kernel/hw_breakpoint.c:605 (set (reg:SI 141 [ D.23989 ])
        (and:SI (reg:SI 205)
            (const_int 2040 [0x7f8]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 205)
        (expr_list:REG_EQUAL (and:SI (reg:SI 205)
                (const_int 2040 [0x7f8]))
            (nil))))

(insn 167 163 282 19 arch/arm/kernel/hw_breakpoint.c:605 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.23989 ])
            (reg:SI 206))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 206)
        (expr_list:REG_EQUAL (compare:CC (reg:SI 141 [ D.23989 ])
                (const_int 2040 [0x7f8]))
            (nil))))

(insn 282 167 178 19 arch/arm/kernel/hw_breakpoint.c:606 (set (reg/v:SI 135 [ alignment_mask ])
        (if_then_else:SI (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (const_int 3 [0x3])
            (const_int 7 [0x7]))) 240 {*movsicc_insn} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(insn 178 282 179 19 arch/arm/kernel/hw_breakpoint.c:607 (set (reg:SI 140 [ D.23992 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 179 178 180 19 arch/arm/kernel/hw_breakpoint.c:607 (set (reg/v:SI 136 [ offset ])
        (and:SI (reg/v:SI 135 [ alignment_mask ])
            (reg:SI 140 [ D.23992 ]))) 67 {*arm_andsi3_insn} (nil))

(insn 180 179 181 19 arch/arm/kernel/hw_breakpoint.c:608 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ offset ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 181 180 276 19 arch/arm/kernel/hw_breakpoint.c:608 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 188)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
        (nil)))
;; End of basic block 19 -> ( 23 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  out 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 136 140 141 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720


;; Succ edge  23 [29.0%] 
;; Succ edge  20 [71.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u208(11){ }u209(13){ }u210(25){ }u211(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 24 [cc] 25 [sfp] 26 [afp] 135 136 140 141 143
;; lr  use 	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 24 [cc] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  gen 	
;; live  kill	
;; rd  in  	(74)
6, 18, 26, 33, 34, 40, 41, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  19 [71.0%]  (fallthru)
(note 276 181 183 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(jump_insn 183 276 277 20 arch/arm/kernel/hw_breakpoint.c:608 (set (pc)
        (if_then_else (ltu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 196)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 25 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720


;; Succ edge  25 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(74)
6, 18, 26, 33, 34, 40, 41, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(1)
104
;; rd  kill	(25)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117

;; Pred edge  20 [50.0%]  (fallthru)
(note 277 183 184 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 184 277 185 21 arch/arm/kernel/hw_breakpoint.c:608 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 136 [ offset ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 185 184 299 21 arch/arm/kernel/hw_breakpoint.c:608 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 21 -> ( 22 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 104, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720


;; Succ edge  22 [29.0%]  (fallthru)
;; Succ edge  31 [71.0%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  gen 	
;; live  kill	
;; rd  in  	(74)
6, 18, 26, 33, 34, 40, 41, 104, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  21 [29.0%]  (fallthru)
(note 299 185 300 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 300 299 301 22 (set (pc)
        (label_ref 192)) -1 (nil))
;; End of basic block 22 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 104, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720


;; Succ edge  24 [100.0%] 

(barrier 301 300 188)

;; Start of basic block ( 19) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u219(11){ }u220(13){ }u221(25){ }u222(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(74)
6, 18, 26, 33, 34, 40, 41, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(1)
103
;; rd  kill	(25)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117

;; Pred edge  19 [29.0%] 
(code_label 188 301 189 23 266 "" [1 uses])

(note 189 188 190 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 190 189 191 23 arch/arm/kernel/hw_breakpoint.c:614 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.23989 ])
            (const_int 8 [0x8]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 191 190 192 23 arch/arm/kernel/hw_breakpoint.c:614 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 196)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9032 [0x2348])
            (nil))))
;; End of basic block 23 -> ( 25 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 103, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720


;; Succ edge  25 [90.3%] 
;; Succ edge  24 [9.7%]  (fallthru)

;; Start of basic block ( 23 22) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 141 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 141 143
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(75)
6, 18, 26, 33, 34, 40, 41, 103, 104, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(1)
102
;; rd  kill	(25)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117

;; Pred edge  23 [9.7%]  (fallthru)
;; Pred edge  22 [100.0%] 
(code_label 192 191 193 24 267 "" [1 uses])

(note 193 192 194 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 194 193 195 24 arch/arm/kernel/hw_breakpoint.c:618 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 141 [ D.23989 ])
            (const_int 24 [0x18]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ D.23989 ])
        (nil)))

(jump_insn 195 194 196 24 arch/arm/kernel/hw_breakpoint.c:618 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6218 [0x184a])
            (nil))))
;; End of basic block 24 -> ( 25 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 143
;; rd  out 	(74)
6, 18, 26, 33, 34, 40, 41, 102, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720


;; Succ edge  25 [37.8%]  (fallthru)
;; Succ edge  31 [62.2%] 

;; Start of basic block ( 24 23 20) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u231(11){ }u232(13){ }u233(25){ }u234(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 135 136 140 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 143
;; lr  def 	 24 [cc] 210 211 213 214 215 216 217 219
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 135 136 140 143
;; live  gen 	 24 [cc] 210 211 213 214 215 216 217 219
;; live  kill	
;; rd  in  	(76)
6, 18, 26, 33, 34, 40, 41, 102, 103, 105, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 718, 719, 720
;; rd  gen 	(9)
101, 701, 702, 703, 704, 705, 706, 708, 709
;; rd  kill	(32)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 701, 702, 703, 704, 705, 706, 709

;; Pred edge  24 [37.8%]  (fallthru)
;; Pred edge  23 [90.3%] 
;; Pred edge  20 [50.0%] 
(code_label 196 195 197 25 265 "" [2 uses])

(note 197 196 198 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 198 197 199 25 arch/arm/kernel/hw_breakpoint.c:625 (set (reg:SI 210)
        (not:SI (reg/v:SI 135 [ alignment_mask ]))) 134 {*arm_one_cmplsi2} (expr_list:REG_DEAD (reg/v:SI 135 [ alignment_mask ])
        (nil)))

(insn 199 198 200 25 arch/arm/kernel/hw_breakpoint.c:625 (set (reg:SI 211)
        (and:SI (reg:SI 210)
            (reg:SI 140 [ D.23992 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_DEAD (reg:SI 140 [ D.23992 ])
            (nil))))

(insn 200 199 201 25 arch/arm/kernel/hw_breakpoint.c:625 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])
        (reg:SI 211)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 211)
        (nil)))

(insn 201 200 203 25 arch/arm/kernel/hw_breakpoint.c:626 (set (reg:SI 213)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 203 201 204 25 arch/arm/kernel/hw_breakpoint.c:626 (set (subreg:SI (reg:QI 214) 0)
        (zero_extract:SI (reg:SI 213)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))) 124 {extzv_t2} (nil))

(insn 204 203 205 25 arch/arm/kernel/hw_breakpoint.c:626 (set (reg:SI 215)
        (zero_extend:SI (reg:QI 214))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 214)
        (nil)))

(insn 205 204 207 25 arch/arm/kernel/hw_breakpoint.c:626 (set (reg:SI 216)
        (ashift:SI (reg:SI 215)
            (reg/v:SI 136 [ offset ]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_DEAD (reg/v:SI 136 [ offset ])
            (nil))))

(insn 207 205 208 25 arch/arm/kernel/hw_breakpoint.c:626 (set (reg:HI 217)
        (subreg:HI (reg:SI 213) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 213)
        (nil)))

(insn 208 207 209 25 arch/arm/kernel/hw_breakpoint.c:626 (set (zero_extract:SI (subreg:SI (reg:HI 217) 0)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 216)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 216)
        (nil)))

(insn 209 208 210 25 arch/arm/kernel/hw_breakpoint.c:626 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 214 [0xd6])) [0 S2 A16])
        (reg:HI 217)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 217)
        (nil)))

(insn 210 209 211 25 arch/arm/kernel/hw_breakpoint.c:635 (set (reg/f:SI 219 [ <variable>.overflow_handler ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 528 [0x210])) [0 <variable>.overflow_handler+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 211 210 212 25 arch/arm/kernel/hw_breakpoint.c:635 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 219 [ <variable>.overflow_handler ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 219 [ <variable>.overflow_handler ])
        (nil)))

(jump_insn 212 211 213 25 arch/arm/kernel/hw_breakpoint.c:635 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 258)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
            (nil))))
;; End of basic block 25 -> ( 26 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(82)
6, 18, 26, 33, 34, 40, 41, 101, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720


;; Succ edge  26 [6.7%]  (fallthru)
;; Succ edge  32 [93.3%] 

;; Start of basic block ( 25) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u253(11){ }u254(13){ }u255(25){ }u256(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 139
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 24 [cc] 139
;; live  kill	 14 [lr]
;; rd  in  	(82)
6, 18, 26, 33, 34, 40, 41, 101, 118, 119, 625, 626, 627, 628, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720
;; rd  gen 	(3)
4, 99, 633
;; rd  kill	(43)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 42, 43, 44, 45, 46, 47, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 633

;; Pred edge  25 [6.7%]  (fallthru)
(note 213 212 214 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 214 213 215 26 arch/arm/kernel/hw_breakpoint.c:635 discrim 1 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ bp ])) 167 {*arm_movsi_insn} (nil))

(call_insn/i 215 214 216 26 arch/arm/kernel/hw_breakpoint.c:635 discrim 1 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_check_bp_in_kernelspace") [flags 0x3] <function_decl 0x10b14000 arch_check_bp_in_kernelspace>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 216 215 217 26 arch/arm/kernel/hw_breakpoint.c:635 discrim 1 (set (reg:SI 139 [ D.24008 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 217 216 218 26 arch/arm/kernel/hw_breakpoint.c:635 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 139 [ D.24008 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ D.24008 ])
        (nil)))

(jump_insn 218 217 219 26 arch/arm/kernel/hw_breakpoint.c:635 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 228)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 26 -> ( 29 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(83)
4, 18, 26, 33, 34, 40, 41, 99, 118, 119, 625, 626, 627, 628, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720


;; Succ edge  29 [71.0%] 
;; Succ edge  27 [29.0%]  (fallthru)

;; Start of basic block ( 26) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u263(11){ }u264(13){ }u265(25){ }u266(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 138
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 0 [r0] 24 [cc] 138
;; live  kill	 14 [lr]
;; rd  in  	(83)
4, 18, 26, 33, 34, 40, 41, 99, 118, 119, 625, 626, 627, 628, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720
;; rd  gen 	(3)
3, 97, 632
;; rd  kill	(43)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 42, 43, 44, 45, 46, 47, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 632

;; Pred edge  26 [29.0%]  (fallthru)
(note 219 218 220 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(call_insn 220 219 221 27 arch/arm/kernel/hw_breakpoint.c:635 discrim 4 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("core_has_mismatch_brps") [flags 0x3] <function_decl 0x113d8880 core_has_mismatch_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 221 220 222 27 arch/arm/kernel/hw_breakpoint.c:635 discrim 4 (set (reg:SI 138 [ D.24010 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 222 221 223 27 arch/arm/kernel/hw_breakpoint.c:635 discrim 4 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 138 [ D.24010 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 138 [ D.24010 ])
        (nil)))

(jump_insn 223 222 224 27 arch/arm/kernel/hw_breakpoint.c:635 discrim 4 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 228)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 27 -> ( 29 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; rd  out 	(84)
3, 18, 26, 33, 34, 40, 41, 97, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720


;; Succ edge  29 [50.0%] 
;; Succ edge  28 [50.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u271(11){ }u272(13){ }u273(25){ }u274(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 143
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; lr  def 	 24 [cc] 220
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143
;; live  gen 	 24 [cc] 220
;; live  kill	
;; rd  in  	(84)
3, 18, 26, 33, 34, 40, 41, 97, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 718, 719, 720
;; rd  gen 	(2)
96, 710
;; rd  kill	(26)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 710

;; Pred edge  27 [50.0%]  (fallthru)
(note 224 223 225 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 225 224 226 28 arch/arm/kernel/hw_breakpoint.c:635 (set (reg/f:SI 220 [ <variable>.hw.D.22650.D.22649.bp_target ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 143 [ bp ])
                (const_int 224 [0xe0])) [0 <variable>.hw.D.22650.D.22649.bp_target+0 S4 A64])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ bp ])
        (nil)))

(insn 226 225 227 28 arch/arm/kernel/hw_breakpoint.c:635 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 220 [ <variable>.hw.D.22650.D.22649.bp_target ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 220 [ <variable>.hw.D.22650.D.22649.bp_target ])
        (nil)))

(jump_insn 227 226 228 28 arch/arm/kernel/hw_breakpoint.c:635 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 258)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 28 -> ( 29 32)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(85)
3, 18, 26, 33, 34, 40, 41, 96, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 718, 719, 720


;; Succ edge  29 [15.0%]  (fallthru)
;; Succ edge  32 [85.0%] 

;; Start of basic block ( 27 28 26) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u278(11){ }u279(13){ }u280(25){ }u281(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 221 223 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 221 223 224 225 226
;; live  kill	
;; rd  in  	(88)
3, 4, 18, 26, 33, 34, 40, 41, 96, 97, 99, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 718, 719, 720
;; rd  gen 	(6)
95, 711, 712, 713, 714, 715
;; rd  kill	(30)
93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 711, 712, 713, 714, 715

;; Pred edge  27 [50.0%] 
;; Pred edge  28 [15.0%]  (fallthru)
;; Pred edge  26 [71.0%] 
(code_label 228 227 229 29 269 "" [2 uses])

(note 229 228 230 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 230 229 231 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (reg/f:SI 221)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 231 230 233 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (reg:SI 223 [ __warned ])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 221)
                    (const_int 16 [0x10])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 16 [0x10]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 233 231 234 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (reg:SI 224)
        (xor:SI (reg:SI 223 [ __warned ])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 223 [ __warned ])
        (nil)))

(insn 234 233 235 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (reg:QI 225)
        (subreg:QI (reg:SI 224) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 224)
        (nil)))

(insn 235 234 236 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (reg:SI 226)
        (zero_extend:SI (reg:QI 225))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 225)
        (nil)))

(insn 236 235 237 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 226)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 226)
        (nil)))

(jump_insn 237 236 238 29 arch/arm/kernel/hw_breakpoint.c:635 discrim 7 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 253)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 29 -> ( 30 31)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 221
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 221
;; rd  out 	(91)
3, 4, 18, 26, 33, 34, 40, 41, 95, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720


;; Succ edge  30 [0.0%]  (fallthru)
;; Succ edge  31 [100.0%] 

;; Start of basic block ( 29) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u288(11){ }u289(13){ }u290(25){ }u291(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 221
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 221
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 137 231
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 221
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 137 231
;; live  kill	 14 [lr]
;; rd  in  	(91)
3, 4, 18, 26, 33, 34, 40, 41, 95, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720
;; rd  gen 	(2)
631, 716
;; rd  kill	(10)
42, 43, 44, 45, 46, 47, 629, 630, 631, 716

;; Pred edge  29 [0.0%]  (fallthru)
(note 238 237 242 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(insn 242 238 243 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 9 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 243 242 244 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 9 (set (reg:SI 1 r1)
        (const_int 638 [0x27e])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 638 [0x27e])
        (nil)))

(insn 244 243 245 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 9 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11520690>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC7") [flags 0x82] <string_cst 0x11520690>)
        (nil)))

(call_insn 245 244 247 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 9 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 247 245 249 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 11 (set (reg:SI 231)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 249 247 250 30 arch/arm/kernel/hw_breakpoint.c:635 discrim 11 (set (mem/c/i:QI (plus:SI (reg/f:SI 221)
                (const_int 16 [0x10])) [0 __warned+0 S1 A8])
        (subreg:QI (reg:SI 231) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 231)
        (expr_list:REG_DEAD (reg/f:SI 221)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 250 249 302 30 arch/arm/kernel/hw_breakpoint.c:639 (set (reg/v:SI 137 [ ret ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 302 250 303 30 (set (pc)
        (label_ref 261)) -1 (nil))
;; End of basic block 30 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; rd  out 	(93)
3, 4, 18, 26, 33, 34, 40, 41, 95, 118, 119, 625, 626, 627, 628, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720


;; Succ edge  33 [100.0%] 

(barrier 303 302 253)

;; Start of basic block ( 8 24 12 29 21 13 16 2 7) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u298(11){ }u299(13){ }u300(25){ }u301(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 137
;; live  kill	
;; rd  in  	(101)
3, 4, 6, 8, 10, 18, 26, 33, 34, 40, 41, 47, 95, 102, 104, 108, 111, 112, 114, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720
;; rd  gen 	(1)
630
;; rd  kill	(3)
629, 630, 631

;; Pred edge  8 [20.0%] 
;; Pred edge  24 [62.2%] 
;; Pred edge  12 [50.0%] 
;; Pred edge  29 [100.0%] 
;; Pred edge  21 [71.0%] 
;; Pred edge  13 [50.0%] 
;; Pred edge  16 [72.0%] 
;; Pred edge  2 [20.0%] 
;; Pred edge  7 [50.0%] 
(code_label 253 303 254 31 248 ("out") [13 uses])

(note 254 253 255 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(insn 255 254 304 31 arch/arm/kernel/hw_breakpoint.c:639 (set (reg/v:SI 137 [ ret ])
        (const_int -22 [0xffffffffffffffea])) 167 {*arm_movsi_insn} (nil))

(jump_insn 304 255 305 31 (set (pc)
        (label_ref 261)) -1 (nil))
;; End of basic block 31 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; rd  out 	(102)
3, 4, 6, 8, 10, 18, 26, 33, 34, 40, 41, 47, 95, 102, 104, 108, 111, 112, 114, 118, 119, 625, 626, 627, 628, 630, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 718, 719, 720


;; Succ edge  33 [100.0%] 

(barrier 305 304 258)

;; Start of basic block ( 25 28) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u302(11){ }u303(13){ }u304(25){ }u305(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 137
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 137
;; live  kill	
;; rd  in  	(87)
3, 6, 18, 26, 33, 34, 40, 41, 96, 101, 118, 119, 625, 626, 627, 628, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 718, 719, 720
;; rd  gen 	(1)
629
;; rd  kill	(3)
629, 630, 631

;; Pred edge  25 [93.3%] 
;; Pred edge  28 [85.0%] 
(code_label 258 305 259 32 268 "" [2 uses])

(note 259 258 260 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 260 259 261 32 arch/arm/kernel/hw_breakpoint.c:639 (set (reg/v:SI 137 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 32 -> ( 33)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; rd  out 	(88)
3, 6, 18, 26, 33, 34, 40, 41, 96, 101, 118, 119, 625, 626, 627, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 718, 719, 720


;; Succ edge  33 [100.0%]  (fallthru)

;; Start of basic block ( 32 30 31) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u306(11){ }u307(13){ }u308(25){ }u309(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 137
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 137
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(107)
3, 4, 6, 8, 10, 18, 26, 33, 34, 40, 41, 47, 95, 96, 101, 102, 104, 108, 111, 112, 114, 118, 119, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720
;; rd  gen 	(1)
1
;; rd  kill	(11)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10

;; Pred edge  32 [100.0%]  (fallthru)
;; Pred edge  30 [100.0%] 
;; Pred edge  31 [100.0%] 
(code_label 261 260 262 33 270 "" [2 uses])

(note 262 261 267 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 267 262 273 33 arch/arm/kernel/hw_breakpoint.c:643 (set (reg/i:SI 0 r0)
        (reg/v:SI 137 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 137 [ ret ])
        (nil)))

(insn 273 267 0 33 arch/arm/kernel/hw_breakpoint.c:643 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 33 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(103)
1, 18, 26, 33, 34, 40, 41, 47, 95, 96, 101, 102, 104, 108, 111, 112, 114, 118, 119, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_uninstall_hw_breakpoint (arch_uninstall_hw_breakpoint)[0:1256]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 34 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 36 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 18 n_edges 23 count 36 (    2)


arch_uninstall_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,2u} r2={4d,1u} r3={3d} r11={1d,17u} r12={3d} r13={1d,21u,2d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={8d,6u} r25={1d,17u} r26={1d,16u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r161={2d,2u} r164={1d,1u} r165={1d,1u} r166={3d,1u} r167={2d,2u} r168={2d,4u} r169={2d,1u} r170={1d,3u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u,1d} r181={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u,1d} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,2u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r210={1d,1u} r212={1d,1u} 
;;    total ref usage 438{301d,133u,4e} in 72{70 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253
0[0,5] 1[5,5] 2[10,4] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,2] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,8] 25[50,1] 26[51,1] 27[52,2] 28[54,2] 29[56,2] 30[58,2] 31[60,2] 32[62,2] 33[64,2] 34[66,2] 35[68,2] 36[70,2] 37[72,2] 38[74,2] 39[76,2] 40[78,2] 41[80,2] 42[82,2] 43[84,2] 44[86,2] 45[88,2] 46[90,2] 47[92,2] 48[94,2] 49[96,2] 50[98,2] 51[100,2] 52[102,2] 53[104,2] 54[106,2] 55[108,2] 56[110,2] 57[112,2] 58[114,2] 59[116,2] 60[118,2] 61[120,2] 62[122,2] 63[124,2] 64[126,2] 65[128,2] 66[130,2] 67[132,2] 68[134,2] 69[136,2] 70[138,2] 71[140,2] 72[142,2] 73[144,2] 74[146,2] 75[148,2] 76[150,2] 77[152,2] 78[154,2] 79[156,2] 80[158,2] 81[160,2] 82[162,2] 83[164,2] 84[166,2] 85[168,2] 86[170,2] 87[172,2] 88[174,2] 89[176,2] 90[178,2] 91[180,2] 92[182,2] 93[184,2] 94[186,2] 95[188,2] 96[190,2] 97[192,2] 98[194,2] 99[196,2] 100[198,2] 101[200,2] 102[202,2] 103[204,2] 104[206,2] 105[208,2] 106[210,2] 107[212,2] 108[214,2] 109[216,2] 110[218,2] 111[220,2] 112[222,2] 113[224,2] 114[226,2] 115[228,2] 116[230,2] 117[232,2] 118[234,2] 119[236,2] 120[238,2] 121[240,2] 122[242,2] 123[244,2] 124[246,2] 125[248,2] 126[250,2] 127[252,2] 161[254,2] 164[256,1] 165[257,1] 166[258,3] 167[261,2] 168[263,2] 169[265,2] 170[267,1] 172[268,1] 173[269,1] 174[270,1] 175[271,1] 176[272,1] 177[273,1] 178[274,1] 179[275,1] 180[276,1] 181[277,1] 182[278,1] 184[279,1] 185[280,1] 186[281,1] 187[282,1] 188[283,1] 189[284,1] 191[285,1] 192[286,1] 193[287,1] 194[288,1] 195[289,1] 196[290,1] 197[291,1] 198[292,1] 199[293,1] 200[294,1] 202[295,1] 203[296,1] 204[297,1] 205[298,1] 210[299,1] 212[300,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d4(0){ }d9(1){ }d13(2){ }d16(3){ }d17(11){ }d20(12){ }d21(13){ }d23(14){ }d50(25){ }d51(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
4, 9, 13, 16, 17, 20, 21, 23, 50, 51
;; rd  kill	(26)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 50, 51
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
4, 9, 13, 16, 17, 20, 21, 23, 50, 51

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d17(bb 0 insn -1) }u1(13){ d21(bb 0 insn -1) }u2(25){ d50(bb 0 insn -1) }u3(26){ d51(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 170 172 173 174 175
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 170 172 173 174 175
;; live  kill	
;; rd  in  	(10)
4, 9, 13, 16, 17, 20, 21, 23, 50, 51
;; rd  gen 	(6)
49, 267, 268, 269, 270, 271
;; rd  kill	(13)
42, 43, 44, 45, 46, 47, 48, 49, 267, 268, 269, 270, 271
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; rd  out 	(16)
4, 9, 13, 16, 17, 20, 21, 23, 49, 50, 51, 267, 268, 269, 270, 271
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 0 { d4(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 34
;;      reg 170 { d267(bb 2 insn 30) }
;;   UD chains for insn luid 2 uid 36
;;      reg 172 { d268(bb 2 insn 34) }
;;   UD chains for insn luid 3 uid 37
;;      reg 173 { d269(bb 2 insn 36) }
;;   UD chains for insn luid 4 uid 38
;;      reg 174 { d270(bb 2 insn 37) }
;;   UD chains for insn luid 5 uid 39
;;      reg 175 { d271(bb 2 insn 38) }
;;   UD chains for insn luid 6 uid 40
;;      reg 24 { d49(bb 2 insn 39) }

( 2 )->[3]->( 8 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ d17(bb 0 insn -1) }u12(13){ d21(bb 0 insn -1) }u13(25){ d50(bb 0 insn -1) }u14(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 165 166 167 169 176 177 178 179 180 181 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  gen 	 165 166 167 169 176 177 178 179 180 181 182
;; live  kill	
;; rd  in  	(16)
4, 9, 13, 16, 17, 20, 21, 23, 49, 50, 51, 267, 268, 269, 270, 271
;; rd  gen 	(11)
257, 260, 262, 266, 272, 273, 274, 275, 276, 277, 278
;; rd  kill	(15)
257, 258, 259, 260, 261, 262, 265, 266, 272, 273, 274, 275, 276, 277, 278
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; rd  out 	(27)
4, 9, 13, 16, 17, 20, 21, 23, 49, 50, 51, 257, 260, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 43
;;      reg 176 { d272(bb 3 insn 42) }
;;   UD chains for insn luid 3 uid 46
;;      reg 13 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 47
;;      reg 179 { d275(bb 3 insn 46) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 48
;;      reg 178 { d274(bb 3 insn 47) }
;;   UD chains for insn luid 6 uid 49
;;      reg 177 { d273(bb 3 insn 45) }
;;      reg 180 { d276(bb 3 insn 48) }
;;   eq_note reg 180 { }
;;   UD chains for insn luid 7 uid 50
;;      reg 165 { d257(bb 3 insn 43) }
;;      reg 181 { d277(bb 3 insn 49) }
;;   UD chains for insn luid 9 uid 52
;;      reg 182 { d278(bb 3 insn 51) }

( 2 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(11){ d17(bb 0 insn -1) }u27(13){ d21(bb 0 insn -1) }u28(25){ d50(bb 0 insn -1) }u29(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  def 	 24 [cc] 184 185 186 187
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  gen 	 24 [cc] 184 185 186 187
;; live  kill	
;; rd  in  	(16)
4, 9, 13, 16, 17, 20, 21, 23, 49, 50, 51, 267, 268, 269, 270, 271
;; rd  gen 	(5)
48, 279, 280, 281, 282
;; rd  kill	(12)
42, 43, 44, 45, 46, 47, 48, 49, 279, 280, 281, 282
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; rd  out 	(20)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 267, 268, 269, 270, 271, 279, 280, 281, 282
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 170 { d267(bb 2 insn 30) }
;;   UD chains for insn luid 1 uid 60
;;      reg 184 { d279(bb 4 insn 58) }
;;   UD chains for insn luid 2 uid 61
;;      reg 185 { d280(bb 4 insn 60) }
;;   UD chains for insn luid 3 uid 62
;;      reg 186 { d281(bb 4 insn 61) }
;;   UD chains for insn luid 4 uid 63
;;      reg 187 { d282(bb 4 insn 62) }
;;   UD chains for insn luid 5 uid 64
;;      reg 24 { d48(bb 4 insn 63) }

( 4 )->[5]->( 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(11){ d17(bb 0 insn -1) }u37(13){ d21(bb 0 insn -1) }u38(25){ d50(bb 0 insn -1) }u39(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  gen 	 166
;; live  kill	
;; rd  in  	(20)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 267, 268, 269, 270, 271, 279, 280, 281, 282
;; rd  gen 	(1)
259
;; rd  kill	(3)
258, 259, 260
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; rd  out 	(21)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 259, 267, 268, 269, 270, 271, 279, 280, 281, 282
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }

( 4 )->[6]->( 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ d17(bb 0 insn -1) }u41(13){ d21(bb 0 insn -1) }u42(25){ d50(bb 0 insn -1) }u43(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166 188 189
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  gen 	 166 188 189
;; live  kill	
;; rd  in  	(20)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 267, 268, 269, 270, 271, 279, 280, 281, 282
;; rd  gen 	(3)
258, 283, 284
;; rd  kill	(5)
258, 259, 260, 283, 284
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; rd  out 	(23)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 258, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 72
;;      reg 188 { d283(bb 6 insn 71) }
;;   UD chains for insn luid 2 uid 73
;;      reg 189 { d284(bb 6 insn 72) }

( 6 5 )->[7]->( 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u46(11){ d17(bb 0 insn -1) }u47(13){ d21(bb 0 insn -1) }u48(25){ d50(bb 0 insn -1) }u49(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164 167 169 191 192 193 194 195 196 197
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; live  gen 	 164 167 169 191 192 193 194 195 196 197
;; live  kill	
;; rd  in  	(24)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 258, 259, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284
;; rd  gen 	(10)
256, 261, 265, 285, 286, 287, 288, 289, 290, 291
;; rd  kill	(12)
256, 261, 262, 265, 266, 285, 286, 287, 288, 289, 290, 291
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; rd  out 	(34)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 256, 258, 259, 261, 265, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 78
;;      reg 191 { d285(bb 7 insn 77) }
;;   UD chains for insn luid 3 uid 81
;;      reg 13 { d21(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 82
;;      reg 194 { d288(bb 7 insn 81) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 83
;;      reg 193 { d287(bb 7 insn 82) }
;;   UD chains for insn luid 6 uid 84
;;      reg 192 { d286(bb 7 insn 80) }
;;      reg 195 { d289(bb 7 insn 83) }
;;   eq_note reg 195 { }
;;   UD chains for insn luid 7 uid 85
;;      reg 164 { d256(bb 7 insn 78) }
;;      reg 196 { d290(bb 7 insn 84) }
;;   UD chains for insn luid 9 uid 87
;;      reg 197 { d291(bb 7 insn 86) }

( 7 3 )->[8]->( 12 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(11){ d17(bb 0 insn -1) }u62(13){ d21(bb 0 insn -1) }u63(25){ d50(bb 0 insn -1) }u64(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169
;; lr  def 	 161 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; live  gen 	 161 168
;; live  kill	
;; rd  in  	(46)
4, 9, 13, 16, 17, 20, 21, 23, 48, 49, 50, 51, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291
;; rd  gen 	(2)
255, 264
;; rd  kill	(4)
254, 255, 263, 264
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; rd  out 	(48)
4, 9, 13, 16, 17, 20, 21, 23, 48, 49, 50, 51, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 90
;;      reg 169 { d266(bb 3 insn 50) d265(bb 7 insn 85) }

( 12 )->[9]->( 10 11 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u66(11){ d17(bb 0 insn -1) }u67(13){ d21(bb 0 insn -1) }u68(25){ d50(bb 0 insn -1) }u69(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 170
;; lr  def 	 24 [cc] 161 198
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  gen 	 24 [cc] 161 198
;; live  kill	
;; rd  in  	(50)
4, 9, 13, 16, 17, 20, 21, 23, 46, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(3)
47, 254, 292
;; rd  kill	(11)
42, 43, 44, 45, 46, 47, 48, 49, 254, 255, 292
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; rd  out 	(49)
4, 9, 13, 16, 17, 20, 21, 23, 47, 50, 51, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 96
;;      reg 161 { d255(bb 8 insn 90) d254(bb 9 insn 96) }
;;   UD chains for insn luid 1 uid 97
;;      reg 170 { d267(bb 2 insn 30) }
;;      reg 198 { d292(bb 9 insn 96) }
;;   UD chains for insn luid 2 uid 98
;;      reg 24 { d47(bb 9 insn 97) }

( 9 )->[10]->( 13 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ d17(bb 0 insn -1) }u76(13){ d21(bb 0 insn -1) }u77(25){ d50(bb 0 insn -1) }u78(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 199
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168
;; live  gen 	 199
;; live  kill	
;; rd  in  	(49)
4, 9, 13, 16, 17, 20, 21, 23, 47, 50, 51, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(1)
293
;; rd  kill	(1)
293
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; rd  out 	(50)
4, 9, 13, 16, 17, 20, 21, 23, 47, 50, 51, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 101
;;      reg 161 { d254(bb 9 insn 96) }
;;      reg 199 { d293(bb 10 insn 100) }

( 9 )->[11]->( 12 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(11){ d17(bb 0 insn -1) }u82(13){ d21(bb 0 insn -1) }u83(25){ d50(bb 0 insn -1) }u84(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168
;; lr  def 	 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  gen 	 168
;; live  kill	
;; rd  in  	(49)
4, 9, 13, 16, 17, 20, 21, 23, 47, 50, 51, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(1)
263
;; rd  kill	(2)
263, 264
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; rd  out 	(48)
4, 9, 13, 16, 17, 20, 21, 23, 47, 50, 51, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 106
;;      reg 168 { d264(bb 8 insn 91) d263(bb 11 insn 106) }

( 11 8 )->[12]->( 9 13 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u86(11){ d17(bb 0 insn -1) }u87(13){ d21(bb 0 insn -1) }u88(25){ d50(bb 0 insn -1) }u89(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 168
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(52)
4, 9, 13, 16, 17, 20, 21, 23, 47, 48, 49, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(1)
46
;; rd  kill	(8)
42, 43, 44, 45, 46, 47, 48, 49
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; rd  out 	(50)
4, 9, 13, 16, 17, 20, 21, 23, 46, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 110
;;      reg 167 { d262(bb 3 insn 52) d261(bb 7 insn 87) }
;;      reg 168 { d264(bb 8 insn 91) d263(bb 11 insn 106) }
;;   UD chains for insn luid 1 uid 111
;;      reg 24 { d46(bb 12 insn 110) }

( 12 10 )->[13]->( 14 16 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u93(11){ d17(bb 0 insn -1) }u94(13){ d21(bb 0 insn -1) }u95(25){ d50(bb 0 insn -1) }u96(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 168
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(52)
4, 9, 13, 16, 17, 20, 21, 23, 46, 47, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293
;; rd  gen 	(1)
45
;; rd  kill	(8)
42, 43, 44, 45, 46, 47, 48, 49
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 168
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 168
;; rd  out 	(51)
4, 9, 13, 16, 17, 20, 21, 23, 45, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 114
;;      reg 167 { d262(bb 3 insn 52) d261(bb 7 insn 87) }
;;      reg 168 { d264(bb 8 insn 91) d263(bb 11 insn 106) }
;;   UD chains for insn luid 1 uid 115
;;      reg 24 { d45(bb 13 insn 114) }

( 13 )->[14]->( 15 17 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u100(11){ d17(bb 0 insn -1) }u101(13){ d21(bb 0 insn -1) }u102(25){ d50(bb 0 insn -1) }u103(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 200 202 203 204 205
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 200 202 203 204 205
;; live  kill	
;; rd  in  	(51)
4, 9, 13, 16, 17, 20, 21, 23, 45, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293
;; rd  gen 	(6)
44, 294, 295, 296, 297, 298
;; rd  kill	(13)
42, 43, 44, 45, 46, 47, 48, 49, 294, 295, 296, 297, 298
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 200
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 200
;; rd  out 	(56)
4, 9, 13, 16, 17, 20, 21, 23, 44, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 118
;;      reg 200 { d294(bb 14 insn 117) }
;;   UD chains for insn luid 2 uid 120
;;      reg 202 { d295(bb 14 insn 118) }
;;   UD chains for insn luid 3 uid 121
;;      reg 203 { d296(bb 14 insn 120) }
;;   UD chains for insn luid 4 uid 122
;;      reg 204 { d297(bb 14 insn 121) }
;;   UD chains for insn luid 5 uid 123
;;      reg 205 { d298(bb 14 insn 122) }
;;   UD chains for insn luid 6 uid 124
;;      reg 24 { d44(bb 14 insn 123) }

( 14 )->[15]->( 17 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u110(11){ d17(bb 0 insn -1) }u111(13){ d21(bb 0 insn -1) }u112(25){ d50(bb 0 insn -1) }u113(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 200
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 200
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 210
;; live  kill	 14 [lr]
;; rd  in  	(56)
4, 9, 13, 16, 17, 20, 21, 23, 44, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298
;; rd  gen 	(1)
299
;; rd  kill	(3)
22, 23, 299
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(56)
4, 9, 13, 16, 17, 20, 21, 44, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 132
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d0(bb 15 insn 129) }
;;      reg 1 { d5(bb 15 insn 130) }
;;      reg 2 { d10(bb 15 insn 131) }
;;   UD chains for insn luid 5 uid 136
;;      reg 200 { d294(bb 14 insn 117) }
;;      reg 210 { d299(bb 15 insn 134) }

( 13 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u120(11){ d17(bb 0 insn -1) }u121(13){ d21(bb 0 insn -1) }u122(25){ d50(bb 0 insn -1) }u123(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 168
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 212
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 168
;; live  gen 	 0 [r0] 1 [r1] 212
;; live  kill	
;; rd  in  	(51)
4, 9, 13, 16, 17, 20, 21, 23, 45, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293
;; rd  gen 	(1)
300
;; rd  kill	(1)
300
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(52)
4, 9, 13, 16, 17, 20, 21, 23, 45, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 141
;;      reg 166 { d260(bb 3 insn 53) d259(bb 5 insn 66) d258(bb 6 insn 73) }
;;      reg 168 { d264(bb 8 insn 91) d263(bb 11 insn 106) }
;;   UD chains for insn luid 1 uid 142
;;      reg 212 { d300(bb 16 insn 141) }
;;   UD chains for insn luid 3 uid 144
;;      reg 13 { d21(bb 0 insn -1) }
;;      reg 0 { d2(bb 16 insn 142) }
;;      reg 1 { d7(bb 16 insn 143) }

( 14 15 )->[17]->( 1 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u130(11){ d17(bb 0 insn -1) }u131(13){ d21(bb 0 insn -1) }u132(25){ d50(bb 0 insn -1) }u133(26){ d51(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(57)
4, 9, 13, 16, 17, 20, 21, 23, 44, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(57)
4, 9, 13, 16, 17, 20, 21, 23, 44, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }
;;   reg 26 { d51(bb 0 insn -1) }

( 16 17 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u134(11){ d17(bb 0 insn -1) }u135(13){ d21(bb 0 insn -1) }u136(14){ d23(bb 0 insn -1) }u137(25){ d50(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(59)
4, 9, 13, 16, 17, 20, 21, 23, 44, 45, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(59)
4, 9, 13, 16, 17, 20, 21, 23, 44, 45, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300
;;  UD chains for artificial uses
;;   reg 11 { d17(bb 0 insn -1) }
;;   reg 13 { d21(bb 0 insn -1) }
;;   reg 14 { d23(bb 0 insn -1) }
;;   reg 25 { d50(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 40 to worklist
  Adding insn 155 to worklist
  Adding insn 64 to worklist
  Adding insn 157 to worklist
  Adding insn 159 to worklist
  Adding insn 98 to worklist
  Adding insn 161 to worklist
  Adding insn 101 to worklist
  Adding insn 111 to worklist
  Adding insn 115 to worklist
  Adding insn 124 to worklist
  Adding insn 163 to worklist
  Adding insn 136 to worklist
  Adding insn 132 to worklist
  Adding insn 144 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 144:
Processing use of (reg 0 r0) in insn 144:
  Adding insn 142 to worklist
Processing use of (reg 1 r1) in insn 144:
  Adding insn 143 to worklist
Processing use of (reg 212) in insn 142:
  Adding insn 141 to worklist
Processing use of (reg 166 [ base ]) in insn 141:
  Adding insn 53 to worklist
  Adding insn 66 to worklist
  Adding insn 73 to worklist
Processing use of (reg 168 [ i ]) in insn 141:
  Adding insn 91 to worklist
  Adding insn 106 to worklist
Processing use of (reg 168 [ i ]) in insn 106:
Processing use of (reg 189 [ core_num_brps ]) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 188) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 13 sp) in insn 132:
Processing use of (reg 0 r0) in insn 132:
  Adding insn 129 to worklist
Processing use of (reg 1 r1) in insn 132:
  Adding insn 130 to worklist
Processing use of (reg 2 r2) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 200) in insn 136:
  Adding insn 117 to worklist
Processing use of (subreg (reg 210) 0) in insn 136:
  Adding insn 134 to worklist
Processing use of (reg 24 cc) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 205) in insn 123:
  Adding insn 122 to worklist
Processing use of (reg 204) in insn 122:
  Adding insn 121 to worklist
Processing use of (subreg (reg 203) 0) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 202 [ __warned ]) in insn 120:
  Adding insn 118 to worklist
Processing use of (reg 200) in insn 118:
Processing use of (reg 24 cc) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 167 [ max_slots ]) in insn 114:
  Adding insn 52 to worklist
  Adding insn 87 to worklist
Processing use of (reg 168 [ i ]) in insn 114:
Processing use of (reg 197) in insn 87:
  Adding insn 86 to worklist
Processing use of (reg 182) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 24 cc) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 167 [ max_slots ]) in insn 110:
Processing use of (reg 168 [ i ]) in insn 110:
Processing use of (reg 161 [ ivtmp.880 ]) in insn 101:
  Adding insn 96 to worklist
Processing use of (reg 199) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 161 [ ivtmp.880 ]) in insn 96:
  Adding insn 90 to worklist
Processing use of (reg 169 [ slots ]) in insn 90:
  Adding insn 50 to worklist
  Adding insn 85 to worklist
Processing use of (reg 164 [ __ptr ]) in insn 85:
  Adding insn 78 to worklist
Processing use of (reg 196) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 192) in insn 84:
  Adding insn 80 to worklist
Processing use of (reg 195 [ <variable>.cpu ]) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 193) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 194) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 13 sp) in insn 81:
Processing use of (reg 191) in insn 78:
  Adding insn 77 to worklist
Processing use of (reg 165 [ __ptr ]) in insn 50:
  Adding insn 43 to worklist
Processing use of (reg 181) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 177) in insn 49:
  Adding insn 45 to worklist
Processing use of (reg 180 [ <variable>.cpu ]) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 178) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 179) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 13 sp) in insn 46:
Processing use of (reg 176) in insn 43:
  Adding insn 42 to worklist
Processing use of (reg 24 cc) in insn 98:
  Adding insn 97 to worklist
Processing use of (reg 170 [ bp ]) in insn 97:
  Adding insn 30 to worklist
Processing use of (reg 198) in insn 97:
Processing use of (reg 0 r0) in insn 30:
Processing use of (reg 24 cc) in insn 64:
  Adding insn 63 to worklist
Processing use of (reg 187) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 186) in insn 62:
  Adding insn 61 to worklist
Processing use of (subreg (reg 185) 0) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 184) in insn 60:
  Adding insn 58 to worklist
Processing use of (reg 170 [ bp ]) in insn 58:
Processing use of (reg 24 cc) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 175) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 174) in insn 38:
  Adding insn 37 to worklist
Processing use of (subreg (reg 173) 0) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 172) in insn 36:
  Adding insn 34 to worklist
Processing use of (reg 170 [ bp ]) in insn 34:


arch_uninstall_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={5d,3u} r1={5d,2u} r2={4d,1u} r3={3d} r11={1d,17u} r12={3d} r13={1d,21u,2d} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={8d,6u} r25={1d,17u} r26={1d,16u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r161={2d,2u} r164={1d,1u} r165={1d,1u} r166={3d,1u} r167={2d,2u} r168={2d,4u} r169={2d,1u} r170={1d,3u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u,1d} r181={1d,1u} r182={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u,1d} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,2u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r210={1d,1u} r212={1d,1u} 
;;    total ref usage 438{301d,133u,4e} in 72{70 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253
0[0,5] 1[5,5] 2[10,4] 3[14,3] 11[17,1] 12[18,3] 13[21,1] 14[22,2] 15[24,2] 16[26,2] 17[28,2] 18[30,2] 19[32,2] 20[34,2] 21[36,2] 22[38,2] 23[40,2] 24[42,8] 25[50,1] 26[51,1] 27[52,2] 28[54,2] 29[56,2] 30[58,2] 31[60,2] 32[62,2] 33[64,2] 34[66,2] 35[68,2] 36[70,2] 37[72,2] 38[74,2] 39[76,2] 40[78,2] 41[80,2] 42[82,2] 43[84,2] 44[86,2] 45[88,2] 46[90,2] 47[92,2] 48[94,2] 49[96,2] 50[98,2] 51[100,2] 52[102,2] 53[104,2] 54[106,2] 55[108,2] 56[110,2] 57[112,2] 58[114,2] 59[116,2] 60[118,2] 61[120,2] 62[122,2] 63[124,2] 64[126,2] 65[128,2] 66[130,2] 67[132,2] 68[134,2] 69[136,2] 70[138,2] 71[140,2] 72[142,2] 73[144,2] 74[146,2] 75[148,2] 76[150,2] 77[152,2] 78[154,2] 79[156,2] 80[158,2] 81[160,2] 82[162,2] 83[164,2] 84[166,2] 85[168,2] 86[170,2] 87[172,2] 88[174,2] 89[176,2] 90[178,2] 91[180,2] 92[182,2] 93[184,2] 94[186,2] 95[188,2] 96[190,2] 97[192,2] 98[194,2] 99[196,2] 100[198,2] 101[200,2] 102[202,2] 103[204,2] 104[206,2] 105[208,2] 106[210,2] 107[212,2] 108[214,2] 109[216,2] 110[218,2] 111[220,2] 112[222,2] 113[224,2] 114[226,2] 115[228,2] 116[230,2] 117[232,2] 118[234,2] 119[236,2] 120[238,2] 121[240,2] 122[242,2] 123[244,2] 124[246,2] 125[248,2] 126[250,2] 127[252,2] 161[254,2] 164[256,1] 165[257,1] 166[258,3] 167[261,2] 168[263,2] 169[265,2] 170[267,1] 172[268,1] 173[269,1] 174[270,1] 175[271,1] 176[272,1] 177[273,1] 178[274,1] 179[275,1] 180[276,1] 181[277,1] 182[278,1] 184[279,1] 185[280,1] 186[281,1] 187[282,1] 188[283,1] 189[284,1] 191[285,1] 192[286,1] 193[287,1] 194[288,1] 195[289,1] 196[290,1] 197[291,1] 198[292,1] 199[293,1] 200[294,1] 202[295,1] 203[296,1] 204[297,1] 205[298,1] 210[299,1] 212[300,1] 
(note 29 0 32 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 170 172 173 174 175
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 170 172 173 174 175
;; live  kill	
;; rd  in  	(10)
4, 9, 13, 16, 17, 20, 21, 23, 50, 51
;; rd  gen 	(6)
49, 267, 268, 269, 270, 271
;; rd  kill	(13)
42, 43, 44, 45, 46, 47, 48, 49, 267, 268, 269, 270, 271

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 32 29 30 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 30 32 31 2 arch/arm/kernel/hw_breakpoint.c:396 (set (reg/v/f:SI 170 [ bp ])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ bp ])
        (nil)))

(note 31 30 34 2 NOTE_INSN_FUNCTION_BEG)

(insn 34 31 36 2 arch/arm/kernel/hw_breakpoint.c:401 (set (reg:SI 172)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 170 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 36 34 37 2 arch/arm/kernel/hw_breakpoint.c:401 (set (reg:SI 173)
        (and:SI (reg:SI 172)
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 172)
        (nil)))

(insn 37 36 38 2 arch/arm/kernel/hw_breakpoint.c:401 (set (reg:QI 174)
        (subreg:QI (reg:SI 173) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 38 37 39 2 arch/arm/kernel/hw_breakpoint.c:401 (set (reg:SI 175)
        (zero_extend:SI (reg:QI 174))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 174)
        (nil)))

(insn 39 38 40 2 arch/arm/kernel/hw_breakpoint.c:401 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (nil)))

(jump_insn 40 39 41 2 arch/arm/kernel/hw_breakpoint.c:401 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 56)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; rd  out 	(16)
4, 9, 13, 16, 17, 20, 21, 23, 49, 50, 51, 267, 268, 269, 270, 271


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u11(11){ }u12(13){ }u13(25){ }u14(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 165 166 167 169 176 177 178 179 180 181 182
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  gen 	 165 166 167 169 176 177 178 179 180 181 182
;; live  kill	
;; rd  in  	(16)
4, 9, 13, 16, 17, 20, 21, 23, 49, 50, 51, 267, 268, 269, 270, 271
;; rd  gen 	(11)
257, 260, 262, 266, 272, 273, 274, 275, 276, 277, 278
;; rd  kill	(15)
257, 258, 259, 260, 261, 262, 265, 266, 272, 273, 274, 275, 276, 277, 278

;; Pred edge  2 [50.0%]  (fallthru)
(note 41 40 42 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg/f:SI 176)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 43 42 45 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg/v:SI 165 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 176)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8118453)) -1 (expr_list:REG_DEAD (reg/f:SI 176)
        (nil)))

(insn 45 43 46 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg/f:SI 177)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 46 45 47 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg:SI 179)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 47 46 48 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg:SI 178)
        (and:SI (reg:SI 179)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 179)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 48 47 49 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg:SI 180 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 178)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 178)
        (nil)))

(insn 49 48 50 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg:SI 181)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 180 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 177)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 180 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 177)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 180 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 50 49 51 3 arch/arm/kernel/hw_breakpoint.c:404 (set (reg/v/f:SI 169 [ slots ])
        (plus:SI (reg/v:SI 165 [ __ptr ])
            (reg:SI 181))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_DEAD (reg/v:SI 165 [ __ptr ])
            (nil))))

(insn 51 50 52 3 arch/arm/kernel/hw_breakpoint.c:405 (set (reg/f:SI 182)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 52 51 53 3 arch/arm/kernel/hw_breakpoint.c:405 (set (reg/v:SI 167 [ max_slots ])
        (mem/c/i:SI (plus:SI (reg/f:SI 182)
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
            (nil))))

(insn 53 52 155 3 arch/arm/kernel/hw_breakpoint.c:403 (set (reg/v:SI 166 [ base ])
        (const_int 80 [0x50])) 167 {*arm_movsi_insn} (nil))

(jump_insn 155 53 156 3 (set (pc)
        (label_ref 88)) -1 (nil))
;; End of basic block 3 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; rd  out 	(27)
4, 9, 13, 16, 17, 20, 21, 23, 49, 50, 51, 257, 260, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278


;; Succ edge  8 [100.0%] 

(barrier 156 155 56)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u26(11){ }u27(13){ }u28(25){ }u29(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 170
;; lr  def 	 24 [cc] 184 185 186 187
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  gen 	 24 [cc] 184 185 186 187
;; live  kill	
;; rd  in  	(16)
4, 9, 13, 16, 17, 20, 21, 23, 49, 50, 51, 267, 268, 269, 270, 271
;; rd  gen 	(5)
48, 279, 280, 281, 282
;; rd  kill	(12)
42, 43, 44, 45, 46, 47, 48, 49, 279, 280, 281, 282

;; Pred edge  2 [50.0%] 
(code_label 56 156 57 4 278 "" [1 uses])

(note 57 56 58 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 58 57 60 4 arch/arm/kernel/hw_breakpoint.c:408 (set (reg:SI 184)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 170 [ bp ])
                    (const_int 211 [0xd3])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 60 58 61 4 arch/arm/kernel/hw_breakpoint.c:408 (set (reg:SI 185)
        (and:SI (reg:SI 184)
            (const_int -128 [0xffffffffffffff80]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 61 60 62 4 arch/arm/kernel/hw_breakpoint.c:408 (set (reg:QI 186)
        (subreg:QI (reg:SI 185) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 185)
        (nil)))

(insn 62 61 63 4 arch/arm/kernel/hw_breakpoint.c:408 (set (reg:SI 187)
        (zero_extend:SI (reg:QI 186))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 186)
        (nil)))

(insn 63 62 64 4 arch/arm/kernel/hw_breakpoint.c:408 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 187)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(jump_insn 64 63 65 4 arch/arm/kernel/hw_breakpoint.c:408 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 69)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; rd  out 	(20)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 267, 268, 269, 270, 271, 279, 280, 281, 282


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u36(11){ }u37(13){ }u38(25){ }u39(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  gen 	 166
;; live  kill	
;; rd  in  	(20)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 267, 268, 269, 270, 271, 279, 280, 281, 282
;; rd  gen 	(1)
259
;; rd  kill	(3)
258, 259, 260

;; Pred edge  4 [50.0%]  (fallthru)
(note 65 64 66 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 66 65 157 5 arch/arm/kernel/hw_breakpoint.c:411 (set (reg/v:SI 166 [ base ])
        (const_int 112 [0x70])) 167 {*arm_movsi_insn} (nil))

(jump_insn 157 66 158 5 (set (pc)
        (label_ref 74)) -1 (nil))
;; End of basic block 5 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; rd  out 	(21)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 259, 267, 268, 269, 270, 271, 279, 280, 281, 282


;; Succ edge  7 [100.0%] 

(barrier 158 157 69)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 166 188 189
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 170
;; live  gen 	 166 188 189
;; live  kill	
;; rd  in  	(20)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 267, 268, 269, 270, 271, 279, 280, 281, 282
;; rd  gen 	(3)
258, 283, 284
;; rd  kill	(5)
258, 259, 260, 283, 284

;; Pred edge  4 [50.0%] 
(code_label 69 158 70 6 280 "" [1 uses])

(note 70 69 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 71 70 72 6 arch/arm/kernel/hw_breakpoint.c:409 (set (reg/f:SI 188)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 72 71 73 6 arch/arm/kernel/hw_breakpoint.c:409 (set (reg:SI 189 [ core_num_brps ])
        (mem/c/i:SI (plus:SI (reg/f:SI 188)
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 188)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
            (nil))))

(insn 73 72 74 6 arch/arm/kernel/hw_breakpoint.c:409 (set (reg/v:SI 166 [ base ])
        (plus:SI (reg:SI 189 [ core_num_brps ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 189 [ core_num_brps ])
        (nil)))
;; End of basic block 6 -> ( 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; rd  out 	(23)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 258, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 164 167 169 191 192 193 194 195 196 197
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 170
;; live  gen 	 164 167 169 191 192 193 194 195 196 197
;; live  kill	
;; rd  in  	(24)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 258, 259, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284
;; rd  gen 	(10)
256, 261, 265, 285, 286, 287, 288, 289, 290, 291
;; rd  kill	(12)
256, 261, 262, 265, 266, 285, 286, 287, 288, 289, 290, 291

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
(code_label 74 73 75 7 281 "" [1 uses])

(note 75 74 77 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 77 75 78 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg/f:SI 191)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))
        (nil)))

(insn 78 77 80 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg/v:SI 164 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 191)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8119477)) -1 (expr_list:REG_DEAD (reg/f:SI 191)
        (nil)))

(insn 80 78 81 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg/f:SI 192)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 81 80 82 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg:SI 194)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 82 81 83 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg:SI 193)
        (and:SI (reg:SI 194)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 194)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 83 82 84 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg:SI 195 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 193)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(insn 84 83 85 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg:SI 196)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 195 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 192)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 195 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 192)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 195 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 85 84 86 7 arch/arm/kernel/hw_breakpoint.c:412 (set (reg/v/f:SI 169 [ slots ])
        (plus:SI (reg/v:SI 164 [ __ptr ])
            (reg:SI 196))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 196)
        (expr_list:REG_DEAD (reg/v:SI 164 [ __ptr ])
            (nil))))

(insn 86 85 87 7 arch/arm/kernel/hw_breakpoint.c:413 (set (reg/f:SI 197)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 7 arch/arm/kernel/hw_breakpoint.c:413 (set (reg/v:SI 167 [ max_slots ])
        (mem/c/i:SI (plus:SI (reg/f:SI 197)
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 197)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 core_num_wrps+0 S4 A32])
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; rd  out 	(34)
4, 9, 13, 16, 17, 20, 21, 23, 48, 50, 51, 256, 258, 259, 261, 265, 267, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 7 3) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u61(11){ }u62(13){ }u63(25){ }u64(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 169
;; lr  def 	 161 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 169 170
;; live  gen 	 161 168
;; live  kill	
;; rd  in  	(46)
4, 9, 13, 16, 17, 20, 21, 23, 48, 49, 50, 51, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291
;; rd  gen 	(2)
255, 264
;; rd  kill	(4)
254, 255, 263, 264

;; Pred edge  7 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 88 87 89 8 279 "" [1 uses])

(note 89 88 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 90 89 91 8 arch/arm/kernel/hw_breakpoint.c:413 (set (reg:SI 161 [ ivtmp.880 ])
        (reg/v/f:SI 169 [ slots ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 169 [ slots ])
        (nil)))

(insn 91 90 159 8 arch/arm/kernel/hw_breakpoint.c:417 (set (reg/v:SI 168 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 159 91 160 8 arch/arm/kernel/hw_breakpoint.c:417 (set (pc)
        (label_ref 107)) -1 (nil))
;; End of basic block 8 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; rd  out 	(48)
4, 9, 13, 16, 17, 20, 21, 23, 48, 49, 50, 51, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291


;; Succ edge  12 [100.0%] 

(barrier 160 159 109)

;; Start of basic block ( 12) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161 170
;; lr  def 	 24 [cc] 161 198
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  gen 	 24 [cc] 161 198
;; live  kill	
;; rd  in  	(50)
4, 9, 13, 16, 17, 20, 21, 23, 46, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(3)
47, 254, 292
;; rd  kill	(11)
42, 43, 44, 45, 46, 47, 48, 49, 254, 255, 292

;; Pred edge  12 [95.5%] 
(code_label 109 160 94 9 285 "" [1 uses])

(note 94 109 96 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 96 94 97 9 arch/arm/kernel/hw_breakpoint.c:420 (set (reg/f:SI 198)
        (mem/f:SI (post_inc:SI (reg:SI 161 [ ivtmp.880 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 161 [ ivtmp.880 ])
        (nil)))

(insn 97 96 98 9 arch/arm/kernel/hw_breakpoint.c:420 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 198)
            (reg/v/f:SI 170 [ bp ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 198)
        (nil)))

(jump_insn 98 97 99 9 arch/arm/kernel/hw_breakpoint.c:420 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 104)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 9 -> ( 10 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; rd  out 	(49)
4, 9, 13, 16, 17, 20, 21, 23, 47, 50, 51, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292


;; Succ edge  10 [4.5%]  (fallthru,loop_exit)
;; Succ edge  11 [95.5%] 

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u75(11){ }u76(13){ }u77(25){ }u78(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 161
;; lr  def 	 199
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168
;; live  gen 	 199
;; live  kill	
;; rd  in  	(49)
4, 9, 13, 16, 17, 20, 21, 23, 47, 50, 51, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(1)
293
;; rd  kill	(1)
293

;; Pred edge  9 [4.5%]  (fallthru,loop_exit)
(note 99 98 100 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 101 10 arch/arm/kernel/hw_breakpoint.c:421 (set (reg:SI 199)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 101 100 161 10 arch/arm/kernel/hw_breakpoint.c:421 (set (mem/f:SI (plus:SI (reg:SI 161 [ ivtmp.880 ])
                (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])
        (reg:SI 199)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 199)
        (expr_list:REG_DEAD (reg:SI 161 [ ivtmp.880 ])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(jump_insn 161 101 162 10 arch/arm/kernel/hw_breakpoint.c:422 (set (pc)
        (label_ref 112)) -1 (nil))
;; End of basic block 10 -> ( 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; rd  out 	(50)
4, 9, 13, 16, 17, 20, 21, 23, 47, 50, 51, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293


;; Succ edge  13 [100.0%] 

(barrier 162 161 104)

;; Start of basic block ( 9) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u81(11){ }u82(13){ }u83(25){ }u84(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 168
;; lr  def 	 168
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  gen 	 168
;; live  kill	
;; rd  in  	(49)
4, 9, 13, 16, 17, 20, 21, 23, 47, 50, 51, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(1)
263
;; rd  kill	(2)
263, 264

;; Pred edge  9 [95.5%] 
(code_label 104 162 105 11 283 "" [1 uses])

(note 105 104 106 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 106 105 107 11 arch/arm/kernel/hw_breakpoint.c:417 (set (reg/v:SI 168 [ i ])
        (plus:SI (reg/v:SI 168 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 11 -> ( 12)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; rd  out 	(48)
4, 9, 13, 16, 17, 20, 21, 23, 47, 50, 51, 254, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292


;; Succ edge  12 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 11 8) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u86(11){ }u87(13){ }u88(25){ }u89(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 168
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(52)
4, 9, 13, 16, 17, 20, 21, 23, 47, 48, 49, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292
;; rd  gen 	(1)
46
;; rd  kill	(8)
42, 43, 44, 45, 46, 47, 48, 49

;; Pred edge  11 [100.0%]  (fallthru,dfs_back)
;; Pred edge  8 [100.0%] 
(code_label 107 106 108 12 282 "" [1 uses])

(note 108 107 110 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 110 108 111 12 arch/arm/kernel/hw_breakpoint.c:417 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 168 [ i ])
            (reg/v:SI 167 [ max_slots ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 111 110 112 12 arch/arm/kernel/hw_breakpoint.c:417 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 109)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 12 -> ( 9 13)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 161 166 167 168 170
;; rd  out 	(50)
4, 9, 13, 16, 17, 20, 21, 23, 46, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292


;; Succ edge  9 [95.5%] 
;; Succ edge  13 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 12 10) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u93(11){ }u94(13){ }u95(25){ }u96(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 168
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 167 168
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(52)
4, 9, 13, 16, 17, 20, 21, 23, 46, 47, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293
;; rd  gen 	(1)
45
;; rd  kill	(8)
42, 43, 44, 45, 46, 47, 48, 49

;; Pred edge  12 [4.5%]  (fallthru,loop_exit)
;; Pred edge  10 [100.0%] 
(code_label 112 111 113 13 284 "" [1 uses])

(note 113 112 114 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 114 113 115 13 arch/arm/kernel/hw_breakpoint.c:426 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 168 [ i ])
            (reg/v:SI 167 [ max_slots ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 167 [ max_slots ])
        (nil)))

(jump_insn 115 114 116 13 arch/arm/kernel/hw_breakpoint.c:426 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 139)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 13 -> ( 14 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 168
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 168
;; rd  out 	(51)
4, 9, 13, 16, 17, 20, 21, 23, 45, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293


;; Succ edge  14 [0.0%]  (fallthru)
;; Succ edge  16 [100.0%] 

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 200 202 203 204 205
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 200 202 203 204 205
;; live  kill	
;; rd  in  	(51)
4, 9, 13, 16, 17, 20, 21, 23, 45, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293
;; rd  gen 	(6)
44, 294, 295, 296, 297, 298
;; rd  kill	(13)
42, 43, 44, 45, 46, 47, 48, 49, 294, 295, 296, 297, 298

;; Pred edge  13 [0.0%]  (fallthru)
(note 116 115 117 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 117 116 118 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (reg/f:SI 200)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 118 117 120 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (reg:SI 202 [ __warned ])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 200)
                    (const_int 17 [0x11])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 17 [0x11]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 120 118 121 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (reg:SI 203)
        (xor:SI (reg:SI 202 [ __warned ])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 202 [ __warned ])
        (nil)))

(insn 121 120 122 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (reg:QI 204)
        (subreg:QI (reg:SI 203) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(insn 122 121 123 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (reg:SI 205)
        (zero_extend:SI (reg:QI 204))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 204)
        (nil)))

(insn 123 122 124 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 205)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 205)
        (nil)))

(jump_insn 124 123 125 14 arch/arm/kernel/hw_breakpoint.c:426 discrim 1 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 151)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 14 -> ( 15 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 200
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 200
;; rd  out 	(56)
4, 9, 13, 16, 17, 20, 21, 23, 44, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298


;; Succ edge  15 [0.0%]  (fallthru)
;; Succ edge  17 [100.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u110(11){ }u111(13){ }u112(25){ }u113(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 200
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 200
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 200
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 210
;; live  kill	 14 [lr]
;; rd  in  	(56)
4, 9, 13, 16, 17, 20, 21, 23, 44, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298
;; rd  gen 	(1)
299
;; rd  kill	(3)
22, 23, 299

;; Pred edge  14 [0.0%]  (fallthru)
(note 125 124 129 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 129 125 130 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 130 129 131 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 3 (set (reg:SI 1 r1)
        (const_int 426 [0x1aa])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 426 [0x1aa])
        (nil)))

(insn 131 130 132 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 3 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11585c00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11585c00>)
        (nil)))

(call_insn 132 131 134 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 134 132 136 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 5 (set (reg:SI 210)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 136 134 163 15 arch/arm/kernel/hw_breakpoint.c:426 discrim 5 (set (mem/c/i:QI (plus:SI (reg/f:SI 200)
                (const_int 17 [0x11])) [0 __warned+0 S1 A8])
        (subreg:QI (reg:SI 210) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 210)
        (expr_list:REG_DEAD (reg/f:SI 200)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(jump_insn 163 136 164 15 (set (pc)
        (label_ref 151)) -1 (nil))
;; End of basic block 15 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(56)
4, 9, 13, 16, 17, 20, 21, 44, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299


;; Succ edge  17 [100.0%] 

(barrier 164 163 139)

;; Start of basic block ( 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u120(11){ }u121(13){ }u122(25){ }u123(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 168
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 166 168
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 212
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 166 168
;; live  gen 	 0 [r0] 1 [r1] 212
;; live  kill	
;; rd  in  	(51)
4, 9, 13, 16, 17, 20, 21, 23, 45, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293
;; rd  gen 	(1)
300
;; rd  kill	(1)
300

;; Pred edge  13 [100.0%] 
(code_label 139 164 140 16 286 "" [1 uses])

(note 140 139 141 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 141 140 142 16 arch/arm/kernel/hw_breakpoint.c:430 (set (reg:SI 212)
        (plus:SI (reg/v:SI 168 [ i ])
            (reg/v:SI 166 [ base ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 168 [ i ])
        (expr_list:REG_DEAD (reg/v:SI 166 [ base ])
            (nil))))

(insn 142 141 143 16 arch/arm/kernel/hw_breakpoint.c:430 (set (reg:SI 0 r0)
        (reg:SI 212)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 212)
        (nil)))

(insn 143 142 144 16 arch/arm/kernel/hw_breakpoint.c:430 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn/j 144 143 145 16 arch/arm/kernel/hw_breakpoint.c:430 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 16 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(52)
4, 9, 13, 16, 17, 20, 21, 23, 45, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 300


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 145 144 151)

;; Start of basic block ( 14 15) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u130(11){ }u131(13){ }u132(25){ }u133(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(57)
4, 9, 13, 16, 17, 20, 21, 23, 44, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  14 [100.0%] 
;; Pred edge  15 [100.0%] 
(code_label 151 145 154 17 288 "" [2 uses])

(note 154 151 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 17 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(57)
4, 9, 13, 16, 17, 20, 21, 23, 44, 50, 51, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_install_hw_breakpoint (arch_install_hw_breakpoint)[0:1255]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 42 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 44 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 22 n_edges 29 count 44 (    2)


arch_install_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,7u} r1={8d,3u} r2={6d,1u} r3={5d} r11={1d,21u} r12={5d} r13={1d,27u,2d} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={12d,8u} r25={1d,21u} r26={1d,20u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={2d,2u} r136={1d,1u} r137={1d,1u} r138={3d,1u} r139={3d,1u} r140={3d,2u} r141={4d,1u} r142={4d,1u} r143={2d,2u} r144={2d,5u} r145={2d,1u} r146={1d,2u} r148={1d,12u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,4u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u,1d} r187={1d,1u} r188={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u,1d} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,2u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r274={1d,1u} r276={1d,1u} r277={1d,1u} r279={1d,8u} 
;;    total ref usage 869{618d,247u,4e} in 161{157 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493
0[0,9] 1[9,8] 2[17,6] 3[23,5] 11[28,1] 12[29,5] 13[34,1] 14[35,5] 15[40,4] 16[44,4] 17[48,4] 18[52,4] 19[56,4] 20[60,4] 21[64,4] 22[68,4] 23[72,4] 24[76,12] 25[88,1] 26[89,1] 27[90,4] 28[94,4] 29[98,4] 30[102,4] 31[106,4] 32[110,4] 33[114,4] 34[118,4] 35[122,4] 36[126,4] 37[130,4] 38[134,4] 39[138,4] 40[142,4] 41[146,4] 42[150,4] 43[154,4] 44[158,4] 45[162,4] 46[166,4] 47[170,4] 48[174,4] 49[178,4] 50[182,4] 51[186,4] 52[190,4] 53[194,4] 54[198,4] 55[202,4] 56[206,4] 57[210,4] 58[214,4] 59[218,4] 60[222,4] 61[226,4] 62[230,4] 63[234,4] 64[238,4] 65[242,4] 66[246,4] 67[250,4] 68[254,4] 69[258,4] 70[262,4] 71[266,4] 72[270,4] 73[274,4] 74[278,4] 75[282,4] 76[286,4] 77[290,4] 78[294,4] 79[298,4] 80[302,4] 81[306,4] 82[310,4] 83[314,4] 84[318,4] 85[322,4] 86[326,4] 87[330,4] 88[334,4] 89[338,4] 90[342,4] 91[346,4] 92[350,4] 93[354,4] 94[358,4] 95[362,4] 96[366,4] 97[370,4] 98[374,4] 99[378,4] 100[382,4] 101[386,4] 102[390,4] 103[394,4] 104[398,4] 105[402,4] 106[406,4] 107[410,4] 108[414,4] 109[418,4] 110[422,4] 111[426,4] 112[430,4] 113[434,4] 114[438,4] 115[442,4] 116[446,4] 117[450,4] 118[454,4] 119[458,4] 120[462,4] 121[466,4] 122[470,4] 123[474,4] 124[478,4] 125[482,4] 126[486,4] 127[490,4] 133[494,2] 136[496,1] 137[497,1] 138[498,3] 139[501,3] 140[504,3] 141[507,4] 142[511,4] 143[515,2] 144[517,2] 145[519,2] 146[521,1] 148[522,1] 150[523,1] 151[524,1] 152[525,1] 153[526,1] 155[527,1] 156[528,1] 157[529,1] 158[530,1] 159[531,1] 161[532,1] 162[533,1] 163[534,1] 164[535,1] 167[536,1] 168[537,1] 169[538,1] 170[539,1] 173[540,1] 174[541,1] 175[542,1] 176[543,1] 179[544,1] 180[545,1] 181[546,1] 182[547,1] 183[548,1] 184[549,1] 185[550,1] 186[551,1] 187[552,1] 188[553,1] 191[554,1] 192[555,1] 193[556,1] 194[557,1] 196[558,1] 197[559,1] 198[560,1] 199[561,1] 201[562,1] 202[563,1] 203[564,1] 204[565,1] 205[566,1] 208[567,1] 209[568,1] 210[569,1] 213[570,1] 214[571,1] 215[572,1] 216[573,1] 219[574,1] 220[575,1] 221[576,1] 224[577,1] 225[578,1] 226[579,1] 227[580,1] 228[581,1] 230[582,1] 231[583,1] 232[584,1] 233[585,1] 235[586,1] 236[587,1] 237[588,1] 238[589,1] 239[590,1] 242[591,1] 243[592,1] 244[593,1] 247[594,1] 248[595,1] 249[596,1] 250[597,1] 253[598,1] 254[599,1] 255[600,1] 257[601,1] 258[602,1] 259[603,1] 260[604,1] 261[605,1] 262[606,1] 263[607,1] 264[608,1] 265[609,1] 267[610,1] 268[611,1] 269[612,1] 270[613,1] 274[614,1] 276[615,1] 277[616,1] 279[617,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d8(0){ }d16(1){ }d22(2){ }d27(3){ }d28(11){ }d33(12){ }d34(13){ }d39(14){ }d88(25){ }d89(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
8, 16, 22, 27, 28, 33, 34, 39, 88, 89
;; rd  kill	(42)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 88, 89
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
8, 16, 22, 27, 28, 33, 34, 39, 88, 89

( 0 )->[2]->( 21 3 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d28(bb 0 insn -1) }u1(13){ d34(bb 0 insn -1) }u2(25){ d88(bb 0 insn -1) }u3(26){ d89(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 148
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 140 148
;; live  kill	 14 [lr]
;; rd  in  	(10)
8, 16, 22, 27, 28, 33, 34, 39, 88, 89
;; rd  gen 	(4)
7, 86, 506, 522
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 35, 36, 37, 38, 39, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 504, 505, 506, 522
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; rd  out 	(12)
7, 16, 22, 27, 28, 33, 34, 86, 88, 89, 506, 522
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d8(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 13 { d34(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 7
;;      reg 0 { d7(bb 2 insn 6) }
;;   UD chains for insn luid 3 uid 8
;;      reg 140 { d506(bb 2 insn 7) }
;;   UD chains for insn luid 4 uid 9
;;      reg 24 { d86(bb 2 insn 8) }

( 2 )->[3]->( 4 7 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ d28(bb 0 insn -1) }u10(13){ d34(bb 0 insn -1) }u11(25){ d88(bb 0 insn -1) }u12(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 138 139 150 151 152 153 155 156 157 158 159 161 162 163 164 167 168 169 170 173 174 175 176 179 180 181 279
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; live  gen 	 24 [cc] 138 139 150 151 152 153 155 156 157 158 159 161 162 163 164 167 168 169 170 173 174 175 176 179 180 181 279
;; live  kill	
;; rd  in  	(12)
7, 16, 22, 27, 28, 33, 34, 86, 88, 89, 506, 522
;; rd  gen 	(28)
85, 500, 503, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 617
;; rd  kill	(43)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 498, 499, 500, 501, 502, 503, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 617
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 148 279
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 148 279
;; rd  out 	(39)
7, 16, 22, 27, 28, 33, 34, 85, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 11
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 12
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 2 uid 14
;;      reg 150 { d523(bb 3 insn 12) }
;;   UD chains for insn luid 3 uid 15
;;      reg 151 { d524(bb 3 insn 14) }
;;   UD chains for insn luid 4 uid 16
;;      reg 152 { d525(bb 3 insn 15) }
;;   UD chains for insn luid 5 uid 17
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 6 uid 19
;;      reg 155 { d527(bb 3 insn 17) }
;;   UD chains for insn luid 7 uid 20
;;      reg 156 { d528(bb 3 insn 19) }
;;   UD chains for insn luid 8 uid 21
;;      reg 157 { d529(bb 3 insn 20) }
;;   UD chains for insn luid 9 uid 22
;;      reg 153 { d526(bb 3 insn 16) }
;;      reg 158 { d530(bb 3 insn 21) }
;;   UD chains for insn luid 10 uid 23
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 11 uid 25
;;      reg 161 { d532(bb 3 insn 23) }
;;   UD chains for insn luid 12 uid 26
;;      reg 162 { d533(bb 3 insn 25) }
;;   UD chains for insn luid 13 uid 27
;;      reg 159 { d531(bb 3 insn 22) }
;;      reg 163 { d534(bb 3 insn 26) }
;;   UD chains for insn luid 14 uid 30
;;      reg 161 { d532(bb 3 insn 23) }
;;   UD chains for insn luid 15 uid 31
;;      reg 167 { d536(bb 3 insn 30) }
;;   UD chains for insn luid 16 uid 32
;;      reg 168 { d537(bb 3 insn 31) }
;;   UD chains for insn luid 17 uid 33
;;      reg 164 { d535(bb 3 insn 27) }
;;      reg 169 { d538(bb 3 insn 32) }
;;   UD chains for insn luid 18 uid 36
;;      reg 161 { d532(bb 3 insn 23) }
;;   UD chains for insn luid 19 uid 37
;;      reg 173 { d540(bb 3 insn 36) }
;;   UD chains for insn luid 20 uid 38
;;      reg 174 { d541(bb 3 insn 37) }
;;   UD chains for insn luid 21 uid 39
;;      reg 170 { d539(bb 3 insn 33) }
;;      reg 175 { d542(bb 3 insn 38) }
;;   UD chains for insn luid 22 uid 40
;;      reg 176 { d543(bb 3 insn 39) }
;;   UD chains for insn luid 23 uid 43
;;      reg 161 { d532(bb 3 insn 23) }
;;   UD chains for insn luid 24 uid 44
;;      reg 179 { d544(bb 3 insn 43) }
;;   UD chains for insn luid 25 uid 45
;;      reg 180 { d545(bb 3 insn 44) }
;;   UD chains for insn luid 26 uid 46
;;      reg 181 { d546(bb 3 insn 45) }
;;   UD chains for insn luid 27 uid 254
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 28 uid 47
;;      reg 24 { d85(bb 3 insn 46) }

( 3 )->[4]->( 6 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u46(11){ d28(bb 0 insn -1) }u47(13){ d34(bb 0 insn -1) }u48(25){ d88(bb 0 insn -1) }u49(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 148 279
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 279
;; lr  def 	 24 [cc] 137 143 145 182 183 184 185 186 187 188 191 192 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 148 279
;; live  gen 	 24 [cc] 137 143 145 182 183 184 185 186 187 188 191 192 193
;; live  kill	
;; rd  in  	(39)
7, 16, 22, 27, 28, 33, 34, 85, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 617
;; rd  gen 	(14)
84, 497, 516, 520, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556
;; rd  kill	(27)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 497, 515, 516, 519, 520, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 145 148 279
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 145 148 279
;; rd  out 	(52)
7, 16, 22, 27, 28, 33, 34, 84, 88, 89, 497, 500, 503, 506, 516, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 50
;;      reg 182 { d547(bb 4 insn 49) }
;;   UD chains for insn luid 3 uid 53
;;      reg 13 { d34(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 54
;;      reg 185 { d550(bb 4 insn 53) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 55
;;      reg 184 { d549(bb 4 insn 54) }
;;   UD chains for insn luid 6 uid 56
;;      reg 183 { d548(bb 4 insn 52) }
;;      reg 186 { d551(bb 4 insn 55) }
;;   eq_note reg 186 { }
;;   UD chains for insn luid 7 uid 57
;;      reg 137 { d497(bb 4 insn 50) }
;;      reg 187 { d552(bb 4 insn 56) }
;;   UD chains for insn luid 9 uid 59
;;      reg 188 { d553(bb 4 insn 58) }
;;   UD chains for insn luid 10 uid 62
;;      reg 279 { d617(bb 3 insn 254) }
;;   UD chains for insn luid 11 uid 63
;;      reg 191 { d554(bb 4 insn 62) }
;;   UD chains for insn luid 12 uid 64
;;      reg 192 { d555(bb 4 insn 63) }
;;   UD chains for insn luid 13 uid 65
;;      reg 193 { d556(bb 4 insn 64) }
;;   UD chains for insn luid 14 uid 66
;;      reg 24 { d84(bb 4 insn 65) }

( 4 )->[5]->( 11 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u66(11){ d28(bb 0 insn -1) }u67(13){ d34(bb 0 insn -1) }u68(25){ d88(bb 0 insn -1) }u69(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 145 148
;; live  gen 	 141 142
;; live  kill	
;; rd  in  	(52)
7, 16, 22, 27, 28, 33, 34, 84, 88, 89, 497, 500, 503, 506, 516, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 617
;; rd  gen 	(2)
510, 514
;; rd  kill	(8)
507, 508, 509, 510, 511, 512, 513, 514
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; rd  out 	(54)
7, 16, 22, 27, 28, 33, 34, 84, 88, 89, 497, 500, 503, 506, 510, 514, 516, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }

( 4 )->[6]->( 11 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(11){ d28(bb 0 insn -1) }u71(13){ d34(bb 0 insn -1) }u72(25){ d88(bb 0 insn -1) }u73(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 145 148 279
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 279
;; lr  def 	 138 139 141 142 194 196 197 198 199 201 202 203 204 205 208 209 210 213 214 215 216 219 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 143 145 148 279
;; live  gen 	 138 139 141 142 194 196 197 198 199 201 202 203 204 205 208 209 210 213 214 215 216 219 220 221
;; live  kill	
;; rd  in  	(52)
7, 16, 22, 27, 28, 33, 34, 84, 88, 89, 497, 500, 503, 506, 516, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 617
;; rd  gen 	(24)
499, 502, 509, 513, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576
;; rd  kill	(34)
498, 499, 500, 501, 502, 503, 507, 508, 509, 510, 511, 512, 513, 514, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; rd  out 	(74)
7, 16, 22, 27, 28, 33, 34, 84, 88, 89, 497, 499, 502, 506, 509, 513, 516, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 74
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 1 uid 75
;;      reg 194 { d557(bb 6 insn 74) }
;;   UD chains for insn luid 2 uid 76
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 78
;;      reg 196 { d558(bb 6 insn 76) }
;;   UD chains for insn luid 4 uid 79
;;      reg 197 { d559(bb 6 insn 78) }
;;   UD chains for insn luid 5 uid 80
;;      reg 198 { d560(bb 6 insn 79) }
;;   UD chains for insn luid 6 uid 81
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 83
;;      reg 201 { d562(bb 6 insn 81) }
;;   UD chains for insn luid 8 uid 84
;;      reg 202 { d563(bb 6 insn 83) }
;;   UD chains for insn luid 9 uid 85
;;      reg 203 { d564(bb 6 insn 84) }
;;   UD chains for insn luid 10 uid 86
;;      reg 199 { d561(bb 6 insn 80) }
;;      reg 204 { d565(bb 6 insn 85) }
;;   UD chains for insn luid 11 uid 89
;;      reg 279 { d617(bb 3 insn 254) }
;;   UD chains for insn luid 12 uid 90
;;      reg 208 { d567(bb 6 insn 89) }
;;   UD chains for insn luid 13 uid 91
;;      reg 205 { d566(bb 6 insn 86) }
;;      reg 209 { d568(bb 6 insn 90) }
;;   UD chains for insn luid 14 uid 94
;;      reg 279 { d617(bb 3 insn 254) }
;;   UD chains for insn luid 15 uid 95
;;      reg 213 { d570(bb 6 insn 94) }
;;   UD chains for insn luid 16 uid 96
;;      reg 214 { d571(bb 6 insn 95) }
;;   UD chains for insn luid 17 uid 97
;;      reg 210 { d569(bb 6 insn 91) }
;;      reg 215 { d572(bb 6 insn 96) }
;;   UD chains for insn luid 18 uid 100
;;      reg 279 { d617(bb 3 insn 254) }
;;   UD chains for insn luid 19 uid 101
;;      reg 219 { d574(bb 6 insn 100) }
;;   UD chains for insn luid 20 uid 102
;;      reg 220 { d575(bb 6 insn 101) }
;;   UD chains for insn luid 21 uid 103
;;      reg 216 { d573(bb 6 insn 97) }
;;      reg 221 { d576(bb 6 insn 102) }

( 3 )->[7]->( 9 8 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u100(11){ d28(bb 0 insn -1) }u101(13){ d34(bb 0 insn -1) }u102(25){ d88(bb 0 insn -1) }u103(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 148 279
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 279
;; lr  def 	 24 [cc] 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 148 279
;; live  gen 	 24 [cc] 224 225 226
;; live  kill	
;; rd  in  	(39)
7, 16, 22, 27, 28, 33, 34, 85, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 617
;; rd  gen 	(4)
83, 577, 578, 579
;; rd  kill	(15)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 577, 578, 579
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 148 279
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 148 279
;; rd  out 	(42)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 112
;;      reg 279 { d617(bb 3 insn 254) }
;;   UD chains for insn luid 1 uid 113
;;      reg 224 { d577(bb 7 insn 112) }
;;   UD chains for insn luid 2 uid 114
;;      reg 225 { d578(bb 7 insn 113) }
;;   UD chains for insn luid 3 uid 115
;;      reg 226 { d579(bb 7 insn 114) }
;;   UD chains for insn luid 4 uid 116
;;      reg 24 { d83(bb 7 insn 115) }

( 7 )->[8]->( 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u109(11){ d28(bb 0 insn -1) }u110(13){ d34(bb 0 insn -1) }u111(25){ d88(bb 0 insn -1) }u112(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 148
;; live  gen 	 141 142
;; live  kill	
;; rd  in  	(42)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 617
;; rd  gen 	(2)
508, 512
;; rd  kill	(8)
507, 508, 509, 510, 511, 512, 513, 514
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; rd  out 	(44)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 500, 503, 506, 508, 512, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }

( 7 )->[9]->( 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u113(11){ d28(bb 0 insn -1) }u114(13){ d34(bb 0 insn -1) }u115(25){ d88(bb 0 insn -1) }u116(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 279
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 279
;; lr  def 	 138 139 141 142 146 227 228 230 231 232 233 235 236 237 238 239 242 243 244 247 248 249 250 253 254 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 279
;; live  gen 	 138 139 141 142 146 227 228 230 231 232 233 235 236 237 238 239 242 243 244 247 248 249 250 253 254 255
;; live  kill	
;; rd  in  	(42)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 617
;; rd  gen 	(26)
498, 501, 507, 511, 521, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600
;; rd  kill	(36)
498, 499, 500, 501, 502, 503, 507, 508, 509, 510, 511, 512, 513, 514, 521, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; rd  out 	(66)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 498, 501, 506, 507, 511, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 125
;;      reg 227 { d580(bb 9 insn 124) }
;;   UD chains for insn luid 2 uid 126
;;      reg 146 { d521(bb 9 insn 125) }
;;   UD chains for insn luid 3 uid 127
;;      reg 146 { d521(bb 9 insn 125) }
;;   UD chains for insn luid 4 uid 128
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 5 uid 129
;;      reg 228 { d581(bb 9 insn 128) }
;;   UD chains for insn luid 6 uid 130
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 132
;;      reg 230 { d582(bb 9 insn 130) }
;;   UD chains for insn luid 8 uid 133
;;      reg 231 { d583(bb 9 insn 132) }
;;   UD chains for insn luid 9 uid 134
;;      reg 232 { d584(bb 9 insn 133) }
;;   UD chains for insn luid 10 uid 135
;;      reg 148 { d522(bb 2 insn 2) }
;;   UD chains for insn luid 11 uid 137
;;      reg 235 { d586(bb 9 insn 135) }
;;   UD chains for insn luid 12 uid 138
;;      reg 236 { d587(bb 9 insn 137) }
;;   UD chains for insn luid 13 uid 139
;;      reg 237 { d588(bb 9 insn 138) }
;;   UD chains for insn luid 14 uid 140
;;      reg 233 { d585(bb 9 insn 134) }
;;      reg 238 { d589(bb 9 insn 139) }
;;   UD chains for insn luid 15 uid 143
;;      reg 279 { d617(bb 3 insn 254) }
;;   UD chains for insn luid 16 uid 144
;;      reg 242 { d591(bb 9 insn 143) }
;;   UD chains for insn luid 17 uid 145
;;      reg 239 { d590(bb 9 insn 140) }
;;      reg 243 { d592(bb 9 insn 144) }
;;   UD chains for insn luid 18 uid 148
;;      reg 279 { d617(bb 3 insn 254) }
;;   UD chains for insn luid 19 uid 149
;;      reg 247 { d594(bb 9 insn 148) }
;;   UD chains for insn luid 20 uid 150
;;      reg 248 { d595(bb 9 insn 149) }
;;   UD chains for insn luid 21 uid 151
;;      reg 244 { d593(bb 9 insn 145) }
;;      reg 249 { d596(bb 9 insn 150) }
;;   UD chains for insn luid 22 uid 154
;;      reg 279 { d617(bb 3 insn 254) }
;;   UD chains for insn luid 23 uid 155
;;      reg 253 { d598(bb 9 insn 154) }
;;   UD chains for insn luid 24 uid 156
;;      reg 254 { d599(bb 9 insn 155) }
;;   UD chains for insn luid 25 uid 157
;;      reg 250 { d597(bb 9 insn 151) }
;;      reg 255 { d600(bb 9 insn 156) }

( 9 8 )->[10]->( 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u146(11){ d28(bb 0 insn -1) }u147(13){ d34(bb 0 insn -1) }u148(25){ d88(bb 0 insn -1) }u149(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 143 145 257 258 259 260 261 262 263
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; live  gen 	 136 143 145 257 258 259 260 261 262 263
;; live  kill	
;; rd  in  	(70)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 498, 500, 501, 503, 506, 507, 508, 511, 512, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 617
;; rd  gen 	(10)
496, 515, 519, 601, 602, 603, 604, 605, 606, 607
;; rd  kill	(12)
496, 515, 516, 519, 520, 601, 602, 603, 604, 605, 606, 607
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; rd  out 	(80)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 496, 498, 500, 501, 503, 506, 507, 508, 511, 512, 515, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 162
;;      reg 257 { d601(bb 10 insn 161) }
;;   UD chains for insn luid 3 uid 165
;;      reg 13 { d34(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 166
;;      reg 260 { d604(bb 10 insn 165) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 167
;;      reg 259 { d603(bb 10 insn 166) }
;;   UD chains for insn luid 6 uid 168
;;      reg 258 { d602(bb 10 insn 164) }
;;      reg 261 { d605(bb 10 insn 167) }
;;   eq_note reg 261 { }
;;   UD chains for insn luid 7 uid 169
;;      reg 136 { d496(bb 10 insn 162) }
;;      reg 262 { d606(bb 10 insn 168) }
;;   UD chains for insn luid 9 uid 171
;;      reg 263 { d607(bb 10 insn 170) }

( 5 10 6 )->[11]->( 15 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(11){ d28(bb 0 insn -1) }u162(13){ d34(bb 0 insn -1) }u163(25){ d88(bb 0 insn -1) }u164(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 133 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; live  gen 	 133 144
;; live  kill	
;; rd  in  	(120)
7, 16, 22, 27, 28, 33, 34, 83, 84, 88, 89, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 617
;; rd  gen 	(2)
495, 518
;; rd  kill	(4)
494, 495, 517, 518
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; rd  out 	(122)
7, 16, 22, 27, 28, 33, 34, 83, 84, 88, 89, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 174
;;      reg 145 { d520(bb 4 insn 57) d519(bb 10 insn 169) }

( 15 )->[12]->( 13 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u166(11){ d28(bb 0 insn -1) }u167(13){ d34(bb 0 insn -1) }u168(25){ d88(bb 0 insn -1) }u169(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 133 264
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  gen 	 24 [cc] 133 264
;; live  kill	
;; rd  in  	(124)
7, 16, 22, 27, 28, 33, 34, 81, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(3)
82, 494, 608
;; rd  kill	(15)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 494, 495, 608
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; rd  out 	(123)
7, 16, 22, 27, 28, 33, 34, 82, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 180
;;      reg 133 { d495(bb 11 insn 174) d494(bb 12 insn 180) }
;;   UD chains for insn luid 1 uid 181
;;      reg 264 { d608(bb 12 insn 180) }
;;   UD chains for insn luid 2 uid 182
;;      reg 24 { d82(bb 12 insn 181) }

( 12 )->[13]->( 16 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u174(11){ d28(bb 0 insn -1) }u175(13){ d34(bb 0 insn -1) }u176(25){ d88(bb 0 insn -1) }u177(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  gen 	
;; live  kill	
;; rd  in  	(123)
7, 16, 22, 27, 28, 33, 34, 82, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144
;; rd  out 	(123)
7, 16, 22, 27, 28, 33, 34, 82, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 184
;;      reg 133 { d494(bb 12 insn 180) }
;;      reg 148 { d522(bb 2 insn 2) }

( 12 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u180(11){ d28(bb 0 insn -1) }u181(13){ d34(bb 0 insn -1) }u182(25){ d88(bb 0 insn -1) }u183(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  gen 	 144
;; live  kill	
;; rd  in  	(123)
7, 16, 22, 27, 28, 33, 34, 82, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(1)
517
;; rd  kill	(2)
517, 518
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; rd  out 	(122)
7, 16, 22, 27, 28, 33, 34, 82, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 189
;;      reg 144 { d518(bb 11 insn 175) d517(bb 14 insn 189) }

( 14 11 )->[15]->( 12 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u185(11){ d28(bb 0 insn -1) }u186(13){ d34(bb 0 insn -1) }u187(25){ d88(bb 0 insn -1) }u188(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(126)
7, 16, 22, 27, 28, 33, 34, 82, 83, 84, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(1)
81
;; rd  kill	(12)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; rd  out 	(124)
7, 16, 22, 27, 28, 33, 34, 81, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 193
;;      reg 143 { d516(bb 4 insn 59) d515(bb 10 insn 171) }
;;      reg 144 { d518(bb 11 insn 175) d517(bb 14 insn 189) }
;;   UD chains for insn luid 1 uid 194
;;      reg 24 { d81(bb 15 insn 193) }

( 15 13 )->[16]->( 17 20 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u192(11){ d28(bb 0 insn -1) }u193(13){ d34(bb 0 insn -1) }u194(25){ d88(bb 0 insn -1) }u195(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(125)
7, 16, 22, 27, 28, 33, 34, 81, 82, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(1)
80
;; rd  kill	(12)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 144
;; rd  out 	(124)
7, 16, 22, 27, 28, 33, 34, 80, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 197
;;      reg 143 { d516(bb 4 insn 59) d515(bb 10 insn 171) }
;;      reg 144 { d518(bb 11 insn 175) d517(bb 14 insn 189) }
;;   UD chains for insn luid 1 uid 198
;;      reg 24 { d80(bb 16 insn 197) }

( 16 )->[17]->( 19 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u199(11){ d28(bb 0 insn -1) }u200(13){ d34(bb 0 insn -1) }u201(25){ d88(bb 0 insn -1) }u202(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 265 267 268 269 270
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 265 267 268 269 270
;; live  kill	
;; rd  in  	(124)
7, 16, 22, 27, 28, 33, 34, 80, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(6)
79, 609, 610, 611, 612, 613
;; rd  kill	(17)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 609, 610, 611, 612, 613
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 265
;; rd  out 	(129)
7, 16, 22, 27, 28, 33, 34, 79, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 201
;;      reg 265 { d609(bb 17 insn 200) }
;;   UD chains for insn luid 2 uid 203
;;      reg 267 { d610(bb 17 insn 201) }
;;   UD chains for insn luid 3 uid 204
;;      reg 268 { d611(bb 17 insn 203) }
;;   UD chains for insn luid 4 uid 205
;;      reg 269 { d612(bb 17 insn 204) }
;;   UD chains for insn luid 5 uid 206
;;      reg 270 { d613(bb 17 insn 205) }
;;   UD chains for insn luid 6 uid 207
;;      reg 24 { d79(bb 17 insn 206) }

( 17 )->[18]->( 21 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u209(11){ d28(bb 0 insn -1) }u210(13){ d34(bb 0 insn -1) }u211(25){ d88(bb 0 insn -1) }u212(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(129)
7, 16, 22, 27, 28, 33, 34, 79, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617
;; rd  gen 	(1)
505
;; rd  kill	(3)
504, 505, 506
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(129)
7, 16, 22, 27, 28, 33, 34, 79, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }

( 17 )->[19]->( 21 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u213(11){ d28(bb 0 insn -1) }u214(13){ d34(bb 0 insn -1) }u215(25){ d88(bb 0 insn -1) }u216(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 265
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 274
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 265
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140 274
;; live  kill	 14 [lr]
;; rd  in  	(129)
7, 16, 22, 27, 28, 33, 34, 79, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617
;; rd  gen 	(2)
504, 614
;; rd  kill	(9)
35, 36, 37, 38, 39, 504, 505, 506, 614
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(130)
7, 16, 22, 27, 28, 33, 34, 79, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 219
;;      reg 13 { d34(bb 0 insn -1) }
;;      reg 0 { d0(bb 19 insn 216) }
;;      reg 1 { d14(bb 19 insn 217) }
;;      reg 2 { d17(bb 19 insn 218) }
;;   UD chains for insn luid 5 uid 223
;;      reg 265 { d609(bb 17 insn 200) }
;;      reg 274 { d614(bb 19 insn 221) }

( 16 )->[20]->( 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u223(11){ d28(bb 0 insn -1) }u224(13){ d34(bb 0 insn -1) }u225(25){ d88(bb 0 insn -1) }u226(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 142 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 276 277
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 144
;; live  gen 	 0 [r0] 1 [r1] 276 277
;; live  kill	 14 [lr]
;; rd  in  	(124)
7, 16, 22, 27, 28, 33, 34, 80, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(2)
615, 616
;; rd  kill	(7)
35, 36, 37, 38, 39, 615, 616
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(126)
7, 16, 22, 27, 28, 33, 34, 80, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 615, 616, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 229
;;      reg 141 { d510(bb 5 insn 68) d509(bb 6 insn 104) d508(bb 8 insn 118) d507(bb 9 insn 127) }
;;      reg 144 { d518(bb 11 insn 175) d517(bb 14 insn 189) }
;;   UD chains for insn luid 1 uid 230
;;      reg 276 { d615(bb 20 insn 229) }
;;   UD chains for insn luid 2 uid 231
;;      reg 139 { d503(bb 3 insn 11) d502(bb 6 insn 75) d501(bb 9 insn 129) }
;;   UD chains for insn luid 3 uid 232
;;      reg 13 { d34(bb 0 insn -1) }
;;      reg 0 { d5(bb 20 insn 230) }
;;      reg 1 { d12(bb 20 insn 231) }
;;   UD chains for insn luid 4 uid 233
;;      reg 142 { d514(bb 5 insn 69) d513(bb 6 insn 105) d512(bb 8 insn 119) d511(bb 9 insn 126) }
;;      reg 144 { d518(bb 11 insn 175) d517(bb 14 insn 189) }
;;   UD chains for insn luid 5 uid 234
;;      reg 277 { d616(bb 20 insn 233) }
;;   UD chains for insn luid 6 uid 235
;;      reg 138 { d500(bb 3 insn 40) d499(bb 6 insn 103) d498(bb 9 insn 157) }
;;   UD chains for insn luid 7 uid 236
;;      reg 13 { d34(bb 0 insn -1) }
;;      reg 0 { d3(bb 20 insn 234) }
;;      reg 1 { d10(bb 20 insn 235) }

( 2 18 20 19 )->[21]->( 1 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u241(11){ d28(bb 0 insn -1) }u242(13){ d34(bb 0 insn -1) }u243(25){ d88(bb 0 insn -1) }u244(26){ d89(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(136)
7, 16, 22, 27, 28, 33, 34, 79, 80, 86, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617
;; rd  gen 	(1)
1
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(136)
1, 16, 22, 27, 28, 33, 34, 79, 80, 86, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617
;;  UD chains for artificial uses
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 25 { d88(bb 0 insn -1) }
;;   reg 26 { d89(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 243
;;      reg 140 { d506(bb 2 insn 7) d505(bb 18 insn 209) d504(bb 19 insn 224) }
;;   UD chains for insn luid 1 uid 249
;;      reg 0 { d1(bb 21 insn 243) }

( 21 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u247(0){ d1(bb 21 insn 243) }u248(11){ d28(bb 0 insn -1) }u249(13){ d34(bb 0 insn -1) }u250(14){ }u251(25){ d88(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(136)
1, 16, 22, 27, 28, 33, 34, 79, 80, 86, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(136)
1, 16, 22, 27, 28, 33, 34, 79, 80, 86, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617
;;  UD chains for artificial uses
;;   reg 0 { d1(bb 21 insn 243) }
;;   reg 11 { d28(bb 0 insn -1) }
;;   reg 13 { d34(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d88(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 9 to worklist
  Adding insn 6 to worklist
  Adding insn 47 to worklist
  Adding insn 66 to worklist
  Adding insn 256 to worklist
  Adding insn 258 to worklist
  Adding insn 116 to worklist
  Adding insn 260 to worklist
  Adding insn 262 to worklist
  Adding insn 182 to worklist
  Adding insn 264 to worklist
  Adding insn 184 to worklist
  Adding insn 194 to worklist
  Adding insn 198 to worklist
  Adding insn 207 to worklist
  Adding insn 266 to worklist
  Adding insn 268 to worklist
  Adding insn 223 to worklist
  Adding insn 219 to worklist
  Adding insn 236 to worklist
  Adding insn 232 to worklist
  Adding insn 249 to worklist
Finished finding needed instructions:
  Adding insn 243 to worklist
Processing use of (reg 140 [ ret ]) in insn 243:
  Adding insn 7 to worklist
  Adding insn 209 to worklist
  Adding insn 224 to worklist
Processing use of (reg 0 r0) in insn 7:
Processing use of (reg 0 r0) in insn 249:
Processing use of (reg 13 sp) in insn 232:
Processing use of (reg 0 r0) in insn 232:
  Adding insn 230 to worklist
Processing use of (reg 1 r1) in insn 232:
  Adding insn 231 to worklist
Processing use of (reg 139 [ addr ]) in insn 231:
  Adding insn 11 to worklist
  Adding insn 75 to worklist
  Adding insn 129 to worklist
Processing use of (reg 228 [ <variable>.hw.D.22650.D.22649.info.trigger ]) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 148 [ bp ]) in insn 128:
  Adding insn 2 to worklist
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 194 [ <variable>.hw.D.22650.D.22649.info.trigger ]) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 148 [ bp ]) in insn 74:
Processing use of (reg 148 [ bp ]) in insn 11:
Processing use of (reg 276) in insn 230:
  Adding insn 229 to worklist
Processing use of (reg 141 [ val_base ]) in insn 229:
  Adding insn 68 to worklist
  Adding insn 104 to worklist
  Adding insn 118 to worklist
  Adding insn 127 to worklist
Processing use of (reg 144 [ i ]) in insn 229:
  Adding insn 175 to worklist
  Adding insn 189 to worklist
Processing use of (reg 144 [ i ]) in insn 189:
Processing use of (reg 146 [ core_num_brps.318 ]) in insn 127:
  Adding insn 125 to worklist
Processing use of (reg 227) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 13 sp) in insn 236:
Processing use of (reg 0 r0) in insn 236:
  Adding insn 234 to worklist
Processing use of (reg 1 r1) in insn 236:
  Adding insn 235 to worklist
Processing use of (reg 138 [ ctrl ]) in insn 235:
  Adding insn 40 to worklist
  Adding insn 103 to worklist
  Adding insn 157 to worklist
Processing use of (reg 250) in insn 157:
  Adding insn 151 to worklist
Processing use of (reg 255) in insn 157:
  Adding insn 156 to worklist
Processing use of (reg 254) in insn 156:
  Adding insn 155 to worklist
Processing use of (reg 253) in insn 155:
  Adding insn 154 to worklist
Processing use of (reg 279) in insn 154:
  Adding insn 254 to worklist
Processing use of (reg 148 [ bp ]) in insn 254:
Processing use of (reg 244) in insn 151:
  Adding insn 145 to worklist
Processing use of (reg 249) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 248) in insn 150:
  Adding insn 149 to worklist
Processing use of (reg 247) in insn 149:
  Adding insn 148 to worklist
Processing use of (reg 279) in insn 148:
Processing use of (reg 239) in insn 145:
  Adding insn 140 to worklist
Processing use of (reg 243) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 242) in insn 144:
  Adding insn 143 to worklist
Processing use of (reg 279) in insn 143:
Processing use of (reg 233) in insn 140:
  Adding insn 134 to worklist
Processing use of (reg 238) in insn 140:
  Adding insn 139 to worklist
Processing use of (reg 237) in insn 139:
  Adding insn 138 to worklist
Processing use of (reg 236) in insn 138:
  Adding insn 137 to worklist
Processing use of (reg 235) in insn 137:
  Adding insn 135 to worklist
Processing use of (reg 148 [ bp ]) in insn 135:
Processing use of (reg 232) in insn 134:
  Adding insn 133 to worklist
Processing use of (reg 231) in insn 133:
  Adding insn 132 to worklist
Processing use of (reg 230) in insn 132:
  Adding insn 130 to worklist
Processing use of (reg 148 [ bp ]) in insn 130:
Processing use of (reg 216) in insn 103:
  Adding insn 97 to worklist
Processing use of (reg 221) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 220) in insn 102:
  Adding insn 101 to worklist
Processing use of (reg 219) in insn 101:
  Adding insn 100 to worklist
Processing use of (reg 279) in insn 100:
Processing use of (reg 210) in insn 97:
  Adding insn 91 to worklist
Processing use of (reg 215) in insn 97:
  Adding insn 96 to worklist
Processing use of (reg 214) in insn 96:
  Adding insn 95 to worklist
Processing use of (reg 213) in insn 95:
  Adding insn 94 to worklist
Processing use of (reg 279) in insn 94:
Processing use of (reg 205) in insn 91:
  Adding insn 86 to worklist
Processing use of (reg 209) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 208) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 279) in insn 89:
Processing use of (reg 199) in insn 86:
  Adding insn 80 to worklist
Processing use of (reg 204) in insn 86:
  Adding insn 85 to worklist
Processing use of (reg 203) in insn 85:
  Adding insn 84 to worklist
Processing use of (reg 202) in insn 84:
  Adding insn 83 to worklist
Processing use of (reg 201) in insn 83:
  Adding insn 81 to worklist
Processing use of (reg 148 [ bp ]) in insn 81:
Processing use of (reg 198) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 197) in insn 79:
  Adding insn 78 to worklist
Processing use of (reg 196) in insn 78:
  Adding insn 76 to worklist
Processing use of (reg 148 [ bp ]) in insn 76:
Processing use of (reg 176) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 170) in insn 39:
  Adding insn 33 to worklist
Processing use of (reg 175) in insn 39:
  Adding insn 38 to worklist
Processing use of (reg 174) in insn 38:
  Adding insn 37 to worklist
Processing use of (reg 173) in insn 37:
  Adding insn 36 to worklist
Processing use of (reg 161) in insn 36:
  Adding insn 23 to worklist
Processing use of (reg 148 [ bp ]) in insn 23:
Processing use of (reg 164) in insn 33:
  Adding insn 27 to worklist
Processing use of (reg 169) in insn 33:
  Adding insn 32 to worklist
Processing use of (reg 168) in insn 32:
  Adding insn 31 to worklist
Processing use of (reg 167) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 161) in insn 30:
Processing use of (reg 159) in insn 27:
  Adding insn 22 to worklist
Processing use of (reg 163) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 162) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 161) in insn 25:
Processing use of (reg 153) in insn 22:
  Adding insn 16 to worklist
Processing use of (reg 158) in insn 22:
  Adding insn 21 to worklist
Processing use of (reg 157) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 156) in insn 20:
  Adding insn 19 to worklist
Processing use of (reg 155) in insn 19:
  Adding insn 17 to worklist
Processing use of (reg 148 [ bp ]) in insn 17:
Processing use of (reg 152) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 151) in insn 15:
  Adding insn 14 to worklist
Processing use of (reg 150) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 148 [ bp ]) in insn 12:
Processing use of (reg 277) in insn 234:
  Adding insn 233 to worklist
Processing use of (reg 142 [ ctrl_base ]) in insn 233:
  Adding insn 69 to worklist
  Adding insn 105 to worklist
  Adding insn 119 to worklist
  Adding insn 126 to worklist
Processing use of (reg 144 [ i ]) in insn 233:
Processing use of (reg 146 [ core_num_brps.318 ]) in insn 126:
Processing use of (reg 13 sp) in insn 219:
Processing use of (reg 0 r0) in insn 219:
  Adding insn 216 to worklist
Processing use of (reg 1 r1) in insn 219:
  Adding insn 217 to worklist
Processing use of (reg 2 r2) in insn 219:
  Adding insn 218 to worklist
Processing use of (reg 265) in insn 223:
  Adding insn 200 to worklist
Processing use of (subreg (reg 274) 0) in insn 223:
  Adding insn 221 to worklist
Processing use of (reg 24 cc) in insn 207:
  Adding insn 206 to worklist
Processing use of (reg 270) in insn 206:
  Adding insn 205 to worklist
Processing use of (reg 269) in insn 205:
  Adding insn 204 to worklist
Processing use of (subreg (reg 268) 0) in insn 204:
  Adding insn 203 to worklist
Processing use of (reg 267 [ __warned ]) in insn 203:
  Adding insn 201 to worklist
Processing use of (reg 265) in insn 201:
Processing use of (reg 24 cc) in insn 198:
  Adding insn 197 to worklist
Processing use of (reg 143 [ max_slots ]) in insn 197:
  Adding insn 59 to worklist
  Adding insn 171 to worklist
Processing use of (reg 144 [ i ]) in insn 197:
Processing use of (reg 263) in insn 171:
  Adding insn 170 to worklist
Processing use of (reg 188) in insn 59:
  Adding insn 58 to worklist
Processing use of (reg 24 cc) in insn 194:
  Adding insn 193 to worklist
Processing use of (reg 143 [ max_slots ]) in insn 193:
Processing use of (reg 144 [ i ]) in insn 193:
Processing use of (reg 133 [ ivtmp.908 ]) in insn 184:
  Adding insn 180 to worklist
Processing use of (reg 148 [ bp ]) in insn 184:
Processing use of (reg 133 [ ivtmp.908 ]) in insn 180:
  Adding insn 174 to worklist
Processing use of (reg 145 [ slots ]) in insn 174:
  Adding insn 57 to worklist
  Adding insn 169 to worklist
Processing use of (reg 136 [ __ptr ]) in insn 169:
  Adding insn 162 to worklist
Processing use of (reg 262) in insn 169:
  Adding insn 168 to worklist
Processing use of (reg 258) in insn 168:
  Adding insn 164 to worklist
Processing use of (reg 261 [ <variable>.cpu ]) in insn 168:
  Adding insn 167 to worklist
Processing use of (reg 259) in insn 167:
  Adding insn 166 to worklist
Processing use of (reg 260) in insn 166:
  Adding insn 165 to worklist
Processing use of (reg 13 sp) in insn 165:
Processing use of (reg 257) in insn 162:
  Adding insn 161 to worklist
Processing use of (reg 137 [ __ptr ]) in insn 57:
  Adding insn 50 to worklist
Processing use of (reg 187) in insn 57:
  Adding insn 56 to worklist
Processing use of (reg 183) in insn 56:
  Adding insn 52 to worklist
Processing use of (reg 186 [ <variable>.cpu ]) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 184) in insn 55:
  Adding insn 54 to worklist
Processing use of (reg 185) in insn 54:
  Adding insn 53 to worklist
Processing use of (reg 13 sp) in insn 53:
Processing use of (reg 182) in insn 50:
  Adding insn 49 to worklist
Processing use of (reg 24 cc) in insn 182:
  Adding insn 181 to worklist
Processing use of (reg 264) in insn 181:
Processing use of (reg 24 cc) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 226) in insn 115:
  Adding insn 114 to worklist
Processing use of (reg 225) in insn 114:
  Adding insn 113 to worklist
Processing use of (subreg (reg 224) 0) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 279) in insn 112:
Processing use of (reg 24 cc) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 193) in insn 65:
  Adding insn 64 to worklist
Processing use of (reg 192) in insn 64:
  Adding insn 63 to worklist
Processing use of (subreg (reg 191) 0) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 279) in insn 62:
Processing use of (reg 24 cc) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 181) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 180) in insn 45:
  Adding insn 44 to worklist
Processing use of (subreg (reg 179) 0) in insn 44:
  Adding insn 43 to worklist
Processing use of (reg 161) in insn 43:
Processing use of (reg 13 sp) in insn 6:
Processing use of (reg 24 cc) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 140 [ ret ]) in insn 8:


arch_install_hw_breakpoint

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={9d,7u} r1={8d,3u} r2={6d,1u} r3={5d} r11={1d,21u} r12={5d} r13={1d,27u,2d} r14={5d,1u} r15={4d} r16={4d} r17={4d} r18={4d} r19={4d} r20={4d} r21={4d} r22={4d} r23={4d} r24={12d,8u} r25={1d,21u} r26={1d,20u} r27={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={4d} r38={4d} r39={4d} r40={4d} r41={4d} r42={4d} r43={4d} r44={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r81={4d} r82={4d} r83={4d} r84={4d} r85={4d} r86={4d} r87={4d} r88={4d} r89={4d} r90={4d} r91={4d} r92={4d} r93={4d} r94={4d} r95={4d} r96={4d} r97={4d} r98={4d} r99={4d} r100={4d} r101={4d} r102={4d} r103={4d} r104={4d} r105={4d} r106={4d} r107={4d} r108={4d} r109={4d} r110={4d} r111={4d} r112={4d} r113={4d} r114={4d} r115={4d} r116={4d} r117={4d} r118={4d} r119={4d} r120={4d} r121={4d} r122={4d} r123={4d} r124={4d} r125={4d} r126={4d} r127={4d} r133={2d,2u} r136={1d,1u} r137={1d,1u} r138={3d,1u} r139={3d,1u} r140={3d,2u} r141={4d,1u} r142={4d,1u} r143={2d,2u} r144={2d,5u} r145={2d,1u} r146={1d,2u} r148={1d,12u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r161={1d,4u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u,1d} r187={1d,1u} r188={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u} r260={1d,1u} r261={1d,1u,1d} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,2u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r274={1d,1u} r276={1d,1u} r277={1d,1u} r279={1d,8u} 
;;    total ref usage 869{618d,247u,4e} in 161{157 regular + 4 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493
0[0,9] 1[9,8] 2[17,6] 3[23,5] 11[28,1] 12[29,5] 13[34,1] 14[35,5] 15[40,4] 16[44,4] 17[48,4] 18[52,4] 19[56,4] 20[60,4] 21[64,4] 22[68,4] 23[72,4] 24[76,12] 25[88,1] 26[89,1] 27[90,4] 28[94,4] 29[98,4] 30[102,4] 31[106,4] 32[110,4] 33[114,4] 34[118,4] 35[122,4] 36[126,4] 37[130,4] 38[134,4] 39[138,4] 40[142,4] 41[146,4] 42[150,4] 43[154,4] 44[158,4] 45[162,4] 46[166,4] 47[170,4] 48[174,4] 49[178,4] 50[182,4] 51[186,4] 52[190,4] 53[194,4] 54[198,4] 55[202,4] 56[206,4] 57[210,4] 58[214,4] 59[218,4] 60[222,4] 61[226,4] 62[230,4] 63[234,4] 64[238,4] 65[242,4] 66[246,4] 67[250,4] 68[254,4] 69[258,4] 70[262,4] 71[266,4] 72[270,4] 73[274,4] 74[278,4] 75[282,4] 76[286,4] 77[290,4] 78[294,4] 79[298,4] 80[302,4] 81[306,4] 82[310,4] 83[314,4] 84[318,4] 85[322,4] 86[326,4] 87[330,4] 88[334,4] 89[338,4] 90[342,4] 91[346,4] 92[350,4] 93[354,4] 94[358,4] 95[362,4] 96[366,4] 97[370,4] 98[374,4] 99[378,4] 100[382,4] 101[386,4] 102[390,4] 103[394,4] 104[398,4] 105[402,4] 106[406,4] 107[410,4] 108[414,4] 109[418,4] 110[422,4] 111[426,4] 112[430,4] 113[434,4] 114[438,4] 115[442,4] 116[446,4] 117[450,4] 118[454,4] 119[458,4] 120[462,4] 121[466,4] 122[470,4] 123[474,4] 124[478,4] 125[482,4] 126[486,4] 127[490,4] 133[494,2] 136[496,1] 137[497,1] 138[498,3] 139[501,3] 140[504,3] 141[507,4] 142[511,4] 143[515,2] 144[517,2] 145[519,2] 146[521,1] 148[522,1] 150[523,1] 151[524,1] 152[525,1] 153[526,1] 155[527,1] 156[528,1] 157[529,1] 158[530,1] 159[531,1] 161[532,1] 162[533,1] 163[534,1] 164[535,1] 167[536,1] 168[537,1] 169[538,1] 170[539,1] 173[540,1] 174[541,1] 175[542,1] 176[543,1] 179[544,1] 180[545,1] 181[546,1] 182[547,1] 183[548,1] 184[549,1] 185[550,1] 186[551,1] 187[552,1] 188[553,1] 191[554,1] 192[555,1] 193[556,1] 194[557,1] 196[558,1] 197[559,1] 198[560,1] 199[561,1] 201[562,1] 202[563,1] 203[564,1] 204[565,1] 205[566,1] 208[567,1] 209[568,1] 210[569,1] 213[570,1] 214[571,1] 215[572,1] 216[573,1] 219[574,1] 220[575,1] 221[576,1] 224[577,1] 225[578,1] 226[579,1] 227[580,1] 228[581,1] 230[582,1] 231[583,1] 232[584,1] 233[585,1] 235[586,1] 236[587,1] 237[588,1] 238[589,1] 239[590,1] 242[591,1] 243[592,1] 244[593,1] 247[594,1] 248[595,1] 249[596,1] 250[597,1] 253[598,1] 254[599,1] 255[600,1] 257[601,1] 258[602,1] 259[603,1] 260[604,1] 261[605,1] 262[606,1] 263[607,1] 264[608,1] 265[609,1] 267[610,1] 268[611,1] 269[612,1] 270[613,1] 274[614,1] 276[615,1] 277[616,1] 279[617,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 148
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 140 148
;; live  kill	 14 [lr]
;; rd  in  	(10)
8, 16, 22, 27, 28, 33, 34, 39, 88, 89
;; rd  gen 	(4)
7, 86, 506, 522
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 35, 36, 37, 38, 39, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 504, 505, 506, 522

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/hw_breakpoint.c:329 (set (reg/v/f:SI 148 [ bp ])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ bp ])
        (nil)))

(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 6 3 7 2 arch/arm/kernel/hw_breakpoint.c:336 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("enable_monitor_mode") [flags 0x3] <function_decl 0x113d8c80 enable_monitor_mode>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:336 (set (reg/v:SI 140 [ ret ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:337 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 140 [ ret ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:337 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 237)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9600 [0x2580])
            (nil))))
;; End of basic block 2 -> ( 21 3)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; rd  out 	(12)
7, 16, 22, 27, 28, 33, 34, 86, 88, 89, 506, 522


;; Succ edge  21 [96.0%] 
;; Succ edge  3 [4.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u9(11){ }u10(13){ }u11(25){ }u12(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148
;; lr  def 	 24 [cc] 138 139 150 151 152 153 155 156 157 158 159 161 162 163 164 167 168 169 170 173 174 175 176 179 180 181 279
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148
;; live  gen 	 24 [cc] 138 139 150 151 152 153 155 156 157 158 159 161 162 163 164 167 168 169 170 173 174 175 176 179 180 181 279
;; live  kill	
;; rd  in  	(12)
7, 16, 22, 27, 28, 33, 34, 86, 88, 89, 506, 522
;; rd  gen 	(28)
85, 500, 503, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 617
;; rd  kill	(43)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 498, 499, 500, 501, 502, 503, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 617

;; Pred edge  2 [4.0%]  (fallthru)
(note 10 9 11 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 3 arch/arm/kernel/hw_breakpoint.c:340 (set (reg/v:SI 139 [ addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ bp ])
                (const_int 200 [0xc8])) [0 <variable>.hw.D.22650.D.22649.info.address+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 14 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 150)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 148 [ bp ])
                    (const_int 213 [0xd5])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 14 12 15 3 arch/arm/kernel/hw_breakpoint.c:341 (set (subreg:SI (reg:QI 151) 0)
        (zero_extract:SI (reg:SI 150)
            (const_int 1 [0x1])
            (const_int 1 [0x1]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(insn 15 14 16 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 152)
        (zero_extend:SI (reg:QI 151))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 151)
        (nil)))

(insn 16 15 17 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 153)
        (ashift:SI (reg:SI 152)
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 17 16 19 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 155)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 148 [ bp ])
                    (const_int 214 [0xd6])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 19 17 20 3 arch/arm/kernel/hw_breakpoint.c:341 (set (subreg:SI (reg:QI 156) 0)
        (zero_extract:SI (reg:SI 155)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 20 19 21 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 157)
        (zero_extend:SI (reg:QI 156))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 156)
        (nil)))

(insn 21 20 22 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 158)
        (ashift:SI (reg:SI 157)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 157)
        (nil)))

(insn 22 21 23 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 159)
        (ior:SI (reg:SI 153)
            (reg:SI 158))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 158)
        (expr_list:REG_DEAD (reg:SI 153)
            (nil))))

(insn 23 22 25 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 161)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 148 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 25 23 26 3 arch/arm/kernel/hw_breakpoint.c:341 (set (subreg:SI (reg:QI 162) 0)
        (zero_extract:SI (reg:SI 161)
            (const_int 1 [0x1])
            (const_int 7 [0x7]))) 124 {extzv_t2} (nil))

(insn 26 25 27 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 163)
        (zero_extend:SI (reg:QI 162))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 162)
        (nil)))

(insn 27 26 30 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 164)
        (ior:SI (reg:SI 159)
            (reg:SI 163))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 163)
        (expr_list:REG_DEAD (reg:SI 159)
            (nil))))

(insn 30 27 31 3 arch/arm/kernel/hw_breakpoint.c:341 (set (subreg:SI (reg:QI 167) 0)
        (zero_extract:SI (reg:SI 161)
            (const_int 2 [0x2])
            (const_int 3 [0x3]))) 124 {extzv_t2} (nil))

(insn 31 30 32 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 168)
        (zero_extend:SI (reg:QI 167))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 167)
        (nil)))

(insn 32 31 33 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 169)
        (ashift:SI (reg:SI 168)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 168)
        (nil)))

(insn 33 32 36 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 170)
        (ior:SI (reg:SI 164)
            (reg:SI 169))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_DEAD (reg:SI 164)
            (nil))))

(insn 36 33 37 3 arch/arm/kernel/hw_breakpoint.c:341 (set (subreg:SI (reg:QI 173) 0)
        (zero_extract:SI (reg:SI 161)
            (const_int 2 [0x2])
            (const_int 5 [0x5]))) 124 {extzv_t2} (nil))

(insn 37 36 38 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 174)
        (zero_extend:SI (reg:QI 173))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 173)
        (nil)))

(insn 38 37 39 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 175)
        (ashift:SI (reg:SI 174)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 174)
        (nil)))

(insn 39 38 40 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg:SI 176)
        (ior:SI (reg:SI 170)
            (reg:SI 175))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_DEAD (reg:SI 170)
            (nil))))

(insn 40 39 43 3 arch/arm/kernel/hw_breakpoint.c:341 (set (reg/v:SI 138 [ ctrl ])
        (ior:SI (reg:SI 176)
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 176)
        (nil)))

(insn 43 40 44 3 arch/arm/kernel/hw_breakpoint.c:343 (set (reg:SI 179)
        (and:SI (reg:SI 161)
            (const_int 24 [0x18]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 161)
        (nil)))

(insn 44 43 45 3 arch/arm/kernel/hw_breakpoint.c:343 (set (reg:QI 180)
        (subreg:QI (reg:SI 179) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 179)
        (nil)))

(insn 45 44 46 3 arch/arm/kernel/hw_breakpoint.c:343 (set (reg:SI 181)
        (zero_extend:SI (reg:QI 180))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 180)
        (nil)))

(insn 46 45 254 3 arch/arm/kernel/hw_breakpoint.c:343 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181)
        (nil)))

(insn 254 46 47 3 (set (reg:SI 279)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 148 [ bp ])
                    (const_int 211 [0xd3])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(jump_insn 47 254 48 3 arch/arm/kernel/hw_breakpoint.c:343 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 108)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 3 -> ( 4 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 148 279
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 148 279
;; rd  out 	(39)
7, 16, 22, 27, 28, 33, 34, 85, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 617


;; Succ edge  4 [50.0%]  (fallthru)
;; Succ edge  7 [50.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u46(11){ }u47(13){ }u48(25){ }u49(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 148 279
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 279
;; lr  def 	 24 [cc] 137 143 145 182 183 184 185 186 187 188 191 192 193
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 148 279
;; live  gen 	 24 [cc] 137 143 145 182 183 184 185 186 187 188 191 192 193
;; live  kill	
;; rd  in  	(39)
7, 16, 22, 27, 28, 33, 34, 85, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 617
;; rd  gen 	(14)
84, 497, 516, 520, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556
;; rd  kill	(27)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 497, 515, 516, 519, 520, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556

;; Pred edge  3 [50.0%]  (fallthru)
(note 48 47 49 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg/f:SI 182)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 50 49 52 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg/v:SI 137 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 182)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8111157)) -1 (expr_list:REG_DEAD (reg/f:SI 182)
        (nil)))

(insn 52 50 53 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg/f:SI 183)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 53 52 54 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg:SI 185)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 54 53 55 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg:SI 184)
        (and:SI (reg:SI 185)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 185)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 55 54 56 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg:SI 186 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 184)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(insn 56 55 57 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg:SI 187)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 186 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 183)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 186 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 183)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 186 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 57 56 58 4 arch/arm/kernel/hw_breakpoint.c:347 (set (reg/v/f:SI 145 [ slots ])
        (plus:SI (reg/v:SI 137 [ __ptr ])
            (reg:SI 187))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 187)
        (expr_list:REG_DEAD (reg/v:SI 137 [ __ptr ])
            (nil))))

(insn 58 57 59 4 arch/arm/kernel/hw_breakpoint.c:348 (set (reg/f:SI 188)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 59 58 62 4 arch/arm/kernel/hw_breakpoint.c:348 (set (reg/v:SI 143 [ max_slots ])
        (mem/c/i:SI (plus:SI (reg/f:SI 188)
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 188)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
            (nil))))

(insn 62 59 63 4 arch/arm/kernel/hw_breakpoint.c:349 (set (reg:SI 191)
        (and:SI (reg:SI 279)
            (const_int -128 [0xffffffffffffff80]))) 67 {*arm_andsi3_insn} (nil))

(insn 63 62 64 4 arch/arm/kernel/hw_breakpoint.c:349 (set (reg:QI 192)
        (subreg:QI (reg:SI 191) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 191)
        (nil)))

(insn 64 63 65 4 arch/arm/kernel/hw_breakpoint.c:349 (set (reg:SI 193)
        (zero_extend:SI (reg:QI 192))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 192)
        (nil)))

(insn 65 64 66 4 arch/arm/kernel/hw_breakpoint.c:349 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 193)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(jump_insn 66 65 67 4 arch/arm/kernel/hw_breakpoint.c:349 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 72)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 4 -> ( 6 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 145 148 279
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 145 148 279
;; rd  out 	(52)
7, 16, 22, 27, 28, 33, 34, 84, 88, 89, 497, 500, 503, 506, 516, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 617


;; Succ edge  6 [50.0%] 
;; Succ edge  5 [50.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u66(11){ }u67(13){ }u68(25){ }u69(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 143 145 148
;; live  gen 	 141 142
;; live  kill	
;; rd  in  	(52)
7, 16, 22, 27, 28, 33, 34, 84, 88, 89, 497, 500, 503, 506, 516, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 617
;; rd  gen 	(2)
510, 514
;; rd  kill	(8)
507, 508, 509, 510, 511, 512, 513, 514

;; Pred edge  4 [50.0%]  (fallthru)
(note 67 66 68 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 68 67 69 5 arch/arm/kernel/hw_breakpoint.c:346 (set (reg/v:SI 141 [ val_base ])
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 69 68 256 5 arch/arm/kernel/hw_breakpoint.c:345 (set (reg/v:SI 142 [ ctrl_base ])
        (const_int 80 [0x50])) 167 {*arm_movsi_insn} (nil))

(jump_insn 256 69 257 5 (set (pc)
        (label_ref 172)) -1 (nil))
;; End of basic block 5 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; rd  out 	(54)
7, 16, 22, 27, 28, 33, 34, 84, 88, 89, 497, 500, 503, 506, 510, 514, 516, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 617


;; Succ edge  11 [100.0%] 

(barrier 257 256 72)

;; Start of basic block ( 4) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u70(11){ }u71(13){ }u72(25){ }u73(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 143 145 148 279
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 279
;; lr  def 	 138 139 141 142 194 196 197 198 199 201 202 203 204 205 208 209 210 213 214 215 216 219 220 221
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 143 145 148 279
;; live  gen 	 138 139 141 142 194 196 197 198 199 201 202 203 204 205 208 209 210 213 214 215 216 219 220 221
;; live  kill	
;; rd  in  	(52)
7, 16, 22, 27, 28, 33, 34, 84, 88, 89, 497, 500, 503, 506, 516, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 617
;; rd  gen 	(24)
499, 502, 509, 513, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576
;; rd  kill	(34)
498, 499, 500, 501, 502, 503, 507, 508, 509, 510, 511, 512, 513, 514, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576

;; Pred edge  4 [50.0%] 
(code_label 72 257 73 6 295 "" [1 uses])

(note 73 72 74 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 75 6 arch/arm/kernel/hw_breakpoint.c:351 (set (reg:SI 194 [ <variable>.hw.D.22650.D.22649.info.trigger ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ bp ])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 75 74 76 6 arch/arm/kernel/hw_breakpoint.c:351 (set (reg/v:SI 139 [ addr ])
        (and:SI (reg:SI 194 [ <variable>.hw.D.22650.D.22649.info.trigger ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 194 [ <variable>.hw.D.22650.D.22649.info.trigger ])
        (nil)))

(insn 76 75 78 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 196)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 148 [ bp ])
                    (const_int 209 [0xd1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 78 76 79 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 197) 0)
        (zero_extract:SI (reg:SI 196)
            (const_int 1 [0x1])
            (const_int 1 [0x1]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 196)
        (nil)))

(insn 79 78 80 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 198)
        (zero_extend:SI (reg:QI 197))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 197)
        (nil)))

(insn 80 79 81 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 199)
        (ashift:SI (reg:SI 198)
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 198)
        (nil)))

(insn 81 80 83 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 201)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 148 [ bp ])
                    (const_int 210 [0xd2])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 83 81 84 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 202) 0)
        (zero_extract:SI (reg:SI 201)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(insn 84 83 85 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 203)
        (zero_extend:SI (reg:QI 202))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 202)
        (nil)))

(insn 85 84 86 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 204)
        (ashift:SI (reg:SI 203)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 203)
        (nil)))

(insn 86 85 89 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 205)
        (ior:SI (reg:SI 199)
            (reg:SI 204))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 204)
        (expr_list:REG_DEAD (reg:SI 199)
            (nil))))

(insn 89 86 90 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 208) 0)
        (zero_extract:SI (reg:SI 279)
            (const_int 1 [0x1])
            (const_int 7 [0x7]))) 124 {extzv_t2} (nil))

(insn 90 89 91 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 209)
        (zero_extend:SI (reg:QI 208))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 208)
        (nil)))

(insn 91 90 94 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 210)
        (ior:SI (reg:SI 205)
            (reg:SI 209))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 209)
        (expr_list:REG_DEAD (reg:SI 205)
            (nil))))

(insn 94 91 95 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 213) 0)
        (zero_extract:SI (reg:SI 279)
            (const_int 2 [0x2])
            (const_int 3 [0x3]))) 124 {extzv_t2} (nil))

(insn 95 94 96 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 214)
        (zero_extend:SI (reg:QI 213))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 213)
        (nil)))

(insn 96 95 97 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 215)
        (ashift:SI (reg:SI 214)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 214)
        (nil)))

(insn 97 96 100 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 216)
        (ior:SI (reg:SI 210)
            (reg:SI 215))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 215)
        (expr_list:REG_DEAD (reg:SI 210)
            (nil))))

(insn 100 97 101 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 219) 0)
        (zero_extract:SI (reg:SI 279)
            (const_int 2 [0x2])
            (const_int 5 [0x5]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 279)
        (nil)))

(insn 101 100 102 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 220)
        (zero_extend:SI (reg:QI 219))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 219)
        (nil)))

(insn 102 101 103 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 221)
        (ashift:SI (reg:SI 220)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 220)
        (nil)))

(insn 103 102 104 6 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg/v:SI 138 [ ctrl ])
        (ior:SI (reg:SI 216)
            (reg:SI 221))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 221)
        (expr_list:REG_DEAD (reg:SI 216)
            (nil))))

(insn 104 103 105 6 arch/arm/kernel/hw_breakpoint.c:346 (set (reg/v:SI 141 [ val_base ])
        (const_int 64 [0x40])) 167 {*arm_movsi_insn} (nil))

(insn 105 104 258 6 arch/arm/kernel/hw_breakpoint.c:345 (set (reg/v:SI 142 [ ctrl_base ])
        (const_int 80 [0x50])) 167 {*arm_movsi_insn} (nil))

(jump_insn 258 105 259 6 (set (pc)
        (label_ref 172)) -1 (nil))
;; End of basic block 6 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; rd  out 	(74)
7, 16, 22, 27, 28, 33, 34, 84, 88, 89, 497, 499, 502, 506, 509, 513, 516, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 617


;; Succ edge  11 [100.0%] 

(barrier 259 258 108)

;; Start of basic block ( 3) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 148 279
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 279
;; lr  def 	 24 [cc] 224 225 226
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 148 279
;; live  gen 	 24 [cc] 224 225 226
;; live  kill	
;; rd  in  	(39)
7, 16, 22, 27, 28, 33, 34, 85, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 617
;; rd  gen 	(4)
83, 577, 578, 579
;; rd  kill	(15)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 577, 578, 579

;; Pred edge  3 [50.0%] 
(code_label 108 259 109 7 294 "" [1 uses])

(note 109 108 112 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 112 109 113 7 arch/arm/kernel/hw_breakpoint.c:356 (set (reg:SI 224)
        (and:SI (reg:SI 279)
            (const_int -128 [0xffffffffffffff80]))) 67 {*arm_andsi3_insn} (nil))

(insn 113 112 114 7 arch/arm/kernel/hw_breakpoint.c:356 (set (reg:QI 225)
        (subreg:QI (reg:SI 224) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 224)
        (nil)))

(insn 114 113 115 7 arch/arm/kernel/hw_breakpoint.c:356 (set (reg:SI 226)
        (zero_extend:SI (reg:QI 225))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 225)
        (nil)))

(insn 115 114 116 7 arch/arm/kernel/hw_breakpoint.c:356 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 226)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 226)
        (nil)))

(jump_insn 116 115 117 7 arch/arm/kernel/hw_breakpoint.c:356 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 122)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 7 -> ( 9 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 148 279
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 148 279
;; rd  out 	(42)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 617


;; Succ edge  9 [50.0%] 
;; Succ edge  8 [50.0%]  (fallthru)

;; Start of basic block ( 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u109(11){ }u110(13){ }u111(25){ }u112(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 141 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 148
;; live  gen 	 141 142
;; live  kill	
;; rd  in  	(42)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 617
;; rd  gen 	(2)
508, 512
;; rd  kill	(8)
507, 508, 509, 510, 511, 512, 513, 514

;; Pred edge  7 [50.0%]  (fallthru)
(note 117 116 118 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 118 117 119 8 arch/arm/kernel/hw_breakpoint.c:365 (set (reg/v:SI 141 [ val_base ])
        (const_int 96 [0x60])) 167 {*arm_movsi_insn} (nil))

(insn 119 118 260 8 arch/arm/kernel/hw_breakpoint.c:364 (set (reg/v:SI 142 [ ctrl_base ])
        (const_int 112 [0x70])) 167 {*arm_movsi_insn} (nil))

(jump_insn 260 119 261 8 (set (pc)
        (label_ref 158)) -1 (nil))
;; End of basic block 8 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; rd  out 	(44)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 500, 503, 506, 508, 512, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 617


;; Succ edge  10 [100.0%] 

(barrier 261 260 122)

;; Start of basic block ( 7) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u113(11){ }u114(13){ }u115(25){ }u116(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140 148 279
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 148 279
;; lr  def 	 138 139 141 142 146 227 228 230 231 232 233 235 236 237 238 239 242 243 244 247 248 249 250 253 254 255
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140 148 279
;; live  gen 	 138 139 141 142 146 227 228 230 231 232 233 235 236 237 238 239 242 243 244 247 248 249 250 253 254 255
;; live  kill	
;; rd  in  	(42)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 500, 503, 506, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 617
;; rd  gen 	(26)
498, 501, 507, 511, 521, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600
;; rd  kill	(36)
498, 499, 500, 501, 502, 503, 507, 508, 509, 510, 511, 512, 513, 514, 521, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600

;; Pred edge  7 [50.0%] 
(code_label 122 261 123 9 297 "" [1 uses])

(note 123 122 124 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 124 123 125 9 arch/arm/kernel/hw_breakpoint.c:358 (set (reg/f:SI 227)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 125 124 126 9 arch/arm/kernel/hw_breakpoint.c:358 (set (reg:SI 146 [ core_num_brps.318 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 227)
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 227)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
            (nil))))

(insn 126 125 127 9 arch/arm/kernel/hw_breakpoint.c:358 (set (reg/v:SI 142 [ ctrl_base ])
        (plus:SI (reg:SI 146 [ core_num_brps.318 ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 127 126 128 9 arch/arm/kernel/hw_breakpoint.c:359 (set (reg/v:SI 141 [ val_base ])
        (plus:SI (reg:SI 146 [ core_num_brps.318 ])
            (const_int 64 [0x40]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 146 [ core_num_brps.318 ])
        (nil)))

(insn 128 127 129 9 arch/arm/kernel/hw_breakpoint.c:361 (set (reg:SI 228 [ <variable>.hw.D.22650.D.22649.info.trigger ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 148 [ bp ])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 129 128 130 9 arch/arm/kernel/hw_breakpoint.c:361 (set (reg/v:SI 139 [ addr ])
        (and:SI (reg:SI 228 [ <variable>.hw.D.22650.D.22649.info.trigger ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 228 [ <variable>.hw.D.22650.D.22649.info.trigger ])
        (nil)))

(insn 130 129 132 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 230)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 148 [ bp ])
                    (const_int 209 [0xd1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 132 130 133 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 231) 0)
        (zero_extract:SI (reg:SI 230)
            (const_int 1 [0x1])
            (const_int 1 [0x1]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 230)
        (nil)))

(insn 133 132 134 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 232)
        (zero_extend:SI (reg:QI 231))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 231)
        (nil)))

(insn 134 133 135 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 233)
        (ashift:SI (reg:SI 232)
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 232)
        (nil)))

(insn 135 134 137 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 235)
        (zero_extend:SI (mem/s:HI (plus:SI (reg/v/f:SI 148 [ bp ])
                    (const_int 210 [0xd2])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 137 135 138 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 236) 0)
        (zero_extract:SI (reg:SI 235)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 235)
        (nil)))

(insn 138 137 139 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 237)
        (zero_extend:SI (reg:QI 236))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 236)
        (nil)))

(insn 139 138 140 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 238)
        (ashift:SI (reg:SI 237)
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 237)
        (nil)))

(insn 140 139 143 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 239)
        (ior:SI (reg:SI 233)
            (reg:SI 238))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 238)
        (expr_list:REG_DEAD (reg:SI 233)
            (nil))))

(insn 143 140 144 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 242) 0)
        (zero_extract:SI (reg:SI 279)
            (const_int 1 [0x1])
            (const_int 7 [0x7]))) 124 {extzv_t2} (nil))

(insn 144 143 145 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 243)
        (zero_extend:SI (reg:QI 242))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 242)
        (nil)))

(insn 145 144 148 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 244)
        (ior:SI (reg:SI 239)
            (reg:SI 243))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 243)
        (expr_list:REG_DEAD (reg:SI 239)
            (nil))))

(insn 148 145 149 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 247) 0)
        (zero_extract:SI (reg:SI 279)
            (const_int 2 [0x2])
            (const_int 3 [0x3]))) 124 {extzv_t2} (nil))

(insn 149 148 150 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 248)
        (zero_extend:SI (reg:QI 247))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 247)
        (nil)))

(insn 150 149 151 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 249)
        (ashift:SI (reg:SI 248)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 248)
        (nil)))

(insn 151 150 154 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 250)
        (ior:SI (reg:SI 244)
            (reg:SI 249))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 249)
        (expr_list:REG_DEAD (reg:SI 244)
            (nil))))

(insn 154 151 155 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 253) 0)
        (zero_extract:SI (reg:SI 279)
            (const_int 2 [0x2])
            (const_int 5 [0x5]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 279)
        (nil)))

(insn 155 154 156 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 254)
        (zero_extend:SI (reg:QI 253))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 253)
        (nil)))

(insn 156 155 157 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 255)
        (ashift:SI (reg:SI 254)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 254)
        (nil)))

(insn 157 156 158 9 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg/v:SI 138 [ ctrl ])
        (ior:SI (reg:SI 250)
            (reg:SI 255))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 255)
        (expr_list:REG_DEAD (reg:SI 250)
            (nil))))
;; End of basic block 9 -> ( 10)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; rd  out 	(66)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 498, 501, 506, 507, 511, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 617


;; Succ edge  10 [100.0%]  (fallthru)

;; Start of basic block ( 9 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136 143 145 257 258 259 260 261 262 263
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 148
;; live  gen 	 136 143 145 257 258 259 260 261 262 263
;; live  kill	
;; rd  in  	(70)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 498, 500, 501, 503, 506, 507, 508, 511, 512, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 617
;; rd  gen 	(10)
496, 515, 519, 601, 602, 603, 604, 605, 606, 607
;; rd  kill	(12)
496, 515, 516, 519, 520, 601, 602, 603, 604, 605, 606, 607

;; Pred edge  9 [100.0%]  (fallthru)
;; Pred edge  8 [100.0%] 
(code_label 158 157 159 10 298 "" [1 uses])

(note 159 158 161 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 161 159 162 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg/f:SI 257)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))
        (nil)))

(insn 162 161 164 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg/v:SI 136 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 257)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8113717)) -1 (expr_list:REG_DEAD (reg/f:SI 257)
        (nil)))

(insn 164 162 165 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg/f:SI 258)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 165 164 166 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg:SI 260)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 166 165 167 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg:SI 259)
        (and:SI (reg:SI 260)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 260)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 167 166 168 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg:SI 261 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 259)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 259)
        (nil)))

(insn 168 167 169 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg:SI 262)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 261 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 258)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 261 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 258)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 261 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 169 168 170 10 arch/arm/kernel/hw_breakpoint.c:367 (set (reg/v/f:SI 145 [ slots ])
        (plus:SI (reg/v:SI 136 [ __ptr ])
            (reg:SI 262))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 262)
        (expr_list:REG_DEAD (reg/v:SI 136 [ __ptr ])
            (nil))))

(insn 170 169 171 10 arch/arm/kernel/hw_breakpoint.c:368 (set (reg/f:SI 263)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 171 170 172 10 arch/arm/kernel/hw_breakpoint.c:368 (set (reg/v:SI 143 [ max_slots ])
        (mem/c/i:SI (plus:SI (reg/f:SI 263)
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 263)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 12 [0xc]))) [0 core_num_wrps+0 S4 A32])
            (nil))))
;; End of basic block 10 -> ( 11)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; rd  out 	(80)
7, 16, 22, 27, 28, 33, 34, 83, 88, 89, 496, 498, 500, 501, 503, 506, 507, 508, 511, 512, 515, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 617


;; Succ edge  11 [100.0%]  (fallthru)

;; Start of basic block ( 5 10 6) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u161(11){ }u162(13){ }u163(25){ }u164(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 145
;; lr  def 	 133 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 145 148
;; live  gen 	 133 144
;; live  kill	
;; rd  in  	(120)
7, 16, 22, 27, 28, 33, 34, 83, 84, 88, 89, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 617
;; rd  gen 	(2)
495, 518
;; rd  kill	(4)
494, 495, 517, 518

;; Pred edge  5 [100.0%] 
;; Pred edge  10 [100.0%]  (fallthru)
;; Pred edge  6 [100.0%] 
(code_label 172 171 173 11 296 "" [2 uses])

(note 173 172 174 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 175 11 arch/arm/kernel/hw_breakpoint.c:368 (set (reg:SI 133 [ ivtmp.908 ])
        (reg/v/f:SI 145 [ slots ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 145 [ slots ])
        (nil)))

(insn 175 174 262 11 arch/arm/kernel/hw_breakpoint.c:371 (set (reg/v:SI 144 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 262 175 263 11 arch/arm/kernel/hw_breakpoint.c:371 (set (pc)
        (label_ref 190)) -1 (nil))
;; End of basic block 11 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; rd  out 	(122)
7, 16, 22, 27, 28, 33, 34, 83, 84, 88, 89, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 617


;; Succ edge  15 [100.0%] 

(barrier 263 262 192)

;; Start of basic block ( 15) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 24 [cc] 133 264
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  gen 	 24 [cc] 133 264
;; live  kill	
;; rd  in  	(124)
7, 16, 22, 27, 28, 33, 34, 81, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(3)
82, 494, 608
;; rd  kill	(15)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 494, 495, 608

;; Pred edge  15 [95.5%] 
(code_label 192 263 178 12 302 "" [1 uses])

(note 178 192 180 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 180 178 181 12 arch/arm/kernel/hw_breakpoint.c:374 (set (reg/f:SI 264)
        (mem/f:SI (post_inc:SI (reg:SI 133 [ ivtmp.908 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_INC (reg:SI 133 [ ivtmp.908 ])
        (nil)))

(insn 181 180 182 12 arch/arm/kernel/hw_breakpoint.c:374 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 264)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 264)
        (nil)))

(jump_insn 182 181 183 12 arch/arm/kernel/hw_breakpoint.c:374 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 187)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 12 -> ( 13 14)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; rd  out 	(123)
7, 16, 22, 27, 28, 33, 34, 82, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617


;; Succ edge  13 [4.5%]  (fallthru,loop_exit)
;; Succ edge  14 [95.5%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u174(11){ }u175(13){ }u176(25){ }u177(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 148
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  gen 	
;; live  kill	
;; rd  in  	(123)
7, 16, 22, 27, 28, 33, 34, 82, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  12 [4.5%]  (fallthru,loop_exit)
(note 183 182 184 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 184 183 264 13 arch/arm/kernel/hw_breakpoint.c:375 (set (mem/f:SI (plus:SI (reg:SI 133 [ ivtmp.908 ])
                (const_int -4 [0xfffffffffffffffc])) [0 S4 A32])
        (reg/v/f:SI 148 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 148 [ bp ])
        (expr_list:REG_DEAD (reg:SI 133 [ ivtmp.908 ])
            (nil))))

(jump_insn 264 184 265 13 arch/arm/kernel/hw_breakpoint.c:376 (set (pc)
        (label_ref 195)) -1 (nil))
;; End of basic block 13 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144
;; rd  out 	(123)
7, 16, 22, 27, 28, 33, 34, 82, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617


;; Succ edge  16 [100.0%] 

(barrier 265 264 187)

;; Start of basic block ( 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 144
;; lr  def 	 144
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  gen 	 144
;; live  kill	
;; rd  in  	(123)
7, 16, 22, 27, 28, 33, 34, 82, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(1)
517
;; rd  kill	(2)
517, 518

;; Pred edge  12 [95.5%] 
(code_label 187 265 188 14 300 "" [1 uses])

(note 188 187 189 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 189 188 190 14 arch/arm/kernel/hw_breakpoint.c:371 (set (reg/v:SI 144 [ i ])
        (plus:SI (reg/v:SI 144 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; rd  out 	(122)
7, 16, 22, 27, 28, 33, 34, 82, 88, 89, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617


;; Succ edge  15 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 14 11) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u185(11){ }u186(13){ }u187(25){ }u188(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(126)
7, 16, 22, 27, 28, 33, 34, 82, 83, 84, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(1)
81
;; rd  kill	(12)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87

;; Pred edge  14 [100.0%]  (fallthru,dfs_back)
;; Pred edge  11 [100.0%] 
(code_label 190 189 191 15 299 "" [1 uses])

(note 191 190 193 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 193 191 194 15 arch/arm/kernel/hw_breakpoint.c:371 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ i ])
            (reg/v:SI 143 [ max_slots ]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 194 193 195 15 arch/arm/kernel/hw_breakpoint.c:371 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 192)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9550 [0x254e])
            (nil))))
;; End of basic block 15 -> ( 12 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 138 139 140 141 142 143 144 148
;; rd  out 	(124)
7, 16, 22, 27, 28, 33, 34, 81, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617


;; Succ edge  12 [95.5%] 
;; Succ edge  16 [4.5%]  (fallthru,loop_exit)

;; Start of basic block ( 15 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u192(11){ }u193(13){ }u194(25){ }u195(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 144
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 143 144
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(125)
7, 16, 22, 27, 28, 33, 34, 81, 82, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(1)
80
;; rd  kill	(12)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87

;; Pred edge  15 [4.5%]  (fallthru,loop_exit)
;; Pred edge  13 [100.0%] 
(code_label 195 194 196 16 301 "" [1 uses])

(note 196 195 197 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 197 196 198 16 arch/arm/kernel/hw_breakpoint.c:380 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 144 [ i ])
            (reg/v:SI 143 [ max_slots ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 143 [ max_slots ])
        (nil)))

(jump_insn 198 197 199 16 arch/arm/kernel/hw_breakpoint.c:380 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 227)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 16 -> ( 17 20)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 138 139 140 141 142 144
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 144
;; rd  out 	(124)
7, 16, 22, 27, 28, 33, 34, 80, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617


;; Succ edge  17 [0.0%]  (fallthru)
;; Succ edge  20 [100.0%] 

;; Start of basic block ( 16) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u199(11){ }u200(13){ }u201(25){ }u202(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 265 267 268 269 270
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 265 267 268 269 270
;; live  kill	
;; rd  in  	(124)
7, 16, 22, 27, 28, 33, 34, 80, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(6)
79, 609, 610, 611, 612, 613
;; rd  kill	(17)
76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 609, 610, 611, 612, 613

;; Pred edge  16 [0.0%]  (fallthru)
(note 199 198 200 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 200 199 201 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (reg/f:SI 265)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 201 200 203 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (reg:SI 267 [ __warned ])
        (zero_extend:SI (mem/c/i:QI (plus:SI (reg/f:SI 265)
                    (const_int 18 [0x12])) [0 __warned+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 18 [0x12]))) [0 __warned+0 S1 A8]))
        (nil)))

(insn 203 201 204 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (reg:SI 268)
        (xor:SI (reg:SI 267 [ __warned ])
            (const_int 1 [0x1]))) 96 {*arm_xorsi3} (expr_list:REG_DEAD (reg:SI 267 [ __warned ])
        (nil)))

(insn 204 203 205 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (reg:QI 269)
        (subreg:QI (reg:SI 268) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 268)
        (nil)))

(insn 205 204 206 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (reg:SI 270)
        (zero_extend:SI (reg:QI 269))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 269)
        (nil)))

(insn 206 205 207 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 270)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 270)
        (nil)))

(jump_insn 207 206 208 17 arch/arm/kernel/hw_breakpoint.c:380 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 212)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 17 -> ( 19 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 265
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 265
;; rd  out 	(129)
7, 16, 22, 27, 28, 33, 34, 79, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617


;; Succ edge  19 [0.0%] 
;; Succ edge  18 [100.0%]  (fallthru)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u209(11){ }u210(13){ }u211(25){ }u212(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 140
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 140
;; live  kill	
;; rd  in  	(129)
7, 16, 22, 27, 28, 33, 34, 79, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617
;; rd  gen 	(1)
505
;; rd  kill	(3)
504, 505, 506

;; Pred edge  17 [100.0%]  (fallthru)
(note 208 207 209 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 209 208 266 18 arch/arm/kernel/hw_breakpoint.c:381 (set (reg/v:SI 140 [ ret ])
        (const_int -16 [0xfffffffffffffff0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 266 209 267 18 (set (pc)
        (label_ref 237)) -1 (nil))
;; End of basic block 18 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(129)
7, 16, 22, 27, 28, 33, 34, 79, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617


;; Succ edge  21 [100.0%] 

(barrier 267 266 212)

;; Start of basic block ( 17) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u213(11){ }u214(13){ }u215(25){ }u216(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 265
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 265
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 140 274
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 265
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 140 274
;; live  kill	 14 [lr]
;; rd  in  	(129)
7, 16, 22, 27, 28, 33, 34, 79, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617
;; rd  gen 	(2)
504, 614
;; rd  kill	(9)
35, 36, 37, 38, 39, 504, 505, 506, 614

;; Pred edge  17 [0.0%] 
(code_label 212 267 213 19 304 "" [1 uses])

(note 213 212 216 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 216 213 217 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 3 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 217 216 218 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 3 (set (reg:SI 1 r1)
        (const_int 380 [0x17c])) 167 {*arm_movsi_insn} (nil))

(insn 218 217 219 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 3 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11585c00>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC8") [flags 0x82] <string_cst 0x11585c00>)
        (nil)))

(call_insn 219 218 221 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 3 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 221 219 223 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 5 (set (reg:SI 274)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 223 221 224 19 arch/arm/kernel/hw_breakpoint.c:380 discrim 5 (set (mem/c/i:QI (plus:SI (reg/f:SI 265)
                (const_int 18 [0x12])) [0 __warned+0 S1 A8])
        (subreg:QI (reg:SI 274) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 274)
        (expr_list:REG_DEAD (reg/f:SI 265)
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 224 223 268 19 arch/arm/kernel/hw_breakpoint.c:381 (set (reg/v:SI 140 [ ret ])
        (const_int -16 [0xfffffffffffffff0])) 167 {*arm_movsi_insn} (nil))

(jump_insn 268 224 269 19 (set (pc)
        (label_ref 237)) -1 (nil))
;; End of basic block 19 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(130)
7, 16, 22, 27, 28, 33, 34, 79, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 617


;; Succ edge  21 [100.0%] 

(barrier 269 268 227)

;; Start of basic block ( 16) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u223(11){ }u224(13){ }u225(25){ }u226(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 144
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 141 142 144
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 276 277
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 138 139 140 141 142 144
;; live  gen 	 0 [r0] 1 [r1] 276 277
;; live  kill	 14 [lr]
;; rd  in  	(124)
7, 16, 22, 27, 28, 33, 34, 80, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 617
;; rd  gen 	(2)
615, 616
;; rd  kill	(7)
35, 36, 37, 38, 39, 615, 616

;; Pred edge  16 [100.0%] 
(code_label 227 269 228 20 303 "" [1 uses])

(note 228 227 229 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 229 228 230 20 arch/arm/kernel/hw_breakpoint.c:386 (set (reg:SI 276)
        (plus:SI (reg/v:SI 144 [ i ])
            (reg/v:SI 141 [ val_base ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 141 [ val_base ])
        (nil)))

(insn 230 229 231 20 arch/arm/kernel/hw_breakpoint.c:386 (set (reg:SI 0 r0)
        (reg:SI 276)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 276)
        (nil)))

(insn 231 230 232 20 arch/arm/kernel/hw_breakpoint.c:386 (set (reg:SI 1 r1)
        (reg/v:SI 139 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 139 [ addr ])
        (nil)))

(call_insn 232 231 233 20 arch/arm/kernel/hw_breakpoint.c:386 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 233 232 234 20 arch/arm/kernel/hw_breakpoint.c:389 (set (reg:SI 277)
        (plus:SI (reg/v:SI 144 [ i ])
            (reg/v:SI 142 [ ctrl_base ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg/v:SI 144 [ i ])
        (expr_list:REG_DEAD (reg/v:SI 142 [ ctrl_base ])
            (nil))))

(insn 234 233 235 20 arch/arm/kernel/hw_breakpoint.c:389 (set (reg:SI 0 r0)
        (reg:SI 277)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 277)
        (nil)))

(insn 235 234 236 20 arch/arm/kernel/hw_breakpoint.c:389 (set (reg:SI 1 r1)
        (reg/v:SI 138 [ ctrl ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ ctrl ])
        (nil)))

(call_insn 236 235 237 20 arch/arm/kernel/hw_breakpoint.c:389 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 20 -> ( 21)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; rd  out 	(126)
7, 16, 22, 27, 28, 33, 34, 80, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 615, 616, 617


;; Succ edge  21 [100.0%]  (fallthru)

;; Start of basic block ( 2 18 20 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u241(11){ }u242(13){ }u243(25){ }u244(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 140
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 140
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(136)
7, 16, 22, 27, 28, 33, 34, 79, 80, 86, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617
;; rd  gen 	(1)
1
;; rd  kill	(9)
0, 1, 2, 3, 4, 5, 6, 7, 8

;; Pred edge  2 [96.0%] 
;; Pred edge  18 [100.0%] 
;; Pred edge  20 [100.0%]  (fallthru)
;; Pred edge  19 [100.0%] 
(code_label 237 236 238 21 293 ("out") [3 uses])

(note 238 237 243 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 243 238 249 21 arch/arm/kernel/hw_breakpoint.c:393 (set (reg/i:SI 0 r0)
        (reg/v:SI 140 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 140 [ ret ])
        (nil)))

(insn 249 243 0 21 arch/arm/kernel/hw_breakpoint.c:393 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 21 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(136)
1, 16, 22, 27, 28, 33, 34, 79, 80, 86, 88, 89, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function enable_single_step (enable_single_step)[0:1262]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


enable_single_step

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,8u} r134={1d,1u} r136={1d,1u} r137={1d,1u} r139={2d,3u} r140={1d,1u} r141={1d,1u} r142={2d,2u} r143={1d,1u} r145={1d,1u} r146={1d,1u} r147={2d,2u} r148={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} r155={2d,2u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} 
;;    total ref usage 316{269d,47u,0e} in 32{30 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,3] 13[17,1] 14[18,2] 15[20,2] 16[22,2] 17[24,2] 18[26,2] 19[28,2] 20[30,2] 21[32,2] 22[34,2] 23[36,2] 24[38,2] 25[40,1] 26[41,1] 27[42,2] 28[44,2] 29[46,2] 30[48,2] 31[50,2] 32[52,2] 33[54,2] 34[56,2] 35[58,2] 36[60,2] 37[62,2] 38[64,2] 39[66,2] 40[68,2] 41[70,2] 42[72,2] 43[74,2] 44[76,2] 45[78,2] 46[80,2] 47[82,2] 48[84,2] 49[86,2] 50[88,2] 51[90,2] 52[92,2] 53[94,2] 54[96,2] 55[98,2] 56[100,2] 57[102,2] 58[104,2] 59[106,2] 60[108,2] 61[110,2] 62[112,2] 63[114,2] 64[116,2] 65[118,2] 66[120,2] 67[122,2] 68[124,2] 69[126,2] 70[128,2] 71[130,2] 72[132,2] 73[134,2] 74[136,2] 75[138,2] 76[140,2] 77[142,2] 78[144,2] 79[146,2] 80[148,2] 81[150,2] 82[152,2] 83[154,2] 84[156,2] 85[158,2] 86[160,2] 87[162,2] 88[164,2] 89[166,2] 90[168,2] 91[170,2] 92[172,2] 93[174,2] 94[176,2] 95[178,2] 96[180,2] 97[182,2] 98[184,2] 99[186,2] 100[188,2] 101[190,2] 102[192,2] 103[194,2] 104[196,2] 105[198,2] 106[200,2] 107[202,2] 108[204,2] 109[206,2] 110[208,2] 111[210,2] 112[212,2] 113[214,2] 114[216,2] 115[218,2] 116[220,2] 117[222,2] 118[224,2] 119[226,2] 120[228,2] 121[230,2] 122[232,2] 123[234,2] 124[236,2] 125[238,2] 126[240,2] 127[242,2] 133[244,1] 134[245,1] 136[246,1] 137[247,1] 139[248,2] 140[250,1] 141[251,1] 142[252,2] 143[254,1] 145[255,1] 146[256,1] 147[257,2] 148[259,1] 149[260,1] 151[261,1] 152[262,1] 155[263,2] 156[265,1] 157[266,1] 158[267,1] 159[268,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d16(12){ }d17(13){ }d19(14){ }d40(25){ }d41(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41
;; rd  kill	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 40, 41
;; lr  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d13(bb 0 insn -1) }u1(13){ d17(bb 0 insn -1) }u2(25){ d40(bb 0 insn -1) }u3(26){ d41(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137 139 140 141 142 143 145 146 147 148 149 151 152 155 156 157 158 159
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 136 137 139 140 141 142 143 145 146 147 148 149 151 152 155 156 157 158 159
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41
;; rd  gen 	(22)
0, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268
;; rd  kill	(25)
0, 1, 2, 3, 18, 19, 244, 245, 246, 247, 250, 251, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
0, 6, 9, 12, 13, 16, 17, 40, 41, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d40(bb 0 insn -1) }
;;   reg 26 { d41(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 3
;;      reg 1 { d6(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 13 { d17(bb 0 insn -1) }
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 9
;;      reg 133 { d244(bb 2 insn 2) }
;;   UD chains for insn luid 4 uid 12
;;      reg 136 { d246(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 14
;;      reg 133 { d244(bb 2 insn 2) }
;;      reg 137 { d247(bb 2 insn 12) }
;;   UD chains for insn luid 6 uid 15
;;      reg 133 { d244(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 16
;;      reg 140 { d250(bb 2 insn 15) }
;;   UD chains for insn luid 9 uid 18
;;      reg 141 { d251(bb 2 insn 17) }
;;      reg 139 read/write { d249(bb 2 insn 16) }
;;   UD chains for insn luid 10 uid 50
;;      reg 139 { d249(bb 2 insn 16) d248(bb 2 insn 18) }
;;   UD chains for insn luid 11 uid 51
;;      reg 156 { d265(bb 2 insn 50) }
;;   UD chains for insn luid 12 uid 49
;;      reg 155 { d263(bb 2 insn 51) }
;;   UD chains for insn luid 13 uid 52
;;      reg 155 { d264(bb 2 insn 49) }
;;   UD chains for insn luid 14 uid 19
;;      reg 133 { d244(bb 2 insn 2) }
;;      reg 139 { d249(bb 2 insn 16) d248(bb 2 insn 18) }
;;   UD chains for insn luid 15 uid 20
;;      reg 157 { d266(bb 2 insn 52) }
;;   UD chains for insn luid 16 uid 21
;;      reg 143 { d254(bb 2 insn 20) }
;;   UD chains for insn luid 17 uid 22
;;      reg 142 read/write { d253(bb 2 insn 21) }
;;   UD chains for insn luid 18 uid 53
;;      reg 142 { d253(bb 2 insn 21) d252(bb 2 insn 22) }
;;   UD chains for insn luid 19 uid 24
;;      reg 133 { d244(bb 2 insn 2) }
;;   UD chains for insn luid 20 uid 26
;;      reg 145 { d255(bb 2 insn 24) }
;;   UD chains for insn luid 21 uid 27
;;      reg 158 { d267(bb 2 insn 53) }
;;   UD chains for insn luid 22 uid 28
;;      reg 148 { d259(bb 2 insn 27) }
;;   UD chains for insn luid 23 uid 29
;;      reg 146 { d256(bb 2 insn 26) }
;;   UD chains for insn luid 24 uid 30
;;      reg 149 { d260(bb 2 insn 29) }
;;      reg 147 read/write { d258(bb 2 insn 28) }
;;   UD chains for insn luid 25 uid 54
;;      reg 147 { d258(bb 2 insn 28) d257(bb 2 insn 30) }
;;   UD chains for insn luid 26 uid 32
;;      reg 159 { d268(bb 2 insn 54) }
;;   UD chains for insn luid 27 uid 35
;;      reg 151 { d261(bb 2 insn 32) }
;;   UD chains for insn luid 28 uid 37
;;      reg 133 { d244(bb 2 insn 2) }
;;      reg 152 { d262(bb 2 insn 35) }
;;   UD chains for insn luid 29 uid 38
;;      reg 133 { d244(bb 2 insn 2) }
;;      reg 134 { d245(bb 2 insn 3) }
;;   UD chains for insn luid 30 uid 39
;;      reg 133 { d244(bb 2 insn 2) }
;;   UD chains for insn luid 31 uid 40
;;      reg 13 { d17(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 39) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u43(11){ d13(bb 0 insn -1) }u44(13){ d17(bb 0 insn -1) }u45(14){ }u46(25){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(30)
0, 6, 9, 12, 13, 16, 17, 40, 41, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(30)
0, 6, 9, 12, 13, 16, 17, 40, 41, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d40(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 19 to worklist
  Adding insn 14 to worklist
  Adding insn 8 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 8:
Processing use of (reg 0 r0) in insn 8:
Processing use of (reg 133 [ bp ]) in insn 14:
  Adding insn 2 to worklist
Processing use of (subreg (reg 137) 0) in insn 14:
  Adding insn 12 to worklist
Processing use of (reg 136) in insn 12:
  Adding insn 9 to worklist
Processing use of (reg 133 [ bp ]) in insn 9:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 133 [ bp ]) in insn 19:
Processing use of (reg 139) in insn 19:
  Adding insn 16 to worklist
  Adding insn 18 to worklist
Processing use of (reg 141) in insn 18:
  Adding insn 17 to worklist
Processing use of (subreg (reg 139) 0) in insn 18:
Processing use of (subreg (reg 140) 0) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 133 [ bp ]) in insn 15:
Processing use of (reg 133 [ bp ]) in insn 37:
Processing use of (subreg (reg 152) 0) in insn 37:
  Adding insn 35 to worklist
Processing use of (reg 151) in insn 35:
  Adding insn 32 to worklist
Processing use of (reg 159) in insn 32:
  Adding insn 54 to worklist
Processing use of (reg 147) in insn 54:
  Adding insn 28 to worklist
  Adding insn 30 to worklist
Processing use of (reg 149) in insn 30:
  Adding insn 29 to worklist
Processing use of (subreg (reg 147) 0) in insn 30:
Processing use of (subreg (reg 146) 0) in insn 29:
  Adding insn 26 to worklist
Processing use of (reg 145) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 133 [ bp ]) in insn 24:
Processing use of (subreg (reg 148) 0) in insn 28:
  Adding insn 27 to worklist
Processing use of (reg 158) in insn 27:
  Adding insn 53 to worklist
Processing use of (reg 142) in insn 53:
  Adding insn 21 to worklist
  Adding insn 22 to worklist
Processing use of (subreg (reg 142) 0) in insn 22:
Processing use of (subreg (reg 143) 0) in insn 21:
  Adding insn 20 to worklist
Processing use of (reg 157) in insn 20:
  Adding insn 52 to worklist
Processing use of (subreg (reg 155) 0) in insn 52:
  Adding insn 49 to worklist
Processing use of (reg 155) in insn 49:
  Adding insn 51 to worklist
Processing use of (reg 156) in insn 51:
  Adding insn 50 to worklist
Processing use of (reg 139) in insn 50:
Processing use of (reg 133 [ bp ]) in insn 38:
Processing use of (reg 134 [ addr ]) in insn 38:
  Adding insn 3 to worklist
Processing use of (reg 1 r1) in insn 3:
Processing use of (reg 13 sp) in insn 40:
Processing use of (reg 0 r0) in insn 40:
  Adding insn 39 to worklist
Processing use of (reg 133 [ bp ]) in insn 39:


enable_single_step

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 13[sp] 14[lr]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,8u} r134={1d,1u} r136={1d,1u} r137={1d,1u} r139={2d,3u} r140={1d,1u} r141={1d,1u} r142={2d,2u} r143={1d,1u} r145={1d,1u} r146={1d,1u} r147={2d,2u} r148={1d,1u} r149={1d,1u} r151={1d,1u} r152={1d,1u} r155={2d,2u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} 
;;    total ref usage 316{269d,47u,0e} in 32{30 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,3] 13[17,1] 14[18,2] 15[20,2] 16[22,2] 17[24,2] 18[26,2] 19[28,2] 20[30,2] 21[32,2] 22[34,2] 23[36,2] 24[38,2] 25[40,1] 26[41,1] 27[42,2] 28[44,2] 29[46,2] 30[48,2] 31[50,2] 32[52,2] 33[54,2] 34[56,2] 35[58,2] 36[60,2] 37[62,2] 38[64,2] 39[66,2] 40[68,2] 41[70,2] 42[72,2] 43[74,2] 44[76,2] 45[78,2] 46[80,2] 47[82,2] 48[84,2] 49[86,2] 50[88,2] 51[90,2] 52[92,2] 53[94,2] 54[96,2] 55[98,2] 56[100,2] 57[102,2] 58[104,2] 59[106,2] 60[108,2] 61[110,2] 62[112,2] 63[114,2] 64[116,2] 65[118,2] 66[120,2] 67[122,2] 68[124,2] 69[126,2] 70[128,2] 71[130,2] 72[132,2] 73[134,2] 74[136,2] 75[138,2] 76[140,2] 77[142,2] 78[144,2] 79[146,2] 80[148,2] 81[150,2] 82[152,2] 83[154,2] 84[156,2] 85[158,2] 86[160,2] 87[162,2] 88[164,2] 89[166,2] 90[168,2] 91[170,2] 92[172,2] 93[174,2] 94[176,2] 95[178,2] 96[180,2] 97[182,2] 98[184,2] 99[186,2] 100[188,2] 101[190,2] 102[192,2] 103[194,2] 104[196,2] 105[198,2] 106[200,2] 107[202,2] 108[204,2] 109[206,2] 110[208,2] 111[210,2] 112[212,2] 113[214,2] 114[216,2] 115[218,2] 116[220,2] 117[222,2] 118[224,2] 119[226,2] 120[228,2] 121[230,2] 122[232,2] 123[234,2] 124[236,2] 125[238,2] 126[240,2] 127[242,2] 133[244,1] 134[245,1] 136[246,1] 137[247,1] 139[248,2] 140[250,1] 141[251,1] 142[252,2] 143[254,1] 145[255,1] 146[256,1] 147[257,2] 148[259,1] 149[260,1] 151[261,1] 152[262,1] 155[263,2] 156[265,1] 157[266,1] 158[267,1] 159[268,1] 
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 136 137 139 140 141 142 143 145 146 147 148 149 151 152 155 156 157 158 159
;; live  in  	 0 [r0] 1 [r1] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 136 137 139 140 141 142 143 145 146 147 148 149 151 152 155 156 157 158 159
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41
;; rd  gen 	(22)
0, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268
;; rd  kill	(25)
0, 1, 2, 3, 18, 19, 244, 245, 246, 247, 250, 251, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 arch/arm/kernel/hw_breakpoint.c:649 (set (reg/v/f:SI 133 [ bp ])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (nil))

(insn 3 2 4 2 arch/arm/kernel/hw_breakpoint.c:649 (set (reg/v:SI 134 [ addr ])
        (reg:SI 1 r1 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [ addr ])
        (nil)))

(note 4 3 8 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 8 4 9 2 arch/arm/kernel/hw_breakpoint.c:652 (parallel [
            (call (mem:SI (symbol_ref:SI ("arch_uninstall_hw_breakpoint") [flags 0x3] <function_decl 0x10b14380 arch_uninstall_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 12 2 arch/arm/kernel/hw_breakpoint.c:653 (set (reg:SI 136)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 133 [ bp ])
                    (const_int 209 [0xd1])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 12 9 14 2 arch/arm/kernel/hw_breakpoint.c:653 (set (reg:SI 137)
        (ior:SI (reg:SI 136)
            (const_int 2 [0x2]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 136)
        (nil)))

(insn 14 12 15 2 arch/arm/kernel/hw_breakpoint.c:653 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 133 [ bp ])
                (const_int 209 [0xd1])) [0 S1 A8])
        (subreg:QI (reg:SI 137) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 137)
        (nil)))

(insn 15 14 16 2 arch/arm/kernel/hw_breakpoint.c:654 (set (reg:SI 140)
        (zero_extend:SI (mem/s/j:HI (plus:SI (reg/v/f:SI 133 [ bp ])
                    (const_int 210 [0xd2])) [0 S2 A16]))) 144 {*arm_zero_extendhisi2_v6} (nil))

(insn 16 15 17 2 arch/arm/kernel/hw_breakpoint.c:654 (set (reg:HI 139)
        (subreg:HI (reg:SI 140) 0)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:SI 140)
        (nil)))

(insn 17 16 18 2 arch/arm/kernel/hw_breakpoint.c:654 (set (reg:SI 141)
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (nil))

(insn 18 17 50 2 arch/arm/kernel/hw_breakpoint.c:654 (set (zero_extract:SI (subreg:SI (reg:HI 139) 0)
            (const_int 8 [0x8])
            (const_int 3 [0x3]))
        (reg:SI 141)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 141)
        (expr_list:REG_EQUAL (const_int 15 [0xf])
            (nil))))

(insn 50 18 51 2 arch/arm/kernel/hw_breakpoint.c:654 (set (reg:SI 156)
        (zero_extend:SI (reg:HI 139))) -1 (nil))

(insn 51 50 49 2 arch/arm/kernel/hw_breakpoint.c:654 (set (reg:SI 155)
        (reg:SI 156)) -1 (expr_list:REG_DEAD (reg:SI 156)
        (nil)))

(insn 49 51 52 2 arch/arm/kernel/hw_breakpoint.c:654 (set (reg:SI 155)
        (lshiftrt:SI (reg:SI 155)
            (const_int 8 [0x8]))) -1 (nil))

(insn 52 49 19 2 arch/arm/kernel/hw_breakpoint.c:654 (set (reg:QI 157)
        (subreg:QI (reg:SI 155) 0)) -1 (expr_list:REG_DEAD (reg:SI 155)
        (nil)))

(insn 19 52 20 2 arch/arm/kernel/hw_breakpoint.c:654 (set (mem/s/j:HI (plus:SI (reg/v/f:SI 133 [ bp ])
                (const_int 210 [0xd2])) [0 S2 A16])
        (reg:HI 139)) 176 {*movhi_insn_arch4} (expr_list:REG_DEAD (reg:HI 139)
        (nil)))

(insn 20 19 21 2 arch/arm/kernel/hw_breakpoint.c:655 (set (reg:SI 143)
        (zero_extend:SI (reg:QI 157))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 157)
        (nil)))

(insn 21 20 22 2 arch/arm/kernel/hw_breakpoint.c:655 (set (reg:QI 142)
        (subreg:QI (reg:SI 143) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 143)
        (nil)))

(insn 22 21 53 2 arch/arm/kernel/hw_breakpoint.c:655 (set (zero_extract:SI (subreg:SI (reg:QI 142) 0)
            (const_int 2 [0x2])
            (const_int 3 [0x3]))
        (const_int 0 [0x0])) 76 {insv_zero} (nil))

(insn 53 22 24 2 arch/arm/kernel/hw_breakpoint.c:655 (set (reg:QI 158)
        (reg:QI 142)) -1 (expr_list:REG_DEAD (reg:QI 142)
        (nil)))

(insn 24 53 26 2 arch/arm/kernel/hw_breakpoint.c:656 (set (reg:SI 145)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 133 [ bp ])
                    (const_int 215 [0xd7])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 26 24 27 2 arch/arm/kernel/hw_breakpoint.c:656 (set (subreg:SI (reg:QI 146) 0)
        (zero_extract:SI (reg:SI 145)
            (const_int 2 [0x2])
            (const_int 5 [0x5]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(insn 27 26 28 2 arch/arm/kernel/hw_breakpoint.c:656 (set (reg:SI 148)
        (zero_extend:SI (reg:QI 158))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 158)
        (nil)))

(insn 28 27 29 2 arch/arm/kernel/hw_breakpoint.c:656 (set (reg:QI 147)
        (subreg:QI (reg:SI 148) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 29 28 30 2 arch/arm/kernel/hw_breakpoint.c:656 (set (reg:SI 149)
        (subreg:SI (reg:QI 146) 0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:QI 146)
        (nil)))

(insn 30 29 54 2 arch/arm/kernel/hw_breakpoint.c:656 (set (zero_extract:SI (subreg:SI (reg:QI 147) 0)
            (const_int 2 [0x2])
            (const_int 5 [0x5]))
        (reg:SI 149)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 54 30 32 2 arch/arm/kernel/hw_breakpoint.c:656 (set (reg:QI 159)
        (reg:QI 147)) -1 (expr_list:REG_DEAD (reg:QI 147)
        (nil)))

(insn 32 54 35 2 arch/arm/kernel/hw_breakpoint.c:657 (set (reg:SI 151)
        (zero_extend:SI (reg:QI 159))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 159)
        (nil)))

(insn 35 32 37 2 arch/arm/kernel/hw_breakpoint.c:657 (set (reg:SI 152)
        (ior:SI (reg:SI 151)
            (const_int 128 [0x80]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 151)
        (nil)))

(insn 37 35 38 2 arch/arm/kernel/hw_breakpoint.c:657 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 133 [ bp ])
                (const_int 211 [0xd3])) [0 S1 A8])
        (subreg:QI (reg:SI 152) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 152)
        (nil)))

(insn 38 37 39 2 arch/arm/kernel/hw_breakpoint.c:658 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 133 [ bp ])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
        (reg/v:SI 134 [ addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 134 [ addr ])
        (nil)))

(insn 39 38 40 2 arch/arm/kernel/hw_breakpoint.c:659 (set (reg:SI 0 r0)
        (reg/v/f:SI 133 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ bp ])
        (nil)))

(call_insn/j 40 39 41 2 arch/arm/kernel/hw_breakpoint.c:659 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_install_hw_breakpoint") [flags 0x3] <function_decl 0x10b14300 arch_install_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
0, 6, 9, 12, 13, 16, 17, 40, 41, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 41 40 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function disable_single_step (disable_single_step)[0:1263]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)


disable_single_step

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,3u} r134={2d,2u} r135={1d,1u} 
;;    total ref usage 267{248d,19u,0e} in 8{6 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,3] 13[17,1] 14[18,2] 15[20,2] 16[22,2] 17[24,2] 18[26,2] 19[28,2] 20[30,2] 21[32,2] 22[34,2] 23[36,2] 24[38,2] 25[40,1] 26[41,1] 27[42,2] 28[44,2] 29[46,2] 30[48,2] 31[50,2] 32[52,2] 33[54,2] 34[56,2] 35[58,2] 36[60,2] 37[62,2] 38[64,2] 39[66,2] 40[68,2] 41[70,2] 42[72,2] 43[74,2] 44[76,2] 45[78,2] 46[80,2] 47[82,2] 48[84,2] 49[86,2] 50[88,2] 51[90,2] 52[92,2] 53[94,2] 54[96,2] 55[98,2] 56[100,2] 57[102,2] 58[104,2] 59[106,2] 60[108,2] 61[110,2] 62[112,2] 63[114,2] 64[116,2] 65[118,2] 66[120,2] 67[122,2] 68[124,2] 69[126,2] 70[128,2] 71[130,2] 72[132,2] 73[134,2] 74[136,2] 75[138,2] 76[140,2] 77[142,2] 78[144,2] 79[146,2] 80[148,2] 81[150,2] 82[152,2] 83[154,2] 84[156,2] 85[158,2] 86[160,2] 87[162,2] 88[164,2] 89[166,2] 90[168,2] 91[170,2] 92[172,2] 93[174,2] 94[176,2] 95[178,2] 96[180,2] 97[182,2] 98[184,2] 99[186,2] 100[188,2] 101[190,2] 102[192,2] 103[194,2] 104[196,2] 105[198,2] 106[200,2] 107[202,2] 108[204,2] 109[206,2] 110[208,2] 111[210,2] 112[212,2] 113[214,2] 114[216,2] 115[218,2] 116[220,2] 117[222,2] 118[224,2] 119[226,2] 120[228,2] 121[230,2] 122[232,2] 123[234,2] 124[236,2] 125[238,2] 126[240,2] 127[242,2] 133[244,1] 134[245,2] 135[247,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d3(0){ }d6(1){ }d9(2){ }d12(3){ }d13(11){ }d16(12){ }d17(13){ }d19(14){ }d40(25){ }d41(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41
;; rd  kill	(22)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 40, 41
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41

( 0 )->[2]->( 1 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d13(bb 0 insn -1) }u1(13){ d17(bb 0 insn -1) }u2(25){ d40(bb 0 insn -1) }u3(26){ d41(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41
;; rd  gen 	(4)
0, 244, 245, 247
;; rd  kill	(8)
0, 1, 2, 3, 18, 19, 244, 247
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 6, 9, 12, 13, 16, 17, 40, 41, 244, 245, 247
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 25 { d40(bb 0 insn -1) }
;;   reg 26 { d41(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 2
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 7
;;      reg 13 { d17(bb 0 insn -1) }
;;      reg 0 { d3(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 8
;;      reg 133 { d244(bb 2 insn 2) }
;;   UD chains for insn luid 3 uid 9
;;      reg 135 { d247(bb 2 insn 8) }
;;   UD chains for insn luid 4 uid 10
;;      reg 134 read/write { d246(bb 2 insn 9) }
;;   UD chains for insn luid 5 uid 11
;;      reg 133 { d244(bb 2 insn 2) }
;;      reg 134 { d246(bb 2 insn 9) d245(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 12
;;      reg 133 { d244(bb 2 insn 2) }
;;   UD chains for insn luid 7 uid 13
;;      reg 13 { d17(bb 0 insn -1) }
;;      reg 0 { d1(bb 2 insn 12) }

( 2 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u15(11){ d13(bb 0 insn -1) }u16(13){ d17(bb 0 insn -1) }u17(14){ }u18(25){ d40(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(12)
0, 6, 9, 12, 13, 16, 17, 40, 41, 244, 245, 247
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(12)
0, 6, 9, 12, 13, 16, 17, 40, 41, 244, 245, 247
;;  UD chains for artificial uses
;;   reg 11 { d13(bb 0 insn -1) }
;;   reg 13 { d17(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d40(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 13 to worklist
  Adding insn 11 to worklist
  Adding insn 7 to worklist
Finished finding needed instructions:
Processing use of (reg 13 sp) in insn 7:
Processing use of (reg 0 r0) in insn 7:
Processing use of (reg 133 [ bp ]) in insn 11:
  Adding insn 2 to worklist
Processing use of (reg 134) in insn 11:
  Adding insn 9 to worklist
  Adding insn 10 to worklist
Processing use of (subreg (reg 134) 0) in insn 10:
Processing use of (subreg (reg 135) 0) in insn 9:
  Adding insn 8 to worklist
Processing use of (reg 133 [ bp ]) in insn 8:
Processing use of (reg 0 r0) in insn 2:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 0 r0) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 133 [ bp ]) in insn 12:


disable_single_step

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 13[sp] 14[lr]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d} r3={3d} r11={1d,2u} r12={3d} r13={1d,4u} r14={2d,1u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r25={1d,2u} r26={1d,1u} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} r133={1d,3u} r134={2d,2u} r135={1d,1u} 
;;    total ref usage 267{248d,19u,0e} in 8{6 regular + 2 call} insns.
;; Reaching defs:

  sparse invalidated 	
  dense invalidated 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
0[0,4] 1[4,3] 2[7,3] 3[10,3] 11[13,1] 12[14,3] 13[17,1] 14[18,2] 15[20,2] 16[22,2] 17[24,2] 18[26,2] 19[28,2] 20[30,2] 21[32,2] 22[34,2] 23[36,2] 24[38,2] 25[40,1] 26[41,1] 27[42,2] 28[44,2] 29[46,2] 30[48,2] 31[50,2] 32[52,2] 33[54,2] 34[56,2] 35[58,2] 36[60,2] 37[62,2] 38[64,2] 39[66,2] 40[68,2] 41[70,2] 42[72,2] 43[74,2] 44[76,2] 45[78,2] 46[80,2] 47[82,2] 48[84,2] 49[86,2] 50[88,2] 51[90,2] 52[92,2] 53[94,2] 54[96,2] 55[98,2] 56[100,2] 57[102,2] 58[104,2] 59[106,2] 60[108,2] 61[110,2] 62[112,2] 63[114,2] 64[116,2] 65[118,2] 66[120,2] 67[122,2] 68[124,2] 69[126,2] 70[128,2] 71[130,2] 72[132,2] 73[134,2] 74[136,2] 75[138,2] 76[140,2] 77[142,2] 78[144,2] 79[146,2] 80[148,2] 81[150,2] 82[152,2] 83[154,2] 84[156,2] 85[158,2] 86[160,2] 87[162,2] 88[164,2] 89[166,2] 90[168,2] 91[170,2] 92[172,2] 93[174,2] 94[176,2] 95[178,2] 96[180,2] 97[182,2] 98[184,2] 99[186,2] 100[188,2] 101[190,2] 102[192,2] 103[194,2] 104[196,2] 105[198,2] 106[200,2] 107[202,2] 108[204,2] 109[206,2] 110[208,2] 111[210,2] 112[212,2] 113[214,2] 114[216,2] 115[218,2] 116[220,2] 117[222,2] 118[224,2] 119[226,2] 120[228,2] 121[230,2] 122[232,2] 123[234,2] 124[236,2] 125[238,2] 126[240,2] 127[242,2] 133[244,1] 134[245,2] 135[247,1] 
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 134 135
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 133 134 135
;; live  kill	 14 [lr]
;; rd  in  	(10)
3, 6, 9, 12, 13, 16, 17, 19, 40, 41
;; rd  gen 	(4)
0, 244, 245, 247
;; rd  kill	(8)
0, 1, 2, 3, 18, 19, 244, 247

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 arch/arm/kernel/hw_breakpoint.c:663 (set (reg/v/f:SI 133 [ bp ])
        (reg:SI 0 r0 [ bp ])) 167 {*arm_movsi_insn} (nil))

(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)

(call_insn 7 3 8 2 arch/arm/kernel/hw_breakpoint.c:664 (parallel [
            (call (mem:SI (symbol_ref:SI ("arch_uninstall_hw_breakpoint") [flags 0x3] <function_decl 0x10b14380 arch_uninstall_hw_breakpoint>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 8 7 9 2 arch/arm/kernel/hw_breakpoint.c:665 (set (reg:SI 135)
        (zero_extend:SI (mem/s/j:QI (plus:SI (reg/v/f:SI 133 [ bp ])
                    (const_int 211 [0xd3])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 9 8 10 2 arch/arm/kernel/hw_breakpoint.c:665 (set (reg:QI 134)
        (subreg:QI (reg:SI 135) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 135)
        (nil)))

(insn 10 9 11 2 arch/arm/kernel/hw_breakpoint.c:665 (set (zero_extract:SI (subreg:SI (reg:QI 134) 0)
            (const_int 1 [0x1])
            (const_int 7 [0x7]))
        (const_int 0 [0x0])) 76 {insv_zero} (nil))

(insn 11 10 12 2 arch/arm/kernel/hw_breakpoint.c:665 (set (mem/s/j:QI (plus:SI (reg/v/f:SI 133 [ bp ])
                (const_int 211 [0xd3])) [0 S1 A8])
        (reg:QI 134)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:QI 134)
        (nil)))

(insn 12 11 13 2 arch/arm/kernel/hw_breakpoint.c:666 (set (reg:SI 0 r0)
        (reg/v/f:SI 133 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 133 [ bp ])
        (nil)))

(call_insn/j 13 12 14 2 arch/arm/kernel/hw_breakpoint.c:666 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("arch_install_hw_breakpoint") [flags 0x3] <function_decl 0x10b14300 arch_install_hw_breakpoint>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 2 -> ( 1)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(12)
0, 6, 9, 12, 13, 16, 17, 40, 41, 244, 245, 247


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 14 13 0)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function arch_hw_breakpoint_init (arch_hw_breakpoint_init)[0:1270] (unlikely executed)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 22 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 32 (  1.9)
df_worklist_dataflow_doublequeue:n_basic_blocks 17 n_edges 22 count 32 (  1.9)


arch_hw_breakpoint_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={33d,21u} r1={30d,11u} r2={23d,4u} r3={21d,2u} r11={1d,16u} r12={19d} r13={1d,36u} r14={19d,1u} r15={18d} r16={18d} r17={18d} r18={18d} r19={18d} r20={18d} r21={18d} r22={18d} r23={18d} r24={24d,6u} r25={1d,22u,2d} r26={1d,15u} r27={18d} r28={18d} r29={18d} r30={18d} r31={18d} r32={18d} r33={18d} r34={18d} r35={18d} r36={18d} r37={18d} r38={18d} r39={18d} r40={18d} r41={18d} r42={18d} r43={18d} r44={18d} r45={18d} r46={18d} r47={18d} r48={18d} r49={18d} r50={18d} r51={18d} r52={18d} r53={18d} r54={18d} r55={18d} r56={18d} r57={18d} r58={18d} r59={18d} r60={18d} r61={18d} r62={18d} r63={18d} r64={18d} r65={18d} r66={18d} r67={18d} r68={18d} r69={18d} r70={18d} r71={18d} r72={18d} r73={18d} r74={18d} r75={18d} r76={18d} r77={18d} r78={18d} r79={18d} r80={18d} r81={18d} r82={18d} r83={18d} r84={18d} r85={18d} r86={18d} r87={18d} r88={18d} r89={18d} r90={18d} r91={18d} r92={18d} r93={18d} r94={18d} r95={18d} r96={18d} r97={18d} r98={18d} r99={18d} r100={18d} r101={18d} r102={18d} r103={18d} r104={18d} r105={18d} r106={18d} r107={18d} r108={18d} r109={18d} r110={18d} r111={18d} r112={18d} r113={18d} r114={18d} r115={18d} r116={18d} r117={18d} r118={18d} r119={18d} r120={18d} r121={18d} r122={18d} r123={18d} r124={18d} r125={18d} r126={18d} r127={18d} r133={1d,2u} r134={1d,1u} r135={1d,3u} r136={2d,2u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,8u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r153={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,3u} r170={1d,3u} r175={1d,2u} r177={1d,2u} r181={1d,1u} r182={1d,1u} r183={2d,6u} r184={1d,1u} r186={1d,1u} r187={1d,1u,1d} r188={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r210={1d,1u} r213={1d,1u} r216={1d,2u} 
;;    total ref usage 2414{2204d,207u,3e} in 130{112 regular + 18 call} insns.
;; Reaching defs:

  sparse invalidated 	0
  dense invalidated 	
0[0,33] 1[33,30] 2[63,23] 3[86,21] 11[107,1] 12[108,19] 13[127,1] 14[128,19] 15[147,18] 16[165,18] 17[183,18] 18[201,18] 19[219,18] 20[237,18] 21[255,18] 22[273,18] 23[291,18] 24[309,24] 25[333,1] 26[334,1] 27[335,18] 28[353,18] 29[371,18] 30[389,18] 31[407,18] 32[425,18] 33[443,18] 34[461,18] 35[479,18] 36[497,18] 37[515,18] 38[533,18] 39[551,18] 40[569,18] 41[587,18] 42[605,18] 43[623,18] 44[641,18] 45[659,18] 46[677,18] 47[695,18] 48[713,18] 49[731,18] 50[749,18] 51[767,18] 52[785,18] 53[803,18] 54[821,18] 55[839,18] 56[857,18] 57[875,18] 58[893,18] 59[911,18] 60[929,18] 61[947,18] 62[965,18] 63[983,18] 64[1001,18] 65[1019,18] 66[1037,18] 67[1055,18] 68[1073,18] 69[1091,18] 70[1109,18] 71[1127,18] 72[1145,18] 73[1163,18] 74[1181,18] 75[1199,18] 76[1217,18] 77[1235,18] 78[1253,18] 79[1271,18] 80[1289,18] 81[1307,18] 82[1325,18] 83[1343,18] 84[1361,18] 85[1379,18] 86[1397,18] 87[1415,18] 88[1433,18] 89[1451,18] 90[1469,18] 91[1487,18] 92[1505,18] 93[1523,18] 94[1541,18] 95[1559,18] 96[1577,18] 97[1595,18] 98[1613,18] 99[1631,18] 100[1649,18] 101[1667,18] 102[1685,18] 103[1703,18] 104[1721,18] 105[1739,18] 106[1757,18] 107[1775,18] 108[1793,18] 109[1811,18] 110[1829,18] 111[1847,18] 112[1865,18] 113[1883,18] 114[1901,18] 115[1919,18] 116[1937,18] 117[1955,18] 118[1973,18] 119[1991,18] 120[2009,18] 121[2027,18] 122[2045,18] 123[2063,18] 124[2081,18] 125[2099,18] 126[2117,18] 127[2135,18] 133[2153,1] 134[2154,1] 135[2155,1] 136[2156,2] 138[2158,1] 139[2159,1] 140[2160,1] 141[2161,1] 144[2162,1] 145[2163,1] 146[2164,1] 148[2165,1] 149[2166,1] 150[2167,1] 153[2168,1] 160[2169,1] 161[2170,1] 162[2171,1] 166[2172,1] 167[2173,1] 168[2174,1] 169[2175,1] 170[2176,1] 175[2177,1] 177[2178,1] 181[2179,1] 182[2180,1] 183[2181,2] 184[2183,1] 186[2184,1] 187[2185,1] 188[2186,1] 189[2187,1] 191[2188,1] 192[2189,1] 193[2190,1] 194[2191,1] 196[2192,1] 197[2193,1] 198[2194,1] 199[2195,1] 201[2196,1] 202[2197,1] 203[2198,1] 204[2199,1] 205[2200,1] 210[2201,1] 213[2202,1] 216[2203,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d32(0){ }d62(1){ }d85(2){ }d106(3){ }d107(11){ }d126(12){ }d127(13){ }d146(14){ }d333(25){ }d334(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
32, 62, 85, 106, 107, 126, 127, 146, 333, 334
;; rd  kill	(116)
33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 333, 334
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(10)
32, 62, 85, 106, 107, 126, 127, 146, 333, 334

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d107(bb 0 insn -1) }u1(13){ d127(bb 0 insn -1) }u2(25){ d333(bb 0 insn -1) }u3(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 145 146 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 144 145 146 148 149 150
;; live  kill	 14 [lr]
;; rd  in  	(10)
32, 62, 85, 106, 107, 126, 127, 146, 333, 334
;; rd  gen 	(8)
30, 330, 2162, 2163, 2164, 2165, 2166, 2167
;; rd  kill	(49)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2162, 2163, 2164, 2165, 2166, 2167
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; rd  out 	(16)
30, 62, 85, 106, 107, 126, 127, 330, 333, 334, 2162, 2163, 2164, 2165, 2166, 2167
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 6
;;      reg 25 { d333(bb 0 insn -1) }
;;      reg 144 { d2162(bb 2 insn 5) }
;;   UD chains for insn luid 2 uid 7
;;      reg 13 { d127(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 8
;;      reg 0 { d31(bb 2 insn 7) }
;;   UD chains for insn luid 5 uid 12
;;      reg 145 { d2163(bb 2 insn 8) }
;;      reg 146 { d2164(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 13
;;      reg 13 { d127(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 14
;;      reg 0 { d30(bb 2 insn 13) }
;;   UD chains for insn luid 8 uid 16
;;      reg 148 { d2165(bb 2 insn 14) }
;;   UD chains for insn luid 9 uid 17
;;      reg 149 { d2166(bb 2 insn 16) }
;;   UD chains for insn luid 10 uid 18
;;      reg 150 { d2167(bb 2 insn 17) }
;;   UD chains for insn luid 11 uid 19
;;      reg 24 { d330(bb 2 insn 18) }

( 2 )->[3]->( 16 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ d107(bb 0 insn -1) }u17(13){ d127(bb 0 insn -1) }u18(25){ d333(bb 0 insn -1) }u19(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 153
;; live  kill	 14 [lr]
;; rd  in  	(16)
30, 62, 85, 106, 107, 126, 127, 330, 333, 334, 2162, 2163, 2164, 2165, 2166, 2167
;; rd  gen 	(2)
29, 2168
;; rd  kill	(20)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 2168
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
29, 62, 85, 106, 107, 126, 127, 330, 333, 334, 2162, 2163, 2164, 2165, 2166, 2167, 2168
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 23
;;      reg 146 { d2164(bb 2 insn 10) }
;;   UD chains for insn luid 2 uid 25
;;      reg 153 { d2168(bb 3 insn 23) }
;;   UD chains for insn luid 3 uid 26
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d7(bb 3 insn 24) }
;;      reg 1 { d59(bb 3 insn 25) }

( 2 )->[4]->( 5 6 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ d107(bb 0 insn -1) }u26(13){ d127(bb 0 insn -1) }u27(25){ d333(bb 0 insn -1) }u28(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 140 141 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 139 140 141 160 161 162
;; live  kill	 14 [lr]
;; rd  in  	(16)
30, 62, 85, 106, 107, 126, 127, 330, 333, 334, 2162, 2163, 2164, 2165, 2166, 2167
;; rd  gen 	(9)
25, 324, 2153, 2159, 2160, 2161, 2169, 2170, 2171
;; rd  kill	(50)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2153, 2159, 2160, 2161, 2169, 2170, 2171
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(23)
25, 62, 85, 106, 107, 126, 127, 324, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 31
;;      reg 13 { d127(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 32
;;      reg 0 { d28(bb 4 insn 31) }
;;   UD chains for insn luid 2 uid 34
;;      reg 141 { d2161(bb 4 insn 32) }
;;      reg 146 { d2164(bb 2 insn 10) }
;;   UD chains for insn luid 3 uid 35
;;      reg 13 { d127(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 36
;;      reg 0 { d27(bb 4 insn 35) }
;;   UD chains for insn luid 5 uid 38
;;      reg 140 { d2160(bb 4 insn 36) }
;;      reg 146 { d2164(bb 2 insn 10) }
;;   UD chains for insn luid 6 uid 39
;;      reg 13 { d127(bb 0 insn -1) }
;;   UD chains for insn luid 7 uid 40
;;      reg 0 { d26(bb 4 insn 39) }
;;   UD chains for insn luid 8 uid 42
;;      reg 139 { d2159(bb 4 insn 40) }
;;      reg 146 { d2164(bb 2 insn 10) }
;;   UD chains for insn luid 9 uid 46
;;      reg 146 { d2164(bb 2 insn 10) }
;;   UD chains for insn luid 10 uid 47
;;      reg 146 { d2164(bb 2 insn 10) }
;;   UD chains for insn luid 11 uid 48
;;      reg 161 { d2170(bb 4 insn 46) }
;;      reg 162 { d2171(bb 4 insn 47) }
;;   UD chains for insn luid 13 uid 50
;;      reg 160 { d2169(bb 4 insn 48) }
;;   UD chains for insn luid 14 uid 51
;;      reg 139 { d2159(bb 4 insn 40) }
;;   UD chains for insn luid 15 uid 52
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d6(bb 4 insn 49) }
;;      reg 1 { d54(bb 4 insn 50) }
;;      reg 2 { d78(bb 4 insn 51) }
;;   UD chains for insn luid 16 uid 54
;;      reg 146 { d2164(bb 2 insn 10) }
;;   UD chains for insn luid 17 uid 55
;;      reg 133 { d2153(bb 4 insn 54) }
;;   UD chains for insn luid 18 uid 56
;;      reg 24 { d324(bb 4 insn 55) }

( 4 )->[5]->( 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u54(11){ d107(bb 0 insn -1) }u55(13){ d127(bb 0 insn -1) }u56(25){ d333(bb 0 insn -1) }u57(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(23)
25, 62, 85, 106, 107, 126, 127, 324, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171
;; rd  gen 	(1)
24
;; rd  kill	(19)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
24, 62, 85, 106, 107, 126, 127, 324, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 60
;;      reg 133 { d2153(bb 4 insn 54) }
;;   UD chains for insn luid 2 uid 61
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d5(bb 5 insn 59) }
;;      reg 1 { d52(bb 5 insn 60) }

( 4 5 )->[6]->( 7 8 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u62(11){ d107(bb 0 insn -1) }u63(13){ d127(bb 0 insn -1) }u64(25){ d333(bb 0 insn -1) }u65(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 166 167 168
;; live  kill	 14 [lr]
;; rd  in  	(24)
24, 25, 62, 85, 106, 107, 126, 127, 324, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171
;; rd  gen 	(5)
23, 321, 2172, 2173, 2174
;; rd  kill	(46)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2172, 2173, 2174
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
23, 62, 85, 106, 107, 126, 127, 321, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 65
;;      reg 25 { d333(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 67
;;      reg 166 { d2172(bb 6 insn 65) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 4 uid 69
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d4(bb 6 insn 66) }
;;      reg 1 { d50(bb 6 insn 67) }
;;      reg 2 { d75(bb 6 insn 68) }
;;   UD chains for insn luid 5 uid 70
;;      reg 25 { d333(bb 0 insn -1) }
;;   UD chains for insn luid 6 uid 71
;;      reg 168 { d2174(bb 6 insn 70) }
;;   UD chains for insn luid 7 uid 72
;;      reg 167 { d2173(bb 6 insn 71) }
;;   UD chains for insn luid 8 uid 73
;;      reg 24 { d321(bb 6 insn 72) }

( 6 )->[7]->( 16 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u77(11){ d107(bb 0 insn -1) }u78(13){ d127(bb 0 insn -1) }u79(25){ d333(bb 0 insn -1) }u80(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 169 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 169 170
;; live  kill	
;; rd  in  	(26)
23, 62, 85, 106, 107, 126, 127, 321, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174
;; rd  gen 	(2)
2175, 2176
;; rd  kill	(2)
2175, 2176
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
23, 62, 85, 106, 107, 126, 127, 321, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 77
;;      reg 169 { d2175(bb 7 insn 75) }
;;      reg 170 { d2176(bb 7 insn 76) }
;;   UD chains for insn luid 3 uid 80
;;      reg 169 { d2175(bb 7 insn 75) }
;;      reg 170 { d2176(bb 7 insn 76) }
;;   UD chains for insn luid 4 uid 83
;;      reg 169 { d2175(bb 7 insn 75) }
;;      reg 170 { d2176(bb 7 insn 76) }

( 6 )->[8]->( 9 10 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u87(11){ d107(bb 0 insn -1) }u88(13){ d127(bb 0 insn -1) }u89(25){ d333(bb 0 insn -1) }u90(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 175 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 175 216
;; live  kill	
;; rd  in  	(26)
23, 62, 85, 106, 107, 126, 127, 321, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174
;; rd  gen 	(4)
320, 2158, 2177, 2203
;; rd  kill	(27)
309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2158, 2177, 2203
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 216
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 216
;; rd  out 	(29)
23, 62, 85, 106, 107, 126, 127, 320, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2203
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 89
;;      reg 138 { d2158(bb 8 insn 88) }
;;   UD chains for insn luid 2 uid 90
;;      reg 175 { d2177(bb 8 insn 89) }
;;   UD chains for insn luid 4 uid 91
;;      reg 24 { d320(bb 8 insn 90) }

( 8 )->[9]->( 15 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u94(11){ d107(bb 0 insn -1) }u95(13){ d127(bb 0 insn -1) }u96(25){ d333(bb 0 insn -1) }u97(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 216
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 216
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 216
;; live  gen 	 0 [r0] 1 [r1] 177
;; live  kill	 14 [lr]
;; rd  in  	(29)
23, 62, 85, 106, 107, 126, 127, 320, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2203
;; rd  gen 	(2)
22, 2178
;; rd  kill	(20)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 2178
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
22, 62, 85, 106, 107, 126, 127, 320, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2178, 2203
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 96
;;      reg 177 { d2178(bb 9 insn 94) }
;;      reg 216 { d2203(bb 8 insn 206) }
;;   UD chains for insn luid 3 uid 99
;;      reg 177 { d2178(bb 9 insn 94) }
;;   UD chains for insn luid 4 uid 100
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d3(bb 9 insn 98) }
;;      reg 1 { d34(bb 9 insn 99) }

( 8 )->[10]->( 13 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u104(11){ d107(bb 0 insn -1) }u105(13){ d127(bb 0 insn -1) }u106(25){ d333(bb 0 insn -1) }u107(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 216
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 216
;; lr  def 	 24 [cc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 216
;; live  gen 	 24 [cc] 181
;; live  kill	
;; rd  in  	(29)
23, 62, 85, 106, 107, 126, 127, 320, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2203
;; rd  gen 	(2)
318, 2179
;; rd  kill	(25)
309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2179
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; rd  out 	(30)
23, 62, 85, 106, 107, 126, 127, 318, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2203
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 106
;;      reg 216 { d2203(bb 8 insn 206) }
;;   UD chains for insn luid 1 uid 107
;;      reg 181 { d2179(bb 10 insn 106) }
;;   UD chains for insn luid 2 uid 108
;;      reg 24 { d318(bb 10 insn 107) }

( 10 )->[11]->( 12 13 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u111(11){ d107(bb 0 insn -1) }u112(13){ d127(bb 0 insn -1) }u113(25){ d333(bb 0 insn -1) }u114(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 182 183 184 186 187 188 189 191 192 193 194 196 197 198 199 201 202 203 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 182 183 184 186 187 188 189 191 192 193 194 196 197 198 199 201 202 203 204
;; live  kill	 14 [lr]
;; rd  in  	(30)
23, 62, 85, 106, 107, 126, 127, 318, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2203
;; rd  gen 	(23)
14, 313, 2154, 2155, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199
;; rd  kill	(63)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2154, 2155, 2180, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(51)
14, 62, 85, 106, 107, 126, 127, 313, 333, 334, 2153, 2154, 2155, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 110
;;      reg 25 { d333(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 111
;;      reg 182 { d2180(bb 11 insn 110) }
;;   eq_note reg 25 { }
;;   UD chains for insn luid 3 uid 113
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d21(bb 11 insn 111) }
;;      reg 1 { d47(bb 11 insn 112) }
;;   UD chains for insn luid 4 uid 114
;;      reg 25 { d333(bb 0 insn -1) }
;;   UD chains for insn luid 6 uid 116
;;      reg 184 { d2183(bb 11 insn 115) }
;;      reg 183 read/write { d2182(bb 11 insn 114) }
;;   UD chains for insn luid 7 uid 117
;;      reg 25 { d333(bb 0 insn -1) }
;;      reg 183 { d2182(bb 11 insn 114) d2181(bb 11 insn 116) }
;;   UD chains for insn luid 8 uid 119
;;      reg 183 { d2182(bb 11 insn 114) d2181(bb 11 insn 116) }
;;   UD chains for insn luid 9 uid 120
;;      reg 186 { d2184(bb 11 insn 119) }
;;   UD chains for insn luid 10 uid 121
;;      reg 187 { d2185(bb 11 insn 120) }
;;   UD chains for insn luid 11 uid 122
;;      reg 189 { d2187(bb 11 insn 121) }
;;   eq_note reg 187 { }
;;   UD chains for insn luid 12 uid 124
;;      reg 183 { d2182(bb 11 insn 114) d2181(bb 11 insn 116) }
;;   UD chains for insn luid 13 uid 125
;;      reg 191 { d2188(bb 11 insn 124) }
;;   UD chains for insn luid 14 uid 126
;;      reg 192 { d2189(bb 11 insn 125) }
;;   UD chains for insn luid 15 uid 127
;;      reg 188 { d2186(bb 11 insn 122) }
;;      reg 193 { d2190(bb 11 insn 126) }
;;   UD chains for insn luid 16 uid 129
;;      reg 183 { d2182(bb 11 insn 114) d2181(bb 11 insn 116) }
;;   UD chains for insn luid 17 uid 130
;;      reg 196 { d2192(bb 11 insn 129) }
;;   UD chains for insn luid 18 uid 131
;;      reg 197 { d2193(bb 11 insn 130) }
;;   UD chains for insn luid 19 uid 132
;;      reg 194 { d2191(bb 11 insn 127) }
;;      reg 198 { d2194(bb 11 insn 131) }
;;   UD chains for insn luid 20 uid 134
;;      reg 183 { d2182(bb 11 insn 114) d2181(bb 11 insn 116) }
;;   UD chains for insn luid 21 uid 135
;;      reg 201 { d2196(bb 11 insn 134) }
;;   UD chains for insn luid 22 uid 136
;;      reg 202 { d2197(bb 11 insn 135) }
;;   UD chains for insn luid 23 uid 137
;;      reg 199 { d2195(bb 11 insn 132) }
;;      reg 203 { d2198(bb 11 insn 136) }
;;   UD chains for insn luid 25 uid 139
;;      reg 175 { d2177(bb 8 insn 89) }
;;   UD chains for insn luid 26 uid 140
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d19(bb 11 insn 138) }
;;      reg 1 { d33(bb 11 insn 139) }
;;   UD chains for insn luid 28 uid 142
;;      reg 135 { d2155(bb 11 insn 137) }
;;   UD chains for insn luid 29 uid 143
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d17(bb 11 insn 141) }
;;      reg 1 { d44(bb 11 insn 142) }
;;   UD chains for insn luid 31 uid 145
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d15(bb 11 insn 144) }
;;   UD chains for insn luid 32 uid 146
;;      reg 0 { d14(bb 11 insn 145) }
;;   UD chains for insn luid 33 uid 147
;;      reg 134 { d2154(bb 11 insn 146) }
;;      reg 135 { d2155(bb 11 insn 137) }
;;   UD chains for insn luid 34 uid 148
;;      reg 135 { d2155(bb 11 insn 137) }
;;      reg 204 { d2199(bb 11 insn 147) }
;;   UD chains for insn luid 35 uid 149
;;      reg 24 { d313(bb 11 insn 148) }

( 11 )->[12]->( 14 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u162(11){ d107(bb 0 insn -1) }u163(13){ d127(bb 0 insn -1) }u164(25){ d333(bb 0 insn -1) }u165(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 136
;; live  kill	
;; rd  in  	(51)
14, 62, 85, 106, 107, 126, 127, 313, 333, 334, 2153, 2154, 2155, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203
;; rd  gen 	(1)
2157
;; rd  kill	(2)
2156, 2157
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(52)
14, 62, 85, 106, 107, 126, 127, 313, 333, 334, 2153, 2154, 2155, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }

( 10 11 )->[13]->( 14 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u166(11){ d107(bb 0 insn -1) }u167(13){ d127(bb 0 insn -1) }u168(25){ d333(bb 0 insn -1) }u169(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 136
;; live  kill	
;; rd  in  	(53)
14, 23, 62, 85, 106, 107, 126, 127, 313, 318, 333, 334, 2153, 2154, 2155, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203
;; rd  gen 	(1)
2156
;; rd  kill	(2)
2156, 2157
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(54)
14, 23, 62, 85, 106, 107, 126, 127, 313, 318, 333, 334, 2153, 2154, 2155, 2156, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }

( 13 12 )->[14]->( 15 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u170(11){ d107(bb 0 insn -1) }u171(13){ d127(bb 0 insn -1) }u172(25){ d333(bb 0 insn -1) }u173(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 205
;; live  kill	 14 [lr]
;; rd  in  	(55)
14, 23, 62, 85, 106, 107, 126, 127, 313, 318, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203
;; rd  gen 	(2)
13, 2200
;; rd  kill	(20)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 2200
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(55)
13, 62, 85, 106, 107, 126, 127, 313, 318, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2203
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 161
;;      reg 136 { d2157(bb 12 insn 151) d2156(bb 13 insn 156) }
;;      reg 205 { d2200(bb 14 insn 159) }
;;   UD chains for insn luid 3 uid 164
;;      reg 136 { d2157(bb 12 insn 151) d2156(bb 13 insn 156) }
;;   UD chains for insn luid 4 uid 165
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d2(bb 14 insn 163) }
;;      reg 1 { d41(bb 14 insn 164) }

( 14 9 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u180(11){ d107(bb 0 insn -1) }u181(13){ d127(bb 0 insn -1) }u182(25){ d333(bb 0 insn -1) }u183(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 210 213
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 210 213
;; live  kill	 14 [lr]
;; rd  in  	(58)
13, 22, 62, 85, 106, 107, 126, 127, 313, 318, 320, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2203
;; rd  gen 	(3)
8, 2201, 2202
;; rd  kill	(21)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 2201, 2202
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(59)
8, 62, 85, 106, 107, 126, 127, 313, 318, 320, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 171
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 210 { d2201(bb 15 insn 170) }
;;   UD chains for insn luid 6 uid 176
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d12(bb 15 insn 172) }
;;      reg 1 { d36(bb 15 insn 173) }
;;      reg 2 { d67(bb 15 insn 174) }
;;      reg 3 { d87(bb 15 insn 175) }
;;   UD chains for insn luid 8 uid 180
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 213 { d2202(bb 15 insn 179) }
;;   UD chains for insn luid 13 uid 185
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d10(bb 15 insn 181) }
;;      reg 1 { d35(bb 15 insn 182) }
;;      reg 2 { d65(bb 15 insn 183) }
;;      reg 3 { d86(bb 15 insn 184) }
;;   UD chains for insn luid 15 uid 188
;;      reg 13 { d127(bb 0 insn -1) }
;;      reg 0 { d1(bb 15 insn 187) }

( 15 3 7 )->[16]->( 1 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u200(11){ d107(bb 0 insn -1) }u201(13){ d127(bb 0 insn -1) }u202(25){ d333(bb 0 insn -1) }u203(26){ d334(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(66)
8, 23, 29, 62, 85, 106, 107, 126, 127, 313, 318, 320, 321, 330, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203
;; rd  gen 	(1)
0
;; rd  kill	(0)

;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(64)
0, 62, 85, 106, 107, 126, 127, 313, 318, 320, 321, 330, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203
;;  UD chains for artificial uses
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 25 { d333(bb 0 insn -1) }
;;   reg 26 { d334(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 201
;;      reg 0 { d0(bb 16 insn 195) }

( 16 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u205(0){ d0(bb 16 insn 195) }u206(11){ d107(bb 0 insn -1) }u207(13){ d127(bb 0 insn -1) }u208(14){ }u209(25){ d333(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(64)
0, 62, 85, 106, 107, 126, 127, 313, 318, 320, 321, 330, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(64)
0, 62, 85, 106, 107, 126, 127, 313, 318, 320, 321, 330, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203
;;  UD chains for artificial uses
;;   reg 0 { d0(bb 16 insn 195) }
;;   reg 11 { d107(bb 0 insn -1) }
;;   reg 13 { d127(bb 0 insn -1) }
;;   reg 14 { }
;;   reg 25 { d333(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 19 to worklist
  Adding insn 13 to worklist
  Adding insn 12 to worklist
  Adding insn 7 to worklist
  Adding insn 6 to worklist
  Adding insn 208 to worklist
  Adding insn 26 to worklist
  Adding insn 56 to worklist
  Adding insn 52 to worklist
  Adding insn 42 to worklist
  Adding insn 39 to worklist
  Adding insn 38 to worklist
  Adding insn 35 to worklist
  Adding insn 34 to worklist
  Adding insn 31 to worklist
  Adding insn 61 to worklist
  Adding insn 73 to worklist
  Adding insn 69 to worklist
  Adding insn 210 to worklist
  Adding insn 83 to worklist
  Adding insn 80 to worklist
  Adding insn 77 to worklist
  Adding insn 91 to worklist
  Adding insn 88 to worklist
  Adding insn 212 to worklist
  Adding insn 100 to worklist
  Adding insn 96 to worklist
  Adding insn 108 to worklist
  Adding insn 149 to worklist
  Adding insn 145 to worklist
  Adding insn 143 to worklist
  Adding insn 140 to worklist
  Adding insn 117 to worklist
  Adding insn 113 to worklist
  Adding insn 214 to worklist
  Adding insn 165 to worklist
  Adding insn 161 to worklist
  Adding insn 188 to worklist
  Adding insn 185 to worklist
  Adding insn 180 to worklist
  Adding insn 176 to worklist
  Adding insn 171 to worklist
  Adding insn 201 to worklist
Finished finding needed instructions:
  Adding insn 195 to worklist
Processing use of (reg 0 r0) in insn 201:
Processing use of (reg 13 sp) in insn 171:
Processing use of (reg 210) in insn 171:
  Adding insn 170 to worklist
Processing use of (reg 13 sp) in insn 176:
Processing use of (reg 0 r0) in insn 176:
  Adding insn 172 to worklist
Processing use of (reg 1 r1) in insn 176:
  Adding insn 173 to worklist
Processing use of (reg 2 r2) in insn 176:
  Adding insn 174 to worklist
Processing use of (reg 3 r3) in insn 176:
  Adding insn 175 to worklist
Processing use of (reg 13 sp) in insn 180:
Processing use of (reg 213) in insn 180:
  Adding insn 179 to worklist
Processing use of (reg 13 sp) in insn 185:
Processing use of (reg 0 r0) in insn 185:
  Adding insn 181 to worklist
Processing use of (reg 1 r1) in insn 185:
  Adding insn 182 to worklist
Processing use of (reg 2 r2) in insn 185:
  Adding insn 183 to worklist
Processing use of (reg 3 r3) in insn 185:
  Adding insn 184 to worklist
Processing use of (reg 13 sp) in insn 188:
Processing use of (reg 0 r0) in insn 188:
  Adding insn 187 to worklist
Processing use of (subreg (reg 136 [ size ]) 0) in insn 161:
  Adding insn 151 to worklist
  Adding insn 156 to worklist
Processing use of (reg 205) in insn 161:
  Adding insn 159 to worklist
Processing use of (reg 13 sp) in insn 165:
Processing use of (reg 0 r0) in insn 165:
  Adding insn 163 to worklist
Processing use of (reg 1 r1) in insn 165:
  Adding insn 164 to worklist
Processing use of (reg 136 [ size ]) in insn 164:
Processing use of (reg 13 sp) in insn 113:
Processing use of (reg 0 r0) in insn 113:
  Adding insn 111 to worklist
Processing use of (reg 1 r1) in insn 113:
  Adding insn 112 to worklist
Processing use of (reg 182) in insn 111:
  Adding insn 110 to worklist
Processing use of (reg 25 sfp) in insn 110:
Processing use of (reg 25 sfp) in insn 117:
Processing use of (reg 183) in insn 117:
  Adding insn 114 to worklist
  Adding insn 116 to worklist
Processing use of (reg 184) in insn 116:
  Adding insn 115 to worklist
Processing use of (reg 183) in insn 116:
Processing use of (reg 25 sfp) in insn 114:
Processing use of (reg 13 sp) in insn 140:
Processing use of (reg 0 r0) in insn 140:
  Adding insn 138 to worklist
Processing use of (reg 1 r1) in insn 140:
  Adding insn 139 to worklist
Processing use of (reg 175) in insn 139:
  Adding insn 89 to worklist
Processing use of (reg 138 [ dscr ]) in insn 89:
Processing use of (reg 13 sp) in insn 143:
Processing use of (reg 0 r0) in insn 143:
  Adding insn 141 to worklist
Processing use of (reg 1 r1) in insn 143:
  Adding insn 142 to worklist
Processing use of (reg 135 [ ctrl_reg ]) in insn 142:
  Adding insn 137 to worklist
Processing use of (reg 199) in insn 137:
  Adding insn 132 to worklist
Processing use of (reg 203) in insn 137:
  Adding insn 136 to worklist
Processing use of (reg 202) in insn 136:
  Adding insn 135 to worklist
Processing use of (reg 201) in insn 135:
  Adding insn 134 to worklist
Processing use of (reg 183) in insn 134:
Processing use of (reg 194) in insn 132:
  Adding insn 127 to worklist
Processing use of (reg 198) in insn 132:
  Adding insn 131 to worklist
Processing use of (reg 197) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 196) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 183) in insn 129:
Processing use of (reg 188) in insn 127:
  Adding insn 122 to worklist
Processing use of (reg 193) in insn 127:
  Adding insn 126 to worklist
Processing use of (reg 192) in insn 126:
  Adding insn 125 to worklist
Processing use of (reg 191) in insn 125:
  Adding insn 124 to worklist
Processing use of (reg 183) in insn 124:
Processing use of (reg 189) in insn 122:
  Adding insn 121 to worklist
Processing use of (reg 187) in insn 121:
  Adding insn 120 to worklist
Processing use of (reg 186) in insn 120:
  Adding insn 119 to worklist
Processing use of (reg 183) in insn 119:
Processing use of (reg 13 sp) in insn 145:
Processing use of (reg 0 r0) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 24 cc) in insn 149:
  Adding insn 148 to worklist
Processing use of (reg 135 [ ctrl_reg ]) in insn 148:
Processing use of (reg 204) in insn 148:
  Adding insn 147 to worklist
Processing use of (reg 134 [ D.24654 ]) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 135 [ ctrl_reg ]) in insn 147:
Processing use of (reg 0 r0) in insn 146:
Processing use of (reg 24 cc) in insn 108:
  Adding insn 107 to worklist
Processing use of (reg 181 [ debug_arch ]) in insn 107:
  Adding insn 106 to worklist
Processing use of (reg 216) in insn 106:
  Adding insn 206 to worklist
Processing use of (subreg (reg 177) 0) in insn 96:
  Adding insn 94 to worklist
Processing use of (reg 216) in insn 96:
Processing use of (reg 13 sp) in insn 100:
Processing use of (reg 0 r0) in insn 100:
  Adding insn 98 to worklist
Processing use of (reg 1 r1) in insn 100:
  Adding insn 99 to worklist
Processing use of (reg 177) in insn 99:
Processing use of (reg 24 cc) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 175) in insn 90:
Processing use of (reg 169) in insn 77:
  Adding insn 75 to worklist
Processing use of (reg 170) in insn 77:
  Adding insn 76 to worklist
Processing use of (reg 169) in insn 80:
Processing use of (reg 170) in insn 80:
Processing use of (reg 169) in insn 83:
Processing use of (reg 170) in insn 83:
Processing use of (reg 13 sp) in insn 69:
Processing use of (reg 0 r0) in insn 69:
  Adding insn 66 to worklist
Processing use of (reg 1 r1) in insn 69:
  Adding insn 67 to worklist
Processing use of (reg 2 r2) in insn 69:
  Adding insn 68 to worklist
Processing use of (reg 166) in insn 67:
  Adding insn 65 to worklist
Processing use of (reg 25 sfp) in insn 65:
Processing use of (reg 24 cc) in insn 73:
  Adding insn 72 to worklist
Processing use of (reg 167) in insn 72:
  Adding insn 71 to worklist
Processing use of (reg 168 [ cpumask.bits ]) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 25 sfp) in insn 70:
Processing use of (reg 13 sp) in insn 61:
Processing use of (reg 0 r0) in insn 61:
  Adding insn 59 to worklist
Processing use of (reg 1 r1) in insn 61:
  Adding insn 60 to worklist
Processing use of (reg 133 [ core_num_reserved_brps.986 ]) in insn 60:
  Adding insn 54 to worklist
Processing use of (reg 146) in insn 54:
  Adding insn 10 to worklist
Processing use of (reg 13 sp) in insn 31:
Processing use of (reg 141 [ core_num_brps.356 ]) in insn 34:
  Adding insn 32 to worklist
Processing use of (reg 146) in insn 34:
Processing use of (reg 0 r0) in insn 32:
Processing use of (reg 13 sp) in insn 35:
Processing use of (reg 140 [ core_num_reserved_brps.357 ]) in insn 38:
  Adding insn 36 to worklist
Processing use of (reg 146) in insn 38:
Processing use of (reg 0 r0) in insn 36:
Processing use of (reg 13 sp) in insn 39:
Processing use of (reg 139 [ core_num_wrps.358 ]) in insn 42:
  Adding insn 40 to worklist
Processing use of (reg 146) in insn 42:
Processing use of (reg 0 r0) in insn 40:
Processing use of (reg 13 sp) in insn 52:
Processing use of (reg 0 r0) in insn 52:
  Adding insn 49 to worklist
Processing use of (reg 1 r1) in insn 52:
  Adding insn 50 to worklist
Processing use of (reg 2 r2) in insn 52:
  Adding insn 51 to worklist
Processing use of (reg 139 [ core_num_wrps.358 ]) in insn 51:
Processing use of (reg 160) in insn 50:
  Adding insn 48 to worklist
Processing use of (reg 161 [ core_num_reserved_brps ]) in insn 48:
  Adding insn 46 to worklist
Processing use of (reg 162 [ core_num_brps ]) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 146) in insn 47:
Processing use of (reg 146) in insn 46:
Processing use of (reg 24 cc) in insn 56:
  Adding insn 55 to worklist
Processing use of (reg 133 [ core_num_reserved_brps.986 ]) in insn 55:
Processing use of (reg 13 sp) in insn 26:
Processing use of (reg 0 r0) in insn 26:
  Adding insn 24 to worklist
Processing use of (reg 1 r1) in insn 26:
  Adding insn 25 to worklist
Processing use of (reg 153 [ debug_arch ]) in insn 25:
  Adding insn 23 to worklist
Processing use of (reg 146) in insn 23:
Processing use of (reg 25 sfp) in insn 6:
Processing use of (reg 144) in insn 6:
  Adding insn 5 to worklist
Processing use of (reg 13 sp) in insn 7:
Processing use of (subreg (reg 145) 0) in insn 12:
  Adding insn 8 to worklist
Processing use of (reg 146) in insn 12:
Processing use of (reg 0 r0) in insn 8:
Processing use of (reg 13 sp) in insn 13:
Processing use of (reg 24 cc) in insn 19:
  Adding insn 18 to worklist
Processing use of (reg 150) in insn 18:
  Adding insn 17 to worklist
Processing use of (subreg (reg 149) 0) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 148) in insn 16:
  Adding insn 14 to worklist
Processing use of (reg 0 r0) in insn 14:


arch_hw_breakpoint_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={33d,21u} r1={30d,11u} r2={23d,4u} r3={21d,2u} r11={1d,16u} r12={19d} r13={1d,36u} r14={19d,1u} r15={18d} r16={18d} r17={18d} r18={18d} r19={18d} r20={18d} r21={18d} r22={18d} r23={18d} r24={24d,6u} r25={1d,22u,2d} r26={1d,15u} r27={18d} r28={18d} r29={18d} r30={18d} r31={18d} r32={18d} r33={18d} r34={18d} r35={18d} r36={18d} r37={18d} r38={18d} r39={18d} r40={18d} r41={18d} r42={18d} r43={18d} r44={18d} r45={18d} r46={18d} r47={18d} r48={18d} r49={18d} r50={18d} r51={18d} r52={18d} r53={18d} r54={18d} r55={18d} r56={18d} r57={18d} r58={18d} r59={18d} r60={18d} r61={18d} r62={18d} r63={18d} r64={18d} r65={18d} r66={18d} r67={18d} r68={18d} r69={18d} r70={18d} r71={18d} r72={18d} r73={18d} r74={18d} r75={18d} r76={18d} r77={18d} r78={18d} r79={18d} r80={18d} r81={18d} r82={18d} r83={18d} r84={18d} r85={18d} r86={18d} r87={18d} r88={18d} r89={18d} r90={18d} r91={18d} r92={18d} r93={18d} r94={18d} r95={18d} r96={18d} r97={18d} r98={18d} r99={18d} r100={18d} r101={18d} r102={18d} r103={18d} r104={18d} r105={18d} r106={18d} r107={18d} r108={18d} r109={18d} r110={18d} r111={18d} r112={18d} r113={18d} r114={18d} r115={18d} r116={18d} r117={18d} r118={18d} r119={18d} r120={18d} r121={18d} r122={18d} r123={18d} r124={18d} r125={18d} r126={18d} r127={18d} r133={1d,2u} r134={1d,1u} r135={1d,3u} r136={2d,2u} r138={1d,1u} r139={1d,2u} r140={1d,1u} r141={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,8u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r153={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,3u} r170={1d,3u} r175={1d,2u} r177={1d,2u} r181={1d,1u} r182={1d,1u} r183={2d,6u} r184={1d,1u} r186={1d,1u} r187={1d,1u,1d} r188={1d,1u} r189={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r210={1d,1u} r213={1d,1u} r216={1d,2u} 
;;    total ref usage 2414{2204d,207u,3e} in 130{112 regular + 18 call} insns.
;; Reaching defs:

  sparse invalidated 	0
  dense invalidated 	
0[0,33] 1[33,30] 2[63,23] 3[86,21] 11[107,1] 12[108,19] 13[127,1] 14[128,19] 15[147,18] 16[165,18] 17[183,18] 18[201,18] 19[219,18] 20[237,18] 21[255,18] 22[273,18] 23[291,18] 24[309,24] 25[333,1] 26[334,1] 27[335,18] 28[353,18] 29[371,18] 30[389,18] 31[407,18] 32[425,18] 33[443,18] 34[461,18] 35[479,18] 36[497,18] 37[515,18] 38[533,18] 39[551,18] 40[569,18] 41[587,18] 42[605,18] 43[623,18] 44[641,18] 45[659,18] 46[677,18] 47[695,18] 48[713,18] 49[731,18] 50[749,18] 51[767,18] 52[785,18] 53[803,18] 54[821,18] 55[839,18] 56[857,18] 57[875,18] 58[893,18] 59[911,18] 60[929,18] 61[947,18] 62[965,18] 63[983,18] 64[1001,18] 65[1019,18] 66[1037,18] 67[1055,18] 68[1073,18] 69[1091,18] 70[1109,18] 71[1127,18] 72[1145,18] 73[1163,18] 74[1181,18] 75[1199,18] 76[1217,18] 77[1235,18] 78[1253,18] 79[1271,18] 80[1289,18] 81[1307,18] 82[1325,18] 83[1343,18] 84[1361,18] 85[1379,18] 86[1397,18] 87[1415,18] 88[1433,18] 89[1451,18] 90[1469,18] 91[1487,18] 92[1505,18] 93[1523,18] 94[1541,18] 95[1559,18] 96[1577,18] 97[1595,18] 98[1613,18] 99[1631,18] 100[1649,18] 101[1667,18] 102[1685,18] 103[1703,18] 104[1721,18] 105[1739,18] 106[1757,18] 107[1775,18] 108[1793,18] 109[1811,18] 110[1829,18] 111[1847,18] 112[1865,18] 113[1883,18] 114[1901,18] 115[1919,18] 116[1937,18] 117[1955,18] 118[1973,18] 119[1991,18] 120[2009,18] 121[2027,18] 122[2045,18] 123[2063,18] 124[2081,18] 125[2099,18] 126[2117,18] 127[2135,18] 133[2153,1] 134[2154,1] 135[2155,1] 136[2156,2] 138[2158,1] 139[2159,1] 140[2160,1] 141[2161,1] 144[2162,1] 145[2163,1] 146[2164,1] 148[2165,1] 149[2166,1] 150[2167,1] 153[2168,1] 160[2169,1] 161[2170,1] 162[2171,1] 166[2172,1] 167[2173,1] 168[2174,1] 169[2175,1] 170[2176,1] 175[2177,1] 177[2178,1] 181[2179,1] 182[2180,1] 183[2181,2] 184[2183,1] 186[2184,1] 187[2185,1] 188[2186,1] 189[2187,1] 191[2188,1] 192[2189,1] 193[2190,1] 194[2191,1] 196[2192,1] 197[2193,1] 198[2194,1] 199[2195,1] 201[2196,1] 202[2197,1] 203[2198,1] 204[2199,1] 205[2200,1] 210[2201,1] 213[2202,1] 216[2203,1] 
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 144 145 146 148 149 150
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 24 [cc] 144 145 146 148 149 150
;; live  kill	 14 [lr]
;; rd  in  	(10)
32, 62, 85, 106, 107, 126, 127, 146, 333, 334
;; rd  gen 	(8)
30, 330, 2162, 2163, 2164, 2165, 2166, 2167
;; rd  kill	(49)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2162, 2163, 2164, 2165, 2166, 2167

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/hw_breakpoint.c:908 (set (reg:SI 144)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 6 5 7 2 arch/arm/kernel/hw_breakpoint.c:908 (set (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 cpumask.bits+0 S4 A32])
        (reg:SI 144)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 144)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 7 6 8 2 arch/arm/kernel/hw_breakpoint.c:910 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_debug_arch") [flags 0x3] <function_decl 0x113d8480 get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 8 7 10 2 arch/arm/kernel/hw_breakpoint.c:910 (set (reg:SI 145)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 10 8 12 2 arch/arm/kernel/hw_breakpoint.c:910 (set (reg/f:SI 146)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 12 10 13 2 arch/arm/kernel/hw_breakpoint.c:910 (set (mem/c/i:QI (reg/f:SI 146) [0 debug_arch+0 S1 A8])
        (subreg/s/u:QI (reg:SI 145) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 145)
        (nil)))

(call_insn 13 12 14 2 arch/arm/kernel/hw_breakpoint.c:156 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_debug_arch") [flags 0x3] <function_decl 0x113d8480 get_debug_arch>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 14 13 16 2 arch/arm/kernel/hw_breakpoint.c:156 (set (reg:SI 148)
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 16 14 17 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:SI 149)
        (plus:SI (reg:SI 148)
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 148)
        (nil)))

(insn 17 16 18 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:SI 150)
        (zero_extend:SI (subreg:QI (reg:SI 149) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 149)
        (nil)))

(insn 18 17 19 2 arch/arm/kernel/hw_breakpoint.c:157 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 150)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 150)
        (nil)))

(jump_insn 19 18 20 2 arch/arm/kernel/hw_breakpoint.c:157 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6000 [0x1770])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; rd  out 	(16)
30, 62, 85, 106, 107, 126, 127, 330, 333, 334, 2162, 2163, 2164, 2165, 2166, 2167


;; Succ edge  3 [40.0%]  (fallthru)
;; Succ edge  4 [60.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 153
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 153
;; live  kill	 14 [lr]
;; rd  in  	(16)
30, 62, 85, 106, 107, 126, 127, 330, 333, 334, 2162, 2163, 2164, 2165, 2166, 2167
;; rd  gen 	(2)
29, 2168
;; rd  kill	(20)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 2168

;; Pred edge  2 [40.0%]  (fallthru)
(note 20 19 23 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 23 20 24 3 arch/arm/kernel/hw_breakpoint.c:913 (set (reg:SI 153 [ debug_arch ])
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 146) [0 debug_arch+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_arch+0 S1 A8]))
            (nil))))

(insn 24 23 25 3 arch/arm/kernel/hw_breakpoint.c:913 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x113a5360>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC9") [flags 0x82] <string_cst 0x113a5360>)
        (nil)))

(insn 25 24 26 3 arch/arm/kernel/hw_breakpoint.c:913 (set (reg:SI 1 r1)
        (reg:SI 153 [ debug_arch ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 153 [ debug_arch ])
        (nil)))

(call_insn 26 25 208 3 arch/arm/kernel/hw_breakpoint.c:913 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 208 26 209 3 arch/arm/kernel/hw_breakpoint.c:914 (set (pc)
        (label_ref 189)) -1 (nil))
;; End of basic block 3 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(17)
29, 62, 85, 106, 107, 126, 127, 330, 333, 334, 2162, 2163, 2164, 2165, 2166, 2167, 2168


;; Succ edge  16 [100.0%] 

(barrier 209 208 29)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u25(11){ }u26(13){ }u27(25){ }u28(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 133 139 140 141 160 161 162
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 133 139 140 141 160 161 162
;; live  kill	 14 [lr]
;; rd  in  	(16)
30, 62, 85, 106, 107, 126, 127, 330, 333, 334, 2162, 2163, 2164, 2165, 2166, 2167
;; rd  gen 	(9)
25, 324, 2153, 2159, 2160, 2161, 2169, 2170, 2171
;; rd  kill	(50)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2153, 2159, 2160, 2161, 2169, 2170, 2171

;; Pred edge  2 [60.0%] 
(code_label 29 209 30 4 313 "" [1 uses])

(note 30 29 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(call_insn 31 30 32 4 arch/arm/kernel/hw_breakpoint.c:918 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_brps") [flags 0x3] <function_decl 0x113d8b80 get_num_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 32 31 34 4 arch/arm/kernel/hw_breakpoint.c:918 (set (reg:SI 141 [ core_num_brps.356 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 34 32 35 4 arch/arm/kernel/hw_breakpoint.c:918 (set (mem/c/i:SI (plus:SI (reg/f:SI 146)
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])
        (reg:SI 141 [ core_num_brps.356 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 141 [ core_num_brps.356 ])
        (nil)))

(call_insn 35 34 36 4 arch/arm/kernel/hw_breakpoint.c:919 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_reserved_brps") [flags 0x3] <function_decl 0x113d8a80 get_num_reserved_brps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 36 35 38 4 arch/arm/kernel/hw_breakpoint.c:919 (set (reg:SI 140 [ core_num_reserved_brps.357 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 38 36 39 4 arch/arm/kernel/hw_breakpoint.c:919 (set (mem/c/i:SI (plus:SI (reg/f:SI 146)
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])
        (reg:SI 140 [ core_num_reserved_brps.357 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 140 [ core_num_reserved_brps.357 ])
        (nil)))

(call_insn 39 38 40 4 arch/arm/kernel/hw_breakpoint.c:920 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_num_wrps") [flags 0x3] <function_decl 0x113d8980 get_num_wrps>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 40 39 42 4 arch/arm/kernel/hw_breakpoint.c:920 (set (reg:SI 139 [ core_num_wrps.358 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 42 40 46 4 arch/arm/kernel/hw_breakpoint.c:920 (set (mem/c/i:SI (plus:SI (reg/f:SI 146)
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])
        (reg:SI 139 [ core_num_wrps.358 ])) 167 {*arm_movsi_insn} (nil))

(insn 46 42 47 4 arch/arm/kernel/hw_breakpoint.c:922 (set (reg:SI 161 [ core_num_reserved_brps ])
        (mem/c/i:SI (plus:SI (reg/f:SI 146)
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 core_num_reserved_brps+0 S4 A32])
        (nil)))

(insn 47 46 48 4 arch/arm/kernel/hw_breakpoint.c:922 (set (reg:SI 162 [ core_num_brps ])
        (mem/c/i:SI (plus:SI (reg/f:SI 146)
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
        (nil)))

(insn 48 47 49 4 arch/arm/kernel/hw_breakpoint.c:922 (set (reg:SI 160)
        (plus:SI (reg:SI 161 [ core_num_reserved_brps ])
            (reg:SI 162 [ core_num_brps ]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 162 [ core_num_brps ])
        (expr_list:REG_DEAD (reg:SI 161 [ core_num_reserved_brps ])
            (nil))))

(insn 49 48 50 4 arch/arm/kernel/hw_breakpoint.c:922 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x113a5540>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC10") [flags 0x82] <string_cst 0x113a5540>)
        (nil)))

(insn 50 49 51 4 arch/arm/kernel/hw_breakpoint.c:922 (set (reg:SI 1 r1)
        (reg:SI 160)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 160)
        (nil)))

(insn 51 50 52 4 arch/arm/kernel/hw_breakpoint.c:922 (set (reg:SI 2 r2)
        (reg:SI 139 [ core_num_wrps.358 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 139 [ core_num_wrps.358 ])
        (nil)))

(call_insn 52 51 54 4 arch/arm/kernel/hw_breakpoint.c:922 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 54 52 55 4 arch/arm/kernel/hw_breakpoint.c:925 (set (reg:SI 133 [ core_num_reserved_brps.986 ])
        (mem/c/i:SI (plus:SI (reg/f:SI 146)
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 146)
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 core_num_reserved_brps+0 S4 A32])
            (nil))))

(insn 55 54 56 4 arch/arm/kernel/hw_breakpoint.c:925 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 133 [ core_num_reserved_brps.986 ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 56 55 57 4 arch/arm/kernel/hw_breakpoint.c:925 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 62)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 4 -> ( 5 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; rd  out 	(23)
25, 62, 85, 106, 107, 126, 127, 324, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171


;; Succ edge  5 [0.0%]  (fallthru)
;; Succ edge  6 [100.0%] 

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u54(11){ }u55(13){ }u56(25){ }u57(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(23)
25, 62, 85, 106, 107, 126, 127, 324, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171
;; rd  gen 	(1)
24
;; rd  kill	(19)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146

;; Pred edge  4 [0.0%]  (fallthru)
(note 57 56 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 59 57 60 5 arch/arm/kernel/hw_breakpoint.c:926 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115c8620>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC11") [flags 0x82] <string_cst 0x115c8620>)
        (nil)))

(insn 60 59 61 5 arch/arm/kernel/hw_breakpoint.c:926 (set (reg:SI 1 r1)
        (reg:SI 133 [ core_num_reserved_brps.986 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 133 [ core_num_reserved_brps.986 ])
        (nil)))

(call_insn 61 60 62 5 arch/arm/kernel/hw_breakpoint.c:926 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 6)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(23)
24, 62, 85, 106, 107, 126, 127, 324, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171


;; Succ edge  6 [100.0%]  (fallthru)

;; Start of basic block ( 4 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u62(11){ }u63(13){ }u64(25){ }u65(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 166 167 168
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 24 [cc] 166 167 168
;; live  kill	 14 [lr]
;; rd  in  	(24)
24, 25, 62, 85, 106, 107, 126, 127, 324, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171
;; rd  gen 	(5)
23, 321, 2172, 2173, 2174
;; rd  kill	(46)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2172, 2173, 2174

;; Pred edge  4 [100.0%] 
;; Pred edge  5 [100.0%]  (fallthru)
(code_label 62 61 63 6 315 "" [1 uses])

(note 63 62 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 65 63 66 6 arch/arm/kernel/hw_breakpoint.c:933 (set (reg/f:SI 166)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -4 [0xfffffffffffffffc]))) 4 {*arm_addsi3} (nil))

(insn 66 65 67 6 arch/arm/kernel/hw_breakpoint.c:933 (set (reg:SI 0 r0)
        (symbol_ref:SI ("reset_ctrl_regs") [flags 0x3] <function_decl 0x1141ad80 reset_ctrl_regs>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("reset_ctrl_regs") [flags 0x3] <function_decl 0x1141ad80 reset_ctrl_regs>)
        (nil)))

(insn 67 66 68 6 arch/arm/kernel/hw_breakpoint.c:933 (set (reg:SI 1 r1)
        (reg/f:SI 166)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 166)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc]))
            (nil))))

(insn 68 67 69 6 arch/arm/kernel/hw_breakpoint.c:933 (set (reg:SI 2 r2)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 69 68 70 6 arch/arm/kernel/hw_breakpoint.c:933 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("on_each_cpu") [flags 0x41] <function_decl 0x10cd2480 on_each_cpu>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))

(insn 70 69 71 6 include/linux/bitmap.h:263 (set (reg:SI 168 [ cpumask.bits ])
        (mem/s/j:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -4 [0xfffffffffffffffc])) [0 cpumask.bits+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 71 70 72 6 include/linux/bitmap.h:263 (set (reg:SI 167)
        (and:SI (reg:SI 168 [ cpumask.bits ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 168 [ cpumask.bits ])
        (nil)))

(insn 72 71 73 6 include/linux/bitmap.h:263 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 167)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 167)
        (nil)))

(jump_insn 73 72 74 6 include/linux/bitmap.h:263 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 86)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil))))
;; End of basic block 6 -> ( 7 8)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(26)
23, 62, 85, 106, 107, 126, 127, 321, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174


;; Succ edge  7 [39.0%]  (fallthru)
;; Succ edge  8 [61.0%] 

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u77(11){ }u78(13){ }u79(25){ }u80(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 169 170
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 169 170
;; live  kill	
;; rd  in  	(26)
23, 62, 85, 106, 107, 126, 127, 321, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174
;; rd  gen 	(2)
2175, 2176
;; rd  kill	(2)
2175, 2176

;; Pred edge  6 [39.0%]  (fallthru)
(note 74 73 75 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 7 arch/arm/kernel/hw_breakpoint.c:935 (set (reg/f:SI 169)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 76 75 77 7 arch/arm/kernel/hw_breakpoint.c:935 (set (reg:SI 170)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 77 76 80 7 arch/arm/kernel/hw_breakpoint.c:935 (set (mem/c/i:SI (plus:SI (reg/f:SI 169)
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 80 77 83 7 arch/arm/kernel/hw_breakpoint.c:936 (set (mem/c/i:SI (plus:SI (reg/f:SI 169)
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 83 80 210 7 arch/arm/kernel/hw_breakpoint.c:937 (set (mem/c/i:SI (plus:SI (reg/f:SI 169)
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg/f:SI 169)
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(jump_insn 210 83 211 7 arch/arm/kernel/hw_breakpoint.c:938 (set (pc)
        (label_ref 189)) -1 (nil))
;; End of basic block 7 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(28)
23, 62, 85, 106, 107, 126, 127, 321, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176


;; Succ edge  16 [100.0%] 

(barrier 211 210 86)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u87(11){ }u88(13){ }u89(25){ }u90(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 138 175 216
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 138 175 216
;; live  kill	
;; rd  in  	(26)
23, 62, 85, 106, 107, 126, 127, 321, 333, 334, 2153, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174
;; rd  gen 	(4)
320, 2158, 2177, 2203
;; rd  kill	(27)
309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2158, 2177, 2203

;; Pred edge  6 [61.0%] 
(code_label 86 211 87 8 316 "" [1 uses])

(note 87 86 88 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 88 87 89 8 arch/arm/kernel/hw_breakpoint.c:941 (set (reg/v:SI 138 [ dscr ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 0") ("=r") 0 []
             [] 8187158)) -1 (nil))

(insn 89 88 90 8 arch/arm/kernel/hw_breakpoint.c:942 (set (reg:SI 175)
        (and:SI (reg/v:SI 138 [ dscr ])
            (const_int 16384 [0x4000]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg/v:SI 138 [ dscr ])
        (nil)))

(insn 90 89 206 8 arch/arm/kernel/hw_breakpoint.c:942 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 175)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(insn 206 90 91 8 (set (reg/f:SI 216)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) -1 (nil))

(jump_insn 91 206 92 8 arch/arm/kernel/hw_breakpoint.c:942 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7144 [0x1be8])
            (nil))))
;; End of basic block 8 -> ( 9 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 216
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 216
;; rd  out 	(29)
23, 62, 85, 106, 107, 126, 127, 320, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2203


;; Succ edge  9 [28.6%]  (fallthru)
;; Succ edge  10 [71.4%] 

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u94(11){ }u95(13){ }u96(25){ }u97(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 216
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 216
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 177
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 216
;; live  gen 	 0 [r0] 1 [r1] 177
;; live  kill	 14 [lr]
;; rd  in  	(29)
23, 62, 85, 106, 107, 126, 127, 320, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2203
;; rd  gen 	(2)
22, 2178
;; rd  kill	(20)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 2178

;; Pred edge  8 [28.6%]  (fallthru)
(note 92 91 94 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 94 92 96 9 arch/arm/kernel/hw_breakpoint.c:943 (set (reg:SI 177)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(insn 96 94 98 9 arch/arm/kernel/hw_breakpoint.c:943 (set (mem/c/i:QI (plus:SI (reg/f:SI 216)
                (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8])
        (subreg:QI (reg:SI 177) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg/f:SI 216)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(insn 98 96 99 9 arch/arm/kernel/hw_breakpoint.c:944 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114c4400>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC12") [flags 0x82] <string_cst 0x114c4400>)
        (nil)))

(insn 99 98 100 9 arch/arm/kernel/hw_breakpoint.c:944 (set (reg:SI 1 r1)
        (reg:SI 177)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (expr_list:REG_EQUAL (const_int 4 [0x4])
            (nil))))

(call_insn 100 99 212 9 arch/arm/kernel/hw_breakpoint.c:944 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 212 100 213 9 (set (pc)
        (label_ref 166)) -1 (nil))
;; End of basic block 9 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
22, 62, 85, 106, 107, 126, 127, 320, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2178, 2203


;; Succ edge  15 [100.0%] 

(barrier 213 212 103)

;; Start of basic block ( 8) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u104(11){ }u105(13){ }u106(25){ }u107(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 216
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 216
;; lr  def 	 24 [cc] 181
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175 216
;; live  gen 	 24 [cc] 181
;; live  kill	
;; rd  in  	(29)
23, 62, 85, 106, 107, 126, 127, 320, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2203
;; rd  gen 	(2)
318, 2179
;; rd  kill	(25)
309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2179

;; Pred edge  8 [71.4%] 
(code_label 103 213 104 10 317 "" [1 uses])

(note 104 103 106 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 106 104 107 10 arch/arm/kernel/hw_breakpoint.c:304 (set (reg:SI 181 [ debug_arch ])
        (zero_extend:SI (mem/c/i:QI (reg/f:SI 216) [0 debug_arch+0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg/f:SI 216)
        (expr_list:REG_EQUAL (zero_extend:SI (mem/c/i:QI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 debug_arch+0 S1 A8]))
            (nil))))

(insn 107 106 108 10 arch/arm/kernel/hw_breakpoint.c:304 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 181 [ debug_arch ])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 181 [ debug_arch ])
        (nil)))

(jump_insn 108 107 109 10 arch/arm/kernel/hw_breakpoint.c:304 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 10 -> ( 13 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; rd  out 	(30)
23, 62, 85, 106, 107, 126, 127, 318, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2203


;; Succ edge  13 [71.0%] 
;; Succ edge  11 [29.0%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u111(11){ }u112(13){ }u113(25){ }u114(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 134 135 182 183 184 186 187 188 189 191 192 193 194 196 197 198 199 201 202 203 204
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 175
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 134 135 182 183 184 186 187 188 189 191 192 193 194 196 197 198 199 201 202 203 204
;; live  kill	 14 [lr]
;; rd  in  	(30)
23, 62, 85, 106, 107, 126, 127, 318, 333, 334, 2153, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2203
;; rd  gen 	(23)
14, 313, 2154, 2155, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199
;; rd  kill	(63)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 2154, 2155, 2180, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199

;; Pred edge  10 [29.0%]  (fallthru)
(note 109 108 110 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 110 109 111 11 arch/arm/kernel/hw_breakpoint.c:307 discrim 1 (set (reg/f:SI 182)
        (plus:SI (reg/f:SI 25 sfp)
            (const_int -8 [0xfffffffffffffff8]))) 4 {*arm_addsi3} (nil))

(insn 111 110 112 11 arch/arm/kernel/hw_breakpoint.c:307 discrim 1 (set (reg:SI 0 r0)
        (reg/f:SI 182)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 182)
        (expr_list:REG_EQUAL (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))

(insn 112 111 113 11 arch/arm/kernel/hw_breakpoint.c:307 discrim 1 (set (reg:SI 1 r1)
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))

(call_insn 113 112 114 11 arch/arm/kernel/hw_breakpoint.c:307 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__memzero") [flags 0x41] <function_decl 0x10be9e00 __memzero>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 114 113 115 11 arch/arm/kernel/hw_breakpoint.c:308 (set (reg:SI 183)
        (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0+0 S1 A64])) 167 {*arm_movsi_insn} (nil))

(insn 115 114 116 11 arch/arm/kernel/hw_breakpoint.c:308 (set (reg:SI 184)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 116 115 117 11 arch/arm/kernel/hw_breakpoint.c:308 (set (zero_extract:SI (reg:SI 183)
            (const_int 8 [0x8])
            (const_int 19 [0x13]))
        (reg:SI 184)) 77 {insv_t2} (expr_list:REG_DEAD (reg:SI 184)
        (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
            (nil))))

(insn 117 116 119 11 arch/arm/kernel/hw_breakpoint.c:308 (set (mem/s/j/c:SI (plus:SI (reg/f:SI 25 sfp)
                (const_int -8 [0xfffffffffffffff8])) [0+0 S1 A64])
        (reg:SI 183)) 167 {*arm_movsi_insn} (nil))

(insn 119 117 120 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 186) 0)
        (zero_extract:SI (reg:SI 183)
            (const_int 1 [0x1])
            (const_int 31 [0x1f]))) 124 {extzv_t2} (nil))

(insn 120 119 121 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 187)
        (zero_extend:SI (reg:QI 186))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 186)
        (nil)))

(insn 121 120 122 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 189)
        (ior:SI (reg:SI 187)
            (const_int 8128 [0x1fc0]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(insn 122 121 124 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 188)
        (ior:SI (reg:SI 189)
            (const_int 32 [0x20]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 189)
        (expr_list:REG_EQUAL (ior:SI (reg:SI 187)
                (const_int 8160 [0x1fe0]))
            (nil))))

(insn 124 122 125 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 191) 0)
        (zero_extract:SI (reg:SI 183)
            (const_int 1 [0x1])
            (const_int 9 [0x9]))) 124 {extzv_t2} (nil))

(insn 125 124 126 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 192)
        (zero_extend:SI (reg:QI 191))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 191)
        (nil)))

(insn 126 125 127 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 193)
        (ashift:SI (reg:SI 192)
            (const_int 22 [0x16]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(insn 127 126 129 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 194)
        (ior:SI (reg:SI 188)
            (reg:SI 193))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 193)
        (expr_list:REG_DEAD (reg:SI 188)
            (nil))))

(insn 129 127 130 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 196) 0)
        (zero_extract:SI (reg:SI 183)
            (const_int 2 [0x2])
            (const_int 27 [0x1b]))) 124 {extzv_t2} (nil))

(insn 130 129 131 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 197)
        (zero_extend:SI (reg:QI 196))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 196)
        (nil)))

(insn 131 130 132 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 198)
        (ashift:SI (reg:SI 197)
            (const_int 3 [0x3]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 197)
        (nil)))

(insn 132 131 134 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 199)
        (ior:SI (reg:SI 194)
            (reg:SI 198))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 198)
        (expr_list:REG_DEAD (reg:SI 194)
            (nil))))

(insn 134 132 135 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (subreg:SI (reg:QI 201) 0)
        (zero_extract:SI (reg:SI 183)
            (const_int 2 [0x2])
            (const_int 29 [0x1d]))) 124 {extzv_t2} (expr_list:REG_DEAD (reg:SI 183)
        (nil)))

(insn 135 134 136 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 202)
        (zero_extend:SI (reg:QI 201))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 201)
        (nil)))

(insn 136 135 137 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg:SI 203)
        (ashift:SI (reg:SI 202)
            (const_int 1 [0x1]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 202)
        (nil)))

(insn 137 136 138 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:29 (set (reg/v:SI 135 [ ctrl_reg ])
        (ior:SI (reg:SI 199)
            (reg:SI 203))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg:SI 203)
        (expr_list:REG_DEAD (reg:SI 199)
            (nil))))

(insn 138 137 139 11 arch/arm/kernel/hw_breakpoint.c:311 (set (reg:SI 0 r0)
        (const_int 96 [0x60])) 167 {*arm_movsi_insn} (nil))

(insn 139 138 140 11 arch/arm/kernel/hw_breakpoint.c:311 (set (reg:SI 1 r1)
        (reg:SI 175)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 175)
        (expr_list:REG_EQUAL (const_int 0 [0x0])
            (nil))))

(call_insn 140 139 141 11 arch/arm/kernel/hw_breakpoint.c:311 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 141 140 142 11 arch/arm/kernel/hw_breakpoint.c:312 (set (reg:SI 0 r0)
        (const_int 112 [0x70])) 167 {*arm_movsi_insn} (nil))

(insn 142 141 143 11 arch/arm/kernel/hw_breakpoint.c:312 (set (reg:SI 1 r1)
        (reg/v:SI 135 [ ctrl_reg ])) 167 {*arm_movsi_insn} (nil))

(call_insn 143 142 144 11 arch/arm/kernel/hw_breakpoint.c:312 (parallel [
            (call (mem:SI (symbol_ref:SI ("write_wb_reg") [flags 0x3] <function_decl 0x113d8380 write_wb_reg>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 144 143 145 11 arch/arm/kernel/hw_breakpoint.c:313 (set (reg:SI 0 r0)
        (const_int 112 [0x70])) 167 {*arm_movsi_insn} (nil))

(call_insn 145 144 146 11 arch/arm/kernel/hw_breakpoint.c:313 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("read_wb_reg") [flags 0x3] <function_decl 0x113d8280 read_wb_reg>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 146 145 147 11 arch/arm/kernel/hw_breakpoint.c:313 (set (reg:SI 134 [ D.24654 ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 147 146 148 11 arch/arm/kernel/hw_breakpoint.c:313 (set (reg:SI 204)
        (and:SI (reg:SI 134 [ D.24654 ])
            (reg/v:SI 135 [ ctrl_reg ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 134 [ D.24654 ])
        (nil)))

(insn 148 147 149 11 arch/arm/kernel/hw_breakpoint.c:313 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 204)
            (reg/v:SI 135 [ ctrl_reg ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 204)
        (expr_list:REG_DEAD (reg/v:SI 135 [ ctrl_reg ])
            (nil))))

(jump_insn 149 148 150 11 arch/arm/kernel/hw_breakpoint.c:313 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 154)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7200 [0x1c20])
            (nil))))
;; End of basic block 11 -> ( 12 13)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(51)
14, 62, 85, 106, 107, 126, 127, 313, 333, 334, 2153, 2154, 2155, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203


;; Succ edge  12 [28.0%]  (fallthru)
;; Succ edge  13 [72.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u162(11){ }u163(13){ }u164(25){ }u165(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 136
;; live  kill	
;; rd  in  	(51)
14, 62, 85, 106, 107, 126, 127, 313, 333, 334, 2153, 2154, 2155, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203
;; rd  gen 	(1)
2157
;; rd  kill	(2)
2156, 2157

;; Pred edge  11 [28.0%]  (fallthru)
(note 150 149 151 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 151 150 214 12 arch/arm/kernel/hw_breakpoint.c:314 (set (reg/v:SI 136 [ size ])
        (const_int 8 [0x8])) 167 {*arm_movsi_insn} (nil))

(jump_insn 214 151 215 12 (set (pc)
        (label_ref 157)) -1 (nil))
;; End of basic block 12 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(52)
14, 62, 85, 106, 107, 126, 127, 313, 333, 334, 2153, 2154, 2155, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203


;; Succ edge  14 [100.0%] 

(barrier 215 214 154)

;; Start of basic block ( 10 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u166(11){ }u167(13){ }u168(25){ }u169(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 136
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 136
;; live  kill	
;; rd  in  	(53)
14, 23, 62, 85, 106, 107, 126, 127, 313, 318, 333, 334, 2153, 2154, 2155, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203
;; rd  gen 	(1)
2156
;; rd  kill	(2)
2156, 2157

;; Pred edge  10 [71.0%] 
;; Pred edge  11 [72.0%] 
(code_label 154 215 155 13 319 ("out") [2 uses])

(note 155 154 156 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 156 155 157 13 arch/arm/kernel/hw_breakpoint.c:302 (set (reg/v:SI 136 [ size ])
        (const_int 4 [0x4])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 13 -> ( 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; rd  out 	(54)
14, 23, 62, 85, 106, 107, 126, 127, 313, 318, 333, 334, 2153, 2154, 2155, 2156, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203


;; Succ edge  14 [100.0%]  (fallthru)

;; Start of basic block ( 13 12) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u170(11){ }u171(13){ }u172(25){ }u173(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 205
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 136
;; live  gen 	 0 [r0] 1 [r1] 205
;; live  kill	 14 [lr]
;; rd  in  	(55)
14, 23, 62, 85, 106, 107, 126, 127, 313, 318, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2203
;; rd  gen 	(2)
13, 2200
;; rd  kill	(20)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 2200

;; Pred edge  13 [100.0%]  (fallthru)
;; Pred edge  12 [100.0%] 
(code_label 157 156 158 14 320 "" [1 uses])

(note 158 157 159 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 159 158 161 14 arch/arm/kernel/hw_breakpoint.c:948 (set (reg/f:SI 205)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 161 159 163 14 arch/arm/kernel/hw_breakpoint.c:948 (set (mem/c/i:QI (plus:SI (reg/f:SI 205)
                (const_int 1 [0x1])) [0 max_watchpoint_len+0 S1 A8])
        (subreg/s/u:QI (reg/v:SI 136 [ size ]) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg/f:SI 205)
        (nil)))

(insn 163 161 164 14 arch/arm/kernel/hw_breakpoint.c:949 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x113a55a0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC13") [flags 0x82] <string_cst 0x113a55a0>)
        (nil)))

(insn 164 163 165 14 arch/arm/kernel/hw_breakpoint.c:949 (set (reg:SI 1 r1)
        (reg/v:SI 136 [ size ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 136 [ size ])
        (nil)))

(call_insn 165 164 166 14 arch/arm/kernel/hw_breakpoint.c:949 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a7a180 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 14 -> ( 15)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(55)
13, 62, 85, 106, 107, 126, 127, 313, 318, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2203


;; Succ edge  15 [100.0%]  (fallthru)

;; Start of basic block ( 14 9) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u180(11){ }u181(13){ }u182(25){ }u183(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 210 213
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 210 213
;; live  kill	 14 [lr]
;; rd  in  	(58)
13, 22, 62, 85, 106, 107, 126, 127, 313, 318, 320, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2203
;; rd  gen 	(3)
8, 2201, 2202
;; rd  kill	(21)
128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 2201, 2202

;; Pred edge  14 [100.0%]  (fallthru)
;; Pred edge  9 [100.0%] 
(code_label 166 165 167 15 318 "" [1 uses])

(note 167 166 170 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 170 167 171 15 arch/arm/kernel/hw_breakpoint.c:954 (set (reg/f:SI 210)
        (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x114c9d40>)) 167 {*arm_movsi_insn} (nil))

(insn 171 170 172 15 arch/arm/kernel/hw_breakpoint.c:954 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 210)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 210)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC14") [flags 0x82] <string_cst 0x114c9d40>)
            (nil))))

(insn 172 171 173 15 arch/arm/kernel/hw_breakpoint.c:954 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 173 172 174 15 arch/arm/kernel/hw_breakpoint.c:954 (set (reg:SI 1 r1)
        (symbol_ref:SI ("hw_breakpoint_pending") [flags 0x3] <function_decl 0x1141ac80 hw_breakpoint_pending>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("hw_breakpoint_pending") [flags 0x3] <function_decl 0x1141ac80 hw_breakpoint_pending>)
        (nil)))

(insn 174 173 175 15 arch/arm/kernel/hw_breakpoint.c:954 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 175 174 176 15 arch/arm/kernel/hw_breakpoint.c:954 (set (reg:SI 3 r3)
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196612 [0x30004])
        (nil)))

(call_insn 176 175 179 15 arch/arm/kernel/hw_breakpoint.c:954 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_fault_code") [flags 0x41] <function_decl 0x512b6000 hook_fault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 179 176 180 15 arch/arm/kernel/hw_breakpoint.c:956 (set (reg/f:SI 213)
        (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115cd600>)) 167 {*arm_movsi_insn} (nil))

(insn 180 179 181 15 arch/arm/kernel/hw_breakpoint.c:956 (set (mem:SI (reg/f:SI 13 sp) [0 S4 A32])
        (reg/f:SI 213)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 213)
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC15") [flags 0x82] <string_cst 0x115cd600>)
            (nil))))

(insn 181 180 182 15 arch/arm/kernel/hw_breakpoint.c:956 (set (reg:SI 0 r0)
        (const_int 2 [0x2])) 167 {*arm_movsi_insn} (nil))

(insn 182 181 183 15 arch/arm/kernel/hw_breakpoint.c:956 (set (reg:SI 1 r1)
        (symbol_ref:SI ("hw_breakpoint_pending") [flags 0x3] <function_decl 0x1141ac80 hw_breakpoint_pending>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("hw_breakpoint_pending") [flags 0x3] <function_decl 0x1141ac80 hw_breakpoint_pending>)
        (nil)))

(insn 183 182 184 15 arch/arm/kernel/hw_breakpoint.c:956 (set (reg:SI 2 r2)
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 184 183 185 15 arch/arm/kernel/hw_breakpoint.c:956 (set (reg:SI 3 r3)
        (const_int 196612 [0x30004])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 196612 [0x30004])
        (nil)))

(call_insn 185 184 187 15 arch/arm/kernel/hw_breakpoint.c:956 (parallel [
            (call (mem:SI (symbol_ref:SI ("hook_ifault_code") [flags 0x41] <function_decl 0x512b6080 hook_ifault_code>) [0 S4 A32])
                (const_int 8 [0x8]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 187 185 188 15 arch/arm/kernel/hw_breakpoint.c:960 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(call_insn 188 187 189 15 arch/arm/kernel/hw_breakpoint.c:960 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("register_cpu_notifier") [flags 0x41] <function_decl 0x1137ca00 register_cpu_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(59)
8, 62, 85, 106, 107, 126, 127, 313, 318, 320, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2169, 2170, 2171, 2172, 2173, 2174, 2177, 2178, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 15 3 7) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u200(11){ }u201(13){ }u202(25){ }u203(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(66)
8, 23, 29, 62, 85, 106, 107, 126, 127, 313, 318, 320, 321, 330, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203
;; rd  gen 	(1)
0
;; rd  kill	(0)


;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
;; Pred edge  7 [100.0%] 
(code_label 189 188 190 16 314 "" [2 uses])

(note 190 189 195 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 195 190 201 16 arch/arm/kernel/hw_breakpoint.c:962 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 201 195 0 16 arch/arm/kernel/hw_breakpoint.c:962 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 16 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(64)
0, 62, 85, 106, 107, 126, 127, 313, 318, 320, 321, 330, 333, 334, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function hw_breakpoint_pending (hw_breakpoint_pending)[0:1267]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 58 count 95 (  2.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 58 count 103 (  2.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 41 n_edges 58 count 99 (  2.4)


hw_breakpoint_pending

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,14u} r1={25d,6u} r2={20d,2u} r3={19d} r11={1d,40u} r12={19d} r13={1d,63u,5d} r14={19d,1u} r15={18d} r16={18d} r17={18d} r18={18d} r19={18d} r20={18d} r21={18d} r22={18d} r23={18d} r24={38d,19u} r25={1d,40u} r26={1d,39u} r27={18d} r28={18d} r29={18d} r30={18d} r31={18d} r32={18d} r33={18d} r34={18d} r35={18d} r36={18d} r37={18d} r38={18d} r39={18d} r40={18d} r41={18d} r42={18d} r43={18d} r44={18d} r45={18d} r46={18d} r47={18d} r48={18d} r49={18d} r50={18d} r51={18d} r52={18d} r53={18d} r54={18d} r55={18d} r56={18d} r57={18d} r58={18d} r59={18d} r60={18d} r61={18d} r62={18d} r63={18d} r64={18d} r65={18d} r66={18d} r67={18d} r68={18d} r69={18d} r70={18d} r71={18d} r72={18d} r73={18d} r74={18d} r75={18d} r76={18d} r77={18d} r78={18d} r79={18d} r80={18d} r81={18d} r82={18d} r83={18d} r84={18d} r85={18d} r86={18d} r87={18d} r88={18d} r89={18d} r90={18d} r91={18d} r92={18d} r93={18d} r94={18d} r95={18d} r96={18d} r97={18d} r98={18d} r99={18d} r100={18d} r101={18d} r102={18d} r103={18d} r104={18d} r105={18d} r106={18d} r107={18d} r108={18d} r109={18d} r110={18d} r111={18d} r112={18d} r113={18d} r114={18d} r115={18d} r116={18d} r117={18d} r118={18d} r119={18d} r120={18d} r121={18d} r122={18d} r123={18d} r124={18d} r125={18d} r126={18d} r127={18d} r133={1d,1u} r137={1d,1u} r140={1d,3u} r141={1d,1u} r142={2d,3u} r143={1d,6u} r144={1d,1u} r146={1d,1u} r147={2d,5u} r148={1d,1u} r149={1d,1u} r150={1d,5u} r151={1d,7u} r152={1d,1u} r156={1d,1u} r157={1d,4u} r158={2d,3u} r159={1d,1u} r161={1d,2u} r162={1d,1u} r163={2d,1u} r167={1d,5u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,4u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u,1d} r180={1d,1u} r181={1d,1u} r184={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r197={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u,1d} r204={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r213={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u,1d} r223={1d,1u} r224={1d,2u} r225={1d,1u} r229={1d,1u} r230={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r237={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} 
;;    total ref usage 2583{2236d,339u,8e} in 172{154 regular + 18 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,30] 1[30,25] 2[55,20] 3[75,19] 11[94,1] 12[95,19] 13[114,1] 14[115,19] 15[134,18] 16[152,18] 17[170,18] 18[188,18] 19[206,18] 20[224,18] 21[242,18] 22[260,18] 23[278,18] 24[296,38] 25[334,1] 26[335,1] 27[336,18] 28[354,18] 29[372,18] 30[390,18] 31[408,18] 32[426,18] 33[444,18] 34[462,18] 35[480,18] 36[498,18] 37[516,18] 38[534,18] 39[552,18] 40[570,18] 41[588,18] 42[606,18] 43[624,18] 44[642,18] 45[660,18] 46[678,18] 47[696,18] 48[714,18] 49[732,18] 50[750,18] 51[768,18] 52[786,18] 53[804,18] 54[822,18] 55[840,18] 56[858,18] 57[876,18] 58[894,18] 59[912,18] 60[930,18] 61[948,18] 62[966,18] 63[984,18] 64[1002,18] 65[1020,18] 66[1038,18] 67[1056,18] 68[1074,18] 69[1092,18] 70[1110,18] 71[1128,18] 72[1146,18] 73[1164,18] 74[1182,18] 75[1200,18] 76[1218,18] 77[1236,18] 78[1254,18] 79[1272,18] 80[1290,18] 81[1308,18] 82[1326,18] 83[1344,18] 84[1362,18] 85[1380,18] 86[1398,18] 87[1416,18] 88[1434,18] 89[1452,18] 90[1470,18] 91[1488,18] 92[1506,18] 93[1524,18] 94[1542,18] 95[1560,18] 96[1578,18] 97[1596,18] 98[1614,18] 99[1632,18] 100[1650,18] 101[1668,18] 102[1686,18] 103[1704,18] 104[1722,18] 105[1740,18] 106[1758,18] 107[1776,18] 108[1794,18] 109[1812,18] 110[1830,18] 111[1848,18] 112[1866,18] 113[1884,18] 114[1902,18] 115[1920,18] 116[1938,18] 117[1956,18] 118[1974,18] 119[1992,18] 120[2010,18] 121[2028,18] 122[2046,18] 123[2064,18] 124[2082,18] 125[2100,18] 126[2118,18] 127[2136,18] 133[2154,1] 137[2155,1] 140[2156,1] 141[2157,1] 142[2158,2] 143[2160,1] 144[2161,1] 146[2162,1] 147[2163,2] 148[2165,1] 149[2166,1] 150[2167,1] 151[2168,1] 152[2169,1] 156[2170,1] 157[2171,1] 158[2172,2] 159[2174,1] 161[2175,1] 162[2176,1] 163[2177,2] 167[2179,1] 168[2180,1] 169[2181,1] 170[2182,1] 171[2183,1] 172[2184,1] 173[2185,1] 174[2186,1] 175[2187,1] 176[2188,1] 177[2189,1] 178[2190,1] 179[2191,1] 180[2192,1] 181[2193,1] 184[2194,1] 186[2195,1] 187[2196,1] 188[2197,1] 189[2198,1] 190[2199,1] 192[2200,1] 193[2201,1] 194[2202,1] 195[2203,1] 197[2204,1] 199[2205,1] 200[2206,1] 201[2207,1] 202[2208,1] 203[2209,1] 204[2210,1] 207[2211,1] 208[2212,1] 209[2213,1] 210[2214,1] 211[2215,1] 213[2216,1] 218[2217,1] 219[2218,1] 220[2219,1] 221[2220,1] 222[2221,1] 223[2222,1] 224[2223,1] 225[2224,1] 229[2225,1] 230[2226,1] 232[2227,1] 233[2228,1] 234[2229,1] 235[2230,1] 237[2231,1] 239[2232,1] 240[2233,1] 241[2234,1] 242[2235,1] 

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d29(0){ }d54(1){ }d74(2){ }d93(3){ }d94(11){ }d113(12){ }d114(13){ }d133(14){ }d334(25){ }d335(26){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  in  	
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  kill	
;; rd  in  	(0)

;; rd  gen 	(10)
29, 54, 74, 93, 94, 113, 114, 133, 334, 335
;; rd  kill	(136)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 334, 335
;; lr  out 	 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(10)
29, 54, 74, 93, 94, 113, 114, 133, 334, 335

( 0 )->[2]->( 3 4 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ d94(bb 0 insn -1) }u1(13){ d114(bb 0 insn -1) }u2(25){ d334(bb 0 insn -1) }u3(26){ d335(bb 0 insn -1) }}
;; lr  in  	 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 161 167 168 169 170 171 172
;; live  in  	 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 161 167 168 169 170 171 172
;; live  kill	
;; rd  in  	(10)
29, 54, 74, 93, 94, 113, 114, 133, 334, 335
;; rd  gen 	(8)
333, 2175, 2179, 2180, 2181, 2182, 2183, 2184
;; rd  kill	(7)
2175, 2179, 2180, 2181, 2182, 2183, 2184
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; rd  out 	(18)
29, 54, 74, 93, 94, 113, 114, 133, 333, 334, 335, 2175, 2179, 2180, 2181, 2182, 2183, 2184
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 4
;;      reg 2 { d74(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 9
;;      reg 13 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 10
;;      reg 168 { d2180(bb 2 insn 9) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 11
;;      reg 161 { d2175(bb 2 insn 10) }
;;   UD chains for insn luid 4 uid 12
;;      reg 169 { d2181(bb 2 insn 11) }
;;   UD chains for insn luid 5 uid 13
;;      reg 161 { d2175(bb 2 insn 10) }
;;      reg 170 { d2182(bb 2 insn 12) }
;;   UD chains for insn luid 7 uid 15
;;      reg 167 { d2179(bb 2 insn 4) }
;;   UD chains for insn luid 8 uid 16
;;      reg 172 { d2184(bb 2 insn 15) }
;;   UD chains for insn luid 9 uid 17
;;      reg 171 { d2183(bb 2 insn 16) }
;;   UD chains for insn luid 10 uid 18
;;      reg 24 { d333(bb 2 insn 17) }

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ d94(bb 0 insn -1) }u17(13){ d114(bb 0 insn -1) }u18(25){ d334(bb 0 insn -1) }u19(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  gen 	
;; live  kill	 24 [cc]
;; rd  in  	(18)
29, 54, 74, 93, 94, 113, 114, 133, 333, 334, 335, 2175, 2179, 2180, 2181, 2182, 2183, 2184
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; rd  out 	(17)
29, 54, 74, 93, 94, 113, 114, 133, 334, 335, 2175, 2179, 2180, 2181, 2182, 2183, 2184
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }

( 2 3 )->[4]->( 26 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ d94(bb 0 insn -1) }u21(13){ d114(bb 0 insn -1) }u22(25){ d334(bb 0 insn -1) }u23(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 162 173 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  gen 	 24 [cc] 162 173 174
;; live  kill	
;; rd  in  	(18)
29, 54, 74, 93, 94, 113, 114, 133, 333, 334, 335, 2175, 2179, 2180, 2181, 2182, 2183, 2184
;; rd  gen 	(4)
331, 2176, 2185, 2186
;; rd  kill	(3)
2176, 2185, 2186
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; rd  out 	(21)
29, 54, 74, 93, 94, 113, 114, 133, 331, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 24
;;      reg 162 { d2176(bb 4 insn 23) }
;;   UD chains for insn luid 2 uid 25
;;      reg 173 { d2185(bb 4 insn 24) }
;;   UD chains for insn luid 3 uid 26
;;      reg 174 { d2186(bb 4 insn 25) }
;;   UD chains for insn luid 4 uid 27
;;      reg 24 { d331(bb 4 insn 26) }

( 4 )->[5]->( 27 6 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ d94(bb 0 insn -1) }u29(13){ d114(bb 0 insn -1) }u30(25){ d334(bb 0 insn -1) }u31(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
29, 54, 74, 93, 94, 113, 114, 133, 331, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(1)
330
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; rd  out 	(21)
29, 54, 74, 93, 94, 113, 114, 133, 330, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 28
;;      reg 174 { d2186(bb 4 insn 25) }
;;   UD chains for insn luid 1 uid 29
;;      reg 24 { d330(bb 5 insn 28) }

( 5 )->[6]->( 8 7 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ d94(bb 0 insn -1) }u35(13){ d114(bb 0 insn -1) }u36(25){ d334(bb 0 insn -1) }u37(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
29, 54, 74, 93, 94, 113, 114, 133, 330, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(1)
329
;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; rd  out 	(21)
29, 54, 74, 93, 94, 113, 114, 133, 329, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 30
;;      reg 174 { d2186(bb 4 insn 25) }
;;   UD chains for insn luid 1 uid 31
;;      reg 24 { d329(bb 6 insn 30) }

( 6 )->[7]->( 38 )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u40(11){ d94(bb 0 insn -1) }u41(13){ d114(bb 0 insn -1) }u42(25){ d334(bb 0 insn -1) }u43(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 163
;; live  kill	
;; rd  in  	(21)
29, 54, 74, 93, 94, 113, 114, 133, 329, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(1)
2178
;; rd  kill	(2)
2177, 2178
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(22)
29, 54, 74, 93, 94, 113, 114, 133, 329, 334, 335, 2175, 2176, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }

( 6 )->[8]->( 17 )
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u44(11){ d94(bb 0 insn -1) }u45(13){ d114(bb 0 insn -1) }u46(25){ d334(bb 0 insn -1) }u47(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 174
;; lr  def 	 133 146 147 150 152 175 176 177 178 179 180 181 241 242
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  gen 	 133 146 147 150 152 175 176 177 178 179 180 181 241 242
;; live  kill	
;; rd  in  	(21)
29, 54, 74, 93, 94, 113, 114, 133, 329, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(14)
2154, 2162, 2164, 2167, 2169, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2234, 2235
;; rd  kill	(15)
2154, 2162, 2163, 2164, 2167, 2169, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2234, 2235
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; rd  out 	(35)
29, 54, 74, 93, 94, 113, 114, 133, 329, 334, 335, 2154, 2162, 2164, 2167, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 42
;;      reg 175 { d2187(bb 8 insn 41) }
;;   UD chains for insn luid 3 uid 45
;;      reg 13 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 46
;;      reg 178 { d2190(bb 8 insn 45) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 47
;;      reg 177 { d2189(bb 8 insn 46) }
;;   UD chains for insn luid 6 uid 48
;;      reg 176 { d2188(bb 8 insn 44) }
;;      reg 179 { d2191(bb 8 insn 47) }
;;   eq_note reg 179 { }
;;   UD chains for insn luid 7 uid 49
;;      reg 152 { d2169(bb 8 insn 42) }
;;      reg 180 { d2192(bb 8 insn 48) }
;;   UD chains for insn luid 8 uid 50
;;      reg 167 { d2179(bb 2 insn 4) }
;;   UD chains for insn luid 9 uid 51
;;      reg 150 { d2167(bb 8 insn 50) }
;;   UD chains for insn luid 10 uid 53
;;      reg 174 { d2186(bb 4 insn 25) }
;;      reg 181 { d2193(bb 8 insn 51) }
;;   UD chains for insn luid 13 uid 69
;;      reg 150 { d2167(bb 8 insn 50) }

( 17 )->[9]->( 16 10 )
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u63(11){ d94(bb 0 insn -1) }u64(13){ d114(bb 0 insn -1) }u65(25){ d334(bb 0 insn -1) }u66(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  gen 	 24 [cc] 151
;; live  kill	 14 [lr]
;; rd  in  	(52)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 317, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(2)
327, 2168
;; rd  kill	(20)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2168
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; rd  out 	(51)
24, 26, 29, 54, 74, 93, 94, 113, 114, 327, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 58
;;      reg 13 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 61
;;      reg 146 { d2162(bb 8 insn 49) }
;;      reg 147 { d2164(bb 8 insn 54) d2163(bb 16 insn 113) }
;;   UD chains for insn luid 2 uid 62
;;      reg 151 { d2168(bb 9 insn 61) }
;;   UD chains for insn luid 3 uid 63
;;      reg 24 { d327(bb 9 insn 62) }

( 9 )->[10]->( 14 11 )
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u73(11){ d94(bb 0 insn -1) }u74(13){ d114(bb 0 insn -1) }u75(25){ d334(bb 0 insn -1) }u76(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 242
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 0 [r0] 24 [cc] 149 184
;; live  kill	 14 [lr]
;; rd  in  	(51)
24, 26, 29, 54, 74, 93, 94, 113, 114, 327, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(4)
26, 296, 2166, 2194
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2166, 2194
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; rd  out 	(49)
26, 54, 74, 93, 94, 113, 114, 296, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 65
;;      reg 147 { d2164(bb 8 insn 54) d2163(bb 16 insn 113) }
;;   UD chains for insn luid 1 uid 66
;;      reg 184 { d2194(bb 10 insn 65) }
;;   UD chains for insn luid 2 uid 67
;;      reg 13 { d114(bb 0 insn -1) }
;;      reg 0 { d27(bb 10 insn 66) }
;;   UD chains for insn luid 3 uid 68
;;      reg 0 { d26(bb 10 insn 67) }
;;   UD chains for insn luid 4 uid 70
;;      reg 149 { d2166(bb 10 insn 68) }
;;      reg 242 { d2235(bb 8 insn 69) }
;;   UD chains for insn luid 5 uid 71
;;      reg 24 { d296(bb 10 insn 70) }

( 10 )->[11]->( 12 14 )
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u85(11){ d94(bb 0 insn -1) }u86(13){ d114(bb 0 insn -1) }u87(25){ d334(bb 0 insn -1) }u88(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 186 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 0 [r0] 24 [cc] 148 186 187 188 189
;; live  kill	 14 [lr]
;; rd  in  	(49)
26, 54, 74, 93, 94, 113, 114, 296, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(7)
24, 324, 2165, 2195, 2196, 2197, 2198
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2165, 2195, 2196, 2197, 2198
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; rd  out 	(49)
24, 54, 74, 93, 94, 113, 114, 324, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 73
;;      reg 147 { d2164(bb 8 insn 54) d2163(bb 16 insn 113) }
;;   UD chains for insn luid 1 uid 74
;;      reg 186 { d2195(bb 11 insn 73) }
;;   UD chains for insn luid 2 uid 75
;;      reg 13 { d114(bb 0 insn -1) }
;;      reg 0 { d25(bb 11 insn 74) }
;;   UD chains for insn luid 3 uid 76
;;      reg 0 { d24(bb 11 insn 75) }
;;   UD chains for insn luid 4 uid 79
;;      reg 148 { d2165(bb 11 insn 76) }
;;   UD chains for insn luid 5 uid 80
;;      reg 187 { d2196(bb 11 insn 79) }
;;   UD chains for insn luid 6 uid 81
;;      reg 133 { d2154(bb 8 insn 53) }
;;      reg 188 { d2197(bb 11 insn 80) }
;;   UD chains for insn luid 7 uid 82
;;      reg 189 { d2198(bb 11 insn 81) }
;;   UD chains for insn luid 8 uid 83
;;      reg 24 { d324(bb 11 insn 82) }

( 11 )->[12]->( 13 16 )
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u100(11){ d94(bb 0 insn -1) }u101(13){ d114(bb 0 insn -1) }u102(25){ d334(bb 0 insn -1) }u103(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 190
;; live  kill	 14 [lr]
;; rd  in  	(49)
24, 54, 74, 93, 94, 113, 114, 324, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(2)
322, 2199
;; rd  kill	(20)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2199
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; rd  out 	(49)
24, 54, 74, 93, 94, 113, 114, 322, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 85
;;      reg 150 { d2167(bb 8 insn 50) }
;;      reg 151 { d2168(bb 9 insn 61) }
;;   UD chains for insn luid 1 uid 86
;;      reg 151 { d2168(bb 9 insn 61) }
;;   UD chains for insn luid 2 uid 87
;;      reg 167 { d2179(bb 2 insn 4) }
;;   UD chains for insn luid 3 uid 88
;;      reg 13 { d114(bb 0 insn -1) }
;;      reg 0 { d23(bb 12 insn 86) }
;;      reg 1 { d50(bb 12 insn 87) }
;;   UD chains for insn luid 4 uid 89
;;      reg 151 { d2168(bb 9 insn 61) }
;;   UD chains for insn luid 5 uid 90
;;      reg 190 { d2199(bb 12 insn 89) }
;;   UD chains for insn luid 6 uid 91
;;      reg 24 { d322(bb 12 insn 90) }

( 12 )->[13]->( 16 )
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u114(11){ d94(bb 0 insn -1) }u115(13){ d114(bb 0 insn -1) }u116(25){ d334(bb 0 insn -1) }u117(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(49)
24, 54, 74, 93, 94, 113, 114, 322, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; rd  out 	(49)
24, 54, 74, 93, 94, 113, 114, 322, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 93
;;      reg 151 { d2168(bb 9 insn 61) }
;;   UD chains for insn luid 1 uid 94
;;      reg 150 { d2167(bb 8 insn 50) }
;;   UD chains for insn luid 2 uid 95
;;      reg 13 { d114(bb 0 insn -1) }
;;      reg 0 { d21(bb 13 insn 93) }
;;      reg 1 { d48(bb 13 insn 94) }

( 10 11 )->[14]->( 15 16 )
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u123(11){ d94(bb 0 insn -1) }u124(13){ d114(bb 0 insn -1) }u125(25){ d334(bb 0 insn -1) }u126(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 192 193 194 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 24 [cc] 192 193 194 195
;; live  kill	
;; rd  in  	(51)
24, 26, 54, 74, 93, 94, 113, 114, 296, 324, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(5)
320, 2200, 2201, 2202, 2203
;; rd  kill	(4)
2200, 2201, 2202, 2203
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; rd  out 	(50)
24, 26, 54, 74, 93, 94, 113, 114, 320, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 100
;;      reg 151 { d2168(bb 9 insn 61) }
;;   UD chains for insn luid 1 uid 102
;;      reg 192 { d2200(bb 14 insn 100) }
;;   UD chains for insn luid 2 uid 103
;;      reg 193 { d2201(bb 14 insn 102) }
;;   UD chains for insn luid 3 uid 104
;;      reg 194 { d2202(bb 14 insn 103) }
;;   UD chains for insn luid 4 uid 105
;;      reg 195 { d2203(bb 14 insn 104) }
;;   UD chains for insn luid 5 uid 106
;;      reg 24 { d320(bb 14 insn 105) }

( 14 )->[15]->( 16 )
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(11){ d94(bb 0 insn -1) }u134(13){ d114(bb 0 insn -1) }u135(25){ d334(bb 0 insn -1) }u136(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(50)
24, 26, 54, 74, 93, 94, 113, 114, 320, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; rd  out 	(50)
24, 26, 54, 74, 93, 94, 113, 114, 320, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 108
;;      reg 151 { d2168(bb 9 insn 61) }
;;   UD chains for insn luid 1 uid 109
;;      reg 13 { d114(bb 0 insn -1) }
;;      reg 0 { d19(bb 15 insn 108) }

( 9 12 15 14 13 )->[16]->( 17 )
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u140(11){ d94(bb 0 insn -1) }u141(13){ d114(bb 0 insn -1) }u142(25){ d334(bb 0 insn -1) }u143(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  gen 	 147
;; live  kill	 14 [lr]
;; rd  in  	(53)
24, 26, 29, 54, 74, 93, 94, 113, 114, 320, 322, 327, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(1)
2163
;; rd  kill	(21)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2163, 2164
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; rd  out 	(52)
24, 26, 29, 54, 74, 93, 94, 113, 114, 320, 322, 327, 334, 335, 2154, 2162, 2163, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 112
;;      reg 13 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 113
;;      reg 147 { d2164(bb 8 insn 54) d2163(bb 16 insn 113) }

( 16 8 )->[17]->( 9 18 )
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u146(11){ d94(bb 0 insn -1) }u147(13){ d114(bb 0 insn -1) }u148(25){ d334(bb 0 insn -1) }u149(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 241
;; lr  def 	 24 [cc] 197
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  gen 	 24 [cc] 197
;; live  kill	
;; rd  in  	(55)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 320, 322, 327, 329, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(2)
317, 2204
;; rd  kill	(1)
2204
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; rd  out 	(52)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 317, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 118
;;      reg 241 { d2234(bb 8 insn 117) }
;;   UD chains for insn luid 1 uid 119
;;      reg 147 { d2164(bb 8 insn 54) d2163(bb 16 insn 113) }
;;      reg 197 { d2204(bb 17 insn 118) }
;;   UD chains for insn luid 2 uid 120
;;      reg 24 { d317(bb 17 insn 119) }

( 17 )->[18]->( 24 )
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u154(11){ d94(bb 0 insn -1) }u155(13){ d114(bb 0 insn -1) }u156(25){ d334(bb 0 insn -1) }u157(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156 158 159 199 200 201 202 203 204 240
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; live  gen 	 156 158 159 199 200 201 202 203 204 240
;; live  kill	
;; rd  in  	(52)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 317, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(10)
2170, 2173, 2174, 2205, 2206, 2207, 2208, 2209, 2210, 2233
;; rd  kill	(11)
2170, 2172, 2173, 2174, 2205, 2206, 2207, 2208, 2209, 2210, 2233
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; rd  out 	(62)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 317, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 124
;;      reg 199 { d2205(bb 18 insn 123) }
;;   UD chains for insn luid 3 uid 127
;;      reg 13 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 128
;;      reg 202 { d2208(bb 18 insn 127) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 129
;;      reg 201 { d2207(bb 18 insn 128) }
;;   UD chains for insn luid 6 uid 130
;;      reg 200 { d2206(bb 18 insn 126) }
;;      reg 203 { d2209(bb 18 insn 129) }
;;   eq_note reg 203 { }
;;   UD chains for insn luid 7 uid 131
;;      reg 156 { d2170(bb 18 insn 124) }
;;      reg 204 { d2210(bb 18 insn 130) }

( 24 )->[19]->( 23 20 )
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u168(11){ d94(bb 0 insn -1) }u169(13){ d114(bb 0 insn -1) }u170(25){ d334(bb 0 insn -1) }u171(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; live  gen 	 24 [cc] 157
;; live  kill	 14 [lr]
;; rd  in  	(70)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 310, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(2)
315, 2171
;; rd  kill	(20)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2171
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; rd  out 	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 315, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 136
;;      reg 13 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 138
;;      reg 158 { d2173(bb 18 insn 132) d2172(bb 23 insn 159) }
;;      reg 159 { d2174(bb 18 insn 131) }
;;   UD chains for insn luid 2 uid 139
;;      reg 157 { d2171(bb 19 insn 138) }
;;   UD chains for insn luid 3 uid 140
;;      reg 24 { d315(bb 19 insn 139) }

( 19 )->[20]->( 23 21 )
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u178(11){ d94(bb 0 insn -1) }u179(13){ d114(bb 0 insn -1) }u180(25){ d334(bb 0 insn -1) }u181(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 207 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  gen 	 24 [cc] 207 208 209 210
;; live  kill	
;; rd  in  	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 315, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(5)
314, 2211, 2212, 2213, 2214
;; rd  kill	(4)
2211, 2212, 2213, 2214
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; rd  out 	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 314, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 142
;;      reg 157 { d2171(bb 19 insn 138) }
;;   UD chains for insn luid 1 uid 144
;;      reg 207 { d2211(bb 20 insn 142) }
;;   UD chains for insn luid 2 uid 145
;;      reg 208 { d2212(bb 20 insn 144) }
;;   UD chains for insn luid 3 uid 146
;;      reg 209 { d2213(bb 20 insn 145) }
;;   UD chains for insn luid 4 uid 147
;;      reg 210 { d2214(bb 20 insn 146) }
;;   UD chains for insn luid 5 uid 148
;;      reg 24 { d314(bb 20 insn 147) }

( 20 )->[21]->( 22 23 )
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u188(11){ d94(bb 0 insn -1) }u189(13){ d114(bb 0 insn -1) }u190(25){ d334(bb 0 insn -1) }u191(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157
;; lr  def 	 24 [cc] 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  gen 	 24 [cc] 211
;; live  kill	
;; rd  in  	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 314, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(2)
313, 2215
;; rd  kill	(1)
2215
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; rd  out 	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 313, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 150
;;      reg 157 { d2171(bb 19 insn 138) }
;;   UD chains for insn luid 1 uid 151
;;      reg 150 { d2167(bb 8 insn 50) }
;;      reg 211 { d2215(bb 21 insn 150) }
;;   UD chains for insn luid 2 uid 152
;;      reg 24 { d313(bb 21 insn 151) }

( 21 )->[22]->( 23 )
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u196(11){ d94(bb 0 insn -1) }u197(13){ d114(bb 0 insn -1) }u198(25){ d334(bb 0 insn -1) }u199(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 313, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; rd  out 	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 313, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 154
;;      reg 157 { d2171(bb 19 insn 138) }
;;   UD chains for insn luid 1 uid 155
;;      reg 13 { d114(bb 0 insn -1) }
;;      reg 0 { d15(bb 22 insn 154) }

( 19 20 21 22 )->[23]->( 24 )
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u203(11){ d94(bb 0 insn -1) }u204(13){ d114(bb 0 insn -1) }u205(25){ d334(bb 0 insn -1) }u206(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; live  gen 	 158
;; live  kill	 14 [lr]
;; rd  in  	(71)
24, 26, 29, 54, 74, 93, 94, 113, 114, 313, 314, 315, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(1)
2172
;; rd  kill	(21)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2172, 2173
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; rd  out 	(70)
24, 26, 29, 54, 74, 93, 94, 113, 114, 313, 314, 315, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 158
;;      reg 13 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 159
;;      reg 158 { d2173(bb 18 insn 132) d2172(bb 23 insn 159) }

( 23 18 )->[24]->( 19 25 )
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u209(11){ d94(bb 0 insn -1) }u210(13){ d114(bb 0 insn -1) }u211(25){ d334(bb 0 insn -1) }u212(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 240
;; lr  def 	 24 [cc] 213
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; live  gen 	 24 [cc] 213
;; live  kill	
;; rd  in  	(73)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 313, 314, 315, 317, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(2)
310, 2216
;; rd  kill	(1)
2216
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; rd  out 	(70)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 310, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 164
;;      reg 240 { d2233(bb 18 insn 163) }
;;   UD chains for insn luid 1 uid 165
;;      reg 158 { d2173(bb 18 insn 132) d2172(bb 23 insn 159) }
;;      reg 213 { d2216(bb 24 insn 164) }
;;   UD chains for insn luid 2 uid 166
;;      reg 24 { d310(bb 24 insn 165) }

( 24 )->[25]->( 37 )
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ d94(bb 0 insn -1) }u-1(13){ d114(bb 0 insn -1) }u-1(25){ d334(bb 0 insn -1) }u-1(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(70)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 310, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(70)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 310, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }

( 4 )->[26]->( 27 )
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u217(11){ d94(bb 0 insn -1) }u218(13){ d114(bb 0 insn -1) }u219(25){ d334(bb 0 insn -1) }u220(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(21)
29, 54, 74, 93, 94, 113, 114, 133, 331, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; rd  out 	(20)
29, 54, 74, 93, 94, 113, 114, 331, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 3 uid 178
;;      reg 13 { d114(bb 0 insn -1) }
;;      reg 0 { d1(bb 26 insn 175) }
;;      reg 1 { d31(bb 26 insn 176) }
;;      reg 2 { d55(bb 26 insn 177) }

( 26 5 )->[27]->( 29 28 )
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u225(11){ d94(bb 0 insn -1) }u226(13){ d114(bb 0 insn -1) }u227(25){ d334(bb 0 insn -1) }u228(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 144 218 219 220 221 222 223 224 225
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  gen 	 24 [cc] 141 144 218 219 220 221 222 223 224 225
;; live  kill	
;; rd  in  	(22)
29, 54, 74, 93, 94, 113, 114, 133, 330, 331, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(11)
308, 2157, 2161, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224
;; rd  kill	(10)
2157, 2161, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 167 224
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 167 224
;; rd  out 	(31)
29, 54, 74, 93, 94, 113, 114, 133, 308, 334, 335, 2157, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 183
;;      reg 218 { d2217(bb 27 insn 182) }
;;   UD chains for insn luid 3 uid 186
;;      reg 13 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 4 uid 187
;;      reg 221 { d2220(bb 27 insn 186) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 5 uid 188
;;      reg 220 { d2219(bb 27 insn 187) }
;;   UD chains for insn luid 6 uid 189
;;      reg 219 { d2218(bb 27 insn 185) }
;;      reg 222 { d2221(bb 27 insn 188) }
;;   eq_note reg 222 { }
;;   UD chains for insn luid 7 uid 190
;;      reg 144 { d2161(bb 27 insn 183) }
;;      reg 223 { d2222(bb 27 insn 189) }
;;   UD chains for insn luid 9 uid 192
;;      reg 224 { d2223(bb 27 insn 191) }
;;   UD chains for insn luid 10 uid 193
;;      reg 225 { d2224(bb 27 insn 192) }
;;   UD chains for insn luid 11 uid 194
;;      reg 24 { d308(bb 27 insn 193) }

( 27 )->[28]->( 36 )
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u242(11){ d94(bb 0 insn -1) }u243(13){ d114(bb 0 insn -1) }u244(25){ d334(bb 0 insn -1) }u245(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 167 224
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 224
;; lr  def 	 142 239
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 167 224
;; live  gen 	 142 239
;; live  kill	
;; rd  in  	(31)
29, 54, 74, 93, 94, 113, 114, 133, 308, 334, 335, 2157, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224
;; rd  gen 	(2)
2159, 2232
;; rd  kill	(3)
2158, 2159, 2232
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(33)
29, 54, 74, 93, 94, 113, 114, 133, 308, 334, 335, 2157, 2159, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2232
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 240
;;      reg 224 { d2223(bb 27 insn 191) }

( 27 )->[29]->( )
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u247(11){ d94(bb 0 insn -1) }u248(13){ d114(bb 0 insn -1) }u249(25){ d334(bb 0 insn -1) }u250(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(31)
29, 54, 74, 93, 94, 113, 114, 133, 308, 334, 335, 2157, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
29, 54, 74, 93, 94, 113, 114, 308, 334, 335, 2157, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 205
;;      reg 13 { d114(bb 0 insn -1) }
;;      reg 0 { d0(bb 29 insn 203) }
;;      reg 1 { d30(bb 29 insn 204) }

( 36 )->[30]->( 31 32 )
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u254(11){ d94(bb 0 insn -1) }u255(13){ d114(bb 0 insn -1) }u256(25){ d334(bb 0 insn -1) }u257(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; live  gen 	 24 [cc] 143
;; live  kill	 14 [lr]
;; rd  in  	(38)
29, 54, 74, 93, 94, 113, 114, 133, 299, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(2)
305, 2160
;; rd  kill	(20)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2160
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 305, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 208
;;      reg 13 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 210
;;      reg 141 { d2157(bb 27 insn 190) }
;;      reg 142 { d2159(bb 28 insn 196) d2158(bb 35 insn 236) }
;;   UD chains for insn luid 2 uid 211
;;      reg 143 { d2160(bb 30 insn 210) }
;;   UD chains for insn luid 3 uid 212
;;      reg 24 { d305(bb 30 insn 211) }

( 30 )->[31]->( 35 )
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u264(11){ d94(bb 0 insn -1) }u265(13){ d114(bb 0 insn -1) }u266(25){ d334(bb 0 insn -1) }u267(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(37)
29, 54, 74, 93, 94, 113, 114, 305, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 305, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 214
;;      reg 13 { d114(bb 0 insn -1) }

( 30 )->[32]->( 33 34 )
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u269(11){ d94(bb 0 insn -1) }u270(13){ d114(bb 0 insn -1) }u271(25){ d334(bb 0 insn -1) }u272(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 229 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 229 230
;; live  kill	 14 [lr]
;; rd  in  	(37)
29, 54, 74, 93, 94, 113, 114, 305, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(3)
302, 2225, 2226
;; rd  kill	(21)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2225, 2226
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 302, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 219
;;      reg 143 { d2160(bb 30 insn 210) }
;;   UD chains for insn luid 1 uid 220
;;      reg 143 { d2160(bb 30 insn 210) }
;;      reg 229 { d2225(bb 32 insn 219) }
;;   UD chains for insn luid 2 uid 221
;;      reg 143 { d2160(bb 30 insn 210) }
;;   UD chains for insn luid 3 uid 222
;;      reg 167 { d2179(bb 2 insn 4) }
;;   UD chains for insn luid 4 uid 223
;;      reg 13 { d114(bb 0 insn -1) }
;;      reg 0 { d8(bb 32 insn 221) }
;;      reg 1 { d37(bb 32 insn 222) }
;;   UD chains for insn luid 5 uid 224
;;      reg 143 { d2160(bb 30 insn 210) }
;;   UD chains for insn luid 6 uid 225
;;      reg 230 { d2226(bb 32 insn 224) }
;;   UD chains for insn luid 7 uid 226
;;      reg 24 { d302(bb 32 insn 225) }

( 32 )->[33]->( 34 )
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u284(11){ d94(bb 0 insn -1) }u285(13){ d114(bb 0 insn -1) }u286(25){ d334(bb 0 insn -1) }u287(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(37)
29, 54, 74, 93, 94, 113, 114, 302, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 302, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 228
;;      reg 143 { d2160(bb 30 insn 210) }
;;   UD chains for insn luid 1 uid 229
;;      reg 167 { d2179(bb 2 insn 4) }
;;   UD chains for insn luid 2 uid 230
;;      reg 13 { d114(bb 0 insn -1) }
;;      reg 0 { d6(bb 33 insn 228) }
;;      reg 1 { d35(bb 33 insn 229) }

( 32 33 )->[34]->( 35 )
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u293(11){ d94(bb 0 insn -1) }u294(13){ d114(bb 0 insn -1) }u295(25){ d334(bb 0 insn -1) }u296(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(37)
29, 54, 74, 93, 94, 113, 114, 302, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 302, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 233
;;      reg 13 { d114(bb 0 insn -1) }

( 34 31 )->[35]->( 36 )
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u298(11){ d94(bb 0 insn -1) }u299(13){ d114(bb 0 insn -1) }u300(25){ d334(bb 0 insn -1) }u301(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; live  gen 	 142
;; live  kill	
;; rd  in  	(38)
29, 54, 74, 93, 94, 113, 114, 302, 305, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(1)
2158
;; rd  kill	(2)
2158, 2159
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 302, 305, 334, 335, 2157, 2158, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 236
;;      reg 142 { d2159(bb 28 insn 196) d2158(bb 35 insn 236) }

( 35 28 )->[36]->( 30 37 )
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u303(11){ d94(bb 0 insn -1) }u304(13){ d114(bb 0 insn -1) }u305(25){ d334(bb 0 insn -1) }u306(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 239
;; lr  def 	 24 [cc] 232
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  gen 	 24 [cc] 232
;; live  kill	
;; rd  in  	(40)
29, 54, 74, 93, 94, 113, 114, 133, 302, 305, 308, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(2)
299, 2227
;; rd  kill	(1)
2227
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(38)
29, 54, 74, 93, 94, 113, 114, 133, 299, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 241
;;      reg 239 { d2232(bb 28 insn 240) }
;;   UD chains for insn luid 1 uid 242
;;      reg 142 { d2159(bb 28 insn 196) d2158(bb 35 insn 236) }
;;      reg 232 { d2227(bb 36 insn 241) }
;;   UD chains for insn luid 2 uid 243
;;      reg 24 { d299(bb 36 insn 242) }

( 36 25 )->[37]->( 38 )
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u311(11){ d94(bb 0 insn -1) }u312(13){ d114(bb 0 insn -1) }u313(25){ d334(bb 0 insn -1) }u314(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 163
;; live  kill	
;; rd  in  	(88)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 299, 310, 334, 335, 2154, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232, 2233, 2234, 2235
;; rd  gen 	(1)
2177
;; rd  kill	(2)
2177, 2178
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(89)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 299, 310, 334, 335, 2154, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }

( 37 7 )->[38]->( 39 40 )
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u315(11){ d94(bb 0 insn -1) }u316(13){ d114(bb 0 insn -1) }u317(25){ d334(bb 0 insn -1) }u318(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 140 233 234 235 237
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 24 [cc] 137 140 233 234 235 237
;; live  kill	
;; rd  in  	(91)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 299, 310, 329, 334, 335, 2154, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232, 2233, 2234, 2235
;; rd  gen 	(7)
298, 2155, 2156, 2228, 2229, 2230, 2231
;; rd  kill	(6)
2155, 2156, 2228, 2229, 2230, 2231
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(95)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 1 uid 251
;;      reg 13 { d114(bb 0 insn -1) }
;;   UD chains for insn luid 2 uid 252
;;      reg 233 { d2228(bb 38 insn 251) }
;;   eq_note reg 13 { }
;;   UD chains for insn luid 3 uid 253
;;      reg 140 { d2156(bb 38 insn 252) }
;;   UD chains for insn luid 4 uid 254
;;      reg 234 { d2229(bb 38 insn 253) }
;;   UD chains for insn luid 5 uid 255
;;      reg 140 { d2156(bb 38 insn 252) }
;;      reg 235 { d2230(bb 38 insn 254) }
;;   UD chains for insn luid 7 uid 260
;;      reg 140 { d2156(bb 38 insn 252) }
;;   UD chains for insn luid 8 uid 261
;;      reg 137 { d2155(bb 38 insn 260) }
;;   UD chains for insn luid 9 uid 262
;;      reg 237 { d2231(bb 38 insn 261) }
;;   UD chains for insn luid 10 uid 263
;;      reg 24 { d298(bb 38 insn 262) }

( 38 )->[39]->( 40 )
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u330(11){ d94(bb 0 insn -1) }u331(13){ d114(bb 0 insn -1) }u332(25){ d334(bb 0 insn -1) }u333(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(95)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(94)
24, 26, 29, 54, 74, 93, 94, 113, 114, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 265
;;      reg 13 { d114(bb 0 insn -1) }

( 38 39 )->[40]->( 1 )
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u335(11){ d94(bb 0 insn -1) }u336(13){ d114(bb 0 insn -1) }u337(25){ d334(bb 0 insn -1) }u338(26){ d335(bb 0 insn -1) }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(95)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235
;; rd  gen 	(1)
2
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(93)
2, 54, 74, 93, 94, 113, 114, 133, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }
;;   reg 26 { d335(bb 0 insn -1) }
;;   UD chains for insn luid 0 uid 272
;;      reg 163 { d2178(bb 7 insn 36) d2177(bb 37 insn 246) }
;;   UD chains for insn luid 1 uid 278
;;      reg 0 { d2(bb 40 insn 272) }

( 40 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u341(0){ d2(bb 40 insn 272) }u342(11){ d94(bb 0 insn -1) }u343(13){ d114(bb 0 insn -1) }u344(14){ d133(bb 0 insn -1) }u345(25){ d334(bb 0 insn -1) }}
;; lr  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  use 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; lr  def 	
;; live  in  	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;; live  gen 	
;; live  kill	
;; rd  in  	(93)
2, 54, 74, 93, 94, 113, 114, 133, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(0)

;; lr  out 	
;; live  out 	
;; rd  out 	(93)
2, 54, 74, 93, 94, 113, 114, 133, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235
;;  UD chains for artificial uses
;;   reg 0 { d2(bb 40 insn 272) }
;;   reg 11 { d94(bb 0 insn -1) }
;;   reg 13 { d114(bb 0 insn -1) }
;;   reg 14 { d133(bb 0 insn -1) }
;;   reg 25 { d334(bb 0 insn -1) }

Finding needed instructions:
  Adding insn 18 to worklist
  Adding insn 14 to worklist
  Adding insn 13 to worklist
  Adding insn 20 to worklist
  Adding insn 27 to worklist
  Adding insn 23 to worklist
  Adding insn 29 to worklist
  Adding insn 31 to worklist
  Adding insn 289 to worklist
  Adding insn 291 to worklist
  Adding insn 63 to worklist
  Adding insn 58 to worklist
  Adding insn 71 to worklist
  Adding insn 67 to worklist
  Adding insn 83 to worklist
  Adding insn 75 to worklist
  Adding insn 91 to worklist
  Adding insn 88 to worklist
  Adding insn 85 to worklist
  Adding insn 293 to worklist
  Adding insn 95 to worklist
  Adding insn 106 to worklist
  Adding insn 109 to worklist
  Adding insn 112 to worklist
  Adding insn 120 to worklist
  Adding insn 295 to worklist
  Adding insn 140 to worklist
  Adding insn 136 to worklist
  Adding insn 148 to worklist
  Adding insn 152 to worklist
  Adding insn 155 to worklist
  Adding insn 158 to worklist
  Adding insn 166 to worklist
  Adding insn 298 to worklist
  Adding insn 178 to worklist
  Adding insn 194 to worklist
  Adding insn 300 to worklist
  Adding insn 205 to worklist
  Adding insn 212 to worklist
  Adding insn 208 to worklist
  Adding insn 302 to worklist
  Adding insn 214 to worklist
  Adding insn 226 to worklist
  Adding insn 223 to worklist
  Adding insn 220 to worklist
  Adding insn 230 to worklist
  Adding insn 233 to worklist
  Adding insn 243 to worklist
  Adding insn 263 to worklist
  Adding insn 260 to worklist
  Adding insn 256 to worklist
  Adding insn 255 to worklist
  Adding insn 249 to worklist
  Adding insn 265 to worklist
  Adding insn 278 to worklist
Finished finding needed instructions:
  Adding insn 272 to worklist
Processing use of (reg 163 [ ret ]) in insn 272:
  Adding insn 36 to worklist
  Adding insn 246 to worklist
Processing use of (reg 0 r0) in insn 278:
Processing use of (reg 13 sp) in insn 265:
Processing use of (reg 140 [ D.24829 ]) in insn 255:
  Adding insn 252 to worklist
Processing use of (reg 235) in insn 255:
  Adding insn 254 to worklist
Processing use of (reg 234 [ <variable>.preempt_count ]) in insn 254:
  Adding insn 253 to worklist
Processing use of (reg 140 [ D.24829 ]) in insn 253:
Processing use of (reg 233) in insn 252:
  Adding insn 251 to worklist
Processing use of (reg 13 sp) in insn 251:
Processing use of (reg 140 [ D.24829 ]) in insn 260:
Processing use of (reg 24 cc) in insn 263:
  Adding insn 262 to worklist
Processing use of (reg 237) in insn 262:
  Adding insn 261 to worklist
Processing use of (reg 137 [ D.24847 ]) in insn 261:
Processing use of (reg 24 cc) in insn 243:
  Adding insn 242 to worklist
Processing use of (reg 142 [ i ]) in insn 242:
  Adding insn 196 to worklist
  Adding insn 236 to worklist
Processing use of (reg 232 [ core_num_wrps ]) in insn 242:
  Adding insn 241 to worklist
Processing use of (reg 239) in insn 241:
  Adding insn 240 to worklist
Processing use of (reg 224) in insn 240:
  Adding insn 191 to worklist
Processing use of (reg 142 [ i ]) in insn 236:
Processing use of (reg 13 sp) in insn 233:
Processing use of (reg 13 sp) in insn 230:
Processing use of (reg 0 r0) in insn 230:
  Adding insn 228 to worklist
Processing use of (reg 1 r1) in insn 230:
  Adding insn 229 to worklist
Processing use of (reg 167 [ regs ]) in insn 229:
  Adding insn 4 to worklist
Processing use of (reg 2 r2) in insn 4:
Processing use of (reg 143 [ wp ]) in insn 228:
  Adding insn 210 to worklist
Processing use of (reg 141 [ D.24819 ]) in insn 210:
  Adding insn 190 to worklist
Processing use of (reg 142 [ i ]) in insn 210:
Processing use of (reg 144 [ __ptr ]) in insn 190:
  Adding insn 183 to worklist
Processing use of (reg 223) in insn 190:
  Adding insn 189 to worklist
Processing use of (reg 219) in insn 189:
  Adding insn 185 to worklist
Processing use of (reg 222 [ <variable>.cpu ]) in insn 189:
  Adding insn 188 to worklist
Processing use of (reg 220) in insn 188:
  Adding insn 187 to worklist
Processing use of (reg 221) in insn 187:
  Adding insn 186 to worklist
Processing use of (reg 13 sp) in insn 186:
Processing use of (reg 218) in insn 183:
  Adding insn 182 to worklist
Processing use of (reg 143 [ wp ]) in insn 220:
Processing use of (reg 229 [ <variable>.attr.D.4023.bp_addr ]) in insn 220:
  Adding insn 219 to worklist
Processing use of (reg 143 [ wp ]) in insn 219:
Processing use of (reg 13 sp) in insn 223:
Processing use of (reg 0 r0) in insn 223:
  Adding insn 221 to worklist
Processing use of (reg 1 r1) in insn 223:
  Adding insn 222 to worklist
Processing use of (reg 167 [ regs ]) in insn 222:
Processing use of (reg 143 [ wp ]) in insn 221:
Processing use of (reg 24 cc) in insn 226:
  Adding insn 225 to worklist
Processing use of (reg 230 [ <variable>.overflow_handler ]) in insn 225:
  Adding insn 224 to worklist
Processing use of (reg 143 [ wp ]) in insn 224:
Processing use of (reg 13 sp) in insn 214:
Processing use of (reg 13 sp) in insn 208:
Processing use of (reg 24 cc) in insn 212:
  Adding insn 211 to worklist
Processing use of (reg 143 [ wp ]) in insn 211:
Processing use of (reg 13 sp) in insn 205:
Processing use of (reg 0 r0) in insn 205:
  Adding insn 203 to worklist
Processing use of (reg 1 r1) in insn 205:
  Adding insn 204 to worklist
Processing use of (reg 24 cc) in insn 194:
  Adding insn 193 to worklist
Processing use of (reg 225 [ core_num_wrps ]) in insn 193:
  Adding insn 192 to worklist
Processing use of (reg 224) in insn 192:
Processing use of (reg 13 sp) in insn 178:
Processing use of (reg 0 r0) in insn 178:
  Adding insn 175 to worklist
Processing use of (reg 1 r1) in insn 178:
  Adding insn 176 to worklist
Processing use of (reg 2 r2) in insn 178:
  Adding insn 177 to worklist
Processing use of (reg 24 cc) in insn 166:
  Adding insn 165 to worklist
Processing use of (reg 158 [ i ]) in insn 165:
  Adding insn 132 to worklist
  Adding insn 159 to worklist
Processing use of (reg 213 [ core_num_reserved_brps ]) in insn 165:
  Adding insn 164 to worklist
Processing use of (reg 240) in insn 164:
  Adding insn 163 to worklist
Processing use of (reg 158 [ i ]) in insn 159:
Processing use of (reg 13 sp) in insn 158:
Processing use of (reg 13 sp) in insn 155:
Processing use of (reg 0 r0) in insn 155:
  Adding insn 154 to worklist
Processing use of (reg 157 [ wp ]) in insn 154:
  Adding insn 138 to worklist
Processing use of (reg 158 [ i ]) in insn 138:
Processing use of (reg 159 [ D.24759 ]) in insn 138:
  Adding insn 131 to worklist
Processing use of (reg 156 [ __ptr ]) in insn 131:
  Adding insn 124 to worklist
Processing use of (reg 204) in insn 131:
  Adding insn 130 to worklist
Processing use of (reg 200) in insn 130:
  Adding insn 126 to worklist
Processing use of (reg 203 [ <variable>.cpu ]) in insn 130:
  Adding insn 129 to worklist
Processing use of (reg 201) in insn 129:
  Adding insn 128 to worklist
Processing use of (reg 202) in insn 128:
  Adding insn 127 to worklist
Processing use of (reg 13 sp) in insn 127:
Processing use of (reg 199) in insn 124:
  Adding insn 123 to worklist
Processing use of (reg 24 cc) in insn 152:
  Adding insn 151 to worklist
Processing use of (reg 150 [ addr ]) in insn 151:
  Adding insn 50 to worklist
Processing use of (reg 211 [ <variable>.hw.D.22650.D.22649.info.trigger ]) in insn 151:
  Adding insn 150 to worklist
Processing use of (reg 157 [ wp ]) in insn 150:
Processing use of (reg 167 [ regs ]) in insn 50:
Processing use of (reg 24 cc) in insn 148:
  Adding insn 147 to worklist
Processing use of (reg 210) in insn 147:
  Adding insn 146 to worklist
Processing use of (reg 209) in insn 146:
  Adding insn 145 to worklist
Processing use of (subreg (reg 208) 0) in insn 145:
  Adding insn 144 to worklist
Processing use of (reg 207) in insn 144:
  Adding insn 142 to worklist
Processing use of (reg 157 [ wp ]) in insn 142:
Processing use of (reg 13 sp) in insn 136:
Processing use of (reg 24 cc) in insn 140:
  Adding insn 139 to worklist
Processing use of (reg 157 [ wp ]) in insn 139:
Processing use of (reg 24 cc) in insn 120:
  Adding insn 119 to worklist
Processing use of (reg 147 [ i ]) in insn 119:
  Adding insn 54 to worklist
  Adding insn 113 to worklist
Processing use of (reg 197 [ core_num_brps ]) in insn 119:
  Adding insn 118 to worklist
Processing use of (reg 241) in insn 118:
  Adding insn 117 to worklist
Processing use of (reg 147 [ i ]) in insn 113:
Processing use of (reg 13 sp) in insn 112:
Processing use of (reg 13 sp) in insn 109:
Processing use of (reg 0 r0) in insn 109:
  Adding insn 108 to worklist
Processing use of (reg 151 [ bp ]) in insn 108:
  Adding insn 61 to worklist
Processing use of (reg 146 [ D.24794 ]) in insn 61:
  Adding insn 49 to worklist
Processing use of (reg 147 [ i ]) in insn 61:
Processing use of (reg 152 [ __ptr ]) in insn 49:
  Adding insn 42 to worklist
Processing use of (reg 180) in insn 49:
  Adding insn 48 to worklist
Processing use of (reg 176) in insn 48:
  Adding insn 44 to worklist
Processing use of (reg 179 [ <variable>.cpu ]) in insn 48:
  Adding insn 47 to worklist
Processing use of (reg 177) in insn 47:
  Adding insn 46 to worklist
Processing use of (reg 178) in insn 46:
  Adding insn 45 to worklist
Processing use of (reg 13 sp) in insn 45:
Processing use of (reg 175) in insn 42:
  Adding insn 41 to worklist
Processing use of (reg 24 cc) in insn 106:
  Adding insn 105 to worklist
Processing use of (reg 195) in insn 105:
  Adding insn 104 to worklist
Processing use of (reg 194) in insn 104:
  Adding insn 103 to worklist
Processing use of (subreg (reg 193) 0) in insn 103:
  Adding insn 102 to worklist
Processing use of (reg 192) in insn 102:
  Adding insn 100 to worklist
Processing use of (reg 151 [ bp ]) in insn 100:
Processing use of (reg 13 sp) in insn 95:
Processing use of (reg 0 r0) in insn 95:
  Adding insn 93 to worklist
Processing use of (reg 1 r1) in insn 95:
  Adding insn 94 to worklist
Processing use of (reg 150 [ addr ]) in insn 94:
Processing use of (reg 151 [ bp ]) in insn 93:
Processing use of (reg 150 [ addr ]) in insn 85:
Processing use of (reg 151 [ bp ]) in insn 85:
Processing use of (reg 13 sp) in insn 88:
Processing use of (reg 0 r0) in insn 88:
  Adding insn 86 to worklist
Processing use of (reg 1 r1) in insn 88:
  Adding insn 87 to worklist
Processing use of (reg 167 [ regs ]) in insn 87:
Processing use of (reg 151 [ bp ]) in insn 86:
Processing use of (reg 24 cc) in insn 91:
  Adding insn 90 to worklist
Processing use of (reg 190 [ <variable>.overflow_handler ]) in insn 90:
  Adding insn 89 to worklist
Processing use of (reg 151 [ bp ]) in insn 89:
Processing use of (reg 13 sp) in insn 75:
Processing use of (reg 0 r0) in insn 75:
  Adding insn 74 to worklist
Processing use of (reg 186) in insn 74:
  Adding insn 73 to worklist
Processing use of (reg 147 [ i ]) in insn 73:
Processing use of (reg 24 cc) in insn 83:
  Adding insn 82 to worklist
Processing use of (reg 189) in insn 82:
  Adding insn 81 to worklist
Processing use of (reg 133 [ shifttmp.1031 ]) in insn 81:
  Adding insn 53 to worklist
Processing use of (reg 188) in insn 81:
  Adding insn 80 to worklist
Processing use of (subreg (reg 187) 0) in insn 80:
  Adding insn 79 to worklist
Processing use of (reg 148 [ ctrl_reg ]) in insn 79:
  Adding insn 76 to worklist
Processing use of (reg 0 r0) in insn 76:
Processing use of (reg 174) in insn 53:
  Adding insn 25 to worklist
Processing use of (reg 181) in insn 53:
  Adding insn 51 to worklist
Processing use of (reg 150 [ addr ]) in insn 51:
Processing use of (reg 173) in insn 25:
  Adding insn 24 to worklist
Processing use of (reg 162 [ dscr ]) in insn 24:
Processing use of (reg 13 sp) in insn 67:
Processing use of (reg 0 r0) in insn 67:
  Adding insn 66 to worklist
Processing use of (reg 184) in insn 66:
  Adding insn 65 to worklist
Processing use of (reg 147 [ i ]) in insn 65:
Processing use of (reg 24 cc) in insn 71:
  Adding insn 70 to worklist
Processing use of (reg 149 [ val ]) in insn 70:
  Adding insn 68 to worklist
Processing use of (reg 242) in insn 70:
  Adding insn 69 to worklist
Processing use of (reg 150 [ addr ]) in insn 69:
Processing use of (reg 0 r0) in insn 68:
Processing use of (reg 13 sp) in insn 58:
Processing use of (reg 24 cc) in insn 63:
  Adding insn 62 to worklist
Processing use of (reg 151 [ bp ]) in insn 62:
Processing use of (reg 24 cc) in insn 31:
  Adding insn 30 to worklist
Processing use of (reg 174) in insn 30:
Processing use of (reg 24 cc) in insn 29:
  Adding insn 28 to worklist
Processing use of (reg 174) in insn 28:
Processing use of (reg 24 cc) in insn 27:
  Adding insn 26 to worklist
Processing use of (reg 174) in insn 26:
Processing use of (reg 161 [ D.24724 ]) in insn 13:
  Adding insn 10 to worklist
Processing use of (reg 170) in insn 13:
  Adding insn 12 to worklist
Processing use of (reg 169 [ <variable>.preempt_count ]) in insn 12:
  Adding insn 11 to worklist
Processing use of (reg 161 [ D.24724 ]) in insn 11:
Processing use of (reg 168) in insn 10:
  Adding insn 9 to worklist
Processing use of (reg 13 sp) in insn 9:
Processing use of (reg 24 cc) in insn 18:
  Adding insn 17 to worklist
Processing use of (reg 171) in insn 17:
  Adding insn 16 to worklist
Processing use of (reg 172 [ <variable>.uregs+64 ]) in insn 16:
  Adding insn 15 to worklist
Processing use of (reg 167 [ regs ]) in insn 15:


hw_breakpoint_pending

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp] 25 [sfp] 26 [afp]
;;  regular block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  eh block artificial uses 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 11 [fp] 12 [ip] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;;  exit block uses 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={30d,14u} r1={25d,6u} r2={20d,2u} r3={19d} r11={1d,40u} r12={19d} r13={1d,63u,5d} r14={19d,1u} r15={18d} r16={18d} r17={18d} r18={18d} r19={18d} r20={18d} r21={18d} r22={18d} r23={18d} r24={38d,19u} r25={1d,40u} r26={1d,39u} r27={18d} r28={18d} r29={18d} r30={18d} r31={18d} r32={18d} r33={18d} r34={18d} r35={18d} r36={18d} r37={18d} r38={18d} r39={18d} r40={18d} r41={18d} r42={18d} r43={18d} r44={18d} r45={18d} r46={18d} r47={18d} r48={18d} r49={18d} r50={18d} r51={18d} r52={18d} r53={18d} r54={18d} r55={18d} r56={18d} r57={18d} r58={18d} r59={18d} r60={18d} r61={18d} r62={18d} r63={18d} r64={18d} r65={18d} r66={18d} r67={18d} r68={18d} r69={18d} r70={18d} r71={18d} r72={18d} r73={18d} r74={18d} r75={18d} r76={18d} r77={18d} r78={18d} r79={18d} r80={18d} r81={18d} r82={18d} r83={18d} r84={18d} r85={18d} r86={18d} r87={18d} r88={18d} r89={18d} r90={18d} r91={18d} r92={18d} r93={18d} r94={18d} r95={18d} r96={18d} r97={18d} r98={18d} r99={18d} r100={18d} r101={18d} r102={18d} r103={18d} r104={18d} r105={18d} r106={18d} r107={18d} r108={18d} r109={18d} r110={18d} r111={18d} r112={18d} r113={18d} r114={18d} r115={18d} r116={18d} r117={18d} r118={18d} r119={18d} r120={18d} r121={18d} r122={18d} r123={18d} r124={18d} r125={18d} r126={18d} r127={18d} r133={1d,1u} r137={1d,1u} r140={1d,3u} r141={1d,1u} r142={2d,3u} r143={1d,6u} r144={1d,1u} r146={1d,1u} r147={2d,5u} r148={1d,1u} r149={1d,1u} r150={1d,5u} r151={1d,7u} r152={1d,1u} r156={1d,1u} r157={1d,4u} r158={2d,3u} r159={1d,1u} r161={1d,2u} r162={1d,1u} r163={2d,1u} r167={1d,5u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,4u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u,1d} r180={1d,1u} r181={1d,1u} r184={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r197={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u,1d} r204={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u} r210={1d,1u} r211={1d,1u} r213={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u,1d} r223={1d,1u} r224={1d,2u} r225={1d,1u} r229={1d,1u} r230={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r237={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} 
;;    total ref usage 2583{2236d,339u,8e} in 172{154 regular + 18 call} insns.
;; Reaching defs:

  sparse invalidated 	24
  dense invalidated 	
0[0,30] 1[30,25] 2[55,20] 3[75,19] 11[94,1] 12[95,19] 13[114,1] 14[115,19] 15[134,18] 16[152,18] 17[170,18] 18[188,18] 19[206,18] 20[224,18] 21[242,18] 22[260,18] 23[278,18] 24[296,38] 25[334,1] 26[335,1] 27[336,18] 28[354,18] 29[372,18] 30[390,18] 31[408,18] 32[426,18] 33[444,18] 34[462,18] 35[480,18] 36[498,18] 37[516,18] 38[534,18] 39[552,18] 40[570,18] 41[588,18] 42[606,18] 43[624,18] 44[642,18] 45[660,18] 46[678,18] 47[696,18] 48[714,18] 49[732,18] 50[750,18] 51[768,18] 52[786,18] 53[804,18] 54[822,18] 55[840,18] 56[858,18] 57[876,18] 58[894,18] 59[912,18] 60[930,18] 61[948,18] 62[966,18] 63[984,18] 64[1002,18] 65[1020,18] 66[1038,18] 67[1056,18] 68[1074,18] 69[1092,18] 70[1110,18] 71[1128,18] 72[1146,18] 73[1164,18] 74[1182,18] 75[1200,18] 76[1218,18] 77[1236,18] 78[1254,18] 79[1272,18] 80[1290,18] 81[1308,18] 82[1326,18] 83[1344,18] 84[1362,18] 85[1380,18] 86[1398,18] 87[1416,18] 88[1434,18] 89[1452,18] 90[1470,18] 91[1488,18] 92[1506,18] 93[1524,18] 94[1542,18] 95[1560,18] 96[1578,18] 97[1596,18] 98[1614,18] 99[1632,18] 100[1650,18] 101[1668,18] 102[1686,18] 103[1704,18] 104[1722,18] 105[1740,18] 106[1758,18] 107[1776,18] 108[1794,18] 109[1812,18] 110[1830,18] 111[1848,18] 112[1866,18] 113[1884,18] 114[1902,18] 115[1920,18] 116[1938,18] 117[1956,18] 118[1974,18] 119[1992,18] 120[2010,18] 121[2028,18] 122[2046,18] 123[2064,18] 124[2082,18] 125[2100,18] 126[2118,18] 127[2136,18] 133[2154,1] 137[2155,1] 140[2156,1] 141[2157,1] 142[2158,2] 143[2160,1] 144[2161,1] 146[2162,1] 147[2163,2] 148[2165,1] 149[2166,1] 150[2167,1] 151[2168,1] 152[2169,1] 156[2170,1] 157[2171,1] 158[2172,2] 159[2174,1] 161[2175,1] 162[2176,1] 163[2177,2] 167[2179,1] 168[2180,1] 169[2181,1] 170[2182,1] 171[2183,1] 172[2184,1] 173[2185,1] 174[2186,1] 175[2187,1] 176[2188,1] 177[2189,1] 178[2190,1] 179[2191,1] 180[2192,1] 181[2193,1] 184[2194,1] 186[2195,1] 187[2196,1] 188[2197,1] 189[2198,1] 190[2199,1] 192[2200,1] 193[2201,1] 194[2202,1] 195[2203,1] 197[2204,1] 199[2205,1] 200[2206,1] 201[2207,1] 202[2208,1] 203[2209,1] 204[2210,1] 207[2211,1] 208[2212,1] 209[2213,1] 210[2214,1] 211[2215,1] 213[2216,1] 218[2217,1] 219[2218,1] 220[2219,1] 221[2220,1] 222[2221,1] 223[2222,1] 224[2223,1] 225[2224,1] 229[2225,1] 230[2226,1] 232[2227,1] 233[2228,1] 234[2229,1] 235[2230,1] 237[2231,1] 239[2232,1] 240[2233,1] 241[2234,1] 242[2235,1] 
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u0(11){ }u1(13){ }u2(25){ }u3(26){ }}
;; lr  in  	 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 2 [r2] 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 161 167 168 169 170 171 172
;; live  in  	 2 [r2] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 24 [cc] 161 167 168 169 170 171 172
;; live  kill	
;; rd  in  	(10)
29, 54, 74, 93, 94, 113, 114, 133, 334, 335
;; rd  gen 	(8)
333, 2175, 2179, 2180, 2181, 2182, 2183, 2184
;; rd  kill	(7)
2175, 2179, 2180, 2181, 2182, 2183, 2184

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 4 6 5 2 arch/arm/kernel/hw_breakpoint.c:803 (set (reg/v/f:SI 167 [ regs ])
        (reg:SI 2 r2 [ regs ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [ regs ])
        (nil)))

(note 5 4 9 2 NOTE_INSN_FUNCTION_BEG)

(insn 9 5 10 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 168)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 10 9 11 2 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 161 [ D.24724 ])
        (and:SI (reg:SI 168)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 168)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 11 10 12 2 arch/arm/kernel/hw_breakpoint.c:807 (set (reg:SI 169 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 161 [ D.24724 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 13 2 arch/arm/kernel/hw_breakpoint.c:807 (set (reg:SI 170)
        (plus:SI (reg:SI 169 [ <variable>.preempt_count ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 169 [ <variable>.preempt_count ])
        (nil)))

(insn 13 12 14 2 arch/arm/kernel/hw_breakpoint.c:807 (set (mem/s/j:SI (plus:SI (reg/f:SI 161 [ D.24724 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 170)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 170)
        (expr_list:REG_DEAD (reg/f:SI 161 [ D.24724 ])
            (nil))))

(insn 14 13 15 2 arch/arm/kernel/hw_breakpoint.c:807 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8170006)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 15 14 16 2 arch/arm/kernel/hw_breakpoint.c:809 (set (reg:SI 172 [ <variable>.uregs+64 ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 167 [ regs ])
                (const_int 64 [0x40])) [0 <variable>.uregs+64 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 2 arch/arm/kernel/hw_breakpoint.c:809 (set (reg:SI 171)
        (and:SI (reg:SI 172 [ <variable>.uregs+64 ])
            (const_int 128 [0x80]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 172 [ <variable>.uregs+64 ])
        (nil)))

(insn 17 16 18 2 arch/arm/kernel/hw_breakpoint.c:809 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 171)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 171)
        (nil)))

(jump_insn 18 17 19 2 arch/arm/kernel/hw_breakpoint.c:809 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; rd  out 	(18)
29, 54, 74, 93, 94, 113, 114, 133, 333, 334, 335, 2175, 2179, 2180, 2181, 2182, 2183, 2184


;; Succ edge  3 [50.0%]  (fallthru)
;; Succ edge  4 [50.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u16(11){ }u17(13){ }u18(25){ }u19(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  gen 	
;; live  kill	 24 [cc]
;; rd  in  	(18)
29, 54, 74, 93, 94, 113, 114, 133, 333, 334, 335, 2175, 2179, 2180, 2181, 2182, 2183, 2184
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  2 [50.0%]  (fallthru)
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 3 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/irqflags.h:26 (parallel [
            (asm_operands/v ("	cpsie i			@ arch_local_irq_enable") ("") 0 []
                 [] 987086)
            (clobber (reg:QI 24 cc))
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (expr_list:REG_UNUSED (reg:QI 24 cc)
        (nil)))
;; End of basic block 3 -> ( 4)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; rd  out 	(17)
29, 54, 74, 93, 94, 113, 114, 133, 334, 335, 2175, 2179, 2180, 2181, 2182, 2183, 2184


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u20(11){ }u21(13){ }u22(25){ }u23(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 162 173 174
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  gen 	 24 [cc] 162 173 174
;; live  kill	
;; rd  in  	(18)
29, 54, 74, 93, 94, 113, 114, 133, 333, 334, 335, 2175, 2179, 2180, 2181, 2182, 2183, 2184
;; rd  gen 	(4)
331, 2176, 2185, 2186
;; rd  kill	(3)
2176, 2185, 2186

;; Pred edge  2 [50.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 21 20 22 4 326 "" [1 uses])

(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 4 arch/arm/kernel/hw_breakpoint.c:813 (set (reg/v:SI 162 [ dscr ])
        (asm_operands/v:SI ("mrc p14, 0, %0, c0,c1, 0") ("=r") 0 []
             [] 8170774)) -1 (nil))

(insn 24 23 25 4 arch/arm/kernel/hw_breakpoint.c:816 (set (reg:SI 173)
        (lshiftrt:SI (reg/v:SI 162 [ dscr ])
            (const_int 2 [0x2]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 162 [ dscr ])
        (nil)))

(insn 25 24 26 4 arch/arm/kernel/hw_breakpoint.c:816 (set (reg:SI 174)
        (and:SI (reg:SI 173)
            (const_int 15 [0xf]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 173)
        (nil)))

(insn 26 25 27 4 arch/arm/kernel/hw_breakpoint.c:816 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 27 26 280 4 arch/arm/kernel/hw_breakpoint.c:816 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 170)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 4 -> ( 26 5)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; rd  out 	(21)
29, 54, 74, 93, 94, 113, 114, 133, 331, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186


;; Succ edge  26 [29.0%] 
;; Succ edge  5 [71.0%]  (fallthru)

;; Start of basic block ( 4) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u28(11){ }u29(13){ }u30(25){ }u31(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
29, 54, 74, 93, 94, 113, 114, 133, 331, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(1)
330
;; rd  kill	(0)


;; Pred edge  4 [71.0%]  (fallthru)
(note 280 27 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 28 280 29 5 arch/arm/kernel/hw_breakpoint.c:816 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 10 [0xa]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 29 28 281 5 arch/arm/kernel/hw_breakpoint.c:816 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 179)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 5 -> ( 27 6)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; rd  out 	(21)
29, 54, 74, 93, 94, 113, 114, 133, 330, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186


;; Succ edge  27 [29.0%] 
;; Succ edge  6 [71.0%]  (fallthru)

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u34(11){ }u35(13){ }u36(25){ }u37(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 174
;; lr  def 	 24 [cc]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  gen 	 24 [cc]
;; live  kill	
;; rd  in  	(21)
29, 54, 74, 93, 94, 113, 114, 133, 330, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(1)
329
;; rd  kill	(0)


;; Pred edge  5 [71.0%]  (fallthru)
(note 281 29 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 30 281 31 6 arch/arm/kernel/hw_breakpoint.c:816 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 174)
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 31 30 35 6 arch/arm/kernel/hw_breakpoint.c:816 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 6 -> ( 8 7)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; rd  out 	(21)
29, 54, 74, 93, 94, 113, 114, 133, 329, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186


;; Succ edge  8 [29.0%] 
;; Succ edge  7 [71.0%]  (fallthru)

;; Start of basic block ( 6) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u40(11){ }u41(13){ }u42(25){ }u43(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 163
;; live  kill	
;; rd  in  	(21)
29, 54, 74, 93, 94, 113, 114, 133, 329, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(1)
2178
;; rd  kill	(2)
2177, 2178

;; Pred edge  6 [71.0%]  (fallthru)
(note 35 31 36 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 36 35 289 7 arch/arm/kernel/hw_breakpoint.c:826 (set (reg/v:SI 163 [ ret ])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(jump_insn 289 36 290 7 (set (pc)
        (label_ref 247)) -1 (nil))
;; End of basic block 7 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(22)
29, 54, 74, 93, 94, 113, 114, 133, 329, 334, 335, 2175, 2176, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186


;; Succ edge  38 [100.0%] 

(barrier 290 289 39)

;; Start of basic block ( 6) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u44(11){ }u45(13){ }u46(25){ }u47(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167 174
;; lr  def 	 133 146 147 150 152 175 176 177 178 179 180 181 241 242
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167 174
;; live  gen 	 133 146 147 150 152 175 176 177 178 179 180 181 241 242
;; live  kill	
;; rd  in  	(21)
29, 54, 74, 93, 94, 113, 114, 133, 329, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(14)
2154, 2162, 2164, 2167, 2169, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2234, 2235
;; rd  kill	(15)
2154, 2162, 2163, 2164, 2167, 2169, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2234, 2235

;; Pred edge  6 [29.0%] 
(code_label 39 290 40 8 328 "" [1 uses])

(note 40 39 41 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg/f:SI 175)
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 42 41 44 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg/v:SI 152 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 175)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8162996)) -1 (expr_list:REG_DEAD (reg/f:SI 175)
        (nil)))

(insn 44 42 45 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg/f:SI 176)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 45 44 46 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 178)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 46 45 47 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 177)
        (and:SI (reg:SI 178)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 178)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 47 46 48 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 179 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 177)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 177)
        (nil)))

(insn 48 47 49 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 180)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 179 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 176)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 179 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 176)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 179 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 49 48 50 8 arch/arm/kernel/hw_breakpoint.c:752 (set (reg:SI 146 [ D.24794 ])
        (plus:SI (reg/v:SI 152 [ __ptr ])
            (reg:SI 180))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 180)
        (expr_list:REG_DEAD (reg/v:SI 152 [ __ptr ])
            (nil))))

(insn 50 49 51 8 arch/arm/kernel/hw_breakpoint.c:755 (set (reg/v:SI 150 [ addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 167 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 51 50 53 8 arch/arm/kernel/hw_breakpoint.c:755 (set (reg:SI 181)
        (and:SI (reg/v:SI 150 [ addr ])
            (const_int 3 [0x3]))) 67 {*arm_andsi3_insn} (nil))

(insn 53 51 54 8 arch/arm/kernel/hw_breakpoint.c:755 (set (reg:SI 133 [ shifttmp.1031 ])
        (ashift:SI (reg:SI 174)
            (reg:SI 181))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg:SI 181)
        (expr_list:REG_DEAD (reg:SI 174)
            (nil))))

(insn 54 53 117 8 arch/arm/kernel/hw_breakpoint.c:758 (set (reg/v:SI 147 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 117 54 69 8 arch/arm/kernel/hw_breakpoint.c:758 discrim 1 (set (reg/f:SI 241)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 69 117 291 8 arch/arm/kernel/hw_breakpoint.c:770 (set (reg:SI 242)
        (and:SI (reg/v:SI 150 [ addr ])
            (const_int -4 [0xfffffffffffffffc]))) 67 {*arm_andsi3_insn} (nil))

(jump_insn 291 69 292 8 (set (pc)
        (label_ref 114)) -1 (nil))
;; End of basic block 8 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; rd  out 	(35)
29, 54, 74, 93, 94, 113, 114, 133, 329, 334, 335, 2154, 2162, 2164, 2167, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2234, 2235


;; Succ edge  17 [100.0%] 

(barrier 292 291 116)

;; Start of basic block ( 17) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u63(11){ }u64(13){ }u65(25){ }u66(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 146 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 151
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  gen 	 24 [cc] 151
;; live  kill	 14 [lr]
;; rd  in  	(52)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 317, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(2)
327, 2168
;; rd  kill	(20)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2168

;; Pred edge  17 [91.0%] 
(code_label 116 292 57 9 335 "" [1 uses])

(note 57 116 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(call_insn 58 57 61 9 include/linux/rcupdate.h:592 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_lock") [flags 0x41] <function_decl 0x10ce8580 __rcu_read_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 61 58 62 9 arch/arm/kernel/hw_breakpoint.c:761 (set (reg/v/f:SI 151 [ bp ])
        (mem/f:SI (plus:SI (mult:SI (reg/v:SI 147 [ i ])
                    (const_int 4 [0x4]))
                (reg:SI 146 [ D.24794 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 62 61 63 9 arch/arm/kernel/hw_breakpoint.c:763 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 151 [ bp ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 63 62 64 9 arch/arm/kernel/hw_breakpoint.c:763 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3017 [0xbc9])
            (nil))))
;; End of basic block 9 -> ( 16 10)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; rd  out 	(51)
24, 26, 29, 54, 74, 93, 94, 113, 114, 327, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235


;; Succ edge  16 [30.2%] 
;; Succ edge  10 [69.8%]  (fallthru)

;; Start of basic block ( 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u73(11){ }u74(13){ }u75(25){ }u76(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 242
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 149 184
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 0 [r0] 24 [cc] 149 184
;; live  kill	 14 [lr]
;; rd  in  	(51)
24, 26, 29, 54, 74, 93, 94, 113, 114, 327, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(4)
26, 296, 2166, 2194
;; rd  kill	(51)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2166, 2194

;; Pred edge  9 [69.8%]  (fallthru)
(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 65 64 66 10 arch/arm/kernel/hw_breakpoint.c:769 (set (reg:SI 184)
        (plus:SI (reg/v:SI 147 [ i ])
            (const_int 64 [0x40]))) 4 {*arm_addsi3} (nil))

(insn 66 65 67 10 arch/arm/kernel/hw_breakpoint.c:769 (set (reg:SI 0 r0)
        (reg:SI 184)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 184)
        (nil)))

(call_insn 67 66 68 10 arch/arm/kernel/hw_breakpoint.c:769 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("read_wb_reg") [flags 0x3] <function_decl 0x113d8280 read_wb_reg>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 68 67 70 10 arch/arm/kernel/hw_breakpoint.c:769 (set (reg/v:SI 149 [ val ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 70 68 71 10 arch/arm/kernel/hw_breakpoint.c:770 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 149 [ val ])
            (reg:SI 242))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 149 [ val ])
        (nil)))

(jump_insn 71 70 72 10 arch/arm/kernel/hw_breakpoint.c:770 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8629 [0x21b5])
            (nil))))
;; End of basic block 10 -> ( 14 11)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; rd  out 	(49)
26, 54, 74, 93, 94, 113, 114, 296, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235


;; Succ edge  14 [86.3%] 
;; Succ edge  11 [13.7%]  (fallthru)

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u85(11){ }u86(13){ }u87(25){ }u88(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 148 186 187 188 189
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 0 [r0] 24 [cc] 148 186 187 188 189
;; live  kill	 14 [lr]
;; rd  in  	(49)
26, 54, 74, 93, 94, 113, 114, 296, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(7)
24, 324, 2165, 2195, 2196, 2197, 2198
;; rd  kill	(54)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2165, 2195, 2196, 2197, 2198

;; Pred edge  10 [13.7%]  (fallthru)
(note 72 71 73 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 73 72 74 11 arch/arm/kernel/hw_breakpoint.c:774 (set (reg:SI 186)
        (plus:SI (reg/v:SI 147 [ i ])
            (const_int 80 [0x50]))) 4 {*arm_addsi3} (nil))

(insn 74 73 75 11 arch/arm/kernel/hw_breakpoint.c:774 (set (reg:SI 0 r0)
        (reg:SI 186)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 186)
        (nil)))

(call_insn 75 74 76 11 arch/arm/kernel/hw_breakpoint.c:774 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("read_wb_reg") [flags 0x3] <function_decl 0x113d8280 read_wb_reg>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 76 75 79 11 arch/arm/kernel/hw_breakpoint.c:774 (set (reg/v:SI 148 [ ctrl_reg ])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 79 76 80 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (reg:SI 187)
        (lshiftrt:SI (reg/v:SI 148 [ ctrl_reg ])
            (const_int 5 [0x5]))) 117 {*arm_shiftsi3} (expr_list:REG_DEAD (reg/v:SI 148 [ ctrl_reg ])
        (nil)))

(insn 80 79 81 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (reg:SI 188)
        (zero_extend:SI (subreg:QI (reg:SI 187) 0))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:SI 187)
        (nil)))

(insn 81 80 82 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (reg:SI 189)
        (and:SI (reg:SI 188)
            (reg:SI 133 [ shifttmp.1031 ]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 188)
        (nil)))

(insn 82 81 83 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 189)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 189)
        (nil)))

(jump_insn 83 82 84 11 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/hw_breakpoint.h:41 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 98)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 11 -> ( 12 14)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; rd  out 	(49)
24, 54, 74, 93, 94, 113, 114, 324, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235


;; Succ edge  12 [29.0%]  (fallthru)
;; Succ edge  14 [71.0%] 

;; Start of basic block ( 11) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u100(11){ }u101(13){ }u102(25){ }u103(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 190
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 190
;; live  kill	 14 [lr]
;; rd  in  	(49)
24, 54, 74, 93, 94, 113, 114, 324, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(2)
322, 2199
;; rd  kill	(20)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2199

;; Pred edge  11 [29.0%]  (fallthru)
(note 84 83 85 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 85 84 86 12 arch/arm/kernel/hw_breakpoint.c:777 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 151 [ bp ])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
        (reg/v:SI 150 [ addr ])) 167 {*arm_movsi_insn} (nil))

(insn 86 85 87 12 arch/arm/kernel/hw_breakpoint.c:779 (set (reg:SI 0 r0)
        (reg/v/f:SI 151 [ bp ])) 167 {*arm_movsi_insn} (nil))

(insn 87 86 88 12 arch/arm/kernel/hw_breakpoint.c:779 (set (reg:SI 1 r1)
        (reg/v/f:SI 167 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 88 87 89 12 arch/arm/kernel/hw_breakpoint.c:779 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_bp_event") [flags 0x41] <function_decl 0x113b1280 perf_bp_event>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 89 88 90 12 arch/arm/kernel/hw_breakpoint.c:780 (set (reg/f:SI 190 [ <variable>.overflow_handler ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 151 [ bp ])
                (const_int 528 [0x210])) [0 <variable>.overflow_handler+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 90 89 91 12 arch/arm/kernel/hw_breakpoint.c:780 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 190 [ <variable>.overflow_handler ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 190 [ <variable>.overflow_handler ])
        (nil)))

(jump_insn 91 90 92 12 arch/arm/kernel/hw_breakpoint.c:780 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
            (nil))))
;; End of basic block 12 -> ( 13 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; rd  out 	(49)
24, 54, 74, 93, 94, 113, 114, 322, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235


;; Succ edge  13 [6.7%]  (fallthru)
;; Succ edge  16 [93.3%] 

;; Start of basic block ( 12) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u114(11){ }u115(13){ }u116(25){ }u117(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(49)
24, 54, 74, 93, 94, 113, 114, 322, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133

;; Pred edge  12 [6.7%]  (fallthru)
(note 92 91 93 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 93 92 94 13 arch/arm/kernel/hw_breakpoint.c:781 (set (reg:SI 0 r0)
        (reg/v/f:SI 151 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 151 [ bp ])
        (nil)))

(insn 94 93 95 13 arch/arm/kernel/hw_breakpoint.c:781 (set (reg:SI 1 r1)
        (reg/v:SI 150 [ addr ])) 167 {*arm_movsi_insn} (nil))

(call_insn 95 94 293 13 arch/arm/kernel/hw_breakpoint.c:781 (parallel [
            (call (mem:SI (symbol_ref:SI ("enable_single_step") [flags 0x3] <function_decl 0x1141a780 enable_single_step>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 293 95 294 13 (set (pc)
        (label_ref 110)) -1 (nil))
;; End of basic block 13 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; rd  out 	(49)
24, 54, 74, 93, 94, 113, 114, 322, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235


;; Succ edge  16 [100.0%] 

(barrier 294 293 98)

;; Start of basic block ( 10 11) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u123(11){ }u124(13){ }u125(25){ }u126(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 24 [cc] 192 193 194 195
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 24 [cc] 192 193 194 195
;; live  kill	
;; rd  in  	(51)
24, 26, 54, 74, 93, 94, 113, 114, 296, 324, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(5)
320, 2200, 2201, 2202, 2203
;; rd  kill	(4)
2200, 2201, 2202, 2203

;; Pred edge  10 [86.3%] 
;; Pred edge  11 [71.0%] 
(code_label 98 294 99 14 334 ("mismatch") [2 uses])

(note 99 98 100 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 100 99 102 14 arch/arm/kernel/hw_breakpoint.c:787 (set (reg:SI 192)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 151 [ bp ])
                    (const_int 211 [0xd3])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 102 100 103 14 arch/arm/kernel/hw_breakpoint.c:787 (set (reg:SI 193)
        (and:SI (reg:SI 192)
            (const_int -128 [0xffffffffffffff80]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 192)
        (nil)))

(insn 103 102 104 14 arch/arm/kernel/hw_breakpoint.c:787 (set (reg:QI 194)
        (subreg:QI (reg:SI 193) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 193)
        (nil)))

(insn 104 103 105 14 arch/arm/kernel/hw_breakpoint.c:787 (set (reg:SI 195)
        (zero_extend:SI (reg:QI 194))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 194)
        (nil)))

(insn 105 104 106 14 arch/arm/kernel/hw_breakpoint.c:787 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 195)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 195)
        (nil)))

(jump_insn 106 105 107 14 arch/arm/kernel/hw_breakpoint.c:787 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 14 -> ( 15 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; rd  out 	(50)
24, 26, 54, 74, 93, 94, 113, 114, 320, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235


;; Succ edge  15 [29.0%]  (fallthru)
;; Succ edge  16 [71.0%] 

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u133(11){ }u134(13){ }u135(25){ }u136(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 151
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 151 167 241 242
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(50)
24, 26, 54, 74, 93, 94, 113, 114, 320, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133

;; Pred edge  14 [29.0%]  (fallthru)
(note 107 106 108 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 108 107 109 15 arch/arm/kernel/hw_breakpoint.c:788 (set (reg:SI 0 r0)
        (reg/v/f:SI 151 [ bp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 151 [ bp ])
        (nil)))

(call_insn 109 108 110 15 arch/arm/kernel/hw_breakpoint.c:788 (parallel [
            (call (mem:SI (symbol_ref:SI ("disable_single_step") [flags 0x3] <function_decl 0x1141a880 disable_single_step>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 15 -> ( 16)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; rd  out 	(50)
24, 26, 54, 74, 93, 94, 113, 114, 320, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235


;; Succ edge  16 [100.0%]  (fallthru)

;; Start of basic block ( 9 12 15 14 13) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u140(11){ }u141(13){ }u142(25){ }u143(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 147
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  gen 	 147
;; live  kill	 14 [lr]
;; rd  in  	(53)
24, 26, 29, 54, 74, 93, 94, 113, 114, 320, 322, 327, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(1)
2163
;; rd  kill	(21)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2163, 2164

;; Pred edge  9 [30.2%] 
;; Pred edge  12 [93.3%] 
;; Pred edge  15 [100.0%]  (fallthru)
;; Pred edge  14 [71.0%] 
;; Pred edge  13 [100.0%] 
(code_label 110 109 111 16 333 "" [4 uses])

(note 111 110 112 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(call_insn 112 111 113 16 include/linux/rcupdate.h:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_unlock") [flags 0x41] <function_decl 0x10ce8600 __rcu_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 113 112 114 16 arch/arm/kernel/hw_breakpoint.c:758 (set (reg/v:SI 147 [ i ])
        (plus:SI (reg/v:SI 147 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 16 -> ( 17)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; rd  out 	(52)
24, 26, 29, 54, 74, 93, 94, 113, 114, 320, 322, 327, 334, 335, 2154, 2162, 2163, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235


;; Succ edge  17 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 16 8) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u146(11){ }u147(13){ }u148(25){ }u149(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 147 241
;; lr  def 	 24 [cc] 197
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  gen 	 24 [cc] 197
;; live  kill	
;; rd  in  	(55)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 320, 322, 327, 329, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(2)
317, 2204
;; rd  kill	(1)
2204

;; Pred edge  16 [100.0%]  (fallthru,dfs_back)
;; Pred edge  8 [100.0%] 
(code_label 114 113 115 17 332 "" [1 uses])

(note 115 114 118 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 118 115 119 17 arch/arm/kernel/hw_breakpoint.c:758 discrim 1 (set (reg:SI 197 [ core_num_brps ])
        (mem/c/i:SI (plus:SI (reg/f:SI 241)
                (const_int 8 [0x8])) [0 core_num_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 core_num_brps+0 S4 A32])
        (nil)))

(insn 119 118 120 17 arch/arm/kernel/hw_breakpoint.c:758 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 147 [ i ])
            (reg:SI 197 [ core_num_brps ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 197 [ core_num_brps ])
        (nil)))

(jump_insn 120 119 121 17 arch/arm/kernel/hw_breakpoint.c:758 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 116)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 17 -> ( 9 18)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 133 146 147 150 167 241 242
;; rd  out 	(52)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 317, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235


;; Succ edge  9 [91.0%] 
;; Succ edge  18 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 17) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u154(11){ }u155(13){ }u156(25){ }u157(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 156 158 159 199 200 201 202 203 204 240
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150
;; live  gen 	 156 158 159 199 200 201 202 203 204 240
;; live  kill	
;; rd  in  	(52)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 317, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2234, 2235
;; rd  gen 	(10)
2170, 2173, 2174, 2205, 2206, 2207, 2208, 2209, 2210, 2233
;; rd  kill	(11)
2170, 2172, 2173, 2174, 2205, 2206, 2207, 2208, 2209, 2210, 2233

;; Pred edge  17 [9.0%]  (fallthru,loop_exit)
(note 121 120 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 123 121 124 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg/f:SI 199)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))
        (nil)))

(insn 124 123 126 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg/v:SI 156 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 199)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8158644)) -1 (expr_list:REG_DEAD (reg/f:SI 199)
        (nil)))

(insn 126 124 127 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg/f:SI 200)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 127 126 128 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 202)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 128 127 129 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 201)
        (and:SI (reg:SI 202)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 202)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 129 128 130 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 203 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 201)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 201)
        (nil)))

(insn 130 129 131 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 204)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 203 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 200)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 203 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 200)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 203 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 131 130 132 18 arch/arm/kernel/hw_breakpoint.c:718 (set (reg:SI 159 [ D.24759 ])
        (plus:SI (reg/v:SI 156 [ __ptr ])
            (reg:SI 204))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 204)
        (expr_list:REG_DEAD (reg/v:SI 156 [ __ptr ])
            (nil))))

(insn 132 131 163 18 arch/arm/kernel/hw_breakpoint.c:720 (set (reg/v:SI 158 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 163 132 295 18 arch/arm/kernel/hw_breakpoint.c:720 discrim 1 (set (reg/f:SI 240)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(jump_insn 295 163 296 18 (set (pc)
        (label_ref 160)) -1 (nil))
;; End of basic block 18 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; rd  out 	(62)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 317, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2233, 2234, 2235


;; Succ edge  24 [100.0%] 

(barrier 296 295 162)

;; Start of basic block ( 24) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u168(11){ }u169(13){ }u170(25){ }u171(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 159
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 157
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; live  gen 	 24 [cc] 157
;; live  kill	 14 [lr]
;; rd  in  	(70)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 310, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(2)
315, 2171
;; rd  kill	(20)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2171

;; Pred edge  24 [91.0%] 
(code_label 162 296 135 19 338 "" [1 uses])

(note 135 162 136 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(call_insn 136 135 138 19 include/linux/rcupdate.h:592 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_lock") [flags 0x41] <function_decl 0x10ce8580 __rcu_read_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 138 136 139 19 arch/arm/kernel/hw_breakpoint.c:723 (set (reg/v/f:SI 157 [ wp ])
        (mem/f:SI (plus:SI (mult:SI (reg/v:SI 158 [ i ])
                    (const_int 4 [0x4]))
                (reg:SI 159 [ D.24759 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 139 138 140 19 arch/arm/kernel/hw_breakpoint.c:725 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 157 [ wp ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 140 139 141 19 arch/arm/kernel/hw_breakpoint.c:725 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 19 -> ( 23 20)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; rd  out 	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 315, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235


;; Succ edge  23 [15.0%] 
;; Succ edge  20 [85.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u178(11){ }u179(13){ }u180(25){ }u181(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 24 [cc] 207 208 209 210
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  gen 	 24 [cc] 207 208 209 210
;; live  kill	
;; rd  in  	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 315, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(5)
314, 2211, 2212, 2213, 2214
;; rd  kill	(4)
2211, 2212, 2213, 2214

;; Pred edge  19 [85.0%]  (fallthru)
(note 141 140 142 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 142 141 144 20 arch/arm/kernel/hw_breakpoint.c:729 (set (reg:SI 207)
        (zero_extend:SI (mem/s:QI (plus:SI (reg/v/f:SI 157 [ wp ])
                    (const_int 211 [0xd3])) [0 S1 A8]))) 149 {*arm_zero_extendqisi2_v6} (nil))

(insn 144 142 145 20 arch/arm/kernel/hw_breakpoint.c:729 (set (reg:SI 208)
        (and:SI (reg:SI 207)
            (const_int -128 [0xffffffffffffff80]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 207)
        (nil)))

(insn 145 144 146 20 arch/arm/kernel/hw_breakpoint.c:729 (set (reg:QI 209)
        (subreg:QI (reg:SI 208) 0)) 178 {*arm_movqi_insn} (expr_list:REG_DEAD (reg:SI 208)
        (nil)))

(insn 146 145 147 20 arch/arm/kernel/hw_breakpoint.c:729 (set (reg:SI 210)
        (zero_extend:SI (reg:QI 209))) 149 {*arm_zero_extendqisi2_v6} (expr_list:REG_DEAD (reg:QI 209)
        (nil)))

(insn 147 146 148 20 arch/arm/kernel/hw_breakpoint.c:729 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 210)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 210)
        (nil)))

(jump_insn 148 147 149 20 arch/arm/kernel/hw_breakpoint.c:729 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 23 21)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; rd  out 	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 314, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235


;; Succ edge  23 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru)

;; Start of basic block ( 20) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u188(11){ }u189(13){ }u190(25){ }u191(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157
;; lr  def 	 24 [cc] 211
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  gen 	 24 [cc] 211
;; live  kill	
;; rd  in  	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 314, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(2)
313, 2215
;; rd  kill	(1)
2215

;; Pred edge  20 [50.0%]  (fallthru)
(note 149 148 150 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 150 149 151 21 arch/arm/kernel/hw_breakpoint.c:736 (set (reg:SI 211 [ <variable>.hw.D.22650.D.22649.info.trigger ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 157 [ wp ])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 151 150 152 21 arch/arm/kernel/hw_breakpoint.c:736 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 211 [ <variable>.hw.D.22650.D.22649.info.trigger ])
            (reg/v:SI 150 [ addr ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 211 [ <variable>.hw.D.22650.D.22649.info.trigger ])
        (nil)))

(jump_insn 152 151 153 21 arch/arm/kernel/hw_breakpoint.c:736 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 156)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4877 [0x130d])
            (nil))))
;; End of basic block 21 -> ( 22 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; rd  out 	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 313, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235


;; Succ edge  22 [51.2%]  (fallthru)
;; Succ edge  23 [48.8%] 

;; Start of basic block ( 21) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u196(11){ }u197(13){ }u198(25){ }u199(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 157
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 157 158 159 240
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]
;; rd  in  	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 313, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133

;; Pred edge  21 [51.2%]  (fallthru)
(note 153 152 154 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 154 153 155 22 arch/arm/kernel/hw_breakpoint.c:737 (set (reg:SI 0 r0)
        (reg/v/f:SI 157 [ wp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 157 [ wp ])
        (nil)))

(call_insn 155 154 156 22 arch/arm/kernel/hw_breakpoint.c:737 (parallel [
            (call (mem:SI (symbol_ref:SI ("disable_single_step") [flags 0x3] <function_decl 0x1141a880 disable_single_step>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int 0 [0x0])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 22 -> ( 23)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; rd  out 	(69)
24, 26, 29, 54, 74, 93, 94, 113, 114, 313, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235


;; Succ edge  23 [100.0%]  (fallthru)

;; Start of basic block ( 19 20 21 22) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u203(11){ }u204(13){ }u205(25){ }u206(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 158
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; live  gen 	 158
;; live  kill	 14 [lr]
;; rd  in  	(71)
24, 26, 29, 54, 74, 93, 94, 113, 114, 313, 314, 315, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(1)
2172
;; rd  kill	(21)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2172, 2173

;; Pred edge  19 [15.0%] 
;; Pred edge  20 [50.0%] 
;; Pred edge  21 [48.8%] 
;; Pred edge  22 [100.0%]  (fallthru)
(code_label 156 155 157 23 337 "" [3 uses])

(note 157 156 158 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(call_insn 158 157 159 23 include/linux/rcupdate.h:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_unlock") [flags 0x41] <function_decl 0x10ce8600 __rcu_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 159 158 160 23 arch/arm/kernel/hw_breakpoint.c:720 (set (reg/v:SI 158 [ i ])
        (plus:SI (reg/v:SI 158 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 23 -> ( 24)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 150 158 159 240
;; rd  out 	(70)
24, 26, 29, 54, 74, 93, 94, 113, 114, 313, 314, 315, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235


;; Succ edge  24 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 23 18) -> 24
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u209(11){ }u210(13){ }u211(25){ }u212(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 158 240
;; lr  def 	 24 [cc] 213
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; live  gen 	 24 [cc] 213
;; live  kill	
;; rd  in  	(73)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 313, 314, 315, 317, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(2)
310, 2216
;; rd  kill	(1)
2216

;; Pred edge  23 [100.0%]  (fallthru,dfs_back)
;; Pred edge  18 [100.0%] 
(code_label 160 159 161 24 336 "" [1 uses])

(note 161 160 164 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 164 161 165 24 arch/arm/kernel/hw_breakpoint.c:720 discrim 1 (set (reg:SI 213 [ core_num_reserved_brps ])
        (mem/c/i:SI (plus:SI (reg/f:SI 240)
                (const_int 4 [0x4])) [0 core_num_reserved_brps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 core_num_reserved_brps+0 S4 A32])
        (nil)))

(insn 165 164 166 24 arch/arm/kernel/hw_breakpoint.c:720 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 158 [ i ])
            (reg:SI 213 [ core_num_reserved_brps ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 213 [ core_num_reserved_brps ])
        (nil)))

(jump_insn 166 165 297 24 arch/arm/kernel/hw_breakpoint.c:720 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 162)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 24 -> ( 19 25)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 150 158 159 240
;; rd  out 	(70)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 310, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235


;; Succ edge  19 [91.0%] 
;; Succ edge  25 [9.0%]  (fallthru)

;; Start of basic block ( 24) -> 25
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(11){ }u-1(13){ }u-1(25){ }u-1(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	
;; live  kill	
;; rd  in  	(70)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 310, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(0)


;; Pred edge  24 [9.0%]  (fallthru)
(note 297 166 298 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(jump_insn 298 297 299 25 (set (pc)
        (label_ref 244)) -1 (nil))
;; End of basic block 25 -> ( 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(70)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 310, 334, 335, 2154, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2233, 2234, 2235


;; Succ edge  37 [100.0%]  (loop_exit)

(barrier 299 298 170)

;; Start of basic block ( 4) -> 26
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u217(11){ }u218(13){ }u219(25){ }u220(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; live  gen 	 0 [r0] 1 [r1] 2 [r2]
;; live  kill	 14 [lr]
;; rd  in  	(21)
29, 54, 74, 93, 94, 113, 114, 133, 331, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133

;; Pred edge  4 [29.0%] 
(code_label 170 299 171 26 329 "" [1 uses])

(note 171 170 175 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 175 171 176 26 arch/arm/kernel/hw_breakpoint.c:821 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 176 175 177 26 arch/arm/kernel/hw_breakpoint.c:821 discrim 1 (set (reg:SI 1 r1)
        (const_int 821 [0x335])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 821 [0x335])
        (nil)))

(insn 177 176 178 26 arch/arm/kernel/hw_breakpoint.c:821 discrim 1 (set (reg:SI 2 r2)
        (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x115f0620>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC16") [flags 0x82] <string_cst 0x115f0620>)
        (nil)))

(call_insn 178 177 179 26 arch/arm/kernel/hw_breakpoint.c:821 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("warn_slowpath_fmt") [flags 0x41] <function_decl 0x10a7a800 warn_slowpath_fmt>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_DEAD (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 26 -> ( 27)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 167
;; rd  out 	(20)
29, 54, 74, 93, 94, 113, 114, 331, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186


;; Succ edge  27 [100.0%]  (fallthru)

;; Start of basic block ( 26 5) -> 27
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u225(11){ }u226(13){ }u227(25){ }u228(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 141 144 218 219 220 221 222 223 224 225
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 167
;; live  gen 	 24 [cc] 141 144 218 219 220 221 222 223 224 225
;; live  kill	
;; rd  in  	(22)
29, 54, 74, 93, 94, 113, 114, 133, 330, 331, 334, 335, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186
;; rd  gen 	(11)
308, 2157, 2161, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224
;; rd  kill	(10)
2157, 2161, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224

;; Pred edge  26 [100.0%]  (fallthru)
;; Pred edge  5 [29.0%] 
(code_label 179 178 180 27 330 "" [1 uses])

(note 180 179 182 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 182 180 183 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg/f:SI 218)
        (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
                (const_int 64 [0x40])))
        (nil)))

(insn 183 182 185 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg/v:SI 144 [ __ptr ])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/f:SI 218)
            ]
             [
                (asm_input:SI ("0") 0)
            ] 8153140)) -1 (expr_list:REG_DEAD (reg/f:SI 218)
        (nil)))

(insn 185 183 186 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg/f:SI 219)
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) 167 {*arm_movsi_insn} (nil))

(insn 186 185 187 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 221)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 187 186 188 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 220)
        (and:SI (reg:SI 221)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 221)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 188 187 189 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 222 [ <variable>.cpu ])
        (mem/s/j:SI (plus:SI (reg:SI 220)
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 220)
        (nil)))

(insn 189 188 190 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 223)
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 222 [ <variable>.cpu ])
                    (const_int 4 [0x4]))
                (reg/f:SI 219)) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 222 [ <variable>.cpu ])
        (expr_list:REG_DEAD (reg/f:SI 219)
            (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 222 [ <variable>.cpu ])
                            (const_int 4 [0x4]))
                        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10d47120 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
                (nil)))))

(insn 190 189 191 27 arch/arm/kernel/hw_breakpoint.c:675 (set (reg:SI 141 [ D.24819 ])
        (plus:SI (reg/v:SI 144 [ __ptr ])
            (reg:SI 223))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 223)
        (expr_list:REG_DEAD (reg/v:SI 144 [ __ptr ])
            (nil))))

(insn 191 190 192 27 arch/arm/kernel/hw_breakpoint.c:678 (set (reg/f:SI 224)
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (nil))

(insn 192 191 193 27 arch/arm/kernel/hw_breakpoint.c:678 (set (reg:SI 225 [ core_num_wrps ])
        (mem/c/i:SI (plus:SI (reg/f:SI 224)
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 core_num_wrps+0 S4 A32])
        (nil)))

(insn 193 192 194 27 arch/arm/kernel/hw_breakpoint.c:678 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 225 [ core_num_wrps ])
            (const_int 1 [0x1]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 225 [ core_num_wrps ])
        (nil)))

(jump_insn 194 193 195 27 arch/arm/kernel/hw_breakpoint.c:678 (set (pc)
        (if_then_else (gt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 199)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 4 [0x4])
            (nil))))
;; End of basic block 27 -> ( 29 28)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 167 224
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 167 224
;; rd  out 	(31)
29, 54, 74, 93, 94, 113, 114, 133, 308, 334, 335, 2157, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224


;; Succ edge  29 [0.0%] 
;; Succ edge  28 [100.0%]  (fallthru)

;; Start of basic block ( 27) -> 28
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u242(11){ }u243(13){ }u244(25){ }u245(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 167 224
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 224
;; lr  def 	 142 239
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 167 224
;; live  gen 	 142 239
;; live  kill	
;; rd  in  	(31)
29, 54, 74, 93, 94, 113, 114, 133, 308, 334, 335, 2157, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224
;; rd  gen 	(2)
2159, 2232
;; rd  kill	(3)
2158, 2159, 2232

;; Pred edge  27 [100.0%]  (fallthru)
(note 195 194 196 28 [bb 28] NOTE_INSN_BASIC_BLOCK)

(insn 196 195 240 28 arch/arm/kernel/hw_breakpoint.c:678 (set (reg/v:SI 142 [ i ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 240 196 300 28 arch/arm/kernel/hw_breakpoint.c:680 discrim 1 (set (reg/f:SI 239)
        (reg/f:SI 224)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 224)
        (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
            (nil))))

(jump_insn 300 240 301 28 (set (pc)
        (label_ref 237)) -1 (nil))
;; End of basic block 28 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(33)
29, 54, 74, 93, 94, 113, 114, 133, 308, 334, 335, 2157, 2159, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2232


;; Succ edge  36 [100.0%] 

(barrier 301 300 199)

;; Start of basic block ( 27) -> 29
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u247(11){ }u248(13){ }u249(25){ }u250(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(31)
29, 54, 74, 93, 94, 113, 114, 133, 308, 334, 335, 2157, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133

;; Pred edge  27 [0.0%] 
(code_label 199 301 200 29 340 "" [1 uses])

(note 200 199 203 29 [bb 29] NOTE_INSN_BASIC_BLOCK)

(insn 203 200 204 29 arch/arm/kernel/hw_breakpoint.c:678 discrim 1 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x1152a700>)
        (nil)))

(insn 204 203 205 29 arch/arm/kernel/hw_breakpoint.c:678 discrim 1 (set (reg:SI 1 r1)
        (const_int 678 [0x2a6])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 678 [0x2a6])
        (nil)))

(call_insn 205 204 206 29 arch/arm/kernel/hw_breakpoint.c:678 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("__bug") [flags 0x41] <function_decl 0x10a7a780 __bug>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_NORETURN (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 29 -> ()
;; lr  out 	 13 [sp] 25 [sfp] 26 [afp]
;; live  out 	 13 [sp] 25 [sfp] 26 [afp]
;; rd  out 	(30)
29, 54, 74, 93, 94, 113, 114, 308, 334, 335, 2157, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224



(barrier 206 205 239)

;; Start of basic block ( 36) -> 30
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u254(11){ }u255(13){ }u256(25){ }u257(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 143
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; live  gen 	 24 [cc] 143
;; live  kill	 14 [lr]
;; rd  in  	(38)
29, 54, 74, 93, 94, 113, 114, 133, 299, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(2)
305, 2160
;; rd  kill	(20)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2160

;; Pred edge  36 [91.0%] 
(code_label 239 206 207 30 345 "" [1 uses])

(note 207 239 208 30 [bb 30] NOTE_INSN_BASIC_BLOCK)

(call_insn 208 207 210 30 include/linux/rcupdate.h:592 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_lock") [flags 0x41] <function_decl 0x10ce8580 __rcu_read_lock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(insn 210 208 211 30 arch/arm/kernel/hw_breakpoint.c:683 (set (reg/v/f:SI 143 [ wp ])
        (mem/f:SI (plus:SI (mult:SI (reg/v:SI 142 [ i ])
                    (const_int 4 [0x4]))
                (reg:SI 141 [ D.24819 ])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 211 210 212 30 arch/arm/kernel/hw_breakpoint.c:685 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 143 [ wp ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 212 211 213 30 arch/arm/kernel/hw_breakpoint.c:685 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 217)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 8500 [0x2134])
            (nil))))
;; End of basic block 30 -> ( 31 32)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 305, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232


;; Succ edge  31 [15.0%]  (fallthru)
;; Succ edge  32 [85.0%] 

;; Start of basic block ( 30) -> 31
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u264(11){ }u265(13){ }u266(25){ }u267(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(37)
29, 54, 74, 93, 94, 113, 114, 305, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133

;; Pred edge  30 [15.0%]  (fallthru)
(note 213 212 214 31 [bb 31] NOTE_INSN_BASIC_BLOCK)

(call_insn 214 213 302 31 include/linux/rcupdate.h:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_unlock") [flags 0x41] <function_decl 0x10ce8600 __rcu_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))

(jump_insn 302 214 303 31 (set (pc)
        (label_ref 234)) -1 (nil))
;; End of basic block 31 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 305, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232


;; Succ edge  35 [100.0%] 

(barrier 303 302 217)

;; Start of basic block ( 30) -> 32
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u269(11){ }u270(13){ }u271(25){ }u272(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc] 229 230
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; live  gen 	 0 [r0] 1 [r1] 24 [cc] 229 230
;; live  kill	 14 [lr]
;; rd  in  	(37)
29, 54, 74, 93, 94, 113, 114, 305, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(3)
302, 2225, 2226
;; rd  kill	(21)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 2225, 2226

;; Pred edge  30 [85.0%] 
(code_label 217 303 218 32 342 "" [1 uses])

(note 218 217 219 32 [bb 32] NOTE_INSN_BASIC_BLOCK)

(insn 219 218 220 32 arch/arm/kernel/hw_breakpoint.c:696 (set (reg:SI 229 [ <variable>.attr.D.4023.bp_addr ])
        (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ wp ])
                (const_int 176 [0xb0])) [0 <variable>.attr.D.4023.bp_addr+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 220 219 221 32 arch/arm/kernel/hw_breakpoint.c:696 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 143 [ wp ])
                (const_int 204 [0xcc])) [0 <variable>.hw.D.22650.D.22649.info.trigger+0 S4 A32])
        (reg:SI 229 [ <variable>.attr.D.4023.bp_addr ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 229 [ <variable>.attr.D.4023.bp_addr ])
        (nil)))

(insn 221 220 222 32 arch/arm/kernel/hw_breakpoint.c:698 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ wp ])) 167 {*arm_movsi_insn} (nil))

(insn 222 221 223 32 arch/arm/kernel/hw_breakpoint.c:698 (set (reg:SI 1 r1)
        (reg/v/f:SI 167 [ regs ])) 167 {*arm_movsi_insn} (nil))

(call_insn 223 222 224 32 arch/arm/kernel/hw_breakpoint.c:698 (parallel [
            (call (mem:SI (symbol_ref:SI ("perf_bp_event") [flags 0x41] <function_decl 0x113b1280 perf_bp_event>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 224 223 225 32 arch/arm/kernel/hw_breakpoint.c:705 (set (reg/f:SI 230 [ <variable>.overflow_handler ])
        (mem/s/f/j:SI (plus:SI (reg/v/f:SI 143 [ wp ])
                (const_int 528 [0x210])) [0 <variable>.overflow_handler+0 S4 A64])) 167 {*arm_movsi_insn} (nil))

(insn 225 224 226 32 arch/arm/kernel/hw_breakpoint.c:705 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 230 [ <variable>.overflow_handler ])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 230 [ <variable>.overflow_handler ])
        (nil)))

(jump_insn 226 225 227 32 arch/arm/kernel/hw_breakpoint.c:705 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 231)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
            (nil))))
;; End of basic block 32 -> ( 33 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 302, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232


;; Succ edge  33 [6.7%]  (fallthru)
;; Succ edge  34 [93.3%] 

;; Start of basic block ( 32) -> 33
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u284(11){ }u285(13){ }u286(25){ }u287(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 143 167
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 143 167 239
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]
;; rd  in  	(37)
29, 54, 74, 93, 94, 113, 114, 302, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133

;; Pred edge  32 [6.7%]  (fallthru)
(note 227 226 228 33 [bb 33] NOTE_INSN_BASIC_BLOCK)

(insn 228 227 229 33 arch/arm/kernel/hw_breakpoint.c:706 (set (reg:SI 0 r0)
        (reg/v/f:SI 143 [ wp ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 143 [ wp ])
        (nil)))

(insn 229 228 230 33 arch/arm/kernel/hw_breakpoint.c:706 (set (reg:SI 1 r1)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 167 [ regs ])
                (const_int 60 [0x3c])) [0 <variable>.uregs+60 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 230 229 231 33 arch/arm/kernel/hw_breakpoint.c:706 (parallel [
            (call (mem:SI (symbol_ref:SI ("enable_single_step") [flags 0x3] <function_decl 0x1141a780 enable_single_step>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_DEAD (reg:SI 0 r0)
            (expr_list:REG_EH_REGION (const_int 0 [0x0])
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 33 -> ( 34)
;; lr  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 302, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232


;; Succ edge  34 [100.0%]  (fallthru)

;; Start of basic block ( 32 33) -> 34
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u293(11){ }u294(13){ }u295(25){ }u296(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(37)
29, 54, 74, 93, 94, 113, 114, 302, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133

;; Pred edge  32 [93.3%] 
;; Pred edge  33 [100.0%]  (fallthru)
(code_label 231 230 232 34 344 "" [1 uses])

(note 232 231 233 34 [bb 34] NOTE_INSN_BASIC_BLOCK)

(call_insn 233 232 234 34 include/linux/rcupdate.h:616 (parallel [
            (call (mem:SI (symbol_ref:SI ("__rcu_read_unlock") [flags 0x41] <function_decl 0x10ce8600 __rcu_read_unlock>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 34 -> ( 35)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 302, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232


;; Succ edge  35 [100.0%]  (fallthru)

;; Start of basic block ( 34 31) -> 35
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u298(11){ }u299(13){ }u300(25){ }u301(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142
;; lr  def 	 142
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; live  gen 	 142
;; live  kill	
;; rd  in  	(38)
29, 54, 74, 93, 94, 113, 114, 302, 305, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(1)
2158
;; rd  kill	(2)
2158, 2159

;; Pred edge  34 [100.0%]  (fallthru)
;; Pred edge  31 [100.0%] 
(code_label 234 233 235 35 343 "" [1 uses])

(note 235 234 236 35 [bb 35] NOTE_INSN_BASIC_BLOCK)

(insn 236 235 237 35 arch/arm/kernel/hw_breakpoint.c:680 (set (reg/v:SI 142 [ i ])
        (plus:SI (reg/v:SI 142 [ i ])
            (const_int 1 [0x1]))) 4 {*arm_addsi3} (nil))
;; End of basic block 35 -> ( 36)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(37)
29, 54, 74, 93, 94, 113, 114, 302, 305, 334, 335, 2157, 2158, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232


;; Succ edge  36 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 35 28) -> 36
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u303(11){ }u304(13){ }u305(25){ }u306(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 142 239
;; lr  def 	 24 [cc] 232
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  gen 	 24 [cc] 232
;; live  kill	
;; rd  in  	(40)
29, 54, 74, 93, 94, 113, 114, 133, 302, 305, 308, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232
;; rd  gen 	(2)
299, 2227
;; rd  kill	(1)
2227

;; Pred edge  35 [100.0%]  (fallthru,dfs_back)
;; Pred edge  28 [100.0%] 
(code_label 237 236 238 36 341 "" [1 uses])

(note 238 237 241 36 [bb 36] NOTE_INSN_BASIC_BLOCK)

(insn 241 238 242 36 arch/arm/kernel/hw_breakpoint.c:680 discrim 1 (set (reg:SI 232 [ core_num_wrps ])
        (mem/c/i:SI (plus:SI (reg/f:SI 239)
                (const_int 12 [0xc])) [0 core_num_wrps+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 12 [0xc]))) [0 core_num_wrps+0 S4 A32])
        (nil)))

(insn 242 241 243 36 arch/arm/kernel/hw_breakpoint.c:680 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 142 [ i ])
            (reg:SI 232 [ core_num_wrps ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 232 [ core_num_wrps ])
        (nil)))

(jump_insn 243 242 244 36 arch/arm/kernel/hw_breakpoint.c:680 discrim 1 (set (pc)
        (if_then_else (lt (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 239)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
            (nil))))
;; End of basic block 36 -> ( 30 37)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 141 142 167 239
;; rd  out 	(38)
29, 54, 74, 93, 94, 113, 114, 133, 299, 334, 335, 2157, 2158, 2159, 2160, 2161, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232


;; Succ edge  30 [91.0%] 
;; Succ edge  37 [9.0%]  (fallthru,loop_exit)

;; Start of basic block ( 36 25) -> 37
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u311(11){ }u312(13){ }u313(25){ }u314(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 163
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  gen 	 163
;; live  kill	
;; rd  in  	(88)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 299, 310, 334, 335, 2154, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232, 2233, 2234, 2235
;; rd  gen 	(1)
2177
;; rd  kill	(2)
2177, 2178

;; Pred edge  36 [9.0%]  (fallthru,loop_exit)
;; Pred edge  25 [100.0%]  (loop_exit)
(code_label 244 243 245 37 339 "" [1 uses])

(note 245 244 246 37 [bb 37] NOTE_INSN_BASIC_BLOCK)

(insn 246 245 247 37 arch/arm/kernel/hw_breakpoint.c:804 (set (reg/v:SI 163 [ ret ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 37 -> ( 38)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(89)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 299, 310, 334, 335, 2154, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232, 2233, 2234, 2235


;; Succ edge  38 [100.0%]  (fallthru)

;; Start of basic block ( 37 7) -> 38
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u315(11){ }u316(13){ }u317(25){ }u318(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 24 [cc] 137 140 233 234 235 237
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 24 [cc] 137 140 233 234 235 237
;; live  kill	
;; rd  in  	(91)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 299, 310, 329, 334, 335, 2154, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2232, 2233, 2234, 2235
;; rd  gen 	(7)
298, 2155, 2156, 2228, 2229, 2230, 2231
;; rd  kill	(6)
2155, 2156, 2228, 2229, 2230, 2231

;; Pred edge  37 [100.0%]  (fallthru)
;; Pred edge  7 [100.0%] 
(code_label 247 246 248 38 331 "" [1 uses])

(note 248 247 249 38 [bb 38] NOTE_INSN_BASIC_BLOCK)

(insn 249 248 251 38 arch/arm/kernel/hw_breakpoint.c:829 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8172822)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 251 249 252 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg:SI 233)
        (and:SI (reg/f:SI 13 sp)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (nil))

(insn 252 251 253 38 /Volumes/Jenkins/tf101-kernel-tegra/arch/arm/include/asm/thread_info.h:97 (set (reg/f:SI 140 [ D.24829 ])
        (and:SI (reg:SI 233)
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 233)
        (expr_list:REG_EQUAL (and:SI (reg/f:SI 13 sp)
                (const_int -8192 [0xffffffffffffe000]))
            (nil))))

(insn 253 252 254 38 arch/arm/kernel/hw_breakpoint.c:829 (set (reg:SI 234 [ <variable>.preempt_count ])
        (mem/s/j:SI (plus:SI (reg/f:SI 140 [ D.24829 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 254 253 255 38 arch/arm/kernel/hw_breakpoint.c:829 (set (reg:SI 235)
        (plus:SI (reg:SI 234 [ <variable>.preempt_count ])
            (const_int -1 [0xffffffffffffffff]))) 4 {*arm_addsi3} (expr_list:REG_DEAD (reg:SI 234 [ <variable>.preempt_count ])
        (nil)))

(insn 255 254 256 38 arch/arm/kernel/hw_breakpoint.c:829 (set (mem/s/j:SI (plus:SI (reg/f:SI 140 [ D.24829 ])
                (const_int 4 [0x4])) [0 <variable>.preempt_count+0 S4 A32])
        (reg:SI 235)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 235)
        (nil)))

(insn 256 255 260 38 arch/arm/kernel/hw_breakpoint.c:829 (parallel [
            (asm_operands/v ("") ("") 0 []
                 [] 8172822)
            (clobber (mem:BLK (scratch) [0 A8]))
        ]) -1 (nil))

(insn 260 256 261 38 include/asm-generic/bitops/non-atomic.h:105 (set (reg:SI 137 [ D.24847 ])
        (mem/v:SI (reg/f:SI 140 [ D.24829 ]) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 140 [ D.24829 ])
        (nil)))

(insn 261 260 262 38 arch/arm/kernel/hw_breakpoint.c:829 (set (reg:SI 237)
        (and:SI (reg:SI 137 [ D.24847 ])
            (const_int 2 [0x2]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 137 [ D.24847 ])
        (nil)))

(insn 262 261 263 38 arch/arm/kernel/hw_breakpoint.c:829 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 237)
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 237)
        (nil)))

(jump_insn 263 262 264 38 arch/arm/kernel/hw_breakpoint.c:829 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 266)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 38 -> ( 39 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; rd  out 	(95)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235


;; Succ edge  39 [0.0%]  (fallthru)
;; Succ edge  40 [100.0%] 

;; Start of basic block ( 38) -> 39
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u330(11){ }u331(13){ }u332(25){ }u333(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; live  gen 	
;; live  kill	 14 [lr]
;; rd  in  	(95)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235
;; rd  gen 	(0)

;; rd  kill	(19)
115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133

;; Pred edge  38 [0.0%]  (fallthru)
(note 264 263 265 39 [bb 39] NOTE_INSN_BASIC_BLOCK)

(call_insn 265 264 266 39 arch/arm/kernel/hw_breakpoint.c:829 discrim 1 (parallel [
            (call (mem:SI (symbol_ref:SI ("preempt_schedule") [flags 0x41] <function_decl 0x10a59380 preempt_schedule>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (nil)
    (nil))
;; End of basic block 39 -> ( 40)
;; lr  out 	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  out 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; rd  out 	(94)
24, 26, 29, 54, 74, 93, 94, 113, 114, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235


;; Succ edge  40 [100.0%]  (fallthru)

;; Start of basic block ( 38 39) -> 40
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u335(11){ }u336(13){ }u337(25){ }u338(26){ }}
;; lr  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; lr  use 	 11 [fp] 13 [sp] 25 [sfp] 26 [afp] 163
;; lr  def 	 0 [r0]
;; live  in  	 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp] 163
;; live  gen 	 0 [r0]
;; live  kill	
;; rd  in  	(95)
24, 26, 29, 54, 74, 93, 94, 113, 114, 133, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235
;; rd  gen 	(1)
2
;; rd  kill	(30)
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29

;; Pred edge  38 [100.0%] 
;; Pred edge  39 [100.0%]  (fallthru)
(code_label 266 265 267 40 346 "" [1 uses])

(note 267 266 272 40 [bb 40] NOTE_INSN_BASIC_BLOCK)

(insn 272 267 278 40 arch/arm/kernel/hw_breakpoint.c:832 (set (reg/i:SI 0 r0)
        (reg/v:SI 163 [ ret ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 163 [ ret ])
        (nil)))

(insn 278 272 0 40 arch/arm/kernel/hw_breakpoint.c:832 (use (reg/i:SI 0 r0)) -1 (nil))
;; End of basic block 40 -> ( 1)
;; lr  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; live  out 	 0 [r0] 11 [fp] 13 [sp] 14 [lr] 25 [sfp] 26 [afp]
;; rd  out 	(93)
2, 54, 74, 93, 94, 113, 114, 133, 298, 334, 335, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235


;; Succ edge  EXIT [100.0%]  (fallthru)

starting the processing of deferred insns
ending the processing of deferred insns
