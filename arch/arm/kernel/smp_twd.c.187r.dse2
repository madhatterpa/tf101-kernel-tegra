
;; Function twd_set_mode (twd_set_mode)[0:688]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 10 (  1.7)

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=75
mems_found = 0, cannot_delete = true

**scanning insn=76
mems_found = 0, cannot_delete = false

**scanning insn=77
mems_found = 0, cannot_delete = false

**scanning insn=71
mems_found = 0, cannot_delete = true

**scanning insn=25
mems_found = 0, cannot_delete = true

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=29
  mem: (plus:SI (reg/f:SI 3 r3 [139])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [139])
    (const_int 4 [0x4]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=0 offset=4 
 processing const load gid=0[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=26
  mem: (reg/f:SI 3 r3 [139])

   after canon_rtx address: (reg/f:SI 3 r3 [139])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=31
  mem: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])
  gid=1 offset=0 
 processing const load gid=1[0..4)
const call 31

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=34
  mem: (reg/f:SI 4 r4 [orig:136 twd_base.201 ] [136])

   after canon_rtx address: (reg/f:SI 4 r4 [orig:136 twd_base.201 ] [136])
expanding: r4 into: NULL

   after cselib_expand address: (reg/f:SI 4 r4 [orig:136 twd_base.201 ] [136])

   after canon_rtx address: (reg/f:SI 4 r4 [orig:136 twd_base.201 ] [136])
  varying cselib base=1 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = true

**scanning insn=39
  mem: (reg/f:SI 2 r2 [145])

   after canon_rtx address: (reg/f:SI 2 r2 [145])
expanding: r2 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=41
  mem: (plus:SI (reg/f:SI 2 r2 [orig:146 twd_base ] [146])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 2 r2 [orig:146 twd_base ] [146])
    (const_int 8 [0x8]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 2 r2 [orig:146 twd_base ] [146])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 2 r2 [orig:146 twd_base ] [146])
    (const_int 8 [0x8]))
  varying cselib base=1 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


twd_set_mode

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={3d,4u} r1={3d,1u} r2={4d,2u} r3={6d,5u} r4={2d,3u} r12={1d} r13={2d,7u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,3u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 163{136d,27u,0e} in 18{17 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 78 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 78 5 79 2 arch/arm/kernel/smp_twd.c:37 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 79 78 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 79 7 2 NOTE_INSN_FUNCTION_BEG)

(insn 7 4 8 2 arch/arm/kernel/smp_twd.c:40 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:137 mode ] [137])
            (const_int 2 [0x2]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 47 2 arch/arm/kernel/smp_twd.c:40 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 23)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 2900 [0xb54])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  4 [29.0%] 
;; Succ edge  3 [71.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  2 [71.0%]  (fallthru)
(note 47 8 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(note 9 47 75 3 NOTE_INSN_DELETED)

(insn 75 9 76 3 arch/arm/kernel/smp_twd.c:54 (set (reg:CC 24 cc)
        (compare:CC (reg/v:SI 0 r0 [orig:137 mode ] [137])
            (const_int 3 [0x3]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/v:SI 0 r0 [orig:137 mode ] [137])
        (nil)))

(insn 76 75 77 3 arch/arm/kernel/smp_twd.c:54 (cond_exec (eq (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:133 ctrl ] [133])
            (const_int 4 [0x4]))) 2345 {neon_vornv2di+78} (nil))

(insn 77 76 71 3 arch/arm/kernel/smp_twd.c:54 (cond_exec (ne (reg:CC 24 cc)
            (const_int 0 [0x0]))
        (set (reg/v:SI 3 r3 [orig:133 ctrl ] [133])
            (const_int 0 [0x0]))) 2345 {neon_vornv2di+78} (expr_list:REG_DEAD (reg:CC 24 cc)
        (nil)))

(jump_insn 71 77 72 3 (set (pc)
        (label_ref 36)) 242 {*arm_jump} (nil))
;; End of basic block 3 -> ( 5)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  5 [100.0%] 

(barrier 72 71 23)

;; Start of basic block ( 2) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 4 [r4]
;; live  kill	 14 [lr]

;; Pred edge  2 [29.0%] 
(code_label 23 72 24 4 3 "" [1 uses])

(note 24 23 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(note 28 24 25 4 NOTE_INSN_DELETED)

(insn 25 28 30 4 arch/arm/kernel/smp_twd.c:45 (set (reg/f:SI 3 r3 [139])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 30 25 29 4 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(insn 29 30 26 4 arch/arm/kernel/smp_twd.c:45 (set (reg:SI 0 r0)
        (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [139])
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 26 29 31 4 arch/arm/kernel/smp_twd.c:45 (set (reg/f:SI 4 r4 [orig:136 twd_base.201 ] [136])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [139]) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [139])
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 twd_base+0 S4 A32])
            (nil))))

(call_insn/u 31 26 35 4 arch/arm/kernel/smp_twd.c:45 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 35 31 34 4 arch/arm/kernel/smp_twd.c:43 (set (reg/v:SI 3 r3 [orig:133 ctrl ] [133])
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (nil))

(insn 34 35 36 4 arch/arm/kernel/smp_twd.c:45 (set (mem/v:SI (reg/f:SI 4 r4 [orig:136 twd_base.201 ] [136]) [0 S4 A32])
        (reg:SI 0 r0 [144])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [144])
        (nil)))
;; End of basic block 4 -> ( 5)
;; lr  out 	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 4 [r4] 13 [sp]


;; Succ edge  5 [100.0%]  (fallthru)

;; Start of basic block ( 4 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 2 [r2]
;; live  in  	 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 2 [r2]
;; live  kill	

;; Pred edge  4 [100.0%]  (fallthru)
;; Pred edge  3 [100.0%] 
(code_label 36 34 37 5 5 "" [1 uses])

(note 37 36 38 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 38 37 39 5 arch/arm/kernel/smp_twd.c:57 (set (reg/f:SI 2 r2 [145])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 39 38 41 5 arch/arm/kernel/smp_twd.c:57 (set (reg/f:SI 2 r2 [orig:146 twd_base ] [146])
        (mem/f/c/i:SI (reg/f:SI 2 r2 [145]) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 twd_base+0 S4 A32])
        (nil)))

(insn 41 39 80 5 arch/arm/kernel/smp_twd.c:57 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:146 twd_base ] [146])
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/v:SI 3 r3 [orig:133 ctrl ] [133])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:133 ctrl ] [133])
        (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:146 twd_base ] [146])
            (nil))))

(note 80 41 81 5 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 81 80 82 5 arch/arm/kernel/smp_twd.c:58 (return) -1 (nil))
;; End of basic block 5 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 82 81 73)

(note 73 82 74 NOTE_INSN_DELETED)

(note 74 73 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function twd_set_next_event (twd_set_next_event)[0:689]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 4 (  1.3)

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=8
  mem: (reg/f:SI 3 r3 [142])

   after canon_rtx address: (reg/f:SI 3 r3 [142])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=10
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=13
  mem: (plus:SI (reg/f:SI 2 r2 [orig:138 twd_base.204 ] [138])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 2 r2 [orig:138 twd_base.204 ] [138])
    (const_int 4 [0x4]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 2 r2 [orig:138 twd_base.204 ] [138])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 2 r2 [orig:138 twd_base.204 ] [138])
    (const_int 4 [0x4]))
  varying cselib base=2 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = true

**scanning insn=15
  mem: (reg/f:SI 3 r3 [142])

   after canon_rtx address: (reg/f:SI 3 r3 [142])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=0 offset=0 
 processing const load gid=0[0..4)
removing from active insn=13 has store
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=17
  mem: (plus:SI (reg/f:SI 3 r3 [orig:144 twd_base ] [144])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:144 twd_base ] [144])
    (const_int 8 [0x8]))
expanding: r3 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:144 twd_base ] [144])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:144 twd_base ] [144])
    (const_int 8 [0x8]))
  varying cselib base=4 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = false

**scanning insn=36
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


twd_set_next_event

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 12[ip]
;;  ref usage 	r0={2d,3u} r1={2d,1u} r2={3d,3u} r3={3d,3u,1d} r12={1d,1u} r13={1d,2u} r14={1d,1u} 
;;    total ref usage 28{13d,14u,1e} in 11{11 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 5 1 34 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 34 5 4 2 NOTE_INSN_PROLOGUE_END)

(note 4 34 18 2 NOTE_INSN_FUNCTION_BEG)

(note 18 4 7 2 NOTE_INSN_DELETED)

(insn 7 18 2 2 arch/arm/kernel/smp_twd.c:63 (set (reg/f:SI 3 r3 [142])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 2 7 22 2 arch/arm/kernel/smp_twd.c:62 (set (reg/v:SI 12 ip [orig:140 evt ] [140])
        (reg:SI 0 r0 [ evt ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ evt ])
        (nil)))

(insn 22 2 8 2 arch/arm/kernel/smp_twd.c:71 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 8 22 10 2 arch/arm/kernel/smp_twd.c:63 (set (reg/f:SI 2 r2 [orig:138 twd_base.204 ] [138])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [142]) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 3 r3 [142]) [0 twd_base+0 S4 A32])
        (nil)))

(insn 10 8 13 2 arch/arm/kernel/smp_twd.c:63 (set (reg/v:SI 1 r1 [orig:135 ctrl ] [135])
        (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:138 twd_base.204 ] [138])
                (const_int 8 [0x8])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 13 10 15 2 arch/arm/kernel/smp_twd.c:67 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:138 twd_base.204 ] [138])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg/v:SI 12 ip [orig:140 evt ] [140])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 12 ip [orig:140 evt ] [140])
        (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:138 twd_base.204 ] [138])
            (nil))))

(insn 15 13 11 2 arch/arm/kernel/smp_twd.c:68 (set (reg/f:SI 3 r3 [orig:144 twd_base ] [144])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [142]) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 11 15 17 2 arch/arm/kernel/smp_twd.c:65 (set (reg/v:SI 2 r2 [orig:134 ctrl.273 ] [134])
        (ior:SI (reg/v:SI 1 r1 [orig:135 ctrl ] [135])
            (const_int 1 [0x1]))) 89 {*arm_iorsi3} (expr_list:REG_DEAD (reg/v:SI 1 r1 [orig:135 ctrl ] [135])
        (nil)))

(insn 17 11 28 2 arch/arm/kernel/smp_twd.c:68 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:144 twd_base ] [144])
                (const_int 8 [0x8])) [0 S4 A32])
        (reg/v:SI 2 r2 [orig:134 ctrl.273 ] [134])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:144 twd_base ] [144])
        (expr_list:REG_DEAD (reg/v:SI 2 r2 [orig:134 ctrl.273 ] [134])
            (nil))))

(insn 28 17 35 2 arch/arm/kernel/smp_twd.c:71 (use (reg/i:SI 0 r0)) -1 (nil))

(note 35 28 36 2 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 36 35 37 2 arch/arm/kernel/smp_twd.c:71 (return) -1 (nil))
;; End of basic block 2 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 37 36 32)

(note 32 37 33 NOTE_INSN_DELETED)

(note 33 32 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function twd_timer_ack (twd_timer_ack)[0:690]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (reg/f:SI 3 r3 [137])

   after canon_rtx address: (reg/f:SI 3 r3 [137])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=8
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
  mem: (plus:SI (reg/f:SI 3 r3 [orig:138 twd_base ] [138])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:138 twd_base ] [138])
    (const_int 12 [0xc]))
expanding: r3 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:138 twd_base ] [138])
    (const_int 12 [0xc]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:138 twd_base ] [138])
    (const_int 12 [0xc]))
  varying cselib base=1 offset = 12
 processing cselib store [12..16)
mems_found = 1, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = false

**scanning insn=42
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


twd_timer_ack

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 3[r3] 24[cc]
;;  ref usage 	r0={3d,4u} r1={1d} r2={1d} r3={3d,3u} r13={1d,4u} r14={1d,1u} r24={1d,1u} 
;;    total ref usage 24{11d,13u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 40 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 40 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 40 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/smp_twd.c:81 (set (reg/f:SI 3 r3 [137])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 6 5 8 2 arch/arm/kernel/smp_twd.c:81 (set (reg/f:SI 3 r3 [orig:138 twd_base ] [138])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [137]) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 twd_base+0 S4 A32])
        (nil)))

(insn 8 6 9 2 arch/arm/kernel/smp_twd.c:81 (set (reg:SI 0 r0 [orig:134 D.14180 ] [134])
        (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:138 twd_base ] [138])
                (const_int 12 [0xc])) [0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(insn 9 8 10 2 arch/arm/kernel/smp_twd.c:81 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 0 r0 [orig:134 D.14180 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 10 9 16 2 arch/arm/kernel/smp_twd.c:81 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (return)
            (pc))) 261 {*cond_return} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
            (nil))))
;; End of basic block 2 -> ( 3 1)
;; lr  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  3 [61.0%]  (fallthru)
;; Succ edge  EXIT [39.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [61.0%]  (fallthru)
(note 16 10 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 3 arch/arm/kernel/smp_twd.c:82 (set (reg:SI 0 r0 [139])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 18 17 20 3 arch/arm/kernel/smp_twd.c:82 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:138 twd_base ] [138])
                (const_int 12 [0xc])) [0 S4 A32])
        (reg:SI 0 r0 [139])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:138 twd_base ] [138])
        (expr_list:REG_EQUAL (const_int 1 [0x1])
            (nil))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	
;; live  in  	 0 [r0] 13 [sp] 14 [lr]
;; live  gen 	
;; live  kill	

;; Pred edge  3 [100.0%]  (fallthru)
(code_label 20 18 21 4 16 "" [0 uses])

(note 21 20 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 32 21 42 4 arch/arm/kernel/smp_twd.c:87 (use (reg/i:SI 0 r0)) -1 (nil))

(jump_insn 42 32 41 4 arch/arm/kernel/smp_twd.c:87 (return) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 41 42 38)

(note 38 41 39 NOTE_INSN_DELETED)

(note 39 38 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function twd_cpufreq_transition (twd_cpufreq_transition)[0:692]

deferring rescan insn with uid = 25.
starting the processing of deferred insns
verify found no changes in insn with uid = 25.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 8 (  1.6)

**scanning insn=45
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=18
mems_found = 0, cannot_delete = true

**scanning insn=21
  mem: (reg/v/f:SI 2 r2 [orig:136 data ] [136])

   after canon_rtx address: (reg/v/f:SI 2 r2 [orig:136 data ] [136])
expanding: r2 into: NULL

   after cselib_expand address: (reg/v/f:SI 2 r2 [orig:136 data ] [136])

   after canon_rtx address: (reg/v/f:SI 2 r2 [orig:136 data ] [136])
  varying cselib base=1 offset = 0
 processing cselib load mem:(mem/s/j:SI (reg/v/f:SI 2 r2 [orig:136 data ] [136]) [0 <variable>.cpu+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=24
mems_found = 0, cannot_delete = true

**scanning insn=25
  mem: (symbol_ref:SI ("smp_call_function_single") [flags 0x41] <function_decl 0x10cc8e80 smp_call_function_single>)

   after canon_rtx address: (symbol_ref:SI ("smp_call_function_single") [flags 0x41] <function_decl 0x10cc8e80 smp_call_function_single>)
  gid=0 offset=0 
 processing const load gid=0[0..4)

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=38
mems_found = 0, cannot_delete = false

**scanning insn=48
mems_found = 0, cannot_delete = false
group 0(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


twd_cpufreq_transition

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,3u} r2={3d,2u} r3={3d,1u} r4={1d,2u} r12={1d} r13={2d,6u} r14={2d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={2d,1u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 151{131d,20u,0e} in 11{10 regular + 1 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 1 [r1] 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 13 [sp] 24 [cc]
;; live  in  	 1 [r1] 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 6 1 45 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 45 6 46 2 arch/arm/kernel/smp_twd.c:102 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                (set/f (reg/f:SI 13 sp)
                    (plus:SI (reg/f:SI 13 sp)
                        (const_int -8 [0xfffffffffffffff8])))
                (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                    (reg:SI 4 r4))
                (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                            (const_int 4 [0x4])) [0 S4 A32])
                    (reg:SI 14 lr))
            ])
        (nil)))

(note 46 45 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 46 5 2 NOTE_INSN_DELETED)

(note 5 3 8 2 NOTE_INSN_FUNCTION_BEG)

(note 8 5 9 2 NOTE_INSN_DELETED)

(note 9 8 11 2 NOTE_INSN_DELETED)

(note 11 9 12 2 NOTE_INSN_DELETED)

(note 12 11 14 2 NOTE_INSN_DELETED)

(note 14 12 15 2 NOTE_INSN_DELETED)

(note 15 14 16 2 NOTE_INSN_DELETED)

(note 16 15 17 2 NOTE_INSN_DELETED)

(insn 17 16 18 2 arch/arm/kernel/smp_twd.c:110 (set (reg:CC_DEQ 24 cc)
        (compare:CC_DEQ (ior:SI (eq:SI (reg:SI 1 r1 [ state ])
                    (const_int 8 [0x8]))
                (eq:SI (reg:SI 1 r1 [ state ])
                    (const_int 1 [0x1])))
            (const_int 0 [0x0]))) 285 {*cmp_ior} (expr_list:REG_DEAD (reg:SI 1 r1 [ state ])
        (nil)))

(jump_insn 18 17 19 2 arch/arm/kernel/smp_twd.c:110 (set (pc)
        (if_then_else (eq (reg:CC_DEQ 24 cc)
                (const_int 0 [0x0]))
            (label_ref 26)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC_DEQ 24 cc)
        (expr_list:REG_BR_PROB (const_int 6102 [0x17d6])
            (nil))))
;; End of basic block 2 -> ( 3 4)
;; lr  out 	 2 [r2] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 2 [r2] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  3 [39.0%]  (fallthru)
;; Succ edge  4 [61.0%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 2 [r2] 4 [r4] 13 [sp]
;; lr  use 	 2 [r2] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 2 [r2] 4 [r4] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3]
;; live  kill	 14 [lr]

;; Pred edge  2 [39.0%]  (fallthru)
(note 19 18 21 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 21 19 23 3 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 0 r0)
        (mem/s/j:SI (reg/v/f:SI 2 r2 [orig:136 data ] [136]) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 2 r2 [orig:136 data ] [136])
        (nil)))

(insn 23 21 22 3 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 2 r2)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 22 23 24 3 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 1 r1)
        (symbol_ref:SI ("twd_update_frequency") [flags 0x3] <function_decl 0x10fa8000 twd_update_frequency>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("twd_update_frequency") [flags 0x3] <function_decl 0x10fa8000 twd_update_frequency>)
        (nil)))

(insn 24 22 25 3 arch/arm/kernel/smp_twd.c:111 (set (reg:SI 3 r3)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(call_insn 25 24 26 3 arch/arm/kernel/smp_twd.c:111 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("smp_call_function_single") [flags 0x41] <function_decl 0x10cc8e80 smp_call_function_single>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_UNUSED (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))
;; End of basic block 3 -> ( 4)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  4 [100.0%]  (fallthru)

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [61.0%] 
;; Pred edge  3 [100.0%]  (fallthru)
(code_label 26 25 27 4 21 "" [1 uses])

(note 27 26 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 32 27 38 4 arch/arm/kernel/smp_twd.c:115 (set (reg/i:SI 0 r0)
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))

(insn 38 32 47 4 arch/arm/kernel/smp_twd.c:115 (use (reg/i:SI 0 r0)) -1 (nil))

(note 47 38 48 4 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 48 47 49 4 arch/arm/kernel/smp_twd.c:115 (return) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 4 [r4] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 49 48 43)

(note 43 49 44 NOTE_INSN_DELETED)

(note 44 43 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function twd_update_frequency (twd_update_frequency)[0:691]

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)

**scanning insn=36
mems_found = 0, cannot_delete = true

**scanning insn=6
mems_found = 0, cannot_delete = true

**scanning insn=7
  mem: (plus:SI (reg/f:SI 4 r4 [137])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 4 r4 [137])
    (const_int 8 [0x8]))
expanding: r4 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))
  gid=0 offset=8 
 processing const load gid=0[8..12)
mems_found = 0, cannot_delete = true

**scanning insn=8
  mem: (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>)

   after canon_rtx address: (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=32
mems_found = 0, cannot_delete = true

**scanning insn=11
  mem: (plus:SI (reg/f:SI 4 r4 [137])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 4 r4 [137])
    (const_int 4 [0x4]))
expanding: r4 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=0 offset=4 
 processing const base store gid=0[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=18
  mem: (plus:SI (reg:SI 2 r2 [141])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg:SI 2 r2 [141])
    (const_int 20 [0x14]))
expanding: r2 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg:SI 2 r2 [141])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg:SI 2 r2 [141])
    (const_int 20 [0x14]))
  varying cselib base=-541 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg:SI 2 r2 [141])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
 processing cselib load against insn 11
mems_found = 0, cannot_delete = true

**scanning insn=13
mems_found = 0, cannot_delete = true

**scanning insn=33
mems_found = 0, cannot_delete = true

**scanning insn=19
  mem: (plus:SI (mult:SI (reg:SI 0 r0 [orig:143 <variable>.cpu ] [143])
        (const_int 4 [0x4]))
    (reg/f:SI 2 r2 [140]))

   after canon_rtx address: (plus:SI (mult:SI (reg:SI 0 r0 [orig:143 <variable>.cpu ] [143])
        (const_int 4 [0x4]))
    (reg/f:SI 2 r2 [140]))
expanding: r0 into: NULL
expanding: r2 into: (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)

   after cselib_expand address: (plus:SI (ashift:SI (reg:SI 0 r0 [orig:143 <variable>.cpu ] [143])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>))

   after canon_rtx address: (plus:SI (ashift:SI (reg:SI 0 r0 [orig:143 <variable>.cpu ] [143])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>))
  varying cselib base=-355768808 offset = 0
 processing cselib load mem:(mem/s/j:SI (plus:SI (mult:SI (reg:SI 0 r0 [orig:143 <variable>.cpu ] [143])
            (const_int 4 [0x4]))
        (reg/f:SI 2 r2 [140])) [0 __per_cpu_offset S4 A32])
 processing cselib load against insn 11
mems_found = 0, cannot_delete = true

**scanning insn=20
  mem: (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
    (reg:SI 2 r2 [144]))

   after canon_rtx address: (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
    (reg:SI 2 r2 [144]))
expanding: r3 into: (asm_operands:SI ("") ("=r") 0 [
        (value:SI)
    ]
     [
        (asm_input:SI ("0") 0)
    ] 5255831)
expanding value SI into: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (asm_operands:SI ("") ("=r") 0 [
            (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        ]
         [
            (asm_input:SI ("0") 0)
        ] 5255831)
    (reg:SI 2 r2 [144]))

   after canon_rtx address: (plus:SI (asm_operands:SI ("") ("=r") 0 [
            (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        ]
         [
            (asm_input:SI ("0") 0)
        ] 5255831)
    (reg:SI 2 r2 [144]))
  varying cselib base=1023786081 offset = 0
 processing cselib load mem:(mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
        (reg:SI 2 r2 [144])) [0 S4 A32])
 processing cselib load against insn 11
removing from active insn=11 has store
mems_found = 0, cannot_delete = true

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (symbol_ref:SI ("clockevents_update_freq") [flags 0x41] <function_decl 0x10f21900 clockevents_update_freq>)

   after canon_rtx address: (symbol_ref:SI ("clockevents_update_freq") [flags 0x41] <function_decl 0x10f21900 clockevents_update_freq>)
  gid=2 offset=0 
 processing const load gid=2[0..4)
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


twd_update_frequency

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 13[sp] 14[lr]
;;  ref usage 	r0={6d,4u} r1={4d,2u} r2={7d,4u} r3={6d,3u} r4={2d,4u} r12={2d} r13={2d,6u} r14={2d,3u} r15={2d} r16={2d} r17={2d} r18={2d} r19={2d} r20={2d} r21={2d} r22={2d} r23={2d} r24={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r81={2d} r82={2d} r83={2d} r84={2d} r85={2d} r86={2d} r87={2d} r88={2d} r89={2d} r90={2d} r91={2d} r92={2d} r93={2d} r94={2d} r95={2d} r96={2d} r97={2d} r98={2d} r99={2d} r100={2d} r101={2d} r102={2d} r103={2d} r104={2d} r105={2d} r106={2d} r107={2d} r108={2d} r109={2d} r110={2d} r111={2d} r112={2d} r113={2d} r114={2d} r115={2d} r116={2d} r117={2d} r118={2d} r119={2d} r120={2d} r121={2d} r122={2d} r123={2d} r124={2d} r125={2d} r126={2d} r127={2d} 
;;    total ref usage 279{253d,26u,0e} in 17{15 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 13 [sp] 14 [lr]
;; lr  use 	 4 [r4] 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 12 [ip] 13 [sp] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 13 [sp]
;; live  kill	 14 [lr]

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 36 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 36 4 37 2 arch/arm/kernel/smp_twd.c:94 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 4 r4)
            (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                        (set/f (reg/f:SI 13 sp)
                            (plus:SI (reg/f:SI 13 sp)
                                (const_int -8 [0xfffffffffffffff8])))
                        (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                            (reg:SI 4 r4))
                        (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                    (const_int 4 [0x4])) [0 S4 A32])
                            (reg:SI 14 lr))
                    ])
                (nil)))))

(note 37 36 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 37 16 2 NOTE_INSN_FUNCTION_BEG)

(note 16 3 6 2 NOTE_INSN_DELETED)

(insn 6 16 7 2 arch/arm/kernel/smp_twd.c:95 (set (reg/f:SI 4 r4 [137])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 7 6 8 2 arch/arm/kernel/smp_twd.c:95 (set (reg:SI 0 r0)
        (mem/f/c/i:SI (plus:SI (reg/f:SI 4 r4 [137])
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(call_insn 8 7 9 2 arch/arm/kernel/smp_twd.c:95 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 9 8 35 2 arch/arm/kernel/smp_twd.c:95 (set (reg:SI 1 r1 [orig:135 twd_timer_rate.208 ] [135])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 35 9 31 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 31 35 32 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 2 r2 [141])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 32 31 11 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 2 r2 [141])
        (and:SI (reg:SI 2 r2 [141])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 11 32 12 2 arch/arm/kernel/smp_twd.c:95 (set (mem/c/i:SI (plus:SI (reg/f:SI 4 r4 [137])
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 1 r1 [orig:135 twd_timer_rate.208 ] [135])) 167 {*arm_movsi_insn} (nil))

(insn 12 11 18 2 arch/arm/kernel/smp_twd.c:97 (set (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 18 12 13 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 0 r0 [orig:143 <variable>.cpu ] [143])
        (mem/s/j:SI (plus:SI (reg:SI 2 r2 [141])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 2 r2 [141])
        (nil)))

(insn 13 18 33 2 arch/arm/kernel/smp_twd.c:97 (set (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 5255831)) -1 (nil))

(insn 33 13 19 2 arch/arm/kernel/smp_twd.c:97 (set (reg/f:SI 2 r2 [140])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)
        (nil)))

(insn 19 33 20 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 2 r2 [144])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 0 r0 [orig:143 <variable>.cpu ] [143])
                    (const_int 4 [0x4]))
                (reg/f:SI 2 r2 [140])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [orig:143 <variable>.cpu ] [143])
        (nil)))

(insn 20 19 38 2 arch/arm/kernel/smp_twd.c:97 (set (reg:SI 0 r0)
        (mem/f:SI (plus:SI (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
                (reg:SI 2 r2 [144])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v:SI 3 r3 [orig:134 __ptr ] [134])
        (expr_list:REG_DEAD (reg:SI 2 r2 [144])
            (nil))))

(note 38 20 39 2 NOTE_INSN_EPILOGUE_BEG)

(insn 39 38 22 2 arch/arm/kernel/smp_twd.c:98 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (nil)))

(call_insn/j 22 39 23 2 arch/arm/kernel/smp_twd.c:97 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clockevents_update_freq") [flags 0x41] <function_decl 0x10f21900 clockevents_update_freq>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 2 -> ( 1)
;; lr  out 	 4 [r4] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 13 [sp]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 23 22 34)

(note 34 23 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function twd_cpufreq_init (twd_cpufreq_init)[0:693]

deferring rescan insn with uid = 24.
starting the processing of deferred insns
verify found no changes in insn with uid = 24.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 9 (  1.5)
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 10 (  1.7)

**scanning insn=5
mems_found = 0, cannot_delete = true

**scanning insn=6
  mem: (plus:SI (reg/f:SI 3 r3 [136])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [136])
    (const_int 8 [0x8]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))
  gid=0 offset=8 
 processing const load gid=0[8..12)
mems_found = 0, cannot_delete = true

**scanning insn=7
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=10
mems_found = 0, cannot_delete = true

**scanning insn=11
mems_found = 0, cannot_delete = true

**scanning insn=28
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = false

**scanning insn=41
mems_found = 0, cannot_delete = false

**scanning insn=22
mems_found = 0, cannot_delete = true

**scanning insn=23
mems_found = 0, cannot_delete = true

**scanning insn=44
mems_found = 0, cannot_delete = true

**scanning insn=24
  mem: (symbol_ref:SI ("cpufreq_register_notifier") [flags 0x41] <function_decl 0x10e9fe00 cpufreq_register_notifier>)

   after canon_rtx address: (symbol_ref:SI ("cpufreq_register_notifier") [flags 0x41] <function_decl 0x10e9fe00 cpufreq_register_notifier>)
  gid=1 offset=0 
 processing const load gid=1[0..4)
group 0(0+0): n  p 
group 1(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


twd_cpufreq_init

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 13 [sp] 14 [lr]
;;  exit block uses 	 0 [r0] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 3[r3] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={4d,3u} r1={3d,1u} r2={2d} r3={4d,3u} r12={1d} r13={1d,6u} r14={1d,2u} r15={1d} r16={1d} r17={1d} r18={1d} r19={1d} r20={1d} r21={1d} r22={1d} r23={1d} r24={3d,2u} r27={1d} r28={1d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={1d} r38={1d} r39={1d} r40={1d} r41={1d} r42={1d} r43={1d} r44={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r81={1d} r82={1d} r83={1d} r84={1d} r85={1d} r86={1d} r87={1d} r88={1d} r89={1d} r90={1d} r91={1d} r92={1d} r93={1d} r94={1d} r95={1d} r96={1d} r97={1d} r98={1d} r99={1d} r100={1d} r101={1d} r102={1d} r103={1d} r104={1d} r105={1d} r106={1d} r107={1d} r108={1d} r109={1d} r110={1d} r111={1d} r112={1d} r113={1d} r114={1d} r115={1d} r116={1d} r117={1d} r118={1d} r119={1d} r120={1d} r121={1d} r122={1d} r123={1d} r124={1d} r125={1d} r126={1d} r127={1d} 
;;    total ref usage 146{129d,17u,0e} in 13{12 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 3 1 39 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 39 3 2 2 NOTE_INSN_PROLOGUE_END)

(note 2 39 5 2 NOTE_INSN_FUNCTION_BEG)

(insn 5 2 6 2 arch/arm/kernel/smp_twd.c:123 (set (reg/f:SI 3 r3 [136])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 6 5 7 2 arch/arm/kernel/smp_twd.c:123 (set (reg/f:SI 3 r3 [orig:134 twd_clk.210 ] [134])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [136])
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 twd_clk+0 S4 A32])
        (nil)))

(insn 7 6 8 2 include/linux/err.h:39 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:134 twd_clk.210 ] [134])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 8 7 9 2 include/linux/err.h:39 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 2 -> ( 4 3)
;; lr  out 	 3 [r3] 13 [sp] 14 [lr]
;; live  out 	 3 [r3] 13 [sp] 14 [lr]


;; Succ edge  4 [15.0%] 
;; Succ edge  3 [85.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 3 [r3] 13 [sp] 14 [lr]
;; lr  use 	 3 [r3] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 3 [r3] 13 [sp] 14 [lr]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  2 [85.0%]  (fallthru)
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 3 include/linux/err.h:39 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 3 r3 [orig:134 twd_clk.210 ] [134])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:134 twd_clk.210 ] [134])
        (nil)))

(jump_insn 11 10 12 3 include/linux/err.h:39 discrim 2 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 19)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 13 [sp] 14 [lr]
;; live  out 	 13 [sp] 14 [lr]


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 2 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0]
;; live  kill	

;; Pred edge  2 [15.0%] 
;; Pred edge  3 [0.0%]  (fallthru)
(code_label 12 11 13 4 30 "" [1 uses])

(note 13 12 28 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 28 13 34 4 arch/arm/kernel/smp_twd.c:128 (set (reg/i:SI 0 r0)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (const_int 0 [0x0])
        (nil)))

(insn 34 28 40 4 arch/arm/kernel/smp_twd.c:128 (use (reg/i:SI 0 r0)) -1 (nil))

(note 40 34 41 4 NOTE_INSN_EPILOGUE_BEG)

(jump_insn 41 40 42 4 arch/arm/kernel/smp_twd.c:128 (return) -1 (nil))
;; End of basic block 4 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%] 

(barrier 42 41 19)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 13 [sp] 14 [lr]
;; lr  use 	 13 [sp] 14 [lr]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 13 [sp] 14 [lr]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	

;; Pred edge  3 [100.0%] 
(code_label 19 42 20 5 31 "" [1 uses])

(note 20 19 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 20 23 5 arch/arm/kernel/smp_twd.c:124 (set (reg:SI 0 r0)
        (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR2") [flags 0x182])
        (nil)))

(insn 23 22 43 5 arch/arm/kernel/smp_twd.c:124 (set (reg:SI 1 r1)
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(note 43 23 44 5 NOTE_INSN_EPILOGUE_BEG)

(insn 44 43 24 5 arch/arm/kernel/smp_twd.c:128 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 24 44 25 5 arch/arm/kernel/smp_twd.c:124 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("cpufreq_register_notifier") [flags 0x41] <function_decl 0x10e9fe00 cpufreq_register_notifier>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (return)
            (use (const_int 0 [0x0]))
        ]) 259 {*sibcall_value_insn} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))
;; End of basic block 5 -> ( 1)
;; lr  out 	 0 [r0] 13 [sp] 14 [lr]
;; live  out 	 0 [r0] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 25 24 38)

(note 38 25 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns

;; Function twd_timer_setup (twd_timer_setup)[0:696] (unlikely executed)

deferring rescan insn with uid = 14.
deferring rescan insn with uid = 22.
deferring rescan insn with uid = 28.
deferring rescan insn with uid = 36.
deferring rescan insn with uid = 38.
deferring rescan insn with uid = 62.
deferring rescan insn with uid = 63.
deferring rescan insn with uid = 71.
deferring rescan insn with uid = 74.
deferring rescan insn with uid = 105.
deferring rescan insn with uid = 108.
deferring rescan insn with uid = 135.
deferring rescan insn with uid = 139.
deferring rescan insn with uid = 143.
deferring rescan insn with uid = 148.
deferring rescan insn with uid = 180.
deferring rescan insn with uid = 182.
deferring rescan insn with uid = 187.
starting the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 63.
verify found no changes in insn with uid = 71.
verify found no changes in insn with uid = 74.
verify found no changes in insn with uid = 105.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 139.
verify found no changes in insn with uid = 143.
verify found no changes in insn with uid = 148.
verify found no changes in insn with uid = 180.
verify found no changes in insn with uid = 182.
verify found no changes in insn with uid = 187.
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 35 count 49 (    2)
df_worklist_dataflow_doublequeue:n_basic_blocks 24 n_edges 35 count 48 (    2)

**scanning insn=255
mems_found = 0, cannot_delete = true

**scanning insn=2
mems_found = 0, cannot_delete = true

**scanning insn=241
mems_found = 0, cannot_delete = true

**scanning insn=7
  mem: (plus:SI (reg/f:SI 3 r3 [151])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [151])
    (const_int 8 [0x8]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))
  gid=0 offset=8 
 processing const load gid=0[8..12)
mems_found = 0, cannot_delete = true

**scanning insn=8
mems_found = 0, cannot_delete = true

**scanning insn=9
mems_found = 0, cannot_delete = true

**scanning insn=12
mems_found = 0, cannot_delete = true

**scanning insn=14
  mem: (symbol_ref:SI ("clk_get_sys") [flags 0x41] <function_decl 0x10a60980 clk_get_sys>)

   after canon_rtx address: (symbol_ref:SI ("clk_get_sys") [flags 0x41] <function_decl 0x10a60980 clk_get_sys>)
  gid=1 offset=0 
 processing const load gid=1[0..4)

**scanning insn=15
mems_found = 0, cannot_delete = true

**scanning insn=16
mems_found = 0, cannot_delete = true

**scanning insn=17
mems_found = 0, cannot_delete = true

**scanning insn=21
mems_found = 0, cannot_delete = true

**scanning insn=20
mems_found = 0, cannot_delete = true

**scanning insn=22
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=218
mems_found = 0, cannot_delete = true

**scanning insn=28
  mem: (symbol_ref:SI ("clk_enable") [flags 0x41] <function_decl 0x10a60500 clk_enable>)

   after canon_rtx address: (symbol_ref:SI ("clk_enable") [flags 0x41] <function_decl 0x10a60500 clk_enable>)
  gid=3 offset=0 
 processing const load gid=3[0..4)

**scanning insn=30
mems_found = 0, cannot_delete = true

**scanning insn=31
mems_found = 0, cannot_delete = true

**scanning insn=35
mems_found = 0, cannot_delete = true

**scanning insn=34
mems_found = 0, cannot_delete = true

**scanning insn=36
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=37
mems_found = 0, cannot_delete = true

**scanning insn=38
  mem: (symbol_ref:SI ("clk_put") [flags 0x41] <function_decl 0x10a60680 clk_put>)

   after canon_rtx address: (symbol_ref:SI ("clk_put") [flags 0x41] <function_decl 0x10a60680 clk_put>)
  gid=4 offset=0 
 processing const load gid=4[0..4)

**scanning insn=39
mems_found = 0, cannot_delete = true

**scanning insn=42
mems_found = 0, cannot_delete = true

**scanning insn=43
  mem: (plus:SI (reg/f:SI 3 r3 [156])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [156])
    (const_int 8 [0x8]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))
  gid=0 offset=8 
 processing const base store gid=0[8..12)
mems_found = 1, cannot_delete = false

**scanning insn=46
mems_found = 0, cannot_delete = true

**scanning insn=47
  mem: (plus:SI (reg/f:SI 5 r5 [157])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 5 r5 [157])
    (const_int 8 [0x8]))
expanding: r5 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 8 [0x8])))
  gid=0 offset=8 
 processing const load gid=0[8..12)
mems_found = 0, cannot_delete = true

**scanning insn=48
mems_found = 0, cannot_delete = true

**scanning insn=49
mems_found = 0, cannot_delete = true

**scanning insn=51
mems_found = 0, cannot_delete = true

**scanning insn=52
mems_found = 0, cannot_delete = true

**scanning insn=55
mems_found = 0, cannot_delete = true

**scanning insn=56
  mem: (plus:SI (reg/f:SI 3 r3 [158])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [158])
    (const_int 4 [0x4]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=0 offset=4 
 processing const load gid=0[4..8)
mems_found = 0, cannot_delete = true

**scanning insn=57
mems_found = 0, cannot_delete = true

**scanning insn=58
mems_found = 0, cannot_delete = true

**scanning insn=61
mems_found = 0, cannot_delete = true

**scanning insn=251
mems_found = 0, cannot_delete = true

**scanning insn=252
mems_found = 0, cannot_delete = true

**scanning insn=62
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=63
  mem: (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>)

   after canon_rtx address: (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>)
  gid=5 offset=0 
 processing const load gid=5[0..4)

**scanning insn=253
mems_found = 0, cannot_delete = true

**scanning insn=254
mems_found = 0, cannot_delete = true

**scanning insn=220
mems_found = 0, cannot_delete = true

**scanning insn=71
  mem: (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>)

   after canon_rtx address: (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>)
  gid=6 offset=0 
 processing const load gid=6[0..4)

**scanning insn=74
  mem: (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>)

   after canon_rtx address: (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>)
  gid=5 offset=0 
 processing const load gid=5[0..4)

**scanning insn=212
mems_found = 0, cannot_delete = true

**scanning insn=217
mems_found = 0, cannot_delete = true

**scanning insn=77
mems_found = 0, cannot_delete = true

**scanning insn=78
mems_found = 0, cannot_delete = true

**scanning insn=80
mems_found = 0, cannot_delete = true

**scanning insn=81
mems_found = 0, cannot_delete = true

**scanning insn=82
mems_found = 0, cannot_delete = true

**scanning insn=91
mems_found = 0, cannot_delete = true

**scanning insn=247
mems_found = 0, cannot_delete = true

**scanning insn=248
mems_found = 0, cannot_delete = true

**scanning insn=249
mems_found = 0, cannot_delete = true

**scanning insn=250
mems_found = 0, cannot_delete = true

**scanning insn=92
  mem: (reg/f:SI 3 r3 [163])

   after canon_rtx address: (reg/f:SI 3 r3 [163])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=240
mems_found = 0, cannot_delete = true

**scanning insn=95
  mem: (plus:SI (reg/f:SI 2 r2 [orig:164 twd_base ] [164])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 2 r2 [orig:164 twd_base ] [164])
    (const_int 8 [0x8]))
expanding: r2 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 2 r2 [orig:164 twd_base ] [164])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 2 r2 [orig:164 twd_base ] [164])
    (const_int 8 [0x8]))
  varying cselib base=3 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = true

**scanning insn=97
  mem: (reg/f:SI 3 r3 [163])

   after canon_rtx address: (reg/f:SI 3 r3 [163])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=0 offset=0 
 processing const load gid=0[0..4)
removing from active insn=95 has store
mems_found = 0, cannot_delete = true

**scanning insn=239
mems_found = 0, cannot_delete = true

**scanning insn=100
  mem: (plus:SI (reg/f:SI 3 r3 [orig:167 twd_base ] [167])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:167 twd_base ] [167])
    (const_int 4 [0x4]))
expanding: r3 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:167 twd_base ] [167])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:167 twd_base ] [167])
    (const_int 4 [0x4]))
  varying cselib base=4 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = true

**scanning insn=222
mems_found = 0, cannot_delete = true

**scanning insn=105
  mem: (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>)

   after canon_rtx address: (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>)
  gid=6 offset=0 
 processing const load gid=6[0..4)

**scanning insn=108
  mem: (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>)

   after canon_rtx address: (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>)
  gid=5 offset=0 
 processing const load gid=5[0..4)

**scanning insn=214
mems_found = 0, cannot_delete = true

**scanning insn=216
mems_found = 0, cannot_delete = true

**scanning insn=111
mems_found = 0, cannot_delete = true

**scanning insn=112
mems_found = 0, cannot_delete = true

**scanning insn=114
mems_found = 0, cannot_delete = true

**scanning insn=115
mems_found = 0, cannot_delete = true

**scanning insn=116
mems_found = 0, cannot_delete = true

**scanning insn=123
mems_found = 0, cannot_delete = true

**scanning insn=134
mems_found = 0, cannot_delete = true

**scanning insn=124
  mem: (reg/f:SI 3 r3 [169])

   after canon_rtx address: (reg/f:SI 3 r3 [169])
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=126
 adding wild read, volatile or barrier.
mems_found = 0, cannot_delete = true

**scanning insn=127
mems_found = 0, cannot_delete = true

**scanning insn=238
mems_found = 0, cannot_delete = true

**scanning insn=129
mems_found = 0, cannot_delete = true

**scanning insn=133
mems_found = 0, cannot_delete = true

**scanning insn=131
  mem: (plus:SI (reg/f:SI 3 r3 [169])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [169])
    (const_int 4 [0x4]))
expanding: r3 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=0 offset=4 
 processing const base store gid=0[4..8)
mems_found = 1, cannot_delete = false

**scanning insn=135
  mem: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])
  gid=7 offset=0 
 processing const load gid=7[0..4)
const call 135

**scanning insn=136
mems_found = 0, cannot_delete = true

**scanning insn=137
mems_found = 0, cannot_delete = true

**scanning insn=138
mems_found = 0, cannot_delete = true

**scanning insn=139
  mem: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41])
  gid=7 offset=0 
 processing const load gid=7[0..4)
const call 139

**scanning insn=142
mems_found = 0, cannot_delete = true

**scanning insn=143
  mem: (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41])

   after canon_rtx address: (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41])
  gid=8 offset=0 
 processing const load gid=8[0..4)
const call 143

**scanning insn=144
mems_found = 0, cannot_delete = true

**scanning insn=146
mems_found = 0, cannot_delete = true

**scanning insn=145
mems_found = 0, cannot_delete = true

**scanning insn=148
  mem: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)

   after canon_rtx address: (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>)
  gid=2 offset=0 
 processing const load gid=2[0..4)

**scanning insn=151
mems_found = 0, cannot_delete = true

**scanning insn=243
mems_found = 0, cannot_delete = true

**scanning insn=227
mems_found = 0, cannot_delete = true

**scanning insn=228
mems_found = 0, cannot_delete = true

**scanning insn=152
  mem: (reg/f:SI 12 ip [189])

   after canon_rtx address: (reg/f:SI 12 ip [189])
expanding: r12 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after canon_rtx address: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
  gid=0 offset=0 
 processing const load gid=0[0..4)
mems_found = 0, cannot_delete = true

**scanning insn=176
mems_found = 0, cannot_delete = true

**scanning insn=178
mems_found = 0, cannot_delete = true

**scanning insn=237
mems_found = 0, cannot_delete = true

**scanning insn=155
  mem: (plus:SI (reg/f:SI 3 r3 [orig:190 twd_base ] [190])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:190 twd_base ] [190])
    (const_int 8 [0x8]))
expanding: r3 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 3 r3 [orig:190 twd_base ] [190])
    (const_int 8 [0x8]))

   after canon_rtx address: (plus:SI (reg/f:SI 3 r3 [orig:190 twd_base ] [190])
    (const_int 8 [0x8]))
  varying cselib base=3 offset = 8
 processing cselib store [8..12)
mems_found = 1, cannot_delete = true

**scanning insn=179
mems_found = 0, cannot_delete = true

**scanning insn=172
  mem: (plus:SI (reg:SI 1 r1 [199])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg:SI 1 r1 [199])
    (const_int 20 [0x14]))
expanding: r1 into: (and:SI (value:SI)
    (const_int -64 [0xffffffffffffffc0]))
expanding value SI into: (and:SI (value:SI)
    (const_int -8129 [0xffffffffffffe03f]))
NULL
NULL

   after cselib_expand address: (plus:SI (reg:SI 1 r1 [199])
    (const_int 20 [0x14]))

   after canon_rtx address: (plus:SI (reg:SI 1 r1 [199])
    (const_int 20 [0x14]))
  varying cselib base=-542 offset = 20
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg:SI 1 r1 [199])
        (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])
 processing cselib load against insn 155
removing from active insn=155 has store
mems_found = 0, cannot_delete = true

**scanning insn=236
mems_found = 0, cannot_delete = true

**scanning insn=157
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 68 [0x44]))
expanding: r4 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 0 r0)
    (const_int 68 [0x44]))

   after canon_rtx address: (plus:SI (reg:SI 0 r0)
    (const_int 68 [0x44]))
  varying cselib base=2 offset = 68
 processing cselib store [68..72)
mems_found = 1, cannot_delete = false

**scanning insn=235
mems_found = 0, cannot_delete = true

**scanning insn=159
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 44 [0x2c]))
expanding: r4 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 0 r0)
    (const_int 44 [0x2c]))

   after canon_rtx address: (plus:SI (reg:SI 0 r0)
    (const_int 44 [0x2c]))
  varying cselib base=2 offset = 44
 processing cselib store [44..48)
    trying store in insn=157 gid=-1[68..72)
mems_found = 1, cannot_delete = false

**scanning insn=234
mems_found = 0, cannot_delete = true

**scanning insn=161
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 72 [0x48]))
expanding: r4 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 0 r0)
    (const_int 72 [0x48]))

   after canon_rtx address: (plus:SI (reg:SI 0 r0)
    (const_int 72 [0x48]))
  varying cselib base=2 offset = 72
 processing cselib store [72..76)
    trying store in insn=159 gid=-1[44..48)
    trying store in insn=157 gid=-1[68..72)
mems_found = 1, cannot_delete = false

**scanning insn=233
mems_found = 0, cannot_delete = true

**scanning insn=163
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 56 [0x38]))
expanding: r4 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 0 r0)
    (const_int 56 [0x38]))

   after canon_rtx address: (plus:SI (reg:SI 0 r0)
    (const_int 56 [0x38]))
  varying cselib base=2 offset = 56
 processing cselib store [56..60)
    trying store in insn=161 gid=-1[72..76)
    trying store in insn=159 gid=-1[44..48)
    trying store in insn=157 gid=-1[68..72)
mems_found = 1, cannot_delete = false

**scanning insn=232
mems_found = 0, cannot_delete = true

**scanning insn=165
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 4 [0x4]))
expanding: r4 into: r0
expanding: r0 into: NULL

   after cselib_expand address: (plus:SI (reg:SI 0 r0)
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg:SI 0 r0)
    (const_int 4 [0x4]))
  varying cselib base=2 offset = 4
 processing cselib store [4..8)
    trying store in insn=163 gid=-1[56..60)
    trying store in insn=161 gid=-1[72..76)
    trying store in insn=159 gid=-1[44..48)
    trying store in insn=157 gid=-1[68..72)
mems_found = 1, cannot_delete = false

**scanning insn=231
mems_found = 0, cannot_delete = true

**scanning insn=173
  mem: (plus:SI (mult:SI (reg:SI 14 lr [orig:201 <variable>.cpu ] [201])
        (const_int 4 [0x4]))
    (reg/f:SI 1 r1 [198]))

   after canon_rtx address: (plus:SI (mult:SI (reg:SI 14 lr [orig:201 <variable>.cpu ] [201])
        (const_int 4 [0x4]))
    (reg/f:SI 1 r1 [198]))
expanding: r14 into: NULL
expanding: r1 into: (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)

   after cselib_expand address: (plus:SI (ashift:SI (reg:SI 14 lr [orig:201 <variable>.cpu ] [201])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>))

   after canon_rtx address: (plus:SI (ashift:SI (reg:SI 14 lr [orig:201 <variable>.cpu ] [201])
        (const_int 2 [0x2]))
    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>))
  varying cselib base=-355768807 offset = 0
 processing cselib load mem:(mem/s/j:SI (plus:SI (mult:SI (reg:SI 14 lr [orig:201 <variable>.cpu ] [201])
            (const_int 4 [0x4]))
        (reg/f:SI 1 r1 [198])) [0 __per_cpu_offset S4 A32])
 processing cselib load against insn 165
removing from active insn=165 has store
 processing cselib load against insn 163
removing from active insn=163 has store
 processing cselib load against insn 161
removing from active insn=161 has store
 processing cselib load against insn 159
removing from active insn=159 has store
 processing cselib load against insn 157
removing from active insn=157 has store
mems_found = 0, cannot_delete = true

**scanning insn=166
mems_found = 0, cannot_delete = true

**scanning insn=167
mems_found = 0, cannot_delete = true

**scanning insn=174
  mem: (plus:SI (reg/v:SI 1 r1 [orig:147 __ptr ] [147])
    (reg:SI 14 lr [202]))

   after canon_rtx address: (plus:SI (reg/v:SI 1 r1 [orig:147 __ptr ] [147])
    (reg:SI 14 lr [202]))
expanding: r1 into: (asm_operands:SI ("") ("=r") 0 [
        (value:SI)
    ]
     [
        (asm_input:SI ("0") 0)
    ] 5270655)
expanding value SI into: (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
expanding: r14 into: NULL

   after cselib_expand address: (plus:SI (asm_operands:SI ("") ("=r") 0 [
            (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        ]
         [
            (asm_input:SI ("0") 0)
        ] 5270655)
    (reg:SI 14 lr [202]))

   after canon_rtx address: (plus:SI (asm_operands:SI ("") ("=r") 0 [
            (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        ]
         [
            (asm_input:SI ("0") 0)
        ] 5270655)
    (reg:SI 14 lr [202]))
  varying cselib base=1023800906 offset = 0
 processing cselib store [0..4)
mems_found = 1, cannot_delete = false

**scanning insn=177
  mem: (plus:SI (reg/f:SI 12 ip [189])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 12 ip [189])
    (const_int 4 [0x4]))
expanding: r12 into: (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])

   after cselib_expand address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))

   after canon_rtx address: (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (const_int 4 [0x4])))
  gid=0 offset=4 
 processing const load gid=0[4..8)
removing from active insn=174 has store
mems_found = 0, cannot_delete = true

**scanning insn=180
  mem: (symbol_ref:SI ("clockevents_config_and_register") [flags 0x41] <function_decl 0x10f21880 clockevents_config_and_register>)

   after canon_rtx address: (symbol_ref:SI ("clockevents_config_and_register") [flags 0x41] <function_decl 0x10f21880 clockevents_config_and_register>)
  gid=9 offset=0 
 processing const load gid=9[0..4)

**scanning insn=181
  mem: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 76 [0x4c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 76 [0x4c]))
expanding: r4 into: NULL

   after cselib_expand address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 76 [0x4c]))

   after canon_rtx address: (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
    (const_int 76 [0x4c]))
  varying cselib base=2 offset = 76
 processing cselib load mem:(mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
        (const_int 76 [0x4c])) [0 <variable>.irq+0 S4 A32])
mems_found = 0, cannot_delete = true

**scanning insn=258
mems_found = 0, cannot_delete = true

**scanning insn=182
  mem: (symbol_ref:SI ("gic_enable_ppi") [flags 0x41] <function_decl 0x10f97c80 gic_enable_ppi>)

   after canon_rtx address: (symbol_ref:SI ("gic_enable_ppi") [flags 0x41] <function_decl 0x10f97c80 gic_enable_ppi>)
  gid=10 offset=0 
 processing const load gid=10[0..4)

**scanning insn=187
  mem: (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>)

   after canon_rtx address: (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>)
  gid=11 offset=0 
 processing const load gid=11[0..4)

**scanning insn=190
  mem: (plus:SI (reg/f:SI 5 r5 [157])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 5 r5 [157])
    (const_int 4 [0x4]))
expanding: r5 into: NULL

   after cselib_expand address: (plus:SI (reg/f:SI 5 r5 [157])
    (const_int 4 [0x4]))

   after canon_rtx address: (plus:SI (reg/f:SI 5 r5 [157])
    (const_int 4 [0x4]))
  varying cselib base=1 offset = 4
 processing cselib store [4..8)
mems_found = 1, cannot_delete = false

**scanning insn=224
mems_found = 0, cannot_delete = true
group 0(0+0): n  p 
group 1(0+0): n  p 
group 2(0+0): n  p 
group 3(0+0): n  p 
group 4(0+0): n  p 
group 5(0+0): n  p 
group 6(0+0): n  p 
group 7(0+0): n  p 
group 8(0+0): n  p 
group 9(0+0): n  p 
group 10(0+0): n  p 
group 11(0+0): n  p 
dse: local deletions = 0, global deletions = 0, spill deletions = 0


twd_timer_setup

Dataflow summary:
;;  invalidated by call 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;;  hardware regs used 	 13 [sp]
;;  regular block artificial uses 	 13 [sp]
;;  eh block artificial uses 	 13 [sp] 26 [afp]
;;  entry block defs 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  exit block uses 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;;  regs ever live 	 0[r0] 1[r1] 2[r2] 3[r3] 4[r4] 5[r5] 6[r6] 7[r7] 8[r8] 9[r9] 10[sl] 12[ip] 13[sp] 14[lr] 24[cc]
;;  ref usage 	r0={32d,27u} r1={38d,24u} r2={25d,6u} r3={31d,14u,2d} r4={2d,10u} r5={5d,9u} r6={7d,15u,2d} r7={3d,5u} r8={3d,6u} r9={3d,4u} r10={1d,2u} r12={19d,2u,1d} r13={2d,43u} r14={21d,6u,1d} r15={18d} r16={18d} r17={18d} r18={18d} r19={18d} r20={18d} r21={18d} r22={18d} r23={18d} r24={30d,14u} r27={18d} r28={18d} r29={18d} r30={18d} r31={18d} r32={18d} r33={18d} r34={18d} r35={18d} r36={18d} r37={18d} r38={18d} r39={18d} r40={18d} r41={18d} r42={18d} r43={18d} r44={18d} r45={18d} r46={18d} r47={18d} r48={18d} r49={18d} r50={18d} r51={18d} r52={18d} r53={18d} r54={18d} r55={18d} r56={18d} r57={18d} r58={18d} r59={18d} r60={18d} r61={18d} r62={18d} r63={18d} r64={18d} r65={18d} r66={18d} r67={18d} r68={18d} r69={18d} r70={18d} r71={18d} r72={18d} r73={18d} r74={18d} r75={18d} r76={18d} r77={18d} r78={18d} r79={18d} r80={18d} r81={18d} r82={18d} r83={18d} r84={18d} r85={18d} r86={18d} r87={18d} r88={18d} r89={18d} r90={18d} r91={18d} r92={18d} r93={18d} r94={18d} r95={18d} r96={18d} r97={18d} r98={18d} r99={18d} r100={18d} r101={18d} r102={18d} r103={18d} r104={18d} r105={18d} r106={18d} r107={18d} r108={18d} r109={18d} r110={18d} r111={18d} r112={18d} r113={18d} r114={18d} r115={18d} r116={18d} r117={18d} r118={18d} r119={18d} r120={18d} r121={18d} r122={18d} r123={18d} r124={18d} r125={18d} r126={18d} r127={18d} 
;;    total ref usage 2395{2202d,187u,6e} in 128{110 regular + 18 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  use 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; lr  def 	 1 [r1] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  gen 	 1 [r1] 3 [r3] 4 [r4] 13 [sp] 24 [cc]
;; live  kill	

;; Pred edge  ENTRY [100.0%]  (fallthru)
(note 4 1 255 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn/f 255 4 256 2 arch/arm/kernel/smp_twd.c:195 (parallel [
            (set (mem/c:BLK (pre_dec:BLK (reg/f:SI 13 sp)) [0 A8])
                (unspec:BLK [
                        (reg:SI 4 r4)
                    ] 2))
            (use (reg:SI 5 r5))
            (use (reg:SI 6 r6))
            (use (reg:SI 7 r7))
            (use (reg:SI 8 r8))
            (use (reg:SI 9 r9))
            (use (reg:SI 10 sl))
            (use (reg:SI 14 lr))
        ]) -1 (expr_list:REG_DEAD (reg:SI 14 lr)
        (expr_list:REG_DEAD (reg:SI 5 r5)
            (expr_list:REG_DEAD (reg:SI 4 r4)
                (expr_list:REG_FRAME_RELATED_EXPR (sequence [
                            (set/f (reg/f:SI 13 sp)
                                (plus:SI (reg/f:SI 13 sp)
                                    (const_int -32 [0xffffffffffffffe0])))
                            (set/f (mem/c:SI (reg/f:SI 13 sp) [0 S4 A32])
                                (reg:SI 4 r4))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 4 [0x4])) [0 S4 A32])
                                (reg:SI 5 r5))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 8 [0x8])) [0 S4 A32])
                                (reg:SI 6 r6))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 12 [0xc])) [0 S4 A32])
                                (reg:SI 7 r7))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 16 [0x10])) [0 S4 A32])
                                (reg:SI 8 r8))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 20 [0x14])) [0 S4 A32])
                                (reg:SI 9 r9))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 24 [0x18])) [0 S4 A32])
                                (reg:SI 10 sl))
                            (set/f (mem/c:SI (plus:SI (reg/f:SI 13 sp)
                                        (const_int 28 [0x1c])) [0 S4 A32])
                                (reg:SI 14 lr))
                        ])
                    (nil))))))

(note 256 255 3 2 NOTE_INSN_PROLOGUE_END)

(note 3 256 2 2 NOTE_INSN_FUNCTION_BEG)

(insn 2 3 241 2 arch/arm/kernel/smp_twd.c:195 (set (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
        (reg:SI 0 r0 [ clk ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0 [ clk ])
        (nil)))

(insn 241 2 7 2 arch/arm/kernel/smp_twd.c:196 (set (reg/f:SI 3 r3 [151])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 7 241 8 2 arch/arm/kernel/smp_twd.c:196 (set (reg/f:SI 1 r1 [orig:152 twd_clk ] [152])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [151])
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [151])
        (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 8 [0x8]))) [0 twd_clk+0 S4 A32])
            (nil))))

(insn 8 7 9 2 arch/arm/kernel/smp_twd.c:196 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 1 r1 [orig:152 twd_clk ] [152])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 9 8 10 2 arch/arm/kernel/smp_twd.c:196 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 44)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9328 [0x2470])
            (nil))))
;; End of basic block 2 -> ( 3 8)
;; lr  out 	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  3 [6.7%]  (fallthru)
;; Succ edge  8 [93.3%] 

;; Start of basic block ( 2) -> 3
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(13){ }}
;; lr  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 1 [r1] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 1 [r1] 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  2 [6.7%]  (fallthru)
(note 10 9 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 12 10 14 3 arch/arm/kernel/smp_twd.c:175 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fc9390>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC0") [flags 0x82] <string_cst 0x10fc9390>)
        (nil)))

(call_insn 14 12 15 3 arch/arm/kernel/smp_twd.c:175 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_sys") [flags 0x41] <function_decl 0x10a60980 clk_get_sys>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 15 14 16 3 arch/arm/kernel/smp_twd.c:175 (set (reg/v/f:SI 5 r5 [orig:145 clk ] [145])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (nil))

(insn 16 15 17 3 include/linux/err.h:34 (set (reg:CC 24 cc)
        (compare:CC (reg/v/f:SI 5 r5 [orig:145 clk ] [145])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 17 16 18 3 include/linux/err.h:34 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 3 -> ( 4 5)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  4 [0.0%]  (fallthru)
;; Succ edge  5 [100.0%] 

;; Start of basic block ( 3) -> 4
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1]
;; live  kill	 14 [lr]

;; Pred edge  3 [0.0%]  (fallthru)
(note 18 17 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 21 18 20 4 arch/arm/kernel/smp_twd.c:177 (set (reg:SI 1 r1)
        (reg/v/f:SI 5 r5 [orig:145 clk ] [145])) 167 {*arm_movsi_insn} (nil))

(insn 20 21 22 4 arch/arm/kernel/smp_twd.c:177 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10fe42c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC1") [flags 0x82] <string_cst 0x10fe42c0>)
        (nil)))

(call_insn 22 20 218 4 arch/arm/kernel/smp_twd.c:177 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(jump_insn 218 22 219 4 (set (pc)
        (label_ref 40)) 242 {*arm_jump} (nil))
;; End of basic block 4 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  7 [100.0%] 

(barrier 219 218 25)

;; Start of basic block ( 3) -> 5
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 6 [r6] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  3 [100.0%] 
(code_label 25 219 26 5 37 "" [1 uses])

(note 26 25 29 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(note 29 26 28 5 NOTE_INSN_DELETED)

(call_insn 28 29 30 5 arch/arm/kernel/smp_twd.c:181 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_enable") [flags 0x41] <function_decl 0x10a60500 clk_enable>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 30 28 31 5 arch/arm/kernel/smp_twd.c:182 (parallel [
            (set (reg:CC 24 cc)
                (compare:CC (reg:SI 0 r0)
                    (const_int 0 [0x0])))
            (set (reg/v:SI 6 r6 [orig:146 err ] [146])
                (reg:SI 0 r0))
        ]) 174 {*movsi_compare0} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 31 30 32 5 arch/arm/kernel/smp_twd.c:182 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 40)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 5 -> ( 6 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  6 [0.0%]  (fallthru)
;; Succ edge  7 [100.0%] 

;; Start of basic block ( 5) -> 6
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 5 [r5] 6 [r6] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 5 [r5]
;; live  kill	 14 [lr]

;; Pred edge  5 [0.0%]  (fallthru)
(note 32 31 35 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 35 32 34 6 arch/arm/kernel/smp_twd.c:183 (set (reg:SI 1 r1)
        (reg/v:SI 6 r6 [orig:146 err ] [146])) 167 {*arm_movsi_insn} (nil))

(insn 34 35 36 6 arch/arm/kernel/smp_twd.c:183 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10fb2e10>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC2") [flags 0x82] <string_cst 0x10fb2e10>)
        (nil)))

(call_insn 36 34 37 6 arch/arm/kernel/smp_twd.c:183 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_UNUSED (reg:SI 0 r0)
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 37 36 38 6 arch/arm/kernel/smp_twd.c:184 (set (reg:SI 0 r0)
        (reg/v/f:SI 5 r5 [orig:145 clk ] [145])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 5 r5 [orig:145 clk ] [145])
        (nil)))

(call_insn 38 37 39 6 arch/arm/kernel/smp_twd.c:184 (parallel [
            (call (mem:SI (symbol_ref:SI ("clk_put") [flags 0x41] <function_decl 0x10a60680 clk_put>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 39 38 40 6 arch/arm/kernel/smp_twd.c:185 (set (reg/v/f:SI 5 r5 [orig:145 clk ] [145])
        (reg/v:SI 6 r6 [orig:146 err ] [146])) 167 {*arm_movsi_insn} (nil))
;; End of basic block 6 -> ( 7)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  7 [100.0%]  (fallthru)

;; Start of basic block ( 6 5 4) -> 7
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 5 [r5] 13 [sp]
;; lr  def 	 3 [r3]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3]
;; live  kill	

;; Pred edge  6 [100.0%]  (fallthru)
;; Pred edge  5 [100.0%] 
;; Pred edge  4 [100.0%] 
(code_label 40 39 41 7 38 "" [2 uses])

(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 7 arch/arm/kernel/smp_twd.c:197 (set (reg/f:SI 3 r3 [156])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 43 42 44 7 arch/arm/kernel/smp_twd.c:197 (set (mem/f/c/i:SI (plus:SI (reg/f:SI 3 r3 [156])
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])
        (reg/v/f:SI 5 r5 [orig:145 clk ] [145])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/v/f:SI 5 r5 [orig:145 clk ] [145])
        (expr_list:REG_DEAD (reg/f:SI 3 r3 [156])
            (nil))))
;; End of basic block 7 -> ( 8)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  8 [100.0%]  (fallthru)

;; Start of basic block ( 2 7) -> 8
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 5 [r5] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 5 [r5] 24 [cc]
;; live  kill	

;; Pred edge  2 [93.3%] 
;; Pred edge  7 [100.0%]  (fallthru)
(code_label 44 43 45 8 36 "" [1 uses])

(note 45 44 46 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 46 45 47 8 arch/arm/kernel/smp_twd.c:199 (set (reg/f:SI 5 r5 [157])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 47 46 48 8 arch/arm/kernel/smp_twd.c:199 (set (reg/f:SI 0 r0 [orig:135 twd_clk.403 ] [135])
        (mem/f/c/i:SI (plus:SI (reg/f:SI 5 r5 [157])
                (const_int 8 [0x8])) [0 twd_clk+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 8 [0x8]))) [0 twd_clk+0 S4 A32])
        (nil)))

(insn 48 47 49 8 include/linux/err.h:39 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:135 twd_clk.403 ] [135])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 49 48 50 8 include/linux/err.h:39 (set (pc)
        (if_then_else (eq (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 1500 [0x5dc])
            (nil))))
;; End of basic block 8 -> ( 10 9)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  10 [15.0%] 
;; Succ edge  9 [85.0%]  (fallthru)

;; Start of basic block ( 8) -> 9
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  8 [85.0%]  (fallthru)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 51 50 52 9 include/linux/err.h:39 discrim 2 (set (reg:CC 24 cc)
        (compare:CC (reg/f:SI 0 r0 [orig:135 twd_clk.403 ] [135])
            (const_int -4096 [0xfffffffffffff000]))) 219 {*arm_cmpsi_insn} (nil))

(jump_insn 52 51 53 9 include/linux/err.h:39 discrim 2 (set (pc)
        (if_then_else (leu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 184)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 9 -> ( 10 23)
;; lr  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  10 [0.0%]  (fallthru)
;; Succ edge  23 [100.0%] 

;; Start of basic block ( 8 9) -> 10
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 3 [r3] 24 [cc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 3 [r3] 24 [cc]
;; live  kill	

;; Pred edge  8 [15.0%] 
;; Pred edge  9 [0.0%]  (fallthru)
(code_label 53 52 54 10 39 "" [1 uses])

(note 54 53 55 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 10 arch/arm/kernel/smp_twd.c:140 (set (reg/f:SI 3 r3 [158])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 56 55 57 10 arch/arm/kernel/smp_twd.c:140 (set (reg:SI 3 r3 [orig:159 twd_timer_rate ] [159])
        (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [158])
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                    (const_int 4 [0x4]))) [0 twd_timer_rate+0 S4 A32])
        (nil)))

(insn 57 56 58 10 arch/arm/kernel/smp_twd.c:140 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 3 r3 [orig:159 twd_timer_rate ] [159])
            (const_int 0 [0x0]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:159 twd_timer_rate ] [159])
        (nil)))

(jump_insn 58 57 59 10 arch/arm/kernel/smp_twd.c:140 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 149)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
            (nil))))
;; End of basic block 10 -> ( 11 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  11 [0.0%]  (fallthru)
;; Succ edge  22 [100.0%] 

;; Start of basic block ( 10) -> 11
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 6 [r6] 7 [r7] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 6 [r6] 7 [r7] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  10 [0.0%]  (fallthru)
(note 59 58 64 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(note 64 59 61 11 NOTE_INSN_DELETED)

(insn 61 64 251 11 arch/arm/kernel/smp_twd.c:141 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10fcab40>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC3") [flags 0x82] <string_cst 0x10fcab40>)
        (nil)))

(insn 251 61 252 11 arch/arm/kernel/smp_twd.c:144 (set (reg:SI 6 r6 [orig:144 waitjiffies ] [144])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (nil))

(insn 252 251 62 11 arch/arm/kernel/smp_twd.c:144 (set (reg:SI 7 r7 [ waitjiffies+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(call_insn 62 252 63 11 arch/arm/kernel/smp_twd.c:141 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(call_insn 63 62 253 11 arch/arm/kernel/smp_twd.c:144 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 253 63 254 11 arch/arm/kernel/smp_twd.c:144 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 6 r6 [orig:144 waitjiffies ] [144])
                        (reg:SI 0 r0))
                    (reg:SI 6 r6 [orig:144 waitjiffies ] [144])))
            (set (reg:SI 6 r6 [orig:144 waitjiffies ] [144])
                (plus:SI (reg:SI 6 r6 [orig:144 waitjiffies ] [144])
                    (reg:SI 0 r0)))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 254 253 220 11 arch/arm/kernel/smp_twd.c:144 (set (reg:SI 7 r7 [ waitjiffies+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 7 r7 [ waitjiffies+4 ])
                (reg:SI 1 r1 [+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
            (nil))))

(jump_insn 220 254 221 11 (set (pc)
        (label_ref 72)) 242 {*arm_jump} (nil))
;; End of basic block 11 -> ( 13)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  13 [100.0%] 

(barrier 221 220 76)

;; Start of basic block ( 13 15) -> 12
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  13 [50.0%] 
;; Pred edge  15 [50.0%] 
(code_label 76 221 69 12 43 "" [2 uses])

(note 69 76 71 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(call_insn 71 69 72 12 arch/arm/kernel/smp_twd.c:147 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 12 -> ( 13)
;; lr  out 	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  13 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 12 11) -> 13
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 7 [r7] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  12 [100.0%]  (fallthru,dfs_back)
;; Pred edge  11 [100.0%] 
(code_label 72 71 73 13 42 "" [1 uses])

(note 73 72 213 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(note 213 73 74 13 NOTE_INSN_DELETED)

(call_insn 74 213 212 13 arch/arm/kernel/smp_twd.c:146 discrim 1 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 212 74 217 13 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:SI 3 r3 [orig:205 D.14353 ] [205])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 217 212 77 13 arch/arm/kernel/smp_twd.c:147 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 77 217 78 13 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 7 r7 [ waitjiffies+4 ])
            (reg:SI 1 r1 [+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn 78 77 198 13 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 13 -> ( 12 14)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 24 [cc]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 24 [cc]


;; Succ edge  12 [50.0%] 
;; Succ edge  14 [50.0%]  (fallthru)

;; Start of basic block ( 13) -> 14
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  13 [50.0%]  (fallthru)
(note 198 78 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(jump_insn 80 198 199 14 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 210)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 14 -> ( 16 15)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  16 [71.0%]  (loop_exit)
;; Succ edge  15 [29.0%]  (fallthru)

;; Start of basic block ( 14) -> 15
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 6 [r6] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  14 [29.0%]  (fallthru)
(note 199 80 81 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 81 199 82 15 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 6 r6 [orig:144 waitjiffies ] [144])
            (reg:SI 3 r3 [orig:205 D.14353 ] [205]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:205 D.14353 ] [205])
        (nil)))

(jump_insn 82 81 210 15 arch/arm/kernel/smp_twd.c:146 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 76)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 15 -> ( 12 16)
;; lr  out 	 0 [r0] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]


;; Succ edge  12 [50.0%] 
;; Succ edge  16 [50.0%]  (fallthru,loop_exit)

;; Start of basic block ( 15 14) -> 16
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; lr  use 	 6 [r6] 7 [r7] 13 [sp]
;; lr  def 	 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  in  	 4 [r4] 6 [r6] 7 [r7] 10 [sl] 13 [sp]
;; live  gen 	 1 [r1] 2 [r2] 3 [r3] 8 [r8] 9 [r9] 24 [cc]
;; live  kill	

;; Pred edge  15 [50.0%]  (fallthru,loop_exit)
;; Pred edge  14 [71.0%]  (loop_exit)
(code_label 210 82 88 16 49 "" [1 uses])

(note 88 210 91 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 91 88 247 16 arch/arm/kernel/smp_twd.c:153 (set (reg/f:SI 3 r3 [163])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 247 91 248 16 arch/arm/kernel/smp_twd.c:150 (set (reg:SI 8 r8 [orig:134 waitjiffies.404 ] [134])
        (const_int 5 [0x5])) 167 {*arm_movsi_insn} (nil))

(insn 248 247 249 16 arch/arm/kernel/smp_twd.c:150 (set (reg:SI 9 r9 [ waitjiffies.404+4 ])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (nil))

(insn 249 248 250 16 arch/arm/kernel/smp_twd.c:150 (parallel [
            (set (reg:CC_C 24 cc)
                (compare:CC_C (plus:SI (reg:SI 8 r8 [orig:134 waitjiffies.404 ] [134])
                        (reg:SI 6 r6 [orig:144 waitjiffies ] [144]))
                    (reg:SI 8 r8 [orig:134 waitjiffies.404 ] [134])))
            (set (reg:SI 8 r8 [orig:134 waitjiffies.404 ] [134])
                (plus:SI (reg:SI 8 r8 [orig:134 waitjiffies.404 ] [134])
                    (reg:SI 6 r6 [orig:144 waitjiffies ] [144])))
        ]) 10 {*addsi3_compare_op1} (expr_list:REG_DEAD (reg:SI 6 r6 [orig:144 waitjiffies ] [144])
        (nil)))

(insn 250 249 92 16 arch/arm/kernel/smp_twd.c:150 (set (reg:SI 9 r9 [ waitjiffies.404+4 ])
        (plus:SI (ltu:SI (reg:CC_C 24 cc)
                (const_int 0 [0x0]))
            (plus:SI (reg:SI 9 r9 [ waitjiffies.404+4 ])
                (reg:SI 7 r7 [ waitjiffies+4 ])))) 14 {*addsi3_carryin} (expr_list:REG_DEAD (reg:CC_C 24 cc)
        (nil)))

(insn 92 250 240 16 arch/arm/kernel/smp_twd.c:153 (set (reg/f:SI 2 r2 [orig:164 twd_base ] [164])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [163]) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 3 r3 [163]) [0 twd_base+0 S4 A32])
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 twd_base+0 S4 A32])
            (nil))))

(insn 240 92 95 16 arch/arm/kernel/smp_twd.c:153 (set (reg:SI 1 r1 [165])
        (const_int 1 [0x1])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 1 [0x1])
        (nil)))

(insn 95 240 97 16 arch/arm/kernel/smp_twd.c:153 (set (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:164 twd_base ] [164])
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 1 r1 [165])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:164 twd_base ] [164])
        (expr_list:REG_DEAD (reg:SI 1 r1 [165])
            (expr_list:REG_EQUAL (const_int 1 [0x1])
                (nil)))))

(insn 97 95 239 16 arch/arm/kernel/smp_twd.c:156 (set (reg/f:SI 3 r3 [orig:167 twd_base ] [167])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [163]) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 twd_base+0 S4 A32])
        (nil)))

(insn 239 97 100 16 arch/arm/kernel/smp_twd.c:156 (set (reg:SI 2 r2 [168])
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int -1 [0xffffffffffffffff])
        (nil)))

(insn 100 239 222 16 arch/arm/kernel/smp_twd.c:156 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:167 twd_base ] [167])
                (const_int 4 [0x4])) [0 S4 A32])
        (reg:SI 2 r2 [168])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:167 twd_base ] [167])
        (expr_list:REG_DEAD (reg:SI 2 r2 [168])
            (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
                (nil)))))

(jump_insn 222 100 223 16 (set (pc)
        (label_ref 106)) 242 {*arm_jump} (nil))
;; End of basic block 16 -> ( 18)
;; lr  out 	 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  18 [100.0%] 

(barrier 223 222 110)

;; Start of basic block ( 18 20) -> 17
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	
;; live  kill	 14 [lr]

;; Pred edge  18 [50.0%] 
;; Pred edge  20 [50.0%] 
(code_label 110 223 103 17 46 "" [2 uses])

(note 103 110 105 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(call_insn 105 103 106 17 arch/arm/kernel/smp_twd.c:159 (parallel [
            (call (mem:SI (symbol_ref:SI ("__udelay") [flags 0x41] <function_decl 0x10eb2d80 __udelay>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 17 -> ( 18)
;; lr  out 	 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  18 [100.0%]  (fallthru,dfs_back)

;; Start of basic block ( 17 16) -> 18
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 9 [r9] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 3 [r3] 24 [cc]
;; live  kill	 14 [lr]

;; Pred edge  17 [100.0%]  (fallthru,dfs_back)
;; Pred edge  16 [100.0%] 
(code_label 106 105 107 18 45 "" [1 uses])

(note 107 106 215 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(note 215 107 108 18 NOTE_INSN_DELETED)

(call_insn 108 215 214 18 arch/arm/kernel/smp_twd.c:158 discrim 1 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("get_jiffies_64") [flags 0x41] <function_decl 0x10d1c400 get_jiffies_64>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (nil))

(insn 214 108 216 18 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:SI 3 r3 [orig:207 D.14348 ] [207])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(insn 216 214 111 18 arch/arm/kernel/smp_twd.c:159 (set (reg:SI 0 r0)
        (const_int 10 [0xa])) 167 {*arm_movsi_insn} (nil))

(insn 111 216 112 18 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 9 r9 [ waitjiffies.404+4 ])
            (reg:SI 1 r1 [+4 ]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(jump_insn 112 111 203 18 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil)))
;; End of basic block 18 -> ( 17 19)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 24 [cc]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 24 [cc]


;; Succ edge  17 [50.0%] 
;; Succ edge  19 [50.0%]  (fallthru)

;; Start of basic block ( 18) -> 19
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 24 [cc]
;; lr  use 	 13 [sp] 24 [cc]
;; lr  def 	
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 24 [cc]
;; live  gen 	
;; live  kill	

;; Pred edge  18 [50.0%]  (fallthru)
(note 203 112 114 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(jump_insn 114 203 204 19 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (ne (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref:SI 211)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
            (nil))))
;; End of basic block 19 -> ( 21 20)
;; lr  out 	 0 [r0] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  21 [71.0%]  (loop_exit)
;; Succ edge  20 [29.0%]  (fallthru)

;; Start of basic block ( 19) -> 20
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 3 [r3] 8 [r8] 13 [sp]
;; lr  def 	 24 [cc]
;; live  in  	 0 [r0] 3 [r3] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 24 [cc]
;; live  kill	

;; Pred edge  19 [29.0%]  (fallthru)
(note 204 114 115 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 115 204 116 20 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (reg:CC 24 cc)
        (compare:CC (reg:SI 8 r8 [orig:134 waitjiffies.404 ] [134])
            (reg:SI 3 r3 [orig:207 D.14348 ] [207]))) 219 {*arm_cmpsi_insn} (expr_list:REG_DEAD (reg:SI 3 r3 [orig:207 D.14348 ] [207])
        (nil)))

(jump_insn 116 115 211 20 arch/arm/kernel/smp_twd.c:158 discrim 1 (set (pc)
        (if_then_else (gtu (reg:CC 24 cc)
                (const_int 0 [0x0]))
            (label_ref 110)
            (pc))) 229 {*arm_cond_branch} (expr_list:REG_DEAD (reg:CC 24 cc)
        (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
            (nil))))
;; End of basic block 20 -> ( 17 21)
;; lr  out 	 0 [r0] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 0 [r0] 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  17 [50.0%] 
;; Succ edge  21 [50.0%]  (fallthru,loop_exit)

;; Start of basic block ( 20 19) -> 21
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 5 [r5] 6 [r6]
;; live  kill	 14 [lr]

;; Pred edge  20 [50.0%]  (fallthru,loop_exit)
;; Pred edge  19 [71.0%]  (loop_exit)
(code_label 211 116 122 21 50 "" [1 uses])

(note 122 211 123 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 123 122 134 21 arch/arm/kernel/smp_twd.c:161 (set (reg/f:SI 3 r3 [169])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 134 123 124 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 1000000 [0xf4240])) 167 {*arm_movsi_insn} (nil))

(insn 124 134 126 21 arch/arm/kernel/smp_twd.c:161 (set (reg/f:SI 2 r2 [orig:170 twd_base ] [170])
        (mem/f/c/i:SI (reg/f:SI 3 r3 [169]) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 3 r3 [169]) [0 twd_base+0 S4 A32])
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 twd_base+0 S4 A32])
            (nil))))

(insn 126 124 127 21 arch/arm/kernel/smp_twd.c:161 (set (reg/v:SI 6 r6 [orig:143 count ] [143])
        (mem/v:SI (plus:SI (reg/f:SI 2 r2 [orig:170 twd_base ] [170])
                (const_int 4 [0x4])) [0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 2 r2 [orig:170 twd_base ] [170])
        (nil)))

(insn 127 126 238 21 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 6 r6 [171])
        (not:SI (reg/v:SI 6 r6 [orig:143 count ] [143]))) 134 {*arm_one_cmplsi2} (nil))

(insn 238 127 129 21 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 2 r2 [172])
        (const_int 20 [0x14])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 20 [0x14])
        (nil)))

(insn 129 238 133 21 arch/arm/kernel/smp_twd.c:163 (set (reg:SI 6 r6 [orig:142 twd_timer_rate.214 ] [142])
        (mult:SI (reg:SI 2 r2 [172])
            (reg:SI 6 r6 [171]))) 32 {*arm_mulsi3_v6} (expr_list:REG_DEAD (reg:SI 2 r2 [172])
        (expr_list:REG_EQUAL (mult:SI (reg:SI 6 r6 [171])
                (const_int 20 [0x14]))
            (nil))))

(insn 133 129 131 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 6 r6 [orig:142 twd_timer_rate.214 ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 131 133 135 21 arch/arm/kernel/smp_twd.c:163 (set (mem/c/i:SI (plus:SI (reg/f:SI 3 r3 [169])
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 6 r6 [orig:142 twd_timer_rate.214 ] [142])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 3 r3 [169])
        (nil)))

(call_insn/u 135 131 136 21 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 136 135 137 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 5 r5 [178])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (expr_list:REG_EQUAL (udiv:SI (reg:SI 6 r6 [orig:142 twd_timer_rate.214 ] [142])
                (const_int 1000000 [0xf4240]))
            (nil))))

(insn 137 136 138 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (reg:SI 6 r6 [orig:142 twd_timer_rate.214 ] [142])) 167 {*arm_movsi_insn} (nil))

(insn 138 137 139 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 10000 [0x2710])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 139 138 142 21 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidiv") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 1 r1)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 142 139 143 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (const_int 100 [0x64])) 167 {*arm_movsi_insn} (nil))

(call_insn/u 143 142 144 21 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:DI 0 r0)
                (call (mem:SI (symbol_ref:SI ("__aeabi_uidivmod") [flags 0x41]) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_UNUSED (reg:SI 0 r0)
        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
            (nil)))
    (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
        (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
            (nil))))

(insn 144 143 146 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 2 r2 [orig:188+4 ] [188])
        (reg:SI 1 r1 [+4 ])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [+4 ])
        (nil)))

(insn 146 144 145 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 1 r1)
        (reg:SI 5 r5 [178])) 167 {*arm_movsi_insn} (nil))

(insn 145 146 148 21 arch/arm/kernel/smp_twd.c:165 (set (reg:SI 0 r0)
        (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10ff0a80>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC4") [flags 0x82] <string_cst 0x10ff0a80>)
        (nil)))

(call_insn 148 145 149 21 arch/arm/kernel/smp_twd.c:165 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("printk") [flags 0x41] <function_decl 0x10a2e600 printk>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (expr_list:REG_DEAD (reg:SI 2 r2)
        (expr_list:REG_DEAD (reg:SI 1 r1)
            (expr_list:REG_UNUSED (reg:SI 0 r0)
                (nil))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
        (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
            (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                (nil)))))
;; End of basic block 21 -> ( 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  22 [100.0%]  (fallthru)

;; Start of basic block ( 21 10 23) -> 22
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(13){ }}
;; lr  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 4 [r4] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr]
;; live  kill	 14 [lr]

;; Pred edge  21 [100.0%]  (fallthru)
;; Pred edge  10 [100.0%] 
;; Pred edge  23 [100.0%] 
(code_label 149 148 150 22 41 "" [2 uses])

(note 150 149 170 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(note 170 150 151 22 NOTE_INSN_DELETED)

(insn 151 170 243 22 arch/arm/kernel/smp_twd.c:204 (set (reg/f:SI 12 ip [189])
        (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
        (nil)))

(insn 243 151 227 22 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 3 r3)
        (reg/f:SI 13 sp)) 167 {*arm_movsi_insn} (nil))

(insn 227 243 228 22 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 1 r1 [199])
        (and:SI (reg:SI 3 r3)
            (const_int -8129 [0xffffffffffffe03f]))) 67 {*arm_andsi3_insn} (expr_list:REG_DEAD (reg:SI 3 r3)
        (nil)))

(insn 228 227 152 22 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 1 r1 [199])
        (and:SI (reg:SI 1 r1 [199])
            (const_int -64 [0xffffffffffffffc0]))) 67 {*arm_andsi3_insn} (nil))

(insn 152 228 176 22 arch/arm/kernel/smp_twd.c:204 (set (reg/f:SI 3 r3 [orig:190 twd_base ] [190])
        (mem/f/c/i:SI (reg/f:SI 12 ip [189]) [0 twd_base+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (mem/f/c/i:SI (reg/f:SI 12 ip [189]) [0 twd_base+0 S4 A32])
        (expr_list:REG_EQUAL (mem/f/c/i:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182]) [0 twd_base+0 S4 A32])
            (nil))))

(insn 176 152 178 22 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 0 r0)
        (reg/v/f:SI 4 r4 [orig:150 clk ] [150])) 167 {*arm_movsi_insn} (nil))

(insn 178 176 237 22 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 2 r2)
        (const_int 15 [0xf])) 167 {*arm_movsi_insn} (nil))

(insn 237 178 155 22 arch/arm/kernel/smp_twd.c:204 (set (reg:SI 14 lr [191])
        (const_int 0 [0x0])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 0 [0x0])
        (nil)))

(insn 155 237 179 22 arch/arm/kernel/smp_twd.c:204 (set (mem/v:SI (plus:SI (reg/f:SI 3 r3 [orig:190 twd_base ] [190])
                (const_int 8 [0x8])) [0 S4 A32])
        (reg:SI 14 lr [191])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr [191])
        (expr_list:REG_DEAD (reg/f:SI 3 r3 [orig:190 twd_base ] [190])
            (expr_list:REG_EQUAL (const_int 0 [0x0])
                (nil)))))

(insn 179 155 172 22 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 3 r3)
        (const_int -1 [0xffffffffffffffff])) 167 {*arm_movsi_insn} (nil))

(insn 172 179 236 22 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 14 lr [orig:201 <variable>.cpu ] [201])
        (mem/s/j:SI (plus:SI (reg:SI 1 r1 [199])
                (const_int 20 [0x14])) [0 <variable>.cpu+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [199])
        (nil)))

(insn 236 172 157 22 arch/arm/kernel/smp_twd.c:206 (set (reg/f:SI 1 r1 [192])
        (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10ff00c0>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10ff00c0>)
        (nil)))

(insn 157 236 235 22 arch/arm/kernel/smp_twd.c:206 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
                (const_int 68 [0x44])) [0 <variable>.name+0 S4 A32])
        (reg/f:SI 1 r1 [192])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [192])
        (expr_list:REG_EQUAL (symbol_ref/v/f:SI ("*.LC5") [flags 0x82] <string_cst 0x10ff00c0>)
            (nil))))

(insn 235 157 159 22 arch/arm/kernel/smp_twd.c:207 (set (reg:SI 1 r1 [193])
        (const_int 7 [0x7])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 7 [0x7])
        (nil)))

(insn 159 235 234 22 arch/arm/kernel/smp_twd.c:207 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
                (const_int 44 [0x2c])) [0 <variable>.features+0 S4 A32])
        (reg:SI 1 r1 [193])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [193])
        (expr_list:REG_EQUAL (const_int 7 [0x7])
            (nil))))

(insn 234 159 161 22 arch/arm/kernel/smp_twd.c:209 (set (reg:SI 1 r1 [194])
        (const_int 350 [0x15e])) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (const_int 350 [0x15e])
        (nil)))

(insn 161 234 233 22 arch/arm/kernel/smp_twd.c:209 (set (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
                (const_int 72 [0x48])) [0 <variable>.rating+0 S4 A64])
        (reg:SI 1 r1 [194])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 1 r1 [194])
        (expr_list:REG_EQUAL (const_int 350 [0x15e])
            (nil))))

(insn 233 161 163 22 arch/arm/kernel/smp_twd.c:210 (set (reg/f:SI 1 r1 [195])
        (symbol_ref:SI ("twd_set_mode") [flags 0x3] <function_decl 0x10f97d00 twd_set_mode>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("twd_set_mode") [flags 0x3] <function_decl 0x10f97d00 twd_set_mode>)
        (nil)))

(insn 163 233 232 22 arch/arm/kernel/smp_twd.c:210 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
                (const_int 56 [0x38])) [0 <variable>.set_mode+0 S4 A64])
        (reg/f:SI 1 r1 [195])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [195])
        (expr_list:REG_EQUAL (symbol_ref:SI ("twd_set_mode") [flags 0x3] <function_decl 0x10f97d00 twd_set_mode>)
            (nil))))

(insn 232 163 165 22 arch/arm/kernel/smp_twd.c:211 (set (reg/f:SI 1 r1 [196])
        (symbol_ref:SI ("twd_set_next_event") [flags 0x3] <function_decl 0x10f97e00 twd_set_next_event>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("twd_set_next_event") [flags 0x3] <function_decl 0x10f97e00 twd_set_next_event>)
        (nil)))

(insn 165 232 231 22 arch/arm/kernel/smp_twd.c:211 (set (mem/s/f/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
                (const_int 4 [0x4])) [0 <variable>.set_next_event+0 S4 A32])
        (reg/f:SI 1 r1 [196])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [196])
        (expr_list:REG_EQUAL (symbol_ref:SI ("twd_set_next_event") [flags 0x3] <function_decl 0x10f97e00 twd_set_next_event>)
            (nil))))

(insn 231 165 173 22 arch/arm/kernel/smp_twd.c:213 (set (reg/f:SI 1 r1 [198])
        (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)) 167 {*arm_movsi_insn} (expr_list:REG_EQUIV (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)
        (nil)))

(insn 173 231 166 22 arch/arm/kernel/smp_twd.c:213 (set (reg:SI 14 lr [202])
        (mem/s/j:SI (plus:SI (mult:SI (reg:SI 14 lr [orig:201 <variable>.cpu ] [201])
                    (const_int 4 [0x4]))
                (reg/f:SI 1 r1 [198])) [0 __per_cpu_offset S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 1 r1 [198])
        (expr_list:REG_EQUAL (mem/s/j:SI (plus:SI (mult:SI (reg:SI 14 lr [orig:201 <variable>.cpu ] [201])
                        (const_int 4 [0x4]))
                    (symbol_ref:SI ("__per_cpu_offset") [flags 0xc0] <var_decl 0x10cd0ea0 __per_cpu_offset>)) [0 __per_cpu_offset S4 A32])
            (nil))))

(insn 166 173 167 22 arch/arm/kernel/smp_twd.c:213 (set (reg/v:SI 1 r1 [orig:147 __ptr ] [147])
        (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])) 167 {*arm_movsi_insn} (expr_list:REG_EQUAL (symbol_ref:SI ("*.LANCHOR1") [flags 0x182])
        (nil)))

(insn 167 166 174 22 arch/arm/kernel/smp_twd.c:213 (set (reg/v:SI 1 r1 [orig:147 __ptr ] [147])
        (asm_operands:SI ("") ("=r") 0 [
                (reg/v:SI 1 r1 [orig:147 __ptr ] [147])
            ]
             [
                (asm_input:SI ("0") 0)
            ] 5270655)) -1 (nil))

(insn 174 167 177 22 arch/arm/kernel/smp_twd.c:213 (set (mem/f:SI (plus:SI (reg/v:SI 1 r1 [orig:147 __ptr ] [147])
                (reg:SI 14 lr [202])) [0 S4 A32])
        (reg/v/f:SI 4 r4 [orig:150 clk ] [150])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 14 lr [202])
        (expr_list:REG_DEAD (reg/v:SI 1 r1 [orig:147 __ptr ] [147])
            (nil))))

(insn 177 174 180 22 arch/arm/kernel/smp_twd.c:215 (set (reg:SI 1 r1)
        (mem/c/i:SI (plus:SI (reg/f:SI 12 ip [189])
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg/f:SI 12 ip [189])
        (expr_list:REG_EQUAL (mem/c/i:SI (const:SI (plus:SI (symbol_ref:SI ("*.LANCHOR0") [flags 0x182])
                        (const_int 4 [0x4]))) [0 twd_timer_rate+0 S4 A32])
            (nil))))

(call_insn 180 177 181 22 arch/arm/kernel/smp_twd.c:215 (parallel [
            (call (mem:SI (symbol_ref:SI ("clockevents_config_and_register") [flags 0x41] <function_decl 0x10f21880 clockevents_config_and_register>) [0 S4 A32])
                (const_int 0 [0x0]))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 254 {*call_symbol} (expr_list:REG_DEAD (reg:SI 3 r3)
        (expr_list:REG_DEAD (reg:SI 2 r2)
            (expr_list:REG_DEAD (reg:SI 1 r1)
                (expr_list:REG_DEAD (reg:SI 0 r0)
                    (nil)))))
    (expr_list:REG_DEP_TRUE (use (reg:SI 3 r3))
        (expr_list:REG_DEP_TRUE (use (reg:SI 2 r2))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 r1))
                (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
                    (nil))))))

(insn 181 180 257 22 arch/arm/kernel/smp_twd.c:219 (set (reg:SI 0 r0)
        (mem/s/j:SI (plus:SI (reg/v/f:SI 4 r4 [orig:150 clk ] [150])
                (const_int 76 [0x4c])) [0 <variable>.irq+0 S4 A32])) 167 {*arm_movsi_insn} (nil))

(note 257 181 258 22 NOTE_INSN_EPILOGUE_BEG)

(insn 258 257 182 22 arch/arm/kernel/smp_twd.c:220 (parallel [
            (unspec:SI [
                    (reg:SI 14 lr)
                ] 6)
            (unspec_volatile [
                    (return)
                ] 1)
        ]) -1 (nil))

(call_insn/j 182 258 183 22 arch/arm/kernel/smp_twd.c:219 (parallel [
            (call (mem:SI (symbol_ref:SI ("gic_enable_ppi") [flags 0x41] <function_decl 0x10f97c80 gic_enable_ppi>) [0 S4 A32])
                (const_int 0 [0x0]))
            (return)
            (use (const_int 0 [0x0]))
        ]) 258 {*sibcall_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))
;; End of basic block 22 -> ( 1)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp] 14 [lr]


;; Succ edge  EXIT [100.0%]  (ab,sibcall)

(barrier 183 182 184)

;; Start of basic block ( 9) -> 23
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(13){ }}
;; lr  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; lr  use 	 0 [r0] 5 [r5] 13 [sp]
;; lr  def 	 0 [r0] 1 [r1] 2 [r2] 3 [r3] 12 [ip] 14 [lr] 15 [pc] 16 [f0] 17 [f1] 18 [f2] 19 [f3] 20 [f4] 21 [f5] 22 [f6] 23 [f7] 24 [cc] 27 [mv0] 28 [mv1] 29 [mv2] 30 [mv3] 31 [mv4] 32 [mv5] 33 [mv6] 34 [mv7] 35 [mv8] 36 [mv9] 37 [mv10] 38 [mv11] 39 [mv12] 40 [mv13] 41 [mv14] 42 [mv15] 43 [wcgr0] 44 [wcgr1] 45 [wcgr2] 46 [wcgr3] 47 [wr0] 48 [wr1] 49 [wr2] 50 [wr3] 51 [wr4] 52 [wr5] 53 [wr6] 54 [wr7] 55 [wr8] 56 [wr9] 57 [wr10] 58 [wr11] 59 [wr12] 60 [wr13] 61 [wr14] 62 [wr15] 63 [s0] 64 [s1] 65 [s2] 66 [s3] 67 [s4] 68 [s5] 69 [s6] 70 [s7] 71 [s8] 72 [s9] 73 [s10] 74 [s11] 75 [s12] 76 [s13] 77 [s14] 78 [s15] 79 [s16] 80 [s17] 81 [s18] 82 [s19] 83 [s20] 84 [s21] 85 [s22] 86 [s23] 87 [s24] 88 [s25] 89 [s26] 90 [s27] 91 [s28] 92 [s29] 93 [s30] 94 [s31] 95 [d16] 96 [?16] 97 [d17] 98 [?17] 99 [d18] 100 [?18] 101 [d19] 102 [?19] 103 [d20] 104 [?20] 105 [d21] 106 [?21] 107 [d22] 108 [?22] 109 [d23] 110 [?23] 111 [d24] 112 [?24] 113 [d25] 114 [?25] 115 [d26] 116 [?26] 117 [d27] 118 [?27] 119 [d28] 120 [?28] 121 [d29] 122 [?29] 123 [d30] 124 [?30] 125 [d31] 126 [?31] 127 [vfpcc]
;; live  in  	 0 [r0] 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  gen 	 0 [r0]
;; live  kill	 14 [lr]

;; Pred edge  9 [100.0%] 
(code_label 184 183 185 23 40 "" [1 uses])

(note 185 184 188 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(note 188 185 187 23 NOTE_INSN_DELETED)

(call_insn 187 188 190 23 arch/arm/kernel/smp_twd.c:200 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("clk_get_rate") [flags 0x41] <function_decl 0x10a60600 clk_get_rate>) [0 S4 A32])
                    (const_int 0 [0x0])))
            (use (const_int 0 [0x0]))
            (clobber (reg:SI 14 lr))
        ]) 255 {*call_value_symbol} (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 0 r0))
        (nil)))

(insn 190 187 224 23 arch/arm/kernel/smp_twd.c:200 (set (mem/c/i:SI (plus:SI (reg/f:SI 5 r5 [157])
                (const_int 4 [0x4])) [0 twd_timer_rate+0 S4 A32])
        (reg:SI 0 r0)) 167 {*arm_movsi_insn} (expr_list:REG_DEAD (reg:SI 0 r0)
        (nil)))

(jump_insn 224 190 225 23 (set (pc)
        (label_ref 149)) 242 {*arm_jump} (nil))
;; End of basic block 23 -> ( 22)
;; lr  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]
;; live  out 	 4 [r4] 5 [r5] 6 [r6] 7 [r7] 8 [r8] 9 [r9] 10 [sl] 13 [sp]


;; Succ edge  22 [100.0%] 

(barrier 225 224 242)

(note 242 225 0 NOTE_INSN_DELETED)

starting the processing of deferred insns
ending the processing of deferred insns
